{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2836872255","IsPullRequest":false,"CreatedAt":"2025-02-06T23:55:43","Actor":"LemuelKL","Number":"16320","RawContent":null,"Title":"[v4] Missing Base Styles on html and body Elements","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.1.0 with SvelteKit and Svelte 5\n\n**What version of Node.js are you using?**\n\nFor example: v22.9.0\n\n**What browser are you using?**\n\nFor example: Brave, Safari\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nThis code shows `text-orange-600` and `text-red-600` in the html and body tag respectively does not take effect.\n\nhttps://play.tailwindcss.com/kse6I0muoR\n\n**Describe your issue**\n\nI believe Tailwind classes does not work on the html or body tag despite the [documentation](https://tailwindcss.com/docs/adding-custom-styles#adding-base-styles) saying that is possible.\n\nI discovered this when I upgraded from v3.4.4 to v4.0.3. I was originally using a custom font and has `class=\"font-xxx\"` in the `body` tag of `app.html`. The font displayed correctly in v4 while in development hot-reload mode, but not when built. Using my browser's dev tool I saw in the built version that the final css class `.font-xxx` was no where to be found.\n\nAm I missing something stupidly simple? Perhaps the support for html and body tags were dropped in v4?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16320","RelatedDescription":"Open issue \"[v4] Missing Base Styles on html and body Elements\" (#16320)"},{"Id":"2836672971","IsPullRequest":false,"CreatedAt":"2025-02-06T21:39:13","Actor":"austinwilcox","Number":"16316","RawContent":null,"Title":"Version 4.0.4 - Breaks desktop first support","State":"open","Body":"Tailwind: 4.0.4\nBuild-tool: Vite 6.0.11\nNode: 23.5.0\nBrowser: Chrome/Brave\nOS: Windows and Linux\n\n**Describe your issue**\nWe are using an anti-pattern with our project. We have been building desktop first and this worked just fine with tailwind v3. When we upgraded to v4 all of our media breakpoints have changed. We have scoured the docs and didn't see any reference to this changing. Here is what we see with the v3 code, and here is what the v4 code is generating.\n\n## V3\nCode Snippet\n```html\n<div class=\"hidden w-full justify-center md:hidden sm:flex\">\n```\nResult in DOM\n\n![Image](https://github.com/user-attachments/assets/427de9f3-1e0c-4a1b-ac58-a6f9e76a5640)\n\n![Image](https://github.com/user-attachments/assets/0037f60f-ad36-49b8-bccc-70d40be00094)\n\n\n## V4\nCode Snippet\n```html\n<div className=\"hidden w-full justify-center md:hidden sm:flex\">\n```\nResult in DOM\n\n![Image](https://github.com/user-attachments/assets/612a668c-1b1c-425b-8650-39b1894c5460)\n\n![Image](https://github.com/user-attachments/assets/b3550384-a5ee-4872-b70f-f768963cb3f6)\n\n\nHere is relevant part of the tailwind.config.js. \n```javascript\n/** @type {import('tailwindcss').Config} */\nexport default {\n  darkMode: \"selector\",\n  content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\n  theme: {\n    screens: {\n      \"2xl\": { max: \"1536px\" },\n      xl: { max: \"1280px\" },\n      lg: { max: \"1024px\" },\n      md: { max: \"900px\" },\n      sm: { max: \"600px\" },\n    }\n  },\n  plugins: [],\n}\n\n```\n\nThis worked fine in v3 and hopefully we are just missing something small and this can be fixed without us having to downgrade back to v3.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16316","RelatedDescription":"Open issue \"Version 4.0.4 - Breaks desktop first support\" (#16316)"},{"Id":"2836491985","IsPullRequest":false,"CreatedAt":"2025-02-06T21:26:47","Actor":"MrPixel1","Number":"16314","RawContent":null,"Title":"[v4] Tailwind no longer correctly processed in .svelte files","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSvelte 5.19.8\nvite 6.1.0\n\n**What version of Node.js are you using?**\n\nDeno 2.0.2 (not node)\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nArch Linux\n\n**Describe your issue**\n\nIt seems like Tailwind no longer correctly processes CSS in `<style lang=\"postcss\">` tags in .svelte files, _unless_ I include `@reference \"tailwindcss/theme\";`.\n\nIf I don't include it, errors such as this one appear:\n\n```\n[plugin:vite:css] [postcss] Cannot apply unknown utility class: text-neutral-700\n```\n\nWhile I may have overseen a detail, it seems like adding the said code was **not** necessary in v3, that code - in *every* svelte file - seems overly redundant.\n\nTherefore, I came to the conclusion that this is a regression.\n\nIs there a known workaround, other than downgrading?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16314","RelatedDescription":"Closed issue \"[v4] Tailwind no longer correctly processed in .svelte files\" (#16314)"},{"Id":"2836340940","IsPullRequest":false,"CreatedAt":"2025-02-06T18:58:09","Actor":"Chadh13","Number":"16311","RawContent":null,"Title":"Tailwind 4.0.4 - Command failed with exit 1 - Heroku Deploys Rejected","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nRails - [tailwindcss-](https://github.com/rails/tailwindcss-rails) w/ https://github.com/flavorjones/tailwindcss-ruby underneath\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nStack track suggests that the server is targeting the `x86_64-linux-gnu` distribution\n\n**Reproduction URL**\n\nThis is a deploy issue so it's a bit hard to provide a repro URL. I've included a deploy stack trace below. I haven't figured out how to extend/patch into the rake deploy task yet within the heroku deploy process but will try to do so and provide the extended trace if I am able to.\n\nMy current hypothesis is that any app targeting Tailwind 4.0+ that is attempting to deploy to a heroku dyno is experiencing this.\n\n```\nremote: -----> Detecting rake tasks\nremote: -----> Preparing app for Rails asset pipeline\nremote: cp: warning: behavior of -n is non-portable and may change in future; use --update=none instead\nremote:        Running: rake assets:precompile\nremote:        I, [2025-02-06T18:32:25.438556 #1542]  INFO -- honeybadger: ** [Honeybadger] Reporting error id=29aba613-30a1-4e52-891f-9a3588871127 level=1 pid=1542\nremote:        rake aborted!\nremote:        Command failed with exit 1: /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-ruby-4.0.4-x86_64-linux-gnu/exe/x86_64-linux-gnu/tailwindcss\nremote:        /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-rails-4.0.0/lib/tasks/build.rake:7:in `system'\nremote:        /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-rails-4.0.0/lib/tasks/build.rake:7:in `block (2 levels) in <main>'\nremote:        Tasks: TOP => assets:precompile => tailwindcss:build\nremote:        (See full trace by running task with --trace)\nremote:        I, [2025-02-06T18:32:25.507438 #1542]  INFO -- honeybadger: ** [Honeybadger] Success ⚡ https://app.honeybadger.io/notice/29aba613-30a1-4e52-891f-9a3588871127 id=29aba613-30a1-4e52-891f-9a3588871127 code=201 level=1 pid=1542\nremote:\nremote:  !\nremote:  !     Precompiling assets failed.\nremote:  !\nremote:  !     Push rejected, failed to compile Ruby app.\nremote:\nremote:  !     Push failed\nremote:\nremote: Verifying deploy...\nremote:\nremote: !\tPush rejected to [app-name].\nremote:\nTo https://git.heroku.com/[app-name].git\n ! [remote rejected]     get-operations-outta-here-mister -> master (pre-receive hook declined)\nerror: failed to push some refs to 'https://git.heroku.com/[app-name].git'\n```\n\n**Describe your issue**\n\nAttempts to deploy version 4.X+ of Tailwind to Heroku servers fail due to\n`Command failed with exit 1: /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-ruby-4.0.4-x86_64-linux-gnu/exe/x86_64-linux-gnu/tailwindcss`\n\nWas following https://github.com/tailwindlabs/tailwindcss/issues/15181 and hoping that it was a related issue that would be resolved from the same changes. Unfortunately it's not.\n\nOriginally reported here: https://github.com/rails/tailwindcss-rails/discussions/450#discussioncomment-12037908\n\nI'm also going to submit a ticket to Heroku to see if I can get any insight from their end since end users like me have very limited access and control over what's going on within the deploy process. I'll reply with updates as they come.\n\nPlease let me know how I can help debug or understand this.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16311","RelatedDescription":"Open issue \"Tailwind 4.0.4 - Command failed with exit 1 - Heroku Deploys Rejected\" (#16311)"},{"Id":"2836333426","IsPullRequest":true,"CreatedAt":"2025-02-06T18:56:30","Actor":"RobinMalfait","Number":"16310","RawContent":null,"Title":"Cleanup Tailwind Play workflow","State":"closed","Body":"This PR cleans up the Tailwind Play update by removing unnecessary inputs because Tailwind Play will take care of this.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16310","RelatedDescription":"Closed or merged PR \"Cleanup Tailwind Play workflow\" (#16310)"},{"Id":"2836026169","IsPullRequest":false,"CreatedAt":"2025-02-06T18:03:11","Actor":"wolf-yuan-6115","Number":"16308","RawContent":null,"Title":"[v4] tailwindcss vite plugin logs all included css files","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.0.3`\n\n**What build tool (or framework if it abstracts the build tool) are you using?** \n\n- Astro `5.2.3`\n\n**What version of Node.js are you using?**\n\n`22.12.0`\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nNo need to reproduce in this case.\n\n**Describe your issue**\n\nOne line of code which *probably* was used to debug was included into `@tailwindcss/vite@4.0.4`:\n\nhttps://github.com/tailwindlabs/tailwindcss/blob/e1a85ac260e065c069307deb7f908bc46035a3e5/packages/%40tailwindcss-vite/src/index.ts#L321\n\nThis causes Astro project dev server log and build log looks like this:\n\n```\n00:23:40 watching for file changes...\n<truncated>/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?astro&type=style&index=0&lang.css\n<truncated>/scrapyard-website/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?astro&type=style&index=0&lang.css\n<truncated>/node_modules/.pnpm/@fontsource-variable+inter@5.1.1/node_modules/@fontsource-variable/inter/index.css\n<truncated>/node_modules/.pnpm/@fontsource-variable+inter@5.1.1/node_modules/@fontsource-variable/inter/index.css\n<truncated>/src/styles/global.css\n<truncated>/src/styles/global.css\n<truncated>/src/styles/global.css\n<truncated>/src/styles/global.css\n<truncated>/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?inline&astro&type=style&index=0&lang.css\n<truncated>/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?inline&astro&type=style&index=0&lang.css\n00:23:42 [200] / 64ms\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16308","RelatedDescription":"Closed issue \"[v4] tailwindcss vite plugin logs all included css files\" (#16308)"},{"Id":"2836020145","IsPullRequest":true,"CreatedAt":"2025-02-06T16:54:21","Actor":"martinschneider01","Number":"16307","RawContent":null,"Title":"Remove useless `console.log` in `@tailwind/vite` package","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nThis PR removes a (seemingly) unwanted `console.log` in the `@tailwind/vite` package.\r\n\r\nI discovered this when I updated tailwind in my `astro` project, each `.astro` component log the full path of an imported `.css` file.\r\n\r\nIt seems that this was the commit that introduced it: https://github.com/tailwindlabs/tailwindcss/commit/e1a85ac260e065c069307deb7f908bc46035a3e5\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16307","RelatedDescription":"Closed or merged PR \"Remove useless `console.log` in `@tailwind/vite` package\" (#16307)"},{"Id":"2835975278","IsPullRequest":true,"CreatedAt":"2025-02-06T16:15:27","Actor":"RobinMalfait","Number":"16306","RawContent":null,"Title":"Improve Oxide scanner","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16306","RelatedDescription":"Open PR \"Improve Oxide scanner\" (#16306)"},{"Id":"2835757255","IsPullRequest":false,"CreatedAt":"2025-02-06T14:52:34","Actor":"moritz-baecker-integra","Number":"16305","RawContent":null,"Title":"Upgrade tool blur event renaming problem","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.vuejs.org/#eNqVUttKw0AQ/ZV1X9JCbRB90rSgUrDiDS/4si8xmaZbN7PLXtJCyL87SWltoVTMQ9iZc87smZmt+bUxwyoAv+SJy6w0njnwwYwFytJo61nNNH5gqQN6yFnDZlaXLCJJdLXHefyDYWG2hwkUuFX1en02GrNaIKNvKTHXy2Ga55MK0D9I5wHB9qIvFWw0oFLkcUo6W6WqT5c07W/H5sFyFkpdwX8qCsw0Os9KV7BR20AvugOlNPvUVuUnUV9gEq+nRvOiwENpVOqBIsaS+dm4rjtx0yQxRV1WogmeVaelzkGNBCdccBYTmMQ7ej7g3tH1M1kMF04jLahrR/BMl0YqsM/GS7In+OWmUcFTcre873LeBhhs8tkcsu8D+YVbtTnBX9oJ2AoE32I+tQX4NTx5e4IVnbcguQ+K2EfAV3BahdbjmnYTMCfbO7zO7bR7IBKLdzdZ0VbcpqnWaMtsOr7g9Ghuj7T+a/d8eNHpaIu8+QFC7vjy\n\n**Describe your issue**\n\nIf you have a .vue file that assigns a blur event, running the upgrade tool renames the blur event to blur-sm. This should not happen.\n\n$ npx @tailwindcss/upgrade@next\n\n\n```\nonMounted(() => {\n    window.addEventListener('blur', resetInterval);\n    window.addEventListener('blur-sm', resetInterval);\n});\nonUnmounted(() => {\n    window.removeEventListener('blur', resetInterval);\n    window.removeEventListener('blur-sm', resetInterval);\n});\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16305","RelatedDescription":"Open issue \"Upgrade tool blur event renaming problem\" (#16305)"},{"Id":"2835547519","IsPullRequest":true,"CreatedAt":"2025-02-06T14:18:13","Actor":"RobinMalfait","Number":"16302","RawContent":null,"Title":"Prepare v4.0.4","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16302","RelatedDescription":"Closed or merged PR \"Prepare v4.0.4\" (#16302)"},{"Id":"2833805762","IsPullRequest":true,"CreatedAt":"2025-02-06T13:55:11","Actor":"GameLord2011","Number":"16285","RawContent":null,"Title":"Add .scss files to upgrade script.","State":"closed","Body":"I use an index.scss file in my project, and the upgrade script did not detect it.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16285","RelatedDescription":"Closed or merged PR \"Add .scss files to upgrade script.\" (#16285)"},{"Id":"2834977764","IsPullRequest":false,"CreatedAt":"2025-02-06T13:30:05","Actor":"Joxeur2","Number":"16298","RawContent":null,"Title":"[v4] \"Maximum call stack size exceeded\" when using @resource with @slot","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nangular: 19.1.4, tailwindcss: 4.0.3, tailwindcss/postcss: 4.0.3\n\n**What version of Node.js are you using?**\n\n23.7.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/Joxeur2/tailwind-test.git\n\n**Describe your issue**\n\nI have an Angular application that I am migrating to Tailwind 4. I'm also using a purchased theme that is based on Tailwind and has also been migrated to Tailwind 4.\nHowever, when I use the theme, I get the error \"Maximum call stack size exceeded.\"\n\nAfter some investigation, I managed to reproduce the issue and created a separate repo with minimal setup here: https://github.com/Joxeur2/tailwind-test.git\n\nMy problem occurs when these two things are present:\n\n- I use a @resource pointing to my main.css to be able to use @apply\n- I use a @slot in main.css\n\nI imagine I could move my @variant along with my @slot into another CSS file and only reference the rest with @resource, but as I mentioned, I am using a purchased theme and I would really hate to have to mess with the theme’s code...","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16298","RelatedDescription":"Closed issue \"[v4] \"Maximum call stack size exceeded\" when using @resource with @slot\" (#16298)"},{"Id":"2835376123","IsPullRequest":true,"CreatedAt":"2025-02-06T13:30:04","Actor":"philipp-spiess","Number":"16300","RawContent":null,"Title":"Properly skip over nodes when using `replaceNode`","State":"closed","Body":"Fixes #16298 \r\n\r\nThis PR fixes an issue where using an AST walk in combination with `replaceNode` and various `SkipAction` would either cause children to be visited multiple times or not visited at all even though it should. This PR fixes the issue which also means we can get rid of a custom walk for `@variant` inside the `@media` that was used to apply `@variant` because we never recursively visited children inside the `@media` rule.\r\n\r\nBecause we now can use the regular walk for `@variant`, we now properly convert `@variant` to `@custom-variant` inside `@reference`-ed stylesheet which also fixes #16298\r\n\r\n## Test plan\r\n\r\nLots of tests added to ensure the combinations of `WalkAction` and `replaceWith()` works as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16300","RelatedDescription":"Closed or merged PR \"Properly skip over nodes when using `replaceNode`\" (#16300)"},{"Id":"2834705493","IsPullRequest":false,"CreatedAt":"2025-02-06T08:15:26","Actor":"unional","Number":"16296","RawContent":null,"Title":"prefix not applied to CSS variable reference","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite: 4\n\n**What version of Node.js are you using?**\n\n20\nFor example: v12.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nTailwind Play doesn't work with prefix: https://play.tailwindcss.com/EdqmzkKuDE\n\n**Describe your issue**\n\nWhen using prefix, the variable references are not updated with the prefix.\ne.g. the css in the play link generates:\n\n```css\n:root, :host {\n  --tw-color-red-100: #f0d0d0;\n  --tw-color-primary: var(--color-red-100);\n}\n```\n\nThe `var(--color-red-100)` is not prefixed so the variable doesn't exist.\n\nThis means the prefix needs to be hardcoded, resulting the theme is not shareable.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16296","RelatedDescription":"Closed issue \"prefix not applied to CSS variable reference\" (#16296)"},{"Id":"2834501683","IsPullRequest":true,"CreatedAt":"2025-02-06T04:16:40","Actor":"zackradisic","Number":"16295","RawContent":null,"Title":"Bun plugin","State":"open","Body":"> (Sorry for creating this PR without opening an issue first)\r\n\r\nThis PR implements a Bun plugin that makes TailwindCSS fast in Bun.\r\n\r\n<img width=\"619\" alt=\"c612d2faa37f2cff03c8620a08bb2def7268851bb183c2fa8e2763246b9243e5\" src=\"https://github.com/user-attachments/assets/547e3dd7-61a9-4674-b4a1-44597f7a8ee8\" />\r\n\r\n(bundling 2048 html + react + tailwind files)\r\n\r\n# Overview\r\n\r\nThis plugins is comprised of two parts:\r\n\r\n- A regular Bun bundler plugin which is the main driver of everything and invokes the native bundler plugin\r\n- A [native bundler plugin](https://bun.sh/docs/bundler/plugins#native-plugins) which parallelizes the module graph scanning of candidates. Tailwind was part of the motivation for implementing this API.\r\n \r\n## Native bundler plugin\r\n\r\nThe native bundler plugin is used to scan the module graph in parallel with the `Scanner` struct from `@tailwindcss/oxide`.\r\n\r\nThe main logic for this code is in the `tw_on_before_parse` function.\r\n\r\nNative bundler plugins run in parallel on Bun's bundler threads and do not need to do UTF-16 <-> UTF-8 string conversions. This speeds up the plugin a lot.\r\n\r\nNative bundler plugins are NAPI modules which export additional symbols (since NAPI modules themselves are dynamically loaded libraries which can be `dlopen()`'d). The [`bun-native-plugin`](https://crates.io/crates/bun-native-plugin) crate handles the boilerplate for creating one.\r\n\r\nI placed the Bun plugin inside the existing `crates/node/lib.rs` (the `@tailwindcss/oxide` package). This reduces the need to create more compiled artifacts at the cost of a relatively small binary size change:\r\n\r\n```sh\r\n# original size\r\n❯ ls -lhS dist/tailwindcss-oxide-darwin-arm64.tgz\r\n-rw-r--r--@ 1 zackradisic  staff   2.1M Feb  4 20:42 dist/tailwindcss-oxide-darwin-arm64.tgz\r\n\r\n# new size\r\n❯ ls -lhS dist/tailwindcss-oxide-darwin-arm64.tgz\r\n-rw-r--r--@ 1 zackradisic  staff   2.2M Feb  4 18:42 dist/tailwindcss-oxide-darwin-arm64.tgz\r\n```\r\n\r\nPlease let me know if you would like me to split it out into its own separate package if you don't like the binary size change.\r\n\r\n### Sharing state between the native plugin and JS\r\n\r\nThe scanned candidates and other state are held inside a NAPI External. The struct in the code that does\r\nthis is called `TailwindContextExternal`.\r\n\r\nA NAPI External is a NAPI value which can be given to JS and which holds a `void*` data pointer. This data is inaccessible to JS, but a NAPI module can dereference the data and convert it to NAPI values.\r\n\r\nThis looks a bit like this on the Rust side:\r\n\r\n```rust\r\n/// Create the TailwindContextExternal and return it to JS wrapped in a Napi External.\r\n///\r\n/// Napi has an `External<T>` type which allows us to wrap it in an\r\n/// external easily.\r\n#[no_mangle]\r\n#[napi]\r\npub fn twctx_create() -> External<TailwindContextExternal> {\r\n  let external = External::new(TailwindContextExternal {\r\n    module_graph_candidates: Default::default(),\r\n    dirty: AtomicBool::new(false),\r\n  });\r\n\r\n  external\r\n}\r\n```\r\n\r\nAnd the JS side:\r\n\r\n```ts\r\n// import napi functions which let us manipulate the external\r\nimport { twctxCreate, twctxIsDirty, twctxToJs } from '@tailwindcss/oxide'\r\n\r\n// create the state, the returned value\r\n// is a Napi External\r\nconst external = twctxCreate()\r\n\r\n/* ... other code ... */\r\n\r\nlet moduleGraphCandidates = new Map<string, Set<string>>()\r\nfunction getSharedCandidates() {\r\n  // check if there are changes\r\n  if (twctxIsDirty(external)) {\r\n    // convert the state into js values\r\n    let rawCandidates: Array<{ id: string; candidates: string[] }> = twctxToJs(external)\r\n    for (let { id, candidates } of rawCandidates) {\r\n      moduleGraphCandidates.set(id, new Set(candidates))\r\n    }\r\n  }\r\n  return moduleGraphCandidates\r\n}\r\n```\r\n\r\n### `napi-rs` version bump\r\n\r\nThe `napi-rs` crate was updated to version `2.16.15` so we can use the [`External::inner_from_raw()`](https://docs.rs/napi/latest/napi/bindgen_prelude/struct.External.html#method.inner_from_raw) function to turn an `External`'s `*mut c_void` pointer back into `TailwindContextExternal`.\r\n\r\n## JS plugin\r\n\r\nThe JS plugin `@tailwindcss-bun/src/index.ts` uses logic copied over from the vite plugin implementation but modified to work with Bun's plugin API.\r\n\r\nIt invokes the native bundler plugin using the `.onBeforeParse` plugin API function:\r\n\r\n```ts\r\n// Called on every file which matches the filter\r\n// before it is parsed by Bun\r\nbuild.onBeforeParse(\r\n  // filter which files the native plugin apply to\r\n  { filter: NON_CSS_ROOT_FILE_RE },\r\n\r\n  // pass the napi module, the symbol which points to the plugin main function,\r\n  // and the external which holds the tailwind state\r\n  { napiModule: addon, symbol: 'tw_on_before_parse', external },\r\n)\r\n```\r\n\r\nOne thing to note is that Bun's bundler currently does not have an API that is analogous to `.addWatchedFile()`, so there is currently no way to add additional files to the module graph.\r\n\r\n## Testing\r\n\r\nI added a `integrations/bun/index.test.ts` file, please let me know if you would like more tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16295","RelatedDescription":"Open PR \"Bun plugin\" (#16295)"},{"Id":"2833847167","IsPullRequest":false,"CreatedAt":"2025-02-06T02:02:09","Actor":"jthibeaux","Number":"16286","RawContent":null,"Title":"bg-[value] seems to be overloaded for setting both size and position, and only position works","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.3.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 14.2.22\n\n**What version of Node.js are you using?**\n\nv18.20.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nMacOS\n\n**Reproduction URL**\n\nI don't think a URL is needed since the bug appears to be described in the documentation itself.\n\n**Describe your issue**\n\nThis appears to be a documented bug if you look at both the documentation for both background-size and background-position, you will see the same syntax for explicitly setting the value `bg-[value]`.  In my testing, this syntax only sets the position and not the size.\n\nhttps://tailwindcss.com/docs/background-size\nhttps://tailwindcss.com/docs/background-position\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16286","RelatedDescription":"Closed issue \"bg-[value] seems to be overloaded for setting both size and position, and only position works\" (#16286)"},{"Id":"2833859201","IsPullRequest":false,"CreatedAt":"2025-02-05T20:06:36","Actor":"nicksergeant","Number":"16287","RawContent":null,"Title":"[v4] Source glob pattern `./**/*.{js,ts,jsx,tsx,mdx}` does not match Next.js-style catchall route segments like `[...slug]`.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Next.js 15.1.6\n- PostCSS 8\n\n**What version of Node.js are you using?**\n\n23.5.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/nicksergeant/tailwind-v4-dynamic-params/\n\n**Describe your issue**\n\nIf you are [disabling automatic detection](https://tailwindcss.com/docs/detecting-classes-in-source-files#disabling-automatic-detection) with:\n\n```\n@import 'tailwindcss' source(none);\n```\n\nand then configuring a glob pattern like [this](https://github.com/nicksergeant/tailwind-v4-dynamic-params/blob/main/app/globals.css#L1-L3):\n\n```\n@source './**/*.{js,ts,jsx,tsx,mdx}';\n```\n\nSource files in directories such as `[...slug]` will not be picked up: https://github.com/nicksergeant/tailwind-v4-dynamic-params/blob/main/app/%5B...slug%5D/page.tsx\n\nI'm not sure if this is a bug per se, and I have found this workaround:\n\n```\n@source './**/*.{js,ts,jsx,tsx,mdx}';\n@source './[[]**[]]/*.{js,ts,jsx,tsx,mdx}';\n```\n\nExample page showing missing style: https://github.com/nicksergeant/tailwind-v4-dynamic-params/blob/main/app/%5B...slug%5D/page.tsx#L4\n\nBut I was surprised that `./**/*` was not working to pick those up.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16287","RelatedDescription":"Open issue \"[v4] Source glob pattern `./**/*.{js,ts,jsx,tsx,mdx}` does not match Next.js-style catchall route segments like `[...slug]`.\" (#16287)"},{"Id":"2833474889","IsPullRequest":true,"CreatedAt":"2025-02-05T17:46:14","Actor":"RobinMalfait","Number":"16283","RawContent":null,"Title":"Improve performance of rebuilds","State":"closed","Body":"This PR introduces a performance improvement we noticed while working on on: https://github.com/tailwindlabs/tailwindcss/pull/16211\r\n\r\nWe noticed that `substituteFunctions` was being called on every `node` after the `compileAstNodes` was done. However, the `compileAstNodes` is heavily cached.\r\n\r\nBy moving the `substituteFunctions` we into the cached `compileAstNodes` we sped up performance for Catalyst rebuilds from ~15ms to ~10ms.\r\n\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"710\" alt=\"image\" src=\"https://github.com/user-attachments/assets/eaf110d9-2f88-447c-9b10-c77d47bd99a5\" /> | <img width=\"696\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c5a2ff4c-d75e-4e35-a2b6-d896598810f5\" /> |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16283","RelatedDescription":"Closed or merged PR \"Improve performance of rebuilds\" (#16283)"},{"Id":"2832895497","IsPullRequest":true,"CreatedAt":"2025-02-05T15:48:05","Actor":"philipp-spiess","Number":"16277","RawContent":null,"Title":"Add Freebsd build target","State":"closed","Body":"Closes #15731\r\n\r\nThis PR adds a FreeBSD build target to our CI workflows. It was tested on CI: https://github.com/tailwindlabs/tailwindcss/actions/runs/13159185517/job/36723613079\r\n\r\nHowever, due to the build not emitting final npm packages, we don't have a way to actually test the final package before we ship it to an insiders release.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16277","RelatedDescription":"Closed or merged PR \"Add Freebsd build target\" (#16277)"},{"Id":"2831382450","IsPullRequest":true,"CreatedAt":"2025-02-05T15:22:35","Actor":"depfu[bot]","Number":"16257","RawContent":null,"Title":"Update all of nextjs 15.1.4 → 15.1.6 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.1.4 → 15.1.6)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.1.4 → 15.1.6) · [Repo](https://github.com/vercel/next.js)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.1.6\">15.1.6</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>fix: don't memory-leak promises passed to waitUntil (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75041\">#75041</a>)</li>\n<li>backport: fix prerender issue with intercepting routes + generateStaticParams (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75170\">#75170</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/lubieowoce\">@lubieowoce</a> and <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.1.5\">15.1.5</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>Fix missing revalidate with notFound() (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75009\">#75009</a>)</li>\n<li>fix: when metadatabase is set we should not warn (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/74840\">#74840</a>)</li>\n<li>Fix @vercel/og license SPDX expression (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/74745\">#74745</a>)</li>\n<li>fix: ts language server rule metadata should allow null (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/74704\">#74704</a>)</li>\n<li>fix: eslint rule of using img in metadata routes (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/74864\">#74864</a>)</li>\n<li>Fix presentation when onerror receives an event without error (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/74643\">#74643</a>)</li>\n<li>fix fetch lock not being consistently released <a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/74623\">#74623</a> (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75028\">#75028</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a>, <a href=\"https://bounce.depfu.com/github.com/huozhi\">@huozhi</a>, <a href=\"https://bounce.depfu.com/github.com/matmannion\">@matmannion</a> and <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/48f2588b0fea2bffb5bf6534169ee112438786a6...38a6d0177eced9b56dfcc58f83662a659195af15\">See the full diff on Github</a>. The new version differs by 14 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/38a6d0177eced9b56dfcc58f83662a659195af15\"><code>v15.1.6</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/70997533978c9eb4cf02092fa074796ffece27f7\"><code>backport: fix prerender issue with intercepting routes + generateStaticParams (#75170)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/819d57589a556dd0d5491d6ced9939bed0076ca1\"><code>[E2E] Fix config file conflict (#73818)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/20f5a79c434d6702fc4f19330d22d273042a3523\"><code>fix: don&#39;t memory-leak promises passed to `waitUntil` (#75041)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/47102cae01a63b1761b9313d9ec4e7a89119ea18\"><code>v15.1.5</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/94313366990b760e7401855d542c8dbc6b78635a\"><code>fix fetch lock not being consistently released (#75028)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/25e84437a5992d06aaa7373971b15a391de1689f\"><code>test: fix testing snapshot</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/30b9c8f91093f50892ad0295fe1167a442f74f0c\"><code>test: add feature of overriding files (#74716)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/79bdd868812e5eaa804a647cdfeb94a842d2070b\"><code>Fix presentation when onerror receives an event without error (#74643)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/1882acb24662b3b647b40d9bb6133080f65bcecb\"><code>fix: eslint rule of using img in metadata routes (#74864)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/e204a30a139a391e3583eea3d83f6564dae87a33\"><code>fix: ts language server rule metadata should allow null (#74704)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/7666d2efa56a0d93a277a4595e0d46a765002588\"><code>Fix @vercel/og license SPDX expression (#74745)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/84a38ffe4a48bd84e3cce83eb8cf0f2cbbab24ae\"><code>fix: when metadatabase is set we should not warn (#74840)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/1c286dd5c1b4f13b4b47424c02ed3bfd248add23\"><code>Fix missing revalidate with notFound() (#75009)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16257","RelatedDescription":"Closed or merged PR \"Update all of nextjs 15.1.4 → 15.1.6 (patch)\" (#16257)"},{"Id":"2832743070","IsPullRequest":true,"CreatedAt":"2025-02-05T15:21:31","Actor":"philipp-spiess","Number":"16274","RawContent":null,"Title":"Take `NODE_PATH` into account when resolving modules","State":"closed","Body":"Fixes #15847\r\n\r\nThis PR changes the node specific resolver config to takes the eventual `NODE_PATH` env into account.\r\n\r\n## Test plan\r\n\r\nSee #15847\r\n\r\n<img width=\"1273\" alt=\"Screenshot 2025-02-05 at 12 58 20\" src=\"https://github.com/user-attachments/assets/8e1b99d1-608d-437a-a7b2-212feb153da5\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16274","RelatedDescription":"Closed or merged PR \"Take `NODE_PATH` into account when resolving modules\" (#16274)"},{"Id":"2831240603","IsPullRequest":false,"CreatedAt":"2025-02-05T13:34:01","Actor":"FlavioSantoro92","Number":"16255","RawContent":null,"Title":"[v4] Angular css modules not working","State":"closed","Body":"I followed the guide to create a new Angular app and install TW4, and it works.\nAfter that I created a new component, and if I use come utility class in the html file it still works, but if I use the `@apply` directive in the css file with any of the utility classes I get compilarion error:\n![image](https://github.com/user-attachments/assets/99dad0e7-7427-400d-88af-a9767a380449)\n\nIn that css file I have to use `@import` ad choose the style.css file. But importing in each needed css file the main css file means all the classes already defined in that file will be duplicated in the bundle:\n![image](https://github.com/user-attachments/assets/0162bf3e-0bbb-43f9-a362-a9ffd85c884c)\n\nAs suggested from @wongjn I should use `@reference` directive (in the doc there are Vite and Svelte mentioned, so previously I skipped that part), but actually now I have a weird behavior: \n\n![Image](https://github.com/user-attachments/assets/afa55417-8404-476d-8abd-2c06d70548b5)\n\nIt seems that the css variables are unset, but if I add a random class, for example `text-amber-500` all the styles are as they should be:\n\n![Image](https://github.com/user-attachments/assets/9a1be1db-9ff9-494e-98a9-e94f9a40f300)\n\nafter that, if I remove the previously added class it still works until I reload the page. I tried even put the styles.css path in the `@reference` but nothing changed.\n\nThe project was created from scratch following the guide, on macos 14.7.2, node 22.13.1 and npm 10.9.2.\nIn the IDE (Intellij Ultimate) I have that error on the directive, probably a bug in the intellisense plugin cause it won't recognize the directive at all.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16255","RelatedDescription":"Closed issue \"[v4] Angular css modules not working\" (#16255)"},{"Id":"2832867620","IsPullRequest":false,"CreatedAt":"2025-02-05T13:30:21","Actor":"mathias22osterhagen22","Number":"16276","RawContent":null,"Title":"[v4] @tailwindcss/vite Cannot apply unknown utility class in @apply","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n` \"tailwindcss\": \"^4.0.3\"`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n` \"nuxt\": \"^3.15.4\"` with `@tailwindcss/vite`\n\n\n**What version of Node.js are you using?**\n\n`v20.18.2`\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/mathias22osterhagen22/tailwindcss-issue\n\n**Describe your issue**\n\nI'm having `[vite-node] [plugin:@tailwindcss/vite:generate:serve] [VITE_ERROR] `  `Cannot apply unknown utility class: hover:text-primary/70 ` in my Nuxt project.\n\n![Image](https://github.com/user-attachments/assets/ccfab2cf-5b42-404f-8d14-77e3a56061ef)\n\nMy `assets/css/main.css`:\n```css\n@import \"tailwindcss\";\n\n@theme {\n    --color-primary: #e4c160;\n}\n```\n\nIn my component I'm trying to create a custom class that apply tailwind classes: \n```\n<style lang=\"css\" scoped>\n.my-class {\n    @apply text-primary/50;\n}\n</style>\n```\n\nBut impossible to make it work.\nI can only use it by writing it directly in the Vue template `<a class=\"hover:text-primary/70\">`, which is kind of super annoying.\n\n**Note:**\nI as well figured out while during the creation of the reproduction repo, than the original classes (`text-2xl`) are now as well broken (I didn't have this issue with my original project).\nSo it seems to be linked with : [https://github.com/tailwindlabs/tailwindcss/issues/16255](https://github.com/tailwindlabs/tailwindcss/issues/16255)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16276","RelatedDescription":"Closed issue \"[v4] @tailwindcss/vite Cannot apply unknown utility class in @apply\" (#16276)"},{"Id":"2831734772","IsPullRequest":false,"CreatedAt":"2025-02-05T11:43:48","Actor":"xxwangkaimin","Number":"16260","RawContent":null,"Title":"Warning message occurs during packaging when using tailwindcss3. x version in Vue3.x+Vite6.x project","State":"closed","Body":"Tailwindcss configuration information:\n```ts\n// tailwind.config.ts\n\nimport type { Config } from \"tailwindcss\"\n\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx,vue}\"\n  ],\n  darkMode: \"selector\",\n  prefix: \"\",\n  theme: {},\n  plugins: [],\n} satisfies Config\n```\n\n```ts\n// postcss.config.ts\n\nimport config from \"./tailwind.config\"\n\nexport default {\n  plugins: {\n    autoprefixer: {},\n    \"postcss-antd-fixes\": {\n      prefixes: [\"el\"]\n    },\n    \"postcss-import\": {},\n    \"postcss-preset-env\": {},\n    tailwindcss: { config },\n    \"@tailwindcss/nesting\": {}\n  },\n}\n```\n\nDependent version information:\n```json\n{\n    \"autoprefixer\": \"^10.4.20\",\n    \"postcss\": \"^8.5.1\",\n    \"postcss-antd-fixes\": \"^0.2.0\",\n    \"postcss-import\": \"^16.1.0\",\n    \"postcss-preset-env\": \"^10.1.3\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"vite\": \"^6.0.5\",\n    \"vue\": \"^3.5.13\",\n}\n```\n\nAccording to the configuration information on the official website, after using @ tailwind utilities, a warning message was found during the packaging command:\n\n![Image](https://github.com/user-attachments/assets/566e2bf3-43e1-4951-90de-3f80a6da71f4)\nAfter deleting @ tailwind utilities, it is normal to use the packaging command:\n\n![Image](https://github.com/user-attachments/assets/6dd401f9-478a-4f7d-88e4-4b74b60b7ee4)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16260","RelatedDescription":"Closed issue \"Warning message occurs during packaging when using tailwindcss3. x version in Vue3.x+Vite6.x project\" (#16260)"},{"Id":"2832412714","IsPullRequest":true,"CreatedAt":"2025-02-05T11:04:43","Actor":"RobinMalfait","Number":"16266","RawContent":null,"Title":"Fix `order-first` and `order-last` for Firefox","State":"closed","Body":"This PR fixes an issue where `order-last` doesn't work as expected in Firefox.\n\nThe implementation of `order-last`, looks like this: \n```css\n.order-last {\n  order: calc(infinity);\n}\n```\n\nWhich is valid CSS, and `calc(infinity)` is even valid in Firefox. You can use this in other properties such as `border-radius`:\n```css\n.rounded-full {\n  border-radius: calc(infinity * 1px);\n}\n```\n\nWhile this works, in properties like `order` it just doesn't work.\n\nFixes: #16165 \n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16266","RelatedDescription":"Closed or merged PR \"Fix `order-first` and `order-last` for Firefox\" (#16266)"},{"Id":"2831755674","IsPullRequest":false,"CreatedAt":"2025-02-05T10:53:35","Actor":"j-mendez","Number":"16261","RawContent":null,"Title":"[Deprecation] Custom state pseudo classes have been changed production console error - v4","State":"closed","Body":"After upgrading to v4 the following deprecated CSS console error.\n\n![The following deprecated error [Deprecation] Custom state pseudo classes have been changed from \":--input-width\" to \":state(input-width)\". See more here: https://github.com/w3c/csswg-drafts/issues/4805\n](https://github.com/user-attachments/assets/db1349ba-cf6d-4ad2-aaf4-5ee8f573c963)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16261","RelatedDescription":"Closed issue \"[Deprecation] Custom state pseudo classes have been changed production console error - v4\" (#16261)"},{"Id":"2832391883","IsPullRequest":false,"CreatedAt":"2025-02-05T10:44:28","Actor":"first-andy","Number":"16265","RawContent":null,"Title":"[v4] upgrade tool failing with docker & nextjs","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.3.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 14.0.2\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What operating system are you using?**\n\nMacOS\n\n**Describe your issue**\n\nI'm currently running a project with docker. The root of the project contains /frontend folder where we have our Nextjs application running. \n\nWhen I go into the running frontend container's exec shell and run `npx @tailwindcss/upgrade@next` i'm getting the following errors:\n\n![Image](https://github.com/user-attachments/assets/df7ddf11-ff18-4f22-a1aa-a9acad573d74)\n\nThe GIT repo error is logical, because the /frontend folder is not a git repository itself, the root of the project **is** however. \n\nIs there a way to fix the issue and get the upgrade tool running? Or am I stuck with manually upgrading? ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16265","RelatedDescription":"Closed issue \"[v4] upgrade tool failing with docker & nextjs\" (#16265)"},{"Id":"2832501617","IsPullRequest":false,"CreatedAt":"2025-02-05T10:28:14","Actor":"iliaciolac","Number":"16268","RawContent":null,"Title":"Sudden issue with Tailwind v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: React-vite\n\n**What version of Node.js are you using?**\n\nFor example: v20.18.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n\n\n\n**Describe your issue**\nSuddenly started getting this error, the only thing that helps is to remove tailwind from my css.\nI dont have 800 lines of code in my css, I have only like 50? this comes from tailwind directly.\n\n\n[plugin:vite:css] [postcss] C:/Users/iliac/Desktop/Sykors-internship/Portofoliu-therafaelbk-/therafaelbk/src/App.css:877:27: Unknown word\nC:/Users/iliac/Desktop/Sykors-internship/Portofoliu-therafaelbk-/therafaelbk/src/App.css:877:26","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16268","RelatedDescription":"Closed issue \"Sudden issue with Tailwind v4\" (#16268)"},{"Id":"2832510218","IsPullRequest":false,"CreatedAt":"2025-02-05T10:27:41","Actor":"Rastraponovich","Number":"16269","RawContent":null,"Title":"[V4] upgrage scenario from v3 -> v4 replaced all params incuded shadow or blur to shadow-sm/blur-sm","State":"closed","Body":"when we upgrage with  npx @tailwindcss/upgrade@next, all params (shadow or blur) in (.tsx, .ts) files (like react or logics models) added suffix -sm.\n\npackages: \n\"vite\": ^5.4.11,\n\"postcss\": \"^8.4.43\", \n\n\nNodeJS: v22.13.1\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16269","RelatedDescription":"Closed issue \"[V4] upgrage scenario from v3 -> v4 replaced all params incuded shadow or blur to shadow-sm/blur-sm\" (#16269)"},{"Id":"2832429694","IsPullRequest":false,"CreatedAt":"2025-02-05T10:01:27","Actor":"herzaso","Number":"16267","RawContent":null,"Title":"There seem to be a problem with readonly childs","State":"closed","Body":"Maybe I'm wrong but shouldn't `has-read-only` or `has-[:read-only]` be active when there's a readonly child within the element? It seem to always be active - https://play.tailwindcss.com/dNyg81VY6d","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16267","RelatedDescription":"Closed issue \"There seem to be a problem with readonly childs\" (#16267)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-07T03:30:22.5175321Z","RunDurationInMilliseconds":475}