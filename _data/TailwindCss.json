{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2828987500","IsPullRequest":false,"CreatedAt":"2025-02-04T02:41:40","Actor":"NormandoHall","Number":"16226","RawContent":null,"Title":"V4 Segmentation fault","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`Tailwind v4.0.3`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n```\nsveltekit: v2.17.1\nvitejs: v6.0.11\n```\n\n**What version of Node.js are you using?**\n\n`Node v22.13.1`\n\n**What operating system are you using?**\n\n`Linux Centos 7 x86_64`\n\n**Reproduction URL**\n\nhttps://github.com/NormandoHall/tw4\n\n**Describe your issue**\n\nUsing the guide to setup in sveltekit: https://tailwindcss.com/docs/installation/framework-guides/sveltekit","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16226","RelatedDescription":"Open issue \"V4 Segmentation fault\" (#16226)"},{"Id":"2828884588","IsPullRequest":true,"CreatedAt":"2025-02-04T01:06:25","Actor":"depfu[bot]","Number":"16225","RawContent":null,"Title":"Update @parcel/watcher-linux-x64-musl 2.5.0 → 2.5.1 (patch)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​parcel/watcher-linux-x64-musl (2.5.0 → 2.5.1) · [Repo](https://github.com/parcel-bundler/watcher)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/parcel-bundler/watcher/releases/tag/v2.5.1\">2.5.1</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Handle large changes from FS Events better in getEventsSince - <a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/196\">#196</a>\n</li>\n<li>Fix use after free in kqueue backend</li>\n<li>fix: catch std:regex error - <a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/195\">#195</a>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@parcel%2Fwatcher-linux-x64-musl/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/parcel-bundler/watcher/compare/0ed1564ca45bd28440b383bb2fbf9d8f2274e49b...664695dbb2488d53f782c3e2b8791c4c114731fb\">See the full diff on Github</a>. The new version differs by 9 commits:</p>\n<ul>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/664695dbb2488d53f782c3e2b8791c4c114731fb\"><code>v2.5.1</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/481284a8667468fadf8535e4e91f5dfd0d346092\"><code>fix: catch std:regex error (#195)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8496a2bcd809f8f3164c0b8a366743d3da981ec8\"><code>ignore wasm differences on linux</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/ab5da2fcccf43aec18bdff48317179a761c7900b\"><code>Fix use after free in kqueue backend</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/de6f13d3596436592081db53917f9d8329a629c9\"><code>Handle large changes from FS Events better in getEventsSince (#196)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/b49bc2d0ed390e6f554b18e7e4f06bb625a4927c\"><code>Add workflow_dispatch trigger to test workflow</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/a603f809f6ae9cd638ff25a7b544456d01eef79b\"><code>Copy files</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/f22db2ba074c745f5ea121f5869a4cc691878813\"><code>install git</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/6dc87112e100d2fe8486bd3c68c1a28e1e48a1da\"><code>Build updates</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16225","RelatedDescription":"Open PR \"Update @parcel/watcher-linux-x64-musl 2.5.0 → 2.5.1 (patch)\" (#16225)"},{"Id":"2828796768","IsPullRequest":false,"CreatedAt":"2025-02-03T23:44:38","Actor":"tsiotska","Number":"16224","RawContent":null,"Title":"Cannot start Nuxt with new Tailwind version","State":"open","Body":"\nv4.0.1 -v4.0.3 (compatible with prev versions e.g. 3.)\nNUXT 3.15.2\nNode v20.12.2\n @nuxtjs/tailwindcss: \"^6.13.1\",\n\nI am not sure If issue refers to tailwind, I just downgraded to 3.4.17 and don't see message below anymore:\n\n`ERROR  Cannot start nuxt:  It looks like you're trying to use tailwindcss directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install @tailwindcss/postcss and update your PostCSS configuration.`\n\nYes, I tried to install plugin and update postcss, it's just not the way it gotta work and indeed it doesn't. If anyone interested please take a better look than I did. :)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16224","RelatedDescription":"Open issue \"Cannot start Nuxt with new Tailwind version\" (#16224)"},{"Id":"2828375336","IsPullRequest":false,"CreatedAt":"2025-02-03T19:46:29","Actor":"oom-","Number":"16219","RawContent":null,"Title":"[v4] Cannot use theme color in gradient","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`\"tailwindcss\": \"^4.0.3\",`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`\"nuxt\": \"^3.15.4\"`\n\n**What version of Node.js are you using?**\n\n`v20.18.2`\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n[https://play.tailwindcss.com/8kRusJVCGo](https://play.tailwindcss.com/8kRusJVCGo)\n\n\n**Describe your issue**\nGradient are not working with theme custom color: \n```css\n@import \"tailwindcss\";\n\n@theme {\n    --color-my-start: \"#ff0000\";\n    --color-my-end: \"#0000ff\";\n}\n```\n\n`bg-gradient-to-r from-my-start to-my-end` not working (see reproduction link)\n\nGetting this error in the inspector on my project:\n![Image](https://github.com/user-attachments/assets/53a240a3-ca65-4fcc-8996-8ee28fe46389)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16219","RelatedDescription":"Closed issue \"[v4] Cannot use theme color in gradient\" (#16219)"},{"Id":"2828244211","IsPullRequest":false,"CreatedAt":"2025-02-03T18:37:01","Actor":"PLManuel","Number":"16217","RawContent":null,"Title":"[v4] color error with animation-timeline","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro 5.2.3\n\n**What version of Node.js are you using?**\n\nv20.12.2\n\n**What browser are you using?**\n\n[Versión 1.74.51 Chromium: 132.0.6834.160 (Build oficial) (64 bits)]\n\n**What operating system are you using?**\n\nWindows 10\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/Zm9MoXD9AA\n\nhttps://github.com/PLManuel/prueba-tailwind4\n\nhttps://drive.google.com/file/d/1bWsExht0ENBIhqM7P3X3WVX2FqdS0Gyl/view?usp=sharing\n\n**Describe your issue**\n\nI'm making an animation between two colors and the final color of the animation doesn't match the color code. This also happens in the background. The error appeared after uninstalling tailwind 3 and installing the new version with \"pnpm astro add tailwind\", to move to version 4.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16217","RelatedDescription":"Open issue \"[v4] color error with animation-timeline\" (#16217)"},{"Id":"2828036795","IsPullRequest":false,"CreatedAt":"2025-02-03T16:51:47","Actor":"mikeE-finsight","Number":"16214","RawContent":null,"Title":"Group selector specificity breaks v3 => v4 upgrade for hover","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.2\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.3\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/xDLYpPt75s\n\n**Describe your issue**\n\nUpgrading from v3 => v4 breaks the specificity for `group` with `invalid` and `hover` classes.\n\nFrom the repro:\n\n```html\n<form class=\"group p-5\" action=\"\">\n  <input class=\"border border-black\" type=\"text\" required />\n  <button class=\"bg-indigo-400 p-1 group-invalid:bg-red-400 hover:bg-amber-200\">hover me in v3 and then v4</button>\n\n  <!-- This fixes it by explicitly overriding the invalid hover which is not ideal -->\n  <button class=\"bg-indigo-400 p-1 group-invalid:bg-red-400 hover:bg-amber-200 group-invalid:hover:bg-red-400\">fixed in v4: added explicit hover</button>\n</form>\n```\n\nv3 CSS produces:\n\n```css\n.hover\\:bg-amber-200:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgb(253 230 138 / var(--tw-bg-opacity, 1));\n}\n\n.group:invalid .group-invalid\\:bg-red-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(248 113 113 / var(--tw-bg-opacity, 1));\n}\n```\n\nv4 CSS produces:\n\n```css\n.group-invalid\\:bg-red-400 {\n    &:is(:where(.group):invalid *) {\n      background-color: var(--color-red-400);\n    }\n  }\n\n  .hover\\:bg-amber-200 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-amber-200);\n      }\n    }\n  }\n```\n\nI would expect the classes to still be something like `.group:invalid .group-invalid\\:bg-red-400` in v4 because that would maintain specificity between versions.\n\nWhat I tried:\n\n1. Tried to revert using the hover using `@custom-variant hover (&:hover);`. This still doesn't work because of specificity issues.\n\nThe fix:\n\n1. Add `group-invalid:hover:bg-red-400` which is pretty clunky and not intuitive\n2. Add `! important` (not ideal)\n\n**Desired Outcome**\n\nCan we add something to the [Upgrade Guide](https://tailwindcss.com/docs/upgrade-guide#hover-styles-on-mobile)? I'm happy to put up a PR for that but I want to verify if this is intended behavior first.\n\nThanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16214","RelatedDescription":"Open issue \"Group selector specificity breaks v3 => v4 upgrade for hover\" (#16214)"},{"Id":"2825732071","IsPullRequest":false,"CreatedAt":"2025-02-03T16:33:54","Actor":"dany68","Number":"16172","RawContent":null,"Title":"Some classes are not working on production build","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nTailwind v4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNuxtjs app with vite\n\n**What version of Node.js are you using?**\n\nNode v22.12.0\n\n**What browser are you using?**\n\nThe problem occurs on all the major browser: Chrome, Safari, Firefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nHi thanks for your work on the new major version,\n\nOn production build with minification of the code some classes are not working. For instance:  `space-y-*, space-x-*, *:[grid-area:1/1] `\nOn localhost during development there are no such problems.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16172","RelatedDescription":"Closed issue \"Some classes are not working on production build\" (#16172)"},{"Id":"2827612259","IsPullRequest":false,"CreatedAt":"2025-02-03T16:29:34","Actor":"vdegenne","Number":"16208","RawContent":null,"Title":"base layer messing with custom elements","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n^4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\njust `tailwindcss` and native html features.\n\n**What version of Node.js are you using?**\n\nv23.4.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nFedora 41\n\n**Describe your issue**\n\nI've talked about that before in this [issue](https://github.com/tailwindlabs/tailwindcss/issues/15799#event-16110739542). When applying a stylesheet transformed by `tailwindcss` to a custom element the styles were not applied to the custom element because it was not using the `:host` namespace.\n\nSimilarly now, the base layer is widely spread into the custom elements which breaks all the private styles:\n\n![Image](https://github.com/user-attachments/assets/852f8c4c-c99b-4282-a966-140f249004b0)\n\nOne solution would be to enclose the base layer styles into `:root`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16208","RelatedDescription":"Closed issue \"base layer messing with custom elements\" (#16208)"},{"Id":"2825830256","IsPullRequest":false,"CreatedAt":"2025-02-03T16:19:43","Actor":"olegpix","Number":"16175","RawContent":null,"Title":"[V4] Performance issue (@custom-variant)","State":"closed","Body":"Hi there!\n\nAfter the update, I've encountered performance issues. Our project relies heavily on **custom variants**. Previously, we used the **addVariant** API to add them, which kept the generated CSS lightweight and didn’t slow down the browser.\n\nNow, when using the new approach with **@custom-variant**, we experience severe slowdowns, especially in large projects. The issue is particularly noticeable in Chrome, and in Safari, it's even worse.\n\nI’ve concluded that the problem lies specifically in the CSS, as the rest of the code remains unchanged. Below, I’ll show an example of how the generated CSS looked before and how it looks now.\n\n**_Version 3 (Old Approach)_**:\n```\naddVariant('dropdown-open', [\n  ({ modifySelectors, separator }) => {\n    modifySelectors(({ className }) => {\n      return `.dropdown.open > .${e(`dropdown-open${separator}${className}`)}`;\n    });\n  },\n  ({ modifySelectors, separator }) => {\n    modifySelectors(({ className }) => {\n      return `.dropdown.open > .dropdown-toggle .${e(`dropdown-open${separator}${className}`)}`;\n    });\n  },\n  ({ modifySelectors, separator }) => {\n    modifySelectors(({ className }) => {\n      return `.dropdown.open > .dropdown-menu > .${e(`dropdown-open${separator}${className}`)}`;\n    });\n  }\n]);\n```\nGenerated CSS:\n```\n.dropdown.open > .dropdown-open\\:opacity-100 {\n    opacity: 1;\n}\n```\n\n**_Version 4 (@custom-variant)_**:\n```\n@custom-variant dropdown-open {\n  &.dropdown-menu.open,\n  .dropdown.open > &,\n  .dropdown.open > .dropdown-toggle &,\n  .dropdown.open > .dropdown-menu > & {\n    @slot;\n  }\n}\n```\nGenerated CSS:\n```\n.dropdown-open\\:opacity-100 {\n    &.dropdown-menu.open, \n    .dropdown.open > &, \n    .dropdown.open > .dropdown-toggle &, \n    .dropdown.open > .dropdown-menu > & {\n        opacity: 100%;\n    }\n}\n```\n\nI know this example is a bit complicated, but despite that, everything worked fine in the old version. I also noticed that previously, classes were generated separately, while now they are merged into one large rule.\n\nThere can be quite a lot of such custom variants in our project, and as a result, this significantly affects performance.\n\nMaybe I’m doing something wrong, and there’s a better way to define variants? If anyone has faced a similar issue, I’d really appreciate any help!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16175","RelatedDescription":"Closed issue \"[V4] Performance issue (@custom-variant)\" (#16175)"},{"Id":"2826160430","IsPullRequest":true,"CreatedAt":"2025-02-03T15:57:30","Actor":"depfu[bot]","Number":"16187","RawContent":null,"Title":"Update @parcel/watcher-linux-x64-glibc 2.5.0 → 2.5.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​parcel/watcher-linux-x64-glibc (2.5.0 → 2.5.1) · [Repo](https://github.com/parcel-bundler/watcher)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/parcel-bundler/watcher/releases/tag/v2.5.1\">2.5.1</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Handle large changes from FS Events better in getEventsSince - <a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/196\">#196</a>\n</li>\n<li>Fix use after free in kqueue backend</li>\n<li>fix: catch std:regex error - <a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/195\">#195</a>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@parcel%2Fwatcher-linux-x64-glibc/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/parcel-bundler/watcher/compare/0ed1564ca45bd28440b383bb2fbf9d8f2274e49b...664695dbb2488d53f782c3e2b8791c4c114731fb\">See the full diff on Github</a>. The new version differs by 9 commits:</p>\n<ul>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/664695dbb2488d53f782c3e2b8791c4c114731fb\"><code>v2.5.1</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/481284a8667468fadf8535e4e91f5dfd0d346092\"><code>fix: catch std:regex error (#195)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8496a2bcd809f8f3164c0b8a366743d3da981ec8\"><code>ignore wasm differences on linux</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/ab5da2fcccf43aec18bdff48317179a761c7900b\"><code>Fix use after free in kqueue backend</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/de6f13d3596436592081db53917f9d8329a629c9\"><code>Handle large changes from FS Events better in getEventsSince (#196)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/b49bc2d0ed390e6f554b18e7e4f06bb625a4927c\"><code>Add workflow_dispatch trigger to test workflow</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/a603f809f6ae9cd638ff25a7b544456d01eef79b\"><code>Copy files</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/f22db2ba074c745f5ea121f5869a4cc691878813\"><code>install git</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/6dc87112e100d2fe8486bd3c68c1a28e1e48a1da\"><code>Build updates</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16187","RelatedDescription":"Closed or merged PR \"Update @parcel/watcher-linux-x64-glibc 2.5.0 → 2.5.1 (patch)\" (#16187)"},{"Id":"2827841200","IsPullRequest":true,"CreatedAt":"2025-02-03T15:29:41","Actor":"RobinMalfait","Number":"16211","RawContent":null,"Title":"Only expose used CSS variables","State":"open","Body":"This PR only exposes used CSS variables.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16211","RelatedDescription":"Open PR \"Only expose used CSS variables\" (#16211)"},{"Id":"2827840002","IsPullRequest":true,"CreatedAt":"2025-02-03T15:29:12","Actor":"philipp-spiess","Number":"16210","RawContent":null,"Title":"Don't crash when setting JS theme value to `null`","State":"open","Body":"Closes #16035\r\n\r\nIn v3 it was possible to unset a specific color namespace by setting doing something like this:\r\n\r\n```js\r\nexport default {\r\n  theme: {\r\n    extend: {\r\n      colors: {\r\n        red: null,\r\n      },\r\n    },\r\n  },\r\n}\r\n```\r\n\r\nThis pattern would crash in v4 right now due to the theme access function not being able to work on the red property being a `null`. This PR fixes this crash.\r\n\r\nHowever it leaves the behavior as-is for now so that the red namespace _defined via CSS will still be accessible_. This is technically different from v3 but fixing this would be more work as we only allow unsetting top-level namespaces in the interop layer (via the non-`extend`-theme-object). I would recommend migrating to the v4 API for doing these partial namespace resets if you want to get rid of the defaults in v4:\r\n\r\n```css\r\n@theme {\r\n  --color-red-*: initial;\r\n}\r\n```\r\n\r\n## Test plan\r\n\r\nThe crash was mainly captured via the test in `compat/config.test.ts` but I've added two more tests across the different levels of abstractions so that it's clear what `null` should be doing.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16210","RelatedDescription":"Open PR \"Don't crash when setting JS theme value to `null`\" (#16210)"},{"Id":"2827794215","IsPullRequest":false,"CreatedAt":"2025-02-03T15:11:21","Actor":"kachkaev","Number":"16209","RawContent":null,"Title":"Types from `tailwindcss/types/config` are not available in v4","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntypescript 5.7.3, any framework\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nN/A\n\n**Reproduction URL**\n\nhttps://github.com/kachkaev/tailwind-v4-typings/pull/1\n\n↑ See `tsc` failure in CI (it passes on `main` for TailwindCSS v3)\n\n**Describe your issue**\n\nI am trying to upgrade a project from TailwindCSS v3 to v4. There is a custom `tailwind.config.ts` which is quite hard to migrate to a CSS file, at least in one go. I would like to keep using `tailwind.config.ts` but have trouble with this because of typings. This import path is no longer available:\n\n```ts\nimport type { PluginAPI, ThemeConfig } from \"tailwindcss/types/config\";\n```\n\nI understand that CSS config is preferred over the TS one, just looking for a practical way to upgrade. It’d be great to keep `tailwindcss/types/config` (or alike) available in v4. It can be removed in v5 if there is a plan to drop TS configs completely.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16209","RelatedDescription":"Open issue \"Types from `tailwindcss/types/config` are not available in v4\" (#16209)"},{"Id":"2825642543","IsPullRequest":true,"CreatedAt":"2025-02-03T14:16:15","Actor":"joulev","Number":"16169","RawContent":null,"Title":"Update upgrade CLI to handle `containers` config correctly","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nRight now, if you have\r\n\r\n```js\r\n{\r\n  containers: {\r\n    foo: \"1rem\",\r\n  },\r\n}\r\n```\r\n\r\nthe generated CSS will be\r\n\r\n```css\r\n@theme {\r\n  --containers-*: initial;\r\n  --containers-foo: 1rem;\r\n}\r\n```\r\n\r\nwhich is incorrect – it should be `container` not `containers`. Yes I spent a while thinking the Tailwind IntelliSense extension is not working, but in fact the extension is working fine and it's my CSS file that is invalid.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16169","RelatedDescription":"Closed or merged PR \"Update upgrade CLI to handle `containers` config correctly\" (#16169)"},{"Id":"2827406942","IsPullRequest":false,"CreatedAt":"2025-02-03T12:53:41","Actor":"Yang-Yus","Number":"16205","RawContent":null,"Title":"media query not work properly with theme variables","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite\n\n**What version of Node.js are you using?**\n\n20.12.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/aYjkwS7Og5\n\n**Describe your issue**\n\n```\n@theme {\n  --color-rose-500: #FFC8EF;\n  --breakpoint-sm: 40rem;\n}\n\n /* min-width: var(--breakpoint-sm) NOT WORKING */\n .container{\n  @media all and (min-width: var(--breakpoint-sm)) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16205","RelatedDescription":"Closed issue \"media query not work properly with theme variables\" (#16205)"},{"Id":"2827428655","IsPullRequest":true,"CreatedAt":"2025-02-03T12:51:52","Actor":"philipp-spiess","Number":"16206","RawContent":null,"Title":"Ensure first argument to `var(…)` still unescapes `\\_`","State":"open","Body":"Resolves #16170\r\n\r\nThis PR fixes an issue where the previously opted-out escaping of the first argument for the `var(…)` function was not unescaped at all. This was introduced in https://github.com/tailwindlabs/tailwindcss/pull/14776 where the intention was to not require escaping of underscores in the var function (e.g. `ml-[var(--spacing-1_5)]`). However, I do think it still makes sense to unescape an eventually escaped underline for consistency.\r\n\r\n## Test plan\r\n\r\nThe example from #1670 now parses as expected:\r\n\r\n<img width=\"904\" alt=\"Screenshot 2025-02-03 at 13 51 35\" src=\"https://github.com/user-attachments/assets/cac0f06e-37da-4dcb-a554-9606d144a8d5\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16206","RelatedDescription":"Open PR \"Ensure first argument to `var(…)` still unescapes `\\_`\" (#16206)"},{"Id":"2827230021","IsPullRequest":true,"CreatedAt":"2025-02-03T11:22:58","Actor":"RobinMalfait","Number":"16203","RawContent":null,"Title":"Ensure `@import url(…)` is hoisted","State":"open","Body":"This PR fixes an issue where if you use `@import url(…);` _after_ the `@import \"tailwindcss\";`, then invalid CSS is being generated.\r\n\r\nThis is because the `@import \"tailwindcss\";` directive is being replaced with the actual generated CSS variables, utilities, etc. but the `@import url(…);` is kept as-is (Tailwind CSS doesn't handle these). This means that in the final CSS the `@import url(…)` could be in the middle of the generated CSS which is invalid.\r\n\r\n```css\r\n/* Invalid: */\r\n@import \"tailwindcss\";\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n```\r\n\r\n```css\r\n/* Valid: */\r\n@import \"tailwindcss\";\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n```\r\n\r\nWhile the above examples should both work from a CSS perspective, this PR makes sure to hoist the `@import url(…);` rules. All non-external imports will be inlined already.\r\n\r\nOnce this PR is merged, both these situations are valid:\r\n```css\r\n/* Valid: */\r\n@import \"tailwindcss\";\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n```\r\n\r\n```css\r\n/* Valid: */\r\n@import \"tailwindcss\";\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n```\r\n\r\nIn order to do this correctly, we also have to make sure that the license comment and `@charset` is in the correct spot.\r\n\r\n### Test plan\r\n\r\n- Added a simple unit test\r\n- Added an integration test\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16203","RelatedDescription":"Open PR \"Ensure `@import url(…)` is hoisted\" (#16203)"},{"Id":"2826292119","IsPullRequest":false,"CreatedAt":"2025-02-03T11:21:24","Actor":"NoahStahl","Number":"16188","RawContent":null,"Title":"\"Invalid declaration\" error when import has semicolon","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n`v4.0.3`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`@tailwindcss/cli 4.0.3`\n\n**What version of Node.js are you using?**\n\n`v22.13.1`\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\nFollowing the installation instructions [docs for CLI](https://tailwindcss.com/docs/installation/tailwind-cli), step two is to create a css file with content:\n\n`@import \"tailwindcss\";`\n\nWhen I do this an run the build command in step 3, it fails with error:\n\n```\nError: Invalid declaration: `@import \"tailwindcss\"`\n```\n\nHowever, when I remove the semicolon on the import line, build succeeds. This avoids the error:\n\n`@import \"tailwindcss\"`\n\n** Expected  behavior **\n\nThe semicolon should be optional, or the CLI should not fail when it is provided as documented.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16188","RelatedDescription":"Closed issue \"\"Invalid declaration\" error when import has semicolon\" (#16188)"},{"Id":"2827119104","IsPullRequest":false,"CreatedAt":"2025-02-03T11:20:49","Actor":"Kaizer228","Number":"16197","RawContent":null,"Title":"please fix bg-opacity is not working. im using latest tailwind","State":"closed","Body":" is use latest tailwind and bg-opacity is not working in latest version","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16197","RelatedDescription":"Closed issue \"please fix bg-opacity is not working. im using latest tailwind\" (#16197)"},{"Id":"2827175647","IsPullRequest":false,"CreatedAt":"2025-02-03T11:18:36","Actor":"Minhajkarim","Number":"16200","RawContent":null,"Title":"Fix Conflict in Tailwind CSS 4 with React 19 and PostCSS ","State":"closed","Body":" \nDear Tailwind CSS Team,  \n\nI am experiencing a **build failure** when using Tailwind CSS 4 with **React 19 and PostCSS**. The error message indicates that `tailwindcss` should not be used directly as a PostCSS plugin and suggests installing `@tailwindcss/postcss`. However, no such package exists, and following previous PostCSS setup instructions does not resolve the issue.  \n\nSteps to Reproduce:  \n1. Install Tailwind CSS 4, PostCSS, and Autoprefixer in a React 19 project:  \n   ```bash\n   npm install -D tailwindcss@latest postcss@latest autoprefixer@latest\n   ```  \n2. Run `npx tailwindcss init -p`.  \n3. Start the development server (`npm start`).  \n\nExpected Behavior:\nTailwind CSS should compile without errors and work seamlessly with PostCSS.  \n\nActual Behavior:\nThe build fails with a PostCSS-related error, preventing the project from running.  \n\nCould you please look into this issue and provide a fix or guidance on how to resolve it? Many developers are encountering this problem, and a resolution would be greatly appreciated.  \n\nThank you for your amazing work on Tailwind! 🚀  \n\nBest regards,  \nMinhaj  ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16200","RelatedDescription":"Closed issue \"Fix Conflict in Tailwind CSS 4 with React 19 and PostCSS \" (#16200)"},{"Id":"2826901778","IsPullRequest":false,"CreatedAt":"2025-02-03T10:26:20","Actor":"NATNgoc","Number":"16193","RawContent":null,"Title":"Max-w-[*] not working after extracting to another file","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.6\n\n**What version of Node.js are you using?**\n\nFor example: v22.11.0\n\n**What browser are you using?**\n\nFor example: Brave\n\n**What operating system are you using?**\n\nWindows\n\n**Link repo URL**: https://github.com/NATNgoc/-Ticket-Bounty-ShadcnUI\n\n\n**Describe your issue**\n\nI decided to extract the component to another file instead of in page.tsx, but max-w-[450px] at ticketItem.tsx not working after extracting.\nI attempt to copy my entire component in the page.tsx, it work but not work for extracting\n\nThose mentioned files:\n- @/tickets/page.tsx\n- @/features/ticket/component/ticketItem.tsx\n\n\n![Image](https://github.com/user-attachments/assets/46e606dc-4274-487d-8d47-2c6332bf3f99)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16193","RelatedDescription":"Closed issue \"Max-w-[*] not working after extracting to another file\" (#16193)"},{"Id":"2825829456","IsPullRequest":false,"CreatedAt":"2025-02-03T08:06:31","Actor":"immrjark","Number":"16174","RawContent":null,"Title":"Problems with V4 in Production vs. Development styles.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nI'm using the latest, v4.0.3 -> \"tailwindcss\": \"^4.0.3\" & \"@tailwindcss/vite\": \"^4.0.3\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nI'm using Astro Framework with its last version \"astro\": \"^5.2.3\", with React: \"react\": \"^19.0.0\", Tailwind: \"@tailwindcss/vite\": \"^4.0.3\" & \"tailwindcss\": \"^4.0.3\" & Vercel: \"@astrojs/vercel\": \"^8.0.5\".\n\n**What version of PNPM are you using?**\n\nI'm using pnpm version 8.7.4 and the Node version is v22.12.0.\n\n**What browser are you using?**\n\nI'm using Chrome for running my code in production and development but it works equally in Brave.\n\n**What operating system are you using?**\n\nmacOS.\n\n**Reproduction URL**\n\nHere is the Play Tailwind URL: [https://play.tailwindcss.com/M5wpML6IAv](https://play.tailwindcss.com/M5wpML6IAv)\nHere is my open source repository: [https://github.com/immrjark/mrjark-dot-com](https://github.com/immrjark/mrjark-dot-com)\nAnd here is my website: [https://mrjark.com](https://mrjark.com)\n\n**Describe your issue**\n\nThe problems are as shown in the images below. The tailwind code does not match in production vs. in development.\n\nIn production the screen styles and React button functionalities, which used to work perfectly with the v3 version of tailwind, now don't work as I expect.\n\nAnd the only change I made in my repository was to upgrade to tailwind v4.\n\n![Image](https://github.com/user-attachments/assets/5f6ca3c6-2e5b-43e6-8f7c-da1743302e8f)\n\n![Image](https://github.com/user-attachments/assets/0b71db16-e00f-46f7-99e4-1b32e7574cdf)\n\n![Image](https://github.com/user-attachments/assets/1128b52c-a945-458c-8c7a-9c8ce824c054)\n\n![Image](https://github.com/user-attachments/assets/01b7973d-9577-4d00-9af7-67ecce83e21e)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16174","RelatedDescription":"Closed issue \"Problems with V4 in Production vs. Development styles.\" (#16174)"},{"Id":"2826660630","IsPullRequest":false,"CreatedAt":"2025-02-03T07:57:08","Actor":"killoblanco","Number":"16192","RawContent":null,"Title":"v4 Custom @keyframes are not working when imported","State":"closed","Body":"CSS custom @keyframes are not being populated when they are imported from other files.\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/vite@4.0.3\n\n**What version of Node.js are you using?**\n\nv23.6.0\n\n**What browser are you using?**\n\nChrome, Safari\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction**\n\n```css\n/* main.css */\n@import \"tailwindcss\";\n@import \"./animation.css\";\n```\n\n```css\n/* animation.css */\n@theme {\n  --animate-fade-in: fade-in 0.6s ease-in;\n\n  @keyframes fade-in {\n    0%: {\n      opacity: 0;\n    }\n\n    100%: {\n      opacity: 1;\n    }\n  }\n}\n```\n\n**Describe your issue**\n\nI'm building an animation like plugin for tw v4. The animation name and class are being populated as expected but the animation is not loaded by the browser even tho when the css is there.\n\n<img width=\"273\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e09776e2-dbc8-4300-b04e-92bd1efb6cbc\" />\n<br /><br />\n\n<img width=\"295\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f31d34a4-d80b-4e30-a854-cb5912cbab15\" />\n<br /><br />\n\n<img width=\"219\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/de54e5b6-40f1-4444-a8bd-9519e6f2e661\" />\n<br /><br />\n\n<img width=\"418\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c8aee8cc-a76f-442d-9630-33a9efd849fc\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16192","RelatedDescription":"Closed issue \"v4 Custom @keyframes are not working when imported\" (#16192)"},{"Id":"2826350984","IsPullRequest":false,"CreatedAt":"2025-02-03T04:11:43","Actor":"andrewrauber","Number":"16189","RawContent":null,"Title":"[v4] Class within square brackets [] is ignored","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind-cli\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\nI have a Blazor project where some classes are in c#.\nThis works fine and generates the correct output, except for a specific case where my classes are wrapped in square braces.\nThe following code doesn't generate the expected gap-y-4, gap-y-6, and gap-y-8 classes in the output.\n\n```\npublic enum StackSpacing\n{\n    [CssClass(\"gap-y-4\")]\n    Small,\n    [CssClass(\"gap-y-6\")]\n    Medium,\n    [CssClass(\"gap-y-8\")]\n    Large\n}\n```\n\nIf I remove the square brackets, then the expected classes are generated in the output.\nIf I put a space between the opening bracket ( [ ) and CssClass, then also the expected classes are generated in the output.\nIf I change the word \"CssClass\" to be lowercase, then also the expected classes are generated in the output.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16189","RelatedDescription":"Open issue \"[v4] Class within square brackets [] is ignored\" (#16189)"},{"Id":"2825975633","IsPullRequest":false,"CreatedAt":"2025-02-02T21:56:13","Actor":"WesselvanDam","Number":"16181","RawContent":null,"Title":"Modifiers with custom CSS classes not working","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli: ^4.0.0 with Hugo\n\n**What version of Node.js are you using?**\n\nv18.13.0\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\n[Tailwind Play](https://play.tailwindcss.com/lkRt3XXXUP)\n\n**Describe your issue**\n\nAccording to the [3.4.17 docs](https://v3.tailwindcss.com/docs/adding-custom-styles#using-modifiers-with-custom-css):\n\n> \"Any custom styles you add to Tailwind with @layer will automatically support Tailwind’s modifier syntax for handling things like hover states, responsive breakpoints, dark mode, and more.\"\n\nThe Tailwind Play link above showcases an issue I am encountering that doesn't quite match with this statement. My `*:data-markdown:` modifier works as expected with Tailwind's own classes like `text-blue-500`, but not for my custom `markdown-blue`. Is my configuration incorrect? Although the page does not have an equivalent in the V4 docs, my Play code doesn't work when selecting 3.4.17 either.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16181","RelatedDescription":"Closed issue \"Modifiers with custom CSS classes not working\" (#16181)"},{"Id":"2825834689","IsPullRequest":false,"CreatedAt":"2025-02-02T21:24:35","Actor":"immrjark","Number":"16176","RawContent":null,"Title":"Problems with tailwind v4 in production vs. in development","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nI'm using \"tailwindcss\": \"^4.0.3\" & \"@tailwindcss/vite\": \"^4.0.3\". The latest version.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nI'm using Astro framework, \"astro\": \"^5.2.3\", with React, \"react\": \"^19.0.0\", \"react-dom\": \"^19.0.0\", Vercel: \"@astrojs/vercel\": \"^8.0.5\" & Tailwind Typography Pluging: \"@tailwindcss/typography\": \"^0.5.16\"\n\n**What version of Node.js are you using?**\n\nI'm using PNPM, 8.7.4 version & v22.12.0 Node.js version\n\n**What browser are you using?**\n\nAs browser I am using Chrome but I have the same problem in Brave and Safari.\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nPlay tailwind URL: [https://play.tailwindcss.com/M5wpML6IAv](https://play.tailwindcss.com/M5wpML6IAv)\n\nMy open source repository: [https://github.com/immrjark/mrjark-dot-com](https://github.com/immrjark/mrjark-dot-com)\nMy website: [https://mrjark.com](https://mrjark.com)\n\n**Describe your issue**\n\nThe problems are as shown in the images below. The Tailwind code is not the same in production and in development.\n\nIn production, the screen styles and react button functionality that worked perfectly with the v3 version of Tailwind don't work as I expected.\n\nAnd the only change I made in my repository was to upgrade to Tailwind v4.\n\nSome images of the errors:\n\n![Image](https://github.com/user-attachments/assets/8a25b5ed-0cfd-46a5-9604-5d6c4ef12939)\n\n![Image](https://github.com/user-attachments/assets/295c4556-77e4-43e3-a9a5-858eafb3a6e4)\n\n![Image](https://github.com/user-attachments/assets/8fe08354-8b03-4417-856b-f03c56985322)\n\n![Image](https://github.com/user-attachments/assets/7912e848-3418-4623-8964-fa5fc1e77550)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16176","RelatedDescription":"Closed issue \"Problems with tailwind v4 in production vs. in development\" (#16176)"},{"Id":"2825720062","IsPullRequest":false,"CreatedAt":"2025-02-02T10:14:59","Actor":"fiws","Number":"16171","RawContent":null,"Title":"[v4] upgrade does not work for dark mode variant with media query","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What version of Node.js are you using?**\n\nv23.7.0\n\n**What operating system are you using?**\n\nArch Linux\n\n**Reproduction URL**\n\nhttps://github.com/fiws/tailwind-issue-f1\n\n**Describe your issue**\n\nAfter running `npx @tailwindcss/upgrade@next`, my \"dark\" theme config in the old tailwind.config.js was transformed into `@custom-variant dark (@media not print { .dark & });` this does not work and appears to be invalid syntax. See below for details:\n\n### before\n\nhttps://github.com/fiws/tailwind-issue-f1/blob/676604340b5ad3ef2384ea86ab79d755a82dfb40/tailwind.config.js#L7\n\n```ts\n// tailwind.config.js\ndarkMode: [\"variant\", \"@media not print { .dark & }\"],\n```\n\n![Image](https://github.com/user-attachments/assets/ac7a432a-32cd-410e-8959-7a755de023eb)\n\n\n### after\n\nhttps://github.com/fiws/tailwind-issue-f1/blob/main/src/index.css#L3\n\n```css\n@custom-variant dark (@media not print { .dark & });\n```\n\n![Image](https://github.com/user-attachments/assets/67e3a405-eebb-45aa-a9fb-2536f2750034)\n\n![Image](https://github.com/user-attachments/assets/5148f7e3-7f8f-4396-8c2b-639f1411a977)\n\n--- \n\nI also have no idea what to correct syntax is..","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16171","RelatedDescription":"Open issue \"[v4] upgrade does not work for dark mode variant with media query\" (#16171)"},{"Id":"2825694668","IsPullRequest":false,"CreatedAt":"2025-02-02T09:11:52","Actor":"ony3000","Number":"16170","RawContent":null,"Title":"[v4] Inconsistent underscore","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.0.5\n\n**What version of Node.js are you using?**\n\nv18.18.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWSL\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/hmN4T4wuta\n\n**Describe your issue**\n\nHi! I'm writing a React component library that styles Joy UI components the Tailwind CSS way.\n\nSince the existing library was written to integrate with Tailwind CSS v3, I felt the need to guide how to integrate with v4, but I found some inconsistencies in the CSS build results, so I'm reporting the issue.\n\nPlease check the generated utility class in the attached playground link.\n\nThe first two classes (`h-[var(--\\_root-size)]` and `text-[calc(0.2*var(--\\_root-size))]`) both use `var(--\\_root-size)` as an arbitrary value, but in the build output one refers to `--\\_root-size`, while the other refers to `--_root-size`.\n\nWhen I first noticed this difference, I suspected it had to do with the presence of `calc`, but in the case of the third class, the backslash remains even though `calc` and `var` are nested, unlike in the second class.\n\nThe last class is a bit more unusual, as even the two `--\\_LinearProgress-padding`s written within one class differ in the presence or absence of backslashes in the build output.\n\nIt would be nice if the presence or absence of backslashes were consistent in build results.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16170","RelatedDescription":"Open issue \"[v4] Inconsistent underscore\" (#16170)"},{"Id":"2825477378","IsPullRequest":false,"CreatedAt":"2025-02-01T22:34:36","Actor":"MattIPv4","Number":"16165","RawContent":null,"Title":"[v4] order-first/last not working in Firefox","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nN/A\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/ouC5jv8TNd\n\n**Describe your issue**\n\nIn Firefox this renders as `lastfirst`. In Chrome this renders as `firstlast`. It would appear the the `infinity` values (locally they seem to become `2147483648`) being used don't play ball with Firefox?\n\nIn v3 these used `9999` as their value, which worked.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16165","RelatedDescription":"Open issue \"[v4] order-first/last not working in Firefox\" (#16165)"},{"Id":"2825464084","IsPullRequest":false,"CreatedAt":"2025-02-01T22:05:19","Actor":"RomainMazB","Number":"16164","RawContent":null,"Title":"Multiple @source in the same directory doesn't load all sources","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: laravel-mix 6.0.49\n\n**What version of Node.js are you using?**\n\nFor example: v12.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Describe your issue**\nWorking with Vue & Laravel, I wanted to load classes from the js directory and the views one as well: \n```postcss\n@import 'tailwindcss' source(none);\n@source '../js'\n@source '../views'\n```\n\nThis actually doesn't work as expected, no matter which order I chose, only the classes contained in the views directory are analyzed.\n\nThat said, this undocumented config works:\n```postcss\n@import \"tailwindcss\" source(none);\n@source '../{js,views}'\n```\n\nBut I suspect that [the one mentioned in the documentation](https://tailwindcss.com/docs/detecting-classes-in-source-files#disabling-automatic-detection) isn't working if used in a project:\n```postcss\n@import \"tailwindcss\" source(none);\n@source \"../admin\";\n@source \"../shared\";\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16164","RelatedDescription":"Open issue \"Multiple @source in the same directory doesn't load all sources\" (#16164)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-04T03:30:26.5565977Z","RunDurationInMilliseconds":479}