{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2912368822","IsPullRequest":false,"CreatedAt":"2025-03-12T01:56:40","Actor":"nstephenh","Number":"17138","RawContent":null,"Title":"Safari not interpreting var for text opacity, Links defaulting to black","State":"open","Body":"\n**What version of Tailwind CSS are you using?**\n\nv3.3.2\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n```\n       \"laravel-mix\": \"^6.0.30\",\n        \"postcss-cli\": \"^8.3.1\",\n        \"postcss-import\": \"^14.0.0\",\n        \"webpack\": \"^5.94.0\"\n```\n\n**What version of Node.js are you using?**\n\nv18.18.0\n\n**What browser are you using?**\n\nSafari (I don't own a mac but these are the bug reports I'm getting)\n\n**What operating system are you using?**\n\nmacOS, IOS\n\n**Reproduction URL**\n\nI don't have that, but I do have the generated CSS:\n```\na:not(.unstyled):active {\n--tw-text-opacity: 1;\n  color: rgb(182 132 235/var(--tw-text-opacity));\n}\n```\n\n**Describe your issue**\n\nThe above generated CSS is not interpreted by safari. I am not using the text-opacity plugin, and disabling it should hopefully solve my problem by creating proper css.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17138","RelatedDescription":"Open issue \"Safari not interpreting var for text opacity, Links defaulting to black\" (#17138)"},{"Id":"2911553722","IsPullRequest":true,"CreatedAt":"2025-03-11T18:49:13","Actor":"thecrypticace","Number":"17134","RawContent":null,"Title":"Add `mask-*` utilities for `mask-image`, `mask-composite`, etc…","State":"open","Body":"This PR adds `mask-*` utilities for `mask-image`, `mask-composite`, `mask-mode`, and other related CSS properties. Note that it does **NOT** add support for `mask-border-*` properties.\r\n\r\n**This is very much a work in progress.**\r\n\r\nHere's an example of using these utilities:\r\n```html\r\n<div class=\"flex h-dvh w-dvw items-center justify-center gap-4\">\r\n  <div class=\"relative rounded bg-orange-50 p-12\">\r\n    <div class=\"rounded shadow-lg ring-1 shadow-rose-700/25 ring-orange-600/15\">\r\n      <div class=\"size-32 rounded bg-linear-to-b from-orange-300 from-33% to-rose-600 mask-conic-60 mask-from-black/100 mask-to-black/0 mask-to-75% mask-alpha inset-ring-1 inset-ring-orange-100/50\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"relative rounded bg-orange-50 p-12\">\r\n    <div class=\"size-32 rounded bg-linear-to-b from-orange-300 from-33% to-rose-600 mask-[url(#heart)] mask-luminance mask-[size:100%] mask-no-repeat text-white inset-ring-1 inset-ring-orange-100/50\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Aut temporibus adipisci impedit assumenda! Natus facere iste alias necessitatibus quos blanditiis, minima quidem repellat porro voluptatum provident et eius. Nobis, error?</div>\r\n  </div>\r\n\r\n  <div class=\"relative rounded bg-orange-50 p-12\">\r\n    <div class=\"size-32 rounded bg-linear-to-b from-orange-300 from-33% to-rose-600 mask-[url(https://mdn.github.io/shared-assets/images/examples/mask-star.svg)] mask-[size:100%] mask-no-repeat text-white inset-ring-1 inset-ring-orange-100/50\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Aut temporibus adipisci impedit assumenda! Natus facere iste alias necessitatibus quos blanditiis, minima quidem repellat porro voluptatum provident et eius. Nobis, error?</div>\r\n  </div>\r\n</div>\r\n\r\n<svg viewBox=\"0 0 100 100\">\r\n  <mask id=\"heart\" width=\"100\" height=\"100\">\r\n    <!-- Make everything visible by default -->\r\n    <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"white\" />\r\n    <!-- Cut out a heart-shaped path in the lement -->\r\n    <path d=\"M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z\" fill=\"black\" />\r\n  </mask>\r\n</svg>\r\n```\r\n\r\nand what it looks like in the browser:\r\n\r\n<img width=\"787\" alt=\"Screenshot 2025-03-11 at 14 48 37\" src=\"https://github.com/user-attachments/assets/ff4053c0-6c2f-4a01-9e5b-0bb2ed879346\" />\r\n\r\nHere you can clearly see the background color bleeds through the element, content inside is cut out, etc…\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17134","RelatedDescription":"Open PR \"Add `mask-*` utilities for `mask-image`, `mask-composite`, etc…\" (#17134)"},{"Id":"2911382201","IsPullRequest":false,"CreatedAt":"2025-03-11T17:44:39","Actor":"TrySpace","Number":"17133","RawContent":null,"Title":"Imported components' classes purged from tailwind regardless of tailwind.config settings. (nextjs)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n  \"tailwindcss\": \"^4.0.12\",\n \"@tailwindcss/postcss\": \"^4.0.12\",\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n \"next\": \"^15.2.0\",\n\n**What version of Node.js are you using?**\n\nv20.18.3\n\n**What browser are you using?**\n\nChromium 134.0.6998.45\n\n**What operating system are you using?**\n\nWindows 10\n\n**Reproduction URL**\n\nCan't provide reproduction because the project structure is unique to the problem\n\n**Describe your issue**\n\nMy project structure is as follows\n\nsrc/ -- Main Project with own package.json & config\nsrc/server/ -- Nextjs Subproject with own package.json & configs\n\nIn my nextjs project tailwind works, but I also import components from the Main project.\n\nMy tailwind.config: \n\n```ts\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: {\n    relative: true,\n    files: [\n      './app/**/*.{js,ts,jsx,tsx}',\n      '../src/**/*.{js,ts,jsx,tsx}',\n    ],\n  },\n  prefix: '',\n}\n```\n\nAnd I import it via global.css as per the new v4 @config:\n```css\n@config \"../../tailwind.config.js\";\n```\n\nAnd I import my components via tsconfig.json aliases: \n\n```ts\n  \"paths\": {\n      \"@Components*\": [\"./../components/*\"],\n    ...\n}\n```\n\nBut the imported component seem to get their styles purged, and tailwind classes don't work on them...","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17133","RelatedDescription":"Closed issue \"Imported components' classes purged from tailwind regardless of tailwind.config settings. (nextjs)\" (#17133)"},{"Id":"2911239923","IsPullRequest":true,"CreatedAt":"2025-03-11T16:58:55","Actor":"RobinMalfait","Number":"17132","RawContent":null,"Title":"Prepare release 4.0.13","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17132","RelatedDescription":"Closed or merged PR \"Prepare release 4.0.13\" (#17132)"},{"Id":"2908182066","IsPullRequest":true,"CreatedAt":"2025-03-11T16:53:16","Actor":"RobinMalfait","Number":"17113","RawContent":null,"Title":"Improve candidate extraction when candidates contain `.` characters","State":"closed","Body":"This PR fixes an issue where some classes weren't properly extracted due to some incorrect assumptions in the pre processors.\r\n\r\nTemplating languages such as Haml, Slim and Pug allow you to write classes in a shorter way that are not properly contained inside of strings. E.g.:\r\n```slim\r\np.flex.px-2\r\n```\r\n\r\nThese candidates are not properly extracted because there are no bounding characters like quotes. To solve this, we pre-process it and replace `.` with ` ` characters. This results in something like:\r\n```\r\np flex px-2\r\n```\r\n\r\nHowever, this has some challenges on its own. Candidates like `px-2.5` cannot be written in this shorthand form, instead they need to be in strings. Now we _cannot_ replace the `.` because otherwise we would change `px-2.5` to `px-2 5` which is wrong.\r\n\r\nThe next problem is that we need to know when they are in a \"string\". This has another set of problems because these templating languages allow you to write normal text that will eventually be the contents of the HTML tags.\r\n\r\n```haml\r\n.text-red-500.text-3xl\r\n  | This text can't should be red\r\n                 ^ Wait, is this the start of a string now???\r\n```\r\n\r\nIn this example, if we consider the `'` the start of a string, when it's clearly not, how would we know it's for _sure_ not a string?\r\n\r\nThis ended up as a bit of a rabbit hole, but we came up with another approach entirely if we think about the original problem we want to solve which is when do we change `.` to ` ` characters.\r\n\r\nOne of the rules in our current extractor is that a `.` has to be between 2 numbers. Which works great in a scenario like: `px-2.5`. However, if you look at Haml or Slim syntax, this is also allowed:\r\n\r\n```slim\r\np.bg-red-500.2xl:flex\r\n           ^^^ Uh oh...\r\n```\r\n\r\nIn this scenario, a `.` is surrounded by numbers so we shouldn't replace it with a space. But as you can see, we clearly do... so we need another heuristic in this case.\r\n\r\nLuckily, one of the rules in Tailwind CSS is that a utility cannot start with a number, but a variant _can_. This means that if we see a scenario like `<digit>.<digit>` then we can just check if the value after the `.` is a valid variant or not.\r\n\r\nIn this case it is a valid variant so we _do_ want to replace the `.` with a ` ` even though we do have the `<digit>.<digit>` format.\r\n\r\n🥴\r\n\r\n# Test plan\r\n\r\n1. Added additional tests.\r\n2. Existing tests still pass\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17113","RelatedDescription":"Closed or merged PR \"Improve candidate extraction when candidates contain `.` characters\" (#17113)"},{"Id":"2911219358","IsPullRequest":false,"CreatedAt":"2025-03-11T16:41:43","Actor":"briankintz","Number":"17131","RawContent":null,"Title":"Broken gradient transitions on Safari","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.1\n\n**What version of Node.js are you using?**\n\nv22.12\n\n**What browser are you using?**\n\nSafari v18.3\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/KpmUhZuDEn\n\n**Describe your issue**\n\nI'm transitioning the background of an element to a gradient on hover by setting the following on my element:\n\n`hover:from-sky-300 hover:to-indigo-500 hover:bg-gradient-to-r`\n\nThis *mostly* works fine, but the following combination causes the size of the element to glitch and cause a series of layout shifts:\n\n* Safari\n* Text size != 1rem (eg. `text-sm` or `text-xl`)\n* `hover:from-* hover:to-*`\n* `transition-colors`\n\nRemoving any one of those fixes the issue.\n\nI created the same basic setup in CSS, which worked as expected:\n\nhttps://jsfiddle.net/Lfse3195/2/\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17131","RelatedDescription":"Open issue \"Broken gradient transitions on Safari\" (#17131)"},{"Id":"2910770487","IsPullRequest":false,"CreatedAt":"2025-03-11T16:40:25","Actor":"mhornbacher","Number":"17128","RawContent":null,"Title":"Bug: [url] in typescript comments causing Unclosed block errors","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n@tailwindcss/postcss v4.0.10+\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.2\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/mhornbacher/tailwind-repro\n\n**Details**\nSince version 4.0.10, `/**/` style comments in `.ts` files containing `[url]` syntax generate the following build error:\n\n```\nHookWebpackError: /Users/menachem/dev/bugs/tailwind-repro/static/css/299a46ed717ed6dc.css:46:4146: Unclosed block\n```\n\nFor instance, adding a file like this anywhere in the source code triggers a crash that is challenging to debug:\n\n```\n// junk.ts\n/* \n  add a url here [https://github.com/arasatasaygin/is.js]\n*/\nexport function junk() {\n  return 1 + 1;\n}\n```\n\nTo identify this issue, it is recommended to utilize the `@tailwindcss/cli` to generate an output and subsequently search it for the URL.\n\nThe commit that appears most relevant to this issue is: https://github.com/tailwindlabs/tailwindcss/commit/b3c25563b7bf9c9908352523f4fa2c795d06e075","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17128","RelatedDescription":"Closed issue \"Bug: [url] in typescript comments causing Unclosed block errors\" (#17128)"},{"Id":"2910872927","IsPullRequest":true,"CreatedAt":"2025-03-11T16:40:24","Actor":"philipp-spiess","Number":"17129","RawContent":null,"Title":"Don't extract links as arbitrary properties","State":"closed","Body":"Closes #17128\r\n\r\nThis PR prevents extraction of links inside square brackets as valid candidate:\r\n\r\n```\r\n[https://example/]\r\n```\r\n\r\nWe do this by throwing out arbitrary properties when the value starts with a slash (`/`).\r\n\r\n## Test plan\r\n\r\n- Added unit test","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17129","RelatedDescription":"Closed or merged PR \"Don't extract links as arbitrary properties\" (#17129)"},{"Id":"2910955456","IsPullRequest":false,"CreatedAt":"2025-03-11T15:21:29","Actor":"Kcko","Number":"17130","RawContent":null,"Title":"Css variable dont work with ring","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nVite 5.4.x\n\n**What version of Node.js are you using?**\nv14.21.3\n\n\n**What browser are you using?**\nChrome (whatever)\n\n**What operating system are you using?**\nWindows 11\n\n**Reproduction URL**\nPrivate project (sorry)\n\n\n**Describe your issue**\n\n**screen.scss**\n```\n@layer base {\n  // MSP\n  :root {\n    --primary-color: #ba0c2f; /* #ba0c2f */\n  }\n\n  // GLOBUS\n  :root.GLOBUS {\n    --primary-color: #e87721;\n  }\n}\n```\n\ntailwind.config.js \n...\n```\ncolors: {\n  'msp-red': 'var(--primary-color)', // '#ba0c2f',\n}\n```\n\nUsage in HTML / latte file \n```\n<div class=\"bg-msp-red\"></div> // BG is really red from --primary-color\n<div class=\"ring-4 ring-[--primary-color]\" />  // light version of blue\n<div class=\"ring-4 ring-[var(--primary-color)]\" />  // light version of blue\n<div class=\"ring-4 ring-msp-red\" />  //  red, works! but i need opacity, see next line\n<div class=\"ring-4 ring-msp-red/30\" />  //  light version of blue ???\n```\n\nHow to handle it? I migrate project from V2 to V3 and my previous code stopped working \n```\n<div class=\"ring-msp-red ring-opacity-30\"></div>\n```\n\n:(\n\nScreenshot: ![](https://is.gd/bgpQIl)\n\n\nThx for help.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17130","RelatedDescription":"Open issue \"Css variable dont work with ring\" (#17130)"},{"Id":"2910298033","IsPullRequest":true,"CreatedAt":"2025-03-11T12:15:48","Actor":"RobinMalfait","Number":"17125","RawContent":null,"Title":"Add `JSON` pre-processor","State":"closed","Body":"This PR adds a small JSON pre processor to improve parsing JSON files. This is because the extractor creates \"sub machines\" whenever it encounters a `[` or a `{` in the input. We do this because of things like `%w[…]` strings in Ruby or `className={clsx({flex: true})}` in JSX.\r\n\r\nDue to the sheer amount of potential `[` and `]` brackets, it could be that parsing JSON files are way slower than they need to be.\r\n\r\nTo tackle this, after this PR, when given an input like this:\r\n```\r\n[1,[2,[3,4,[\"flex flex-1 content-['hello_world']\"]]], {\"flex\": true}]\r\n```\r\n\r\nWe'll preprocess all the _important_ brackets and braces by replacing them with spaces so the extractor doesn't need special casing:\r\n```\r\n1, 2, 3,4, \"flex flex-1 content-['hello_world']\" , \"flex\": true\r\n```\r\n\r\nWe saw this while debugging this issue: https://github.com/tailwindlabs/tailwindcss/issues/17092\r\n\r\n\r\n# Test plan\r\n\r\n1. Added test to verify the pre processing works\r\n2. Existing tests still pass\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17125","RelatedDescription":"Closed or merged PR \"Add `JSON` pre-processor\" (#17125)"},{"Id":"2905583248","IsPullRequest":false,"CreatedAt":"2025-03-11T12:05:53","Actor":"silverbackdan","Number":"17092","RawContent":null,"Title":"[Bug][4.0.10 - 4.0.12] Very Slow Vercel CLI builds (30mins+) with Nuxt/Vite project using Tailwind >= 4.0.10","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: >= 4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNuxt 3.16.0 with Vite 6.2.1\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\nPNPM 10.6.1\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nVercel\n\n**Reproduction URL**\n\nA brand new Nuxt project setup as specified in docs. The issue is builds locally are absolutely fine. It's building within Vercel for these versions which has increased from ~1minute to 30mins+\n\nThere is a step in the Nuxt build script which says 'transforming' where I believe esbuild is transforming modules.\n\nThis happens twice in the build process, once for client, once for server. Each one takes around 15 minutes.\n\nAny ideas?\n\nI understand you'll ask for a reproduction, I totally get this and would usually try, but it'll build fine in regular environments, I'm happy to create a dummy repo if you have ability to deploy in Vercel or have ideas on what can cause this otherwise? Minimal reproduction is a basic Nuxt all with tailwind installed as docs show. Nothing else.\n\n**Describe your issue**\n\nI've had to use Tailwind v4.0.9 which is the latest version where the build is still nice and fast. What were the changes to 4.0.10 which may have caused such a slowdown in some environments?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17092","RelatedDescription":"Closed issue \"[Bug][4.0.10 - 4.0.12] Very Slow Vercel CLI builds (30mins+) with Nuxt/Vite project using Tailwind >= 4.0.10\" (#17092)"},{"Id":"2910077281","IsPullRequest":true,"CreatedAt":"2025-03-11T12:05:51","Actor":"philipp-spiess","Number":"17123","RawContent":null,"Title":"Add `.node` and `.wasm` to known binary file list","State":"closed","Body":"Closes #17092\r\n\r\nAfter a lot of spelunking we found one specific reason for the very slow builds in the repro from #17092: Turns our we are needlessly scanning the binary `.node` extension for class names 😬. This PR adds `.wasm` and `.node` to the list of known binary extensions.\r\n\r\n## Test plan\r\n\r\n - Check out the repro from `#17092`\r\n - Delete the `.gitignore` file\r\n - Observe that builds are very slow (`527.79s`)\r\n - Add a _pnpm override_ to load local versions of Oxide\r\n - `pnpm build` now completes in ~50s","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17123","RelatedDescription":"Closed or merged PR \"Add `.node` and `.wasm` to known binary file list\" (#17123)"},{"Id":"2910183474","IsPullRequest":false,"CreatedAt":"2025-03-11T11:33:17","Actor":"Henrique0305","Number":"17124","RawContent":null,"Title":"Compatibility issue with hardcoded styles.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\nThere's a breaking change related to the new Tailwind V4 and custom font sizes. The issue is: adding a custom font size for example: `text-[12px]` , is converted to `font-size: 12px !important`, but when we add the `lg:`  prefix, it does not add the `!important` to it's CSS compilation, it causes the `lg:` modificator to not work.\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 11.0.0, Next.js 15.1.7\n\n**What version of Node.js are you using?**\n\nNode:  20.18.3 \n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17124","RelatedDescription":"Open issue \"Compatibility issue with hardcoded styles.\" (#17124)"},{"Id":"2909609614","IsPullRequest":true,"CreatedAt":"2025-03-11T11:06:11","Actor":"depfu[bot]","Number":"17118","RawContent":null,"Title":"Update all of nextjs 15.1.7 → 15.2.1 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.1.7 → 15.2.1)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.1.7 → 15.2.1) · [Repo](https://github.com/vercel/next.js)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.2.1\">15.2.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.2.0\">15.2.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/eb883cdcfb22517e4babec6f38d3fe86961e2811...633878112ef34fd569486c969261c3350509680d\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17118","RelatedDescription":"Closed or merged PR \"Update all of nextjs 15.1.7 → 15.2.1 (minor)\" (#17118)"},{"Id":"2907970905","IsPullRequest":false,"CreatedAt":"2025-03-11T10:08:23","Actor":"da1z","Number":"17110","RawContent":null,"Title":"tailwind 4 without preflight does not seem to work with webpack and postcss","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack ,react, post css loader\n\n**What version of Node.js are you using?**\n\nlts\n\n**What browser are you using?**\n\nArc\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nI am sorry it is hard to create reproduction, but maybe you would know what issue right from description\n\n**Describe your issue**\n\nBasically the issue that main css is not being update when i add tailwind classes to classNames in dev watch mode if i import tailwind like this (i want to remove preflight but i keep it here for simplicity):\n\n@layer theme, base, components, utilities;\n@import \"tailwindcss/theme.css\" layer(theme);\n@import \"tailwindcss/preflight.css\" layer(base);\n@import \"tailwindcss/utilities.css\" layer(utilities);\n\nbut everything works, if import like:\n\n@import \"tailwindcss\";","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17110","RelatedDescription":"Closed issue \"tailwind 4 without preflight does not seem to work with webpack and postcss\" (#17110)"},{"Id":"2908559850","IsPullRequest":false,"CreatedAt":"2025-03-11T10:07:30","Actor":"tianyinggang","Number":"17117","RawContent":null,"Title":"Missing Utility Classes (\"bg-bglight\" and \"w-3\") When Using @apply in Global CSS","State":"closed","Body":"**What version of Tailwind CSS are you using?**  \nFor example: v3.2.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**  \nFor example: Next.js 15.2.1\n\n**What version of Node.js are you using?**  \nFor example: v20.0.0\n\n**What browser are you using?**  \nFor example: Chrome\n\n**What operating system are you using?**  \nFor example: macOS\n\n**Reproduction URL:**  \nPlease refer to this minimal reproduction: [Link to a minimal GitHub repo or Tailwind Play reproduction](#)  \n*(Note: Replace the placeholder with your actual reproduction URL. Make sure the reproduction is isolated from your main project.)*\n\n**Describe your issue:**  \nI am experiencing a build error when using the `@apply` directive in my global CSS file. In my Tailwind configuration (`tailwind.config.js`), I have extended the theme with custom colors and I expect utility classes like `bg-bglight` to be generated automatically. However, when I use `@apply bg-bglight;` in my global CSS file, I get the following error during build:\n\n```\nError: Cannot apply unknown utility class: bg-bglight\n```\n\nAdditionally, a default utility class like `w-3` is also not recognized in a similar scenario. My `tailwind.config.js` includes the following relevant configuration:\n\nThis is tailwind.config.js：\n```js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n    darkMode: 'class',\n    content: [\n      \"./src/**/*.{js,ts,jsx,tsx,mdx}\",\n      \"./src/**/*.{css}\"\n    ],\n    theme: {\n      screens: {\n        xs: '480px',\n        sm: '640px',\n        md: '768px',\n        lg: '1024px',\n        xl: '1440px',\n      },\n      fontFamily: {\n        sans: [\"var(--font-jost)\", \"sans-serif\"], // 匹配 Jost 的 CSS 变量\n      },     \n      extend: {\n        colors: {\n          // 基础背景色\n          bglight: \"#F6F6F6\", // 浅灰 backgroundLight\n          bgdark: \"#000000\",  // 纯黑 backgroundDark\n  \n          // 品牌主色系\n          brandAccentLight: \"#00739d\", // 辅助蓝\n          brandPrimary: \"#006DAE\",     // Monash 主蓝\n          brandAccentDark: \"#3c3c3c\",  // 深灰\n  \n          // 卡片系统\n          cardlight: \"#FFFFFF\", // 纯白\n          carddark: \"#505050\",  // 中灰\n  \n          // 功能色\n          functionalLight: \"#F6F6F6\",     // 浅灰\n          functionalAccent: \"#00739d\",    // 辅助蓝\n          functionalAccentDark: \"#3c3c3c\", // 深灰\n  \n          // 文字系统\n          textPrimary: \"#3c3c3c\",  // 深灰\n          textlight: \"#F6F6F6\", // 浅灰\n        },\n      },\n    },\n    plugins: [\n      require(\"@tailwindcss/typography\"),\n      require(\"@tailwindcss/forms\"),\n    ],\n  };\n  \n```\nThis is src/app/globals.css：\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  html {\n    @apply scroll-smooth overflow-y-scroll;\n  }\n\n  /* ===== 自定义滚动条 ===== */\n  /* 宽度 */\n  ::-webkit-scrollbar {\n    @apply w-[8rem]; /* 确保这个类存在 */\n  }\n\n  /* 轨道 */\n  ::-webkit-scrollbar-track {\n    @apply bg-bglight dark:bg-bgdark;\n  }\n\n  /* 滑块 */\n  ::-webkit-scrollbar-thumb {\n    @apply bg-[#d5d5d5] dark:bg-cardDark;\n  }\n\n  /* 滑块悬停 */\n  ::-webkit-scrollbar-thumb:hover {\n    @apply bg-[#b7b7b7] dark:bg-[#17222b];\n  }\n}\n\n@layer components {\n  .section {\n    @apply py-11 md:pt-16 lg:pt-20 px-4 sm:px-8 md:px-20 max-w-6xl mx-auto lg:min-h-[768px];\n  }\n  .section-heading {\n    @apply text-2xl md:text-3xl xl:text-4xl inline-block my-6 font-medium;\n  }\n  .link-outline {\n    @apply outline-marrsgreen dark:outline-carrigreen;\n  }\n  .link {\n    @apply outline-marrsgreen dark:outline-carrigreen text-marrsdark hover:text-marrsgreen dark:text-carrilight dark:hover:text-carrigreen;\n  }\n  .blog-main {\n    @apply mb-20 mt-16 min-h-[70vh];\n  }\n  .blog-section {\n    @apply py-8 px-4 sm:px-8 md:px-20 max-w-4xl mx-auto;\n  }\n  .glassmorphism {\n    @apply bg-clip-padding backdrop-filter backdrop-blur-xl bg-opacity-50 dark:bg-opacity-60;\n  }\n  .lower-glassmorphism {\n    @apply bg-opacity-50 dark:bg-opacity-60 after:backdrop-blur-xl after:w-full after:h-full after:absolute after:top-0 after:left-0 after:-z-10;\n  }\n}\n\n@layer utilities {\n  .swiper-padding {\n    padding: 0 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .swiper-padding-mobile {\n    padding: 0 !important;\n    padding-bottom: 3rem !important;\n  }\n}\n\n/* Swiper 样式 */\n.swiper-pagination-bullet {\n  @apply dark:bg-gray-200;\n}\n.dark .swiper-pagination-bullet-active {\n  background-color: rgb(5 206 145) !important;\n}\n.swiper-pagination-bullet-active {\n  background-color: rgb(0 140 140) !important;\n}\n\n.swiper-button-prev,\n.swiper-button-next {\n  @apply dark:text-carrigreen;\n}\n.swiper-button-prev,\n.swiper-button-next {\n  color: rgb(0 140 140) !important;\n}\n@media only screen and (max-width: 480px) {\n  .swiper-button-prev,\n  .swiper-button-next {\n    display: none !important;\n  }\n}\n```\n\nthis is package.json:\n``` json\n{\n  \"name\": \"felix-blog\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@tailwindcss/forms\": \"^0.5.0\",\n    \"@tailwindcss/line-clamp\": \"^0.3.1\",\n    \"@tailwindcss/typography\": \"^0.5.0\",\n    \"next\": \"15.2.1\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\"\n  },\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3\",\n    \"@tailwindcss/forms\": \"^0.5.10\",\n    \"@tailwindcss/postcss\": \"^4.0.12\",\n    \"@tailwindcss/typography\": \"^0.5.16\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"autoprefixer\": \"^10.4.21\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.2.1\",\n    \"postcss\": \"^8.5.3\",\n    \"tailwindcss\": \"^4.0.12\",\n    \"typescript\": \"^5\"\n  }\n}\n```\nI have verified that the `content` array includes all the paths for my source files. However, since my global CSS file (where I use `@apply`) is not being scanned, the custom utility class is not generated, leading to the error.\n\n**Steps I’ve tried as a workaround:**  \n- I attempted to add the missing classes to the safelist, but that only forces generation and doesn't resolve the root issue.\n- I also verified that my Tailwind version supports these utilities and that there are no typos in the configuration.\n\n**Expected Behavior:**  \nTailwind CSS should generate the utility classes (e.g., `bg-bglight` and `w-3`) so that using `@apply` with these classes in any CSS file (including global CSS) works without error.\n\nAny help or guidance on this issue would be greatly appreciated. Thank you!\n\n---","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17117","RelatedDescription":"Closed issue \"Missing Utility Classes (\"bg-bglight\" and \"w-3\") When Using @apply in Global CSS\" (#17117)"},{"Id":"2908540372","IsPullRequest":true,"CreatedAt":"2025-03-11T09:58:23","Actor":"depfu[bot]","Number":"17116","RawContent":null,"Title":"Update postcss 8.5.2 → 8.5.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss (8.5.2 → 8.5.3) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.5.3\">8.5.3</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Added more details to <code class=\"notranslate\">Unknown word</code> error (by <a href=\"https://bounce.depfu.com/github.com/hiepxanh\">@hiepxanh</a>).</li>\n<li>Fixed types (by <a href=\"https://bounce.depfu.com/github.com/romainmenke\">@romainmenke</a>).</li>\n<li>Fixed docs (by <a href=\"https://bounce.depfu.com/github.com/catnipan\">@catnipan</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/692fcde123dbf51c7b1a178370d3e8c6fe7feeee...22c309d32924e1eeb33c80a6a50b7ba8a43a1832\">See the full diff on Github</a>. The new version differs by 7 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/22c309d32924e1eeb33c80a6a50b7ba8a43a1832\"><code>Release 8.5.3 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/a2b594f7826fc8e0ce2d35adcd205fde04f1134f\"><code>Update ESLint config</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8232ba02575fca41b14c4e2b377adc68880846fa\"><code>Fix tests</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/5082831b842eb40f8d298e5e0ab041755a04a58b\"><code>Fix text</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4fdb54b5ce67e038ed8d1aa79752d6f6072d0736\"><code>update: parser.js to clarify error message</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/06006ecb04cae0ddb62c6a85f15d1068c544d861\"><code>AtRule can be empty</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/755f08f8dbdbc001906b10db3b262948f8491d82\"><code>fix typo: them -&gt; then (#2016)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17116","RelatedDescription":"Closed or merged PR \"Update postcss 8.5.2 → 8.5.3 (patch)\" (#17116)"},{"Id":"2908420699","IsPullRequest":false,"CreatedAt":"2025-03-10T21:04:54","Actor":"willoma","Number":"17114","RawContent":null,"Title":"tailwindcss cli leaves hidden files in /tmp","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nOnly the tailwindcss cli.\n\n**What version of Node.js are you using?**\n\nNone\n\n**What browser are you using?**\n\nNot relevant\n\n**What operating system are you using?**\n\nUbuntu Linux 24.04\n\n**Reproduction URL**\n\nNot relevant\n\n**Describe your issue**\n\n```\n$ ls -a /tmp/.*.node\nls: cannot access '/tmp/.*.node': No such file or directory\n$ tailwindcss\n≈ tailwindcss v4.0.12\n\nUsage:\n[blah blah doc etc]\n$ ls /tmp/.*.node\n/tmp/.19abdddb78ffefff-00000001.node  /tmp/.5effdedebd9bdffd-00000000.node  /tmp/.dd2f9cfefaefccbe-00000002.node\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17114","RelatedDescription":"Open issue \"tailwindcss cli leaves hidden files in /tmp\" (#17114)"},{"Id":"2905304240","IsPullRequest":true,"CreatedAt":"2025-03-10T18:08:39","Actor":"RobinMalfait","Number":"17083","RawContent":null,"Title":"Refactor: use compile time type state pattern","State":"closed","Body":"This PR implements the state machines using the type state pattern at compile time (via generic types) instead of a runtime state variable. There is no runtime check to see what state we are in, instead we transition to the new state when it's necessary.\r\n\r\nThis has some nice performance improvements for some of the state machines, e.g.:\r\n\r\n```diff\r\n- ArbitraryVariableMachine: Throughput: 744.92 MB/s\r\n+ ArbitraryVariableMachine: Throughput:   1.21 GB/s\r\n```\r\n\r\nWe also don't have to store the current state because each machine runs to completion. It's during execution that we can move to a new state if necessary.\r\n\r\n\r\nUnfortunately the diff is a tiny bit annoying to read, but essentially this is what happened:\r\n\r\n### The `enum` is split up in it's individual states as structs:\r\n```rs\r\nenum State {\r\n  A,\r\n  B,\r\n  C,\r\n}\r\n```\r\nBecomes:\r\n```rs\r\nstruct A;\r\nstruct B;\r\nstruct C;\r\n```\r\n\r\n### Generics\r\n\r\nThe current machine will receive a generic `State` that we can default to the `IdleState`. Then we use `PhantomData` to \"use\" the type because the generic type is otherwise not used as a concrete value, it's just a marker.\r\n\r\n```rs\r\nstruct MyMachine {}\r\n```\r\nBecomes:\r\n```rs\r\nstruct MyMachine<State = Idle> {\r\n  _state: std::marker::PhantomData<State>\r\n}\r\n```\r\n\r\n### Split \r\n\r\nNext, the `next` function used to match on the current state, but now each match arm is moved to a dedicated implementation instead:\r\n```rs\r\nimpl Machine for MyMachine {\r\n  fn next(&mut self) -> MachineState {\r\n    match self.state {\r\n      State::A => { /* … */ },\r\n      State::B => { /* … */ },\r\n      State::C => { /* … */ },\r\n    }\r\n  }\r\n}\r\n``` \r\nBecomes:\r\n```rs\r\nimpl Machine for MyMachine<A> {\r\n  fn next(&mut self) -> MachineState {\r\n    /* … */\r\n  }\r\n}\r\nimpl Machine for MyMachine<B> {\r\n  fn next(&mut self) -> MachineState {\r\n    /* … */\r\n  }\r\n}\r\nimpl Machine for MyMachine<C> {\r\n  fn next(&mut self) -> MachineState {\r\n    /* … */\r\n  }\r\n}\r\n```\r\n\r\nIt's a bit more verbose, but now each state is implemented in its own block. This also removes 2 levels of nesting which is a nice benefit.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17083","RelatedDescription":"Closed or merged PR \"Refactor: use compile time type state pattern\" (#17083)"},{"Id":"2907022974","IsPullRequest":false,"CreatedAt":"2025-03-10T12:33:12","Actor":"AiSirachcha21","Number":"17104","RawContent":null,"Title":"@property doesn't work with custom elements that use a shadow-dom","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n.NET MVC with VanillaJS Custom Elements\n\n**What version of Node.js are you using?**\nv22.12.0\n\n**What browser are you using?**\nFirefox  and Chrome (v134.0.6998.35)\n\n**What operating system are you using?**\nWindows\n\n**Reproduction URL**\nhttps://stackblitz.com/edit/vitejs-vite-chwisfnx?file=src%2Ftest.css\n\n**Describe your issue**\n\nTailwind makes use of the new `translate` property in CSS in order to do what used to be done with `transform`. This makes use of 2 custom properties `--tw-translate-x` and `--tw-translate-y`.\n\nWe have used the shadow-dom inside of custom element to prevent leakage of our CSS into another application we own. The project is legacy and I won't get into the reasons as to why we've done it unless necessary for the conversation.\n\nWe import a compiled tailwindCSS file into this custom element (we compile it via the standalone TailwindCLI) via a link tag in the shadow-dom.\n\nUtilizing any TailwindCSS translate utility (like `-translate-y-1/2` or `translate-x-2`) will omit any values not written explicitly.\n\nFor example take the following CSS\n\n```css\n.class-x {\n    @apply absolute top-1/2 -translate-y-1/2 /* To center an element with absolute positioning */\n}\n```\n\nThe above code will result in the following CSS\n\n```css\n.class-x {\n   --tw-translate-y: calc(calc( 1/2 * 100%) * -1);\n   position: absolute;\n   top: 50%;\n   translate: var(--tw-translate-x) var(--tw-translate-y)\n}\n```\n\nAs the default behavior of custom properties, `--tw-translate-x` should default to `0` but instead we see that it is not defined when observed inside the custom element via the browser dev tools.\n\n![Image](https://github.com/user-attachments/assets/bb705892-7061-4566-9fb9-e62333ff24f5)\n\nWhile this might be a browser behavior and not specifically related to tailwind, I feel it is worth mentioning as the only workarounds available are \n\n1. Explictly define the `translate-x-*` utility with a value\n2. Utilize Vanilla CSS and the `--spacing` utility.\n3. Utilize Vanilla CSS with raw CSS values\n\nThis will extend to classes applied on templates as well.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17104","RelatedDescription":"Closed issue \"@property doesn't work with custom elements that use a shadow-dom\" (#17104)"},{"Id":"2905972438","IsPullRequest":false,"CreatedAt":"2025-03-10T11:45:36","Actor":"sharathdaniel","Number":"17096","RawContent":null,"Title":"Unexpected duplicate \"transition-timing-function\"","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind-cli with plain html and css\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\nI have a class for a button with some tailwind classes applied.\n```\n@layer components {\n  .app-c-btn {\n    @apply rounded px-4 py-2 font-bold text-white transition-colors duration-200 ease-in not-disabled:cursor-pointer disabled:cursor-not-allowed;\n  }\n```\n\nIn the output its generating the transition timing 2 times.\n\n![Image](https://github.com/user-attachments/assets/649d19f5-8063-4cdd-af47-a267cff21d9c)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17096","RelatedDescription":"Closed issue \"Unexpected duplicate \"transition-timing-function\"\" (#17096)"},{"Id":"2906980358","IsPullRequest":false,"CreatedAt":"2025-03-10T11:39:29","Actor":"CultureScreen","Number":"17101","RawContent":null,"Title":"Cannot apply unknown utility class: rounded-lg","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\n## help meeeeeee\n\n![Image](https://github.com/user-attachments/assets/61e82a8e-ed18-43ae-b88d-361c9ec04a9b)\n\n![Image](https://github.com/user-attachments/assets/38bfbc37-35cb-4618-8713-074397b11bff)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17101","RelatedDescription":"Closed issue \"Cannot apply unknown utility class: rounded-lg\" (#17101)"},{"Id":"2906476979","IsPullRequest":false,"CreatedAt":"2025-03-10T10:46:13","Actor":"alexgrozav","Number":"17097","RawContent":null,"Title":"Allow setting any custom utility prefix and prefix separator","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nv20.16.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nN/A\n\n```\n@theme inline prefix(_) {\n   --spacing: 1rem;\n}\n```\n\n**Describe your issue**\n\nSome CSS writing Frameworks recommend using `_` as a prefix for naming utility classes. For example, Rico Sta Cruz recommends using `_className` for utilities in the RSCSS framework https://rstacruz.github.io/rscss/. \n\nTailwind does not allow using `_` as a prefix, nor does it allow using an empty string `''` as a separator instead of `':'`.\n\n<img width=\"877\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/53f3a3ed-ff51-4898-835c-bd8c903108eb\" />\n\n**Expected:**\n- I would like to be able to use `_` as a prefix \n- I would like to be able to use empty string `''` as a prefix separator instead of `':'`\n\n```\n@theme inline prefix(_, false) {\n   --spacing: 1rem;\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17097","RelatedDescription":"Closed issue \"Allow setting any custom utility prefix and prefix separator\" (#17097)"},{"Id":"2905231019","IsPullRequest":false,"CreatedAt":"2025-03-10T10:45:28","Actor":"ledermann","Number":"17081","RawContent":null,"Title":"4.0.12 - Regression with SLIM templates (single quotes)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nBrave 1.76.73\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/ledermann/tailwind-4.0.12-slim-issue\n\n**Describe your issue**\n\nSimilar to #16975 and #16998, there is another issue with SLIM templates. With 4.0.12, the parser fails to handle [single quotes (used to enforce trailing white space)](https://github.com/slim-template/slim?tab=readme-ov-file#verbatim-text-with-trailing-white-space-). \n\n\nSee this example:\n\n```slim\ndiv\n  'A single quote enforces trailing white space\n  = 1234\n\n.text-red-500.text-3xl\n  | This text should be red\n```\n\nHere, the class `text-red-500` is not processed.\n\n![Image](https://github.com/user-attachments/assets/cf1a3ce8-aa68-4cf5-a78c-444ddacfc652)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17081","RelatedDescription":"Closed issue \"4.0.12 - Regression with SLIM templates (single quotes)\" (#17081)"},{"Id":"2905333740","IsPullRequest":true,"CreatedAt":"2025-03-10T10:45:27","Actor":"RobinMalfait","Number":"17085","RawContent":null,"Title":"Treat starting single quote as verbatim text in Slim","State":"closed","Body":"This PR fixes an issue in Slim templates where a single quote `'` at the start of the line (excluding white space) is considered a line indicator for verbatim text. It is not considered a string in this scenario.\r\n\r\nSo something like this:\r\n```slim\r\ndiv\r\n  'Foo'\r\n```\r\n\r\nWill compile to:\r\n```html\r\n<div>Foo'</div>\r\n```\r\n\r\nFixes: #17081\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17085","RelatedDescription":"Closed or merged PR \"Treat starting single quote as verbatim text in Slim\" (#17085)"},{"Id":"2905458177","IsPullRequest":false,"CreatedAt":"2025-03-10T10:28:11","Actor":"jackwilliams79","Number":"17088","RawContent":null,"Title":"Classes not generated after upgrading npm packages when CSS classes are inside TYPO3 Fluid template tags","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nLike suggested in this issue (https://github.com/tailwindlabs/tailwindcss/issues/16801#issuecomment-2701012221), I've installed the \"insiders\" versions.\n\nCurrently installed versions:\n\n- \"@tailwindcss/vite\": \"^0.0.0-insiders.7005ad7\"\n- \"tailwindcss\": \"^0.0.0-insiders.7005ad7\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Vite 6.1.0\n\n**What version of Node.js are you using?**\n\n- Node version: v22.14.0\n\n**What browser are you using?**\n\n- Latest Google Chrome\n\n**What operating system are you using?**\n\n- Linux Fedora\n\n**Reproduction URL**\n\nI cannot provide a reproduction URL.\n\n**Describe your issue**\n\nI'm using the new Tailwindcss v4 with Vite in a PHP project (TYPO3 CMS). TYPO3 uses it's own templating engine to generate HTML for the frontend, which is called Fluid.\n\nHere's an example Fluid template snippet:\n\n```html\n<!-- Fluid template language -->\n<f:variable name=\"bgStyle\">\n  <f:switch expression=\"{data.layout}\">\n    <f:case value=\"0\">from-blue-900 to-cyan-200</f:case>\n    <f:case value=\"1\">from-cyan-600 to-teal-200</f:case>\n    <f:defaultCase>from-blue-300 to-cyan-100</f:defaultCase>\n  </f:switch>\n</f:variable>\n\n<!-- Normal HTML code with Fluid variable \"bgStyle\" in the \"class\" attribute -->\n<div class=\"bg-gradient-to-br from-20% {bgStyle}\">...</div>\n```\n\nUp until today this worked just fine. Today I updated my NPM packages (`npm update`). The packages were updated from version 4.0.6 to version 4.0.12. Now CSS classes that are not written inside normal HTML code (last line in the example), are not picked up and therefore are not added to the final CSS file.\n\nThen I've read about the insiders versions and tried to install those. But still the CSS classes inside the Fluid template part are not recognized.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17088","RelatedDescription":"Closed issue \"Classes not generated after upgrading npm packages when CSS classes are inside TYPO3 Fluid template tags\" (#17088)"},{"Id":"2905622814","IsPullRequest":true,"CreatedAt":"2025-03-10T10:28:10","Actor":"RobinMalfait","Number":"17094","RawContent":null,"Title":"Ensure classes between `>` and `<` are properly extracted","State":"closed","Body":"This PR fixes an issue where candidates inside `>…<` were not always correctly extracted. This happens in XML-like languages where the classes are inside of these boundaries.\n\nE.g.:\n```html\n<!-- Fluid template language -->\n<f:variable name=\"bgStyle\">\n  <f:switch expression=\"{data.layout}\">\n    <f:case value=\"0\">from-blue-900 to-cyan-200</f:case>\n    <!--              ^^^^^^^^^^^^^^^^^^^^^^^^^      -->\n    <f:case value=\"1\">from-cyan-600 to-teal-200</f:case>\n    <f:defaultCase>from-blue-300 to-cyan-100</f:defaultCase>\n  </f:switch>\n</f:variable>\n```\n\n\nFixes: https://github.com/tailwindlabs/tailwindcss/issues/17088\n\n# Test plan\n\n1. Added a new test\n2. Existing tests pass\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17094","RelatedDescription":"Closed or merged PR \"Ensure classes between `>` and `<` are properly extracted\" (#17094)"},{"Id":"2905656022","IsPullRequest":false,"CreatedAt":"2025-03-09T20:49:46","Actor":"t-zander","Number":"17095","RawContent":null,"Title":"Incomplete colors classes when using tailwind cli","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\nNo framework\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\n\nI have a css file with the only import\n```\n@import \"tailwindcss\";\n```\n\nI am using tailwind cli to generate .css output file.\n\n```\nnpx @tailwindcss/cli -i ./assets/css/tailwind.css -o ./style.css --watch\n```\n\nFor whatever reason this file is missing a lot of classes for colors, mentioned in https://tailwindcss.com/docs/colors#default-color-palette-reference.\n\nE.g. color-red, greeen, amber, ... are all missing\n\n[style_generated.txt](https://github.com/user-attachments/files/19152061/style_generated.txt)\n\n in the generated file.\nIt is not possible to attach .css, so I had to change generated file to .txt\n\nI am trying to use it in another .css file\n```\na {\n      color: var(--color-white);\n\n      &:hover {\n        color: var(--color-green-500);\n      }\n    }\n```\n\n\nvar(--color-white) works fine, but not var(--color-green-500)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17095","RelatedDescription":"Closed issue \"Incomplete colors classes when using tailwind cli\" (#17095)"},{"Id":"2905563841","IsPullRequest":false,"CreatedAt":"2025-03-09T17:40:49","Actor":"dimassp","Number":"17089","RawContent":null,"Title":"margin top application on different screen size","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17089","RelatedDescription":"Closed issue \"margin top application on different screen size\" (#17089)"},{"Id":"2905360498","IsPullRequest":true,"CreatedAt":"2025-03-09T11:07:57","Actor":"RobinMalfait","Number":"17087","RawContent":null,"Title":"Ensure candidate extraction works as expected in Clojure/ClojureScript","State":"open","Body":"This PR adds a Clojure/ClojureScript pre processor to make sure that candidate extraction works as expected.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17087","RelatedDescription":"Open PR \"Ensure candidate extraction works as expected in Clojure/ClojureScript\" (#17087)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-12T03:30:23.0895748Z","RunDurationInMilliseconds":437}