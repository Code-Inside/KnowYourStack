{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1681765188","IsPullRequest":false,"CreatedAt":"2023-04-24T17:58:00","Actor":"dykatz","Number":"11081","RawContent":null,"Title":"TailwindCSS depends on an outdated version of postcss-load-config","State":"open","Body":"TailwindCSS depends on `yaml` indirectly through `postcss-load-config`. [This CVE](https://huntr.dev/bounties/4b494e99-5a3e-40d9-8678-277f3060e96c/) was released earlier today, and was patched in `yaml@2.2.2`. It can be used by `postcss-load-config@4.0.1`, but tailwind depends on `postcss-load-config@^3.1.4`. This is causing our static analysis tools to yell at us.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11081","RelatedDescription":"Open issue \"TailwindCSS depends on an outdated version of postcss-load-config\" (#11081)"},{"Id":"1681102417","IsPullRequest":false,"CreatedAt":"2023-04-24T12:32:27","Actor":"TomGjeka","Number":"11080","RawContent":null,"Title":"Issue with spacing on the Y-axis and X-axis","State":"closed","Body":"As the title implies there is a logic issue when using space-xy-(number) with row-reverse or column-reverse.\r\n\r\nwe got two divs which we give spacing-x-2 and it works in row -> the second div has the margin applied.\r\n\r\nordering div with row-reverse -> first div has the spacing on the left and the second div is next to the first one without spacing.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11080","RelatedDescription":"Closed issue \"Issue with spacing on the Y-axis and X-axis\" (#11080)"},{"Id":"1680623732","IsPullRequest":true,"CreatedAt":"2023-04-24T08:25:45","Actor":"depfu[bot]","Number":"11075","RawContent":null,"Title":"Update sucrase: 3.31.0 → 3.32.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ sucrase (3.31.0 → 3.32.0) · [Repo](https://github.com/alangpierce/sucrase) · [Changelog](https://github.com/alangpierce/sucrase/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n\n<h4>3.32.0 (from changelog)</h4>\n<blockquote><ul dir=\"auto\">\n<li>Improve source map quality by adding column information. This fixes several\nsource map use cases, such as Jest inline snapshots, source map composition,\nand some debugger features. (<a href=\"https://bounce.depfu.com/github.com/alangpierce/sucrase/pull/759\">#759</a>) (Emily Marigold Klassen)\n<ul dir=\"auto\">\n<li>Unfortunately, this change comes at some performance cost. Previously, the\nslowdown from enabling source maps was about 10%, and now it is about 30%.\nIn most cases, the more detailed source maps are probably still preferable,\nso for configuration simplicity, there is currently no option to switch\nback to source maps without column information. If you would like to still\nuse the faster but less accurate implementation, feel free to file an issue\nto request a new config option, or create the source map yourself in\nwrapper code by copying the\n<a href=\"https://bounce.depfu.com/github.com/alangpierce/sucrase/blob/9b20ea57aa95d0926fcb560f1500f984d598aa00/src/computeSourceMap.ts\">original simple implementation</a>.</li>\n</ul>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/sucrase/feedback\">Please let us know.</a></em></p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11075","RelatedDescription":"Closed or merged PR \"Update sucrase: 3.31.0 → 3.32.0 (minor)\" (#11075)"},{"Id":"1680661854","IsPullRequest":false,"CreatedAt":"2023-04-24T08:24:31","Actor":"prophet1996","Number":"11076","RawContent":null,"Title":"tailwind config important true not working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nnode + Post css  to generate css\r\n\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.19.1 \r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\n macOS m1\r\n\r\n**Reproduction URL**\r\nusing node js script should be easy to reproduce anywhere\r\n**Describe your issue**\r\ntailwind generation does not contain !important modified event if theconfig has it. It works when i put the !<utility-class>\r\nI feed this source as string to a node script\r\n```\r\n  export default {\r\n    class: \"flex bg-red-100\",\r\n    id: 'repository_panel',\r\n    view: {\r\n      className: '',\r\n      }\r\n     }\r\n``` \r\n```\r\n/** @type {import('tailwindcss').Config} */\r\nexport default {\r\n  content: [\r\n    \"./index.html\",\r\n    \"./src/**/*.{js,ts}\",\r\n  ],\r\n  content: [],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n  important: true,\r\n}\r\n\r\n```\r\nNode function that generates css for me\r\n```\r\n return (\r\n    await postcss([\r\n      tailwind({\r\n        content: [{ raw: contentRaw }],\r\n      }),\r\n    ]).process(\r\n      `@tailwind base;@tailwind components;@tailwind utilities;`,\r\n      {\r\n        from: undefined,\r\n      }\r\n    )\r\n  ).css;\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11076","RelatedDescription":"Closed issue \"tailwind config important true not working\" (#11076)"},{"Id":"1680553713","IsPullRequest":true,"CreatedAt":"2023-04-24T06:34:43","Actor":"AutoYa","Number":"11074","RawContent":null,"Title":"Fix custom theme, all color properties of boxShadow are reset to `var(--tw-shadow-color)`.","State":"open","Body":"I was configuring `boxShadow` in my `tailwind.config.js` file and found that all my color values were replaced with the `-tw-shadow-color` variable.\r\nI think this should be a bug.\r\n\r\n```\r\nconst tailwindcssConfig = {\r\n  theme: {\r\n    extend: {\r\n      boxShadow: {\r\n        'jz-black': 'inset 0 0 0 2px, 2px 2px 0 0 rgb(255,255,255), 4px 4px 0 0',\r\n      },\r\n    },\r\n  },\r\n};\r\n```\r\n> The current effect\r\n\r\n![image](https://user-images.githubusercontent.com/114130827/233915132-79f95c2a-bfd3-499d-9d04-3e2a5df3da0a.png)\r\n\r\n> The values are replaced with `-tw-shadow-color`\r\n\r\n![2023-04-24 14 24 34](https://user-images.githubusercontent.com/114130827/233915775-3a54409e-9a7b-4770-9997-8c739c9ba9d9.png)\r\n\r\n> The effect after the fix\r\n\r\n![image](https://user-images.githubusercontent.com/114130827/233917209-0b47ac1b-00ba-4215-9fb1-52647a75e18d.png)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11074","RelatedDescription":"Open PR \"Fix custom theme, all color properties of boxShadow are reset to `var(--tw-shadow-color)`.\" (#11074)"},{"Id":"1680216758","IsPullRequest":false,"CreatedAt":"2023-04-23T23:18:47","Actor":"gustavotcabral","Number":"11072","RawContent":null,"Title":"transform variables don't work inside keyframes","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss/Svelte v3.58.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.14.0\r\n\r\n**What browser are you using?**\r\n\r\nBuggy on Chrome; the example works on Firefox.\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 18.04\r\n\r\n**Reproduction URL**\r\n\r\nThe bug occurs when removing the `@property` declarations: https://play.tailwindcss.com/6r2AMqX4r9\r\n\r\n**Describe your issue**\r\n\r\nCSS Custom Properties are not animatable by default. I think we just need to declare all `--tw-*` variables using [`@property`](https://developer.mozilla.org/en-US/docs/Web/CSS/@property).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11072","RelatedDescription":"Open issue \"transform variables don't work inside keyframes\" (#11072)"},{"Id":"1680082642","IsPullRequest":false,"CreatedAt":"2023-04-23T16:22:01","Actor":"eranhirsch","Number":"11070","RawContent":null,"Title":"Dialog element styles are not reset by preflight","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nlatest (3.3.1)\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ncreate-react-app (post-css)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nn/a\r\n\r\n**What browser are you using?**\r\n\r\nChrome (Version 112.0.5615.138 (Official Build) (64-bit))\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11 (22H2)\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/H833bFMZwQ\r\n\r\n**Describe your issue**\r\n\r\nHTML Dialog elements are styled by the useragent, specifically a padding of 16px is added, a border of 1, and text and background colors are set. All of this feels like stuff missing from preflight. It actually took me some time debugging just to find out that the padding is coming from the useragent, as I was not expecting it.\r\n\r\nSome links:\r\n* https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\r\n* https://searchfox.org/mozilla-central/source/layout/style/res/html.css#790-805\r\n* https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css#1084","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11070","RelatedDescription":"Open issue \"Dialog element styles are not reset by preflight\" (#11070)"},{"Id":"1680079749","IsPullRequest":true,"CreatedAt":"2023-04-23T16:12:26","Actor":"eranhirsch","Number":"11069","RawContent":null,"Title":"Reset dialog element sytles","State":"open","Body":"The [HTML dialog element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog) has a lot of default styling coming from the user agent ([chromium](https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css#1084), [mozilla](https://searchfox.org/mozilla-central/source/layout/style/res/html.css#790-805), *looks like safari don't style dialogs at all*).\r\n\r\nI noticed this when trying to debug why I was getting a 16px padding regardless of what my styling was. Except padding it looks like there are also styles for colors and a border. This feels like a bug as I'm used to tailwind's preflight providing a pretty good \"blank slate\" of expected styling. Some of the other styles (like the positioning) seem reasonable as they are pretty close to what I came up defining by myself for the dialog.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11069","RelatedDescription":"Open PR \"Reset dialog element sytles\" (#11069)"},{"Id":"1680027695","IsPullRequest":true,"CreatedAt":"2023-04-23T13:32:26","Actor":"depfu[bot]","Number":"11068","RawContent":null,"Title":"Update postcss: 8.4.21 → 8.4.23 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss (8.4.21 → 8.4.23) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.23\">8.4.23</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed warnings in TypeDoc.</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.22\">8.4.22</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed TypeScript support with <code class=\"notranslate\">node16</code> (by <a href=\"https://bounce.depfu.com/github.com/remcohaszing\">@remcohaszing</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/32ced0e2b1e5b2524c7a9a790d338fbd43090670...aa9e03ea4708909631eba70500c8c0cc0708bb4e\">See the full diff on Github</a>. The new version differs by 42 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/aa9e03ea4708909631eba70500c8c0cc0708bb4e\"><code>Release 8.4.23 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/691b299b4d63cccd8cb34d2fb462c81375e1325b\"><code>Fix TSDocs</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/819023482ef7f3ed57b7a45bac4c75d85c6a1a25\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/5f8dbdb782d65eeee4dace21e9b699d736ab5da8\"><code>Move to Node.js 20 on CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/7de486096d9a795703dfc537411b3ff94d951bd6\"><code>Release 8.4.22 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/a9a157a8be070fbb100132a646a1b5c7f4d6e789\"><code>Merge pull request #1815 from remcohaszing/fix-types</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/98de266f30d661680d7bb9661d16c428f60da936\"><code>Revert unwanted changes</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4947e3b881a6d60eeffd98959f19be883f2105ee\"><code>Fix broken test</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/bda836aedf1a000927999f759e4f5db7a3763edc\"><code>Remove intermediate classes for default exports</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/d33810c5cc772d415df9b680330a8d6d2980fb82\"><code>Merge branch &#39;main&#39; into fix-types</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/c6dd496af1d65a20d097e2e56687e0aa5bc08b7d\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/c85028bb27b562861240f8bedc9d65d49e470754\"><code>Fix old pnpm on CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/a2c432eca1d1a2b4a73c7c4990fed9dbe84f9870\"><code>Lock pnpm and fix Node.js 14 support</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/becf4143b70c08a22c433abc90251b568ee9d69b\"><code>Merge pull request #1832 from remcohaszing/update-pnpm</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/035082e3472bc2b08c80968828f1e4182cca0fa3\"><code>Update lockfile</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/f3f4b6cfc57ef4a7209da449916f107d9d03f267\"><code>Export private types</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/c2e94de4479ed76c96a71ebcc3e3fa2f83b2bcf6\"><code>Merge pull request #1824 from karlhorky/patch-1</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8f237bf3d96718bef367135aff17e53c2234ab1d\"><code>Add JSDoc types to other examples</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4ac9d6ba01a1ce601d1ad9cb1bf5c1c02734b9c0\"><code>Revert some unwanted changes</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/54976dbbd9b8cc28afb0c65cd1b85dad0b992def\"><code>Add JSDoc type for config</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/31024785c654d5542579a8d6fccafa2c92c31338\"><code>Use ESM imports in type definitions</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/452ba619472a3c6703eca9d1753a5d5a779a03d8\"><code>Fix default exports with inheritance</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/206938a0999e86ade9390a2ec5a0603469a15189\"><code>Fix broken import</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/18f5ce3b0919c5cafb33a2f9ae5f69f38b491f5c\"><code>Add test to assert postcss is postcss.default</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/0de0e1e34d9e6ca373ac7ccdc3287706c13f750f\"><code>Fix script for CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/e5aee2a0c0c78795dc173fd283da9f041e1a3d64\"><code>Fix Node.js 10 on CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/b291e16f652a07287886c99adfc5f130e4a779c1\"><code>Remove dependency</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/575db4907e7ac2240e30d1f88fc27c1238fab423\"><code>Update Nano ID</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/1ed7ba61fd579bdf364e58c8fdc7db6edf027b75\"><code>Update types</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/2e62dc960ca0727d45f6052b63a9d219dedc15c4\"><code>Update types</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/d3c68ba2493b4520f648c117e8cfa2ade3225edb\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/812026ce6fe6a7e2a086845a9d02834114bfbb35\"><code>Add new funding option</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/15bfd9d084b9e3a142a949f5142a3352b4900d39\"><code>Revert tests</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/6f65c8f7a6e6ed7243dc60e1e5ad69a72261585b\"><code>Add hacks needed to make check-dts work</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/afad941c93ca0f92ddc2b40b684a4ea3ebda035c\"><code>Add back support for default in type definitions</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/d18b24a7094ccb42049110552a046750ab7d4a88\"><code>Restore types field in package.json</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/00b33a637fce9593b6b6f5735797669526ab572d\"><code>Restore THROWS assertsions</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/d75e3095d15ce662f7d4ab32c78b034af585fc7a\"><code>Remove redundant types fields from package.json</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/3c195408152089419411d6fa6633debc7e912e7c\"><code>Fix type definitions</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8834314ff334ea8321bf2c83934f276d379512cd\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/961e93731d6ea059df9ba46f383307d753ec3ef7\"><code>Merge pull request #1813 from romainmenke/increase-test-coverage--diligent-mouse-8dd4532865</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/1f0b5bea46bd1691f5c9c4a545e0c7917ca349e6\"><code>increase test coverage</code></a></li>\n</ul>\n</details>\n\n\n\n\n#### ✳️ esbuild (0.17.14 → 0.17.18) · [Repo](https://github.com/evanw/esbuild) · [Changelog](https://github.com/evanw/esbuild/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.17.17\">0.17.17</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Fix CSS nesting transform for top-level <code class=\"notranslate\">&amp;</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3052\">#3052</a>)</p>\n<p dir=\"auto\">Previously esbuild could crash with a stack overflow when lowering CSS nesting rules with a top-level <code class=\"notranslate\">&amp;</code>, such as in the code below. This happened because esbuild's CSS nesting transform didn't handle top-level <code class=\"notranslate\">&amp;</code>, causing esbuild to inline the top-level selector into itself. This release handles top-level <code class=\"notranslate\">&amp;</code> by replacing it with <a href=\"https://drafts.csswg.org/selectors-4/#the-scope-pseudo\">the <code class=\"notranslate\">:scope</code> pseudo-class</a>:</p>\n<div class=\"highlight highlight-source-css\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-c\">/* Original code */</span>\n<span class=\"pl-ent\">&amp;</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-ent\">a</span> {\n  .<span class=\"pl-c1\">b</span> {\n    <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red;\n  }\n}\n\n<span class=\"pl-c\">/* New output (with --target=chrome90) */</span>\n<span class=\"pl-kos\">:</span><span class=\"pl-c1\">is</span>(<span class=\"pl-kos\">:</span><span class=\"pl-c1\">scope</span><span class=\"pl-kos\">,</span> <span class=\"pl-ent\">a</span>) .<span class=\"pl-c1\">b</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red;\n}</pre></div>\n</li>\n<li>\n<p dir=\"auto\">Support <code class=\"notranslate\">exports</code> in <code class=\"notranslate\">package.json</code> for <code class=\"notranslate\">extends</code> in <code class=\"notranslate\">tsconfig.json</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3058\">#3058</a>)</p>\n<p dir=\"auto\">TypeScript 5.0 added the ability to use <code class=\"notranslate\">extends</code> in <code class=\"notranslate\">tsconfig.json</code> to reference a path in a package whose <code class=\"notranslate\">package.json</code> file contains an <code class=\"notranslate\">exports</code> map that points to the correct location. This doesn't automatically work in esbuild because <code class=\"notranslate\">tsconfig.json</code> affects esbuild's path resolution, so esbuild's normal path resolution logic doesn't apply.</p>\n<p dir=\"auto\">This release adds support for doing this by adding some additional code that attempts to resolve the <code class=\"notranslate\">extends</code> path using the <code class=\"notranslate\">exports</code> field. The behavior should be similar enough to esbuild's main path resolution logic to work as expected.</p>\n<p dir=\"auto\">Note that esbuild always treats this <code class=\"notranslate\">extends</code> import as a <code class=\"notranslate\">require()</code> import since that's what TypeScript appears to do. Specifically the <code class=\"notranslate\">require</code> condition will be active and the <code class=\"notranslate\">import</code> condition will be inactive.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix watch mode with <code class=\"notranslate\">NODE_PATH</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3062\">#3062</a>)</p>\n<p dir=\"auto\">Node has a rarely-used feature where you can extend the set of directories that node searches for packages using the <code class=\"notranslate\">NODE_PATH</code> environment variable. While esbuild supports this too, previously a bug prevented esbuild's watch mode from picking up changes to imported files that were contained directly in a <code class=\"notranslate\">NODE_PATH</code> directory. You're supposed to use <code class=\"notranslate\">NODE_PATH</code> for packages, but some people abuse this feature by putting files in that directory instead (e.g. <code class=\"notranslate\">node_modules/some-file.js</code> instead of <code class=\"notranslate\">node_modules/some-pkg/some-file.js</code>). The watch mode bug happens when you do this because esbuild first tries to read <code class=\"notranslate\">some-file.js</code> as a directory and then as a file. Watch mode was incorrectly waiting for <code class=\"notranslate\">some-file.js</code> to become a valid directory. This release fixes this edge case bug by changing watch mode to watch <code class=\"notranslate\">some-file.js</code> as a file when this happens.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.17.16\">0.17.16</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Fix CSS nesting transform for triple-nested rules that start with a combinator (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3046\">#3046</a>)</p>\n<p dir=\"auto\">This release fixes a bug with esbuild where triple-nested CSS rules that start with a combinator were not transformed correctly for older browsers. Here's an example of such a case before and after this bug fix:</p>\n<div class=\"highlight highlight-source-css\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-c\">/* Original input */</span>\n.<span class=\"pl-c1\">a</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red;\n  <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">b</span> {\n    <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> green;\n    <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">c</span> {\n      <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> blue;\n    }\n  }\n}\n\n<span class=\"pl-c\">/* Old output (with --target=chrome90) */</span>\n.<span class=\"pl-c1\">a</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red;\n}\n.<span class=\"pl-c1\">a</span> <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">b</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> green;\n}\n.<span class=\"pl-c1\">a</span> .<span class=\"pl-c1\">b</span> <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">c</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> blue;\n}\n\n<span class=\"pl-c\">/* New output (with --target=chrome90) */</span>\n.<span class=\"pl-c1\">a</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red;\n}\n.<span class=\"pl-c1\">a</span> <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">b</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> green;\n}\n.<span class=\"pl-c1\">a</span> <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">b</span> <span class=\"pl-c1\">&gt;</span> .<span class=\"pl-c1\">c</span> {\n  <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> blue;\n}</pre></div>\n</li>\n<li>\n<p dir=\"auto\">Support <code class=\"notranslate\">--inject</code> with a file loaded using the <code class=\"notranslate\">copy</code> loader (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3041\">#3041</a>)</p>\n<p dir=\"auto\">This release now allows you to use <code class=\"notranslate\">--inject</code> with a file that is loaded using the <code class=\"notranslate\">copy</code> loader. The <code class=\"notranslate\">copy</code> loader copies the imported file to the output directory verbatim and rewrites the path in the <code class=\"notranslate\">import</code> statement to point to the copied output file. When used with <code class=\"notranslate\">--inject</code>, this means the injected file will be copied to the output directory as-is and a bare <code class=\"notranslate\">import</code> statement for that file will be inserted in any non-copy output files that esbuild generates.</p>\n<p dir=\"auto\">Note that since esbuild doesn't parse the contents of copied files, esbuild will not expose any of the export names as usable imports when you do this (in the way that esbuild's <code class=\"notranslate\">--inject</code> feature is typically used). However, any side-effects that the injected file has will still occur.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.17.15\">0.17.15</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Allow keywords as type parameter names in mapped types (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3033\">#3033</a>)</p>\n<p dir=\"auto\">TypeScript allows type keywords to be used as parameter names in mapped types. Previously esbuild incorrectly treated this as an error. Code that does this is now supported:</p>\n<div class=\"highlight highlight-source-ts\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-k\">type</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'a'</span> <span class=\"pl-c1\">|</span> <span class=\"pl-s\">'b'</span> <span class=\"pl-c1\">|</span> <span class=\"pl-s\">'c'</span>\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">A</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-smi\">keyof</span> <span class=\"pl-k\">in</span> <span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">]</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">B</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-smi\">infer</span> <span class=\"pl-k\">in</span> <span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">]</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">type</span> <span class=\"pl-smi\">C</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">readonly</span> <span class=\"pl-k\">in</span> <span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">]</span>: <span class=\"pl-smi\">number</span> <span class=\"pl-kos\">}</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Add annotations for re-exported modules in node (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2486\">#2486</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3029\">#3029</a>)</p>\n<p dir=\"auto\">Node lets you import named imports from a CommonJS module using ESM import syntax. However, the allowed names aren't derived from the properties of the CommonJS module. Instead they are derived from an arbitrary syntax-only analysis of the CommonJS module's JavaScript AST.</p>\n<p dir=\"auto\">To accommodate node doing this, esbuild's ESM-to-CommonJS conversion adds a special non-executable \"annotation\" for node that describes the exports that node should expose in this scenario. It takes the form <code class=\"notranslate\">0 &amp;&amp; (module.exports = { ... })</code> and comes at the end of the file (<code class=\"notranslate\">0 &amp;&amp; expr</code> means <code class=\"notranslate\">expr</code> is never evaluated).</p>\n<p dir=\"auto\">Previously esbuild didn't do this for modules re-exported using the <code class=\"notranslate\">export * from</code> syntax. Annotations for these re-exports will now be added starting with this release:</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-c\">// Original input</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">foo</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./foo'</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-c1\">*</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./bar'</span>\n\n<span class=\"pl-c\">// Old output (with --format=cjs --platform=node)</span>\n<span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span>\n<span class=\"pl-c1\">0</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-kos\">(</span><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  foo\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// New output (with --format=cjs --platform=node)</span>\n...\n<span class=\"pl-c1\">0</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-kos\">(</span><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  foo<span class=\"pl-kos\">,</span>\n  ...<span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"./bar\"</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Note that you need to specify both <code class=\"notranslate\">--format=cjs</code> and <code class=\"notranslate\">--platform=node</code> to get these node-specific annotations.</p>\n</li>\n<li>\n<p dir=\"auto\">Avoid printing an unnecessary space in between a number and a <code class=\"notranslate\">.</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/pull/3026\">#3026</a>)</p>\n<p dir=\"auto\">JavaScript typically requires a space in between a number token and a <code class=\"notranslate\">.</code> token to avoid the <code class=\"notranslate\">.</code> being interpreted as a decimal point instead of a member expression. However, this space is not required if the number token itself contains a decimal point, an exponent, or uses a base other than 10. This release of esbuild now avoids printing the unnecessary space in these cases:</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-c\">// Original input</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1000</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">0</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">0.1</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">0.0001</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">0xFFFF_0000_FFFF_0000</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Old output (with --minify)</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1e3</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">0</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">.1</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">1e-4</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">0xffff0000ffff0000</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// New output (with --minify)</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1e3</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">0</span> <span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">.1</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">1e-4</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">0xffff0000ffff0000</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Fix server-sent events with live reload when writing to the file system root (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/3027\">#3027</a>)</p>\n<p dir=\"auto\">This release fixes a bug where esbuild previously failed to emit server-sent events for live reload when <code class=\"notranslate\">outdir</code> was the file system root, such as <code class=\"notranslate\">/</code>. This happened because <code class=\"notranslate\">/</code> is the only path on Unix that cannot have a trailing slash trimmed from it, which was fixed by improved path handling.</p>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/esbuild/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/evanw/esbuild/compare/b2b897870564a6b8e8bc802a140c55bf602de31b...ee646b4ed8d3b9567e1a0ce2e478241b68a2a2e4\">See the full diff on Github</a>. The new version differs by 27 commits:</p>\n<ul>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ee646b4ed8d3b9567e1a0ce2e478241b68a2a2e4\"><code>publish 0.17.18 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ecea1f4b9f812930a2dc104212e7f30eba679415\"><code>put back comment that was removed</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/9092a1ba1e7ccc92d0dfbb83eab3450cec279397\"><code>perf(linker): Fixes brute force chunk cycle detection  (#3069)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/dbefad525a85d33be6093c370939df05401e57e8\"><code>fix #3067: crash due to bad subpath import error</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/1365a07a2088b703241f34342b2d3892fd769d78\"><code>fix #3070: fix detection of non-default re-exports</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/81cb21c05e547525127215786d5eb45505ec6842\"><code>add back warning for #466</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/0776a4be2bb80980482b123a9a05dbf55cc35683\"><code>publish 0.17.17 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8eb364d67042858935a42f9e62f6f4dd26291a30\"><code>fix #3058: support `extends` that uses `exports`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/23cee5105bbc6a41c2a05b2466d49015910fb083\"><code>pull out common tsconfig search logic</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ecb3a8933f2058cfba93e600fccc100473d1df91\"><code>fix #3062: watch mode with `NODE_PATH` edge case</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/a4e19a7830618ece19ad68c18e345bb102016e7e\"><code>fix #3052: replace top-level `&amp;` css with `:scope`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/f0704baa38ef9a808b7e34cac75aa4ac285bb087\"><code>publish 0.17.16 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/7985bca2adea0328a385ad98186ce630e6a4e0df\"><code>add &quot;; charset=utf-8&quot; to json and xhtml</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/64edd89edeb10ef16f40594caab6e2fdf04d7cb7\"><code>feat: add xhtml to guessed mime types (#3042)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/c7c5a8660c86b013096dc8eff5920ea9b80121b4\"><code>fix #3041: allow injecting copied files</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ab15c7039b0bd33b9b4867dd103fc5b241c7b0ad\"><code>update go 1.20.2 =&gt; 1.20.3</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8b885fd876a330ca8da6fa22a44277a4fa759626\"><code>fix #3046: missing combinator bug with nested css</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/e9413cc4f7ab87263ea244a999c6fa1f1e34dc65\"><code>parse decorators in js (but still generate errors)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/033c5da33ac6854180d1097b4925559f20a266ee\"><code>add decorators to compat table</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/7cd307d4c03d55cabf03779c93d897d640c7eaba\"><code>print decorators in js printer</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ebc97181a2370692f8a5aa379d86eda198e1d273\"><code>move decorator parser from ts to js</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/27cd4c08796986e02fd09ba4b546c4e8aec38ff3\"><code>rename: TSDecorators =&gt; Decorators</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ef912892181e27386205d110c622c55c4c1df856\"><code>publish 0.17.15 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/f780ad3b10b60798b33adac85ab2f03d0918d634\"><code>fix #3027: live reload SSE when outdir is `/`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/fa974c2226ee951006ec14308dab10200d54b469\"><code>close #3026: remove unneeded spaces after numbers</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/b86e58128d9c9281c92c3bca3b2f1a0a5131eaf8\"><code>fix #2486, fix #3029: node re-export annotations</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/9fbf1fd3bd6e6b923b48392b6d2a6ea1374ccfae\"><code>fix #3033: mapped type parameters can be keywords</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11068","RelatedDescription":"Closed or merged PR \"Update postcss: 8.4.21 → 8.4.23 (patch)\" (#11068)"},{"Id":"1679638458","IsPullRequest":false,"CreatedAt":"2023-04-22T17:59:11","Actor":"ibilux","Number":"11064","RawContent":null,"Title":"Dark mode doesn't work in v3.3.1","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\nThe dark mode doesn't work in `v3.3.1` anymore in some browsers.\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nSveltekit 1.15.7, vite 4.3.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What browser are you using?**\r\n\r\nFalkon\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Reproduction URL**\r\n\r\nThe dark mode in the tailwind official site can't apply.\r\n\r\n**Describe your issue**\r\n\r\nThe dark mode doesn't work (don't apply) in `v3.3.1` anymore in some browsers (Android 8.1 and Falkon brwosers).\r\nIt was working in previous versions `v3.2.7`.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11064","RelatedDescription":"Open issue \"Dark mode doesn't work in v3.3.1\" (#11064)"},{"Id":"1679374110","IsPullRequest":true,"CreatedAt":"2023-04-22T06:47:47","Actor":"depfu[bot]","Number":"11062","RawContent":null,"Title":"Update esbuild: 0.17.14 → 0.17.17 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ resolve (1.22.1 → 1.22.3) · [Repo](https://github.com/browserify/resolve)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/browserify/resolve/compare/8eea601093612229da100e9dfbeb4b2b47693aa6...d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\">See the full diff on Github</a>. The new version differs by 11 commits:</p>\n<ul>\n<li><a href=\"https://github.com/browserify/resolve/commit/d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\"><code>v1.22.3</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/5e3fbba65b6c30254dfe815e5007cde2ac4d3cd2\"><code>[Deps] update `is-core-module`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/122bb64be2f4fcf927fd264d4b2c9ea622611c58\"><code>[Refactor] deprecated `lib/core.js` now uses data from `is-core-module` also</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/c2f9ce254f0157b5e2e53e9aee0403c510909f7d\"><code>v1.22.2</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/ed8f81b7216e16191aee3985c158eca707d43de0\"><code>[Refactor] deprecated `lib/core.js` now uses `is-core-module`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/1454fdfabcd641e6d1f6235a3524e846ca011736\"><code>[Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/531b6f6a2d16f78ab3020ec9d783a6c93a0f71d7\"><code>[Dev Deps] update `array.prototype.map`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/39c71438636e5c09e514af3ae03701098dd10742\"><code>[meta] cp core.json on prepack instead of prepublishOnly</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/04ca70410a681da6d87e5b8e4c280a1a9b66eca1\"><code>[Deps] update `is-core-module`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/6960e34b2e22a1dc85ee27e03fe1c7e8ed8f60cd\"><code>[Dev Deps] update `aud`, `tape`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/94978fed60c4c89ece759c825a81e823b6593288\"><code>[Deps] update `is-core-module`</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11062","RelatedDescription":"Closed or merged PR \"Update esbuild: 0.17.14 → 0.17.17 (minor)\" (#11062)"},{"Id":"1676599577","IsPullRequest":false,"CreatedAt":"2023-04-21T19:48:14","Actor":"Serator","Number":"11045","RawContent":null,"Title":"Underscores do not respect in the new line-height modifier","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nplay.tailwindcss.com\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/NmUTJDQPDF\r\n\r\n**Describe your issue**\r\n\r\n![image](https://user-images.githubusercontent.com/625005/233361836-600d5c54-52c2-4acd-b66a-b2360aaea209.png)\r\n\r\nUnderscores are not converted to spaces in the new line-height modifier.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11045","RelatedDescription":"Closed issue \"Underscores do not respect in the new line-height modifier\" (#11045)"},{"Id":"1678810547","IsPullRequest":true,"CreatedAt":"2023-04-21T19:42:59","Actor":"RobinMalfait","Number":"11057","RawContent":null,"Title":"Normalize arbitrary modifiers","State":"closed","Body":"This PR fixes an issue where arbitrary modifiers are not treated the same as arbitrary values.\n\nCurrently it is not possible to use underscores (`_`) in arbitrary modifiers because they stay there as-is instead of getting replaced by spaces.\n\nThis PR makes sure that the arbitrary modifiers are normalized, it will use the same rules as arbitrary values. This means that you should be able to use `_` instead of a space. If you do want to keep the `_` then you have to escape it using `\\_`.\n\nFixes: #11045\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11057","RelatedDescription":"Closed or merged PR \"Normalize arbitrary modifiers\" (#11057)"},{"Id":"1678714894","IsPullRequest":false,"CreatedAt":"2023-04-21T18:08:36","Actor":"leonardofficial","Number":"11056","RawContent":null,"Title":"Tailwind + NX Monorepo packages","State":"closed","Body":"We have a monorepo using NX. We would like to package multiple npm modules that contain custom components. The structure is as follows:\r\n`packages/\r\n   - package1/\r\n   - package2/\r\n`\r\n\r\nIdeally every package has it's own .SCSS that imports tailwind and allows to use @apply for custom styles when needed. \r\n\r\nHere is the issue:\r\nIf we use components of package1 in package2 tailwind seems to overwrite itself, e.g. inspecting via chrome console will show the styles breakdown and will show the styles of taikwind twice indicating its imported once via package1 and once via package2. \r\nAlso importing components can have weird side effects. E.g. Using components within package1 are all fine, but using components of package1 in package2 will suddenly break simple styles as “align-center” just flat out ignoring it. This leads to overwriting styles with important !  However this is obviously far from ideal. \r\n\r\nSorry for not posting more details, happy to supply some configs, if needed, but I am guessing there is something falsely configured for importing / exporting tailwind in the packages. Any ideas on what configs we would need to adjust to resolve this issue?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11056","RelatedDescription":"Closed issue \"Tailwind + NX Monorepo packages\" (#11056)"},{"Id":"1678889389","IsPullRequest":true,"CreatedAt":"2023-04-21T18:01:26","Actor":"depfu[bot]","Number":"11058","RawContent":null,"Title":"Update resolve: 1.22.1 → 1.22.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​swc/jest (0.2.24 → 0.2.26)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11058","RelatedDescription":"Closed or merged PR \"Update resolve: 1.22.1 → 1.22.3 (patch)\" (#11058)"},{"Id":"1675558096","IsPullRequest":true,"CreatedAt":"2023-04-21T16:31:04","Actor":"depfu[bot]","Number":"11038","RawContent":null,"Title":"Upgrade rimraf: 4.4.0 → 5.0.0 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ rimraf (4.4.0 → 5.0.0) · [Repo](https://github.com/isaacs/rimraf) · [Changelog](https://github.com/isaacs/rimraf/blob/main/CHANGELOG.md)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/isaacs/rimraf/compare/cd0b6f485b6334fb7ee45d3af716be7105293296...98ee1e9e5784f776b71df27b73058afb026613f4\">See the full diff on Github</a>. The new version differs by 5 commits:</p>\n<ul>\n<li><a href=\"https://github.com/isaacs/rimraf/commit/98ee1e9e5784f776b71df27b73058afb026613f4\"><code>5.0.0</code></a></li>\n<li><a href=\"https://github.com/isaacs/rimraf/commit/5d2b876c0700720395357f117858e282be070b1e\"><code>update to typescript 5</code></a></li>\n<li><a href=\"https://github.com/isaacs/rimraf/commit/c7a3fd4e7e299eb5ba27d913e1d4d04951eb661d\"><code>Named export only, no default export</code></a></li>\n<li><a href=\"https://github.com/isaacs/rimraf/commit/04bcedfd7bb8d39e657d513cc6542758db6dc130\"><code>4.4.1</code></a></li>\n<li><a href=\"https://github.com/isaacs/rimraf/commit/a96c8ffcee0253d873dca480deb4abba92570655\"><code>add inline sources to tsconfig</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11038","RelatedDescription":"Closed or merged PR \"Upgrade rimraf: 4.4.0 → 5.0.0 (major)\" (#11038)"},{"Id":"1677500325","IsPullRequest":false,"CreatedAt":"2023-04-21T10:21:35","Actor":"projct1","Number":"11048","RawContent":null,"Title":"Pseudoselector empty with prefix not working","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nmix-tailwindcss  1.3.0\r\nlaravel-mix 5.0.9\r\n\r\n**What version of Node.js are you using?**\r\n16.19.1\r\n\r\n**Describe your issue**\r\nI trying use incredible tailwind with prefix `tw-` for class `tw-empty:hidden`, but rule is not created :(\r\n\r\n![image](https://user-images.githubusercontent.com/9752959/233498251-bab8016b-1c5a-479f-b875-74479c801b20.png)\r\n![image](https://user-images.githubusercontent.com/9752959/233498316-6ab2b564-e82a-47c2-9e3a-c29bfa07a537.png)\r\n\r\nHere is my `tailwind.config.js`:\r\n```javascript\r\nmodule.exports = {\r\n    prefix: 'tw-',\r\n    plugins: [],\r\n    content: ['./public_html/**/*.phtml', './resources/**/*.js'],\r\n    theme: {\r\n        extend: {\r\n            fontFamily: {\r\n                sans: ['Roboto'],\r\n                serif: ['Lora']\r\n            }\r\n        }\r\n  }\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11048","RelatedDescription":"Closed issue \"Pseudoselector empty with prefix not working\" (#11048)"},{"Id":"1678212148","IsPullRequest":false,"CreatedAt":"2023-04-21T10:20:57","Actor":"sir-kokabi","Number":"11055","RawContent":null,"Title":"Horizontal spacing issue with the first child element in Persian language","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnone.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nnone.\r\n\r\n**What browser are you using?**\r\n\r\nChrome.\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nSample repo: https://github.com/sir-kokabi/sample\r\nPreview link: https://refined-github-html-preview.kidonng.workers.dev/sir-kokabi/sample/raw/main/index.html\r\n\r\n```html <!doctype html>\r\n<html dir=\"rtl\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <script src=\"https://cdn.tailwindcss.com\"></script>\r\n</head>\r\n<body>\r\n  <ul class=\"flex space-x-10\">\r\n    <li>یک</li>\r\n    <li>دو</li>\r\n    <li>سه</li>\r\n    <li>چهار</li>\r\n  </ul>\r\n</body>\r\n</html>\r\n```\r\n\r\n**Describe your issue**\r\nIn the Persian language, the first child element does not get affected by the [horizontal spacing](https://tailwindcss.com/docs/space#add-horizontal-space-between-children) set between its sibling elements (i.e., using the \"space-x-10\" class). Only the second and subsequent child elements will have this spacing applied to them.\r\n\r\n![image](https://user-images.githubusercontent.com/116794136/233598382-3e2b2627-270a-4a37-bbd0-7e7ad67439c2.png)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11055","RelatedDescription":"Closed issue \"Horizontal spacing issue with the first child element in Persian language\" (#11055)"},{"Id":"1677658221","IsPullRequest":true,"CreatedAt":"2023-04-21T03:15:24","Actor":"depfu[bot]","Number":"11052","RawContent":null,"Title":"Upgrade @swc/jest: 0.2.24 → 0.2.26 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​swc/jest (0.2.24 → 0.2.26)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11052","RelatedDescription":"Closed or merged PR \"Upgrade @swc/jest: 0.2.24 → 0.2.26 (minor)\" (#11052)"},{"Id":"1676802601","IsPullRequest":false,"CreatedAt":"2023-04-20T14:05:48","Actor":"Serator","Number":"11046","RawContent":null,"Title":"Color / font size values are not recognized in some cases or are not recognized correctly","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nplay.tailwindcss.com\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/GFT8QOeZfA\r\n\r\n**Describe your issue**\r\n\r\n![image](https://user-images.githubusercontent.com/625005/233391280-81430dd5-c042-4324-826a-7923a0343e11.png)\r\n\r\nThe example at the link has several dozen tests, of which the red ones seem to me to work incorrectly, and the green ones to work correctly. This is far from complete coverage, but only reflects the cases I have encountered.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11046","RelatedDescription":"Open issue \"Color / font size values are not recognized in some cases or are not recognized correctly\" (#11046)"},{"Id":"1676117793","IsPullRequest":false,"CreatedAt":"2023-04-20T10:28:13","Actor":"NaCoLiu","Number":"11042","RawContent":null,"Title":"tailwindcss width no support  inherit  type","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\ntailwindcss width no support  inherit  type\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n  \"tailwindcss\": \"^3.3.1\"\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nastrojs\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.14.2\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n\r\n**What operating system are you using?**\r\n\r\nMacOS\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11042","RelatedDescription":"Closed issue \"tailwindcss width no support  inherit  type\" (#11042)"},{"Id":"1676333796","IsPullRequest":false,"CreatedAt":"2023-04-20T10:27:10","Actor":"papazetis","Number":"11044","RawContent":null,"Title":"Preflight img","State":"closed","Body":"I think that img {display: block} is wrong - I haven't tested svg, video, canvas, audio, iframe, embed, object yet\r\n\r\nIt's causing an issue when you add an image next to a text\r\n\r\nAll modern frameworks, like bootstrap and uikit, have only {vertical-align: middle}","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11044","RelatedDescription":"Closed issue \"Preflight img\" (#11044)"},{"Id":"1674978650","IsPullRequest":false,"CreatedAt":"2023-04-19T21:31:40","Actor":"Serator","Number":"11034","RawContent":null,"Title":"Calculation of multiple `theme()` does not work in arbitrary properties","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nplay.tailwindcss.com\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/1Z2PI86485\r\n\r\n**Describe your issue**\r\n\r\nThe `calc()` function breaks when it has more than one occurrence of `theme()`. This only happens in arbitrary properties. In arbitrary values, everything works as expected.\r\n\r\nI can't be 100% sure, but it seems to have worked in previous versions of Tailwind.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11034","RelatedDescription":"Closed issue \"Calculation of multiple `theme()` does not work in arbitrary properties\" (#11034)"},{"Id":"1675608909","IsPullRequest":true,"CreatedAt":"2023-04-19T21:06:33","Actor":"RobinMalfait","Number":"11039","RawContent":null,"Title":"Ensure multiple `theme(spacing[5])` calls with bracket notation in arbitrary properties work","State":"closed","Body":"This PR fixes an issue where multiple calls using `theme(spacing[5])` with arbitrary properties wouldn't be matched completely.\n\nThe issue is that the brackets \n\nGiven this input:\n```html\n<div class=\"[width:_calc(theme(spacing[5])_+_theme(spacing[5]))]\"></div>\n```\n\nThen we would expect the match to be this:\n```\n[width:_calc(theme(spacing[5])_+_theme(spacing[5]))]\n```\n\nHowever, before this change, it would stop too early and it results in:\n```\n[width:_calc(theme(spacing[5])_+_theme(spacing[5]\n```\n\nWhich makes it incomplete because the `))]` are missing at the end.\n\nThis also means that the matched candidate (class in your html) is incomplete and not valid.\n\nFixes: #11034\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11039","RelatedDescription":"Closed or merged PR \"Ensure multiple `theme(spacing[5])` calls with bracket notation in arbitrary properties work\" (#11039)"},{"Id":"1675010492","IsPullRequest":false,"CreatedAt":"2023-04-19T15:23:54","Actor":"Serator","Number":"11036","RawContent":null,"Title":"Simplified entry `var()` does not work inside `calc()`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nplay.tailwindcss.com\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/nOih8esZYq\r\n\r\n**Describe your issue**\r\n\r\n* https://tailwindcss.com/blog/tailwindcss-v3-3#css-variables-without-the-var\r\n* https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values\r\n\r\nThe documentation does not mention any restrictions.\r\n\r\nThe simplified `--var` entry does not work in the case of `calc()`, while it works in the familiar `var(--var)` entry.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11036","RelatedDescription":"Closed issue \"Simplified entry `var()` does not work inside `calc()`\" (#11036)"},{"Id":"1674015579","IsPullRequest":false,"CreatedAt":"2023-04-19T01:35:59","Actor":"hdayi","Number":"11031","RawContent":null,"Title":"caught SyntaxError: Unexpected token 'export'","State":"closed","Body":"Tailwindcss: 3.3.1\r\ntw-elements: 1.0.0-beta2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nI am not using anything just running command:\r\nnpx tailwindcss -i ./src/input.css -o ./build/css/style.css --watch\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode: 18.15.0\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\n macOS\r\n\r\n**Reproduction URL**\r\n\r\nN/A\r\n\r\n**Describe your issue**\r\nat broswer's console I see this error:\r\ncaught SyntaxError: Unexpected token 'export' tw-elements-es.min.js 11239","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11031","RelatedDescription":"Closed issue \"caught SyntaxError: Unexpected token 'export'\" (#11031)"},{"Id":"1673964063","IsPullRequest":true,"CreatedAt":"2023-04-18T23:44:38","Actor":"depfu[bot]","Number":"11030","RawContent":null,"Title":"Update sass: 1.59.3 → 1.62.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ sass (1.59.3 → 1.62.0) · [Repo](https://github.com/sass/dart-sass) · [Changelog](https://github.com/sass/dart-sass/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/sass/dart-sass/releases/tag/1.62.0\">1.62.0</a></h4>\n\n<blockquote><p dir=\"auto\">To install Sass 1.62.0, download one of the packages below and <a href=\"https://katiek2.github.io/path-doc/\">add it to your PATH</a>, or see <a href=\"https://sass-lang.com/install\">the Sass website</a> for full installation instructions.</p>\n<h1 dir=\"auto\">Changes</h1>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Deprecate the use of multiple <code class=\"notranslate\">!global</code> or <code class=\"notranslate\">!default</code> flags on the same variable. This deprecation is named <code class=\"notranslate\">duplicate-var-flags</code>.</p>\n</li>\n<li>\n<p dir=\"auto\">Allow special numbers like <code class=\"notranslate\">var()</code> or <code class=\"notranslate\">calc()</code> in the global functions: <code class=\"notranslate\">grayscale()</code>, <code class=\"notranslate\">invert()</code>, <code class=\"notranslate\">saturate()</code>, and <code class=\"notranslate\">opacity()</code>. These are also native CSS <code class=\"notranslate\">filter</code> functions. This is in addition to number values which were already allowed.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix a cosmetic bug where an outer rule could be duplicated after nesting was resolved, instead of re-using a shared rule.</p>\n</li>\n</ul>\n<p dir=\"auto\">See the <a href=\"https://bounce.depfu.com/github.com/sass/dart-sass/blob/master/CHANGELOG.md#1620\">full changelog</a> for changes in earlier releases.</p></blockquote>\n<h4><a href=\"https://github.com/sass/dart-sass/releases/tag/1.61.0\">1.61.0</a></h4>\n\n<blockquote><p dir=\"auto\">To install Sass 1.61.0, download one of the packages below and <a href=\"https://katiek2.github.io/path-doc/\">add it to your PATH</a>, or see <a href=\"https://sass-lang.com/install\">the Sass website</a> for full installation instructions.</p>\n<h1 dir=\"auto\">Changes</h1>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><strong>Potentially breaking change:</strong> Drop support for End-of-Life Node.js 12.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix remaining cases for the performance regression introduced in 1.59.0.</p>\n</li>\n</ul>\n<h3 dir=\"auto\">Embedded Sass</h3>\n<ul dir=\"auto\">\n<li>The JS embedded host now loads files from the working directory when using the legacy API.</li>\n</ul>\n<p dir=\"auto\">See the <a href=\"https://bounce.depfu.com/github.com/sass/dart-sass/blob/master/CHANGELOG.md#1610\">full changelog</a> for changes in earlier releases.</p></blockquote>\n<h4><a href=\"https://github.com/sass/dart-sass/releases/tag/1.60.0\">1.60.0</a></h4>\n\n<blockquote><p dir=\"auto\">To install Sass 1.60.0, download one of the packages below and <a href=\"https://katiek2.github.io/path-doc/\">add it to your PATH</a>, or see <a href=\"https://sass-lang.com/install\">the Sass website</a> for full installation instructions.</p>\n<h1 dir=\"auto\">Changes</h1>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add support for the <code class=\"notranslate\">pi</code>, <code class=\"notranslate\">e</code>, <code class=\"notranslate\">infinity</code>, <code class=\"notranslate\">-infinity</code>, and <code class=\"notranslate\">NaN</code> constants in calculations. These will be interpreted as the corresponding numbers.</p>\n</li>\n<li>\n<p dir=\"auto\">Add support for unknown constants in calculations. These will be interpreted as unquoted strings.</p>\n</li>\n<li>\n<p dir=\"auto\">Serialize numbers with value <code class=\"notranslate\">infinity</code>, <code class=\"notranslate\">-infinity</code>, and <code class=\"notranslate\">NaN</code> to <code class=\"notranslate\">calc()</code> expressions rather than CSS-invalid identifiers. Numbers with complex units still can't be serialized.</p>\n</li>\n</ul>\n<p dir=\"auto\">See the <a href=\"https://bounce.depfu.com/github.com/sass/dart-sass/blob/master/CHANGELOG.md#1600\">full changelog</a> for changes in earlier releases.</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/sass/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/sass/dart-sass/compare/09a5f09638b3d7a57f55907abcab624f98629d81...c55235d166591e86ed342a1b5937b3d600e4d4de\">See the full diff on Github</a>. The new version differs by 8 commits:</p>\n<ul>\n<li><a href=\"https://github.com/sass/dart-sass/commit/c55235d166591e86ed342a1b5937b3d600e4d4de\"><code>Don&#39;t separate out media queries after one has bubbled (#1933)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/e68818a86e8fe47de80ebd7d4b7348ef1d38fd2c\"><code>Allow global Sass function colliding with CSS native functions to use CSS variables (#1926)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/283bdc00637082404bfb3a5b45186699e07381cd\"><code>Deprecate duplicate !global and !default declarations (#1931)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/702a7ee7a18c0265f8f90ff1155268e477dd77cf\"><code>Fix the performance of selector span expansion (#1929)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/4ddd8f5131232796e353bdac4da057fbe0a8707d\"><code>Add a changelog entry for sass/embedded-host-node#212 (#1928)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/60b8be6510e94cd86ba18c9dd9b80c197f3b988a\"><code>Remove Node 12 from CI (#1925)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/c6e7dbc0cd75f9d50f4091f7a53f9f9e3c6cc2de\"><code>Require node&gt;=14.0.0 (#1911)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/f5a3dea748567339fcace19cf43f967b9337229e\"><code>Add support for constants in calculations (#1922)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11030","RelatedDescription":"Closed or merged PR \"Update sass: 1.59.3 → 1.62.0 (minor)\" (#11030)"},{"Id":"1671634168","IsPullRequest":false,"CreatedAt":"2023-04-18T14:44:43","Actor":"remiconnesson","Number":"11024","RawContent":null,"Title":"in 3.3 `@apply dark: ` doesn't work anymore with vue `:deep(.child-class)`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nvite4 and vite3 (happened with both)\r\n\r\n**What version of Node.js are you using?**\r\nv19.1.0\r\n\r\n**What browser are you using?**\r\n Chrome\r\n\r\n**What operating system are you using?**\r\nWSL2 ubuntu 22\r\n\r\n**Reproduction URL**\r\nhttps://github.com/remiconnesson/tailwind-vue-deep-apply-dark-bug\r\n\r\n**Describe your issue**\r\nhello,\r\n\r\ntailwincss is set in `darkMode: \"class\"` and we are using `useDark` from `vueUse` to add and remove the dark class.\r\n\r\nin `App.vue` we have a child component \r\n```html\r\n<template>\r\n  [ ... ]\r\n  <div class=\"wrapper\">\r\n    <ChildText />\r\n  </div>\r\n  [ ... ]\r\n</template>\r\n\r\n<style scoped>\r\n[...]\r\n.wrapper :deep(.child-text) {\r\n  @apply text-pink-700 dark:text-yellow-300;\r\n}\r\n[...]\r\n</style>\r\n```\r\n\r\ntargeting `@/components/ChildText.vue`\r\n```html\r\n<template>\r\n  <div class=\"child-text text-xl mt-8\">\r\n    I am targeted by my parent component with\r\n  </div>\r\n  [...]\r\n</template>\r\n```\r\n\r\nbut the `dark:` modifier doesn't work in `3.3` when it used it work in `3.2`\r\n\r\nas shown in the screenshot below\r\n\r\n- with `@3.3`, in the repro, one line of text should be yellow but is pink instead\r\n\r\n<img width=\"340\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28846642/232557687-5a00bc6b-d02c-4fd0-9c8f-5e603f5c1c06.png\">\r\n\r\n- with `@3.2` we observe the correct behavior\r\n\r\n<img width=\"558\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28846642/232558059-eb5a6e9c-3c4a-4d02-80c1-01f146c04e7f.png\">\r\n\r\n\r\n---\r\nP.S: in `App.vue`\r\n\r\n```html\r\n<template>\r\n  [...]\r\n  <span class=\"block classic-apply\">this is the target of an @apply rule</span>\r\n  [...]\r\n</template>\r\n\r\n<style scoped>\r\n/* A */\r\n.classic-apply {\r\n  @apply text-xl text-orange-700 dark:text-white;\r\n}\r\n</style>\r\n\r\n/* B */\r\n<style>\r\n.wrapper .child-text-global {\r\n  @apply text-sky-700 dark:text-purple-300;\r\n}\r\n</style>\r\n```\r\n\r\nwe show that the dark modifier do work with \r\n- (A.) `apply` + `dark:` does work for elements in the same SFC inside a scoped style block\r\n- (B.) `apply` + `dark:` does work inside a global style block\r\n\r\n---\r\nP.P.S: As stated in the vue doc here\r\nhttps://vuejs.org/api/sfc-css-features.html#scoped-css\r\n\r\nvue transforms this \r\n```\r\n<style scoped>\r\n.a :deep(.b) {\r\n  /* ... */\r\n}\r\n</style>\r\n```\r\n\r\ninto this\r\n\r\n```\r\n.a[data-v-f3f3eg9] .b {\r\n  /* ... */\r\n}\r\n```\r\n\r\nso this issue might not be only related to an interaction vuejs","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11024","RelatedDescription":"Closed issue \"in 3.3 `@apply dark: ` doesn't work anymore with vue `:deep(.child-class)`\" (#11024)"},{"Id":"1672927968","IsPullRequest":false,"CreatedAt":"2023-04-18T11:37:20","Actor":"thibaudcolas","Number":"11027","RawContent":null,"Title":"Incorrect parsing of theme functions within calc operations without spaces","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n[play.tailwindcss.com](https://play.tailwindcss.com/) or Webpack\r\n\r\n**What version of Node.js are you using?**\r\n\r\nN/A\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/sQrIVhIaM7?file=css\r\n\r\n**Describe your issue**\r\n\r\nUsage of the `theme` function isn’t getting replaced by the corresponding value when the function is in a `calc` expression without spaces. For example:\r\n\r\n```css\r\n.test {\r\n  /* Input: */\r\n  inset: calc(-1 * (2*theme(\"spacing.4\")));\r\n  /* Expected: */\r\n  inset: calc(-1 * (2*1rem));\r\n  /* Actual: */\r\n  inset: calc(-1 * (2*theme(\"spacing.4\")));\r\n}\r\n```\r\n\r\n---\r\n\r\nI believe this might be the same issue as https://github.com/TrySound/postcss-value-parser/issues/86, but thought I’d report it here as I’m not 100% sure and it definitely affects Tailwind.\r\n\r\nThis happened for us because we use Sass alongside Tailwind, via Webpack. sass-loader apparently outputs Sass differently in Webpack production and development mode (https://github.com/webpack-contrib/sass-loader/issues/1129), with spaces removed in production.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11027","RelatedDescription":"Open issue \"Incorrect parsing of theme functions within calc operations without spaces\" (#11027)"},{"Id":"1672062260","IsPullRequest":false,"CreatedAt":"2023-04-17T23:16:53","Actor":"PeytonHanel","Number":"11025","RawContent":null,"Title":"Flex justify content is not overridden by breakpoints.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nsveltekit 1.11.0\r\nsvelte 3.56.0\r\npostcss 8.4.21\r\nvite 4.1.4\r\n\r\n**What version of Node.js are you using?**\r\n\r\n19.7.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Brave, Firefox\r\n\r\n**What operating system are you using?**\r\n \r\nUbuntu\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/AIl9NEG9OW\r\n\r\n**Describe your issue**\r\n\r\nAttempting to override justify-* with a breakpoint does not work. Any justify-* without a breakpoint is always enabled. You can see in the reproduction that other breakpoints work as expected, but justify-center is not overridden by justify-left.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11025","RelatedDescription":"Closed issue \"Flex justify content is not overridden by breakpoints.\" (#11025)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-25T03:30:28.0375178Z","RunDurationInMilliseconds":600}