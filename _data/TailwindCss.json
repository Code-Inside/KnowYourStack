{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2304786515","IsPullRequest":false,"CreatedAt":"2024-05-19T21:18:28","Actor":"tsukinoko-kun","Number":"13709","RawContent":null,"Title":"not working in docker","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nDocker Compose\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: 20.13.1\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nWhen running tailwindcss cli in a docker container, it isn't doing anything. Exits with code 0.\r\n\r\n```Dockerfile\r\nFROM node:current-bullseye\r\nWORKDIR /App/BlazorApp\r\nRUN [\"npm\", \"install\", \"-g\", \"pnpm\"]\r\nENTRYPOINT [\"bash\", \"-c\", \"pnpm install && pnpm exec tailwindcss -i ./Styles/app.css -o ./wwwroot/app.css --watch\"]\r\n```\r\n\r\nIsn't working with or without `--watch`.\r\nIsn't working with or without `tty: true` in compose.yaml (#5324).\r\n\r\nIf I run the same thing outside of Docker it works as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13709","RelatedDescription":"Open issue \"not working in docker\" (#13709)"},{"Id":"2304642261","IsPullRequest":false,"CreatedAt":"2024-05-19T14:39:36","Actor":"un33k","Number":"13708","RawContent":null,"Title":"[Prettier Plugin] Handle two more plugins","State":"open","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/13630\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **un33k** May  3, 2024</sup>\r\n### Description\r\nWe are encountering a compatibility issue where certain Prettier plugins must be able to precede the Tailwind CSS plugin without losing functionality or disabling Tailwind. This compatibility is crucial for maintaining our project's code formatting standards and utility functionality.\r\n\r\n### Affected Plugins\r\n- `@softonus/prettier-plugin-duplicate-remover`\r\n- `@softonus/prettier-plugin-whitespace-remover`\r\n\r\n### Desired Outcome\r\nThe desired outcome is for these plugins to function correctly when placed before the Tailwind CSS plugin in the Prettier configuration file. This would allow for better flexibility in managing code formatting and style consistency.\r\n\r\n### Current Behavior\r\n- When these plugins are placed before the Tailwind plugin: They do not function as expected.\r\n- When placed after the Tailwind plugin: They lead to the Tailwind plugin being disabled.\r\n\r\n### Steps to Reproduce\r\n1. Set up a project with Prettier and Tailwind CSS.\r\n2. Install and configure the aforementioned plugins in the `.prettierrc` file.\r\n3. Arrange the plugins before the Tailwind CSS plugin and attempt to format the files.\r\n4. Observe the lack of expected functionality from the plugins.\r\n\r\n### Suggested Solution\r\nInvestigate potential changes or enhancements in the plugin architecture or initialization sequence that would allow these plugins to operate effectively when configured before the Tailwind CSS plugin. This might involve modifications to how plugins are loaded or processed by Prettier when working with CSS frameworks like Tailwind.\r\n\r\n### Beneficial Side Effect:\r\nImplementing this change will also have the added advantage of negating the need for the Tailwind plugin to include its own duplicate and whitespace remover functionalities. This would not only streamline the Tailwind plugin but also reduce redundancy and potential conflicts between these utilities.\r\n\r\nWe appreciate your consideration and any efforts to enhance the compatibility of these tools, which are crucial for our development workflows.\r\n\r\nThey should be added to this file: https://github.com/tailwindlabs/prettier-plugin-tailwindcss/blob/3c9ce4e488c09851be1d5be37940b39679e10c1c/src/plugins.js#L174\r\n\r\n``` let plugins = [\r\n    '@ianvs/prettier-plugin-sort-imports',\r\n    '@trivago/prettier-plugin-sort-imports',\r\n    'prettier-plugin-organize-imports',\r\n    'prettier-plugin-css-order',\r\n    'prettier-plugin-import-sort',\r\n    'prettier-plugin-jsdoc',\r\n    'prettier-plugin-organize-attributes',\r\n    'prettier-plugin-style-order',\r\n    'prettier-plugin-sort-imports',\r\n    '@softonus/prettier-plugin-whitespace-remover',   // <- this one\r\n    '@softonus/prettier-plugin-duplicate-remover'   // and this one\r\n  ]\r\n```\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13708","RelatedDescription":"Open issue \"[Prettier Plugin] Handle two more plugins\" (#13708)"},{"Id":"2304313768","IsPullRequest":false,"CreatedAt":"2024-05-18T21:45:51","Actor":"MrOxMasTer","Number":"13705","RawContent":null,"Title":"```content.transform``` doesn't work in next.js","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: postcss 8.4.38, Next.js 14.2.3\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.12.2\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\n Windows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://codesandbox.io/p/devbox/next-js-tailwindcss-custom-classes-d33py9?file=%2FcreateTransform.ts%3A20%2C3&layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clwccx61y00063o6gsxauagus%2522%252C%2522sizes%2522%253A%255B71.10132158590308%252C28.89867841409692%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clwccx61y00023o6g2t4tzm3m%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clwccx61y00043o6gjjszsvyt%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clwccx61y00053o6gik44ilyf%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B61.695584680984865%252C38.304415319015135%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clwccx61y00023o6g2t4tzm3m%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clwccx61y00013o6ghresmuzp%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252FREADME.md%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%252C%257B%2522id%2522%253A%2522clwcdpfny00023o6g8n3n391p%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252Fmatchers.txt%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%252C%257B%2522id%2522%253A%2522clwck4kgl00023o6gg7uprh8c%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522initialSelections%2522%253A%255B%257B%2522startLineNumber%2522%253A5%252C%2522startColumn%2522%253A22%252C%2522endLineNumber%2522%253A5%252C%2522endColumn%2522%253A61%257D%255D%252C%2522filepath%2522%253A%2522%252Fapp%252Fpage.tsx%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%252C%257B%2522id%2522%253A%2522clwckqjba00023o6gi6whurku%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522initialSelections%2522%253A%255B%257B%2522startLineNumber%2522%253A20%252C%2522startColumn%2522%253A3%252C%2522endLineNumber%2522%253A20%252C%2522endColumn%2522%253A3%257D%255D%252C%2522filepath%2522%253A%2522%252FcreateTransform.ts%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%255D%252C%2522id%2522%253A%2522clwccx61y00023o6g2t4tzm3m%2522%252C%2522activeTabId%2522%253A%2522clwckqjba00023o6gi6whurku%2522%257D%252C%2522clwccx61y00053o6gik44ilyf%2522%253A%257B%2522id%2522%253A%2522clwccx61y00053o6gik44ilyf%2522%252C%2522tabs%2522%253A%255B%257B%2522type%2522%253A%2522UNASSIGNED_PORT%2522%252C%2522port%2522%253A3000%252C%2522id%2522%253A%2522clwcl648p009p3o6gb0q9kywy%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522path%2522%253A%2522%252F%2522%257D%255D%252C%2522activeTabId%2522%253A%2522clwcl648p009p3o6gb0q9kywy%2522%257D%252C%2522clwccx61y00043o6gjjszsvyt%2522%253A%257B%2522id%2522%253A%2522clwccx61y00043o6gjjszsvyt%2522%252C%2522activeTabId%2522%253A%2522clwcl6cop00dx3o6gslrzcz9x%2522%252C%2522tabs%2522%253A%255B%257B%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522id%2522%253A%2522clwcl6cop00dx3o6gslrzcz9x%2522%252C%2522mode%2522%253A%2522permanent%2522%257D%255D%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D\r\n\r\n**Describe your issue**\r\n\r\nI realize that next.js has its own compiler (turbo included), but it's just strange that this function is ignored by next.js altogether\r\n\r\nFor example, I gave the example above with transformation and in the file ```./transformContent.txt``` the results of the change were reflected in line 67 (the link in page.tsx in line 45 was changed), but it doesn't work.\r\n\r\nI thought it would work in tandem next.js and tailwindcss, but the changes in tailwindcss are ignored.\r\n\r\nI know an approximate solution:\r\nTaking the webpack (or turbo) field in next.config.js and prescribing the logic, but the fact that ```content.transform``` doesn't work is there","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13705","RelatedDescription":"Closed issue \"```content.transform``` doesn't work in next.js\" (#13705)"},{"Id":"2304104200","IsPullRequest":false,"CreatedAt":"2024-05-18T14:06:05","Actor":"exxsy","Number":"13702","RawContent":null,"Title":"bg-opacity doesn't work on dark mode","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.0.24\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.0.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Firefox Nightly\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/DpTJBw8PNW\r\n\r\n**Describe your issue**\r\n\r\nI am working with .bg-opacity & opacity for transition & such,\r\nBut tailwind does not apply that bg-opacity for dark mode, if you remove the dark: prefix it works well.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13702","RelatedDescription":"Closed issue \"bg-opacity doesn't work on dark mode\" (#13702)"},{"Id":"2301334561","IsPullRequest":false,"CreatedAt":"2024-05-16T21:01:19","Actor":"wesbos","Number":"13694","RawContent":null,"Title":"[v4] Sourcemaps not enabled in postcss plugin","State":"open","Body":"The postcss plugin doesn't write soucemaps when doing the lightning CSS conversion.\r\n\r\n[I think this is where it needs to happen](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/%40tailwindcss-postcss/src/index.ts#L162) but trying to patch it with pnpm does not give me sourcemaps, so Im wondering if there is a larger issue","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13694","RelatedDescription":"Open issue \"[v4] Sourcemaps not enabled in postcss plugin\" (#13694)"},{"Id":"2301144434","IsPullRequest":true,"CreatedAt":"2024-05-16T19:06:09","Actor":"wesbos","Number":"13693","RawContent":null,"Title":"Add ESM build of the `@tailwindcss/postcss` package","State":"open","Body":"This PR adds the ability to import the postcss plugin into esm files.\r\n\r\nthe package is currently published as CJS, but does not provide an export for ESM files to consume it. I ran into this when  trying to use the postcss plugin inside my esm `vite.config.ts` file.\r\n\r\nSee: https://nodejs.org/api/packages.html#conditional-exports\r\n\r\n\"import\" - matches when the package is loaded via import or import(), or via any top-level import or resolve operation by the ECMAScript module loader. Applies **regardless of the module format of the target file**.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13693","RelatedDescription":"Open PR \"Add ESM build of the `@tailwindcss/postcss` package\" (#13693)"},{"Id":"2301097089","IsPullRequest":false,"CreatedAt":"2024-05-16T18:41:50","Actor":"wesbos","Number":"13692","RawContent":null,"Title":"[v4] Publish @tailwindcss/postcss as ESM","State":"open","Body":"\"@tailwindcss/postcss\": \"^4.0.0-alpha.15\" is currently published as CJS,  while \"@tailwindcss/vite\": \"^4.0.0-alpha.15\" is published as ESM.\r\n\r\nTrying to use the postcss plugin inside a vite config file like this (with type: module set in package.json)\r\n\r\n```js\r\nimport tailwindcssPostCSS from '@tailwindcss/postcss'\r\nimport { defineConfig } from 'vite'\r\nexport default defineConfig({\r\n  css: {\r\n    postcss: {\r\n      plugins: [tailwindcssPostCSS]\r\n    },\r\n  },\r\n})\r\n\r\n```\r\n\r\nCauses this issue:\r\n\r\n\r\n✘ [ERROR] Failed to resolve entry for package \"@tailwindcss/postcss\". The package may have incorrect main/module/exports specified in its package.json: No known conditions for \".\" specifier in \"@tailwindcss/postcss\" package [plugin externalize-deps]\r\n\r\n    node_modules/esbuild/lib/main.js:1374:27:\r\n      1374 │         let result = await callback({\r\n           ╵                            ^\r\n\r\n\r\na workaround currently is to use an external postcss.config.js file:\r\n\r\n```js\r\nexport default {\r\n  plugins: {\r\n    \"@tailwindcss/postcss\": {},\r\n  },\r\n};\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13692","RelatedDescription":"Open issue \"[v4] Publish @tailwindcss/postcss as ESM\" (#13692)"},{"Id":"2294048809","IsPullRequest":false,"CreatedAt":"2024-05-16T17:21:04","Actor":"datner","Number":"13680","RawContent":null,"Title":"tailwind-cli casually emits to `stderr` ","State":"closed","Body":"https://github.com/tailwindlabs/tailwindcss/blob/5e737d858755a7149e17b5f3feaeb0d42865354d/packages/%40tailwindcss-cli/src/commands/build/index.ts#L133\r\n\r\nwhen using a tool like `process-compose` and others such executioners this causes the process to immediately exit even if the `--watch` option is passed. This should not be emitted to the error channel to begin with, it denotes a success","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13680","RelatedDescription":"Closed issue \"tailwind-cli casually emits to `stderr` \" (#13680)"},{"Id":"2291926423","IsPullRequest":false,"CreatedAt":"2024-05-13T06:37:53","Actor":"AsuraKev","Number":"13675","RawContent":null,"Title":"Border is being overwritten despite appearing after the original border class","State":"closed","Body":"Hi there\r\n\r\nI encountered a weird issue where my border is being overwritten when it shouldnt\r\n\r\nConsider the following code:\r\nWhen isActive is set to true, i then apply a border-blue-50 class to change the border color to true, I am expecting it to override my default border color which is transparent but border-transparent takes precedence for some reason. any idea? thanks\r\n\r\nconst style = clsx(\r\n    'p-2 rounded border-2 border-solid hover:border-blue-50 border-transparent flex-1 m-0',\r\n    {\r\n      'border-blue-50 bg-grey-5': isActive,\r\n    }\r\n  );\r\n  \r\n  \r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/52765572/57d39ebe-2316-4b6f-bf74-4e4b7b0baa52)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13675","RelatedDescription":"Closed issue \"Border is being overwritten despite appearing after the original border class\" (#13675)"},{"Id":"2290584627","IsPullRequest":false,"CreatedAt":"2024-05-11T01:39:55","Actor":"infinnie","Number":"13669","RawContent":null,"Title":"Cannot transition between outer and inner shadows","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nPostCSS 8.4.20\r\n\r\n**What version of Node.js are you using?**\r\nv20.12.2\r\n\r\n**What browser are you using?**\r\nEdge 124.0\r\n\r\n**What operating system are you using?**\r\nWindows 11\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/pkUehpOMec\r\n\r\n**Describe your issue**\r\nThe button in the reproduction URL above does not transition between hover and active states, because inset and outer box shadows do not transition between each other.\r\n\r\nWith manually written CSS that does not transition:\r\n```css\r\nbutton {\r\n    transition: .3s;\r\n    box-shadow: 0 2px 8px rgba(0,0,0,.1)\r\n}\r\nbutton:active {\r\n    box-shadow: inset 0 2px 6px rgba(0,0,0,.1)\r\n}\r\n```\r\n\r\nTo correctly transition\r\n```css\r\nbutton:active {\r\n    box-shadow: 0 0 transparent, inset 0 2px 6px rgba(0,0,0,.1)\r\n}\r\n```\r\n\r\nVue Playground link to a manually implemented correct shadow transition:\r\nhttps://play.vuejs.org/#eNp9U1Fv0zAQ/iuWERqTsjRZGarSMImhPcADIOAxL05ySb2ltmWfu1RV/zvnuCtdBVOUyLnvu+++s887/smYdOOBF7xEWJtBINxWirGy9ohaMdwa+Fjx+Ffx27tpUc5igKjl7CSvdLgdwqLW7TaRynhMIjNxMECDbNdphQXLs+ztLE9v2IWDXgPz8iJxQrkrB1Z2exKI5XfBS61tC7Zg2dKItpWqL9gHM7KcPktWi+axt9qrtmBvuq5bMu1xkAoCHy1pSpRaFSydu2VQC3rjlVuJVj8Rh12T1IJe29fiXZaEJ80WlwlBGZufAzeXlTraK1Z6AzaaPFMNiXl+lp1f/0928UJWNCg38Nz8qWzGppaMsKAwar0ISOUAD02FPTqrPhUpZ/GUeMLRNVp1sk8fnFY0A1PFijd6beQA9rsJW+cqXhx6JEwMg376OsXQekie480Kmsd/xB/cGGIV/2GBDncDFT9iKGwPGOH7X99gpPURXOvWD8R+BfwJTg8+eIy0O5oCsn3Cm9x+WRttkebmt7sfEWgiDk0Fo4G5n/gVp4vw+ZXW/9qdp++nPNpPvv8DO5wO/Q==","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13669","RelatedDescription":"Open issue \"Cannot transition between outer and inner shadows\" (#13669)"},{"Id":"2290368370","IsPullRequest":false,"CreatedAt":"2024-05-10T23:40:44","Actor":"HakanSungur","Number":"13667","RawContent":null,"Title":"Tailwind does not delete unused css","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n v3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss: 8.4.38\r\n\r\n**What version of Node.js are you using?**\r\n\r\n14.21.3\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nWindows\r\n\r\n**Describe your issue**\r\n\r\nTailwind does not delete unused css.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13667","RelatedDescription":"Closed issue \"Tailwind does not delete unused css\" (#13667)"},{"Id":"2287674717","IsPullRequest":false,"CreatedAt":"2024-05-09T13:14:40","Actor":"loderunner","Number":"13663","RawContent":null,"Title":"PostCSS plugin not processing changes outside base directory","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n* vite@5.2.11\r\n* postcss@8.4.38\r\n\r\n**What version of Node.js are you using?**\r\n\r\n20.12.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS, Ubuntu 20.04.6 LTS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://codesandbox.io/p/github/loderunner/tailwind-semantic-demo/monorepo-bug-demo\r\n\r\n**Reproduction method**\r\n\r\n* Wait for Vite server to start and page to load\r\n* Remove `preset` from `tailwind.config.js` and save file\r\n  * Page automatically updates => background switches to white\r\n* Add `preset` to `tailwind.config.js` and save file\r\n  * Page automatically updates => background switches to pale yellow\r\n* In `preset/src/plugin/index.ts`, change `backgroundColor` to `theme(\"colors.sun.950\")`\r\n  * Page does not automatically update, background color remains pale yellow\r\n* Refresh page\r\n  * no CSS update, background color remains pale yellow\r\n* Restart Vite server (`npm run --workspace app dev`)\r\n  * Page updates, background color switches to dark brown\r\n\r\n**Expected result**\r\n\r\nStyles auto-update on save of dependency in `preset` workspace.\r\n\r\n**Describe your issue**\r\n\r\nI am building a React app using Tailwind, Vite and PostCSS, as a monorepo. The repo currently has 2 workspaces: `app` for the React app, and `preset` which exports a Tailwind preset with themes and a plugin.\r\n\r\nThe (abridged) project layout:\r\n\r\n```\r\n├── package.json\r\n├── app\r\n│   ├── package.json\r\n│   ├── postcss.config.js\r\n│   ├── tailwind.config.js\r\n│   └── vite.config.ts\r\n└── preset\r\n    ├── package.json\r\n    └── src\r\n        └── index.ts\r\n```\r\n\r\n`app/tailwind.config.js`\r\n\r\n```js\r\nimport preset from \"preset\";\r\n\r\nexport default {\r\n  content: [\"./index.html\", \"./src/**/*.{html,js,jsx,ts,tsx}\"],\r\n  presets: [preset],\r\n};\r\n```\r\n\r\nWhen I run `vite` in dev mode, Vite server sets up \"hot module reload\" which enables automatically reloading the page on file changes.\r\n\r\nWhen I change `tailwind.config.js`, Vite HMR is able to reprocess CSS and automatically update styles. When I update styles in the `preset` workspace, Vite does not reprocess CSS, and styles are not updated, even after manually refreshing the page. The only way to force Vite to reprocess CSS is to restart the Vite server.\r\n\r\n**Intuition**\r\n\r\nIt could be that `scanDir` used [here](https://github.com/tailwindlabs/tailwindcss/blob/5e737d858755a7149e17b5f3feaeb0d42865354d/packages/%40tailwindcss-postcss/src/index.ts#L106-L107) is unable to scan directories outside of `base`, which doesn't let it [report those files as `dependency`](https://github.com/tailwindlabs/tailwindcss/blob/5e737d858755a7149e17b5f3feaeb0d42865354d/packages/%40tailwindcss-postcss/src/index.ts#L109-L130) (or `dir-dependency`) to Vite. If I manage to setup a development environment, I will test that theory and report back.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13663","RelatedDescription":"Open issue \"PostCSS plugin not processing changes outside base directory\" (#13663)"},{"Id":"2286556344","IsPullRequest":true,"CreatedAt":"2024-05-08T22:02:42","Actor":"thecrypticace","Number":"13661","RawContent":null,"Title":"Add `nth-*` variants","State":"open","Body":"This adds variants for the `:nth-child()`, `:nth-last-child()`, `:nth-of-type()`, and `:nth-last-of-type()` pseudo classes. These variants support arbitrary values as well as numeric bare values. Refer to the table below for example usasges on what selectors these variants produce:\r\n\r\n| Variant | Selector |\r\n| -- | -- |\r\n| `nth-3:*` | `&:nth-child(3)` |\r\n| `nth-[2n+1]:*` | `&:nth-child(2n+1)` |\r\n| `nth-[2n+1_of_.item]:*` | `&:nth-child(2n+1 of .item)` |\r\n| `nth-last-3:*` | `&:nth-last-child(3)` |\r\n| `nth-last-[2n+1]:*` | `&:nth-last-child(2n+1)` |\r\n| `nth-last-[2n+1_of_.item]:*` | `&:nth-last-child(2n+1 of .item)` |\r\n| `nth-of-type-3:*` | `&:nth-of-type(3)` |\r\n| `nth-of-type-[2n+1]:*` | `&:nth-of-type(2n+1)` |\r\n| `nth-last-of-type-3:*` | `&:nth-last-of-type(3)` |\r\n| `nth-last-of-type-[2n+1]:*` | `&:nth-last-of-type(2n+1)` |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13661","RelatedDescription":"Open PR \"Add `nth-*` variants\" (#13661)"},{"Id":"2286459603","IsPullRequest":true,"CreatedAt":"2024-05-08T21:00:05","Actor":"thecrypticace","Number":"13660","RawContent":null,"Title":"Use long form `<length> | <percentage>` syntax for properties","State":"open","Body":"In Firefox Nightly, when using properties that declare the shorthand syntax `<length-percentage>`, there is a bug where two properties side-by-side e.g. `var(—foo)var(—bar)` invalidate the property value when it should not. Switching the `@property` definition to use the long form syntax `<length> | <percentage>` fixes this.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13660","RelatedDescription":"Open PR \"Use long form `<length> | <percentage>` syntax for properties\" (#13660)"},{"Id":"2286338514","IsPullRequest":false,"CreatedAt":"2024-05-08T19:58:55","Actor":"bryanveloso","Number":"13659","RawContent":null,"Title":"[v4] Chrome ~v103 chokes on comma in .bg-gradient-* Utility","State":"open","Body":"Tailwind Version: `next` using Vite plugin\r\n\r\nI've been using Tailwind to design overlays in OBS Studio for years now. Recently decided to take the jump and try `next`. Ran into an odd problem in which none of my defined `bg-gradient-*` styles would show up in OBS' browser source.\r\n\r\n\"Offending\" line: https://github.com/tailwindlabs/tailwindcss/blame/5e737d858755a7149e17b5f3feaeb0d42865354d/packages/tailwindcss/src/utilities.ts#L2490\r\n\r\nTaking the example code from the documentation:\r\n\r\n```html\r\n<div class=\"h-14 bg-gradient-to-r from-cyan-500 to-blue-500\"></div>\r\n```\r\n\r\nInspecting `.bg-gradient-to-r` in **Chrome 124**:\r\n\r\n```css\r\n.bg-gradient-to-r {\r\n    background-image: linear-gradient(to right, var(--tw-gradient-stops));\r\n}\r\n```\r\n\r\nInspecting `.bg-gradient-to-r` in **Chromium 103.0.5060.134** (OBS Studio's version):\r\n\r\n```css\r\n.bg-gradient-to-r {\r\n    background-image: linear-gradient(to right, var(--tw-gradient-stops,));\r\n}\r\n```\r\n\r\nThe comma persists in the older version of Chromium, which breaks the style. Removing the comma manually fixed it. I don't file issues all that often, so I'm not sure if this is an actual bug with tailwind@next, or if I should be heading over to OBS to try to get them to upgrade their Chromium version.\r\n\r\nEither way, please let me know if anything further is needed!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13659","RelatedDescription":"Open issue \"[v4] Chrome ~v103 chokes on comma in .bg-gradient-* Utility\" (#13659)"},{"Id":"2286084224","IsPullRequest":true,"CreatedAt":"2024-05-08T17:27:00","Actor":"RobinMalfait","Number":"13658","RawContent":null,"Title":"4.0.0-alpha.15","State":"closed","Body":"Prepare next `4.0.0-alpha.15` release\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13658","RelatedDescription":"Closed or merged PR \"4.0.0-alpha.15\" (#13658)"},{"Id":"2285876891","IsPullRequest":true,"CreatedAt":"2024-05-08T16:39:10","Actor":"thecrypticace","Number":"13655","RawContent":null,"Title":"Add fallbacks for `@property` rules for Firefox","State":"closed","Body":"Firefox does not currently support `@property` so we need to fallback to declarations on `*` + pseudo elements or `:root` depending on whether or not the property is inheritable.\r\n\r\nThis PR adds fallbacks to the base layer of the generated CSS and wraps them in a `@supports (-moz-orient: auto)` so only Firefox applies these rules.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13655","RelatedDescription":"Closed or merged PR \"Add fallbacks for `@property` rules for Firefox\" (#13655)"},{"Id":"2285940315","IsPullRequest":true,"CreatedAt":"2024-05-08T16:01:02","Actor":"RobinMalfait","Number":"13657","RawContent":null,"Title":"Remove automatic `var(…)` injection","State":"open","Body":"This PR is a continuation of #13537.\n\nCurrently we reverted the merged changes so that we can get a new alpha version\nout without this change.\n\n---\n\nThis PR removes automatic `var(…)` injection for arbitrary properties, values and modifiers.\n\nThere are a few properties that use \"dashed-ident\" values, this means\nthat you can use `--my-thing` as-is without the `var(…)` around it.\n\nE.g.:\n\n```css\n.foo {\n  /* Notice that these don't have `var(…)` */\n  view-timeline-name: --timeline-name; \n  anchor-name: --sidebar;\n}\n```\n\nThis causes issues because we are now injecting a `var(…)` where it's not needed.\n\nOne potential solution is to create a list of properties where dashed idents can be used. However, they can _also_ use CSS custom properties that point to another dashed ident.\n\nE.g.:\n\n```css\n.foo {\n  --target: --sidebar;\n  anchor-name: var(--target);\n}\n```\n\nA workaround that some people used is adding a `_` in front of the variable: `mt-[_--my-thing]` this way we don't automatically inject the `var(…)` around it. This is a workaround and gross.\n\nWhile the idea of automatic var injection is neat, this causes more trouble than it's worth. Adding `var(…)` explicitly is better.\n\nA side effect of this is that we can simplify the internals for the `candidate` data structure because we don't need to track `dashedIdent` separately anymore.\n\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13657","RelatedDescription":"Open PR \"Remove automatic `var(…)` injection\" (#13657)"},{"Id":"2285895720","IsPullRequest":false,"CreatedAt":"2024-05-08T15:36:47","Actor":"gc-victor","Number":"13656","RawContent":null,"Title":"TailwindCSS is using stderr to log the messages \"Rebuilding...\" and \"Done in [x]ms\"","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.3 & next\r\n\r\n**Describe your issue**\r\n\r\nI'm working on a library that executes commands, prints errors on red when there is a stderr, and omits the stdout in case is not used the flag `--verbose`. TailwindCSS is using stderr to log the messages \"`Rebuilding...`\" and \"`Done in [x]ms`\", so it is causing a miss communication.\r\n\r\n**In the version 3.4.3:**\r\n\r\nLooks like this line is the `Rebuilding...`:\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/f1f419a9ecfcd00a2001ee96ab252739fca47564/src/cli/build/plugin.js#L278\r\n\r\nLooks like this line is the `Done in`:\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/f1f419a9ecfcd00a2001ee96ab252739fca47564/src/cli/build/plugin.js#L364\r\n\r\nIn both cases there is a previous `console.error()` too.\r\n\r\n**In the next version:**\r\n\r\nCase 1:\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/cb17447ff1aadbef482a3daceb5035b7decb6b79/packages/%40tailwindcss-cli/src/commands/build/index.ts#L208\r\n\r\nCase 2:\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/cb17447ff1aadbef482a3daceb5035b7decb6b79/packages/%40tailwindcss-cli/src/commands/build/index.ts#L135","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13656","RelatedDescription":"Open issue \"TailwindCSS is using stderr to log the messages \"Rebuilding...\" and \"Done in [x]ms\"\" (#13656)"},{"Id":"2282293064","IsPullRequest":false,"CreatedAt":"2024-05-07T13:21:54","Actor":"gauravx1102","Number":"13644","RawContent":null,"Title":"Giving error while installing tailwindcss","State":"closed","Body":"Here is the error.\r\nif (prelude[i + 1]?.[0] !== '#')\r\n                                   ^\r\n\r\nSyntaxError: Unexpected token '.'\r\n    at wrapSafe (internal/modules/cjs/loader.js:915:16)\r\n    at Module._compile (internal/modules/cjs/loader.js:963:27)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\r\n    at Module.load (internal/modules/cjs/loader.js:863:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\r\n    at Module.require (internal/modules/cjs/loader.js:887:19)\r\n    at require (internal/modules/cjs/helpers.js:74:18)\r\n    at Object.<anonymous> (/home/whoami/Desktop/SmartContactManager/scm/node_modules/yaml/dist/index.js:3:16)\r\n    at Module._compile (internal/modules/cjs/loader.js:999:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13644","RelatedDescription":"Closed issue \"Giving error while installing tailwindcss\" (#13644)"},{"Id":"2282709058","IsPullRequest":false,"CreatedAt":"2024-05-07T13:21:37","Actor":"pangchao21","Number":"13647","RawContent":null,"Title":"tailwind css installed but not working in my webpack+ umi + react project","State":"closed","Body":"\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nwebpack \r\n\r\n**What version of Node.js are you using?**\r\n\r\nv14.16.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\nDescribe your issue\r\n\r\nmy project use webpack + umi + react (i create project select vanilla js and after add react to it )\r\ni install the tailwind css follow the guide https://tailwindcss.com/docs/guides/vite\r\nno any step is missing , but the tailwindcss seems not work,\r\n\r\nconfig/config.ts\r\n![1715072704885](https://github.com/tailwindlabs/tailwindcss/assets/25843968/f2924c5e-4715-40c3-8e6e-398696d504b2)\r\n\r\ninstall steps\r\n![1715072842358](https://github.com/tailwindlabs/tailwindcss/assets/25843968/2ac087d5-e88a-49c7-abd6-bff915a61003)\r\n![1715072874993](https://github.com/tailwindlabs/tailwindcss/assets/25843968/f5c5cbc2-8ff9-4db7-b725-44e2c5e94c40)\r\n![1715072941087](https://github.com/tailwindlabs/tailwindcss/assets/25843968/3b67abcb-02ac-47ef-bccc-921c6eafa6d1)\r\n![1715073016412](https://github.com/tailwindlabs/tailwindcss/assets/25843968/79155b31-34cf-4a5c-b7bd-ee23017241a6)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13647","RelatedDescription":"Closed issue \"tailwind css installed but not working in my webpack+ umi + react project\" (#13647)"},{"Id":"2280140057","IsPullRequest":true,"CreatedAt":"2024-05-06T13:07:05","Actor":"cijiugechu","Number":"13639","RawContent":null,"Title":"Update release profile with optimization options","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\n## Description\r\n\r\nThis commit adds the following options to the release profile:\r\n- `opt-level = 3` for maximum optimization\r\n- `codegen-units = 1` to ensure maximum optimization across the whole crate\r\n- `strip = \"symbols\"` to reduce binary size by stripping symbols\r\nMore information [here](https://doc.rust-lang.org/cargo/reference/profiles.html)\r\n\r\n## Benchmarks\r\n\r\n### Before\r\n```sh\r\n ✓ src/utils/segment.bench.ts (1) 849ms\r\n     name             hz     min      max    mean     p75     p99    p995    p999      rme  samples\r\n   · segment  748,571.09  0.0007  24.8952  0.0013  0.0012  0.0119  0.0183  0.0449  ±10.22%   374286   fastest\r\n ✓ src/utils/decode-arbitrary-value.bench.ts (1) 691ms\r\n     name                          hz     min      max    mean     p75     p99    p995    p999      rme  samples\r\n   · decodeArbitraryValue  151,582.72  0.0038  31.6623  0.0066  0.0051  0.0284  0.0444  0.2131  ±12.51%    75792   fastest\r\n ✓ src/utils/infer-data-type.bench.ts (2) 995ms\r\n     name              hz     min      max    mean     p75     p99    p995    p999     rme  samples\r\n   · colors  1,003,309.42  0.0007  11.5130  0.0010  0.0008  0.0019  0.0023  0.0189  ±5.21%   501655   fastest\r\n   · colors\r\n ✓ src/css-parser.bench.ts (1) 619ms\r\n     name                                hz     min      max    mean     p75     p99    p995    p999     rme  samples\r\n   · css-parser on preflight.css  10,516.72  0.0599  19.8800  0.0951  0.1088  0.4483  0.4842  1.0035  ±8.06%     5259   fastest\r\n ✓ src/index.bench.ts (1) 1090ms\r\n     name          hz      min      max     mean      p75      p99     p995     p999      rme  samples\r\n   · compile  33.4793  21.7361  51.8996  29.8692  31.7829  51.8996  51.8996  51.8996  ±12.42%       17   fastest\r\n ✓ src/sort.bench.ts (2) 1557ms\r\n     name                                  hz     min      max    mean     p75     p99    p995    p999      rme  samples\r\n   · getClassOrder (empty theme)   722,504.87  0.0007  27.6115  0.0014  0.0009  0.0043  0.0181  0.0325  ±11.12%   361253   fastest\r\n   · getClassOrder (simple theme)  519,604.65  0.0016   0.6393  0.0019  0.0018  0.0035  0.0041  0.0121   ±1.14%   259803\r\n ✓ src/candidate.bench.ts (1) 688ms\r\n     name                hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · parseCandidate  301.32  2.7103  5.8892  3.3188  3.3856  5.8533  5.8892  5.8892  ±3.23%      151   fastest\r\n```\r\n\r\n### After\r\n\r\n```sh\r\n ✓ src/utils/segment.bench.ts (1) 845ms\r\n     name             hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · segment  945,756.24  0.0006  2.8714  0.0011  0.0014  0.0020  0.0026  0.0071  ±1.46%   472879   fastest\r\n ✓ src/css-parser.bench.ts (1) 612ms\r\n     name                                hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · css-parser on preflight.css  11,757.72  0.0597  0.5512  0.0851  0.1177  0.2720  0.3188  0.4137  ±1.22%     5882   fastest\r\n ✓ src/utils/decode-arbitrary-value.bench.ts (1) 672ms\r\n     name                          hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · decodeArbitraryValue  160,415.66  0.0039  0.6538  0.0062  0.0075  0.0121  0.0154  0.1888  ±1.06%    80208   fastest\r\n ✓ src/utils/infer-data-type.bench.ts (2) 838ms\r\n     name              hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · colors  1,122,455.24  0.0006  1.1840  0.0009  0.0013  0.0017  0.0021  0.0045  ±0.86%   561228   fastest\r\n   · colors\r\n ✓ src/index.bench.ts (1) 802ms\r\n     name          hz      min      max     mean      p75      p99     p995     p999     rme  samples\r\n   · compile  35.4800  19.5675  41.2061  28.1849  31.3982  41.2061  41.2061  41.2061  ±8.71%       18   fastest\r\n ✓ src/sort.bench.ts (2) 1526ms\r\n     name                                  hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · getClassOrder (empty theme)   864,019.92  0.0008  0.6574  0.0012  0.0014  0.0026  0.0029  0.0077  ±1.22%   432010   fastest\r\n   · getClassOrder (simple theme)  539,544.41  0.0016  0.5345  0.0019  0.0018  0.0033  0.0036  0.0092  ±0.77%   269773\r\n ✓ src/candidate.bench.ts (1) 617ms\r\n     name                hz     min     max    mean     p75     p99    p995    p999     rme  samples\r\n   · parseCandidate  282.75  2.6976  6.8881  3.5367  4.0406  5.9480  6.8881  6.8881  ±4.62%      142   fastest\r\n```\r\n\r\n### Summary\r\n\r\nPerformance improvement: \r\n\r\n- `decode-arbitrary-value` : 2.7% \r\n- `infer-data-type`: 15.7%\r\n- `compile`:  26.4%\r\n- `candidate`: 10.3%\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13639","RelatedDescription":"Closed or merged PR \"Update release profile with optimization options\" (#13639)"},{"Id":"2268170606","IsPullRequest":false,"CreatedAt":"2024-04-30T16:22:12","Actor":"brandonmcconnell","Number":"13607","RawContent":null,"Title":"v4: Bug with how the parser handles nested `quote_stack` and `bracket_stack` characters when in a string context","State":"closed","Body":"<details><summary> Technical Configuration</summary>\r\n<br>\r\n<table>\r\n    <tr></tr>\r\n    <tr>\r\n        <th align=\"left\">What version of Tailwind CSS are you using?</th>\r\n    </tr>\r\n    <tr>\r\n        <td>Next (v4, latest)</td>\r\n    </tr>\r\n    <tr>\r\n        <th align=\"left\">What build tool (or framework if it abstracts the build tool) are you using?</th>\r\n    </tr>\r\n    <tr>\r\n        <td>`pnpm build && pnpm test`</td>\r\n    </tr>\r\n    <tr>\r\n        <th align=\"left\">What version of Node.js are you using?</th>\r\n    </tr>\r\n    <tr>\r\n        <td>v21.6.1</td>\r\n    </tr>\r\n    <tr>\r\n        <th align=\"left\">What browser are you using?</th>\r\n    </tr>\r\n    <tr>\r\n        <th align=\"left\">N/A</td>\r\n    </tr>\r\n    <tr>\r\n        <th align=\"left\">What operating system are you using?</th>\r\n    </tr>\r\n    <tr>\r\n        <td>macOS</td>\r\n    </tr>\r\n</table>\r\n\r\n</details>\r\n\r\n---\r\n\r\n**Reproduction URL**\r\n\r\nThe accepted test results from #13596\r\n\r\n**Describe your issue**\r\n\r\n> attn @adamwathan @RobinMalfait\r\n\r\nThis issue delves into some of the issues surrounding why the parser doesn't properly handle `supports-[content:\"(\"]:grid`, first explored in #13596. This specific case turned out to be quite the rabbit hole.\r\n\r\nFrom what I can tell, Tailwind's Rust parser runs into issues related to its `quote_stack` and `bracket_stack` when encountering a construct like `'('`.\r\n\r\nNone of these process correctly, apparently for this same reason:\r\n* `supports-[content:'(']`\r\n* `supports-[content:'[']`\r\n* `supports-[content:'\"']`\r\n* `supports-[content:\"'\"]`\r\n\r\nThis Tailwind Play example demonstrates the issue I'm describing: https://play.tailwindcss.com/EAhSfQFfTa\r\n\r\nI can think of a few potential solutions, all of which come with trade-offs:\r\n\r\n1. We could interpret everything after an open quote as a string until we hit the closing quote. This would break some things, but we'd be able to handle brackets or quotes within strings.\r\n\r\n2. We could always ignore `bracket_stack` characters within `quote_stack` characters, but not ignore `quote_stack` characters within `bracket_stack` characters.\r\n\r\n3. Specifically enforce escaping characters related to `quote_stack` and `bracket_stack` when they're in a string context. This would mean that `supports-[content:\"(\"]` would need to be written as `supports-[content:\"\\(\"]` to work.\r\n\r\n   * `supports-[content:'(']` -> `supports-[content:'\\(']`\r\n   * `supports-[content:'[']` -> `supports-[content:'\\[']`\r\n   * `supports-[content:'\"']` -> `supports-[content:'\\\"']`\r\n   * `supports-[content:\\\"'\\\"]` -> `supports-[content:\\\"\\'\\\"]`\r\n   ☝🏼 this last one might be problematic for more reasons than one, related to escaping the same quotes used when opening the `class` attribute as well as escaping the inner `quote_stack` character\r\n\r\n4. We could strictly enforce escaping special characters like these in string contexts.\r\n\r\n   This might be most consistent and with common escape patterns, but it would also be one of the most disruptive solutions.\r\n   \r\n   In the case of my Multi plugin, for example, I was surprised—when chatting with @RobinMalfait ([see discussion](https://github.com/tailwindlabs/tailwindcss/issues/13473#issuecomment-2059785107))—to discover that nesting quotes in arbitrary values is not only supported but that they appear to be infinitely nestable.\r\n   \r\n   In other words, this works:\r\n   \r\n   ```\r\n   multi-['multi-['multi-['font-bold']'];text-green-700;before:content-['$']']\r\n   ```\r\n\r\n   If escapes were required to resolve this issue, each level of nesting might require a greater level of escape characters, which could get out of hand quickly. For example, the above would need to be written like this:\r\n   \r\n   ```\r\n   multi-['multi-[\\'multi-[\\\\\\'font-bold\\\\\\']\\'];text-green-700;before:content-[\\'$\\']']\r\n   ```\r\n   \r\n   Of course, it would be convenient for me not to need to update my plugin(s) with new syntax and safety measures again, and such escaping would probably render my plugin too cumbersome to justify using. However, greater parity with CSS is probably a higher and more evergreen standard here.\r\n   \r\n   Simply wrapping the arbitrary value in quotes was an easy fix, but the magic around it allowing nested quotes may be the culprit behind `\"(\"` not working, to some degree.\r\n   \r\n   <table><tr><td>\r\n   \r\n   [![conversation between Brandon McConnell and Robin Malfait about the nature of quoted strings in Tailwind CSS](https://github.com/tailwindlabs/tailwindcss/assets/5913254/21074661-d6ae-43b5-9fc4-42eaec21ef1d)](https://github.com/tailwindlabs/tailwindcss/issues/13473#issuecomment-2059785107)\r\n   \r\n   </td></tr></table>\r\n\r\n---\r\n\r\nI'm new to Rust, so all of this is \"to the best of my current knowledge\" from what I could grok reading through the parser. I also consulted a colleague who is more experienced with Rust to corroborate my findings and theories, and they came to roughly the same conclusions.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13607","RelatedDescription":"Closed issue \"v4: Bug with how the parser handles nested `quote_stack` and `bracket_stack` characters when in a string context\" (#13607)"},{"Id":"2268893871","IsPullRequest":true,"CreatedAt":"2024-04-30T16:22:11","Actor":"RobinMalfait","Number":"13608","RawContent":null,"Title":"Ensure strings are consumed as-is when using internal `segment()`","State":"closed","Body":"This PR fixes an issue where parens, bracket and curlies needed to be balanced inside of strings instead of consuming the string until the end.\n\nWhen encountering strings when using `segment` we didn't really treat them as actual strings. This means that if you used any parens, brackets, or curlies then we wanted them to be properly balanced.\n\nThis should not be the case, whenever we encounter a string, we want to consume it as-is and don't want to worry about bracket balancing. We will now consume it until the end of the string (and make sure that escaped closing quotes are not seen as real closing quotes).\n\nFixes: #13607\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13608","RelatedDescription":"Closed or merged PR \"Ensure strings are consumed as-is when using internal `segment()`\" (#13608)"},{"Id":"2270826355","IsPullRequest":false,"CreatedAt":"2024-04-30T09:46:32","Actor":"nicitaacom","Number":"13616","RawContent":null,"Title":"ERROR - Module not found - Can't resolve './${previewSrc}'","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\nOriginal issue - https://github.com/vercel/next.js/issues/63091#issuecomment-2082927182\r\nre-created here because this issue not related to next.js - but its related to tailwind\r\n\r\n# Solved\r\nmvp-cannot-resolve-previewSrc - https://codesandbox.io/p/devbox/mvp-video-cannot-resolve-previewsrc-8kfn23?file=%2Fapp%2Fcomponents%2Fvideo%2FVideoOverlay.tsx\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\npackage.json\r\n```json\r\n \"devDependencies\": {\r\n    \"tailwindcss\": \"latest\",\r\n}\r\n```\r\n\r\nTailwind CSS IntelliSense\r\nv0.10.5\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npackage.json\r\n```json\r\n    \"next\": \"14.2.0\",\r\n```\r\n\r\n**What version of Node.js are you using?**\r\n\r\n```bash\r\nnode -v                          \r\nv20.0.0\r\n```\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nKali linux (how it might help you?)\r\n\r\n**Reproduction URL**\r\n\r\nhttps://codesandbox.io/p/devbox/mvp-cannot-resolve-previewsrc-8kfn23\r\n\r\n**Describe your issue**\r\n\r\nERROR - Module not found - Can't resolve './${previewSrc}'\r\n\r\nMore information see in `Reproduction URL`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13616","RelatedDescription":"Closed issue \"ERROR - Module not found - Can't resolve './${previewSrc}'\" (#13616)"},{"Id":"2267859990","IsPullRequest":true,"CreatedAt":"2024-04-28T22:48:48","Actor":"brandonmcconnell","Number":"13605","RawContent":null,"Title":"v3: Allow hyphen character in regex pattern to use support queries as is","State":"open","Body":"This is the v3 equivalent of PR #13596\n\nMatching for the hyphen character in the existing regex to use support queries as-is resolves #13594\n\nTests (w/ updated):\n- ✅ `supports-[display:grid]:grid`\n- ✅ `supports-[transform-origin:5%_5%]:underline`\n- ✅ `supports-[not(foo:bar)]:underline`\n- ✅ `supports-[(foo:bar)or(bar:baz)]:underline`\n- ✅ `supports-[(foo:bar)and(bar:baz)]:underline`\n- ✅ `supports-[(foo:bar)_and_(bar:baz)]:grid`\n- ✅ `supports-[(foo:bar)_and_(bar:baz)_or(baz:qux)]:grid`\n- ✅ `supports-[container-type]:underline`\n- ✅ `supports-grid:underline`\n- ✅ `supports-[--test]:flex`\n- ✅ `supports-[selector(A_>_B)]:underline`\n- ✅ `supports-[font-format(opentype)]:grid`\n- ✅ `supports-[font-tech(color-COLRv1)]:flex`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13605","RelatedDescription":"Open PR \"v3: Allow hyphen character in regex pattern to use support queries as is\" (#13605)"},{"Id":"2267745674","IsPullRequest":false,"CreatedAt":"2024-04-28T21:06:43","Actor":"0x41-li","Number":"13602","RawContent":null,"Title":"Classes in an object aren't detected","State":"closed","Body":"Classes on a className property inside an object aren't generated.\r\n\r\nI knew that tailwind wasn't picking these up with whatever extraction algorithm they use, I confirmed that by replacing the colon with an equal sign, and then vscode recognized them as tailwind classes, but obviously that's not the solution as it is a syntax error on javascript.\r\n\r\n# What I'm using:\r\nReact, typescript, vite, and tailwind. \r\n\r\nAll with the latest versions.\r\n\r\n\r\n# Example Code:\r\n```js\r\n  return React.createElement(\r\n    TagName,\r\n    {\r\n      className:\r\n        \"relative mx-auto inline-block h-[38px] font-bold leading-7 tracking-[2.29px] md:leading-[26px] uppercase hover:text-green duration-200\",\r\n      ...(href && { href }),\r\n    },\r\n    <>\r\n      {children}\r\n      <span className=\"absolute bottom-0 left-0 h-[2px] w-full bg-green\" />\r\n    </>,\r\n  );\r\n```\r\n\r\n# My temp solution:\r\n```js\r\n\r\n  const className =\r\n    \"relative mx-auto inline-block h-[38px] font-bold leading-7 tracking-[2.29px] md:leading-[26px] uppercase hover:text-green duration-200\";\r\n\r\n  return React.createElement(\r\n    TagName,\r\n    {\r\n      className,\r\n      ...(href && { href }),\r\n    },\r\n    <>\r\n      {children}\r\n      <span className=\"absolute bottom-0 left-0 h-[2px] w-full bg-green\" />\r\n    </>,\r\n  );\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13602","RelatedDescription":"Closed issue \"Classes in an object aren't detected\" (#13602)"},{"Id":"2266976739","IsPullRequest":true,"CreatedAt":"2024-04-27T16:28:59","Actor":"brandonmcconnell","Number":"13596","RawContent":null,"Title":"v4: Allow hyphen character in regex pattern to use support queries as is","State":"closed","Body":"It looks like matching for the hyphen character in the existing regex to use support queries as-is resolves #13594.\r\n\r\nThis might be a good long-term solution anyway, as it covers any future function syntaxes added to support queries, as well as supporting CSS var definition rules:\r\n\r\nTests:\r\n* ✅ `'supports-gap:grid'` -> `@supports (gap: var(--tw))`\r\n* ✅ `'supports-[display:grid]:flex'` -> `@supports (display: grid)`\r\n* ✅ `'supports-[selector(A_>_B)]:flex'` -> `@supports selector(A > B)`\r\n* ✅ `'supports-[font-format(opentype)]:grid'` -> `@supports font-format(opentype)`\r\n* ❌ `'supports-[content:\"(\"]:grid'` -> `@supports (content: \"(\")`\r\n* ✅ `'supports-[(display:grid)_and_font-format(opentype)]:grid'` -> `@supports (display: grid) and font-format(opentype)`\r\n* ✅ `'supports-[font-tech(color-COLRv1)]:flex'` -> `@supports font-tech(color-COLRv1)`\r\n* ✅ `'supports-[--test]:flex'` -> `@supports (--test: var(--tw))`\r\n\r\nThe one failing rule, recommended by @adamwathan in #13594, appears to have not worked before either and likely requires a slight change to the parser to account for consuming chars in quoted strings in arbitrary values as-is, including special chars.\r\n\r\nTesting `supports-[content:\"(\"]` against `supports-[content:\"test\"]` confirmed the parenthesis as the problematic character, as expected, so that should be a relatively simple fix.\r\n\r\nAs that effort does not appear directly related to issue #13594, I prefer to handle that one in a separate PR, and I do intend to take my best shot at it so that I can get a bit less rusty at rust 😅","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13596","RelatedDescription":"Closed or merged PR \"v4: Allow hyphen character in regex pattern to use support queries as is\" (#13596)"},{"Id":"2266558078","IsPullRequest":false,"CreatedAt":"2024-04-26T22:01:52","Actor":"adamwathan","Number":"13594","RawContent":null,"Title":"`supports` variant compiles function syntax incorrectly","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3 and v4\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/ySYgzSn5FT\r\n\r\n**Describe your issue**\r\n\r\nClasses like `supports-[font-format(opentype)]:grid` generate invalid CSS, because we currently assume that supports values that don't contain `:` are a CSS property and we insert a variable at the end in an attempt to make the query valid:\r\n\r\n```css\r\n@supports (font-format(opentype): var(--tw)) {\r\n  .supports-\\[font-format\\(opentype\\)\\]\\:grid {\r\n    display: grid;\r\n  }\r\n}\r\n```\r\n\r\nThis isn't a crazy complicated thing to fix but there are a number of test cases to consider:\r\n\r\n```\r\nsupports-[font-format(opentype)]:grid\r\nsupports-[content:\"(\"]:grid\r\nsupports-[(display:grid)_and_font-format(opentype)]:grid\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13594","RelatedDescription":"Open issue \"`supports` variant compiles function syntax incorrectly\" (#13594)"},{"Id":"2266552501","IsPullRequest":false,"CreatedAt":"2024-04-26T21:57:45","Actor":"ArekBartnik","Number":"13593","RawContent":null,"Title":"[v4] \"ring\" doesn't show in Firefox","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntailwind playground\r\n\r\n**What version of Node.js are you using?**\r\n\r\nn/a\r\n\r\n**What browser are you using?**\r\n\r\nFirefox 125, Chrome 124\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/BGx685b0oP\r\n\r\n**Describe your issue**\r\n\r\n![CleanShot 2024-04-26 at 23 52 56@2x](https://github.com/tailwindlabs/tailwindcss/assets/1569446/444886a4-3a1d-4b7b-a6c7-d3fca2e47855)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13593","RelatedDescription":"Closed issue \"[v4] \"ring\" doesn't show in Firefox\" (#13593)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-05-20T03:30:20.8318655Z","RunDurationInMilliseconds":508}