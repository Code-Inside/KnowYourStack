{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2217116674","IsPullRequest":true,"CreatedAt":"2024-03-31T19:20:54","Actor":"aaronadamsCA","Number":"13416","RawContent":null,"Title":"Correct repository fields in package.json files","State":"closed","Body":"This is a super minor thing, but the `package.json` files currently have inconsistent/invalid repository metadata.\r\n\r\nI noticed because I configured Renovate to group this repo's updates on a `tailwindcss-monorepo` branch, but `@tailwindcss/vite` updates remained ungrouped. I am pretty sure it's the slightly invalid metadata that's the problem.\r\n\r\nThis PR would update `\"repository\"` to exactly match [the examples in the NPM docs](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#repository).\r\n\r\nThis change may also fix the [missing repository links on the NPM pages for your new packages](https://www.npmjs.com/package/@tailwindcss/vite/v/4.0.0-alpha.11), though I'm a lot less sure of that!","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13416","RelatedDescription":"Closed or merged PR \"Correct repository fields in package.json files\" (#13416)"},{"Id":"2216780851","IsPullRequest":true,"CreatedAt":"2024-03-31T04:57:16","Actor":"ottomated","Number":"13415","RawContent":null,"Title":"Speed up segmentation","State":"open","Body":"Saw [this tweet](https://twitter.com/adamwathan/status/1767937096214257837) and wanted to pitch in. This speeds up the `segment` function from ~1.2x to ~1.5x, at the cost of some readability.\r\n\r\nBenchmark is below. Could use some larger or smaller test cases!\r\n<img width=\"1023\" alt=\"image\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/31470743/5993042c-23bf-4691-8789-524d09c73e61\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13415","RelatedDescription":"Open PR \"Speed up segmentation\" (#13415)"},{"Id":"2216643639","IsPullRequest":false,"CreatedAt":"2024-03-31T01:07:54","Actor":"akram-hossan","Number":"13412","RawContent":null,"Title":"Position sticky is not working on IOS but working on android and web","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/13372\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **akram-hossan** March 27, 2024</sup>\r\nWe have a table. \r\nWe want to sticky the leftmost column of the table. Our code works fine on the web and Android but not on IOS. As a result, there is a huge gap between the first two columns.\r\n\r\ncode link :\r\nhttps://play.tailwindcss.com/Kanze4LuCq\r\n\r\nScreen record on Android:\r\nhttps://github.com/tailwindlabs/tailwindcss/assets/127820204/009f61df-ce52-4d3d-8230-6a2bb236f298\r\nScreen record on iPhone:\r\nhttps://github.com/tailwindlabs/tailwindcss/assets/127820204/c39ba554-3c15-4cfc-8a76-0fd2a8ff7b89\r\n\r\nHere is the code:\r\n```javascript \r\n    <div\r\n      className={`custom-scrollbar mt-6 border rounded-[20px] shadow-xl bg-neutral border-[#a3a5b2]/[.2]  p-5 md:px-10 md:pt-14 ${\r\n        handleShowMore() ? 'md:pb-24 transition ease duration-2000' : ''\r\n      }  relative `}\r\n    >\r\n      <div\r\n        className={` ${\r\n          isTdVisible(5) ? 'overflow-auto' : 'overflow-hidden sm:overflow-auto'\r\n        }  flex justify-center ${data.length !== 1 ? 'min-h-[12rem]' : ''}`}\r\n        onScroll={(e: any) => setIsScroll(!!e.currentTarget.scrollLeft)}\r\n        ref={ref}\r\n      >\r\n        <table className=\" w-full  \">\r\n          <thead className=\"\">\r\n            <tr className=\"text-xs\">\r\n              <th\r\n                className={` \r\n                           \r\n                bg-neutral flex items-center w-[135px] md:w-52 text-primary-content/[.6] text-left sticky left-0 z-20 before:absolute`}\r\n              >\r\n                <div className=\"\">{t('NAME')}</div>\r\n                <div className=\"flex flex-col text-[8px]  ml-1 cursor-pointer\">\r\n                  <div>\r\n                    <BsFillCaretUpFill />\r\n                  </div>\r\n                  <div>\r\n                    <BsFillCaretDownFill />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              {isTdVisible(1) && (\r\n                <th\r\n                  className=\"bg-transparent text-primary-content/[.6]\"\r\n                  align=\"right\"\r\n                >\r\n                  <div className=\"flex justify-end w-40 ml-[43rem] md:ml-96 lg:ml-52 xl:ml-0\">\r\n                    <p className=\"\">{t('PRICE')}</p>\r\n                    <div className=\"flex flex-col text-[8px] ml-1 cursor-pointer\">\r\n                      <div>\r\n                        <BsFillCaretUpFill />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillCaretDownFill />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </th>\r\n              )}\r\n              {isTdVisible(2) && (\r\n                <th\r\n                  className=\"bg-transparent text-primary-content/[.6]\"\r\n                  align=\"right\"\r\n                >\r\n                  <div className=\"flex justify-end w-40\">\r\n                    <div> {t('24H CHG%')}</div>\r\n                    <div className=\"flex flex-col text-[8px] ml-1 cursor-pointer\">\r\n                      <div>\r\n                        <BsFillCaretUpFill />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillCaretDownFill />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </th>\r\n              )}\r\n              {isTdVisible(3) && (\r\n                <th\r\n                  className=\"bg-transparent text-primary-content/[.6]\"\r\n                  align=\"right\"\r\n                >\r\n                  <div className=\"flex justify-end w-40\">\r\n                    <div> {t('24H VOLUME%')}</div>\r\n                    <div className=\"flex flex-col text-[8px]  ml-1 cursor-pointer\">\r\n                      <div>\r\n                        <BsFillCaretUpFill />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillCaretDownFill />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </th>\r\n              )}\r\n\r\n              {isTdVisible(4) && (\r\n                <th\r\n                  className=\"bg-transparent text-primary-content/[.6]\"\r\n                  align=\"right\"\r\n                >\r\n                  <div className=\"flex justify-end w-40\">\r\n                    <div> {t('MARKET CAP')}</div>\r\n                    <div className=\"flex flex-col text-[8px]  ml-1 cursor-pointer  \">\r\n                      <div>\r\n                        <BsFillCaretUpFill />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillCaretDownFill />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </th>\r\n              )}\r\n              {isTdVisible(5) && (\r\n                <th className=\"bg-transparent text-primary-content/[.6] text-right ml-16\"></th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n\r\n          {!laoder ? (\r\n            <>\r\n              <tbody>\r\n                {data?.map((item: MarketDataType, index: number) => (\r\n                  <tr\r\n                    key={index}\r\n                    // className=\"transition ease duration-200 origin-top\"\r\n                  >\r\n                    <td\r\n                      className={`\r\n                      \r\n                      bg-neutral flex items-center  text-left text-primary-content py-3 sticky left-0 z-20 before:absolute w-full sm:w-auto`}\r\n                    >\r\n                      <div className=\"w-6 h-6 \">\r\n                        <Image\r\n                          src={item?.image || 'https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1547033579'} \r\n                          width={100}\r\n                          loader={cryptoCurrecyIconLoader}\r\n                          height={100}\r\n                          \r\n                        />\r\n                      </div>\r\n                      <div className=\"flex flex-col md:items-center md:flex-row mx-2 md:mx-0\">\r\n                        <span className=\"text-sm md:text-base md:mx-2\">\r\n                          {item?.symbol!.toUpperCase()}\r\n                        </span>\r\n\r\n                        <span className=\" text-xs text-primary-content/[.5]\">\r\n                          {item?.name}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    {isTdVisible(1) && (\r\n                      <td className=\"bg-transparent py-3 text-primary-content text-base text-right\">\r\n                        {'$' + item?.currentPrice}\r\n                      </td>\r\n                    )}\r\n\r\n                    {isTdVisible(2) && (\r\n                      <td\r\n                        className={`bg-transparent text-primary-content py-0 text-base text-right\r\n                      ${\r\n                        item?.priceChangePercentage! >= 0\r\n                          ? 'text-green-500'\r\n                          : 'text-red-500'\r\n                      } `}\r\n                      >\r\n                        {Math.round(item?.priceChangePercentage! * 100) / 100}%\r\n                      </td>\r\n                    )}\r\n                    {isTdVisible(3) && (\r\n                      <td className=\"bg-transparent text-primary-content py-0  text-base text-right \">\r\n                        {'$' + getConvertedValueToMillion(item?.totalVolume!)}M\r\n                      </td>\r\n                    )}\r\n                    {isTdVisible(4) && (\r\n                      <td className=\"bg-transparent text-primary-content py-3  text-base text-right \">\r\n                        {'$' + getConvertedValueToMillion(item?.marketCap!)}M\r\n                      </td>\r\n                    )}\r\n                    {isTdVisible(5) && (\r\n                      <td>\r\n                        <div className=\"flex sm:ml-16 py-0 space-x-3 lg:space-x-4 w-[10rem] md:w-auto\">\r\n                          <div className=\"text-info text-base font-semibold  cursor-pointer\">\r\n                            {t('Buy')}\r\n                          </div>\r\n\r\n                          <div className=\"text-info text-base font-semibold  cursor-pointer\">\r\n                            {t('Sell')}\r\n                          </div>\r\n\r\n                          <div className=\"text-info text-base font-semibold cursor-pointer\">\r\n                            {t('Withdraw')}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                ))}\r\n                {handleShowMore() ? (\r\n                  <div\r\n                    className=\"absolute left-[25%] md:left-[38%] lg:left-[42%] xl:left-[45%] bottom-2 md:bottom-4 \"\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    onClick={() => {\r\n                      setGetMoreLoader(true);\r\n                      handleGetMore();\r\n                    }}\r\n                  >\r\n                    {getMoreLoader ? (\r\n                      ''\r\n                    ) : (\r\n                      <div className=\" text-xs md:text-base text-white px-6 py-2 border border-white rounded-xl\">\r\n                        Load More Currencies\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {getMoreLoader ? (\r\n                  <div className=\"absolute left-[45%] md:left-[50%] bottom-2 md:bottom-4 text-[#485EAA]\">\r\n                    {/* <Image src=\"/gif/loader.gif\" width={200} height={200} /> */}\r\n                    <Loader variant=\"#485EAA\" />\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </tbody>\r\n            </>\r\n          ) : (\r\n            <div className=\"absolute left-[47%] top-[48%]\">\r\n              {/* <Image src=\"/gif/loader.gif\" width={200} height={200} /> */}\r\n              <Loader variant=\"#485EAA\" />\r\n            </div>\r\n          )}\r\n\r\n          {/* {loadingMore ? (\r\n              <div className=\" absolute left-[45%] text-center text-primary-content mt-3\">\r\n                <p>Loading...</p>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )} */}\r\n        </table>\r\n      </div>\r\n      <div className=\"flex sm:hidden justify-end text-white  space-x-2 py-2 \">\r\n        <button\r\n          className=\"disabled:cursor-not-allowed disabled:opacity-30\"\r\n          disabled={currentSecondTdIndex == 1}\r\n          onClick={handleScrollLeft}\r\n        >\r\n          <BsChevronLeft />\r\n        </button>\r\n        <button\r\n          className=\"disabled:cursor-not-allowed disabled:opacity-30\"\r\n          disabled={currentSecondTdIndex == 5}\r\n          onClick={handleScrollRight}\r\n        >\r\n          <BsChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n```\r\n\r\n```css\r\nclassName={`  bg-neutral flex items-center w-[135px] md:w-52 text-primary-content/[.6] text-left sticky left-0 z-20 before:absolute`}>\r\n```\r\nThis is the portion\r\n\r\n\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13412","RelatedDescription":"Closed issue \"Position sticky is not working on IOS but working on android and web\" (#13412)"},{"Id":"2216655097","IsPullRequest":false,"CreatedAt":"2024-03-30T20:39:54","Actor":"cybercoder-naj","Number":"13413","RawContent":null,"Title":"[v4]: Border and Outline styles don't work","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.11\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite in Nuxt 3.10\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.7.1\r\n\r\n**What browser are you using?**\r\n\r\nFirefox Developer Edition\r\n\r\n**What operating system are you using?**\r\n\r\nEndeavourOS (Arch-based Linux)\r\n\r\n**Reproduction URL**\r\n\r\n```html\r\n<div class=\"flex justify-center border border-black\"> \r\nFlex, Justify are applied correctly!\r\n\r\nBorder and border-black do not apply\r\n</div>\r\n```\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/48282810/1c591952-a5a5-49ef-a943-be53da7c8d93)\r\n\r\n**Describe your issue**\r\n\r\nWhen I apply the styles:  `border border-black`, there should be a black border on the element.  I notice that `--tw-border-style` is not defined and `border-black` doesn't seem to be an available class.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13413","RelatedDescription":"Closed issue \"[v4]: Border and Outline styles don't work\" (#13413)"},{"Id":"2214023587","IsPullRequest":true,"CreatedAt":"2024-03-30T17:27:22","Actor":"francoismassart","Number":"13395","RawContent":null,"Title":"[v4] add `max-w-screen-*` support","State":"closed","Body":"Quick & simple MR that fixes \r\n[v4] `max-w-screen-*` utilities are not provided by default #13267","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13395","RelatedDescription":"Closed or merged PR \"[v4] add `max-w-screen-*` support\" (#13395)"},{"Id":"2216437848","IsPullRequest":false,"CreatedAt":"2024-03-30T13:24:53","Actor":"chandan-jal-evolution","Number":"13409","RawContent":null,"Title":"[v4] NextJS font variable not applying inside tailwind","State":"closed","Body":"With the new alpha version of tailwind I'm not being able to export the font family that is coming from the `NextJS`\r\n\r\n\r\nTailwind: 4.0.0-alpha.11\r\nNextJs: 14.1.4\r\n\r\n[Source Code](https://github.com/chandan-jal-evolution/next-tailwindcss-alpha-test)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13409","RelatedDescription":"Closed issue \"[v4] NextJS font variable not applying inside tailwind\" (#13409)"},{"Id":"2216406223","IsPullRequest":true,"CreatedAt":"2024-03-30T12:06:54","Actor":"adamwathan","Number":"13408","RawContent":null,"Title":"Don't reset ::first-letter in Preflight","State":"closed","Body":"Resolves https://github.com/tailwindlabs/tailwindcss/issues/13405\r\n\r\nPreviously we were applying our global reset rules to the `::first-letter` pseudo to ensure it interacted with utility classes the same way as other elements, but touching that pseudo has some unfortunate side effects, including causing `::selection` styles to not apply to the first letter as well as showing the default mouse cursor when hovering over the first letter instead of the text selection cursor.\r\n\r\nI don't think there's anything really lost by removing this, because `::first-letter` already has no padding or margin applied and doesn't support `box-sizing`. The only place it would have mattered previously is border styles, but now that we don't actually rely on Preflight in order to set `border-style` when adding a `border-*` utility, this will work fine anyways. Even if it didn't, it would be a better trade off to have to add `first-letter:border-solid` when necessary vs. dealing with the side-effects I've mentioned of touching that pseudo-element.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13408","RelatedDescription":"Closed or merged PR \"Don't reset ::first-letter in Preflight\" (#13408)"},{"Id":"2216138276","IsPullRequest":false,"CreatedAt":"2024-03-30T12:06:54","Actor":"mdillgen","Number":"13405","RawContent":null,"Title":"[v4] ::first-letter reset causes inaccurate text selection","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.11\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNext.js v14.1.4\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.9.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Safari\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/mdillgen/tw4-test.git\r\n\r\n**Describe your issue**\r\n\r\nIn this Tailwind version, some rules of the preflight (or CSS reset) have been extended by the ::first-letter pseudo-element. This leads to the – in my opinion undesirable – side effect, that rules for the ::selection pseudo-element (formatting of selected text) are not applied to the first character of text elements. The character is handled separately, somewhat out of the flow.\r\n\r\nSee the attached screen recording, which illustrates this issue.\r\n\r\nPlease note that the problem occurs at least in Chrome and Safari and does not occur in Firefox (MacOS).\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/assets/9297500/96d6c384-1f02-4f33-99da-184cf79e7422\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13405","RelatedDescription":"Closed issue \"[v4] ::first-letter reset causes inaccurate text selection\" (#13405)"},{"Id":"2215171826","IsPullRequest":true,"CreatedAt":"2024-03-29T13:19:43","Actor":"chandan-jal-evolution","Number":"13403","RawContent":null,"Title":"[v4] Fixed container class style not applied #13129","State":"closed","Body":"Fixed the issue with the `container` class not applying its style. #13129","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13403","RelatedDescription":"Closed or merged PR \"[v4] Fixed container class style not applied #13129\" (#13403)"},{"Id":"2215236517","IsPullRequest":true,"CreatedAt":"2024-03-29T13:15:10","Actor":"thecrypticace","Number":"13404","RawContent":null,"Title":"Make `isColor` faster","State":"closed","Body":"When the arrays of colors were split, both smaller, and had different values (one check was incorrectly case-sensitive) to lookup an `includes` check was faster. They’ve been merged for a while so now a Set is beneficial to perf.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13404","RelatedDescription":"Closed or merged PR \"Make `isColor` faster\" (#13404)"},{"Id":"2214019824","IsPullRequest":true,"CreatedAt":"2024-03-29T02:57:16","Actor":"thecrypticace","Number":"13394","RawContent":null,"Title":"Enable Vite's `waitForRequestsIdle()` for client requests only","State":"closed","Body":"The `waitForRequestsIdle()` API should **not** be called when doing SSR as it was not designed to be used then. The API is also slightly misnamed and will be deprecated and have a more appropriate name and place in Vite 5.3 to make this more clear. Vite's own logic skips some of the steps during SSR but _we did not_ which is why using this API with Remix resulted in pages not loading.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13394","RelatedDescription":"Closed or merged PR \"Enable Vite's `waitForRequestsIdle()` for client requests only\" (#13394)"},{"Id":"2214390888","IsPullRequest":false,"CreatedAt":"2024-03-29T01:13:15","Actor":"nwparker","Number":"13400","RawContent":null,"Title":"divide-y behavior with grid causes odd top border behavior","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nN/A\r\n\r\n**What version of Node.js are you using?**\r\nN/A\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nMac\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/1XdwsvlrXe\r\n\r\n**Describe your issue**\r\nTop most borders appear oddly / non-uniformly\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/4138956/de1de8fe-66a2-4d0c-802a-5d21f698575f)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13400","RelatedDescription":"Closed issue \"divide-y behavior with grid causes odd top border behavior\" (#13400)"},{"Id":"2213814745","IsPullRequest":true,"CreatedAt":"2024-03-28T17:56:21","Actor":"H4ad","Number":"13393","RawContent":null,"Title":"Perf: Use charCodeAt instead of string comparison","State":"open","Body":"Using `charCodeAt` to compare instead of comparing string-string.\r\n\r\nBefore:\r\n\r\n```\r\nTailwindCSS  18,185.28  0.0501  0.2209  0.0550  0.0519  0.0998  0.1035  0.1612  ±0.44%     9093   fastest\r\n```\r\n\r\nNow:\r\n\r\n```\r\nTailwindCSS  20,353.52  0.0450  0.2109  0.0491  0.0469  0.0897  0.0958  0.1565  ±0.42%    10177   fastest\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13393","RelatedDescription":"Open PR \"Perf: Use charCodeAt instead of string comparison\" (#13393)"},{"Id":"2213516431","IsPullRequest":true,"CreatedAt":"2024-03-28T17:53:43","Actor":"francoismassart","Number":"13391","RawContent":null,"Title":"Add `container` utility class (default, centered & with padding)","State":"closed","Body":"This PR attempts to fix the issue #13129 \r\n\r\nIt adds the default declarations for the `container` utility class and it also supports options like centering and padding by using new optional CSS var in the `theme.css`.\r\n\r\nI also added tests to demonstrates the usage.\r\n\r\nFeedbacks are welcome 👍","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13391","RelatedDescription":"Closed or merged PR \"Add `container` utility class (default, centered & with padding)\" (#13391)"},{"Id":"2213489266","IsPullRequest":false,"CreatedAt":"2024-03-28T17:47:47","Actor":"mho22","Number":"13390","RawContent":null,"Title":"`fixed` element behaves like an `absolute` element in `dark mode`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVueJS 3.0 \r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.7.1\r\n\r\n**What browser are you using?**\r\n\r\nGoogle Chrome v123.0.6312.58\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS 14.3.1\r\n\r\n**Reproduction URL**\r\n\r\n[Tailwind Play Link](https://play.tailwindcss.com/lHrrykaAyM)\r\n\r\n**Describe your issue**\r\n\r\nI still gave the informations above even if the Tailwind Play Link reproduces the problem. Anyway, based on the Tailwind Play link provided, the behavior of the `fixed` div changes when the `dark` class is applied to the root `div`.\r\n\r\nWhen the `dark` class is not applied, the `div` with the `fixed` class behaves like a typical `fixed` div. However, when you apply the `dark` class to the root `div`, possibly because the `fixed` `div`'s parent has a `dark:` variant, it changes the behavior of the `fixed` `div` to that of an `absolute` `div`.\r\n\r\nI can't explain why at the moment but I'm here to assist. Feel free to ask me anything.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13390","RelatedDescription":"Closed issue \"`fixed` element behaves like an `absolute` element in `dark mode`\" (#13390)"},{"Id":"2212869659","IsPullRequest":true,"CreatedAt":"2024-03-28T10:29:27","Actor":"brandonmcconnell","Number":"13389","RawContent":null,"Title":"Add first-class support for height media/container queries","State":"open","Body":"This is a follow-up to closed PRs #11217 and #11225 (third time's a charm, right?)\r\n\r\nI accounted for the latest changes recommended by @adamwathan [here](https://github.com/tailwindlabs/tailwindcss/pull/11225#issuecomment-1986881431), specifically regarding syntax.\r\n\r\n### Syntax: `min/max-h-[…]:`\r\n* `sm:` (already supported, `min` and `width` assumed)\r\n* `min-sm:` (already supported, `min` explicit, `width` assumed)\r\n* `h-sm:` (✨NEW✨, `min` assumed, `height` explicit)\r\n* `min-h-sm:` (✨NEW✨, `min` and `height` explicit)\r\n* `w-sm:` (🚫 NOT SUPPORTED, `min` assumed, `height` explicit) [^1]\r\n* `min-w-sm:` (🚫 NOT SUPPORTED, `min` and `height` explicit) [^1]\r\n\r\nThankfully, in the `next` branch, most support for dimension-specific sorting and inversion appears to already be supported out of the box, as do container queries, so we may even be able to close [this related issue](https://github.com/tailwindlabs/tailwindcss-container-queries/issues/16) as well once v4 goes live, assuming the `tailwindcss-container-queries` plugin will also be sunset at that time.\r\n\r\n### Next step(s) — feedback / testing\r\n\r\nI'm sure we'll still want to add a few tests here, especially for cases where height and width queries are mixed, and consider how we want those to sort (e.g. inner-most variants first vs. width-first always, etc.), but I wanted to get this PR in quickly so we can hopefully include it in the v4.0.0 launch.\r\n\r\nIf someone from the core team could poke around at my existing tests, maybe try blowing my impl up or throwing in some wonky examples to stress test it, that would help to find any glaring bugs. It would also help to take a peek at the updated snapshots to make sure all the updated bits look correct.\r\n\r\n[^1]: **Note:** I considered adding `min-w-` explicitly as well, but thought it might be best not to have two variants that do the same thing (`min-w-` vs. `min-`). Let me know if you want to support both, with the shorthand as an alias for the explicit. Should be a quick change.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13389","RelatedDescription":"Open PR \"Add first-class support for height media/container queries\" (#13389)"},{"Id":"2212286964","IsPullRequest":false,"CreatedAt":"2024-03-28T06:31:21","Actor":"devcaeg","Number":"13388","RawContent":null,"Title":"[v4] \"waitForRequestsIdle\" causes the initial load to be very slow or throw timeout.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv.next\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nvite (v5.2.6), @builder.io/qwik (v1.5.1), @builder.io/qwik-city (v1.5.1), @tailwindcss/vite (v.next)\r\n\r\n**What version of Node.js are you using?**\r\nv21.7.1\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nmacOS\r\n\r\n**Describe your issue**\r\nSince ```await i?.waitForRequestsIdle(t)``` has been added to the code, it causes the initial loading of the web to be extremely slow, or sometimes it throws timeout. I had to comment out this line to be able to use TailwindCSS normally.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13388","RelatedDescription":"Closed issue \"[v4] \"waitForRequestsIdle\" causes the initial load to be very slow or throw timeout.\" (#13388)"},{"Id":"2212270445","IsPullRequest":true,"CreatedAt":"2024-03-28T03:22:08","Actor":"KrisBraun","Number":"13387","RawContent":null,"Title":"Source maps","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13387","RelatedDescription":"Open PR \"Source maps\" (#13387)"},{"Id":"2211592926","IsPullRequest":false,"CreatedAt":"2024-03-27T19:52:01","Actor":"nodegin","Number":"13383","RawContent":null,"Title":"3.4.2 introduced breaking change with PR #12715","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nPostCSS 8.4.35 Vite 5.1.5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.6.2\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nSorry I don't have reproduction as the repo is my company private repo.\r\n\r\n**Describe your issue**\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/commit/f2a7c2c4532b76d61351f1ca7e26ec8c93729b5d#diff-e52d7cbb53c2deb88bfe15cfc210a387853cf9f243172b6e2844bb88bc9743a3R115\r\n\r\nIn this change, a regex replace was added to manipulate the file path.\r\nAfter some research, I found this regex will try to add backslash to parentheses.\r\n```\r\n    // Escape special characters in the file path such as: ()[]\r\n    // But only if the special character isn't already escaped\r\n    console.log(\"filePath before\", filePath);\r\n    filePath = filePath.replace(/(?<!\\\\)([\\[\\]\\(\\)])/g, \"\\\\$1\");\r\n    console.log(\"filePath after\", filePath);\r\n\r\n# console log below\r\nfilePath before /Users/user/Desktop/project/apps/web/src/**/*!(*.stories|*.spec).tsx\r\nfilePath after /Users/user/Desktop/project/apps/web/src/**/*!\\(*.stories|*.spec\\).tsx\r\n```\r\n\r\nHowever this line breaks my entire project, I am getting this error:\r\n\r\n<img width=\"1225\" alt=\"2024-03-28 3 29 30\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/8536244/9724e59d-e573-4bf2-9654-95e9e6d186e8\">\r\n\r\nBy commenting this line, I don't get any warning anymore and my styles can be processed now.\r\n\r\n<img width=\"646\" alt=\"2024-03-28 3 32 21\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/8536244/f66d408c-1c27-4b6b-8a5a-9a47bacec706\">\r\n\r\n<img width=\"501\" alt=\"2024-03-28 3 32 44\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/8536244/55abe6a8-57c3-4fd0-988f-983011626156\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13383","RelatedDescription":"Closed issue \"3.4.2 introduced breaking change with PR #12715\" (#13383)"},{"Id":"2211683958","IsPullRequest":true,"CreatedAt":"2024-03-27T19:16:52","Actor":"thecrypticace","Number":"13384","RawContent":null,"Title":"Revert changes to glob handling","State":"closed","Body":"This reverts PR #12715 which has introduced unintentional breakages when handling glob patterns.\r\n\r\nFixes #13383","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13384","RelatedDescription":"Closed or merged PR \"Revert changes to glob handling\" (#13384)"},{"Id":"2211329664","IsPullRequest":true,"CreatedAt":"2024-03-27T17:32:11","Actor":"thecrypticace","Number":"13382","RawContent":null,"Title":"Prepare next release: `4.0.0-alpha.11`","State":"closed","Body":"This PR prepares for the next alpha release: `4.0.0-alpha.11`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13382","RelatedDescription":"Closed or merged PR \"Prepare next release: `4.0.0-alpha.11`\" (#13382)"},{"Id":"2211319743","IsPullRequest":true,"CreatedAt":"2024-03-27T17:04:32","Actor":"KrisBraun","Number":"13381","RawContent":null,"Title":"Changelog for #13380 (Vite serve fix)","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13381","RelatedDescription":"Closed or merged PR \"Changelog for #13380 (Vite serve fix)\" (#13381)"},{"Id":"2211190568","IsPullRequest":true,"CreatedAt":"2024-03-27T16:31:54","Actor":"KrisBraun","Number":"13380","RawContent":null,"Title":"Fix Vite serve issues","State":"closed","Body":"Fix Vite hanging in Remix builds by temporarily disabling use of the Vite `waitForReuestsIdle` (#13291) feature. This will cause multiple Tailwind CSS generations in some requests, especially the initial one. This might be visible as a FOUC, but the builds happen so quickly it may not be noticeable. This only affects dev server mode.\r\n\r\nA second fix addresses an issue introduced in https://github.com/tailwindlabs/tailwindcss/pull/13218 (unreleased). The `vite:css-post` plugin was being double-applied in serve mode.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13380","RelatedDescription":"Closed or merged PR \"Fix Vite serve issues\" (#13380)"},{"Id":"2209546856","IsPullRequest":false,"CreatedAt":"2024-03-27T15:10:57","Actor":"nekinie","Number":"13368","RawContent":null,"Title":"The '--output' option returns usage information","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\nv4.0.0-alpha.10\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nBazel 7.1.0\r\n\r\n**What version of Node.js are you using?**\r\n20.11.1\r\n\r\n**What browser are you using?**\r\nN/A\r\n\r\n**What operating system are you using?**\r\nLinux\r\n\r\n**Reproduction URL**\r\nN/A\r\n\r\n**Describe your issue**\r\nIf you run the Tailwind CLI using the '--output' flag referenced in the CLI's usage information, the CLI will show the usage information instead of generatnig the desired CSS. This appears to be due to a guard only checking for the '-o' option.\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/99c4afd9cd0e9414981b31321e83c5e2d5b0544b/packages/%40tailwindcss-cli/src/index.ts#L36\r\n\r\nMinor but confused me for a little while :)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13368","RelatedDescription":"Closed issue \"The '--output' option returns usage information\" (#13368)"},{"Id":"2209557760","IsPullRequest":true,"CreatedAt":"2024-03-27T15:10:56","Actor":"RobinMalfait","Number":"13369","RawContent":null,"Title":"Ensure `build` command is executed when using `--output` instead of `-o`","State":"closed","Body":"This PR fixes a bug in the `@tailwindcss/cli` if you run `tailwindcss --output output.css` then the help text is shown instead of running tailwindcss itself. \n\nThis is because we want to show the `--help` if you run the CLI with not enough information. However, we only checked for `-o` and not `--output`. This PR fixes that.\n\nFixes: #13368\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13369","RelatedDescription":"Closed or merged PR \"Ensure `build` command is executed when using `--output` instead of `-o`\" (#13369)"},{"Id":"2210924357","IsPullRequest":true,"CreatedAt":"2024-03-27T15:03:49","Actor":"thecrypticace","Number":"13379","RawContent":null,"Title":"Change dark selector so `@apply` works correctly with pseudo elements","State":"closed","Body":"When using the `class` strategy the dark mode selector is `:is(.dark &)`. However, our code that handles hoisting pseudo elements outside of `:is(…)` doesn't handle this properly when using `@apply`.\r\n\r\nGiven the following code:\r\n```css\r\n::-webkit-scrollbar-track {\r\n  @apply dark:bg-black;\r\n}\r\n```\r\n\r\nYou would end up with something like this:\r\n```css\r\n:is(.dark )::-webkit-scrollbar-track {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\r\n}\r\n```\r\n\r\nThe selector above is is equivalent to `.dark::-webkit-scrollbar-track` which is incorrect. We want a selector that is equivalent to `.dark ::-webkit-scrollbar-track`.\r\n\r\nThis PR changes the selector we define for dark mode to `&:is(.dark *)`. This is functionally equivalent to the previous selector and means we don't have to make any fixes inside `@apply`'s selector handling. As a result you'll end up with this CSS:\r\n```css\r\n:is(.dark *)::-webkit-scrollbar-track {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\r\n}\r\n```\r\n\r\nWhich is equivalent to `.dark ::-webkit-scrollbar-track` and thus works as expected.\r\n\r\nFixes #13037\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13379","RelatedDescription":"Closed or merged PR \"Change dark selector so `@apply` works correctly with pseudo elements\" (#13379)"},{"Id":"2210293617","IsPullRequest":false,"CreatedAt":"2024-03-27T14:35:30","Actor":"SeraphCoding","Number":"13374","RawContent":null,"Title":"\"@apply dark:\" classes do not work on \":host\" selectors in Angular scss files when \"darkMode\" strategy is set to \"selector\"","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nAngular 17.3.0 (and upwards)\r\n\r\n**What version of Node.js are you using?**\r\n20.12.0\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nWindows\r\n\r\n**Reproduction URL**\r\nhttps://github.com/SeraphCoding/hostApplyDarkDoesNotWork\r\n\r\n**Describe your issue**\r\nUsing `dark:` classes in a components scss file will not work when using `@apply` on the `:host` element, while using `darkMode: \"selector\"`. It does work however when using the default approach utilizing media queries. Classes without `dark:` will work. \r\n\r\nIn the example below the background for `my-component` will not turn blue, if the `<html>` element has the class `dark`.\r\n\r\nExample SCSS file for `my-component.component.scss`\r\n```scss\r\n:host {\r\n   @apply dark:bg-blue-500;\r\n}\r\n```\r\napp.component.html\r\n```html\r\n<app-my-component />\r\n```\r\n\r\ntw config \r\n```js\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n  darkMode: \"selector\",\r\n  content: [\r\n    \"./src/**/*.{html,ts}\",\r\n  ],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n```\r\n\r\n**Workaround**:\r\nThe workaround is to apply the \"dark:\" class on the component in its implementation. \r\n\r\nSo if I have a `my-component.component.ts` and I implement it in my `app.component.html` - I can work around this issue by applying the dark class here like so:\r\n\r\n```html\r\n<app-my-component class=\"dark:bg-blue-500\" />\r\n```\r\n\r\nThis does however force me to keep reusing classes, that I want this component to apply on it's host element automatically.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13374","RelatedDescription":"Closed issue \"\"@apply dark:\" classes do not work on \":host\" selectors in Angular scss files when \"darkMode\" strategy is set to \"selector\"\" (#13374)"},{"Id":"2210774738","IsPullRequest":false,"CreatedAt":"2024-03-27T13:34:40","Actor":"mybearworld","Number":"13377","RawContent":null,"Title":"`<input>`s, `<button>`s, etc don't inherit letter spacing","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.0\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nPostCSS 8.4.32, also Vite 5.0.12\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What browser are you using?**\r\n\r\nEdge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/IBKvBYzX9U\r\n\r\n**Describe your issue**\r\n\r\n`<input>`s, `<button>`s and other elements setting their own font don't get their `letter-spacing` property reset, so they don't inherit it from the parent.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13377","RelatedDescription":"Closed issue \"`<input>`s, `<button>`s, etc don't inherit letter spacing\" (#13377)"},{"Id":"2210800074","IsPullRequest":false,"CreatedAt":"2024-03-27T13:30:36","Actor":"devcaeg","Number":"13378","RawContent":null,"Title":"[v4] TailwindCSS error in Vite: i?.waitForRequestsIdle is not a function","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv.next\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nvite (v5.1.6), @builder.io/qwik (v1.5.1), @builder.io/qwik-city (v1.5.1), @tailwindcss/vite (v.next)\r\n\r\n**What version of Node.js are you using?**\r\nv21.7.1\r\n\r\n**What browser are you using?**\r\nChrome, Safari, Edge\r\n\r\n**What operating system are you using?**\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nI'm using the \"next\" version of TailwindCSS since v4 was announced, everything was working relatively well (some bugs or missing styles) but in less than 24 hours there was some change that doesn't let me start the project.\r\n\r\n<img width=\"1470\" alt=\"Captura de pantalla 2024-03-27 a la(s) 9 46 06 a  m\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/115333735/5b908b40-d3d1-4918-ac9e-4625d2ad77e3\">","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13378","RelatedDescription":"Closed issue \"[v4] TailwindCSS error in Vite: i?.waitForRequestsIdle is not a function\" (#13378)"},{"Id":"2210190104","IsPullRequest":false,"CreatedAt":"2024-03-27T10:02:52","Actor":"MikeLee0358","Number":"13373","RawContent":null,"Title":"ring-offset-color opacity will mix with ring-color, result is not as expected","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntailwind play, code pen\r\n\r\n**What version of Node.js are you using?**\r\n\r\nnone\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\ntailwind play: https://play.tailwindcss.com/r0O6WPI4AA\r\n\r\ncode pen(expected like this): https://codepen.io/michaelee1/pen/abxNWRa?editors=1111\r\n\r\n**Describe your issue**\r\nIn double rings (ring-red + ring-offset-blue) situation, setting ring-offset-blue  to be opacity will get purple(blue + red), not as I expected blue-opacity.\r\n\r\nif I understand document v3.4.1 correctly, ring-offset-* is built on top of ring-*, if it's true, I got confused and want to know ideas behind:\r\n\r\n\r\n// copy from tailwind play\r\n.ring-8 {\r\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\r\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color);\r\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\r\n}\r\n\r\n1. box-shadow: should be like \r\n   box-shadow: var(--tw-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-shadow, 0 0 #0000);\r\n    1 .ring-* 2. ring-offset-* and ring-* will override ring-offset-*, this will ensure color will not be mixed when set opacity\r\n    \r\n 2. I read box-shadow mdn according to syntax the forth is \"spread-radius\", I know tailwindcss implement  it with --tw-ring-offset,   this will lead confused with first & second  parameters \"offset-x\" \"offset-y\", personal suggestion: \"offset\" change to \"spread\" is more intuition.\r\n \r\nit will be like this:\r\n\r\n.ring-offset-8   -> .ring-spread-8\r\n--tw-ring-offset-color -> --tw-ring-spread-color\r\n\r\nif my word is hard to understand, check out code pen : - )\r\n\r\n\r\nI am study in tailwind, and rewrite 3 times for practice, only ring/ring-offset let me confused when I read mdn, otherwise I learn a lot from tailwindcss, thank for you all, awesome job!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13373","RelatedDescription":"Closed issue \"ring-offset-color opacity will mix with ring-color, result is not as expected\" (#13373)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-04-01T03:30:20.1449929Z","RunDurationInMilliseconds":419}