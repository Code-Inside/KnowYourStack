{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1672062260","IsPullRequest":false,"CreatedAt":"2023-04-17T23:16:53","Actor":"PeytonHanel","Number":"11025","RawContent":null,"Title":"Flex justify content is not overridden by breakpoints.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nsveltekit 1.11.0\r\nsvelte 3.56.0\r\npostcss 8.4.21\r\nvite 4.1.4\r\n\r\n**What version of Node.js are you using?**\r\n\r\n19.7.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Brave, Firefox\r\n\r\n**What operating system are you using?**\r\n \r\nUbuntu\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/AIl9NEG9OW\r\n\r\n**Describe your issue**\r\n\r\nAttempting to override justify-* with a breakpoint does not work. Any justify-* without a breakpoint is always enabled. You can see in the reproduction that other breakpoints work as expected, but justify-center is not overridden by justify-left.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11025","RelatedDescription":"Closed issue \"Flex justify content is not overridden by breakpoints.\" (#11025)"},{"Id":"1671634168","IsPullRequest":false,"CreatedAt":"2023-04-17T17:16:55","Actor":"remiconnesson","Number":"11024","RawContent":null,"Title":"in 3.3 `@apply dark: ` doesn't work anymore with vue `:deep(.child-class)`","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nvite4 and vite3 (happened with both)\r\n\r\n**What version of Node.js are you using?**\r\nv19.1.0\r\n\r\n**What browser are you using?**\r\n Chrome\r\n\r\n**What operating system are you using?**\r\nWSL2 ubuntu 22\r\n\r\n**Reproduction URL**\r\nhttps://github.com/remiconnesson/tailwind-vue-deep-apply-dark-bug\r\n\r\n**Describe your issue**\r\nhello,\r\n\r\ntailwincss is set in `darkMode: \"class\"` and we are using `useDark` from `vueUse` to add and remove the dark class.\r\n\r\nin `App.vue` we have a child component \r\n```html\r\n<template>\r\n  [ ... ]\r\n  <div class=\"wrapper\">\r\n    <ChildText />\r\n  </div>\r\n  [ ... ]\r\n</template>\r\n\r\n<style scoped>\r\n[...]\r\n.wrapper :deep(.child-text) {\r\n  @apply text-pink-700 dark:text-yellow-300;\r\n}\r\n[...]\r\n</style>\r\n```\r\n\r\ntargeting `@/components/ChildText.vue`\r\n```html\r\n<template>\r\n  <div class=\"child-text text-xl mt-8\">\r\n    I am targeted by my parent component with\r\n  </div>\r\n  [...]\r\n</template>\r\n```\r\n\r\nbut the `dark:` modifier doesn't work in `3.3` when it used it work in `3.2`\r\n\r\nas shown in the screenshot below\r\n\r\n- with `@3.3`, in the repro, one line of text should be yellow but is pink instead\r\n\r\n<img width=\"340\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28846642/232557687-5a00bc6b-d02c-4fd0-9c8f-5e603f5c1c06.png\">\r\n\r\n- with `@3.2` we observe the correct behavior\r\n\r\n<img width=\"558\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28846642/232558059-eb5a6e9c-3c4a-4d02-80c1-01f146c04e7f.png\">\r\n\r\n\r\n---\r\nP.S: in `App.vue`\r\n\r\n```html\r\n<template>\r\n  [...]\r\n  <span class=\"block classic-apply\">this is the target of an @apply rule</span>\r\n  [...]\r\n</template>\r\n\r\n<style scoped>\r\n/* A */\r\n.classic-apply {\r\n  @apply text-xl text-orange-700 dark:text-white;\r\n}\r\n</style>\r\n\r\n/* B */\r\n<style>\r\n.wrapper .child-text-global {\r\n  @apply text-sky-700 dark:text-purple-300;\r\n}\r\n</style>\r\n```\r\n\r\nwe show that the dark modifier do work with \r\n- (A.) `apply` + `dark:` does work for elements in the same SFC inside a scoped style block\r\n- (B.) `apply` + `dark:` does work inside a global style block\r\n\r\n---\r\nP.P.S: As stated in the vue doc here\r\nhttps://vuejs.org/api/sfc-css-features.html#scoped-css\r\n\r\nvue transforms this \r\n```\r\n<style scoped>\r\n.a :deep(.b) {\r\n  /* ... */\r\n}\r\n</style>\r\n```\r\n\r\ninto this\r\n\r\n```\r\n.a[data-v-f3f3eg9] .b {\r\n  /* ... */\r\n}\r\n```\r\n\r\nso this issue might not be only related to an interaction vuejs","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11024","RelatedDescription":"Open issue \"in 3.3 `@apply dark: ` doesn't work anymore with vue `:deep(.child-class)`\" (#11024)"},{"Id":"1669925780","IsPullRequest":false,"CreatedAt":"2023-04-16T12:59:08","Actor":"ibrahim-990","Number":"11014","RawContent":null,"Title":"How to solve this when run tailwindcss ?","State":"closed","Body":"![Screenshot 2023-04-16 150610](https://user-images.githubusercontent.com/65185082/232308769-7b3daa68-b50a-47db-8480-d6c5a3f42fc5.png)\r\n![Screenshot 2023-04-16 150734](https://user-images.githubusercontent.com/65185082/232308816-fb610c85-af2c-415f-aa66-04e7132ddddf.png)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11014","RelatedDescription":"Closed issue \"How to solve this when run tailwindcss ?\" (#11014)"},{"Id":"1667534357","IsPullRequest":true,"CreatedAt":"2023-04-14T19:02:19","Actor":"vjdevra","Number":"11005","RawContent":null,"Title":"Formatting config.full.js","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11005","RelatedDescription":"Closed or merged PR \"Formatting config.full.js\" (#11005)"},{"Id":"1667076525","IsPullRequest":true,"CreatedAt":"2023-04-14T01:25:09","Actor":"vjdevra","Number":"11004","RawContent":null,"Title":"Removing blur-0 as blur-none exists and updating blur-none value","State":"closed","Body":"In this pull request, blur-0 is proposed to be removed as we are now using blur-none as standard. Value of blur-none is also changed from 0 to 0px to maintain consistency with other values like rounded-none value is 0px.\r\nFile formatted to maintain consistency throughout the file.\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11004","RelatedDescription":"Closed or merged PR \"Removing blur-0 as blur-none exists and updating blur-none value\" (#11004)"},{"Id":"1663670147","IsPullRequest":false,"CreatedAt":"2023-04-13T20:16:30","Actor":"QuintonC","Number":"10989","RawContent":null,"Title":"Unexpected gradient-stop behavior across light and dark modes","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`v3.3.1`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`\"@remix-run/react\": \"^1.14.1\"`\r\n`\"postcss-cli\": \"^10.1.0\"`\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`v16.15.0`\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\n[Tailwind Play](https://play.tailwindcss.com/i3a4lpE2I3)\r\n\r\n**Describe your issue**\r\n\r\nUtilizing the newest tailwind `from-` and `to-` features for specifying gradient color stops seems to be referencing only the `from` color definition when there is a specifier for both viewing modes (with and without the dark variant).\r\n\r\nFor example, the following `className` will yield some unexpected results ([Tailwind Play](https://play.tailwindcss.com/i3a4lpE2I3)): `bg-gradient-to-br from-white from-15% to-neutral-200 to-30% dark:from-neutral-500`.\r\n\r\nIt seems reasonable to expect that `dark:from-neutral-500` would yield the following CSS class:\r\n\r\n```css\r\n@media (prefers-color-scheme: dark)\r\n.dark\\:from-neutral-500 {\r\n    --tw-gradient-from: #737373 var(--tw-gradient-from-position);\r\n    --tw-gradient-from-position: 15%;\r\n    --tw-gradient-to: rgb(115 115 115 / 0) var(--tw-gradient-from-position);\r\n    --tw-gradient-to-position: 30%;\r\n    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\r\n}\r\n```\r\n\r\nHowever, the result lacks the `--tw-gradient-from-position` and `--tw-gradient-to-position`. The following screenshot  shows that not only is the definition missing, but it's also referencing `from-position` rather than `to-position` for the `to-color`\r\n\r\n<img width=\"418\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4250423/231343342-468dd81a-02b8-4ade-95c1-d70096c02f18.png\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10989","RelatedDescription":"Closed issue \"Unexpected gradient-stop behavior across light and dark modes\" (#10989)"},{"Id":"1666688001","IsPullRequest":true,"CreatedAt":"2023-04-13T20:12:12","Actor":"matei-s","Number":"11002","RawContent":null,"Title":"fixed gradient stop for default transparent","State":"closed","Body":"Fixed a typo causing the gradient stop position to be ignored when using the implicit transparent color.\r\n\r\nFixes #10989.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11002","RelatedDescription":"Closed or merged PR \"fixed gradient stop for default transparent\" (#11002)"},{"Id":"1665645658","IsPullRequest":false,"CreatedAt":"2023-04-13T13:32:16","Actor":"christianmagill","Number":"10998","RawContent":null,"Title":"CDN Not Available for 3.3.1","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nWinden with Tailwind CDN for Development\r\n\r\n**What version of Node.js are you using?**\r\n\r\nN/A\r\n\r\n**What browser are you using?**\r\n\r\nArc\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://cdn.tailwindcss.com/3.3.1\r\n\r\n**Describe your issue**\r\n\r\nCDN is not available for version 3.3.1","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10998","RelatedDescription":"Closed issue \"CDN Not Available for 3.3.1\" (#10998)"},{"Id":"1666191277","IsPullRequest":true,"CreatedAt":"2023-04-13T11:31:50","Actor":"vjdevra","Number":"11000","RawContent":null,"Title":"Update colors.js","State":"closed","Body":"Changing shade 50 of zinc color to '#fafafb' which will be different from shade 50 of neutral color.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11000","RelatedDescription":"Closed or merged PR \"Update colors.js\" (#11000)"},{"Id":"1666140899","IsPullRequest":true,"CreatedAt":"2023-04-13T10:49:06","Actor":"vjdevra","Number":"10999","RawContent":null,"Title":"Update CODE_OF_CONDUCT.md","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10999","RelatedDescription":"Closed or merged PR \"Update CODE_OF_CONDUCT.md\" (#10999)"},{"Id":"1664445084","IsPullRequest":false,"CreatedAt":"2023-04-13T01:39:02","Actor":"iamchubko","Number":"10994","RawContent":null,"Title":"`line-clamp` on a wrapper element doesn't work as expected in WebKit","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNothing\r\n\r\n**What version of Node.js are you using?**\r\n\r\nThe one in Tailwind Playground\r\n\r\n**What browser are you using?**\r\n\r\nSafari\r\n\r\n**What operating system are you using?**\r\n\r\niOS\r\n\r\n**Reproduction URL**\r\n\r\n1. https://play.tailwindcss.com/e5MyJ1zroa\r\n2. https://play.tailwindcss.com/ftDsuMZEMS\r\n\r\n**Describe your issue**\r\n\r\n1. 2 wrapping elements for `p`, the first one with `line-clamp`. Content is not rendered at all. Should be truncated after the 3rd line\r\n2. 1 wrapping element for `p` with `line-clamp`. All content is rendered. Should be truncated after the 3rd line\r\n\r\nI tested in a few browsers. Here are the results:\r\n- works as expected: Firefox and Brave on Linux Mint, Chrome on Android\r\n- breaks: WebKit-based browsers in general: Chrome and Safari on iOS in particular\r\n\r\nWhat's the use case?\r\nI use `line-clamp` to truncate content of rich text editor. And this thing has a lot of layers","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10994","RelatedDescription":"Closed issue \"`line-clamp` on a wrapper element doesn't work as expected in WebKit\" (#10994)"},{"Id":"1664639266","IsPullRequest":false,"CreatedAt":"2023-04-12T16:28:17","Actor":"FantasyPvP","Number":"10995","RawContent":null,"Title":"gradients dont work on firefox","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nthe latest version as of 12/04/23 installed using npm\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntrunk (rust webserver tool)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nlatest from arch repos\r\n\r\n**What browser are you using?**\r\n\r\nfirefox and opera\r\n\r\n**What operating system are you using?**\r\n\r\nlinux\r\n\r\n**Reproduction URL**\r\n\r\na reproduction is anything involving gradients on firefox whether it be text or the background, it just wont render.\r\n\r\n**Describe your issue**\r\n\r\ngradient effects such as (bg-gradient) dont work on firefox, i tested the same code on opera and it worked completely fine, im not sure if this is a tailwind issue or a firefox issue. i had issues with two things. my elements just dissappear if i set my background to a gradient but only on firefox\r\n\r\nEDIT: updated to the latest version of firefox, no changes\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10995","RelatedDescription":"Closed issue \"gradients dont work on firefox\" (#10995)"},{"Id":"1663329343","IsPullRequest":true,"CreatedAt":"2023-04-11T22:56:12","Actor":"RobinMalfait","Number":"10988","RawContent":null,"Title":"Replace `__OXIDE__` at build time to prevent `@tailwindcss/oxide` leaks in the stable engine","State":"open","Body":"This PR will ensure that the oxide engine doesn't leak in the current stable version.\r\n\r\nThe oxide engine is currently behind a **runtime** feature flag:\r\n```js\r\nif (env.OXIDE) {\r\n  require('@tailwindcss/oxide').doSomethingOxideSpecific()\r\n}\r\n```\r\n\r\nBut some build tools that use the commonjs plugin will hoist that `require` part out of the guard... this typically results in a static import instead. But since the stable engine doesn't have any idea what `@tailwindcss/oxide` even is, it crashes.\r\n\r\nIf you would inspect the generated code, then it will look something like this:\r\n```js\r\nimport moduleName from '@tailwindcss/oxide'\r\n\r\nif (env.OXIDE) {\r\n  moduleName.doSomethingOxideSpecific()\r\n}\r\n```\r\n\r\n... which kind of defeats the whole purpose of the feature flag in the first place. In a project where `OXIDE` is defined this all works fine, but in other places it won't.\r\n\r\nThis PR will switch the **runtime** feature flag, to a **build time** feature flag. This will ensure that the code is not even there in the final built code but that should be fine since you can switch between the engines if you install a different version (`insiders` vs `oxide-insiders`).\r\n\r\nWe will replace `__OXIDE__` at build time. This also means that some parts of the code will look like `if (false) { require('@tailwindcss/oxide') }`. Next, we will rely on SWCs optimizer to get rid of the dead code.\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10988","RelatedDescription":"Open PR \"Replace `__OXIDE__` at build time to prevent `@tailwindcss/oxide` leaks in the stable engine\" (#10988)"},{"Id":"1662455758","IsPullRequest":true,"CreatedAt":"2023-04-11T14:15:42","Actor":"depfu[bot]","Number":"10984","RawContent":null,"Title":"Upgrade postcss-loader: 4.3.0 → 7.2.4 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss-loader (4.3.0 → 7.2.4) · [Repo](https://github.com/webpack-contrib/postcss-loader) · [Changelog](https://github.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/webpack-contrib/postcss-loader/compare/aa37278872329bd3435fea5dd07de631d75b9801...ef332db57381ed1d8aaa4a9a20eec0e0b21fdb7c\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10984","RelatedDescription":"Closed or merged PR \"Upgrade postcss-loader: 4.3.0 → 7.2.4 (major)\" (#10984)"},{"Id":"1662218241","IsPullRequest":true,"CreatedAt":"2023-04-11T10:41:43","Actor":"brandonmcconnell","Number":"10982","RawContent":null,"Title":"Add first-class 3d transform utility support","State":"open","Body":"Adds first-class support for 3d transformations using the existing TailwindCSS architecture.\r\n\r\nThis PR also sees GPU acceleration activated by default, but this can be easily switched to using CPU by default. It may also be useful to trigger some sort of warning if a user uses the `transform-cpu` utility but then also attempts to use one of the 3d transform utilities, which would naturally disable 3d transformations.\r\n\r\nThe new utilities added in this effort are:\r\n\r\n| Utility | CSS Property/Transform Function | CSS Value |\r\n|--------|--------|--------|\r\n| `rotate-x` | `rotateX()` | same as `rotate` value(s) |\r\n| `rotate-y` | `rotateY()` | same as `rotate` value(s) |\r\n| `rotate-z` | `rotateZ()` | alias of `rotate` value(s) |\r\n| `scale-z` | `scaleZ()` | same as `scale` value(s) |\r\n| `perspective-self` | `perspective()` | incremental t-shirt sizing |\r\n| `perspective` | `perspective` | incremental t-shirt sizing, same as `perspective-self` |\r\n| `perspective-origin` | `perspective-origin` | same as `origin` (`transform-origin`) |\r\n| `transform-flat` | `transform-style` | `flat` |\r\n| `transform-3d` | `transform-style` | `preserve-3d` |\r\n| `transform-content` | `transform-box` | `content-box` |\r\n| `transform-border` | `transform-box` | `border-box` |\r\n| `transform-fill` | `transform-box` | `fill-box` |\r\n| `transform-stroke` | `transform-box` | `stroke-box` |\r\n| `transform-view` | `transform-box` | `view-box` |\r\n| `backface-visible` | `backface-visibility` | `visible` |\r\n| `backface-hidden` | `backface-visibility` | `hidden` |","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10982","RelatedDescription":"Open PR \"Add first-class 3d transform utility support\" (#10982)"},{"Id":"1660094700","IsPullRequest":false,"CreatedAt":"2023-04-10T12:57:56","Actor":"J-env","Number":"10973","RawContent":null,"Title":"The same content cannot be compressed and merged, only a small part is compressed and merged","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.7+\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n[Astro](https://astro.build/)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.18.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\n[tailwindcss](https://github.com/tailwindlabs/tailwindcss.com) tailwindcss has the same problem \r\n\r\n**Describe your issue**\r\n\r\nUse cssnano or csso to merge, only a small part is merged:\r\n[link](https://github.com/tailwindlabs/tailwindcss/discussions/10820#discussion-4981939)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10973","RelatedDescription":"Closed issue \"The same content cannot be compressed and merged, only a small part is compressed and merged\" (#10973)"},{"Id":"1659654562","IsPullRequest":false,"CreatedAt":"2023-04-08T21:46:23","Actor":"Wolfgrammatikalazeredr","Number":"10971","RawContent":null,"Title":"Baklava sings ","State":"closed","Body":"https://open.spotify.com/track/1eyzqe2QqGZUmfcPZtrIyt?si=y0ZG5LN9QSiPhQTe_Kxylg&context=spotify%3Aplaylist%3A37i9dQZF1DX8hY56Fq3fM0","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10971","RelatedDescription":"Closed issue \"Baklava sings \" (#10971)"},{"Id":"1659594155","IsPullRequest":false,"CreatedAt":"2023-04-08T18:21:42","Actor":"frederikhors","Number":"10969","RawContent":null,"Title":"This expression is not callable. Type 'PluginUtils' has no call signatures.ts (2349)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1 with a typescript config file.\r\n\r\n**Describe your issue**\r\n\r\n![image](https://user-images.githubusercontent.com/41120635/230735582-8be389c7-db0b-46e3-a84d-895aeb95d2e6.png)\r\n\r\nWhy is this error present?\r\n\r\nThe code is:\r\n\r\n```ts\r\nimport type { Config } from \"tailwindcss\";\r\n\r\nexport default {\r\n  content: [],\r\n  theme: {\r\n    extend: {\r\n      borderColor: (theme) => ({\r\n        DEFAULT: theme(\"colors.red.500\", \"currentColor\"),\r\n      }),\r\n    },\r\n  },\r\n  plugins: [],\r\n} satisfies Config;\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10969","RelatedDescription":"Closed issue \"This expression is not callable. Type 'PluginUtils' has no call signatures.ts (2349)\" (#10969)"},{"Id":"1659589420","IsPullRequest":false,"CreatedAt":"2023-04-08T17:36:23","Actor":"frederikhors","Number":"10968","RawContent":null,"Title":"`[postcss] Cannot read properties of undefined (reading 'config')` with the new Tailwind typescript config file","State":"closed","Body":"Using the new (from 3.3) `tailwind.config.ts` typescript file doesn't work with postcss given the below `postcss.config.cjs` file:\r\n\r\n```cjs\r\nmodule.exports = {\r\n  plugins: [\r\n    require(\"tailwindcss\"),\r\n\r\n    require(\"autoprefixer\"),\r\n\r\n    require(\"cssnano\")({ preset: \"default\" }),\r\n  ],\r\n};\r\n```\r\n\r\nThe error:\r\n\r\n```\r\n[vite] Internal server error: [postcss] Cannot read properties of undefined (reading 'config')\r\n  Plugin: vite:css\r\n      at getTailwindConfig (C:\\project\\node_modules\\tailwindcss\\lib\\lib\\setupTrackingContext.js:84:63)\r\n      at C:\\project\\node_modules\\tailwindcss\\lib\\lib\\setupTrackingContext.js:96:92\r\n      at C:\\project\\node_modules\\tailwindcss\\lib\\processTailwindFeatures.js:46:11\r\n      at plugins (C:\\project\\node_modules\\tailwindcss\\lib\\index.js:38:63)\r\n      at LazyResult.runOnRoot (C:\\project\\node_modules\\postcss\\lib\\lazy-result.js:339:16)\r\n      at LazyResult.runAsync (C:\\project\\node_modules\\postcss\\lib\\lazy-result.js:393:26)\r\n      at async compileCSS (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:38354:25)\r\n      at async TransformContext.transform (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:37810:56)\r\n      at async Object.transform (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:43387:30)\r\n      at async loadAndTransform (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:41105:29) (x2)\r\n```\r\n\r\nI opened https://github.com/postcss/postcss/issues/1829 but as you can see they told me to open it here.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10968","RelatedDescription":"Closed issue \"`[postcss] Cannot read properties of undefined (reading 'config')` with the new Tailwind typescript config file\" (#10968)"},{"Id":"1659574659","IsPullRequest":true,"CreatedAt":"2023-04-08T16:33:55","Actor":"ivoilic","Number":"10967","RawContent":null,"Title":"Add support for functions in flattenColorPalette","State":"open","Body":"Currently flattenColorPalette does not handle values that are functions. This change allows for functions to be be flattened optionally, so it should not break existing setups. This could potentially be further enhanced by then also checking if the function's returned value is an object and flattening that as a well. I also added a simple test for this new functionality.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10967","RelatedDescription":"Open PR \"Add support for functions in flattenColorPalette\" (#10967)"},{"Id":"1659500211","IsPullRequest":true,"CreatedAt":"2023-04-08T11:54:59","Actor":"rik","Number":"10966","RawContent":null,"Title":"Add aria-busy variant","State":"open","Body":"This is useful to show a spinner or dim a region that is updating.\r\n\r\nVery useful in conjunction with [Turbo](https://turbo.hotwired.dev/reference/attributes#automatically-added-attributes)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10966","RelatedDescription":"Open PR \"Add aria-busy variant\" (#10966)"},{"Id":"1657109281","IsPullRequest":false,"CreatedAt":"2023-04-07T15:04:21","Actor":"codepic","Number":"10960","RawContent":null,"Title":"3.3.1 not handling pseudo-elements properly","State":"closed","Body":"\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`3.3.1`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntailwindcss\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`v18.14.0`\r\n\r\n#### Steps to Repro\r\n\r\n```bash\r\nmkdir repro\r\ncd repro\r\nyarn global add tailwindcss@3.3.1\r\ntailwindcss init\r\n```\r\n\r\nCreate `repro.css` with the following content:\r\n\r\n```css\r\n@config 'tailwind.config.js';\r\n::deep [a] {\r\n    @apply bg-white;\r\n}\r\n```\r\n\r\nRun `tailwindcss --input .\\repro.css --output .\\result.css`\r\n\r\n```css \r\n/* result.css / Incorrect */\r\n[a]::deep {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity))\r\n}\r\n```\r\n\r\nYou can fix this by downgrading tailwindcss to 3.3.0:\r\n\r\n```bash\r\nyarn global add tailwindcss@3.3.0\r\ntailwindcss --input .\\repro.css --output .\\result.css\r\n```` \r\n\r\nAnd the CORRECT output\r\n\r\n```css\r\n/* Correct! */\r\n::deep [a] {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity))\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10960","RelatedDescription":"Closed issue \"3.3.1 not handling pseudo-elements properly\" (#10960)"},{"Id":"1657341590","IsPullRequest":true,"CreatedAt":"2023-04-07T14:45:47","Actor":"thecrypticace","Number":"10962","RawContent":null,"Title":"Don’t move unknown pseudo-elements to the end of selectors","State":"closed","Body":"Fixes #10960\r\n\r\nThe `::deep` Shadow DOM piercing selector uses invalid selector syntax but needs to still work for now. Here we've add it as an exception to ensure it is not moved to the end of the selector (which is the only place that pseudo elements can normally be placed).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10962","RelatedDescription":"Closed or merged PR \"Don’t move unknown pseudo-elements to the end of selectors\" (#10962)"},{"Id":"1656077011","IsPullRequest":false,"CreatedAt":"2023-04-05T18:17:26","Actor":"ollebergkvist","Number":"10958","RawContent":null,"Title":"Lineclamp bug on mobile devices (Chrome, Firefox)","State":"closed","Body":"System:\r\n    OS: macOS 12.6.3\r\n    CPU: (6) x64 Intel(R) Core(TM) i5-8500B CPU @ 3.00GHz\r\n    Memory: 286.20 MB / 32.00 GB\r\n    Shell: 5.8.1 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.17.0 - ~/.asdf/installs/nodejs/16.17.0/bin/node\r\n    Yarn: 1.22.19 - ~/Documents/dev/projects/godsent.gg/node_modules/.bin/yarn\r\n    npm: 8.15.0 - ~/.asdf/plugins/nodejs/shims/npm\r\n  npmPackages:\r\n    @tailwindcss/aspect-ratio: ^0.4.2 => 0.4.2 \r\n    @tailwindcss/forms: ^0.5.3 => 0.5.3 \r\n    @tailwindcss/line-clamp: ^0.4.4 => 0.4.4 \r\n    @tailwindcss/typography: ^0.5.9 => 0.5.9 \r\n    next: ^13.2.4 => 13.2.4 \r\n    react: ^18.2.0 => 18.2.0 \r\n    tailwindcss: 3.2.7 => 3.2.7 \r\n\r\n\r\n**Reproduction URL**\r\n\r\n[[[A Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.](https://www.godsent.gg/news)](https://www.godsent.gg/news)](https://www.godsent.gg/news)\r\n\r\n**Describe your issue**\r\n\r\nLineclamp gives a really weird behaviour on mobile devices.\r\nWorks on desktop and devtools (mobile).\r\n\r\nI have tried to downgrade to 3.2.7 to manually use the line clamp plugin but that gives the same error as the latest Tailwind version where the plug is included.\r\n\r\n![Screenshot 2023-04-05 at 11 11 34](https://user-images.githubusercontent.com/50720954/230167741-099855d1-e0a2-4631-b6f2-15466e0e572a.png)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10958","RelatedDescription":"Closed issue \"Lineclamp bug on mobile devices (Chrome, Firefox)\" (#10958)"},{"Id":"1655080162","IsPullRequest":false,"CreatedAt":"2023-04-05T10:53:32","Actor":"ugurc4n","Number":"10952","RawContent":null,"Title":"RTL support ","State":"closed","Body":"In version 3.3, if I want to give different values for ltr and rtl, which prop should I use? ltr and rtl do not work in 3.3","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10952","RelatedDescription":"Closed issue \"RTL support \" (#10952)"},{"Id":"1654794763","IsPullRequest":true,"CreatedAt":"2023-04-05T01:52:39","Actor":"bkjohnson","Number":"10950","RawContent":null,"Title":"Simplify rotate core plugin to a single transform","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nThe [docs on rotate](https://github.com/tailwindlabs/tailwindcss.com/blob/6f58d2ed6c7f2e0a220c94a2c6597f6374e8d665/src/pages/docs/rotate.mdx?plain=1#L17) show that the only property used in the declaration is `rotate()`:\r\n\r\n![Screenshot of the tailwind docs for rotate. In the table with \"Class\" and \"Properties\" columns you can see that for the `rotate-0` class, the only property is `transform: rotate(0deg);`](https://user-images.githubusercontent.com/2008881/229958399-e4dd3386-dcef-400c-9c00-fa9743ece527.png)\r\n\r\nHowever, the property that was actually declared was a combination of `translate`, `rotate`, `skew`, and `scale`, all of which used CSS variables. Because of this a tailwind user would have to include `@tailwind base` just to get those variables defined, but that inclusion would add a lot of extra baggage that wasn't necessary for utility classes.\r\n\r\nWith this PR a user can only have the `utilities` layer, leading to less output, and the `rotate` utility can only be concerned with rotation.\r\n\r\n---\r\n\r\nThis didn't feel like a significant feature so I didn't open an issue for it, but let me know if more discussion is desired.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10950","RelatedDescription":"Closed or merged PR \"Simplify rotate core plugin to a single transform\" (#10950)"},{"Id":"1654793328","IsPullRequest":false,"CreatedAt":"2023-04-05T01:49:56","Actor":"garmistry","Number":"10949","RawContent":null,"Title":"Gap attribute is not working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n\"next\": \"13.2.4\",\r\n\r\n\r\n**What browser are you using?**\r\n\r\nChrome,\r\n\r\n**What operating system are you using?**\r\n\r\nMacOS\r\n\r\n\r\n**Describe your issue**\r\n\r\nI was attempting to use the 'gap' flag with TailwindCSS 3.3.1 and I could not see the elements inherit the attribute when creating Card objects. \r\n\r\nAfter I downgraded to 2.2.19, the gap feature work and applied the items correctly. Might be a singular issue but maybe someone can test? \r\n\r\nI was following the multi-card examples from the Tremor Dashboard Setups. \r\n\r\nhttps://www.tremor.so/docs/getting-started/demo-dashboard","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10949","RelatedDescription":"Closed issue \"Gap attribute is not working\" (#10949)"},{"Id":"1654566472","IsPullRequest":true,"CreatedAt":"2023-04-04T20:57:07","Actor":"depfu[bot]","Number":"10948","RawContent":null,"Title":"Upgrade mini-css-extract-plugin: 1.6.2 → 2.7.5 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ mini-css-extract-plugin (1.6.2 → 2.7.5) · [Repo](https://github.com/webpack-contrib/mini-css-extract-plugin) · [Changelog](https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin/compare/684ad366d2fc34e58746e687bb6d33a797c71be2...ab1d8500f071b581f6e87ee74e2bfd358c88db97\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10948","RelatedDescription":"Closed or merged PR \"Upgrade mini-css-extract-plugin: 1.6.2 → 2.7.5 (major)\" (#10948)"},{"Id":"1654536672","IsPullRequest":true,"CreatedAt":"2023-04-04T20:30:01","Actor":"thecrypticace","Number":"10947","RawContent":null,"Title":"Order utilities clockwise where applicable","State":"open","Body":"Fixes https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/147\r\n\r\nWe're gonna change things so the appropriate `inset`, `padding`, `margin`, etc… utilities are in a clockwise sort order.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10947","RelatedDescription":"Open PR \"Order utilities clockwise where applicable\" (#10947)"},{"Id":"1654204794","IsPullRequest":true,"CreatedAt":"2023-04-04T16:46:21","Actor":"thecrypticace","Number":"10943","RawContent":null,"Title":"Don’t move `::ng-deep` pseudo element to end of selector when using `@apply`","State":"closed","Body":"Fixes #10937\r\n\r\nThe Angular `::ng-deep` Shadow DOM piercing selector uses invalid syntax *but* needs to still work for now. Here we've add it as an exception to ensure it is not moved to the end of the selector (which is the only place that pseudo elements can normally be placed).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10943","RelatedDescription":"Closed or merged PR \"Don’t move `::ng-deep` pseudo element to end of selector when using `@apply`\" (#10943)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-18T03:30:27.9759643Z","RunDurationInMilliseconds":615}