{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2901850272","IsPullRequest":true,"CreatedAt":"2025-03-07T02:31:10","Actor":"depfu[bot]","Number":"17010","RawContent":null,"Title":"Update h3 1.15.0 ‚Üí 1.15.1 (patch)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è h3 (1.15.0 ‚Üí 1.15.1) ¬∑ [Repo](https://github.com/unjs/h3) ¬∑ [Changelog](https://github.com/unjs/h3/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/unjs/h3/releases/tag/v1.15.1\">1.15.1</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/h3/compare/v1.15.0...v1.15.1\">compare changes</a></p>\n<h3 dir=\"auto\">ü©π Fixes</h3>\n<ul dir=\"auto\">\n<li>\n<strong>setCookie:</strong> Properly merge and dedup <code class=\"notranslate\">set-cookie</code> header (<a href=\"https://bounce.depfu.com/github.com/unjs/h3/pull/981\">#981</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/h3/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/unjs/h3/compare/da29b022ada78957fa7c47203c1d15249331d094...89265ec4cc37f65f5bf903c2b993fde3e6e69048\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/unjs/h3/commit/89265ec4cc37f65f5bf903c2b993fde3e6e69048\"><code>chore(release): v1.15.1</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/d1c00fcb4f4ed5132dff6b1d8b7dcae29ca3a8f3\"><code>fix(setCookie): properly merge and dedup `set-cookie` header (#981)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17010","RelatedDescription":"Open PR \"Update h3 1.15.0 ‚Üí 1.15.1 (patch)\" (#17010)"},{"Id":"2901843513","IsPullRequest":false,"CreatedAt":"2025-03-07T02:24:48","Actor":"Nicholas003","Number":"17009","RawContent":null,"Title":"The packaging result of the Vite library mode is the css of the entire project","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n\"@tailwindcss/postcss\": \"^4.0.9\",\n\"@tailwindcss/vite\": \"^4.0.9\",\n\"postcss\": \"^8.5.3\",\n\"tailwindcss\": \"^4.0.9\",\n \"vite\": \"^6.1.0\",\n\n**What version of Node.js are you using?**\n\nv20.18.3\n\n**What browser are you using?**\n\n Chrome, Safari\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nI am using the Vite Library Mode to package. I only want to package the styles of specified files and related dependency files, but now the packaged styles are all from the entire project\n![Xnip2025-03-07_10-14-53](https://github.com/user-attachments/assets/e5a19fb8-a842-4172-8816-5c39b4cd0a96)\nbuild HelloWorld.vue ÔºåThe result contains all styles\nI know 'base' params but that would lose the dependent style","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17009","RelatedDescription":"Open issue \"The packaging result of the Vite library mode is the css of the entire project\" (#17009)"},{"Id":"2901801477","IsPullRequest":false,"CreatedAt":"2025-03-07T01:50:10","Actor":"qjmiao","Number":"17007","RawContent":null,"Title":"@tailwindcss/vite revisions after 4.0.7 are not working with svelte files under viteconfig.resolve.alias","State":"open","Body":"\n@tailwindcss/vite revisions after 4.0.7 are not working with svelte files under viteconfig.resolve.alias.\n\nIt seems css classes are not generated for svelte files under dir defined in viteconfig.resolve.alias„ÄÇ\n\n\nBut @tailwindcss/vite@4.0.7 works","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17007","RelatedDescription":"Open issue \"@tailwindcss/vite revisions after 4.0.7 are not working with svelte files under viteconfig.resolve.alias\" (#17007)"},{"Id":"2901661859","IsPullRequest":true,"CreatedAt":"2025-03-07T00:00:54","Actor":"RobinMalfait","Number":"17005","RawContent":null,"Title":"Improve boundary classification","State":"closed","Body":"This PR cleans up the boundary character checking by using similar classification techniques as we used for other classification problems.\r\n\r\nFor starters, this moves the boundary related items to its own file, next we setup the classification enum.\r\n\r\nLast but not least, we removed `}` as an _after_ boundary character, and instead handle that situation in the Ruby pre processor where we need it. This means the `%w{flex}` will still work in Ruby files.\r\n\r\n---\r\n\r\nThis PR is a followup for https://github.com/tailwindlabs/tailwindcss/pull/17001, the main goal is to clean up some of the boundary character checking code. The other big improvement is performance. Changing the boundary character checking to use a classification instead results in:\r\n\r\nTook the best score of 10 runs each:\r\n```diff\r\n- CandidateMachine: Throughput: 311.96 MB/s\r\n+ CandidateMachine: Throughput: 333.52 MB/s\r\n```\r\n\r\nSo a ~20MB/s improvement.\r\n\r\n# Test plan\r\n\r\n1. Existing tests should pass. Due to the removal of `}` as an after boundary character, some tests are updated.\r\n2. Added new tests to ensure the Ruby pre processor still works as expected.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17005","RelatedDescription":"Closed or merged PR \"Improve boundary classification\" (#17005)"},{"Id":"2900721128","IsPullRequest":false,"CreatedAt":"2025-03-06T19:40:04","Actor":"iquito","Number":"16999","RawContent":null,"Title":"Missing classes because of `{` boundary and new extractor","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.11\n\n**Reproduction**\n\nWith the new extractor (https://github.com/tailwindlabs/tailwindcss/pull/16306) the class `h-4` and `mx-4` is not picked up anymore when using the following Twig template content:\n\n```\n<div class=\"flex items-center mx-4{% if session.isValid %}{% else %} h-4{% endif %}\"></div>\n```\n\n(See https://play.tailwindcss.com/w3SazyVehg for the example on Tailwind Play and the generated CSS)\n\nI assume the `{` after `h-4` and `mx-4` is somehow not considered a (possible) boundary anymore. I think this is likely a bug, as many template languages use `{` and `}` as delimiters in some way, so the possibility of a boundary should be taken into account.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16999","RelatedDescription":"Closed issue \"Missing classes because of `{` boundary and new extractor\" (#16999)"},{"Id":"2900904079","IsPullRequest":true,"CreatedAt":"2025-03-06T19:40:03","Actor":"RobinMalfait","Number":"17001","RawContent":null,"Title":"Ensure `}` and `{` are valid boundary characters","State":"closed","Body":"In a lot of templating languages, `{‚Ä¶}` is used to escape the template language to write some code logic, this means that if you have input that looks like this:\r\n\r\n```html\r\n<div class=\"flex items-center mx-4{% if session.isValid %}{% else %} h-4{% endif %}\"></div>\r\n```\r\n\r\nThat the if condition will be gone once it's compiled to HTML, but it also means that the `}` and `{` characters next to `mx-4{` and `h-4` should be valid boundary characters because Tailwind CSS typically operates on the source code, not the compiled code.\r\n\r\nI didn't create a pre processor for this because unfortunately this syntax is often embedded in `.html` files, and I would love to not have to create a pre processor for `.html` files.\r\n\r\nYou might notice that there are other changes in this PR, they are all related to boundary characters, let me explain:\r\n\r\nIn the named utility machine, we repeated the allowed boundary characters. We will now re-use the shared function so that it's all in one location.\r\nWe still check for a few additional characters such as `:` because of JS keys, `/` because it could be a start of a modifier and `!` because the named utility could be important.\r\n\r\nThis actually exposed a bug where the `class` attribute in `<div class=\"‚Ä¶\">‚Ä¶</div>` was not extracted (which we typically want). However, in languages like Svelte, this is a real thing you can do: `<div class:px-4=\"condition\"></div>`. The pre processor will make sure to convert this input to `<div class px-4=\"condition\"></div>` but that still means that we need to extract the `px-4`.\r\n\r\nif a utility ends in an number this worked as expected, but `<div class:flex=\"condition\"></div>` did not work. This PR also fixes that by adding a dedicated test and it's also the reason why you see a bunch of `class` candidates in the tests.\r\n\r\nFixes: #16999\r\n\r\n# Test plan\r\n\r\n1. Added new test\r\n4. Existing tests pass\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17001","RelatedDescription":"Closed or merged PR \"Ensure `}` and `{` are valid boundary characters\" (#17001)"},{"Id":"2901018281","IsPullRequest":true,"CreatedAt":"2025-03-06T17:30:08","Actor":"keithburgie","Number":"17002","RawContent":null,"Title":"Add --radius-full variable","State":"open","Body":"The `rounded-full` classname doesn't match the pattern of the other radius classnames:\r\n```\r\nrounded-xl: border-radius: var(--radius-xl)\r\nrounded-2xl: border-radius: var(--radius-2xl)\r\nrounded-3xl: border-radius: var(--radius-3xl)\r\nrounded-full: border-radius: calc(infinity * 1px)\r\n```\r\nThis PR makes `var(--rounded-full)` available to use like all the others in the theme.css.\r\n\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17002","RelatedDescription":"Open PR \"Add --radius-full variable\" (#17002)"},{"Id":"2900576849","IsPullRequest":false,"CreatedAt":"2025-03-06T16:24:01","Actor":"ledermann","Number":"16998","RawContent":null,"Title":"4.0.11 - Regression with SLIM templates (nested brackets)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nBrave 1.76.73\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/ledermann/tailwind-4.0.11-slim-issue\n\n**Describe your issue**\n\nSimilar to #16975, there is another issue with SLIM templates. With 4.0.11, the parser fails to handle **nested** brackets. See this example:\n\n```slim\n.text-black[\n  data-controller= ['foo', ('bar' if rand.positive?)].join(' ')\n]\n  .bg-green-300\n    | BLACK on GREEN - OK\n\n  .bg-red-300[\n    data-foo= 42\n  ]\n    | Should be BLACK on RED - FAIL\n```\n\nHere, the class `bg-red-300` is not processed.\n\n![Image](https://github.com/user-attachments/assets/cf7fb734-eade-4218-aa19-d88eab88b903)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16998","RelatedDescription":"Closed issue \"4.0.11 - Regression with SLIM templates (nested brackets)\" (#16998)"},{"Id":"2900855945","IsPullRequest":true,"CreatedAt":"2025-03-06T16:24:00","Actor":"RobinMalfait","Number":"17000","RawContent":null,"Title":"Ensure strings in Pug and Slim templates are handled correctly","State":"closed","Body":"This PR fixes an issue where strings in the Pug and Slim pre-processor were handled using the `string_machine`. However, the `string_machine` is not for strings inside of Tailwind CSS classes which means that whitespace is invalid.\n\nThis means that parts of the code that _are_ inside strings will not be inside strings and parts of the code that are not inside strings will be part of a potential string. This is a bit confusing to wrap your head around, but here is a visual representation of the problem:\n\n```\n.join(' ')\n        ^  3. start of new string, which means that the `)` _could_ be part of a string if a new `'` occurs later.\n       ^   2. whitespace is not allowed, stop string\n      ^    1. start of string\n```\n\nFixes: #16998\n\n# Test plan\n\n1. Added new test\n2. Existing tests still pass\n3. Added a simple test helper to make sure that we can extract the correct candidates _after_ pre-processing\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17000","RelatedDescription":"Closed or merged PR \"Ensure strings in Pug and Slim templates are handled correctly\" (#17000)"},{"Id":"2898726444","IsPullRequest":false,"CreatedAt":"2025-03-06T14:20:13","Actor":"hugotiger","Number":"16973","RawContent":null,"Title":"Custom utilities sorted incorrectly","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nTested on:\nNext.js 15.1.7\nPostCSS 8.5.2\n\n**What version of Node.js are you using?**\nv23.8.0\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/RhJ7x3kQUN\n\n**Describe your issue**\nIn the upgrade guide it is mentioned that custom utilities are sorted based on the number of properties they define. See [this section](https://tailwindcss.com/docs/upgrade-guide#adding-custom-utilities).\n\nNow as shown in the reproduction URL, this does not seem to function properly. The `type-h1` utility specified 3 properties, but are still sorted last in the CSS output. This makes it's specificity the highest and you can't override the font size with e.g. the `text-sm` class. \n\nIf we however instead use the `@apply` directive it seems to work as expected.\n\nTo me this seems to be a bug, but I might just misunderstand the docs, or there might be some alternative preferred solution.\n\nI looked into using [component classes](https://tailwindcss.com/docs/adding-custom-styles#adding-component-classes) instead, but this was not really feasible as it doesn't work with IntelliSense (see [this play link](https://play.tailwindcss.com/CLjzTW6JKq)). Maybe this is the most suitable solution, but due to the IntelliSense issue it's not really feasible for our team right now.\n\nReally love v4! Thanks for the hard work üôå \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16973","RelatedDescription":"Closed issue \"Custom utilities sorted incorrectly\" (#16973)"},{"Id":"2900520774","IsPullRequest":true,"CreatedAt":"2025-03-06T14:20:12","Actor":"philipp-spiess","Number":"16995","RawContent":null,"Title":"Fix sorting of classes that have undefined declarations","State":"closed","Body":"Closes #16973\r\n\r\nDeclaration values of `undefined` are an implementation detail and skipped when printing the CSS. Thus, these should not count towards the sort order at a..\r\n\r\n## Test plan\r\n\r\n- See added regression test","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16995","RelatedDescription":"Closed or merged PR \"Fix sorting of classes that have undefined declarations\" (#16995)"},{"Id":"2898204764","IsPullRequest":false,"CreatedAt":"2025-03-06T14:15:49","Actor":"michielvandermeer","Number":"16970","RawContent":null,"Title":"Two Tailwind v4 CSS files, only styles of the last-linked file work","State":"closed","Body":"I have a components project that generates its own Tailwind output CSS. I use that shared project in all my other projects so that I have a single source for my components. Each of my application projects build their own Tailwind CSS file for the styles specific to that application.\n\nI include the two Tailwind files in my HTML like this:\n```html\n<head>\n   <link rel=\"stylesheet\" href=\"component-library-output.css\" />\n   <link rel=\"stylesheet\" href=\"application-output.css\" />\n<head>\n```\n\nI recently upgraded to Tailwind v4 and now my component styles are not loaded anymore.\n\nI suspect it has to do with the `@layer theme, base, components, utilities;` directive on top of the Tailwind output files. I think this resets the layers when loading the second file.\n\n1. Is my suspicion correct?\n2. Is this a bug?\n3. Any ideas on how to get this to work?\n\nAny help would be much appreciated.\n\n_Originally posted by @michielvandermeer in https://github.com/tailwindlabs/tailwindcss/discussions/15989_","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16970","RelatedDescription":"Closed issue \"Two Tailwind v4 CSS files, only styles of the last-linked file work\" (#16970)"},{"Id":"2899866102","IsPullRequest":false,"CreatedAt":"2025-03-06T14:12:08","Actor":"flowerofmycountry","Number":"16981","RawContent":null,"Title":"use @theme to extend the default theme not work in nuxt4","State":"closed","Body":"use @theme to extend the default theme not work in nuxt4\n\nnuxt.config.ts\n`\nimport tailwindcss from \"@tailwindcss/vite\";\n\n// https://nuxt.com/docs/api/configuration/nuxt-config\nexport default defineNuxtConfig({\n  future: {\n    compatibilityVersion: 4,\n  },\n  css: ['~/assets/css/main.css'],\n  vite: {\n    plugins: [\n      tailwindcss(),\n    ],\n  },\n  compatibilityDate: '2024-11-01',\n  devtools: { enabled: true },\n})\n`\n\n\nmain.css\n`\n@import \"tailwindcss\";\n\n@theme {\n  --color-h5-bg: #F5F7FA;\n}\n`\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16981","RelatedDescription":"Closed issue \"use @theme to extend the default theme not work in nuxt4\" (#16981)"},{"Id":"2900422537","IsPullRequest":false,"CreatedAt":"2025-03-06T13:53:48","Actor":"rettimo","Number":"16993","RawContent":null,"Title":"Use theme() spacing value with dot doesn't work in all cases","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nPlayground\n\n**What version of Node.js are you using?**\n\nPlayground\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/P4MmxbtTas\n\n**Describe your issue**\n\nI am trying to figure out a pattern where I can specify my values ‚Äã‚Äãusing a theme(). Using the same approach, I am not getting the correct values.\n\nIf I use the latest version of tailwind I will solve this problem, but I can't change the version on the project now.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16993","RelatedDescription":"Closed issue \"Use theme() spacing value with dot doesn't work in all cases\" (#16993)"},{"Id":"2900339753","IsPullRequest":false,"CreatedAt":"2025-03-06T12:56:02","Actor":"ampolperlada","Number":"16991","RawContent":null,"Title":"npx tailwindcss init -p fails: \"could not determine executable to run\"","State":"closed","Body":"\n\nWhat version of Tailwind CSS are you using? v4.0.11\n\nWhat build tool (or framework if it abstracts the build tool) are you using? Next.js 15.2.0\n\nWhat version of Node.js are you using? v20.18.3\n\nWhat browser are you using? Edge\n\nWhat operating system are you using?\n‚úÖ Windows 11\n\nDescribe your issue\nI'm experiencing an issue where running npx tailwindcss init -p fails with the error:\n\nnpm error could not determine executable to run\nSteps to Reproduce:\nInstalled Tailwind CSS with:\n\nnpm install -D tailwindcss postcss autoprefixer\nTried to initialize Tailwind with:\n\nnpx tailwindcss init -p\nReceived error:\nvbnet\n\nnpm error could not determine executable to run\nWhat I Expected to Happen:\nThe command should generate tailwind.config.ts and postcss.config.js in my project root.\n\nWhat Actually Happened:\nnpx fails with \"could not determine executable to run\"\nRunning ls node_modules/.bin does not list tailwindcss\nRunning node_modules/.bin/tailwindcss -v fails\nAdditional Debugging:\nnpm list tailwindcss shows Tailwind is installed\nDeleting node_modules and reinstalling did not fix the issue:\n\nrm -rf node_modules package-lock.json && npm install\nnpx --no-install tailwindcss init -p also fails\nIs this an issue with Tailwind CLI on Windows, or is there something wrong with my setup? Thanks for the help!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16991","RelatedDescription":"Closed issue \"npx tailwindcss init -p fails: \"could not determine executable to run\"\" (#16991)"},{"Id":"2900133440","IsPullRequest":false,"CreatedAt":"2025-03-06T11:27:49","Actor":"atomicpages","Number":"16988","RawContent":null,"Title":"Exclude files with vite plugin","State":"closed","Body":"Related to https://github.com/tailwindlabs/tailwindcss/issues/15943 and this discussion here: https://github.com/tailwindlabs/tailwindcss/discussions/16712\n\nThe ability to exclude certain files with the vite plugin would be great for apps incrementally migrating from a different CSS solution (e.g. vanilla-extract or any CSS-in-JS solution that uses `.css.ts|js` file names) to tailwind v4 using vite. I have a PR ready that adds a simple option to the tailwind config ready if there's interest in allowing this.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16988","RelatedDescription":"Closed issue \"Exclude files with vite plugin\" (#16988)"},{"Id":"2900094177","IsPullRequest":true,"CreatedAt":"2025-03-06T11:09:39","Actor":"philipp-spiess","Number":"16987","RawContent":null,"Title":"Prepare v4.0.11 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16987","RelatedDescription":"Closed or merged PR \"Prepare v4.0.11 release\" (#16987)"},{"Id":"2899921330","IsPullRequest":false,"CreatedAt":"2025-03-06T11:05:34","Actor":"Chernat","Number":"16983","RawContent":null,"Title":"border-(length:<custom-property>) not working","State":"closed","Body":":root {\n  --checkbox-border-width: 1px;\n}\n\n\nI used it like border-(length:--checkbox-border-width) \n\nBut tailwind does not generate border-width:var(--checkbox-border-width)\n\nthe same with text-(length:<custom-property>)\n\nWhat version of Tailwind CSS are you using?\nv4.0.10\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\nVite 6.2.0\n\nWhat version of Node.js are you using?\nv22.8.0\n\nWhat operating system are you using?\nWindows\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16983","RelatedDescription":"Closed issue \"border-(length:<custom-property>) not working\" (#16983)"},{"Id":"2900074077","IsPullRequest":true,"CreatedAt":"2025-03-06T11:05:33","Actor":"philipp-spiess","Number":"16986","RawContent":null,"Title":"Ensure arbitrary variables with data types are extracted correctly","State":"closed","Body":"Closes #16983\r\n\r\nThis PR fixes an issue where the arbitrary variable machine did not extract data type correctly.\r\n\r\n## Test plan\r\n\r\n- Added regression test","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16986","RelatedDescription":"Closed or merged PR \"Ensure arbitrary variables with data types are extracted correctly\" (#16986)"},{"Id":"2899427884","IsPullRequest":false,"CreatedAt":"2025-03-06T10:59:15","Actor":"ledermann","Number":"16975","RawContent":null,"Title":"4.0.10 - Regression with SLIM templates","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nBrave 1.76.73\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/ledermann/tailwind-4.0.10-slim-issue\n\n**Describe your issue**\n\nSince 4.0.10, the parser fails to handle brackets in SLIM templates. See this example:\n\n```slim\n.text-xl.text-red-600[\n  data-foo=\"bar\"\n]\n  | This line should be red\n```\n\nHere, the class `text-red-600` is not processed.\n\n![Image](https://github.com/user-attachments/assets/be08bc22-c09c-4233-82a0-b357f15c5d3a)\n\nIt works fine with 4.0.9","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16975","RelatedDescription":"Closed issue \"4.0.10 - Regression with SLIM templates\" (#16975)"},{"Id":"2900021510","IsPullRequest":true,"CreatedAt":"2025-03-06T10:59:14","Actor":"RobinMalfait","Number":"16985","RawContent":null,"Title":"Fix Slim attributes","State":"closed","Body":"This PR fixes an issue in Slim templates where the start of attributes causes some candidates to be missing.\n\n\n```slim\n.text-xl.text-red-600[\n  data-foo=\"bar\"\n]\n  | This line should be red\n```\n\nBecause of the `[` attached to the `text-red-600`, the `text-red-600` was not extracted because `[` is not a valid boundary character.\n\nTo solve this, we copied the Pug pre processor and created a dedicated Slim pre processor. Next, we ensure that we replace `[` with ` ` in this scenario (by also making sure that we don't replace `[` where it's important).\n\nAdditionally, we noticed that `.` was also replaced inside of arbitrary values such as URLs. This has been fixed for both Pug and Slim.\n\nFixes: #16975\n\n# Test plan\n\n1. Added failing tests\n2. Existing tests still pass\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16985","RelatedDescription":"Closed or merged PR \"Fix Slim attributes\" (#16985)"},{"Id":"2899896468","IsPullRequest":false,"CreatedAt":"2025-03-06T10:55:43","Actor":"DotwoodMedia","Number":"16982","RawContent":null,"Title":"Container queries not generated for arbitrary values","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.15.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nUbuntu\n\n**Reproduction URL**\n\nhttps://github.com/DotwoodMedia/tailwindcss-4.0.10-container-query-bug\n\n**Describe your issue**\n\nWhen you create a container query with arbitrary values, the CSS is not generated. If you do it like this `@-[384px]:font-bold`, it works, but this way `@[384px]:font-bold` does not work.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16982","RelatedDescription":"Closed issue \"Container queries not generated for arbitrary values\" (#16982)"},{"Id":"2900008559","IsPullRequest":true,"CreatedAt":"2025-03-06T10:55:42","Actor":"philipp-spiess","Number":"16984","RawContent":null,"Title":"Oxide: Extract arbitrary container queries","State":"closed","Body":"Closes #16982\r\n\r\nHandle the case of variants looking like this: `@[32rem]:flex`.\r\n\r\n## Test plan\r\n\r\nAdded regression tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16984","RelatedDescription":"Closed or merged PR \"Oxide: Extract arbitrary container queries\" (#16984)"},{"Id":"2899532807","IsPullRequest":false,"CreatedAt":"2025-03-06T10:44:44","Actor":"woohm402","Number":"16978","RawContent":null,"Title":"Utility Classes Not Generated When Number is Followed by an Underscore in v4.0.10","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/woohm402/tailwindcss-4.0.10-bug-reproduction-1\n\n`npm run dev` and then visit `http://localhost:5173` will work\n\n**Describe your issue**\n\nUsing the legacy JavaScript config in `v4.0.10`, the theme font configuration with the name `Title1_Strong` does not generate a utility class, whereas `Title_Strong` does. In `v4.0.9` and earlier versions, both utility classes were generated properly. The `text-Title_Strong` utility class is created, but `text-Title1_Strong` is not.\n\nIt appears that any font names following the `\\d_` pattern do not generate utility classes. However, other patterns such as `Title1Strong` and `Title__Strong` work properly.\n\n| tailwind config | created css |\n| --- | --- |\n| <img width=\"824\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3b5328cc-59aa-453e-bfbe-bcf251b2f099\" /> | <img width=\"811\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c269a8a3-7233-4e0e-9650-48a328821802\" /> |","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16978","RelatedDescription":"Closed issue \"Utility Classes Not Generated When Number is Followed by an Underscore in v4.0.10\" (#16978)"},{"Id":"2899726668","IsPullRequest":true,"CreatedAt":"2025-03-06T10:44:43","Actor":"woohm402","Number":"16980","RawContent":null,"Title":"Ensure classes containing number followed by dash or underscore are extracted correctly","State":"closed","Body":"Fixes #16978, and also added support for dash.\r\nClasses like `text-theme1-primary` or `text-theme1_primary` should be treated as valid.\r\n\r\nIf this approach is not aligned with the project‚Äôs direction or there are any concerns, please feel free to close or edit this PR üòÉ\r\n\r\n<br/>\r\n\r\n### As is\r\n\r\nClasses conatining number followed by dash or underscore (e.g. `bg-theme1-primary`, `text-title1_strong`) are ignored, and utility classes are not generated.\r\n\r\n### To be\r\n\r\nClasses conatining number followed by dash or underscore (e.g. `bg-theme1-primary`, `text-title1_strong`) are treated as valid tailwindcss classes","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16980","RelatedDescription":"Closed or merged PR \"Ensure classes containing number followed by dash or underscore are extracted correctly\" (#16980)"},{"Id":"2898539016","IsPullRequest":true,"CreatedAt":"2025-03-05T21:46:43","Actor":"RobinMalfait","Number":"16972","RawContent":null,"Title":"Ensure `--` is allowed inside candidates","State":"closed","Body":"This PR fixes an issue where named utilities that contain double dashes `--` are not extracted correctly.\n\nSome people use `--` in the middle of the utility to create some form of namespaced utility. \n\nGiven this input:\n```js\nlet x = 'foo--bar'\n```\n\nThe extracted candidates before this change:\n```js\n[ \"let\", \"x\", \"--bar\" ]\n```\n\nThe extracted candidates after this change:\n```js\n[ \"let\", \"x\", \"foo--bar\", \"--bar\" ]\n```\n\nThe reason `--bar` is still extracted in both cases is because of the CSS variable machine. We could improve its extraction by checking its boundary characters but that's a different issue.\n\nFor now, the important thing is that `foo--bar` was extracted.\n\n# Test plan\n\n1. Added new test\n2. Existing tests pass\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16972","RelatedDescription":"Closed or merged PR \"Ensure `--` is allowed inside candidates\" (#16972)"},{"Id":"2897733325","IsPullRequest":false,"CreatedAt":"2025-03-05T17:58:06","Actor":"xichtop","Number":"16964","RawContent":null,"Title":"\"Unexpected semicolon\" error when using @plugin \"daisyui/theme\" to custom theme for daisyui","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nBrave\n\n**What operating system are you using?**\n\nMacOS\n\n**Describe your issue**\n\nWhen using @plugin \"daisyui/theme\" to custom theme for daisyui, i got an issue like: [vite] Internal server error: Unexpected semicolon.\nBut with the same code, it works when i use postcss as a build tool.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16964","RelatedDescription":"Closed issue \"\"Unexpected semicolon\" error when using @plugin \"daisyui/theme\" to custom theme for daisyui\" (#16964)"},{"Id":"2897511525","IsPullRequest":true,"CreatedAt":"2025-03-05T17:32:15","Actor":"philipp-spiess","Number":"16963","RawContent":null,"Title":"Prepare v4.0.10 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16963","RelatedDescription":"Closed or merged PR \"Prepare v4.0.10 release\" (#16963)"},{"Id":"2897760072","IsPullRequest":false,"CreatedAt":"2025-03-05T16:33:04","Actor":"dimaMachina","Number":"16966","RawContent":null,"Title":"[v4] used `@keyframes` are removed when using `prefix` option","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nplayground\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nplayground\n\n**What version of Node.js are you using?**\n\nplayground\n\n**What browser are you using?**\n\nchrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/8k0xGZ2vL1\n\n**Describe your issue**\n\ngenerated output doesn't contain\n\n```css\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16966","RelatedDescription":"Closed issue \"[v4] used `@keyframes` are removed when using `prefix` option\" (#16966)"},{"Id":"2897752880","IsPullRequest":true,"CreatedAt":"2025-03-05T16:05:01","Actor":"philipp-spiess","Number":"16965","RawContent":null,"Title":"Enable URL rewriting for PostCSS","State":"open","Body":"Fixes #16636 \r\n\r\nThis PR enables URL rebasing for PostCSS. Furthermore it fixes an issue where transitive imports rebased against the importer CSS file instead of the input CSS file. While fixing this we noticed that this is also broken in Vite right now and that our integration test swallowed that when testing because it did not import any Tailwind CSS code and thus was not considered a Tailwind file.\r\n\r\n## Test plan\r\n\r\n- Added regression integration tests\r\n- Also validated it against the repro of https://github.com/tailwindlabs/tailwindcss/issues/16962:\r\n  \r\n    <img width=\"1149\" alt=\"Screenshot 2025-03-05 at 16 41 01\" src=\"https://github.com/user-attachments/assets/85396659-d3d0-48c0-b1c7-6125ff8e73ac\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16965","RelatedDescription":"Open PR \"Enable URL rewriting for PostCSS\" (#16965)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-07T03:30:23.1221619Z","RunDurationInMilliseconds":420}