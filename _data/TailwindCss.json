{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1715911075","IsPullRequest":false,"CreatedAt":"2023-05-20T01:05:07","Actor":"robinp","Number":"11259","RawContent":null,"Title":"justify- utilities don't work with grid, or documentation problem","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nTailwind Play's current.\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/FWLNKoZUHs\r\n\r\n**Describe your issue**\r\n\r\nThe Tailwind docs under Flexbox & Grid > Justify Content write `Utilities for controlling how flex and grid items are positioned along a container's main axis.`\r\n\r\nThat makes one believe that `justify-...` could be used to control grid item placement as well. For example, that `justify-around` or `justify-end` would affect item placement.\r\n\r\nThat is true using the plain CSS grid, assuming that there's free horizontal space around the grid items on which these placement controls can be applied.\r\n\r\nBut, (note: I'm no CSS export) it seems Tailwind's `grid-cols-N` styles generate a `grid-template-columns` that will take up all the available space per grid item, so there's no room left for the controls to kick in, effectively resulting in no-op placement.\r\n\r\nSee the linked Tailwind Play. But to be brief:\r\n\r\nWhat Tailwind generates, kind of (see the grid-template-columns):\r\n```\r\n<div class=\"bg-blue-100\" style=\"display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); justify-content: flex-end;\">\r\n  <div class=\"mx-auto bg-red-100\">1</div>\r\n  <div class=\"mx-auto bg-red-200\">2 2</div>\r\n  <div class=\"mx-auto bg-red-300\">3 3 3</div>\r\n</div>\r\n```\r\n\r\nUsing manual CSS with `max-content` instead of the `minmax(0, 1fr)` works:\r\n```\r\n<div class=\"bg-blue-100\" style=\"display: grid; grid-template-columns: repeat(3, max-content); justify-content: flex-end;\">\r\n  <div class=\"bg-red-100\">1</div>\r\n  <div class=\"bg-red-200\">2 2</div>\r\n  <div class=\"bg-red-300\">3 3 3</div>\r\n</div>\r\n```\r\n\r\nNow I understand that the grid template gives lot of options on the column sizing (see https://developer.mozilla.org/en-US/docs/Web/CSS/repeat#track-size, though I'm a bit lost in grid docs), and it might not be Tailwind's profile to pick a single choice or give finer control of this choice (or what are even the common choices, no idea). But it would then be nice if the docs pointed out these controls won't work for grid, as it could save quite some time.\r\n\r\n(Thank you btw for Tailwind, it is a gift! Bought Refactoring UI too, excellent book. Now I can stop writing bootstrap-as-a-programmer, and write... tailwind-as-a-programmer)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11259","RelatedDescription":"Closed issue \"justify- utilities don't work with grid, or documentation problem\" (#11259)"},{"Id":"1717450141","IsPullRequest":true,"CreatedAt":"2023-05-19T16:13:02","Actor":"RobinMalfait","Number":"11260","RawContent":null,"Title":"Explicitly list published CSS files ","State":"closed","Body":"This PR explicitly lists the CSS files that are published to NPM instead of relying on `*.css`.\n\nThe main reason for this change is that we will expose `index.css` for the oxide engine to make\nthings a bit smoother, but there is no need to include this new feature in the stable release (3.3.x).\n\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11260","RelatedDescription":"Closed or merged PR \"Explicitly list published CSS files \" (#11260)"},{"Id":"1714043185","IsPullRequest":false,"CreatedAt":"2023-05-17T15:31:55","Actor":"conpat","Number":"11255","RawContent":null,"Title":"'break-words' does not wrap when wrapped in a flex container","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nVersion: 3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nphoenix: 1.7.1\r\nelixir: 1.14\r\n\r\n**~What version of Node.js are you using?~** None, because it is Elixir\r\n\r\n**What browser are you using?**\r\n\r\nTested on:\r\n- Chrome 113.0.5672.92 (Official Build) (x86_64) \r\n- Safari 16.4 (18615.1.26.110.1)\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS Ventura 13.3.1 (a) (22E772610a)\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/VKcENrNScV\r\n\r\n**Describe your issue**\r\n\r\nThe Tailwind ['break-words'](https://tailwindcss.com/docs/word-break#break-words) option does not work as expected in every scenario.\r\n\r\nAs seen in the example. The `break-words` option does not behave like the deprecated css option `break-word` (`6th` span) or its successor (`4th` and `5th` span).\r\n\r\nI expected the `1st` span to wrap just like the `3rd` (difference is the `w-full`)\r\n\r\nCreating the example for this issue I figured out it is due to the `flax` wrap as seen in  the `2nd` span where it`s missing the `flex` and behaves as expected.\r\n\r\nThe `4th` span uses the solution described on mdn and works where `break-words` doesn`t.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11255","RelatedDescription":"Closed issue \"'break-words' does not wrap when wrapped in a flex container\" (#11255)"},{"Id":"1713497938","IsPullRequest":false,"CreatedAt":"2023-05-17T14:03:21","Actor":"brandonmcconnell","Number":"11251","RawContent":null,"Title":"Mismatch in TS types and docs example for `matchVariant`","State":"closed","Body":"The [docs](https://tailwindcss.com/docs/plugins#dynamic-variants) (2nd example under \"Dynamic variants\" section) show this example: \r\n\r\n```js\r\nmatchVariant(\"min\", (value) => `@media (min-width: ${value})`, {\r\n  sort(a, z) {\r\n    return parseInt(a) - parseInt(z);\r\n  },\r\n});\r\n```\r\n\r\nbut when I add that same example to Tailwind Play ([here](https://play.tailwindcss.com/7jSUGQ5kjV?file=config)), I see these type linting errors:\r\n\r\n```\r\n(parameter) a: {\r\n    value: string;\r\n    modifier: string;\r\n}\r\nArgument of type '{ value: string; modifier: string; }' is not assignable to parameter of type 'string'.(2345)\r\n```\r\n\r\n```\r\n(parameter) z: {\r\n    value: string;\r\n    modifier: string;\r\n}\r\nArgument of type '{ value: string; modifier: string; }' is not assignable to parameter of type 'string'.(2345)\r\n```\r\n\r\nPresumably, the example in the docs needs to be updated to use the `value` property like this:\r\n\r\n```js\r\nmatchVariant(\"min\", (value) => `@media (min-width: ${value})`, {\r\n  sort(a, z) {\r\n    return parseInt(a.value) - parseInt(z.value);\r\n  },\r\n});\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11251","RelatedDescription":"Closed issue \"Mismatch in TS types and docs example for `matchVariant`\" (#11251)"},{"Id":"1713814384","IsPullRequest":false,"CreatedAt":"2023-05-17T13:41:25","Actor":"smartfox87","Number":"11253","RawContent":null,"Title":"Styling based on parent or sibling state doesn't work in nuxt 3","State":"closed","Body":"Styling based on parent or sibling state doesn't work in nuxt 3\r\npackage.json\r\n  \"devDependencies\": {\r\n    \"nuxt\": \"3.5.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"autoprefixer\": \"10.4.14\",\r\n    \"postcss\": \"8.4.21\",\r\n    \"tailwindcss\": \"3.2.7\"\r\n  }\r\n\r\n[example of error on codesandbox](https://codesandbox.io/p/sandbox/tailwind-nuxt-3-3bb3jy?file=%2Fapp.vue%3A9%2C32)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11253","RelatedDescription":"Closed issue \"Styling based on parent or sibling state doesn't work in nuxt 3\" (#11253)"},{"Id":"1712565617","IsPullRequest":false,"CreatedAt":"2023-05-16T20:01:17","Actor":"cawa-93","Number":"11246","RawContent":null,"Title":"Arbitrary groups seem doesn't work","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n2.2.19\r\n\r\n**What browser are you using?**\r\nFirefox 114\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 10\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/YShTf1coHJ\r\n\r\n**Describe your issue**\r\n\r\nI simply copy-paste code samples from docs, and seems tailwind doesn't generate CSS for Arbitrary groups:\r\n\r\n![–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è](https://github.com/tailwindlabs/tailwindcss/assets/1662812/98a33a38-9062-473d-8c0a-4f8a1351ffc7)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11246","RelatedDescription":"Closed issue \"Arbitrary groups seem doesn't work\" (#11246)"},{"Id":"1712359634","IsPullRequest":false,"CreatedAt":"2023-05-16T16:52:38","Actor":"nafasebra","Number":"11245","RawContent":null,"Title":"bug in the divide-x class when use on rtl version page.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\nHi.\r\nI see a bug when use the divide-x class in rtl direction what border was not set on first item\r\n\r\nI am using latest version now (3.3.2) and my browser is Chrome - Windows\r\n\r\nthis my code:\r\n\r\n```html\r\n   <div class=\"divide-x-2 divide-gray-200\">\r\n      <!-- some items :) -->\r\n   </div>\r\n```\r\n\r\nand this is preview:\r\n\r\n![Capture](https://github.com/tailwindlabs/tailwindcss/assets/74317517/c1b05481-dd69-4ad1-b666-66002a621731)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11245","RelatedDescription":"Closed issue \"bug in the divide-x class when use on rtl version page.\" (#11245)"},{"Id":"1711781428","IsPullRequest":false,"CreatedAt":"2023-05-16T11:15:22","Actor":"jvalrog","Number":"11242","RawContent":null,"Title":"shadow-md doesn't work with shadow-color","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 2.9.9\r\npostcss 8.4.23\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.20\r\n\r\n**What browser are you using?**\r\n\r\nFirefox 113\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu Linux\r\n\r\n**Describe your issue**\r\n\r\nWhen using `shadow-md` and `shadow-[color]-[number]` the color isn't applied.\r\n\r\nIt works with `shadow`, `shadow-sm`, `shadow-lg`and `shadow-xl`.\r\n\r\nProblem is `shadow-md` is added after `shadow-color`:\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/456311/f71f849e-c517-4434-a18d-1c7e14ef5315)\r\n\r\nWhile if you use `shadow-lg` for example:\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/456311/43230314-6e18-404b-b026-f00a6251a8f6)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11242","RelatedDescription":"Closed issue \"shadow-md doesn't work with shadow-color\" (#11242)"},{"Id":"1711710666","IsPullRequest":false,"CreatedAt":"2023-05-16T10:16:39","Actor":"zipper","Number":"11241","RawContent":null,"Title":"Arbitrary CSS variable with variant prefix","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nNot sure, simulated on Tailwind Play though.\r\n\r\n**What version of Node.js are you using?**\r\nSee above.\r\n\r\n**What browser are you using?**\r\nDoesn't matter.\r\n\r\n**What operating system are you using?**\r\nDoesn't matter.\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/uGZbOX6jll\r\n\r\n**Describe your issue**\r\nWhen using arbitrary CSS variables as seen in docs https://tailwindcss.com/docs/adding-custom-styles#arbitrary-properties, there is an issue when:\r\n- Variant prefix for media is used (may be a problem with other variants as well, not sure)\r\n- and theme function is used using `[]` to retrieve value.\r\n\r\nE.g. these classes does work properly\r\n‚úîÔ∏è `[--bar:theme('spacing[1.5]')]` - even though `[]` is used, it still works because there is no variant.\r\n‚úîÔ∏è `md:[--foo:theme('spacing.2')]` - variant is used, but dot notation for value.\r\n\r\nBut this one doesn't:\r\n‚ùå `md:[--bar:theme('spacing[2.5]')]` - `[]` and variant is used together, resulting in malformed CSS output.\r\n\r\nAll three classes are used in demo above, where first two works as intended, but the last one does not.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11241","RelatedDescription":"Open issue \"Arbitrary CSS variable with variant prefix\" (#11241)"},{"Id":"1710465686","IsPullRequest":true,"CreatedAt":"2023-05-15T17:29:58","Actor":"RobinMalfait","Number":"11239","RawContent":null,"Title":"[Oxide] Add built-in `@import` processing support","State":"closed","Body":"This PR adds built-in support for processing and inlining `@import` at-rules, in a way that is compatible with Tailwind's `@config` and `@tailwind` directives.\r\n\r\nThis removes the need for installing and configuring `postcss-import`, but won't cause any issues in projects that already have it set up.\r\n\r\nThe advantage to using the built-in support provided by this PR is that it will let you place your `@config` and `@tailwind` directives anywhere in your CSS file you like, whereas using `postcss-import` directly forces you to put all of your `@import` statements before your `@config` and `@tailwind` directives.\r\n\r\n```css\r\n@config \"./admin/tailwind.config.js\";\r\n\r\n@tailwind base;\r\n@import \"./my-base.css\";\r\n\r\n@tailwind utilities;\r\n@import \"./my-utilities.css\";\r\n\r\n@tailwind components;\r\n@import \"./my-components.css\";\r\n\r\n@import \"third-party/library.css\";\r\n```\r\n\r\nUnder the hood we are still using `postcss-import` to handle the actual inlining of the `@import` at-rules, but our intention is for this to be an implementation detail and we may migrate to another tool or something custom in the future.\r\n\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11239","RelatedDescription":"Closed or merged PR \"[Oxide] Add built-in `@import` processing support\" (#11239)"},{"Id":"1709496432","IsPullRequest":false,"CreatedAt":"2023-05-15T10:55:33","Actor":"Elioyoussef","Number":"11234","RawContent":null,"Title":"Tailwindcss arbitrary value for end and start doesn't work","State":"closed","Body":"### Context\r\n\r\nI have a multidirectional layout for my website, i'm using `end` and `start` instead of `left` and `right`. \r\nSometime, i need to use arbitrary values, such as `end-[11px]` but it doesn't work.\r\nAs per [documentation](https://tailwindcss.com/docs/top-right-bottom-left#arbitrary-values), we can only use `left`, `top`, `right` and `bottom` for arbitrary values, is there a way to use arbitrary values for `end` and `start`? \r\n\r\n### Current Behavior\r\n\r\nUsing arbitrary values with multidirectional attributes doesn't work.\r\n\r\n### Expected Behavior\r\n\r\nArbitrary values should work with multidirectional attributes\r\n\r\n### Version\r\n\r\nTailwindCSS 3.1.8\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11234","RelatedDescription":"Closed issue \"Tailwindcss arbitrary value for end and start doesn't work\" (#11234)"},{"Id":"1709031374","IsPullRequest":false,"CreatedAt":"2023-05-14T18:31:33","Actor":"hugollm","Number":"11231","RawContent":null,"Title":"Calling prettier with . doesn't run tailwind plugin","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\ntailwindcss v3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite/4.1.1 linux-x64 node-v20.0.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nnode v20.0.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome Version 113.0.5672.93 (Official Build) (64-bit)\r\n\r\n**What operating system are you using?**\r\n\r\nLinux under Windows (WSL2).\r\n\r\n**Reproduction URL**\r\n\r\nI'm not filling this one. I'm trying to help but this is asking too much. Feel free to close if it's required.\r\n\r\n## **Describe your issue**\r\n\r\nCalling prettier with `.` doesn't run tailwind plugin.\r\n\r\n```\r\npnpm prettier --config prettier.tailwind.js --write .\r\n```\r\n\r\nIt only works if I specify the file:\r\n\r\n```\r\npnpm prettier --config prettier.tailwind.js --write components/icons.jsx\r\n```\r\n\r\n---\r\n\r\nThis is my config:\r\n\r\n```js\r\n// workaround for tailwind plugin that doesn't seem to play nice with others\r\nlet config = require(\"./prettier.base.js\");\r\n\r\nmodule.exports = Object.assign(config, {\r\n  plugins: [require(\"prettier-plugin-tailwindcss\")],\r\n});\r\n```\r\n\r\nI have a separate config file just for tailwind so it doesn't break other plugins. Config base is just:\r\n\r\n```js\r\nmodule.exports = {\r\n  printWidth: 120,\r\n};\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11231","RelatedDescription":"Closed issue \"Calling prettier with . doesn't run tailwind plugin\" (#11231)"},{"Id":"1708668850","IsPullRequest":true,"CreatedAt":"2023-05-13T16:06:12","Actor":"brandonmcconnell","Number":"11225","RawContent":null,"Title":"Add support for dimension prefix when using dynamic `min-*` and `max-*` (resolved sorting)","State":"open","Body":"**UPDATE:** I am opening this PR as a re-open of #11217, as I have accounted for the changes recommended by @adamwathan. I have fixed the sorting bug from before and provided feedback on his other questions at the bottom of this PR description under \"Feedback resolution\".\r\n\r\n---\r\n\r\nThis PR adds support for using a new dimension prefix with dynamic `min-*` and `max-*` variants. \r\n\r\n### Syntax:\r\n`type-[length]` or `type-[dimension:length]`, where‚Ä¶\r\n* `type`: `'min' | 'max'`\r\n* `dimension`: `'w' | 'h'` (optional, can be excluded to omit and default to `width`)\r\n* `length`: any valid CSS length\r\n\r\n### Syntax examples:\r\n\r\n```css\r\n/* min-[100px]   */ @media (min-width: 100px)\r\n/* min-[w:100px] */ @media (min-width: 100px)\r\n/* min-[h:100px] */ @media (min-height: 100px)\r\n/* max-[100px]   */ @media (max-width: 100px)\r\n/* max-[w:100px] */ @media (max-width: 100px)\r\n/* max-[h:100px] */ @media (max-height: 100px)\r\n```\r\n\r\n### Real use case examples:\r\n* only applied on screens taller than `100px`\r\n\r\n  ```html\r\n  <div class=\"min-[h:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens taller and narrower than `100px`\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"min-[h:100px]:max-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"min-[h:100px]:max-[w:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens shorter and narrower than `100px` (no conflict between `max-[w?:]` and `max-[h:]`)\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"max-[h:100px]:max-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"max-[h:100px]:max-[w:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens taller and wider than `100px` (no conflict between `min-[w?:]` and `min-[h:]`)\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"min-[h:100px]:min-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"min-[h:100px]:min-[w:100px]:font-bold\" />\r\n  ```\r\n\r\n### Gotcha / usage note\r\n\r\nUsing `w:` is 100% optional and only exists so either dimension can be defined explicitly if the user so desires. If any prefix is used other than `h:` it defaults to using `width:`, though one consideration could be to throw a `log.risk` or `log.warn` if any non-`''`/`'w:'`/`'h:'` dimension prefix is used.\r\n\r\n### Feedback resolution\r\n\r\nOn the previous PR for this change (#11217), @adamwathan left some feedback re what this PR might need before re-opening. Here is his feedback as well as my resolution notes:\r\n\r\n<details><summary>(expand/collapse @adamwathan's feedback)</summary><br />\r\n\r\n> Hey thanks @brandonmcconnell! I'm going to close this one for now for a couple reasons:\r\n> \r\n> 1. I'm not sold on the new colon prefix syntax ‚Äî I don't really want to add new syntax conventions to the framework for just one feature without really thinking hard about it, and in this case my instinct would be to introduce new variants like `min-h-[...]` and `max-h-[...]` instead which feels a lot simpler.\r\n> 2. There are issues with the implementation that prevent any media queries using the new syntax from being sorted correctly. For example, this HTML:\r\n>    ```\r\n>    <div class=\"min-[h:50px]:underline min-[h:200px]:underline min-[h:100px]:underline\">\r\n>        <!-- ... -->\r\n>    </div>\r\n>    ```\r\n>    \r\n>    ...generates this CSS, which is in the wrong order:\r\n>    ```css\r\n>    @media (min-height: 100px) {\r\n>      .min-\\[h\\:100px\\]\\:underline {\r\n>          text-decoration-line: underline;\r\n>      }\r\n>    }\r\n>    \r\n>    @media (min-height: 200px) {\r\n>      .min-\\[h\\:200px\\]\\:underline {\r\n>          text-decoration-line: underline;\r\n>      }\r\n>    }\r\n>    \r\n>    @media (min-height: 50px) {\r\n>      .min-\\[h\\:50px\\]\\:underline {\r\n>          text-decoration-line: underline;\r\n>      }\r\n>    }\r\n>    ```\r\n> \r\n> We've found the only way to successfully stay on top of issues and PRs in a project as big as Tailwind is to be pretty strict about either merging or closing a PR when we review it and not leaving it open, because otherwise things really pile up as often people lose interest in pushing things forward or we simply never reach the point where we're sure it's a good idea to merge something. Hope you understand and know we still value the contribution even if it wasn't merged üëç\r\n> \r\n> If still interested in pushing this forward, feel free to open another PR at some point based on the feedback above and we can reconsider. Thanks!\r\n\r\n</details>\r\n\r\n<details><summary>(expand/collapse my resolution notes)</summary><br />\r\n\r\n* üí≠ Re **syntax**\r\n  * _the syntax I used_ ‚Äî the colon prefix syntax is nothing new to TailwindCSS. We use it in a very similar fashion for arbitrary values for [resolving ambiguities](https://tailwindcss.com/docs/adding-custom-styles#resolving-ambiguities), which is also pretty close in practice to what we‚Äôre trying to achieve here ‚Äî providing a means to resolve the ambiguity in a media query dimension (which defaults to `width` using width naturally).\r\n  * _alternative syntax considerations_ ‚Äî I also considered using something more like `min-h-[100px]` and `max-h-[100px]`, but‚Ä¶\r\n    * that would conflict with the existing `min-width`, `max-width`, `min-height`, and `max-height` utilities\r\n    * using a different syntax from the currently employed [dynamic breakpoint](https://tailwindcss.com/docs/responsive-design#arbitrary-values) syntax added in v3.2 (i.e. `max-*` and `max-*`) could potentially be a breaking change for some users\r\n*  ‚úÖ Re **sorting** ‚Äî sorting is now FIXED as of commit [265b48](https://github.com/tailwindlabs/tailwindcss/commit/265b48435b31936869b474e62c7fbf1cbcd099cb), and I've included a test for it\r\n\r\n</details>","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11225","RelatedDescription":"Open PR \"Add support for dimension prefix when using dynamic `min-*` and `max-*` (resolved sorting)\" (#11225)"},{"Id":"1706602297","IsPullRequest":true,"CreatedAt":"2023-05-13T11:26:25","Actor":"brandonmcconnell","Number":"11217","RawContent":null,"Title":"Add support for dimension prefix when using dynamic `min-*` and `max-*`","State":"closed","Body":"This PR adds support for using a new dimension prefix with dynamic `min-*` and `max-*` variants. \r\n\r\n### Syntax:\r\n`type-[length]` or `type-[dimension:length]`, where‚Ä¶\r\n* `type`: `'min' | 'max'`\r\n* `dimension`: `'w' | 'h'` (optional, can be excluded to omit and default to `width`)\r\n* `length`: any valid CSS length\r\n\r\n### Syntax examples:\r\n\r\n```css\r\n/* min-[100px]   */ @media (min-width: 100px)\r\n/* min-[w:100px] */ @media (min-width: 100px)\r\n/* min-[h:100px] */ @media (min-height: 100px)\r\n/* max-[100px]   */ @media (max-width: 100px)\r\n/* max-[w:100px] */ @media (max-width: 100px)\r\n/* max-[h:100px] */ @media (max-height: 100px)\r\n```\r\n\r\n### Real use case examples:\r\n* only applied on screens taller than `100px`\r\n\r\n  ```html\r\n  <div class=\"min-[h:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens taller and narrower than `100px`\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"min-[h:100px]:max-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"min-[h:100px]:max-[w:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens shorter and narrower than `100px` (no conflict between `max-[w?:]` and `max-[h:]`)\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"max-[h:100px]:max-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"max-[h:100px]:max-[w:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens taller and wider than `100px` (no conflict between `min-[w?:]` and `min-[h:]`)\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"min-[h:100px]:min-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"min-[h:100px]:min-[w:100px]:font-bold\" />\r\n  ```\r\n\r\n### Gotcha / usage note\r\n\r\nUsing `w:` is 100% optional and only exists so either dimension can be defined explicitly if the user so desires. If any prefix is used other than `h:` it defaults to using `width:`, though one consideration could be to throw a `log.risk` or `log.warn` if any non-`''`/`'w:'`/`'h:'` dimension prefix is used.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11217","RelatedDescription":"Closed or merged PR \"Add support for dimension prefix when using dynamic `min-*` and `max-*`\" (#11217)"},{"Id":"1708266871","IsPullRequest":false,"CreatedAt":"2023-05-12T22:35:13","Actor":"mattmischuk","Number":"11220","RawContent":null,"Title":"[v3.3.2] Docs: sticky element not working as expected","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nn/a\r\n\r\n**What version of Node.js are you using?**\r\nn/a\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nmacOS latest\r\n\r\n**Reproduction URL**\r\nhttps://tailwindcss.com/docs/position#sticky-positioning-elements\r\n\r\n**Describe your issue**\r\nOn the sticky section of the documentation there is a bug where in some cases the category sticky element does not show up as they are expected to.\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/assets/3485831/9253a536-e457-4ac9-b214-eaec19e5df51","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11220","RelatedDescription":"Closed issue \"[v3.3.2] Docs: sticky element not working as expected\" (#11220)"},{"Id":"1708270340","IsPullRequest":true,"CreatedAt":"2023-05-12T22:15:31","Actor":"RobinMalfait","Number":"11221","RawContent":null,"Title":"[Oxide] Ensure generated `tailwind.config.js` file is formatted properly","State":"closed","Body":"This PR fixes a small formatting issue when generating the `tailwind.config.js` file when using the `npx tailwindcss init` command using the oxide engine.\r\n\r\nWe dropped the `content: []` by default such that the auto content detection can be used as a default. However we used a regex to replace the `content: []` which included a `\\s` in the regex.\r\nThis is problematic because `\\s` includes `\\n` so therefore the previous `\\n` was removed as well.\r\n\r\nEverything still worked, but the formatting of the generated file was off.\r\n\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11221","RelatedDescription":"Closed or merged PR \"[Oxide] Ensure generated `tailwind.config.js` file is formatted properly\" (#11221)"},{"Id":"1706296890","IsPullRequest":false,"CreatedAt":"2023-05-11T18:09:59","Actor":"chrissantamaria","Number":"11215","RawContent":null,"Title":"[Prettier Plugin] Incompatible with `@ianvs/prettier-plugin-sort-imports` when using `prettier.config.js`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n`tailwindcss` v3.3.2, `prettier-plugin-tailwindcss` v0.2.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`vite` v4.3.1 (but in my reproduction repo that's not too relevant, this is just a Prettier issue)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.8.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/chrissantamaria/prettier-plugin-tailwindcss-sort-order-bug\r\n\r\n**Describe your issue**\r\n\r\nI noticed that, despite being [listed as a compatible plugin](https://github.com/tailwindlabs/prettier-plugin-tailwindcss#compatibility-with-other-prettier-plugins) in the README, `@ianvs/prettier-plugin-sort-imports` is incompatible with `prettier-plugin-tailwindcss`. With the Tailwind plugin listed last in the `plugins` array (as instructed in the README), it still takes precedence over the sort plugin and effectively disables it.\r\n\r\nNotably, this only occurs when using a JS-based `prettier.config.js` file (where plugins are `require`'d) rather than a JSON-based `.prettierrc`. I suspect this is due to the `require` changing how plugins are loaded, but I'm not familiar with the internals of either plugin to be sure.\r\n\r\nSome alternatives I tried:\r\n- using `@trivago/prettier-plugin-sort-imports` instead - this has the same issue\r\n- using a different package manager - npm v8.18, Yarn v1.22 and pnpm v8.3 all have the same issue\r\n- using `prettier-plugin-tailwindcss` [v0.2.3](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/releases/tag/v0.2.3), as this was the first version to officially support `@ianvs/prettier-plugin-sort-imports` - no luck\r\n- creating a custom plugin [combining aspects of both](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/31#issuecomment-1403682137) - this actually _did_ work, but is far from elegant\r\n\r\nIf this is expected functionality, it may be a good idea to make a note of the differences between `prettier.config.js` and `.prettierrc` in `prettier-plugin-tailwindcss`'s README (especially given that it shows examples using both).\r\n\r\n(this is a duplicate of a [discussion I opened a few weeks ago](https://github.com/tailwindlabs/tailwindcss/discussions/11051) - didn't get any traction there, but if you'd rather move discussion back feel free to close this!)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11215","RelatedDescription":"Closed issue \"[Prettier Plugin] Incompatible with `@ianvs/prettier-plugin-sort-imports` when using `prettier.config.js`\" (#11215)"},{"Id":"1705882705","IsPullRequest":false,"CreatedAt":"2023-05-11T14:28:01","Actor":"uncaught","Number":"11213","RawContent":null,"Title":"Tailwind causes webpack to recompile for any file change","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ncreate-react-app 5.0.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\n18.15.0\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 20.04.6 under Window 10 WSL\r\n\r\n**Reproduction**\r\n\r\nFollow https://tailwindcss.com/docs/guides/create-react-app to the letter:\r\n\r\n```\r\nnpx create-react-app my-project\r\ncd my-project\r\nnpm install -D tailwindcss\r\nnpx tailwindcss init\r\nsed -i 's|content: \\[\\]|content: [\"./src/**/*.{js,jsx,ts,tsx}\"]|g' tailwind.config.js\r\nprintf \"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\" >> src/index.css\r\nnpm run start\r\n```\r\n\r\n**Describe your issue**\r\n\r\nWhen you save/touch/modify _any_ file inside `src` the webpack recompile triggers. It doesn't matter if the file matches the provided pattern or not. E.g. `touch src/x.x`.\r\n\r\nWithout tailwind, webpack does not trigger in this manner.\r\n\r\nUnfortunately this gets quite annoying when working on purely backend files in a larger project where the recompile takes some time and it shouldn't trigger at all.\r\n\r\nCould you change the watch system so that webpack isn't triggered if the files don't actually match the pattern? Or maybe integrate with webpack's file detection - there won't be any other files to include other than those webpack is bundling anyway, I guess.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11213","RelatedDescription":"Closed issue \"Tailwind causes webpack to recompile for any file change\" (#11213)"},{"Id":"1704640053","IsPullRequest":false,"CreatedAt":"2023-05-11T01:00:12","Actor":"federicocappellotto97","Number":"11206","RawContent":null,"Title":"Blog and docs difference for multi-config","State":"closed","Body":"[Here](https://tailwindcss.com/blog/tailwindcss-v3-2#multiple-config-files-in-one-project-using-config) the @config directive is on top of the file, but [here](https://tailwindcss.com/docs/functions-and-directives#config) it says you don't have to put @config before the imports","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11206","RelatedDescription":"Closed issue \"Blog and docs difference for multi-config\" (#11206)"},{"Id":"1704274084","IsPullRequest":true,"CreatedAt":"2023-05-10T17:44:03","Actor":"RobinMalfait","Number":"11205","RawContent":null,"Title":"Support `@import \"tailwindcss\"` using top-level `index.css` file","State":"closed","Body":"This PR adds an `index.css` file to the root of the package that contains the `@tailwind` directives for each of Tailwind's layers.\n\n```css\n/* node_modules/tailwindcss/index.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\nIf you have `postcss-import` configured in your project, this makes it possible to add Tailwind to your CSS using a simple `@import` instead of writing out the `@tailwind` directives yourself:\n\n```css\n@import \"tailwindcss\";\n```\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11205","RelatedDescription":"Closed or merged PR \"Support `@import \"tailwindcss\"` using top-level `index.css` file\" (#11205)"},{"Id":"1703076769","IsPullRequest":true,"CreatedAt":"2023-05-10T13:25:13","Actor":"Simon-He95","Number":"11202","RawContent":null,"Title":"refactor(corePlugins): borderColor","State":"closed","Body":"<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11202","RelatedDescription":"Closed or merged PR \"refactor(corePlugins): borderColor\" (#11202)"},{"Id":"1702887432","IsPullRequest":true,"CreatedAt":"2023-05-09T23:44:58","Actor":"depfu[bot]","Number":"11201","RawContent":null,"Title":"Update sass: 1.62.0 ‚Üí 1.62.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è sass (1.62.0 ‚Üí 1.62.1) ¬∑ [Repo](https://github.com/sass/dart-sass) ¬∑ [Changelog](https://github.com/sass/dart-sass/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/sass/dart-sass/releases/tag/1.62.1\">1.62.1</a></h4>\n\n<blockquote><p dir=\"auto\">To install Sass 1.62.1, download one of the packages below and <a href=\"https://katiek2.github.io/path-doc/\">add it to your PATH</a>, or see <a href=\"https://sass-lang.com/install\">the Sass website</a> for full installation instructions.</p>\n<h1 dir=\"auto\">Changes</h1>\n<ul dir=\"auto\">\n<li>Fix a bug where <code class=\"notranslate\">:has(+ &amp;)</code> and related constructs would drop the leading combinator.</li>\n</ul>\n<p dir=\"auto\">See the <a href=\"https://bounce.depfu.com/github.com/sass/dart-sass/blob/master/CHANGELOG.md#1621\">full changelog</a> for changes in earlier releases.</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/sass/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/sass/dart-sass/compare/c55235d166591e86ed342a1b5937b3d600e4d4de...8dddcb7b7db13984fea69fa85438acf30b56b4bb\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/sass/dart-sass/commit/8dddcb7b7db13984fea69fa85438acf30b56b4bb\"><code>Split SilentComment nodes on empty lines in SCSS (#1945)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/3091de542c78a6b30e99b47681399a1c9a551213\"><code>Fix :has(+ &amp;) (#1938)</code></a></li>\n</ul>\n</details>\n\n\n\n\n#### ‚ú≥Ô∏è cssnano (6.0.0 ‚Üí 6.0.1) ¬∑ [Repo](https://github.com/cssnano/cssnano) ¬∑ [Changelog](https://github.com/cssnano/cssnano/blob/master/packages/cssnano/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n\n<h4>6.0.1 (from changelog)</h4>\n<blockquote><h3 dir=\"auto\">\n<a href=\"#patch-changes\"></a>Patch Changes</h3>\n<ul dir=\"auto\">\n<li>chore: updage postcss-calc to version 9</li>\n<li>fix(postcss-merge-rules): do not merge nested rules</li>\n<li>Updated dependencies\n<ul dir=\"auto\">\n<li>cssnano-preset-default@6.0.1</li>\n</ul>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/cssnano/feedback\">Please let us know.</a></em></p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11201","RelatedDescription":"Closed or merged PR \"Update sass: 1.62.0 ‚Üí 1.62.1 (patch)\" (#11201)"},{"Id":"1702877184","IsPullRequest":true,"CreatedAt":"2023-05-09T23:24:20","Actor":"brandonmcconnell","Number":"11200","RawContent":null,"Title":"Extend preflight `html` styles to support other `:root, :host` scopes","State":"open","Body":"This PR simply replaces `html` with `:root, :host` to support all `:root` and `:host` contexts:\r\n\r\n* `:root` supports‚Ä¶\r\n  * `html` (same as plainly using `html`)\r\n  * SVG root scope\r\n* `:host` supports‚Ä¶\r\n  * ShadowDOM shadow root scope","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11200","RelatedDescription":"Open PR \"Extend preflight `html` styles to support other `:root, :host` scopes\" (#11200)"},{"Id":"1702663375","IsPullRequest":false,"CreatedAt":"2023-05-09T22:36:30","Actor":"ahosker","Number":"11195","RawContent":null,"Title":"Failed to load PostCSS config","State":"closed","Body":"**MISC**\r\nThis could be a bug(s) in Laravel Sail, Livewire or Tailwind CSS.\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nVite\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What operating system are you using?**\r\n\r\nUsing Laravel Sail on Ubuntu\r\n\r\n**Describe your issue**\r\n\r\nI installed ubuntu server.\r\nI updated ubuntu server.\r\nI used Laravel Sail Linux Guide ( https://laravel.com/docs/10.x )\r\nI installed Tall Stack ( https://tallstack.dev/ )\r\n\r\n```\r\n$ sail npm run dev\r\n\r\n> dev\r\n> vite\r\n\r\n\r\n  VITE v4.3.5  ready in 556 ms\r\n\r\n  ‚ûú  Local:   http://localhost:5173/\r\n  ‚ûú  Network: http://172.19.0.7:5173/\r\n  ‚ûú  press h to show help\r\n\r\n  LARAVEL v10.10.0  plugin v\r\n\r\n  ‚ûú  APP_URL: http://localhost\r\nnode:internal/process/promises:288\r\n            triggerUncaughtException(err, true /* fromPromise */);\r\n            ^\r\n\r\n[Failed to load PostCSS config: Failed to load PostCSS config (searchPath: /var/www/html): [Failed to load PostCSS config] Failed to load PostCSS config (searchPath: /var/www/html): [ReferenceError] module is not defined in ES module scope\r\nThis file is being treated as an ES module because it has a '.js' file extension and '/var/www/html/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\r\nReferenceError: module is not defined in ES module scope\r\nThis file is being treated as an ES module because it has a '.js' file extension and '/var/www/html/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\r\n    at file:///var/www/html/postcss.config.js:1:1\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:194:25)\r\n]\r\n\r\nNode.js v18.16.0\r\n```\r\n\r\nThe following command fixes the issue:\r\n\r\n`mv postcss.config.js postcss.config.cjs`\r\n\r\nThough this shouldn't be required? \r\n\r\nAfter that fix, running NPM run dev I get the error:\r\n```\r\n8:06:19 PM [vite] Internal server error: __dirname is not defined\r\n      at file:///var/www/html/node_modules/laravel-vite-plugin/dist/index.mjs:126:39\r\n      at call (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:49019:7)\r\n      at next (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:48963:5)\r\n      at file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:61287:17\r\n      at viteHtmlFallbackMiddleware (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:61367:16)\r\n      at call (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:49019:7)\r\n      at next (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:48963:5)\r\n      at viteServeStaticMiddleware (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:46030:20)\r\n      at call (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:49019:7)\r\n      at next (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:48963:5)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11195","RelatedDescription":"Closed issue \"Failed to load PostCSS config\" (#11195)"},{"Id":"1701908788","IsPullRequest":false,"CreatedAt":"2023-05-09T12:46:06","Actor":"ethernalarts","Number":"11191","RawContent":null,"Title":"Tailwind CSS not working well with django-weasyprint","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/11187\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ethernalarts** May  9, 2023</sup>\r\nHello.\r\n\r\nI am working on a django app using Tailwind CSS at the frontend. When outputing an HTML template as a PDF file using django-weasy print, Tailwind CSS stylesheet isn't applied and it looks bland, disorderly and ugly. The error log file showed a lot of \"ignored\" and \"invalid\" errors. Please has anyone come across this problem, and any ideas how to solve this? Thanks.\r\n\r\nAttached is a copy of the weasyprint log file.\r\n\r\n[weasyprint.log](https://github.com/tailwindlabs/tailwindcss/files/11429816/weasyprint.log)\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11191","RelatedDescription":"Closed issue \"Tailwind CSS not working well with django-weasyprint\" (#11191)"},{"Id":"1701908690","IsPullRequest":false,"CreatedAt":"2023-05-09T12:45:55","Actor":"ethernalarts","Number":"11190","RawContent":null,"Title":"Tailwind CSS not working well with django-weasyprint","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/11187\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ethernalarts** May  9, 2023</sup>\r\nHello.\r\n\r\nI am working on a django app using Tailwind CSS at the frontend. When outputing an HTML template as a PDF file using django-weasy print, Tailwind CSS stylesheet isn't applied and it looks bland, disorderly and ugly. The error log file showed a lot of \"ignored\" and \"invalid\" errors. Please has anyone come across this problem, and any ideas how to solve this? Thanks.\r\n\r\nAttached is a copy of the weasyprint log file.\r\n\r\n[weasyprint.log](https://github.com/tailwindlabs/tailwindcss/files/11429816/weasyprint.log)\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11190","RelatedDescription":"Closed issue \"Tailwind CSS not working well with django-weasyprint\" (#11190)"},{"Id":"1699498020","IsPullRequest":false,"CreatedAt":"2023-05-08T07:33:34","Actor":"benface","Number":"11178","RawContent":null,"Title":"`bg-[repeating-conic-gradient(...)]` generates a `background-color` declaration instead of `background-image`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nJust the CLI.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.0.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/n33mDmU8bq\r\n\r\nLook at the \"Generated CSS\":\r\n\r\n<img width=\"702\" alt=\"CleanShot 2023-05-08 at 00 30 42@2x\" src=\"https://user-images.githubusercontent.com/1059139/236734266-210b75b4-9a67-4b6e-96e5-fc735e28c83b.png\">\r\n\r\n**Describe your issue**\r\n\r\nI would expect the generated CSS rule to be:\r\n\r\n```css\r\n.bg-\\[repeating-conic-gradient\\(\\#F8F9FA_0\\%_25\\%\\2c _white_0\\%_50\\%\\)\\] {\r\n  background-image: repeating-conic-gradient(#F8F9FA 0% 25%, white 0% 50%);\r\n}\r\n```\r\n\r\nJust like it works with `bg-[conic-gradient(...)]`. Thank you!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11178","RelatedDescription":"Closed issue \"`bg-[repeating-conic-gradient(...)]` generates a `background-color` declaration instead of `background-image`\" (#11178)"},{"Id":"1699694932","IsPullRequest":true,"CreatedAt":"2023-05-08T07:32:58","Actor":"RobinMalfait","Number":"11180","RawContent":null,"Title":"Ensure `repeating-conic-gradient` is detected as an image","State":"closed","Body":"This PR improves the type detection for `repeating-conic-gradient`, it used to fallback to\n`background-color` but similar to `repeating-linear-gradient` this is actually a `background-image`.\n\nFixes: #11178\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11180","RelatedDescription":"Closed or merged PR \"Ensure `repeating-conic-gradient` is detected as an image\" (#11180)"},{"Id":"1699404626","IsPullRequest":false,"CreatedAt":"2023-05-08T03:15:26","Actor":"Godsex","Number":"11177","RawContent":null,"Title":"The two versions have the same class but behave differently","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nV3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nAngular14.1.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nV16.16.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/7aef44vzB0\r\nhttps://play.tailwindcss.com/jIaPV6P7ZS\r\n\r\n**Describe your issue**\r\nThe two versions have the same class but behave differently\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11177","RelatedDescription":"Closed issue \"The two versions have the same class but behave differently\" (#11177)"},{"Id":"1698980825","IsPullRequest":true,"CreatedAt":"2023-05-07T09:45:17","Actor":"depfu[bot]","Number":"11174","RawContent":null,"Title":"Update cssnano: 6.0.0 ‚Üí 6.0.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è postcss-selector-parser (6.0.11 ‚Üí 6.0.12) ¬∑ [Repo](https://github.com/postcss/postcss-selector-parser) ¬∑ [Changelog](https://github.com/postcss/postcss-selector-parser/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss-selector-parser/releases/tag/v6.0.12\">6.0.12</a></h4>\n\n<blockquote><h1 dir=\"auto\">6.0.12</h1>\n<ul dir=\"auto\">\n<li>Fixed: <code class=\"notranslate\">clone</code> arguments should be optional</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss-selector-parser/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss-selector-parser/compare/e6b4029387572dce965345f6de00b5e3bf666bc9...66b51528c1a74f98c387e767c5564ace2a8d271f\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/66b51528c1a74f98c387e767c5564ace2a8d271f\"><code>chore(release): 6.0.12</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/63b463e075ddeb4e1670de5635f1f2fb23b303e2\"><code>fix(types): clone (#276)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/6d3bd5728a787127021ab82e874c2e6bc582a5dd\"><code>chore(deps): bump json5 from 2.2.1 to 2.2.3 (#274)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/fe807ad92fe0091d81c55866bdb9a1ed2726801b\"><code>chore: update dependencies (#268)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11174","RelatedDescription":"Closed or merged PR \"Update cssnano: 6.0.0 ‚Üí 6.0.1 (patch)\" (#11174)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-20T03:30:26.4274743Z","RunDurationInMilliseconds":552}