{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2904283974","IsPullRequest":false,"CreatedAt":"2025-03-08T01:15:09","Actor":"Kinqdos","Number":"17052","RawContent":null,"Title":"Upgrade lightningcss to v1.29.2 to fix bun musl compatibility","State":"open","Body":"**Describe your issue**\n\nI would suggest to upgrade lightningcss to v1.29.2, which includes the fix when using bun on musl architecture with tailwind. \nSee parcel-bundler/lightningcss#923 and oven-sh/bun#17626 for more information.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17052","RelatedDescription":"Open issue \"Upgrade lightningcss to v1.29.2 to fix bun musl compatibility\" (#17052)"},{"Id":"2903713877","IsPullRequest":false,"CreatedAt":"2025-03-07T21:32:16","Actor":"Fustrate","Number":"17050","RawContent":null,"Title":"[v4.0.12] Most classes in HAML files aren't being detected","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv23.9.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS 15.3.1\n\n**Reproduction URL**\n\nhttps://github.com/Fustrate/tailwind-4.0.12-haml\n\n**Describe your issue**\n\nSince 4.0.10, classes in HAML files haven't been detected properly. Out of 19 tailwind class names in the HAML file, only 6 seem to be detected:\n\n<img width=\"647\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9eb56f8d-0f89-4ae4-8a6b-8a706e258ea5\" />\n\nI believe this is along the same lines as #16998 and #16975","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17050","RelatedDescription":"Closed issue \"[v4.0.12] Most classes in HAML files aren't being detected\" (#17050)"},{"Id":"2903926344","IsPullRequest":true,"CreatedAt":"2025-03-07T21:32:15","Actor":"RobinMalfait","Number":"17051","RawContent":null,"Title":"Add Haml pre processor","State":"closed","Body":"This PR ensures we extract candidates from Haml files.\n\nFixes: #17050\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17051","RelatedDescription":"Closed or merged PR \"Add Haml pre processor\" (#17051)"},{"Id":"2903119676","IsPullRequest":false,"CreatedAt":"2025-03-07T16:31:51","Actor":"kefranabg","Number":"17042","RawContent":null,"Title":"@variant inside @keyframes generates wrong css","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.2.0 + tailwindcss vite plugin\n\n**What version of Node.js are you using?**\n\nv23.0.0\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Describe your issue**\n\nThe following\n\n```\n@keyframes bgHighlightFade {\n\t0% {\n\t\tbackground-color: var(--color-amber-200);\n\t\t@variant dark {\n\t\t\tbackground-color: var(--color-amber-500);\n\t\t}\n\t}\n\t100% {\n\t\tbackground-color: transparent;\n\t}\n}\n```\n\ngenerates this CSS when building with vite:\n\n```\n@keyframes bgHighlightFade {\n  to {\n   background-color:#0000\n  }\n}\n```\n\nExpected result is below (works properly in dev mode):\n\n```\n@keyframes bgHighlightFade {\n    0% {\n      background-color: var(--color-amber-200);\n      &:is(.dark *) {\n        background-color: var(--color-amber-500);\n      }\n    }\n    100% {\n      background-color: transparent;\n    }\n  }\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17042","RelatedDescription":"Closed issue \"@variant inside @keyframes generates wrong css\" (#17042)"},{"Id":"2903374874","IsPullRequest":false,"CreatedAt":"2025-03-07T15:59:55","Actor":"DarthGigi","Number":"17047","RawContent":null,"Title":"[v4] Tailwind CSS misinterprets custom text-shadow plugin as text size","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSvelteKit 2.18.0\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/DarthGigi/tailwind-v4-text-shadow-mvce\n\n**Describe your issue**\n\nUsing a custom plugin to add text shadows causes tailwindcss to override the text size property, thinking `text-shadow` is a text size utility while it's not.\n\n![Image](https://github.com/user-attachments/assets/f801dd51-1a98-4b38-8395-e79ac078e17c)\n\nThis worked fine in v4.0.5 last time I checked, I'm not sure which release introduced this behavior.\n\n<details><summary>Plugin code</summary>\n\n```ts\nimport plugin from \"tailwindcss/plugin\";\n\nconst textShadowPlugin = plugin(function ({ matchUtilities, theme }) {\n  matchUtilities(\n    {\n      \"text-shadow\": (value) => ({\n        textShadow: value\n      })\n    },\n    { values: theme(\"textShadow\") }\n  );\n});\n\nexport default textShadowPlugin;\n```\n</details> \n\n<details><summary>app.css</summary>\n\n```pcss\n@import 'tailwindcss';\n@plugin \"./plugins/text-shadow.ts\";\n\n@theme {\n\t/* Text Shadow */\n\t--text-shadow-sm: 0 0px 2px var(--tw-shadow-color);\n\t--text-shadow: 0 0px 4px var(--tw-shadow-color);\n\t--text-shadow-lg: 0 0px 8px var(--tw-shadow-color);\n\t--tw-shadow-color: --alpha(oklch(0 0 0) / 50%);\n}\n```\n</details> ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17047","RelatedDescription":"Open issue \"[v4] Tailwind CSS misinterprets custom text-shadow plugin as text size\" (#17047)"},{"Id":"2903295265","IsPullRequest":false,"CreatedAt":"2025-03-07T15:24:26","Actor":"abhishekkumar35","Number":"17046","RawContent":null,"Title":"Fix : Error with lightningcss when using Tailwind CSS v4 with Next.js 15.2.1 and Node.js 20.18.3","State":"open","Body":"**Getting Error with lightningcss when using Tailwind CSS v4 with Next.js 15.2.1 and Node.js 20.18.3 using create-next-app@latest . --use-pnpm**\n\n**version of Tailwind CSS**\n\nv4.0.12 (via @tailwindcss/postcss)\n\n**build tool framework**\n\nNext.js 15.2.1 with Turbopack\n\n**version of Node.js**\n\nv20.18.3\n\n**browser**\n\nN/A (Build error)\n\n** operating system **\n\nWindows 10\n\n**Repo URL**\nhttps://github.com/abhishekkumar35/blogcodeabode\nalso attached terminal messages in a saparate md file name terminalmessage.md(can be found in repo)\n\n1. Create a new Next.js project with Tailwind CSS:\n   ```\n   npx create-next-app@latest blogcodeabode --use-pnpm\n   ```\n   (Select Yes for Tailwind CSS, TypeScript, ESLint, App Router, and Turbopack)\n2. Run the development server:\n   ```\n   pnpm dev\n   ```\n\n**Describe your issue**\n\nWhen running a Next.js 15.2.1 application with Tailwind CSS v4, I'm getting the following error related to lightningcss:\n\n```\nтип ./app/globals.css\n- D:\\codebase\\blogcodeabode\\node_modules\\.pnpm\\lightningcss@1.29.2\\node_modules\\lightningcss\\node\\index.js\n- D:\\codebase\\blogcodeabode\\node_modules\\.pnpm\\@tailwindcss+postcss@4.0.12\\node_modules\\@tailwindcss\\postcss\\dist\\index.js\n- D:\\codebase\\blogcodeabode\\.next\\build\\chunks\\[turbopack]_runtime.js\n- D:\\codebase\\blogcodeabode\\.next\\transform.js\n    [at Module._resolveFilename (node:internal/modules/cjs/loader:1225:15)]\n    [at Module._load (node:internal/modules/cjs/loader:1051:27)]\n    [at Module.require (node:internal/modules/cjs/loader:1311:19)]\n    [at require (node:internal/modules/helpers:179:18)]\n    [at Object.<anonymous> (D:\\codebase\\blogcodeabode\\node_modules\\.pnpm\\lightningcss@1.29.2\\node_modules\\lightningcss\\node\\index.js:22:22)]\n    [at Module._compile (node:internal/modules/cjs/loader:1469:14)]\n    [at Module._extensions..js (node:internal/modules/cjs/loader:1548:10)]\n    [at Module.load (node:internal/modules/cjs/loader:1288:32)]\n    [at Module._load (node:internal/modules/cjs/loader:1104:12)]\n    [at Module.require (node:internal/modules/cjs/loader:1311:19)]\n```\n\nThe application fails to compile CSS and returns a 500 error. This appears to be an issue with the lightningcss dependency that Tailwind CSS v4 uses.\n\nMy package.json dependencies:\n```json\n{\n  \"dependencies\": {\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"next\": \"15.2.1\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"^5\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"@tailwindcss/postcss\": \"^4\",\n    \"tailwindcss\": \"^4\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.2.1\",\n    \"@eslint/eslintrc\": \"^3\"\n  }\n}\n```\n\nthe application is expected to compile and run without errors. \n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17046","RelatedDescription":"Open issue \"Fix : Error with lightningcss when using Tailwind CSS v4 with Next.js 15.2.1 and Node.js 20.18.3\" (#17046)"},{"Id":"2903270774","IsPullRequest":false,"CreatedAt":"2025-03-07T15:14:48","Actor":"weristwiegott","Number":"17045","RawContent":null,"Title":"[v4] Tailwind v4 colors not working on older iOS versions","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 11.0.0, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\niOS\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17045","RelatedDescription":"Open issue \"[v4] Tailwind v4 colors not working on older iOS versions\" (#17045)"},{"Id":"2903176328","IsPullRequest":true,"CreatedAt":"2025-03-07T14:39:06","Actor":"philipp-spiess","Number":"17043","RawContent":null,"Title":"Upgrade lightningcss","State":"open","Body":"Part of #15897","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17043","RelatedDescription":"Open PR \"Upgrade lightningcss\" (#17043)"},{"Id":"2903039146","IsPullRequest":false,"CreatedAt":"2025-03-07T14:29:14","Actor":"dontic","Number":"17041","RawContent":null,"Title":"dark: hover: and other states not working as expected","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro (Vite)\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nEdge (Chromium) and Firefox\n\n**What operating system are you using?**\n\nUbuntu\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/devbox/sx3tyj\n\n**Describe your issue**\n\n`hover:`, `dark:` or other states don't work and have no effect.\n\nI just span up an astro 5.4.2 project with the latest tailwind version.\n\nFollowed the installation instructions here: https://docs.astro.build/en/guides/styling/#tailwind\n\nI thought there was something wrong with my code but then I checked your docs: https://tailwindcss.com/docs/hover-focus-and-other-states and the `hover:` example button is not working either there. Tried with both edge and Firefox from different devices.\n\n`active:` does work in violet button example the docs: https://docs.astro.build/en/guides/styling/#tailwind, it seems to be `hover:` and `dark:` not working.\n\nEdit:\n\nTried downgrading to tailwindcss@4.0.4 (which I have running on another project and know it works) and it also does not work, which might point to the issue being from either Astro or elsewhere(?)\n\nEdit 2:\n\nDowngrading astro and tailwind does not seem to work.\n\nI just span up another project using node 20, astro 5.3.0 and tailwindcss 4.0.6 and that works, so I'm also ruling out something wrong with my browsers/devices.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17041","RelatedDescription":"Closed issue \"dark: hover: and other states not working as expected\" (#17041)"},{"Id":"2902879038","IsPullRequest":true,"CreatedAt":"2025-03-07T12:26:37","Actor":"philipp-spiess","Number":"17036","RawContent":null,"Title":"Make `--theme(тАж)` return CSS variables","State":"open","Body":"Closes #16904\r\n\r\nThis PR changes the `--theme(тАж)` function now return CSS `var(тАж)` definitions unless used in places where `var(тАж)` is not valid CSS (e.g. in `@media (width >= theme(--breakpoint-md))`):\r\n\r\n```css\r\n/* input */\r\n@theme {\r\n  --color-red: red;\r\n}\r\n.red {\r\n  color: --theme(--color-red);\r\n}\r\n\r\n/* output */\r\n:root, :host {\r\n  --color-red: red;\r\n}\r\n.red {\r\n  color: var(--color-red);\r\n}\r\n```\r\n\r\nFurthermore, this adds an `--theme(тАж inline)` option to the `--theme(тАж)` function to force the resolution to be inline, e.g.:\r\n\r\n```css\r\n/* input */\r\n@theme {\r\n  --color-red: red;\r\n}\r\n.red {\r\n  color: --theme(--color-red);\r\n}\r\n\r\n/* output */\r\n.red {\r\n  color: red;\r\n}\r\n```\r\n\r\nThis PR also changes preflight and the default theme to use this new `--theme(тАж)` function to ensure variables are prefixed correctly.\r\n\r\n## Test plan\r\n\r\n- Added unit tests and a test that pulls in the whole preflight under a prefix theme.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17036","RelatedDescription":"Open PR \"Make `--theme(тАж)` return CSS variables\" (#17036)"},{"Id":"2902825194","IsPullRequest":false,"CreatedAt":"2025-03-07T12:03:33","Actor":"RaBic","Number":"17035","RawContent":null,"Title":"@tailwindcss/vite fails handling image-set() notations","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\nI'm currently using v4.0.11 as a Vite plugin with Node v22.14.0.\n\nwhen using image-set() CSS functional notations in a css file and processing them with the tailwind vite plugin,\n\n```css\nbackground-image: image-set(\n  url(\"@/assets/image1.avif\") 1x,\n  url(\"@/assets/image2.avif\") 2x,\n);\n```\n\nbecomes\n\n```css\nbackground-image:image-set(url(/assets/image1-xxx.avif) 1x,url(2x))\n```\n\nI've made a little repo for reproduction purposes:\n[RaBic/tw4-imageset-bug](https://github.com/RaBic/tw4-imageset-bug)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17035","RelatedDescription":"Open issue \"@tailwindcss/vite fails handling image-set() notations\" (#17035)"},{"Id":"2902743035","IsPullRequest":true,"CreatedAt":"2025-03-07T11:38:53","Actor":"RobinMalfait","Number":"17033","RawContent":null,"Title":"Prepare v4.0.12 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17033","RelatedDescription":"Closed or merged PR \"Prepare v4.0.12 release\" (#17033)"},{"Id":"2902626951","IsPullRequest":false,"CreatedAt":"2025-03-07T11:19:02","Actor":"RobinMalfait","Number":"17023","RawContent":null,"Title":"Extractor issues in Livewire Flux","State":"closed","Body":"\n@RobinMalfait hey we are having an issue with Livewire Flux since Tailwind v4.0.10 and I suspect it might be related to this PR. I tried compiling Tailwind locally to see if I could bisect exactly what PR/ commit is causing it, but I'm not smart enough to get it all running in a local repo ЁЯШЖ so this PR is my best guess at what's causing the issue.\n\nThe problem we are having is we have a blade component for the sidebar `<flux:sidebar />` and it looks something like this (simplified)\n\n```blade\n@php\nif ($sidebarIsStashable) {\n    $attributes = $attributes->merge([\n        'x-init' => '$el.classList.add(\\'-translate-x-full\\'); $el.classList.add(\\'transition-transform\\')',\n    ]);\n}\n@endphp\n\n<div x-data {{ $attributes->class('border-r w-64 p-4 min-h-dvh max-h-dvh top-0 fixed left-0') }}>\n    {{ $slot }}\n</div>\n```\n\nSince the changes in Tailwind v4.0.10, the styles `-translate-x-full` and `transition-transform` which are inside the conditionally added `x-init` are not being compiled by Tailwind and our sidebar is not being hidden.\n\nIf I add those classes in another file though (or somewhere else in this file), they get compiled correctly and our sidebar is being hidden as expected.\n\nI also experimented removing the backslashes from before the single quotes and everything works and compiles as expected.\n\n```php\n'x-init' => \"\\$el.classList.add('-translate-x-full'); \\$el.classList.add('transition-transform')\",\n```\n\nWould you have any thoughts as to what might be causing that? It's causing issues because the new Laravel Livewire starter kit is using Flux and people's sidebars aren't hiding ЁЯШЕ\n\nThanks in advance!\n\n_Originally posted by @joshhanley in https://github.com/tailwindlabs/tailwindcss/issues/16306#issuecomment-2706072709_\n            ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17023","RelatedDescription":"Closed issue \"Extractor issues in Livewire Flux\" (#17023)"},{"Id":"2902722020","IsPullRequest":true,"CreatedAt":"2025-03-07T11:19:01","Actor":"RobinMalfait","Number":"17031","RawContent":null,"Title":"Ensure extracting candidates from JS embedded in a PHP string works as expected","State":"closed","Body":"This PR fixes an issue where candidates are not properly extractor when they end in `\\`. This can happen if you embed a programming language like JS inside another language like PHP where you need to escape some strings.\r\n\r\nHere is an example of Livewire flux:\r\n```blade\r\n@php\r\nif ($sidebarIsStashable) {\r\n    $attributes = $attributes->merge([\r\n        'x-init' => '$el.classList.add(\\'-translate-x-full\\'); $el.classList.add(\\'transition-transform\\')',\r\n        //                                                ^                                            ^\r\n    ]);\r\n}\r\n@endphp\r\n\r\n<div x-data {{ $attributes->class('border-r w-64 p-4 min-h-dvh max-h-dvh top-0 fixed left-0') }}>\r\n    {{ $slot }}\r\n</div>\r\n```\r\nWhere the `\\'` is causing some issues.\r\n\r\nAnother solution might be to add a custom pre processor for blade files where we drop the escaped characters, but that felt overkill for now because some escapes are still valid.\r\n\r\nFixes: #17023\r\n\r\n# Test plan\r\n\r\n1. Added a test to cover this case.\r\n2. Existing tests still pass\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17031","RelatedDescription":"Closed or merged PR \"Ensure extracting candidates from JS embedded in a PHP string works as expected\" (#17031)"},{"Id":"2902717766","IsPullRequest":false,"CreatedAt":"2025-03-07T11:15:58","Actor":"joe223","Number":"17030","RawContent":null,"Title":"Cannot apply unknown utility class: md:min-w-0 in NodeJS API call","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.11\n\n**What version of Node.js are you using?**\n\nv18.18.2\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\n```ts\n    test('string class', async () => {\n        expect(\n            await compileCss(css`\n                @tailwind utilities;\n\n                .root {\n                    @apply flex md:min-w-0 flex-row flex-wrap;\n                }\n            `)\n        ).toEqual(css`\".root {\n            display: flex;\n            min-width: 0px;\n            flex-direction: row;\n            flex-wrap: wrap;\n        }\"`)\n    })\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17030","RelatedDescription":"Closed issue \"Cannot apply unknown utility class: md:min-w-0 in NodeJS API call\" (#17030)"},{"Id":"2902624549","IsPullRequest":false,"CreatedAt":"2025-03-07T11:02:08","Actor":"RobinMalfait","Number":"17022","RawContent":null,"Title":"Content transform in css config","State":"closed","Body":"\n### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/15742\n\n<div type='discussions-op-text'>\n\n<sup>Originally posted by **skttl** January 23, 2025</sup>\nTo make the default syntax for container queries work, I've added this in my v3 config:\r\n\r\n```js\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n  content: {\r\n    files: [\r\n      // these are relative to package.json\r\n      './UI/Scripts/**/*.js',\r\n      './Views/**/*.cshtml'\r\n    ],\r\n    transform: {\r\n      cshtml: (content) => {\r\n        return content.replace('@@', '@');\r\n      }\r\n    }\r\n  },\r\n```\r\n\r\nThis replaces `@@` with `@` before looking for classnames, making me able to write eg. `@@sm:text-red-500` instead of `@sm:text-red-500`. The latter would interpret @sm as a razor variable.\r\n\r\nIs it possible to do something similar in the new css config format?</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17022","RelatedDescription":"Closed issue \"Content transform in css config\" (#17022)"},{"Id":"2902641134","IsPullRequest":true,"CreatedAt":"2025-03-07T11:02:07","Actor":"RobinMalfait","Number":"17027","RawContent":null,"Title":"Add `razor`/`cshtml` pre processing","State":"closed","Body":"This PR fixes an issue in Razor template files where `@sm:flex` doesn't work and `@@sm:flex` is required.\n\nIn Tailwind CSS v3, some people used a custom transform to replace `@@` with just `@`. But in Tailwind CSS v4 we don't have this.\n\nHowever, we can add a pre processor for `.cshtml` and `.razor` files.\n\nFixes: #17022\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17027","RelatedDescription":"Closed or merged PR \"Add `razor`/`cshtml` pre processing\" (#17027)"},{"Id":"2901850272","IsPullRequest":true,"CreatedAt":"2025-03-07T11:00:44","Actor":"depfu[bot]","Number":"17010","RawContent":null,"Title":"Update h3 1.15.0 тЖТ 1.15.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### тЬ│я╕П h3 (1.15.0 тЖТ 1.15.1) ┬╖ [Repo](https://github.com/unjs/h3) ┬╖ [Changelog](https://github.com/unjs/h3/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/unjs/h3/releases/tag/v1.15.1\">1.15.1</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/h3/compare/v1.15.0...v1.15.1\">compare changes</a></p>\n<h3 dir=\"auto\">ЁЯй╣ Fixes</h3>\n<ul dir=\"auto\">\n<li>\n<strong>setCookie:</strong> Properly merge and dedup <code class=\"notranslate\">set-cookie</code> header (<a href=\"https://bounce.depfu.com/github.com/unjs/h3/pull/981\">#981</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/h3/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/unjs/h3/compare/da29b022ada78957fa7c47203c1d15249331d094...89265ec4cc37f65f5bf903c2b993fde3e6e69048\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/unjs/h3/commit/89265ec4cc37f65f5bf903c2b993fde3e6e69048\"><code>chore(release): v1.15.1</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/d1c00fcb4f4ed5132dff6b1d8b7dcae29ca3a8f3\"><code>fix(setCookie): properly merge and dedup `set-cookie` header (#981)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@тАЛdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@тАЛdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@тАЛdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@тАЛdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@тАЛdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@тАЛdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@тАЛdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@тАЛdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@тАЛdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17010","RelatedDescription":"Closed or merged PR \"Update h3 1.15.0 тЖТ 1.15.1 (patch)\" (#17010)"},{"Id":"2902652849","IsPullRequest":false,"CreatedAt":"2025-03-07T10:45:30","Actor":"first-andy","Number":"17028","RawContent":null,"Title":"Tailwind not applying classes NextJS 14 | Tailwind v4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 14.0.2,\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.1\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nSince we upgraded to tailwind v4, our classes stopped working.\nTailwind loads in fine but classes are not applied.. \n\nWe use the following postcss.config.mjs file:\n\n```mjs\n/** @type {import('tailwindcss').Config} */\nexport default {\n  plugins: {\n    '@tailwindcss/postcss': {}\n  }\n}\n```\nThis is our stylesheet:\n\n```css\n@import 'tailwindcss';\n\n@theme {\n  --breakpoint-sm: 640px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 1024px;\n  --breakpoint-xl: 1280px;\n  --breakpoint-2xl: 1362px;\n\n  --font-head: 'pf-fuel-grime', sans-serif;\n  --font-campaign: 'pf-fuel-decay', sans-serif;\n\n  --color-red-50: #fff0f2;\n  --color-red-100: #ffe1e5;\n  --color-red-200: #ffc8d1;\n  --color-red-300: #ff9bac;\n  --color-red-400: #ff6282;\n  --color-red-500: #ff2c5a;\n  --color-red-600: #eb0844;\n  --color-red-700: #d0003c;\n  --color-red-800: #ae033a;\n  --color-red-900: #940738;\n  --color-red-950: #53001a;\n\n  --color-yellow-50: #fcfcea;\n  --color-yellow-100: #f7f9c8;\n  --color-yellow-200: #f3f494;\n  --color-yellow-300: #eee856;\n  --color-yellow-400: #e8da35;\n  --color-yellow-500: #d7c01b;\n  --color-yellow-600: #b99815;\n  --color-yellow-700: #947014;\n  --color-yellow-800: #7b5818;\n  --color-yellow-900: #69491a;\n  --color-yellow-950: #3d270b;\n\n  --color-blue-50: #effefc;\n  --color-blue-100: #c8fff8;\n  --color-blue-200: #91fef4;\n  --color-blue-300: #52f6ec;\n  --color-blue-400: #30e4df;\n  --color-blue-500: #06c6c4;\n  --color-blue-600: #029e9f;\n  --color-blue-700: #067d7f;\n  --color-blue-800: #0b6064;\n  --color-blue-900: #0e5153;\n  --color-blue-950: #003033;\n\n  --color-brown-100: #fbf5f2;\n  --color-brown-500: #decbc0;\n  --color-brown-700: #4c4444;\n  --color-brown-950: #170202;\n\n  /* TODO: Need to adjust these vars later on in the project timeline */\n  --color-header: #decbc0;\n\n  /* BORDER RADIUS */\n  --radius-card: 8px;\n  --radius-button: 8px;\n  --radius-header: 12px;\n  --radius-search-input: 12px;\n  --radius-section: 12px;\n  --radius-footer: 12px;\n  --radius-header: 12px;\n\n  /* WIDTHS */\n  --spacing-search-content: 820px;\n\n  /* SHADOWS */\n  --shadow-2xs: 0 0 2px 0 rgb(0 0 0 / 0.05);\n  --shadow-xs: 0 0 2px 0 rgb(0 0 0 / 0.05);\n  --shadow-sm: 0 0 3px 0 rgb(0 0 0 / 0.1), 0 0 2px -1px rgb(0 0 0 / 0.1);\n  --shadow-md: 0 0 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --shadow-lg: 0 0 15px -3px rgb(0 0 0 / 0.1), 0 0 6px -4px rgb(0 0 0 / 0.1);\n  --shadow-xl: 0 0 25px -5px rgb(0 0 0 / 0.1), 0 0 10px -6px rgb(0 0 0 / 0.1);\n  --shadow-2xl: 0 0 50px -12px rgb(0 0 0 / 0.25);\n  --inset-shadow-2xs: inset 0 1px rgb(0 0 0 / 0.05);\n  --inset-shadow-xs: inset 0 1px 1px rgb(0 0 0 / 0.05);\n  --inset-shadow-sm: inset 0 2px 4px rgb(0 0 0 / 0.05);\n  --drop-shadow-xs: 0 0 1px rgb(0 0 0 / 0.05);\n  --drop-shadow-sm: 0 0 2px rgb(0 0 0 / 0.15);\n  --drop-shadow-md: 0 0 3px rgb(0 0 0 / 0.12);\n  --drop-shadow-lg: 0 0 4px rgb(0 0 0 / 0.15);\n  --drop-shadow-xl: 0 0 7px rgb(0 0 0 / 0.1);\n  --drop-shadow-2xl: 0 0 25px rgb(0 0 0 / 0.15);\n}\n\n@theme inline {\n  --font-body: --var(font-body);\n}\n\n@layer base {\n  html,\n  body {\n    @apply font-body flex h-auto min-h-screen flex-col;\n  }\n\n  body {\n    @apply pt-9;\n  }\n\n  main {\n    @apply flex-1;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    @apply font-semibold;\n  }\n\n  h1 {\n    @apply text-[32px];\n  }\n\n  h2 {\n    @apply h2;\n  }\n\n  h3 {\n    @apply text-xl font-medium leading-tight;\n  }\n\n  p {\n    @apply text-lg leading-normal;\n  }\n\n  a {\n    @apply font-light;\n  }\n\n  .prose-content ul {\n    @apply list-disc pl-4;\n  }\n\n  button:not(:disabled),\n  [role='button']:not(:disabled) {\n    cursor: pointer;\n  }\n\n  @media print {\n    .no-print {\n      display: none;\n    }\n  }\n}\n\n@layer components {\n  .content-block {\n    h2 {\n      @apply mb-3;\n    }\n  }\n\n  .video-container {\n    @apply relative w-full pt-[56.25%];\n\n    > div:first-child {\n      @apply absolute left-0 top-0 !h-full !w-full;\n    }\n  }\n}\n\n@utility container {\n  @apply mx-auto px-4;\n}\n\n@utility breakout {\n  @apply mx-auto w-full max-w-[1656px] px-8;\n}\n\n@utility h1 {\n  @apply text-[32px];\n}\n\n@utility h2 {\n  @apply text-2xl leading-tight xl:text-2xl;\n}\n\n@utility justify-self-anchor {\n  justify-self: anchor-center;\n}\n\n```\n\n/app/layout.jsx\n\n```jsx\nimport ReactDom from 'react-dom'\nimport NextTopLoader from 'nextjs-toploader'\nimport { Archivo } from 'next/font/google'\n\nimport Header from '../components/layout/Header'\nimport Footer from '../components/layout/Footer'\nimport { metadataObject } from '../helpers/metadata'\nimport AuthPopup from 'components/auth/AuthPopup'\nimport ToTop from 'components/common/ToTop'\nimport PageGradient from 'components/common/PageGradient'\nimport '../styles/main.css'\n\nexport const metadata = {\n  ...metadataObject\n}\n\nexport const viewport = {\n  themeColor: '#000000'\n}\n\nconst topLoaderConfig = {\n  color: '#eb0844',\n  duration: 0.3,\n  showSpinner: false\n}\n\nexport const revalidate = 0\n\nconst archivo = Archivo({\n  subsets: ['latin'],\n  display: 'swap',\n  variable: '--font-body'\n})\n\nReactDom.preload('https://use.typekit.net/mkm6duc.css', { as: 'style' })\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"nl-NL\" className={archivo.className}>\n      <head>\n        <link rel=\"stylesheet\" href=\"https://use.typekit.net/mkm6duc.css\" />\n      </head>\n      <body>\n        <NextTopLoader {...topLoaderConfig} />\n        <PageGradient />\n        <Header />\n        <AuthPopup />\n        <ToTop />\n        <main>{children}</main>\n        <Footer />\n      </body>\n    </html>\n  )\n}\n\n```\n\nAre we missing something here?? or is nextjs14 not compatible with tailwind v4?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17028","RelatedDescription":"Closed issue \"Tailwind not applying classes NextJS 14 | Tailwind v4\" (#17028)"},{"Id":"2901801477","IsPullRequest":false,"CreatedAt":"2025-03-07T10:38:25","Actor":"qjmiao","Number":"17007","RawContent":null,"Title":"@tailwindcss/vite revisions after 4.0.7 are not working with svelte files under viteconfig.resolve.alias","State":"closed","Body":"\n@tailwindcss/vite revisions after 4.0.7 are not working with svelte files under viteconfig.resolve.alias.\n\nIt seems css classes are not generated for svelte files under dir defined in viteconfig.resolve.aliasуАВ\n\n\nBut @tailwindcss/vite@4.0.7 works","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17007","RelatedDescription":"Closed issue \"@tailwindcss/vite revisions after 4.0.7 are not working with svelte files under viteconfig.resolve.alias\" (#17007)"},{"Id":"2901843513","IsPullRequest":false,"CreatedAt":"2025-03-07T10:37:16","Actor":"Nicholas003","Number":"17009","RawContent":null,"Title":"The packaging result of the Vite library mode is the css of the entire project","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n\"@tailwindcss/postcss\": \"^4.0.9\",\n\"@tailwindcss/vite\": \"^4.0.9\",\n\"postcss\": \"^8.5.3\",\n\"tailwindcss\": \"^4.0.9\",\n \"vite\": \"^6.1.0\",\n\n**What version of Node.js are you using?**\n\nv20.18.3\n\n**What browser are you using?**\n\n Chrome, Safari\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nI am using the Vite Library Mode to package. I only want to package the styles of specified files and related dependency files, but now the packaged styles are all from the entire project\n![Xnip2025-03-07_10-14-53](https://github.com/user-attachments/assets/e5a19fb8-a842-4172-8816-5c39b4cd0a96)\nbuild HelloWorld.vue я╝МThe result contains all styles\nI know 'base' params but that would lose the dependent style","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17009","RelatedDescription":"Closed issue \"The packaging result of the Vite library mode is the css of the entire project\" (#17009)"},{"Id":"2902128278","IsPullRequest":false,"CreatedAt":"2025-03-07T10:35:40","Actor":"ihildebrandt","Number":"17013","RawContent":null,"Title":"[v4] Invalid CSS transformation","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nhugo v0.145.0+extended\npostcss-cli v11.0.0\n\n**What version of Node.js are you using?**\nv22.14.0\n\n**What browser are you using?**\nn/a\n\n**What operating system are you using?**\nWindows 11\n\n**Reproduction URL**\nhttps://github.com/ihildebrandt/tailwindbug\n\n**Describe your issue**\nDuring the build process, `npm run build`, the @tailwindcss/cli command creates invalid css. \n\nThe following snippet begins on line 1420 of assets/style.css:\n\n```\n.\\[default\\:\\\\u202F\\$\\{N\\(\\`\\$\\{u\\}\\`\\)\\}\\] {\n  default: \\u202F${N(`${u}`)};\n}\n```\n\nWhen the postcss step of the build process starts it aborts with the following error: \n\n```\nError: error building site: POSTCSS: failed to transform \"/style.css\" (text/css): CssSyntaxError: C:\\Users\\IsaacHildebrandt\\source\\tailwindbug\\stdin:1424:20: Unknown word N\n\n  1422 | }\n  1423 | .\\[default\\:\\\\u202F\\$\\{N\\(\\`\\$\\{u\\}\\`\\)\\}\\] {\n> 1424 |   default: \\u202F${N(`${u}`)};\n       |                    ^\n  1425 | }\n  1426 | .backface-hidden {\n```\n\nThis bug is also present when creating a new npm project with only `@tailwindcss/cli` and `tailwind`, but I wanted to create a project that was closer to my actual implementation. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17013","RelatedDescription":"Closed issue \"[v4] Invalid CSS transformation\" (#17013)"},{"Id":"2902570294","IsPullRequest":false,"CreatedAt":"2025-03-07T10:27:05","Actor":"SahilKhan30","Number":"17020","RawContent":null,"Title":"Older browser parsing issue for breakpoints","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n Vite 5.4.11\n\n**What version of Node.js are you using?**\n\nv20.9.0\n\n**What browser are you using?**\n\nChrome (Version 109.0.5414.119)\n\n**What operating system are you using?**\n\nUbuntu\n\n\n**Describe your issue**\n\nWhile using tailwind css on older browser, especially on chrome 109 or below versions, the breakpoints like md, sm are not working as intended. \n\n.sm\\:col-span-12 {\n    @media (width >= 40rem) {: ;\n    grid-column: span 12 / span 12;\n    }: ;\n}\n above is what's being shown in the developer's inspect mode.\nit is adding semi-colon after each line while parsing in the browser, making it invalid property. \n\nOn newer version it is being parsed properly and works fine.\n.sm\\:col-span-12 {\n    @media (width >= 40rem) {\n        grid-column: span 12 / span 12;\n    }\n}\n\nSo, is there any way fix the above issue for older browsers?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17020","RelatedDescription":"Closed issue \"Older browser parsing issue for breakpoints\" (#17020)"},{"Id":"2902287957","IsPullRequest":false,"CreatedAt":"2025-03-07T08:38:20","Actor":"tejus3131","Number":"17014","RawContent":null,"Title":"Error downloading v4.0.11 binary","State":"closed","Body":"# Tailwind CSS Bug Report\n\n**What version of Tailwind CSS are you using?**\nv4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js 15.0.0\n\n**What version of Node.js are you using?**\nv18.19.1\n\n**What browser are you using?**\nN/A (CLI issue)\n\n**What operating system are you using?**\nLinux (WSL2) 5.15.167.4-microsoft-standard-WSL2\n\n[2025-03-07T07_46_31_007Z-debug-0.log](https://github.com/user-attachments/files/19122627/2025-03-07T07_46_31_007Z-debug-0.log)\n\n**Describe your issue**\nWhen trying to use Tailwind CSS 4.0.11 with Next.js, the CLI commands fail with the error \"could not determine executable to run\". This happens when running commands like `npx tailwindcss init -p` or `npx tailwindcss --help`.\n\nSteps to reproduce:\n1. Create a new Next.js project with `npx create-next-app@latest`\n2. Select TypeScript, Tailwind CSS, and other defaults\n3. Run `npx tailwindcss --help` or `npx tailwindcss init -p`\n\nError output:\n```\nnpm ERR! could not determine executable to run\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/user/.npm/_logs/2025-03-07T07_43_57_000Z-debug-0.log\n```\n\nFrom the debug log:\n```\nverbose stack Error: could not determine executable to run\nverbose stack     at getBinFromManifest (/usr/share/nodejs/libnpmexec/lib/get-bin-from-manifest.js:17:23)\nverbose stack     at exec (/usr/share/nodejs/libnpmexec/lib/index.js:187:15)\nverbose pkgid tailwindcss@4.0.11\n```\n\nThe issue appears to be with the binary executable configuration in the Tailwind 4.0.11 package. Downgrading to Tailwind 3.4.1 resolves the issue.\n\nExpected behavior:\nThe Tailwind CLI commands should execute properly and create the expected configuration files.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17014","RelatedDescription":"Closed issue \"Error downloading v4.0.11 binary\" (#17014)"},{"Id":"2901661859","IsPullRequest":true,"CreatedAt":"2025-03-07T00:00:54","Actor":"RobinMalfait","Number":"17005","RawContent":null,"Title":"Improve boundary classification","State":"closed","Body":"This PR cleans up the boundary character checking by using similar classification techniques as we used for other classification problems.\r\n\r\nFor starters, this moves the boundary related items to its own file, next we setup the classification enum.\r\n\r\nLast but not least, we removed `}` as an _after_ boundary character, and instead handle that situation in the Ruby pre processor where we need it. This means the `%w{flex}` will still work in Ruby files.\r\n\r\n---\r\n\r\nThis PR is a followup for https://github.com/tailwindlabs/tailwindcss/pull/17001, the main goal is to clean up some of the boundary character checking code. The other big improvement is performance. Changing the boundary character checking to use a classification instead results in:\r\n\r\nTook the best score of 10 runs each:\r\n```diff\r\n- CandidateMachine: Throughput: 311.96 MB/s\r\n+ CandidateMachine: Throughput: 333.52 MB/s\r\n```\r\n\r\nSo a ~20MB/s improvement.\r\n\r\n# Test plan\r\n\r\n1. Existing tests should pass. Due to the removal of `}` as an after boundary character, some tests are updated.\r\n2. Added new tests to ensure the Ruby pre processor still works as expected.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17005","RelatedDescription":"Closed or merged PR \"Improve boundary classification\" (#17005)"},{"Id":"2900721128","IsPullRequest":false,"CreatedAt":"2025-03-06T19:40:04","Actor":"iquito","Number":"16999","RawContent":null,"Title":"Missing classes because of `{` boundary and new extractor","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.11\n\n**Reproduction**\n\nWith the new extractor (https://github.com/tailwindlabs/tailwindcss/pull/16306) the class `h-4` and `mx-4` is not picked up anymore when using the following Twig template content:\n\n```\n<div class=\"flex items-center mx-4{% if session.isValid %}{% else %} h-4{% endif %}\"></div>\n```\n\n(See https://play.tailwindcss.com/w3SazyVehg for the example on Tailwind Play and the generated CSS)\n\nI assume the `{` after `h-4` and `mx-4` is somehow not considered a (possible) boundary anymore. I think this is likely a bug, as many template languages use `{` and `}` as delimiters in some way, so the possibility of a boundary should be taken into account.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16999","RelatedDescription":"Closed issue \"Missing classes because of `{` boundary and new extractor\" (#16999)"},{"Id":"2900904079","IsPullRequest":true,"CreatedAt":"2025-03-06T19:40:03","Actor":"RobinMalfait","Number":"17001","RawContent":null,"Title":"Ensure `}` and `{` are valid boundary characters","State":"closed","Body":"In a lot of templating languages, `{тАж}` is used to escape the template language to write some code logic, this means that if you have input that looks like this:\r\n\r\n```html\r\n<div class=\"flex items-center mx-4{% if session.isValid %}{% else %} h-4{% endif %}\"></div>\r\n```\r\n\r\nThat the if condition will be gone once it's compiled to HTML, but it also means that the `}` and `{` characters next to `mx-4{` and `h-4` should be valid boundary characters because Tailwind CSS typically operates on the source code, not the compiled code.\r\n\r\nI didn't create a pre processor for this because unfortunately this syntax is often embedded in `.html` files, and I would love to not have to create a pre processor for `.html` files.\r\n\r\nYou might notice that there are other changes in this PR, they are all related to boundary characters, let me explain:\r\n\r\nIn the named utility machine, we repeated the allowed boundary characters. We will now re-use the shared function so that it's all in one location.\r\nWe still check for a few additional characters such as `:` because of JS keys, `/` because it could be a start of a modifier and `!` because the named utility could be important.\r\n\r\nThis actually exposed a bug where the `class` attribute in `<div class=\"тАж\">тАж</div>` was not extracted (which we typically want). However, in languages like Svelte, this is a real thing you can do: `<div class:px-4=\"condition\"></div>`. The pre processor will make sure to convert this input to `<div class px-4=\"condition\"></div>` but that still means that we need to extract the `px-4`.\r\n\r\nif a utility ends in an number this worked as expected, but `<div class:flex=\"condition\"></div>` did not work. This PR also fixes that by adding a dedicated test and it's also the reason why you see a bunch of `class` candidates in the tests.\r\n\r\nFixes: #16999\r\n\r\n# Test plan\r\n\r\n1. Added new test\r\n4. Existing tests pass\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17001","RelatedDescription":"Closed or merged PR \"Ensure `}` and `{` are valid boundary characters\" (#17001)"},{"Id":"2901018281","IsPullRequest":true,"CreatedAt":"2025-03-06T17:30:08","Actor":"keithburgie","Number":"17002","RawContent":null,"Title":"Add --radius-full variable","State":"open","Body":"The `rounded-full` classname doesn't match the pattern of the other radius classnames:\r\n```\r\nrounded-xl: border-radius: var(--radius-xl)\r\nrounded-2xl: border-radius: var(--radius-2xl)\r\nrounded-3xl: border-radius: var(--radius-3xl)\r\nrounded-full: border-radius: calc(infinity * 1px)\r\n```\r\nThis PR makes `var(--rounded-full)` available to use like all the others in the theme.css.\r\n\r\n<!--\r\n\r\nЁЯСЛ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17002","RelatedDescription":"Open PR \"Add --radius-full variable\" (#17002)"},{"Id":"2900576849","IsPullRequest":false,"CreatedAt":"2025-03-06T16:24:01","Actor":"ledermann","Number":"16998","RawContent":null,"Title":"4.0.11 - Regression with SLIM templates (nested brackets)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nBrave 1.76.73\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/ledermann/tailwind-4.0.11-slim-issue\n\n**Describe your issue**\n\nSimilar to #16975, there is another issue with SLIM templates. With 4.0.11, the parser fails to handle **nested** brackets. See this example:\n\n```slim\n.text-black[\n  data-controller= ['foo', ('bar' if rand.positive?)].join(' ')\n]\n  .bg-green-300\n    | BLACK on GREEN - OK\n\n  .bg-red-300[\n    data-foo= 42\n  ]\n    | Should be BLACK on RED - FAIL\n```\n\nHere, the class `bg-red-300` is not processed.\n\n![Image](https://github.com/user-attachments/assets/cf7fb734-eade-4218-aa19-d88eab88b903)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16998","RelatedDescription":"Closed issue \"4.0.11 - Regression with SLIM templates (nested brackets)\" (#16998)"},{"Id":"2900855945","IsPullRequest":true,"CreatedAt":"2025-03-06T16:24:00","Actor":"RobinMalfait","Number":"17000","RawContent":null,"Title":"Ensure strings in Pug and Slim templates are handled correctly","State":"closed","Body":"This PR fixes an issue where strings in the Pug and Slim pre-processor were handled using the `string_machine`. However, the `string_machine` is not for strings inside of Tailwind CSS classes which means that whitespace is invalid.\n\nThis means that parts of the code that _are_ inside strings will not be inside strings and parts of the code that are not inside strings will be part of a potential string. This is a bit confusing to wrap your head around, but here is a visual representation of the problem:\n\n```\n.join(' ')\n        ^  3. start of new string, which means that the `)` _could_ be part of a string if a new `'` occurs later.\n       ^   2. whitespace is not allowed, stop string\n      ^    1. start of string\n```\n\nFixes: #16998\n\n# Test plan\n\n1. Added new test\n2. Existing tests still pass\n3. Added a simple test helper to make sure that we can extract the correct candidates _after_ pre-processing\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17000","RelatedDescription":"Closed or merged PR \"Ensure strings in Pug and Slim templates are handled correctly\" (#17000)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-08T03:30:21.8234516Z","RunDurationInMilliseconds":459}