{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3437507004","IsPullRequest":false,"CreatedAt":"2025-09-21T02:43:48","Actor":"nexxai","Number":"18972","RawContent":null,"Title":"v4 upgrader removing the content of all files in my project","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n```\n‚ö°Ô∏è? 78% ‚ûú npx @tailwindcss/upgrade --version\n‚âà tailwindcss v4.1.13\n```\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite: 6.3.6\n\n**What version of Node.js are you using?**\n\nFor example: v21.7.3\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nmacOS Tahoe 26.0\n\n**Reproduction URL**\n\nThis is not a rendering issue, it's a problem with the `@tailwindcss/upgrade` package, so I'm not sure how to provide a \"reproduction\" but happy to do so if someone can explain.\n\n**Describe your issue**\n\nI realize this is going to sound crazy, but I swear it's happening and I can't figure out why.  When I run `npx @tailwindcss/upgrade\" to upgrade my app from v3 to v4, it deletes every file in my project tree.  Not just CSS files, but literally every file.\n\nSpecifically, it happens during the \"Migrating templates...\" step.  Originally, it looked like it was hung, but when I killed the process, I checked my git tree and thousands of files had been deleted.  Thankfully, I had run a commit right before I ran the updater so I could revert without issue, but I suspect this is not expected behaviour.\n\nIn this example, I show that there are no changes to be made, I run the upgrader, and then it's showing all of these files having been deleted (it would delete more if I didn't `CTRL-C` out of the upgrader).\n\n```sh\n2:36:03 PM in ipms on Ôêò filament-v4-upgrade via ü•ü v1.2.22 via Óòà v8.4.12\n‚ö°Ô∏è? 78% ‚ûú git status\nOn branch filament-v4-upgrade\nnothing to commit, working tree clean\n\n2:36:05 PM in ipms on Ôêò filament-v4-upgrade via ü•ü v1.2.22 via Óòà v8.4.12\n‚ö°Ô∏è? 78% ‚ûú npx @tailwindcss/upgrade\n‚âà tailwindcss v4.1.13\n\n‚îÇ Searching for CSS files in the current directory and its subdirectories‚Ä¶\n\n‚îÇ Migrating stylesheets‚Ä¶\n\n‚îÇ ‚Ü≥ Migrated stylesheet: `./resources/css/app.css`\n\n‚îÇ Updating dependencies‚Ä¶\n\n‚îÇ ‚Ü≥ Updated package: `tailwindcss`\n\n‚îÇ ‚Ü≥ Updated package: `@tailwindcss/postcss`\n\n‚îÇ ‚Ü≥ Updated package: `@tailwindcss/vite`\n\n‚îÇ ‚Ü≥ Updated package: `prettier-plugin-tailwindcss`\n\n‚îÇ Migrating templates‚Ä¶\n\n^C\n\n2:36:17 PM in ipms on Ôêò filament-v4-upgrade [!] via ü•ü v1.2.22 via Óòà v8.4.12 took 8s\n‚ö°Ô∏è? 78% ‚ûú git status\nOn branch filament-v4-upgrade\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified:   .editorconfig\n        modified:   README.md\n        modified:   _ide_helper_models.php\n        modified:   app/Casts/Markdown.php\n        modified:   app/Console/Commands/AddDuesToAllCommand.php\n        modified:   app/Console/Commands/AddInstructionalVideosCommand.php\n        modified:   app/Console/Commands/ImportContest2024Command.php\n        modified:   app/Console/Commands/ImportMembersCommand.php\n        modified:   app/Console/Commands/MigrateDbEngineCommand.php\n        modified:   app/Enums/ClassifiedAdContactType.php\n        modified:   app/Enums/ClassifiedAdType.php\n        modified:   app/Enums/Config/DuesFrequency.php\n        modified:   app/Enums/ContestEntryAgeClass.php\n        modified:   app/Enums/ContestEntryRanking.php\n        modified:   app/Enums/ExternalMembershipOrganization.php\n        modified:   app/Enums/InstructionalVideoPanel.php\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\n2:36:19 PM in ipms on Ôêò filament-v4-upgrade [!] via ü•ü v1.2.22 via Óòà v8.4.12\n‚ö°Ô∏è? 78% ‚ûú\n```\n\nI'm not really sure what else to do.  I tried downloading and compiling the package myself to try and understand why it's even thinking it should touch any non-CSS file but I'm getting this error when I try to `pnpm run build` the main tailwindcss project:\n\n```\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `wasm32-wasip1-threads` target may not be installed\n  = help: consider downloading the target with `rustup target add wasm32-wasip1-threads`\n```\n\neven though I've already confirmed that target is installed:\n\n```\n‚ö°Ô∏è? 78% ‚ûú rustup target add wasm32-wasip1-threads\ninfo: component 'rust-std' for target 'wasm32-wasip1-threads' is up to date\n```\n\nAny help would be greatly appreciated. Thanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18972","RelatedDescription":"Closed issue \"v4 upgrader removing the content of all files in my project\" (#18972)"},{"Id":"3436775783","IsPullRequest":true,"CreatedAt":"2025-09-20T06:40:46","Actor":"depfu[bot]","Number":"18971","RawContent":null,"Title":"Update all pnpm dependencies (2025-09-20)","State":"open","Body":"This is your weekly update of **all** pnpm dependencies. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n‚ú≥Ô∏è eslint (9.33.0 ‚Üí 9.35.0, minor) ¬∑ [Repo](https://github.com/eslint/eslint) ¬∑ [Changelog](https://github.com/eslint/eslint/blob/main/CHANGELOG.md) ¬∑ [Release](https://github.com/eslint/eslint/releases/tag/v9.35.0) ¬∑ [Diff](https://github.com/eslint/eslint/compare/a90d7c4fe5ef83054e29d21d7ffb442103429d03...8401101d1e3e3e4e1edc2a9e59cafc9956bf2610)\n\n‚ú≥Ô∏è eslint-config-next (15.4.7 ‚Üí 15.5.2, minor)\n\n‚ú≥Ô∏è magic-string (0.30.18 ‚Üí 0.30.19, minor) ¬∑ [Repo](https://github.com/rich-harris/magic-string) ¬∑ [Changelog](https://github.com/Rich-Harris/magic-string/blob/master/CHANGELOG.md) ¬∑ [Diff](https://github.com/rich-harris/magic-string/compare/0005025c1849f294b3978547e4cb46f2869c9864...bdef7d5ab5087f279d999a9c148f0c5c3a64259e)\n\n‚ú≥Ô∏è @types/bun (1.2.20 ‚Üí 1.2.21, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @types/react (19.1.9 ‚Üí 19.1.13, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @types/react-dom (19.1.7 ‚Üí 19.1.9, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @types/semver (7.7.0 ‚Üí 7.7.1, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @vitejs/plugin-react (5.0.0 ‚Üí 5.0.2, patch) ¬∑ [Repo](https://github.com/vitejs/vite-plugin-react) ¬∑ [Changelog](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/CHANGELOG.md)\n\n‚ú≥Ô∏è bun (1.2.20 ‚Üí 1.2.21, patch) ¬∑ [Repo](https://github.com/oven-sh/bun)\n\n‚ú≥Ô∏è turbo (2.5.4 ‚Üí 2.5.6, patch) ¬∑ [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will only send you the next scheduled PR once you merge or close this one.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu refresh</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n</dl></blockquote>\n</details>\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18971","RelatedDescription":"Open PR \"Update all pnpm dependencies (2025-09-20)\" (#18971)"},{"Id":"3435782503","IsPullRequest":true,"CreatedAt":"2025-09-19T20:17:43","Actor":"thecrypticace","Number":"18970","RawContent":null,"Title":"Support Vite Environment API","State":"open","Body":"Fixes #18002\r\n\r\nVery much a work in progress b/c I don't (yet) understand how the newer APIs are intended to function.\r\n\r\n- [ ] Needs env specific tests that verify the environment API is being used","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18970","RelatedDescription":"Open PR \"Support Vite Environment API\" (#18970)"},{"Id":"3422828727","IsPullRequest":true,"CreatedAt":"2025-09-19T15:08:41","Actor":"philipp-spiess","Number":"18947","RawContent":null,"Title":"Bump napi toolchain to 3.3","State":"closed","Body":"This PR bumps all napi related dependencies to their latest version. Napi 3 has by now officially been released but since we've been using the preview already, there aren't many changes.\r\n\r\nOne thing that ChatGPT found is that `--no-const-enum` is the default behavior now (see default value [in this table](https://napi.rs/docs/cli/build#options))\r\n\r\n## Test plan\r\n\r\n- `pnpm install && pnpm build`\r\n- `cd crates/node/npm/wasm32-wasi`\r\n- `pnpm install --ignore-workspace` (This is necessary for some reason or the bundled dependencies won't work, I have no clue why it's not necessary on CI)\r\n- `pnpm pack`\r\n- Install dependency in a new npm package with a simple config like this:\r\n    ```js\r\n    import { Scanner } from \"@tailwindcss/oxide-wasm32-wasi\";\r\n\r\n    let scanner = new Scanner({\r\n      sources: [\r\n        {\r\n          base: \"/Users/philipp/dev/tailwindcss/packages/@tailwindcss-postcss/src/fixtures/example-project\",\r\n          pattern: \"**/*\",\r\n          negated: false,\r\n        },\r\n      ],\r\n    });\r\n\r\n    console.log(scanner.scan());\r\n    ```\r\n- <img width=\"904\" height=\"494\" alt=\"CleanShot 2025-09-19 at 14 53 52@2x\" src=\"https://github.com/user-attachments/assets/93e32c19-6db4-4d00-9fdb-a6fde22fc69c\" />\r\n\r\n\r\nI also tested the CI build to make sure the `bundledDependencies` are properly added.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18947","RelatedDescription":"Closed or merged PR \"Bump napi toolchain to 3.3\" (#18947)"},{"Id":"3431886368","IsPullRequest":false,"CreatedAt":"2025-09-19T12:43:10","Actor":"WebCimes","Number":"18966","RawContent":null,"Title":"@theme directive not working when importing CSS files in Tailwind CSS v4","State":"closed","Body":"Problem Description\nWhen using Tailwind CSS v4's @theme directive, the custom design tokens work correctly when the CSS file is processed directly, but fail when the file is imported via @import from another CSS file.\n\nSetup\nFile structure:\n‚îú‚îÄ‚îÄ app.css (contains @theme directive)\n‚îú‚îÄ‚îÄ fo.css (imports app.css)\n‚îî‚îÄ‚îÄ bo.css (imports app.css)\n\napp.css:\n```\n@import 'tailwindcss';\n\n@theme {\n    --color-primary-700: #027392;\n    --color-primary-50: #E6F9FF;\n    /* ... other custom tokens */\n}\n...\n```\n\nfo.css:\n```\n@import \"./app.css\";\n/* ... other imports and styles */\n```\n\napp.js:\n`import \"@css/fo.css\";`\n\nExpected Behavior\nCustom tokens defined in @theme should be available as Tailwind utilities (e.g., border-primary-700, bg-primary-50) regardless of whether [core.css] is processed directly or imported.\n\nActual Behavior\n‚úÖ Works: When [app.css] is processed directly as the main entry point\n‚ùå Fails: When [app.css] is imported via @import in [fo.css] or [bo.css]\nThe custom tokens are not recognized, causing build errors or fallback to default Tailwind colors.\n:root directive not appear.\n\nRoot Cause\nTailwind CSS v4's @theme directive is only processed in the main entry file that Tailwind directly processes. When a file containing @theme is imported via @import, the directive is not recognized or processed.\n\nEnvironment\nTailwind CSS: 4.0.1\nBuild tool: [Vite/Laravel] 7.1.5\nThis appears to be a limitation of how Tailwind v4 processes the @theme directive in imported files. Is this expected behavior, or should @theme work in imported CSS files as well?\n\nThanks","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18966","RelatedDescription":"Closed issue \"@theme directive not working when importing CSS files in Tailwind CSS v4\" (#18966)"},{"Id":"3434217591","IsPullRequest":false,"CreatedAt":"2025-09-19T12:42:34","Actor":"cappuc","Number":"18968","RawContent":null,"Title":"@custom-variant classes missing in production output","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v7\n\n**What version of Node.js are you using?**\n\nFor example: v24.8.0\n\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/tyMX67b7II\n\n**Describe your issue**\n\nI added a custom variant with: `@custom-variant stuck-top (@container scroll-state(stuck: top));` and used it like this: `stuck-top:shadow`.\nIn development mode it generate the class correctly but it is missing in production build.\nI'm using vite with official tailwind plugin but I tested also with the cli and the class is missing when using the ` --optimize` flag.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18968","RelatedDescription":"Closed issue \"@custom-variant classes missing in production output\" (#18968)"},{"Id":"3431909973","IsPullRequest":true,"CreatedAt":"2025-09-18T20:53:45","Actor":"thecrypticace","Number":"18967","RawContent":null,"Title":"Detect classes in markdown inline directives","State":"closed","Body":"Fixes #18071","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18967","RelatedDescription":"Closed or merged PR \"Detect classes in markdown inline directives\" (#18967)"},{"Id":"3419501078","IsPullRequest":true,"CreatedAt":"2025-09-18T17:00:35","Actor":"thecrypticace","Number":"18940","RawContent":null,"Title":"Add plugin option documentation to the postcss plugin readme","State":"closed","Body":"Closes https://github.com/tailwindlabs/tailwindcss.com/issues/2061\r\n\r\nIn lieu of finding a place to put this on the docs we can at least document this in the readme for the plugin.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18940","RelatedDescription":"Closed or merged PR \"Add plugin option documentation to the postcss plugin readme\" (#18940)"},{"Id":"3430417707","IsPullRequest":false,"CreatedAt":"2025-09-18T13:39:26","Actor":"TobyPerplex","Number":"18963","RawContent":null,"Title":"Angular: v4.1.13 breaks styling","State":"closed","Body":"With Angular and Postcss + Tailwind 4, when I upgrade from v4.1.**12** to v4.1.**13** all styling breaks\n\nOn v4.1.12:\n```\n<style>\n/* src/app/modules/configurator/custom-element/configurator.component.css */\n@layer properties;\n@layer theme, base, components, utilities;\n@layer theme {\n  :root,\n  :host {\n  all my vars are here \n  }\n}\n\nall my styling is here\n</style>\n```\n\nOn v4.1.13:\n```\n<style>\n/* src/app/modules/configurator/custom-element/configurator.component.css */\n/*# sourceMappingURL=/configurator.component.css.map */\n</style>\n```\n\nVersion:\n\n\"@tailwindcss/postcss\": \"4.1.13\"\n\"postcss\": \"8.5.6\"\nAngular CLI: 20.3.2\nNode: 22.17.0\nPackage Manager: pnpm 10.2.0\nOS: macOS Tahoe 26.0","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18963","RelatedDescription":"Closed issue \"Angular: v4.1.13 breaks styling\" (#18963)"},{"Id":"3427322547","IsPullRequest":true,"CreatedAt":"2025-09-18T09:17:29","Actor":"RobinMalfait","Number":"18960","RawContent":null,"Title":"Bump Prettier","State":"closed","Body":"This PR bumps prettier and solves one of our `- *` formatting issues. Not all, but a few!\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18960","RelatedDescription":"Closed or merged PR \"Bump Prettier\" (#18960)"},{"Id":"3427795689","IsPullRequest":false,"CreatedAt":"2025-09-17T21:04:12","Actor":"msfragala","Number":"18961","RawContent":null,"Title":"Custom variants don't work with @scope","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.2\n\n**What version of Node.js are you using?**\n\nv24.7.0\n\n**What browser are you using?**\n\nChrome (v140)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/0NPeZeXJ61\n\n**Describe your issue**\n\nCustom variants don't work with `@scope` rules. When defining a custom variant using `@scope`, the generated code places the rule inside the class instead of the class inside the rule. But `@scope` rules don't seem to support nesting like this as the resulting class has no effect","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18961","RelatedDescription":"Open issue \"Custom variants don't work with @scope\" (#18961)"},{"Id":"3426904726","IsPullRequest":false,"CreatedAt":"2025-09-17T16:29:11","Actor":"Evillgranny","Number":"18958","RawContent":null,"Title":"z-index doesn't work with \"!\" (!imporant)","State":"closed","Body":"**`!` Doesn't create classes with `!important`** \n\nFor z-index `z-10!` and `!z-10` it's not working. It works for everting, except of z-index\n\n`p-0!`- works and creates a class with value `padding: calc(var(--spacing) * 0) !important;`\n`h-4!` - works and creates a class with value `height: calc(var(--spacing) * 4) !important;`\n`z-10!` - doesn't work and creates class with value `z-index: 10;` without !important\n\n**What version of Tailwind CSS are you using?**\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss: 8.5.3, React 19, Vite 6.3.6\n\n**What version of Node.js are you using?**\n\nv18.19.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n<img width=\"446\" height=\"113\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/efd24bde-4cbe-42d7-9929-7b3db5075b97\" />\n\n<img width=\"367\" height=\"255\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4eb10c0b-985c-4c66-a751-7c6cfadbf8b9\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18958","RelatedDescription":"Closed issue \"z-index doesn't work with \"!\" (!imporant)\" (#18958)"},{"Id":"3426280013","IsPullRequest":false,"CreatedAt":"2025-09-17T14:55:02","Actor":"robustadev","Number":"18957","RawContent":null,"Title":"[v4] Vite + Tailwind CSS classes not applying when project is outside a Git repository","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v7.1.2\n\n**What version of Node.js are you using?**\n\nv22.15.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmaxOS\n\n**Reproduction URL**\n\nhttps://github.com/robustadev/vite-react-tailwind\n\n**Describe your issue**\n\nIssue Description\nTailwind CSS classes are not being applied to elements when the project folder is not under Git version control.\n\nSteps to Reproduce\n\nCreate a new Vite + React + TypeScript project\nInstall and configure Tailwind CSS using @tailwindcss/vite plugin following the official docs\nAdd Tailwind classes to elements (e.g., `<h1 className=\"text-red-500\">Hello</h1>`)\nEnsure the project folder does not contain a .git directory\nRun the development server\n\nResult: Tailwind classes have no effect - text remains default color instead of red.\n\nWorkaround\nThe issue is resolved by either:\n\nInitializing a Git repository (git init) in the project folder, OR\nCreating an empty .git folder in the project root\n\nAfter adding Git (even just an empty .git folder), Tailwind classes work as expected.\n\nExpected Behavior\nTailwind CSS should work regardless of whether the project is under Git version control or not.\n\nActual Behavior\nTailwind CSS only works when a .git directory is present in the project root.\n\nReproduction Repository\nA minimal reproduction case is available at: https://github.com/robustadev/vite-react-tailwind\n\nAdditional Context\nThis suggests there may be a dependency on Git detection in either the Tailwind CSS build process or the Vite plugin that shouldn't exist.\n\nHow to Test the Reproduction\n\nClone the reproduction repository\nRemove the .git folder: rm -rf .git\nInstall dependencies: npm install\nStart dev server: npm run dev\nObserve that Tailwind classes don't work\nCreate empty .git folder: mkdir .git\nRestart the dev server\nRefresh the browser - Tailwind classes now work","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18957","RelatedDescription":"Closed issue \"[v4] Vite + Tailwind CSS classes not applying when project is outside a Git repository\" (#18957)"},{"Id":"3424777575","IsPullRequest":false,"CreatedAt":"2025-09-17T14:37:50","Actor":"ronaldcurtis","Number":"18952","RawContent":null,"Title":"[v4] @tailwindcss/vite not working with vitest","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite ^7.1.2\nVitest 3.2.4\n\n**What version of Node.js are you using?**\n\n22.13.0\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/ronaldcurtis/tailwind-four-with-vitest-not-working\n\n**Describe your issue**\n\nNot sure if this should be raised here or against the [vitest repo](https://github.com/vitest-dev/vitest), but when running a test with vitest and `css: true`, the error `Could not parse CSS stylesheet` is raised.\n\nThe reproduction URL above uses `jsdom@27`. But when trying with `jsdom@26.1.0`, it will also log the contents of the css file. In the stderr output, you will also see that it contains the unprocessed css with tailwind directives.\n\n<img width=\"3346\" height=\"1770\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fa22a87a-2dc3-4201-bc2d-d379ec41bd12\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18952","RelatedDescription":"Closed issue \"[v4] @tailwindcss/vite not working with vitest\" (#18952)"},{"Id":"3425657055","IsPullRequest":false,"CreatedAt":"2025-09-17T10:31:08","Actor":"marcospgp","Number":"18954","RawContent":null,"Title":"error: Cannot apply unknown utility class: wrap-break-word","State":"closed","Body":"`    \"tailwindcss\": \"^4.1.13\",`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18954","RelatedDescription":"Closed issue \"error: Cannot apply unknown utility class: wrap-break-word\" (#18954)"},{"Id":"3423841472","IsPullRequest":false,"CreatedAt":"2025-09-17T07:02:45","Actor":"jcortezevi","Number":"18949","RawContent":null,"Title":"ms/me not working with responsive breakpoints in dev mode","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.3\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/jcortezevi/tailwind-ms-me-test\nhttps://play.tailwindcss.com/FrHljSOwC6\n\n**Describe your issue**\n\nms/me margin styles don't seem to work with Tailwind V4 in dev mode when using responsive breakpoints (`sm:`, `md:`, `lg:`, ...). However, I noticed that these styles work in a full production build. The GitHub repo link above is a minimal example of this issue. The Tailwind Play link above is the same code, but it works (my guess is that the CSS is being generated differently compared to my Next.js project).\n\nI noticed something interesting when poking around the generated CSS files in dev mode in `.next/static/chunks`.  The generated CSS source map file has the `ms-4` and `me-4` styles, but the CSS file that corresponds to that source map doesn't have these styles.\n\nWe have used similar styles such as `sm:ms-4` extensively in a different Next.js project that uses Tailwind V3 instead, and these styles work in dev mode in that project.\n\nI also found this similar issue, but it has been closed: https://github.com/tailwindlabs/tailwindcss/issues/16438\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18949","RelatedDescription":"Closed issue \"ms/me not working with responsive breakpoints in dev mode\" (#18949)"},{"Id":"3423017308","IsPullRequest":true,"CreatedAt":"2025-09-16T19:04:13","Actor":"bvandercar-vt","Number":"18948","RawContent":null,"Title":"Use `default` export condition for `@tailwindcss/vite`","State":"closed","Body":"## Summary\r\n\r\nIn `@tailwindcss/vite` 's `package.json`, change the `exports` key from `include` to `default` since there is no `require` case.\r\n\r\nRan into an issue using the `tsx` package to run a script that has a sub-dependency that imports from `@tailwindcss/vite`, where `tsx` converts things to cjs to run, and since there is no `require` case for this package, it can't find the file. Changing to `default` covers the cases for both `import` and `require`.\r\n\r\n## Test plan\r\n\r\nNo testing needed. Functionality is the same.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18948","RelatedDescription":"Closed or merged PR \"Use `default` export condition for `@tailwindcss/vite`\" (#18948)"},{"Id":"3419281835","IsPullRequest":true,"CreatedAt":"2025-09-16T18:03:09","Actor":"thecrypticace","Number":"18938","RawContent":null,"Title":"Fix native ESM config loading in v3","State":"closed","Body":"Unfortunately for backwards compatibility purposes (with `loadConfig` at least) we can't switch things to use `import(‚Ä¶)` because there's baked in knowledge that the config is loaded synchronously for v3.\r\n\r\nThis PR does two things:\r\n- Defers to `require(‚Ä¶)` which allows newer versions that support `require(esm)` to work natively. This works around the need to switch to `import(‚Ä¶)` for those versions.\r\n- Allows newer versions of `postcss-load-config` enabling better ESM+TypeScript support for PostCSS configs in the CLI.\r\n\r\nWe support v4, v5, and v6 of `postcss-load-config` simultaneously so any of those versions should work. I've verified that newer node versions seem to install v6 while earlier ones like Node v14 install v4 of `postcss-load-config`. So this should be a backwards compatible change.\r\n\r\n- [x] needs tests for `import.meta.resolve(‚Ä¶)`\r\n- [x] needs tests for ESM postcss configs\r\n\r\nFixes #14152\r\nFixes #14423","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18938","RelatedDescription":"Closed or merged PR \"Fix native ESM config loading in v3\" (#18938)"},{"Id":"3422808380","IsPullRequest":false,"CreatedAt":"2025-09-16T15:48:08","Actor":"Cephyric-gh","Number":"18946","RawContent":null,"Title":"Divide does not apply to custom HTML elements","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nActual codebase is angular, but can be recreated in the playground\n\n**What version of Node.js are you using?**\n\n24.2.0\n\n**What browser are you using?**\n\nZen (fork of Firefox, does not alter default Firefox CSS handling)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/9X9CyHeGx0\n\n**Describe your issue**\n\nWhen using `divide-y`, the styling of the divide does not apply to custom HTML elements. This becomes a problem in angular as angular components output custom elements into the browser.\n\nSide-note that playground doesn't seem to apply _any_ classes to custom elements, which I am assuming is a playground issue as this is fine in angular itself. \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18946","RelatedDescription":"Closed issue \"Divide does not apply to custom HTML elements\" (#18946)"},{"Id":"3416057684","IsPullRequest":false,"CreatedAt":"2025-09-16T15:33:35","Actor":"agusterodin","Number":"18930","RawContent":null,"Title":"Plus character in utility name doesn't work when defined in TypeScript configuration file","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.3\n\n**What version of Node.js are you using?**\n\n22.18.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS 15.6.1 (24G90)\n\n**Reproduction URL**\n\nhttps://github.com/agusterodin/tailwind-4-plus-character-bug-reproduction\n\nRun using `pnpm i` and `pnpm dev`.\n\n**Describe your issue**\n\nAny utility class defined in my tailwind.config.ts file that contains a plus (+) character is ignored and not usable. Plus characters in utility names used to work in v3 but no longer work in v4. Plus characters appear to work if I use the new CSS method of defining utilites, however I cannot use pure CSS for my configuration because my theme contains complex stuff that requires TypeScript (not shown in my minimal reproduction).\n\nExample: notice sm+ isn't showing up in Intellisense.\n\n<img width=\"770\" height=\"748\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3556cefb-8017-4028-a678-e53e575ead0a\" />\n\n<img width=\"1740\" height=\"678\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3ec73bd3-311d-4282-8f1e-298c61e6275d\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18930","RelatedDescription":"Closed issue \"Plus character in utility name doesn't work when defined in TypeScript configuration file\" (#18930)"},{"Id":"3420002549","IsPullRequest":false,"CreatedAt":"2025-09-16T08:54:11","Actor":"boycce","Number":"18942","RawContent":null,"Title":"optimizeUniversalDefaults should be a primary setting","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 5.92.1\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nSetting the following in tailwind.config.js:\n```\nexport default {\n  // ...\n  experimental: {\n    optimizeUniversalDefaults: true\n  }\n}\n```\n\nDisplays the following warnings:\n\n> warn - You have enabled experimental features: optimizeUniversalDefaults\n> warn - Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\n\n**Describe your issue**\n\nAfter realising there‚Äôs no way to silence the experimental warnings when this flag is enabled, it made me think this should actually be a primary setting. Without it, I find it very difficult to read and debug CSS classes in DevTools because of the unnecessary class clutter, and use it for all our projects.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18942","RelatedDescription":"Closed issue \"optimizeUniversalDefaults should be a primary setting\" (#18942)"},{"Id":"3418206954","IsPullRequest":false,"CreatedAt":"2025-09-15T14:23:43","Actor":"mgiessing","Number":"18934","RawContent":null,"Title":"tailwindcss/postcss: unsupported architecture on Linux: ppc64","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 5.4.14\n\n**What version of Node.js are you using?**\n\nv22\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Describe your issue**\n\nI'm trying to build open-webui on ppc64le but it crashed due to tailwindcss/postcss (from `postcss.config.js`) is not supported on that architecture. Digging a bit deeper I believe the reason is that the rust binary (@tailwindcss/oxide-linux-powerpc64le-gnu) is missing.\n\nThe error during the build is:\n\n```bash\n[...]\n[vite:css] Error while preprocessing /open-webui/src/lib/components/common/Spinner.svelte - Error while preprocessing /open-webui/src/routes/(app)/+layout.svelte - Failed to load PostCSS config (searchPath: /open-webui): [Error] Loading PostCSS Plugin failed: Unsupported architecture on Linux: ppc64\n\n(@/open-webui/postcss.config.js)\nError: Loading PostCSS Plugin failed: Unsupported architecture on Linux: ppc64\n[...]\n```\n\nIs there a possibility to build/provide this as well? Rust itself is supported on IBM Power","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18934","RelatedDescription":"Open issue \"tailwindcss/postcss: unsupported architecture on Linux: ppc64\" (#18934)"},{"Id":"3413648109","IsPullRequest":false,"CreatedAt":"2025-09-13T15:01:10","Actor":"marcospgp","Number":"18926","RawContent":null,"Title":"basis-X uses spacing instead of container variables","State":"closed","Body":"I define custom container vars in my theme with tshirt sizing, as well as for spacing.\n\nsetting `basis-md` picks up on the spacing md variable, not the container one. but spacing is not meant for dimensions, container is - as per the docs. so this seems like a bug.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18926","RelatedDescription":"Closed issue \"basis-X uses spacing instead of container variables\" (#18926)"},{"Id":"3413649461","IsPullRequest":false,"CreatedAt":"2025-09-13T14:59:54","Actor":"marcospgp","Number":"18927","RawContent":null,"Title":"current default line height values result in smaller line height as font size also gets smaller","State":"closed","Body":"```\n--text-xs--line-height:       calc(1 / 0.75)     = 1.333‚Ä¶\n--text-sm--line-height:       calc(1.25 / 0.875) = 1.428571‚Ä¶\n--text-base--line-height:     calc(1.5 / 1)      = 1.5\n--text-lg--line-height:       calc(1.75 / 1.125) = 1.555‚Ä¶\n--text-xl--line-height:       calc(1.75 / 1.25)  = 1.4\n--text-2xl--line-height:      calc(2 / 1.5)      = 1.333‚Ä¶\n--text-3xl--line-height:      calc(2.25 / 1.875) = 1.2\n--text-4xl--line-height:      calc(2.5 / 2.25)   = 1.111‚Ä¶\n--text-5xl--line-height:      1\n--text-6xl--line-height:      1\n--text-7xl--line-height:      1\n--text-8xl--line-height:      1\n--text-9xl--line-height:      1\n```\n\nline height goes down as font size goes down\n\nit feels weird that line height would be a sort of curve by default, peaking at text-lg?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18927","RelatedDescription":"Closed issue \"current default line height values result in smaller line height as font size also gets smaller\" (#18927)"},{"Id":"3406444053","IsPullRequest":true,"CreatedAt":"2025-09-12T10:27:23","Actor":"RobinMalfait","Number":"18918","RawContent":null,"Title":"Show Lightning CSS warnings when optimizing/minifying in production","State":"closed","Body":"This PR improves the DX by showing all the Lightning CSS warnings when using a \"production\" build (or using `--optimize` or `--minify` flags when using the CLI).\r\n\r\nRight now Tailwind CSS itself doesn't care about the exact syntax you are using in the CSS as long as it looks valid. We do this because otherwise we would have to parse a lot more CSS syntax and validate it even though it would be valid CSS in 99.99% of the cases.\r\n\r\nEven worse, if you want to use newer CSS syntax that Tailwind CSS doesn't validate yet, then you would get warnings for valid CSS.\r\n\r\nAnother reason why we don't do this is because the browser already does a great job at ignoring invalid CSS.\r\n\r\nSo the linked issue #15872 would still silently fail in development mode. In this case, everything would work, except the shadow with the invalid syntax.\r\n\r\nBut in production mode, you would now get a proper warning from Lightning CSS, because they try to optimize the CSS and remove invalid CSS.\r\n\r\nOne potential issue here is that we run Lightning CSS on the generated CSS, not on the input CSS. So the current output shows the warnings in the output CSS not the input CSS. Any thoughts if we would just skip the line numbers?\r\n\r\n## Test plan\r\n\r\n1. Everything works as before\r\n2. In production mode, you would get warnings printed to the terminal. This is done in `@tailwindcss/node` so the CLI/Vite/PostCSS plugins would all get the same behavior.\r\n\r\nScreenshots:\r\n\r\nIf you have a single issue:\r\n<img width=\"977\" height=\"441\" alt=\"image\" src=\"https://github.com/user-attachments/assets/7b061ee9-b74f-4b40-aa05-cff67a21dfcc\" />\r\n\r\n\r\nIf you have multiple issues:\r\n<img width=\"2170\" height=\"711\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a5bc9b0a-964b-465f-80f3-d30dd467e69c\" />\r\n\r\n\r\nFixes: #15872\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18918","RelatedDescription":"Closed or merged PR \"Show Lightning CSS warnings when optimizing/minifying in production\" (#18918)"},{"Id":"3409881789","IsPullRequest":false,"CreatedAt":"2025-09-12T10:17:32","Actor":"minht11","Number":"18923","RawContent":null,"Title":"Ring class does not in Chrome 111/118+ because of extra comma","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite/playground\n\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS, Windows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/N8s1B7cVYF\n\n**Describe your issue**\nWhen generating ring class name tailwind adds:\n```\nvar(--tw-ring-inset,) 0 0 0 calc(40px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor)\n```\nsee extra comma after --tw-ring-inset, because of that it does not seem to work in older browser which are in supported by Tailwind like Chrome 111/118 I tested on latest Chrome 139 and it does work.\n\nFix seems to be remove extra comma.\n\nhttps://github.com/user-attachments/assets/dd326f51-c129-4ba7-8b62-3006fd0bd1c7","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18923","RelatedDescription":"Open issue \"Ring class does not in Chrome 111/118+ because of extra comma\" (#18923)"},{"Id":"3409615057","IsPullRequest":true,"CreatedAt":"2025-09-12T09:20:19","Actor":"RobinMalfait","Number":"18922","RawContent":null,"Title":"Do not migrate `variant = 'outline'` during upgrades","State":"closed","Body":"This PR improves the upgrade tool for shadcn/ui projects where the `variant = \"outline\"` is incorrectly migrated to `variant = \"outline-solid\"`.\n\nThis PR also handles a few more cases:\n\n```ts\n// As default argument\nfunction Button({ variant = \"outline\", ...props }: ButtonProps) { }\n\n// With different kinds of quotes (single, double, backticks)\nfunction Button({ variant = 'outline', ...props }: ButtonProps) { }\n\n// Regardless of whitespace\nfunction Button({ variant=\"outline\", ...props }: ButtonProps) { }\n\n// In JSX\n<Button variant=\"outline\" />\n\n// With different quotes and using JavaScript expressions\n<Button variant={'outline'} />\n\n// As an object property\nbuttonVariants({ variant: \"outline\" })\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18922","RelatedDescription":"Closed or merged PR \"Do not migrate `variant = 'outline'` during upgrades\" (#18922)"},{"Id":"3409028557","IsPullRequest":true,"CreatedAt":"2025-09-12T08:37:43","Actor":"depfu[bot]","Number":"18921","RawContent":null,"Title":"Update all pnpm dependencies (2025-09-12)","State":"closed","Body":"This is your weekly update of **all** pnpm dependencies. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n‚ú≥Ô∏è @emnapi/core (1.4.5 ‚Üí 1.5.0, minor) ¬∑ [Repo](https://github.com/toyobayashi/emnapi) ¬∑ [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.5.0) ¬∑ [Diff](https://github.com/toyobayashi/emnapi/compare/4afb0e72e28486a073e55d8fa2e00c9ea916d0f5...61628bd5e27679955f13cbff8f6573d66a5fc00c)\n\n‚ú≥Ô∏è @emnapi/runtime (1.4.5 ‚Üí 1.5.0, minor) ¬∑ [Repo](https://github.com/toyobayashi/emnapi) ¬∑ [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.5.0) ¬∑ [Diff](https://github.com/toyobayashi/emnapi/compare/4afb0e72e28486a073e55d8fa2e00c9ea916d0f5...61628bd5e27679955f13cbff8f6573d66a5fc00c)\n\n‚ú≥Ô∏è @emnapi/wasi-threads (1.0.4 ‚Üí 1.1.0, minor) ¬∑ [Repo](https://github.com/toyobayashi/emnapi) ¬∑ [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.1.0) ¬∑ [Diff](https://github.com/toyobayashi/emnapi/compare/14e3f418fda80d3eff5dd00d8310f3b662f4c09b...571f577dba78867d5403a18bec11fae9da651b04)\n\n‚ú≥Ô∏è @napi-rs/cli (3.0.0-alpha.78 ‚Üí 3.1.5, minor) ¬∑ [Repo](https://github.com/napi-rs/napi-rs)\n\n‚ú≥Ô∏è eslint-config-next (15.4.7 ‚Üí 15.5.2, minor)\n\n‚ú≥Ô∏è @types/bun (1.2.20 ‚Üí 1.2.21, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @types/react-dom (19.1.7 ‚Üí 19.1.9, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @types/semver (7.7.0 ‚Üí 7.7.1, patch) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n‚ú≥Ô∏è @vitejs/plugin-react (5.0.0 ‚Üí 5.0.2, patch) ¬∑ [Repo](https://github.com/vitejs/vite-plugin-react) ¬∑ [Changelog](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/CHANGELOG.md)\n\n‚ú≥Ô∏è bun (1.2.20 ‚Üí 1.2.21, patch) ¬∑ [Repo](https://github.com/oven-sh/bun)\n\n‚ú≥Ô∏è tslib (2.8.0 ‚Üí 2.8.1, patch) ¬∑ [Repo](https://github.com/Microsoft/tslib) ¬∑ [Release](https://github.com/microsoft/tslib/releases/tag/v2.8.1) ¬∑ [Diff](https://github.com/Microsoft/tslib/compare/ca5f7fb791f85ebf17c0102cdc632e9577b3e483...d72d6f70b36286bc3f94a3dda1e64dcb568b1370)\n\n‚ú≥Ô∏è turbo (2.5.4 ‚Üí 2.5.6, patch) ¬∑ [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will only send you the next scheduled PR once you merge or close this one.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu refresh</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n</dl></blockquote>\n</details>\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18921","RelatedDescription":"Closed or merged PR \"Update all pnpm dependencies (2025-09-12)\" (#18921)"},{"Id":"3404689036","IsPullRequest":true,"CreatedAt":"2025-09-11T09:09:50","Actor":"madasebrof","Number":"18917","RawContent":null,"Title":"Add support for `--max-breakpoint-*` theme variables","State":"closed","Body":"Summary\r\n\r\nThis PR adds support for `--max-breakpoint-*` theme variables, enabling desktop-first breakpoint workflows similar to Webflow. This complements the existing mobile-first `--breakpoint-*` system by providing max-width media\r\nqueries.\r\n\r\nMotivation\r\n\r\nCurrently, Tailwind v4 only supports mobile-first breakpoints via --breakpoint-* variables, which generate min-width media queries. Many designers and teams prefer desktop-first workflows where styles are defined for larger\r\nscreens and then overridden for smaller devices.\r\n\r\nThis is particularly useful for:\r\n- Teams migrating from Webflow or other desktop-first CSS frameworks\r\n- Projects that start with desktop designs and adapt down to mobile\r\n- Situations where max-width queries provide cleaner, more intuitive CSS\r\n\r\nChanges\r\n\r\nImplementation\r\n\r\n- Added --max-breakpoint-* variant support in src/variants.ts\r\n- Creates static variants for each --max-breakpoint-* theme variable\r\n- Generates max-width media queries using the same format as existing max-* variants\r\n- Uses descending sort order (largest breakpoints first) for proper CSS cascade\r\n\r\nUsage\r\n\r\nDefine desktop-first breakpoints in your theme:\r\n\r\n```css\r\n@theme {\r\n  --max-breakpoint-phone: 501px;\r\n  --max-breakpoint-tablet: 1001px;\r\n  --max-breakpoint-desktop: 1441px;\r\n}\r\n```\r\n\r\nUse them with intuitive, semantic class names:\r\n\r\n```html\r\n<!-- Desktop-first: starts as flex-row, becomes flex-col on phones -->\r\n<div class=\"flex flex-row phone:flex-col\">\r\n  <div>Content</div>\r\n  <div>Sidebar</div>\r\n</div>\r\n\r\n<!-- Mixed approach: combine with existing min-width breakpoints -->\r\n<div class=\"md:grid md:grid-cols-2 tablet:block phone:text-center\">\r\n  <!-- ... -->  \r\n</div>\r\n```\r\n\r\nGenerated CSS:\r\n\r\n```css\r\n@media not all and (min-width: 1441px) {\r\n  .desktop\\:hidden { display: none; }\r\n}\r\n\r\n@media not all and (min-width: 1001px) {\r\n  .tablet\\:block { display: block; }\r\n}\r\n\r\n@media not all and (min-width: 501px) {\r\n  .phone\\:flex-col { flex-direction: column; }\r\n}\r\n```\r\n\r\nKey Features\r\n\r\n- Semantic naming: Allow the use of meaningful breakpoint names like phone, tablet, desktop instead of size-based names\r\n- Desktop-first workflow: Define base styles for large screens, override for smaller devices\r\n- Seamless integration: Works alongside existing `--breakpoint-*` variables\r\n- Consistent behavior: Uses the same media query format and parsing logic as existing `@max-width` variants\r\n- Proper ordering: Automatically sorts breakpoints in descending order for optimal CSS cascade\r\n\r\nTesting\r\n\r\nAdded comprehensive test coverage including:\r\n- Basic functionality with custom breakpoint names\r\n- Breakpoint ordering (descending for max-width queries)\r\n- Mixed usage with existing min-width breakpoints\r\n- Edge cases and proper CSS generation\r\n\r\nAll existing tests continue to pass, ensuring no breaking changes.\r\n\r\nBackward Compatibility\r\n\r\nThis is a purely additive change that doesn't affect existing functionality:\r\n- Existing `--breakpoint-*` variables continue to work exactly as before\r\n- No changes to existing API or behavior\r\n- Can be used alongside existing breakpoint system\r\n\r\nExample Use Cases\r\n\r\nWebflow-style migration:\r\n```css\r\n@theme {\r\n  --max-breakpoint-tablet: 991px;\r\n  --max-breakpoint-mobile-landscape: 767px;\r\n  --max-breakpoint-mobile-portrait: 479px;\r\n}\r\n```\r\n\r\nComponent-specific responsive design:\r\n\r\n```html\r\n<nav class=\"desktop:flex desktop:justify-between tablet:block mobile:text-center\">\r\n<!-- Navigation that stacks on smaller screens -->\r\n</nav>\r\n\r\nMixed responsive strategies:\r\n<div class=\"lg:grid lg:grid-cols-3 tablet:grid tablet:grid-cols-2 mobile:block\">\r\n<!-- Hybrid approach using both min and max width breakpoints -->\r\n</div>\r\n```\r\n\r\nThis feature provides developers with more flexibility in their responsive design workflows while maintaining Tailwind's utility-first philosophy and consistent API patterns.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18917","RelatedDescription":"Closed or merged PR \"Add support for `--max-breakpoint-*` theme variables\" (#18917)"},{"Id":"3400317108","IsPullRequest":false,"CreatedAt":"2025-09-10T01:56:27","Actor":"stevengrimaldo","Number":"18911","RawContent":null,"Title":"LVH arbitrary values not generating classes in Safari","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.12\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js 15.5.2\n\n**What version of Node.js are you using?**\nv24.4.0\n\n**What browser are you using?**\nSafari 18.6\n\n**What operating system are you using?**\nmacOS Sequoia 15.6.1\n\n**Reproduction URL**\n\ni have validated that the classes generate properly in chrome but not safari except for the 1 class at all \"h-lvl\"\n\n**Describe your issue**\nThe following css is being written and not rendered as classes in safari\n\n- lg:-mt-[100lvh]\n- h-[60lvh]\n- mt-[50lvh]\n\nand so on, the only class that does ever render is h-lvh, but arbitrary values with lvh do not, so far i've only been able to get dvh to render with arbitrary values but i dont want to use dvh and should be able to use svh or lvh as stated in the docs (here)[https://tailwindcss.com/blog/tailwindcss-v3-4#dynamic-viewport-units]\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18911","RelatedDescription":"Closed issue \"LVH arbitrary values not generating classes in Safari\" (#18911)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-21T03:30:24.0059246Z","RunDurationInMilliseconds":534}