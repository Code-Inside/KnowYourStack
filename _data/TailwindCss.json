{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2461678937","IsPullRequest":true,"CreatedAt":"2024-08-12T18:53:01","Actor":"thecrypticace","Number":"14173","RawContent":null,"Title":"Add support for the `tailwindcss/plugin` export","State":"open","Body":"This PR adds support for the `tailwindcss/plugin` import which has historically been used to define custom plugins:\r\n\r\n```js\r\nimport plugin from \"tailwindcss/plugin\";\r\n\r\nexport default plugin(function ({ addBase }) {\r\n  addBase({\r\n    // ...\r\n  });\r\n});\r\n```\r\n\r\nThis also adds support for `plugin.withOptions` which was used to define plugins that took optional initilization options when they were registered in your `tailwind.config.js` file:\r\n\r\n```js\r\nimport plugin from \"tailwindcss/plugin\";\r\n\r\nexport default plugin.withOptions((options = {}) => {\r\n  return function ({ addBase }) {\r\n    addBase({\r\n      // ...\r\n    });\r\n  };\r\n});\r\n```\r\n\r\nWe've stubbed out support for the `config` argument but we're not actually doing anything with it at the time of this PR. The scope of this PR is just to allow people to create plugins that currently work using the raw function syntax but using the `plugin` and `plugin.withOptions` APIs. Support for `config` will land separately.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14173","RelatedDescription":"Open PR \"Add support for the `tailwindcss/plugin` export\" (#14173)"},{"Id":"2461625296","IsPullRequest":true,"CreatedAt":"2024-08-12T18:44:45","Actor":"thecrypticace","Number":"14172","RawContent":null,"Title":"Add support for `addBase` in plugins","State":"closed","Body":"This PR adds support for `addBase` in JS plugins which adds styles into the CSS base layer using `@layer base`. This exists for backwards compatibility with v3 but is not something we will encourage people to use going forward — in v4 it's better to just write these styles in a CSS file.\r\n\r\nIn v3, `@layer base` was something we compiled away and was only used for determining where to add some styles in the final CSS, but in v4 we are using native CSS layers. This means that `addBase` in v4 expects you to have a _real_ `@layer base` in your final CSS, which you will have as long as you are using `@import \"tailwindcss\"` to add Tailwind to your project.\r\n\r\nNow something like this works:\r\n```js\r\nfunction ({ addBase }) {\r\n  addBase({\r\n    'h1': { fontSize: '2em' },\r\n    'h2': { fontSize: '1.5em' },\r\n  })\r\n}\r\n```\r\n\r\nWhich will emit the following CSS:\r\n```css\r\n@layer base {\r\n  h1 {\r\n    font-size: 2em;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.5em;\r\n  }\r\n}\r\n```\r\n\r\nThe only limitation compared to v3 is that there is no way for you to wrap these styles in another custom layer.\r\n\r\nIn v3 you could do this:\r\n\r\n```css\r\n@layer my-base {\r\n  @tailwind base;\r\n}\r\n```\r\n\r\n…and then anything you added with `addBase` would end up exactly where `@tailwind base` was in your source CSS.\r\n\r\nBut in v4 there is no `@tailwind base`, so there's no way to wrap these styles in `@layer my-base` like in the example above. All base styles added by plugins are simply appended to the end of the stylesheet but wrapped in `@layer base` so they behave as if they are co-located with other base styles.\r\n\r\nOdds of this impacting anyone are extremely low, but if it proves to be an actual issue I think we could output these styles at the location of an optional `@tailwind base` rule if we detect it exists.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14172","RelatedDescription":"Closed or merged PR \"Add support for `addBase` in plugins\" (#14172)"},{"Id":"2456688853","IsPullRequest":true,"CreatedAt":"2024-08-12T17:11:58","Actor":"maurer2","Number":"14153","RawContent":null,"Title":"Add padding: inherit to tokens for padding","State":"closed","Body":"Hello, I think adding a way to set `padding: inherit` in tailwind would be a good idea.\r\nI opened up a discussion here: https://github.com/tailwindlabs/tailwindcss/discussions/14154\r\n\r\nCheers\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14153","RelatedDescription":"Closed or merged PR \"Add padding: inherit to tokens for padding\" (#14153)"},{"Id":"2458246441","IsPullRequest":true,"CreatedAt":"2024-08-12T10:44:26","Actor":"philipp-spiess","Number":"14165","RawContent":null,"Title":"Retry UI test assertions","State":"closed","Body":"We noticed that some of the tests depending on the `hover:` variant were flaky. After some investigation, we found that injected elements had the `:hover` state without us explicitly hovering over the element.\r\n\r\nTo avoid this, we now set up an explicit placeholder element to move the mouse to before running the tests.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14165","RelatedDescription":"Closed or merged PR \"Retry UI test assertions\" (#14165)"},{"Id":"2460436987","IsPullRequest":true,"CreatedAt":"2024-08-12T09:37:45","Actor":"philipp-spiess","Number":"14171","RawContent":null,"Title":"Fix Rust build by passing through RUSTUP_HOME variable","State":"closed","Body":"While rebasing on the latest changes on `next`, especially #14160, I noticed that my local `pnpm build` step was no longer working and erring with the following:\r\n\r\n```\r\n│ > @tailwindcss/oxide@4.0.0-alpha.19 build /Users/philipp/dev/tailwindcss/crates/node\r\n│ > npx napi build --platform --release --no-const-enum\r\n│\r\n│ Type Error: Could not parse the Cargo.toml: Error: Command failed: cargo metadata --format-version 1 --manifest-path \"/Users/philipp/dev/\r\n│ tailwindcss/crates/node/Cargo.toml\"\r\n│ error: rustup could not choose a version of cargo to run, because one wasn't specified explicitly, and no default is configured.\r\n│ help: run 'rustup default stable' to download the latest stable release of Rust and set it as your default toolchain.\r\n│\r\n│ error: rustup could not choose a version of cargo to run, because one wasn't specified explicitly, and no default is configured.\r\n│ help: run 'rustup default stable' to download the latest stable release of Rust and set it as your default toolchain.\r\n```\r\n\r\nIt turns out that with the changes in turbo v2, env variables no longer propagate to the individual tasks automatically but since I installed rustup outside of the default `~/.rustup` directory, the task was no longer able to find it.\r\n\r\nTo fix this, we now define `RUSTUP_HOME` as a global env to always pass through.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14171","RelatedDescription":"Closed or merged PR \"Fix Rust build by passing through RUSTUP_HOME variable\" (#14171)"},{"Id":"2459598171","IsPullRequest":false,"CreatedAt":"2024-08-11T13:40:13","Actor":"batazor","Number":"14169","RawContent":null,"Title":" Can't resolve 'tailwindcss/plugin'","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n\"tailwindcss\": \"4.0.0-alpha.19\"\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: Next.js 14/15\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v22.4.1\r\n\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n\r\n**Describe your issue**\r\n\r\nIs there a missing package or an error somewhere else? I couldn't find this library on npm","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14169","RelatedDescription":"Closed issue \" Can't resolve 'tailwindcss/plugin'\" (#14169)"},{"Id":"2459155410","IsPullRequest":true,"CreatedAt":"2024-08-10T16:29:09","Actor":"github834541","Number":"14168","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Update README to better understanding","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14168","RelatedDescription":"Closed or merged PR \"Update README.md\" (#14168)"},{"Id":"2458218955","IsPullRequest":false,"CreatedAt":"2024-08-09T18:12:02","Actor":"Lexachoc","Number":"14164","RawContent":null,"Title":"Double backslash in js to escape class name with underscore will result in tailwindcss not being generated correctly","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?** \r\n\r\nv3.4.9\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nI use `npx tailwindcss -i ./src/input.css -o ./dist/output.css --watch`\r\n\r\n**What version of Node.js are you using?** \r\n\r\nv20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 10\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/Z56PzBtttq\r\n\r\n**Describe your issue**\r\n\r\nWhen I use the selector to make the outline show when hovering (only when the class `sorting_disabled` is not exist):\r\n\r\n`[&:not(.sorting\\\\_disabled)]:hover:outline` in js file (I need to escape the backslash to make it rendered correctly in HTML as:\r\n\r\n`[&:not(.sorting\\_disabled)]:hover:outline`\r\n\r\nThe problem is, the generated css becomes:\r\n\r\n```\r\n.\\[\\&\\:not\\(\\.sorting\\\\\\\\_disabled\\)\\]\\:hover\\:outline:hover:not(.sorting\\_disabled) {\r\n  outline-style: solid;\r\n}\r\n```\r\nwhen using double backslash in js file, which is not correct.\r\n\r\nBut if I don't escape the backslash in js, although it generates the correct css:\r\n\r\n```\r\n.\\[\\&\\:not\\(\\.sorting\\\\_disabled\\)\\]\\:hover\\:outline:hover:not(.sorting\\_disabled) {\r\n  outline-style: solid;\r\n}\r\n```\r\n\r\nbut the class name in HTML becomes `[&:not(.sorting_disabled)]:hover:outline` which is then not escaped correctly.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14164","RelatedDescription":"Closed issue \"Double backslash in js to escape class name with underscore will result in tailwindcss not being generated correctly\" (#14164)"},{"Id":"2458288857","IsPullRequest":true,"CreatedAt":"2024-08-09T17:57:16","Actor":"RobinMalfait","Number":"14167","RawContent":null,"Title":"Fix v4 release workflow","State":"closed","Body":"This PR fixes the release workflow\r\n\r\n- We added a postbuild step so that any arguments/flags passed to the `pnpm run build` command are forwarded to the underlying command.\r\n- We made sure that we run any `pnpm` specific flags before the actual command\r\n- Cleaned up the CI workflow a bit\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14167","RelatedDescription":"Closed or merged PR \"Fix v4 release workflow\" (#14167)"},{"Id":"2458271998","IsPullRequest":true,"CreatedAt":"2024-08-09T16:29:13","Actor":"github834541","Number":"14166","RawContent":null,"Title":"Update README.md","State":"closed","Body":"change title to better understanding\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14166","RelatedDescription":"Closed or merged PR \"Update README.md\" (#14166)"},{"Id":"2458207001","IsPullRequest":true,"CreatedAt":"2024-08-09T15:58:30","Actor":"RobinMalfait","Number":"14162","RawContent":null,"Title":"Prepare `v4.0.0-alpha.19`","State":"closed","Body":"Prepare next `4.0.0-alpha.19` release\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14162","RelatedDescription":"Closed or merged PR \"Prepare `v4.0.0-alpha.19`\" (#14162)"},{"Id":"2458218920","IsPullRequest":true,"CreatedAt":"2024-08-09T15:54:06","Actor":"philipp-spiess","Number":"14163","RawContent":null,"Title":"Add Next.js integration test","State":"open","Body":"Using the [new integration test setup](https://github.com/tailwindlabs/tailwindcss/pull/14089), this PR adds a test for a V4 Next.js setup using the Postcss plugin. It's testing both a full build and the dev mode (non-turbo for now).\r\n\r\nBecause of webpack, tests are quite slow which is worrisome since we probably need to add many more integrations in the future. One idea I have is that we separate tests in two buckets: _essential_ tests that run often and are fast and advanced suites that we only run on CI via custom, non-blocking, jobs.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14163","RelatedDescription":"Open PR \"Add Next.js integration test\" (#14163)"},{"Id":"2455904038","IsPullRequest":true,"CreatedAt":"2024-08-09T15:43:33","Actor":"thecrypticace","Number":"14150","RawContent":null,"Title":"Unify implementations of compile and `__unstable__loadDesignSystem`","State":"closed","Body":"Right now there's some minor duplication and a ton of missing stuff in `__unstable__loadDesignSystem` — this PR makes sure the functionality is unified between it and `compile()`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14150","RelatedDescription":"Closed or merged PR \"Unify implementations of compile and `__unstable__loadDesignSystem`\" (#14150)"},{"Id":"2457895661","IsPullRequest":true,"CreatedAt":"2024-08-09T14:12:25","Actor":"RobinMalfait","Number":"14160","RawContent":null,"Title":"Bump dependencies","State":"closed","Body":"This PR bumps dependencies\n\nWe also make some dependencies `catalog:` dependencies, which allows us to keep\nthe version in sync. E.g.: `lightningcss` and `@types/node`.\n\nBumped `turbo` to the latest version + enabled the new UI\n\nFixed a bug in the tests now that `lightningcss` outputs the correct value.\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14160","RelatedDescription":"Closed or merged PR \"Bump dependencies\" (#14160)"},{"Id":"2453907674","IsPullRequest":false,"CreatedAt":"2024-08-09T14:09:26","Actor":"sntran","Number":"14143","RawContent":null,"Title":"[v4]: Can't use `@apply` inside `@utility`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v4.0.0-alpha.18\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`@tailwindcss/cli`\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v20.12.2\r\n\r\n**What browser are you using?**\r\n\r\nChrome Version 127.0.6533.89 (Official Build) (arm64)\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/5pjBCbzFvp?file=css\r\n\r\n**Describe your issue**\r\n\r\nWhen using `@utility` to define custom utility, any `@apply` is ignored inside. We have to use actual CSS to define the utility, i.e. `font-size: var(--font-size-4xl);`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14143","RelatedDescription":"Closed issue \"[v4]: Can't use `@apply` inside `@utility`\" (#14143)"},{"Id":"2454090796","IsPullRequest":true,"CreatedAt":"2024-08-09T14:09:25","Actor":"RobinMalfait","Number":"14144","RawContent":null,"Title":"Ensure `@apply` works inside `@utility`","State":"closed","Body":"This PR fixes an issue where `@apply` was not handled if it was used inside of `@utility`.\r\n\r\nYou should now be able to do something like this:\r\n```css\r\n@utility btn {\r\n  @apply flex flex-col bg-white p-4 rounded-lg shadow-md;\r\n}\r\n```\r\n\r\nIf you then use `btn` as a class, the following CSS will be generated:\r\n```css\r\n.btn {\r\n  border-radius: var(--radius-lg, .5rem);\r\n  background-color: var(--color-white, #fff);\r\n  padding: var(--spacing-4, 1rem);\r\n  --tw-shadow: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;\r\n  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\r\n  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\r\n  flex-direction: column;\r\n  display: flex;\r\n}\r\n```\r\n\r\nThis PR also makes sure that you can use custom `@utility` inside other `@utility` via `@apply`. E.g.:\r\n```css\r\n@utility foo {\r\n  color: red;\r\n}\r\n\r\n@utility bar {\r\n  color: red;\r\n  @apply hover:foo;\r\n}\r\n```\r\n\r\nIf we detect a circular dependency, then we will throw an error since circular dependencies are not allowed. E.g.:\r\n```css\r\n@utility foo {\r\n  @apply hover:bar;\r\n}\r\n\r\n@utility bar {\r\n  @apply focus:baz;\r\n}\r\n\r\n@utility baz {\r\n  @apply dark:foo;\r\n}\r\n```\r\nRegardless of which utility you use, eventually it will apply itself.\r\n\r\nFixes: #14143\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14144","RelatedDescription":"Closed or merged PR \"Ensure `@apply` works inside `@utility`\" (#14144)"},{"Id":"2457551142","IsPullRequest":true,"CreatedAt":"2024-08-09T10:41:58","Actor":"philipp-spiess","Number":"14158","RawContent":null,"Title":"Vite: Support Tailwind in Vue <style> blocks","State":"closed","Body":"This PR adds support to transforming `<style>` blocks emitted by Vue components with tailwindcss when the `@tailwindcss/vite` is used. \r\n\r\nExample:\r\n\r\n```vue\r\n<style>\r\n  @import 'tailwindcss/utilities';\r\n  @import 'tailwindcss/theme' theme(reference);\r\n  .foo {\r\n    @apply text-red-500;\r\n  }\r\n</style>\r\n<template>\r\n <div class=\"underline foo\">Hello Vue!</div>\r\n</template>\r\n```\r\n\r\nAdditionally, this PR also adds an integration test.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14158","RelatedDescription":"Closed or merged PR \"Vite: Support Tailwind in Vue <style> blocks\" (#14158)"},{"Id":"2456482956","IsPullRequest":false,"CreatedAt":"2024-08-08T19:29:29","Actor":"aentwist","Number":"14152","RawContent":null,"Title":"Upgrade dependency postcss-load-config to support postcss configs that use ESM with TypeScript","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 5.2.11 (@ electron-forge 7.4.0 x electron 30.0.2)\r\njust using the vite layer to debug (`npx vite`)\r\n\r\n**What version of Node.js are you using?**\r\n\r\n22.1.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nwin11\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/aentwist/tailwind-upgrade-postcss-repro\r\n\r\n**Describe your issue**\r\n\r\nMy project cannot handle postcss config that uses ESM and TypeScript. Apparently there was a fix for this in v5 https://github.com/postcss/postcss-load-config/issues/239.\r\n\r\n```\r\n$ npm why postcss-load-config\r\npostcss-load-config@4.0.2 dev\r\nnode_modules/postcss-load-config\r\n  postcss-load-config@\"^4.0.1\" from tailwindcss@3.4.3\r\n  node_modules/tailwindcss\r\n    dev tailwindcss@\"^3.4.3\" from the root project\r\n```\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/f65023efb97832660dc17cf954504f9f156047ba/package.json#L84\r\n\r\nActually though, [postcss-load-config is now on v6](https://www.npmjs.com/package/postcss-load-config?activeTab=versions). The breaking changes are very light - a [node upgrade](https://github.com/postcss/postcss-load-config/blob/824a7de5f625310505504b2d79526ee8d608194f/CHANGELOG.md#breaking-changes-1) that drops support for versions of node that have been [unmaintained for a year minimum now](https://nodejs.org/en/about/previous-releases#release-schedule) [v5], and [requiring yaml users to install their own yaml dependency](https://github.com/postcss/postcss-load-config/blob/824a7de5f625310505504b2d79526ee8d608194f/CHANGELOG.md#breaking-changes) [v6].\r\n\r\nI see that unfortunately tailwind still supports old versions of node (14),\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/f65023efb97832660dc17cf954504f9f156047ba/package.json#L116\r\n\r\nso I guess this *is* a breaking change. In that case, may as well upgrade all the way to whatever latest is when the opportunity comes.\r\n\r\n---\r\n\r\nFor now, I will use commonjs and TypeScript, by using a .cts extension for the postcss config. This seems to work fine, but I know that for some reason in these configurations the postcss config file produces no warning if not present, however if present produces a seemingly related warning when running the app (`vite`) and loading the page.\r\n\r\n```\r\n(node:19428) Warning: To load an ES module, set \"type\": \"module\" in the package.json or use the .mjs extension.\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n```\r\n\r\nI was hoping that just supporting ESM and TypeScript would make it go away. Sadly for completeness, I cannot figure how to pass that node option through vite to get the full trace.\r\n\r\nMy postcss config is the recommended starter,\r\n\r\n```ts\r\nexport default {\r\n  plugins: {\r\n    tailwindcss: {},\r\n    autoprefixer: {},\r\n  },\r\n};\r\n\r\n```\r\n\r\nI've tried various combinations of file extension and export syntax with `\"type\": \"module\"` and cannot make this warning disappear. For TS, I'm using `\"module\": \"nodenext\"`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14152","RelatedDescription":"Open issue \"Upgrade dependency postcss-load-config to support postcss configs that use ESM with TypeScript\" (#14152)"},{"Id":"2456185391","IsPullRequest":true,"CreatedAt":"2024-08-08T16:18:49","Actor":"philipp-spiess","Number":"14151","RawContent":null,"Title":"Vite: Support Tailwind in Svelte <style> blocks","State":"open","Body":"This PR is currently in draft state. I will update the description before opening it up for review.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14151","RelatedDescription":"Open PR \"Vite: Support Tailwind in Svelte <style> blocks\" (#14151)"},{"Id":"2450519875","IsPullRequest":true,"CreatedAt":"2024-08-08T15:49:06","Actor":"philipp-spiess","Number":"14132","RawContent":null,"Title":"Use `import` to load plugins","State":"closed","Body":"Alternative to #14110\r\n\r\nThis PR changes the way how we load plugins to be compatible with ES6 async `import`s. This allows us to load plugins even inside the browser but it comes at a downside: We now have to change the `compile` API to return a `Promise`...\r\n\r\nSo most of this PR is rewriting all of the call sites of `compile` to expect a promise instead of the object.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14132","RelatedDescription":"Closed or merged PR \"Use `import` to load plugins\" (#14132)"},{"Id":"2455813986","IsPullRequest":false,"CreatedAt":"2024-08-08T14:19:57","Actor":"SolidAnonDev","Number":"14149","RawContent":null,"Title":"Broad Glob Patterns content config throws warning when anything containing the word `vendor` is in the specified folder","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`latest: 3.4.8`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n```\r\n\"next\": \"13.5.1\",\r\n    \"postcss\": \"^8.4.41\",\r\n    \"react\": \"18.2.0\",\r\n    \"react-dom\": \"18.2.0\",\r\n    \"tailwindcss\": \"^3.4.8\",\r\n```\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`>18`\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\n[Reproduction Link](https://stackblitz.com/edit/stackblitz-starters-tvynhn?file=app%2Fvendor.ts)\r\n\r\n**Describe your issue**\r\n\r\nI am running a project and have a database entity called `vendor`, thus I have a few files containing the word `vendor`, though I have no direct matches specifically. Things like `vendor-service.ts` and `edit-vendor-form.tsx` including a folder named `edit-vendors/` as a file-routed page and so on.\r\n\r\nAny folder or file containing the word `vendor` in any of the folders included in the glob pattern in `tailwind.config.js` will result in the following warning thrown:\r\n\r\n```\r\nwarn - Your `content` configuration includes a pattern which looks like it's accidentally matching all of `vendor` and can cause serious performance issues.\r\nwarn - Pattern: `./app/**/*.ts`\r\nwarn - See our documentation for recommendations:\r\nwarn - https://tailwindcss.com/docs/content-configuration#pattern-recommendations\r\n```\r\n\r\nThis is related to the warnings included in broad glob patterns in #14140 - pointed out [in this comment](https://github.com/tailwindlabs/tailwindcss/discussions/14145#discussioncomment-10269135) by @adamwathan that vendor is the node_modules equivalent in PHP projects. \r\n\r\n\r\n### Instructions to reproduce\r\n\r\nThe error should show the first time stackblitz project loads and compiles `/page`, but if you miss it or don't see it:\r\n\r\n1. Open Stackblitz Link - allow dependencies to install\r\n2. _Stop the server in the terminal using Ctrl+C_\r\n3. Start again using the command `npm run dev`\r\n4. When `/page` compiles, you will see the above warning thrown\r\n\r\n\r\nIf you want to experiment, you will notice you can delete the files and folders containing the word `vendor` and the issue will stop.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14149","RelatedDescription":"Closed issue \"Broad Glob Patterns content config throws warning when anything containing the word `vendor` is in the specified folder\" (#14149)"},{"Id":"2455574622","IsPullRequest":true,"CreatedAt":"2024-08-08T13:05:52","Actor":"philipp-spiess","Number":"14147","RawContent":null,"Title":"Don't warn about broad globs in vendor folders","State":"closed","Body":"After shipping the new warning that prevents unexpected scanning of all dependencies in 3.4.8, we noticed that it was firing more often than we wanted to. \r\n\r\nThe heuristics we added works by finding broad glob patterns (once that contain `/**/`) and when those are found and are the _sole pattern used to match a file of a known-large directory_, we were showing the warning. The motivation for this is that we have seen time and time again that an incorrect config like `/**/*.js` can cause recursive scans through _all_ dependencies including many minified libraries which greatly impacts performance. \r\n\r\nIn #14140, we were adding two known-large directory names: \r\n\r\n- `node_modules` (used by npm)\r\n- `vendor` (used by PHP)\r\n\r\nThe problem with the `vendor` name though is that it is more generic than we would like it and there are legit use cases to have a folder named `vendor` inside your component folder. Additionally, PHP vendors behave a bit differently and it's not super common to have minified build files in that folder (which is one of the main reasons for the slow builds). Because of this, we decided to revert the change for `vendor` and only scan for `node_modules` going forward.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14147","RelatedDescription":"Closed or merged PR \"Don't warn about broad globs in vendor folders\" (#14147)"},{"Id":"2450672244","IsPullRequest":true,"CreatedAt":"2024-08-08T10:02:20","Actor":"philipp-spiess","Number":"14133","RawContent":null,"Title":"Add `test.debug` to integration tests","State":"closed","Body":"While working on #14078, there were a couple of debugging  techniques that we were using quite frequently:\r\n\r\n- Being able to `cd` into the test setup\r\n- Seeing the stdio and stdout data in real-time (this currently requires us to mark a test as failing)\r\n- Checking the exact commands that are being run\r\n\r\nSince we naturally worked around this quite often, I decided to make this a first-level API with the introduction of a new `test.debug` flag. When set, it will:\r\n\r\n- Create the test setup in the project dir within a new `.debug` folder and won't delete it after the run. Having it in an explicit folder allows us to easily delete it manually when we need to.\r\n- Logs all run commands to the console (`>` for a sync call, `>&` for a spawned process)\r\n- Logs stdio and stderr to the console in real time.\r\n- Run the test as `.only`\r\n\r\n<img width=\"2267\" alt=\"Screenshot 2024-08-06 at 13 19 49\" src=\"https://github.com/user-attachments/assets/1b204ac2-feee-489e-9cd8-edf73c0f2abd\">","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14133","RelatedDescription":"Closed or merged PR \"Add `test.debug` to integration tests\" (#14133)"},{"Id":"2453824318","IsPullRequest":false,"CreatedAt":"2024-08-07T16:12:21","Actor":"phenomen","Number":"14142","RawContent":null,"Title":"[v4] @source directive is included in the generated CSS","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`4.0.0-alpha.18`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite `5.3.5`\r\n\r\n**What version of Node.js are you using?**\r\n\r\nBun `1.1.21`\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/wBAMLvsEJZ?size=1874x1117\r\n\r\n**Describe your issue**\r\n\r\nIn the reproduction generated CSS you can see `@source \"../templates/**/*.hbs\";` even though it should have been purged.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14142","RelatedDescription":"Closed issue \"[v4] @source directive is included in the generated CSS\" (#14142)"},{"Id":"2453009781","IsPullRequest":true,"CreatedAt":"2024-08-07T14:55:21","Actor":"RobinMalfait","Number":"14140","RawContent":null,"Title":"Warn when broad glob patterns are used in the content configuration","State":"closed","Body":"When you use a glob pattern in your `content` configuration that is too broad, it could be that you are accidentally including files that you didn't intend to include. E.g.: all of `node_modules`\r\n\r\nThis has been documented in the [Tailwind CSS documentation](https://tailwindcss.com/docs/content-configuration#pattern-recommendations), but it's still something that a lot of people run into.\r\n\r\nThis PR will try to detect those patterns and show a big warning to let you know if you may have done something wrong.\r\n\r\nWe will show a warning if all of these conditions are true:\r\n\r\n1. We detect `**` in the glob pattern\r\n2. _and_ you didn't explicitly use `node_modules` in the glob pattern\r\n3. _and_ we found files that include `node_modules` in the file path\r\n4. _and_ no other globs exist that explicitly match the found file\r\n\r\nWith these rules in place, the DX has nice trade-offs:\r\n\r\n1. Very simple projects (that don't even have a `node_modules` folder), can simply use `./**/*` because while resolving actual files we won't see files from `node_modules` and thus won't warn.\r\n2. If you use `./src/**` and you do have a `node_modules`, then we also won't complain (unless you have a `node_modules` folder in the `./src` folder).\r\n3. If you work with a 3rd party library that you want to make changes to. Using an explicit match like `./node_modules/my-package/**/*` is allowed because `node_modules` is explicitly mentioned.\r\n\r\nNote: this only shows a warning, it does not stop the process entirely. The warning will be show when the very first file in the `node_modules` is detected.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14140","RelatedDescription":"Closed or merged PR \"Warn when broad glob patterns are used in the content configuration\" (#14140)"},{"Id":"2451270783","IsPullRequest":true,"CreatedAt":"2024-08-07T14:24:15","Actor":"RobinMalfait","Number":"14135","RawContent":null,"Title":"Apply general feedback for `@sources`","State":"closed","Body":"Part of #14078\r\n\r\nThis PR applies general feedback to the `@sources` umbrella PR.\r\n\r\nThis PR includes the following changes:\r\n- Used real classes instead of class-like objects.\r\n- Only handle PostCSS imports when `@import` is used.\r\n- Improve some comments\r\n- Improve naming of `GlobEntry` (`glob.glob` -> `glob.pattern`)\r\n- Use `scanFiles` on the `scanDirResult` as-if it's an incremental scan (under\r\n  the hood we still do a full scan right now).\r\n- Renamed `content_paths` to `sources`\r\n\r\nThis is a separate PR just so that we can merge the umbrella PR un-squashed for each sub-PR. This way all the commits here won't show up in the `next` branch as-is.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14135","RelatedDescription":"Closed or merged PR \"Apply general feedback for `@sources`\" (#14135)"},{"Id":"2449195337","IsPullRequest":true,"CreatedAt":"2024-08-07T14:09:01","Actor":"RobinMalfait","Number":"14129","RawContent":null,"Title":"Add `inert` variant","State":"closed","Body":"This PR adds a new `inert` variant.\r\n\r\nWe use `:where([inert], [inert] *)`, because the element with the `inert` attribute and any of its descendants will be inert.\r\n\r\nFor example, both these buttons will have `opacity-50`:\r\n\r\n```html\r\n<button inert class=\"inert:opacity-50\">I am inert</button>\r\n<div inert>\r\n  <button class=\"inert:opacity-50\">I am also inert</button>\r\n</div>\r\n```\r\n\r\nSee: https://play.tailwindcss.com/Jqedv6phGn\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14129","RelatedDescription":"Closed or merged PR \"Add `inert` variant\" (#14129)"},{"Id":"2450973395","IsPullRequest":true,"CreatedAt":"2024-08-07T13:50:26","Actor":"philipp-spiess","Number":"14134","RawContent":null,"Title":"Error on invalid @plugin usage","State":"closed","Body":"This PR just adds two minor errors to guard against invalid `@plugin` usage similarly to what we do with `@source` in \r\nhttps://github.com/tailwindlabs/tailwindcss/pull/14078.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14134","RelatedDescription":"Closed or merged PR \"Error on invalid @plugin usage\" (#14134)"},{"Id":"2449106301","IsPullRequest":true,"CreatedAt":"2024-08-06T09:57:01","Actor":"RobinMalfait","Number":"14127","RawContent":null,"Title":"Rename `@content` to `@source`","State":"closed","Body":"This PR renames the `@content` directive to `@source`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14127","RelatedDescription":"Closed or merged PR \"Rename `@content` to `@source`\" (#14127)"},{"Id":"2449130758","IsPullRequest":false,"CreatedAt":"2024-08-05T18:09:35","Actor":"tance77","Number":"14128","RawContent":null,"Title":"List Cursor Position Content Editable","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n3.4.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwindcss Playground\r\n\r\nVue3, Vite\r\n\r\n**What version of Node.js are you using?**\r\nv22.5.1\r\n\r\n**What browser are you using?**\r\nChrome, Safari, Edge\r\n\r\n**What operating system are you using?**\r\nmacOS, Windows\r\n\r\n**Reproduction URL**\r\n[Reproduction URL](https://play.tailwindcss.com/8Ne5OpAa72)\r\n\r\n\r\n\r\n**Describe your issue**\r\n\r\nI've created a simple div that has the `contenteditable` flag set to true. Within this div contains an `ol` and a `li` element. As you can see in the preview on the right-hand side when you click into it the Cursor is on the left side of the `li` which it should be on the right side of the `li` If you type any character it seems to correct itself. \r\n\r\nI would expect the cursor to be on the right-hand side of the `1.` \r\n\r\n\r\nNo TailwindCss\r\n\r\n```html\r\n<div style=\"padding: 0.25rem;\">\r\n    <div contenteditable=\"true\" style=\"padding: 0.25rem; border: 1px solid black;\">\r\n        <ol class=\"\">\r\n            <li></li>\r\n        </ol>\r\n    </div>\r\n</div>\r\n\r\n```\r\n\r\n![Screenshot 2024-08-05 at 10 48 44 AM](https://github.com/user-attachments/assets/543bfdb5-2d4c-44f4-be45-f33bdeb694d2)\r\n\r\nNotice the cursor is on the right side of the list\r\n\r\n\r\nWith TailwindCSS\r\n\r\n![Screenshot 2024-08-05 at 10 50 17 AM](https://github.com/user-attachments/assets/69279287-775c-41eb-bffe-5dd59863e917)\r\n\r\n\r\nNotice the cursor is on the left side\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14128","RelatedDescription":"Closed issue \"List Cursor Position Content Editable\" (#14128)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-08-13T03:30:22.768451Z","RunDurationInMilliseconds":478}