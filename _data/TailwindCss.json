{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2939423635","IsPullRequest":false,"CreatedAt":"2025-03-21T20:18:13","Actor":"stefanprobst","Number":"17332","RawContent":null,"Title":"not all `@keyframes` included in generated output","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.15\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnextjs\n\n**What version of Node.js are you using?**\n\n22\n\n**What browser are you using?**\n\nfirefox\n\n**What operating system are you using?**\n\nlinux\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/dHTQWVQ1kz?file=css\n\n**Describe your issue**\n\ni am defining an animation in a `@theme` block which references two `@keyframes` by name. depending on the order, only one or both keyframes are included in the generated css:\n\n```css\n@import \"tailwindcss\";\n\n@theme {\n  /* This adds only the \"spin\" keyframes to the generated css. */\n  --animate-test: 1000ms ease-out 500ms both fade-in, 1000ms linear 500ms spin infinite;\n\n  /* This adds both \"spin\" and \"fade-in\" keyframes to the generated css - the only difference is the order in which the two animations are listed. */\n  /* --animate-test: 1000ms linear 500ms spin infinite, 1000ms ease-out 500ms both fade-in; */\n\n  @keyframes fade-in {\n    from { opacity: 0% }\n    to { opacity: 100% }\n  }\n}\n```\n\n(see the playground link above)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17332","RelatedDescription":"Open issue \"not all `@keyframes` included in generated output\" (#17332)"},{"Id":"2939288987","IsPullRequest":false,"CreatedAt":"2025-03-21T19:11:50","Actor":"theklinks22","Number":"17330","RawContent":null,"Title":"overscroll-auto not working on iOS & iPadOS","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.15\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.3\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\niOS 18.3.2\niPadOS 18.1.1\n\n**Reproduction URL**\n\nIt's broken on the docs too:\nhttps://tailwindcss.com/docs/overscroll-behavior\n\n**Describe your issue**\n\nI have several containers with scroll-able content, on iOS and iPadOS when overscroll is set to 'auto', the content just behaves as 'contain' does. \n\nThe user must touch outside of the container to continue scrolling the page.\n\n**Additional Info**\n- _overscroll-none_ works as intended on these operating systems\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17330","RelatedDescription":"Open issue \"overscroll-auto not working on iOS & iPadOS\" (#17330)"},{"Id":"2938724058","IsPullRequest":false,"CreatedAt":"2025-03-21T16:27:31","Actor":"thomas-noimos","Number":"17326","RawContent":null,"Title":"Potential Windows issue","State":"closed","Body":"I'm facing some weird issues on Windows since version 4.0.7. When I was using version 4.0.0, some binaries were not automatically installed. I then installed them and things worked properly (although it was annoying having OS specific libs commited in the package.json). Now, since 4.0.7, I no longer see the crash error that the library is missing, however the styles are not properly generated.\n\nI have my repo cloned exactly the same way via WSL and there everything seems to work smoothly.\n\nExample:\nWSL:\n![Image](https://github.com/user-attachments/assets/3e032676-f8bf-4876-b07f-47ca178a0f90)\n\nWindows:\n\n![Image](https://github.com/user-attachments/assets/ff743f28-3e6d-4135-97ef-03260dbce8bd)\n\nI'm missing a lot of generated CSS classes there.\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.15\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v6\n\n**What version of Node.js are you using?**\n\nTried in 18, 20 and 22\n\n**What browser are you using?**\nBrave\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17326","RelatedDescription":"Closed issue \"Potential Windows issue\" (#17326)"},{"Id":"2936941562","IsPullRequest":false,"CreatedAt":"2025-03-21T14:43:38","Actor":"davidrunger","Number":"17313","RawContent":null,"Title":"Some Tailwind classes are not extracted from Pug templates in Vue when elements have attributes","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.15 (the latest released version, at the time of writing)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.2, Vue 3.5.13, Pug 3.0.3 (the latest released version of each, at the time of writing)\n\n**What version of Node.js are you using?**\n\nv22.14.0 (the latest LTS release, at the time of writing)\n\n**What browser are you using?**\n\nFirefox (though I don't think it's relevant)\n\n**What operating system are you using?**\n\nLinux (Debian / MX Linux) (though I don't think it's relevant)\n\n**Reproduction URL**\n\nI cannot provide a Tailwind Play URL, because this bug is particular to Pug templates, whereas Tailwind Play only supports plain HTML.\n\nBut here's a public GitHub repo with a minimal reproduction: https://github.com/davidrunger/tailwind-pug-attr-bug-demo\n\nAnd here's that GitHub repo imported into CodeSandbox: https://codesandbox.io/p/github/davidrunger/tailwind-pug-attr-bug-demo/main?file=%2Fsrc%2FApp.vue%3A4%2C1\n\n**Describe your issue**\n\nCSS styles are sometimes not included for some Tailwind classes in Pug templates in my Vue project.\n\nIn the reproduction linked above, there is this Vue component:\n\n```vue\n<template lang=\"pug\">\n.text-sky-600.bg-neutral-900(title=\"A tooltip\") This div has an HTML attribute.\n</template>\n```\n\n### Actual\n\nWhen viewed in the browser, only the `text-sky-600` class has any visible effect (making the text blue). The `bg-neutral-900` class does not have any effect (when served either via the Vite hot-reloading dev server or when compiled and viewed via the Vite static production preview server).\n\n![Image](https://github.com/user-attachments/assets/53527c46-6eeb-486d-9a24-45612204bdf5)\n\n### Expected\n\nI expect that the `bg-neutral-900` class in the Pug Vue template would cause Tailwind to include CSS that gives that text a dark background, which is what happens if we go back to `tailwindcss` and `@tailwindcss/vite` at v4.0.9 :\n\n![Image](https://github.com/user-attachments/assets/1fc0a7c0-57b7-4f24-96b8-a00fce23a2d5)\n\n**Additional context:**\n\nI recently reported a similar bug for this environment (Vue templates using Pug) here: #17211. That was fixed by #17252, which was included in the Tailwind 4.0.15 release today. Although that issue was fixed, this different issue (where the presence of an HTML attribute seems to cause not all Tailwind classes to be extracted from the Pug Vue template) is present in 4.0.15.\n\nThank you for Tailwind and for taking a look at this bug!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17313","RelatedDescription":"Closed issue \"Some Tailwind classes are not extracted from Pug templates in Vue when elements have attributes\" (#17313)"},{"Id":"2937713934","IsPullRequest":true,"CreatedAt":"2025-03-21T14:43:37","Actor":"RobinMalfait","Number":"17320","RawContent":null,"Title":"Fix class extraction followed by `(` in Pug","State":"closed","Body":"This PR fixes an issue where a class shorthand in Pug followed by a `(` is not properly extracted.\r\n\r\n```html\r\n<template lang=\"pug\">\r\n.text-sky-600.bg-neutral-900(title=\"A tooltip\") This div has an HTML attribute.\r\n</template>\r\n```\r\n\r\nThe `text-sky-600` is extracted, but the `bg-neutral-900` is not.\r\n\r\nFixes: #17313\r\n\r\n# Test plan\r\n\r\n1. Added test to cover this case\r\n2. Existing tests pass (after a few small adjustments due to _more_ extracted candidates, but definitely not _less_)\r\n3. Verified against the original issue (top is before, bottom is this PR)\r\n<img width=\"1307\" alt=\"image\" src=\"https://github.com/user-attachments/assets/68a0529f-63ad-477d-a342-e3f91c5a1690\" />\r\n\r\nWe had this exact same bug in Slim (https://github.com/tailwindlabs/tailwindcss/pull/17278). Since Pug, Slim and Haml are the only pre processors we have right now with this dot-separated class notation I also double checked the Haml pre-processor if this is an issue or not (and it's already covered there).\r\n\r\n<img width=\"1263\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c658168b-d124-46c9-9ec0-9697151a57bf\" />","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17320","RelatedDescription":"Closed or merged PR \"Fix class extraction followed by `(` in Pug\" (#17320)"},{"Id":"2936691016","IsPullRequest":false,"CreatedAt":"2025-03-21T12:44:26","Actor":"brenotx","Number":"17312","RawContent":null,"Title":"npx @tailwindcss/upgrade not working with v4.0.15","State":"closed","Body":"`npx @tailwindcss/upgrade`\n\nstopped working after v4.0.15\n\n`npx @tailwindcss/upgrade@4.0.14` works fine.\n\n<img width=\"483\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4367a56b-07c7-47a2-9ac1-13f76df409c9\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17312","RelatedDescription":"Closed issue \"npx @tailwindcss/upgrade not working with v4.0.15\" (#17312)"},{"Id":"2937959075","IsPullRequest":false,"CreatedAt":"2025-03-21T10:35:06","Actor":"basarozcan","Number":"17322","RawContent":null,"Title":"Migration from v3 to v4 giving errors during adding variants","State":"closed","Body":"What version of Tailwind CSS are you using?\nv3.4.10 -> v4.0.15\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\nAstro, vue, vite\n\nWhat version of Node.js are you using?\nNode v20.15.0\n\nWhat browser are you using?\nChrome\n\nWhat operating system are you using?\nmacOs\n\nReproduction URL\n-\n\nDescribe your issue\nAfter starting migration from v3 to v4, cli stopped with this error message:\n`addVariant('active::after') defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17322","RelatedDescription":"Closed issue \"Migration from v3 to v4 giving errors during adding variants\" (#17322)"},{"Id":"2937545661","IsPullRequest":false,"CreatedAt":"2025-03-21T07:23:54","Actor":"sibiraj-s","Number":"17318","RawContent":null,"Title":"Performance issue with versions greater than >4.0.9","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.15\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext 15.2.3\n\n**What version of Node.js are you using?**\n\nNode 22\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nVercel\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nRecently I have updated tailwindcss from v4.0.12 in one of my private project, the project is built on vercel, after updating the project takes a lot of time to build\n\n<img width=\"877\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e3fa84a3-df49-4a37-9fd5-8d0b8a257262\" />\n\njust tailwindcss and tailwindcss/postcss are updated from 4.0.9 to 4.0.15. no other changes.\nAfter downgrading tailwindcss/postcss to v4.0.9, the builds are back to normal. In some project with considerable size, the build never finishes on vercel. \n\n<img width=\"905\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/41a5ffba-5d79-42ef-b454-be64e676a97a\" />\n\nNote: There are no code changes between the upgrades and downgrades.\n\nWorks fine locally though, maybe because of the compute is higher on local machine.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17318","RelatedDescription":"Open issue \"Performance issue with versions greater than >4.0.9\" (#17318)"},{"Id":"2936945271","IsPullRequest":false,"CreatedAt":"2025-03-21T00:32:42","Actor":"alb-lv","Number":"17314","RawContent":null,"Title":"The `has-` variant does not work as expected with named groups (group/{name})","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play (https://play.tailwindcss.com/)\n\n**What version of Node.js are you using?**\n\nn/a\n\n**What browser are you using?**\n\nFirefox DevEdition 137.0b8 \n\n**What operating system are you using?**\n\nmacOS 15.3.2\n\n**Describe your issue**\n\n```\n<div className=\"group/test\">\n  <input type=\"checkbox\" />\n\n  <!-- This changes its state based on the condition of the checkbox -->\n  <div className=\"group-has-checked/test:hidden\">Checked</div>\n\n  <!-- This always renders regardless of checkbox state -->\n  <div className=\"not-group-has-checked/test:hidden\">Not checked</div>\n\n  <!-- Alternative group/{name} syntax to the above examples -->\n  <div className=\"group/test-has-checked:hidden\">Checked</div>\n  <div className=\"not-group/test-has-checked:hidden\">Not checked</div>\n\n</div>\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17314","RelatedDescription":"Open issue \"The `has-` variant does not work as expected with named groups (group/{name})\" (#17314)"},{"Id":"2936512092","IsPullRequest":true,"CreatedAt":"2025-03-20T19:57:46","Actor":"rudiv","Number":"17311","RawContent":null,"Title":"Add Input & Output check to CLI","State":"open","Body":"Throw an error if the input and output file for the CLI are identical.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17311","RelatedDescription":"Open PR \"Add Input & Output check to CLI\" (#17311)"},{"Id":"2936375274","IsPullRequest":true,"CreatedAt":"2025-03-20T19:06:08","Actor":"RobinMalfait","Number":"17308","RawContent":null,"Title":"Add suggestions when `--spacing(--value(integer, number))` is used","State":"closed","Body":"This PR adds suggestions to CSS based functional utilities when the `--spacing(…)` function is used.\r\n\r\nGiven this CSS:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@theme {\r\n  --spacing: 0.25rem;\r\n  --spacing-custom: 123px;\r\n}\r\n\r\n@utility with-custom-spacing-* {\r\n  size: --value(--spacing);\r\n}\r\n\r\n@utility with-integer-spacing-* {\r\n  size: --spacing(--value(integer));\r\n}\r\n\r\n@utility with-number-spacing-* {\r\n  size: --spacing(--value(number));\r\n}\r\n```\r\n    \r\nAnd this HTML:\r\n    \r\n```html\r\n<div class=\"with-custom-spacing-custom\"></div>\r\n<div class=\"with-custom-spacing-0\"></div>\r\n<div class=\"with-custom-spacing-0.5\"></div>\r\n<div class=\"with-custom-spacing-1\"></div>\r\n<div class=\"with-custom-spacing-1.5\"></div>\r\n\r\n<div class=\"with-integer-spacing-custom\"></div>\r\n<div class=\"with-integer-spacing-0\"></div>\r\n<div class=\"with-integer-spacing-0.5\"></div>\r\n<div class=\"with-integer-spacing-1\"></div>\r\n<div class=\"with-integer-spacing-1.5\"></div>\r\n\r\n<div class=\"with-number-spacing-custom\"></div>\r\n<div class=\"with-number-spacing-0\"></div>\r\n<div class=\"with-number-spacing-0.5\"></div>\r\n<div class=\"with-number-spacing-1\"></div>\r\n<div class=\"with-number-spacing-1.5\"></div>\r\n```\r\n    \r\nPlay: https://play.tailwindcss.com/tYDaSNiNtS\r\n\r\n\r\nThen you will see the following suggestions:\r\n\r\n```json\r\n[\r\n  \"with-custom-spacing-custom\",\r\n\r\n  \"with-integer-spacing-0\",\r\n  \"with-integer-spacing-1\",\r\n  \"with-integer-spacing-2\",\r\n  \"with-integer-spacing-3\",\r\n  \"with-integer-spacing-4\",\r\n  \"with-integer-spacing-5\",\r\n  \"with-integer-spacing-6\",\r\n  \"with-integer-spacing-7\",\r\n  \"with-integer-spacing-8\",\r\n  \"with-integer-spacing-9\",\r\n  \"with-integer-spacing-10\",\r\n  \"with-integer-spacing-11\",\r\n  \"with-integer-spacing-12\",\r\n  \"with-integer-spacing-14\",\r\n  \"with-integer-spacing-16\",\r\n  \"with-integer-spacing-20\",\r\n  \"with-integer-spacing-24\",\r\n  \"with-integer-spacing-28\",\r\n  \"with-integer-spacing-32\",\r\n  \"with-integer-spacing-36\",\r\n  \"with-integer-spacing-40\",\r\n  \"with-integer-spacing-44\",\r\n  \"with-integer-spacing-48\",\r\n  \"with-integer-spacing-52\",\r\n  \"with-integer-spacing-56\",\r\n  \"with-integer-spacing-60\",\r\n  \"with-integer-spacing-64\",\r\n  \"with-integer-spacing-72\",\r\n  \"with-integer-spacing-80\",\r\n  \"with-integer-spacing-96\",\r\n\r\n  \"with-number-spacing-0\",\r\n  \"with-number-spacing-0.5\",\r\n  \"with-number-spacing-1\",\r\n  \"with-number-spacing-1.5\",\r\n  \"with-number-spacing-2\",\r\n  \"with-number-spacing-2.5\",\r\n  \"with-number-spacing-3\",\r\n  \"with-number-spacing-3.5\",\r\n  \"with-number-spacing-4\",\r\n  \"with-number-spacing-5\",\r\n  \"with-number-spacing-6\",\r\n  \"with-number-spacing-7\",\r\n  \"with-number-spacing-8\",\r\n  \"with-number-spacing-9\",\r\n  \"with-number-spacing-10\",\r\n  \"with-number-spacing-11\",\r\n  \"with-number-spacing-12\",\r\n  \"with-number-spacing-14\",\r\n  \"with-number-spacing-16\",\r\n  \"with-number-spacing-20\",\r\n  \"with-number-spacing-24\",\r\n  \"with-number-spacing-28\",\r\n  \"with-number-spacing-32\",\r\n  \"with-number-spacing-36\",\r\n  \"with-number-spacing-40\",\r\n  \"with-number-spacing-44\",\r\n  \"with-number-spacing-48\",\r\n  \"with-number-spacing-52\",\r\n  \"with-number-spacing-56\",\r\n  \"with-number-spacing-60\",\r\n  \"with-number-spacing-64\",\r\n  \"with-number-spacing-72\",\r\n  \"with-number-spacing-80\",\r\n  \"with-number-spacing-96\"\r\n]\r\n```\r\n\r\nThis is because `--spacing(--value(number))` will include all default spacing scale suggestions we use. And `--pacing(--value(integer))` will include the same list but without the floating point numbers.\r\n\r\nFollow up PR for: https://github.com/tailwindlabs/tailwindcss/pull/17304\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17308","RelatedDescription":"Closed or merged PR \"Add suggestions when `--spacing(--value(integer, number))` is used\" (#17308)"},{"Id":"2935794201","IsPullRequest":true,"CreatedAt":"2025-03-20T19:02:03","Actor":"RobinMalfait","Number":"17304","RawContent":null,"Title":"Add support for literal values in `--value('…')` and `--modifier('…')`","State":"closed","Body":"This PR adds support for literal values inside the `--value('…')` and `--modifier('…')` functions. This allows you to safelist some known values you want to use:\n\nE.g.:\n\n```css\n@utility tab-* {\n  tab-size: --value('revert', 'initial');\n}\n```\n\nThis allows you to use `tab-revert` and `tab-initial` for example.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17304","RelatedDescription":"Closed or merged PR \"Add support for literal values in `--value('…')` and `--modifier('…')`\" (#17304)"},{"Id":"2935204561","IsPullRequest":true,"CreatedAt":"2025-03-20T16:51:31","Actor":"philipp-spiess","Number":"17302","RawContent":null,"Title":"Prepare v4.0.15 release","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17302","RelatedDescription":"Closed or merged PR \"Prepare v4.0.15 release\" (#17302)"},{"Id":"2935985613","IsPullRequest":true,"CreatedAt":"2025-03-20T16:43:32","Actor":"philipp-spiess","Number":"17306","RawContent":null,"Title":"Revert \"Don't use `color-mix(…)` on `currentColor` (#17247)\" and work around Preflight crash","State":"closed","Body":"Closes #17194.\r\n\r\nThis reverts commit d6d913ec39e2a4cc0a70e9d21c484c6ed95d40ae.\r\n\r\nThe initial fix does breaks older versions of Chrome (where text won't render with a color for the placeholder at all anymore) and the usage of the _relative colors_ features also means it'll require a much newer version of Safari/Firefox/Chrome to work correctly. The implementation was also wrong as it always set alpha to the specific percent instead of applying it additively (note that this can be fixed with `calc(alpha * opacity)` though).\r\n\r\nInstead we decided to fix this by adding a `@supports` query to Preflight that only targets browsers that aren't affected by the crash. We currently use the following workaround:\r\n\r\n```css\r\n/*\r\n  Set the default placeholder color to a semi-transparent version of the current text color in browsers that do not\r\n  crash when using `color-mix(…)` with `currentColor`. (https://github.com/tailwindlabs/tailwindcss/issues/17194)\r\n*/\r\n\r\n@supports (not (-webkit-appearance: -apple-pay-button)) /* Not Safari */ or\r\n  (contain-intrinsic-size: 1px) /* Safari 17+ */ {\r\n  ::placeholder {\r\n    color: color-mix(in oklab, currentColor 50%, transparent);\r\n  }\r\n}\r\n```\r\n\r\n## Test plan\r\n\r\nWhen testing the `color-mix(currentColor)` vs `oklab(from currentColor …)` we created the following support matrix. I'm extending it with _our fix_ which is the fix ended up using:\r\n\r\n| Browser | Version | `color-mix(… currentColor …)` | `oklab(from currentColor …)` | `@supports { color-mix(…) }` |\r\n| ------- | ------- | ----------------------------- | ---------------------------- | ------- |\r\n| Chrome  | 111     | ❌                            | ❌                           | ❌      |\r\n| Chrome  | 116     | ✅                            | ❌                           | ✅      |\r\n| Chrome  | 131+    | ✅                            | ✅                           | ✅      |\r\n| Safari  | 16.4    | 💥                            | ❌                           | ❌       |\r\n| Safari  | 16.6+   | ✅                            | ❌                           | ❌        |\r\n| Safari  | 18+     | ✅                            | ✅                           | ✅      |\r\n| Firefox | 128     | ✅                            | ❌                           | ✅      |\r\n| Firefox | 133     | ✅                            | ✅                           | ✅      |\r\n\r\nNote that on Safari 16, this change makes it so that the browser does not crash yet it still won't work either. That's because now the browser will fall back to the default placeholder color instead. We used the following play to test the fix: https://play.tailwindcss.com/RF1RYbZLKY\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17306","RelatedDescription":"Closed or merged PR \"Revert \"Don't use `color-mix(…)` on `currentColor` (#17247)\" and work around Preflight crash\" (#17306)"},{"Id":"2935862382","IsPullRequest":false,"CreatedAt":"2025-03-20T15:45:49","Actor":"jphaward","Number":"17305","RawContent":null,"Title":"[v4] Fails to detect mt-* class in slim source file","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Rails 7.2.2.1, Ruby 3.4.1, DaisyUI v5.0.4\n\n**What version of Node.js are you using?**\n\nv20.9.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS Sonama 14.5 M1 \n\n**Reproduction URL**\n\nInclude a `html.slim` view with:\n\n`.flex.border-solid.border-2.border-base-300.drop-shadow-md.bg-base-100.mt-10.rounded-lg.py-6`\n\nif I amend this to html in the same html.slim file it works fine:\n\n`<div class=\"flex border-solid border-2 border-base-300 drop-shadow-md bg-base-100 mt-10 rounded-lg py-6\">`\n\n\n**Describe your issue**\n\nIt does not apply the `mt-10 `class even though it is in the CSS. If using a `tailwind.config.js` file, it works if `mt-10` is added to a safelist. I am experiencing similar issues with `mt-*` in the project and not just this line. The other classes are applied correctly.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17305","RelatedDescription":"Closed issue \"[v4] Fails to detect mt-* class in slim source file\" (#17305)"},{"Id":"2935455293","IsPullRequest":false,"CreatedAt":"2025-03-20T13:13:57","Actor":"champsupertramp","Number":"17303","RawContent":null,"Title":"Tailwindcss v4.0.13 - Media queries and breakpoints not working in Safari 16.4","State":"open","Body":"\n**What version of Tailwind CSS are you using?**\n\nv4.0.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"@tailwindcss/vite\": \"^4.0.13\",\n    \"@vitejs/plugin-react\": \"^4.3.4\",\n\n**What version of Node.js are you using?**\n\nnvm --version = 0.35.0\nnpm --version = 9.5.1\n\n**What browser are you using?**\n\nChrome Version 133.0.6943.142 (Official Build) (arm64)\nSafari Version 16.4 (18615.1.26.110.1)\n\n**What operating system are you using?**\n\nMacOS - Ventura 13.3.1 (a) \n\n**Reproduction URL**\n\nJust the basic setup - I just followed the installation guide at https://tailwindcss.com/docs/installation/using-vite\n\n\n**Describe your issue**\n\nAccording to the Compatibility page: https://tailwindcss.com/docs/compatibility\n\nIt says `Safari 16.4 (released March 2023)` is supported for Tailwindcss v4.\n\nWhen I use the following code, the classes `max-sm:grid-cols-1 min-md:grid-cols-3` work in Chrome but not in Safari.\n\n```\n <dl className=\"mt-5 grid  max-sm:grid-cols-1 min-md:grid-cols-3   divide-gray-200 overflow-hidden rounded-lg bg-white shadow-sm  @md:divide-x @md:divide-y-0\">\n   <dt className=\"text-base font-normal text-gray-900\">test 1</dt>\n   <dt className=\"text-base font-normal text-gray-900\">test 2</dt>\n   <dt className=\"text-base font-normal text-gray-900\">test 3</dt>\n</dl>\n```     \n\n\n### Safari:\n\n<img width=\"1221\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/37c2e21c-99ad-4ca8-b8f9-a2d1b3b20708\" />\n\n### Chrome:\n\n<img width=\"939\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/843d588c-825d-4b53-96a9-b09abc434a69\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17303","RelatedDescription":"Open issue \"Tailwindcss v4.0.13 - Media queries and breakpoints not working in Safari 16.4\" (#17303)"},{"Id":"2931834204","IsPullRequest":false,"CreatedAt":"2025-03-20T11:52:03","Actor":"killthecreator","Number":"17288","RawContent":null,"Title":"Changes in CSS file do not update Next.js setup","State":"closed","Body":"<img width=\"701\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b7b9486e-7c1d-4412-8caf-b4bca1fe15a5\" />\n\nSection says that i can use CSS variables directly. It might be true in case of `static` theme, but it does not work for custom non-static theme which gets only the values picket up by the scanner from classnames. \n\nThe confusion is that it is never mentioned, that scanner does not pickup CSS variables used directly to include them in a server theme layer:\n\n![Image](https://github.com/user-attachments/assets/5884e0ed-9cf9-44a8-9fb5-78fa7e3fbcad)\n\n![Image](https://github.com/user-attachments/assets/2e37afae-b759-43c7-9e2b-9ede48b04b5c)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17288","RelatedDescription":"Closed issue \"Changes in CSS file do not update Next.js setup\" (#17288)"},{"Id":"2935176321","IsPullRequest":true,"CreatedAt":"2025-03-20T11:52:02","Actor":"philipp-spiess","Number":"17301","RawContent":null,"Title":"Ensure that the CSS file rebuilds if a new CSS variable is used from templates","State":"closed","Body":"Fixes #17288\r\n\r\nThis PR fixes an issue where changes in template files that _only mark a new CSS variable as used_ was not causing the CSS file to rebuilds.\r\n\r\nThis also fixes a flaky integration test that was caused by a missing `await` line on the final assertion (causing it to sometimes run the assertion in time while the test runner was still running). \r\n\r\n## Test plan\r\n\r\nTurns out we already had an integration test for this but it wasn't correctly running due to the missing await.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17301","RelatedDescription":"Closed or merged PR \"Ensure that the CSS file rebuilds if a new CSS variable is used from templates\" (#17301)"},{"Id":"2933182109","IsPullRequest":false,"CreatedAt":"2025-03-20T11:19:46","Actor":"b3nk3","Number":"17293","RawContent":null,"Title":"PluginUtils is no longer exported","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Next.js 15.2.3, \n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\nI could not get code sandbox working but the broken.ts and works.ts is example code that \"works\" locally\nhttps://codesandbox.io/p/sandbox/lhdkh4?file=/src/broken.ts\n\n**Describe your issue**\n\n\nPluginUtils is no longer exported have to work around it. Not ideal.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17293","RelatedDescription":"Closed issue \"PluginUtils is no longer exported\" (#17293)"},{"Id":"2934992056","IsPullRequest":true,"CreatedAt":"2025-03-20T11:19:45","Actor":"philipp-spiess","Number":"17299","RawContent":null,"Title":"Export `PluginUtils` from `tailwindcss/plugin`","State":"closed","Body":"Closes #17293\r\n\r\nWe used to export this in v3 so might as well bring it back for the `tailwindcss/plugin` export list.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17299","RelatedDescription":"Closed or merged PR \"Export `PluginUtils` from `tailwindcss/plugin`\" (#17299)"},{"Id":"2934253972","IsPullRequest":false,"CreatedAt":"2025-03-20T10:54:42","Actor":"nebula0225","Number":"17294","RawContent":null,"Title":"tailwindcss4's auto-completion error with IntelliJ","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nIntelliJ \n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nAutocompletion for tailwindcss classes disappeared in IntelliJ IDE. Is it because tailwindcss config js file disappeared?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17294","RelatedDescription":"Closed issue \"tailwindcss4's auto-completion error with IntelliJ\" (#17294)"},{"Id":"2934708211","IsPullRequest":false,"CreatedAt":"2025-03-20T10:00:57","Actor":"kevinmu17","Number":"17297","RawContent":null,"Title":"Rounded-[SIDE]-full not playing well with others","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nVitejs v6.2.2 with the @tailwindcss/vite plugin for vitejs config\n\n**What version of Node.js are you using?**\nv20.10.0\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/QPXhwsdHe4\n\n**Describe your issue**\nWhen using `rounded-l-full` (or any other direction) together with `rounded-r-4xl` the right borders are ignored (the infinite calc trick messes this up i think)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17297","RelatedDescription":"Closed issue \"Rounded-[SIDE]-full not playing well with others\" (#17297)"},{"Id":"2934269119","IsPullRequest":false,"CreatedAt":"2025-03-20T06:39:08","Actor":"micobarac","Number":"17295","RawContent":null,"Title":"Angular 19 cannot automatically recover using @apply with Tailwind CSS 4","State":"open","Body":"Tailwind CSS: 4.0.14\nAngular: 19.2.4\nNode: 23.6.0\nChrome: 134.0.6998.89 (Official Build) (arm64)\nMacOS: Sequoia 15.3.2 (24D81)\n\n**Reproduction URL**\n\n[https://github.com/micobarac/angular19](https://github.com/micobarac/angular19)\n\n**Describe your issue**\n\nReproducing the issue:\n\n- run `yarn install && yarn start`\n- open `src/tailwind.css`\n- change `bg-white` class within `@apply` directive to `bg-unknown` at line 4\n- observe the error: \n\n```\n✘ [ERROR] Cannot apply unknown utility class: bg-unknown [plugin angular-css]\n\n    angular:styles/global:styles:1:8:\n      1 │ @import 'src/styles.css';\n```\n\n- change `bg-unknown` class within `@apply` directive back to `bg-white` at line 4\n- observe the error (**Angular should have recovered by now**): \n\n```\n✘ [ERROR] Cannot apply unknown utility class: bg-unknown [plugin angular-css]\n\n    angular:styles/global:styles:1:8:\n      1 │ @import 'src/styles.css';\n```\n\nI can't tell if this problem resides inside `Angular 19` or `Tailwind CSS 4`.\n\nI opened issue here:\n\n[https://github.com/angular/angular-cli/issues/29789](https://github.com/angular/angular-cli/issues/29789)\n\n[https://github.com/angular/angular-cli/issues/29789#issuecomment-2737483148](https://github.com/angular/angular-cli/issues/29789#issuecomment-2737483148)\n\n_In Tailwind CSS version 4, syntax errors trigger an exception instead of a PostCSS error. This causes PostCSS to crash, preventing it from tracking the files Tailwind processes. As a result, these files aren't added to the file watcher / dependency tree, leading to issues where cached compilation results aren't invalidated when a file changes, since it isn't recognized as a transitive dependency._\n\nI opened discussion here, too:\n\n[https://github.com/tailwindlabs/tailwindcss/discussions/17077](https://github.com/tailwindlabs/tailwindcss/discussions/17077)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17295","RelatedDescription":"Open issue \"Angular 19 cannot automatically recover using @apply with Tailwind CSS 4\" (#17295)"},{"Id":"2931943042","IsPullRequest":false,"CreatedAt":"2025-03-19T18:43:51","Actor":"charlieforward9","Number":"17289","RawContent":null,"Title":"Upgrade tool fails with unactionable error message","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`npx @tailwindcss/upgrade`\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction**\n\nRunning `npx @tailwindcss/upgrade`\n```\n≈ tailwindcss v4.0.14\n\n│ Searching for CSS files in the current directory and its subdirectories… \n\n│ ↳ Linked `./tailwind.config.cjs` to `./src/styles.css` \n\n│ Migrating JavaScript configuration files… \n\n│ ↳ Could not load the configuration file: Cannot use 'in' operator to search for \n│   '__isOptionsFunction' in tailwindcss \n```\n\nMy config file:\n```\n/**\n * Configuration file for Tailwind CSS.\n * This file defines the configuration for Tailwind CSS.\n * The content property specifies which files to include in the CSS generation process.\n * The theme property extends the default theme configuration.\n * The plugins property specifies the plugins to use.\n * For more information on how to customize Tailwind, visit the official documentation:\n * {@link https://tailwindcss.com/docs}\n * @type {import('tailwindcss').Config} */\n\n// eslint-disable-next-line no-undef\nmodule.exports = {\n  content: {\n    relative: true,\n    files: [\n      \"src/core/Agroview.tsx\",\n      \"src/core/bars/*.tsx\",\n      \"src/core/components/*.tsx\",\n      \"src/**/**/**/*.tsx\",\n    ],\n  },\n  theme: {\n    extend: {\n      backgroundImage: {\n        \"loading-logo\": \"url('../assets/images/Agroview_FullLogo.svg')\",\n      },\n      height: {\n        nav: \"7vh\",\n        op: \"93vh\",\n      },\n      minHeight: {\n        op: \"93vh\",\n      },\n      maxHeight: {\n        \"60vh\": \"60vh\",\n        \"80vh\": \"80vh\",\n        \"90vh\": \"90vh\",\n        33: \"24rem\",\n        op: \"93vh\",\n      },\n      minWidth: {\n        96: \"24rem\",\n      },\n      width: {\n        expand: \"70rem\",\n      },\n      zIndex: {\n        popup: 2,\n        control: 10,\n        nav: 1000,\n        modal: 1100,\n      },\n      screens: {},\n      colors: {\n        agroGreen: \"#239446\",\n        agroOrange: \"#F36F21\",\n        customGrayBorder: \"#eeeeee\",\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"sans-serif\"],\n      },\n    },\n  },\n  plugins: [\"tailwindcss\", \"autoprefixer\"],\n};\n```\n\nI am not clear if this config file is crashing the program, or if another file is what is causing the problem, please help me understand what `__isOptionsFunction` is supposed to be doing to narrow down the reproduction of this issue.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17289","RelatedDescription":"Closed issue \"Upgrade tool fails with unactionable error message\" (#17289)"},{"Id":"2931956083","IsPullRequest":false,"CreatedAt":"2025-03-19T14:12:27","Actor":"dtaalbers","Number":"17290","RawContent":null,"Title":"Arbitrary value classes not generated with Aurelia 2 style class bindings.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss, webpack, Aurelia 2 beta-23.\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.1\n\n**What browser are you using?**\n\nFor example:  N/A\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nhttps://github.com/dtaalbers/aurelia-tailwind-issue\n\n**Describe your issue**\n\nI have prepared two projects for comparison. The first one uses Tailwind CSS v3. To test it, open the project, install dependencies with npm install, start the project with npm start, and navigate to http://localhost:9000/. You can toggle the width of the square using the button.\n\nI have also included a version using Tailwind CSS v4. Follow the same steps to start it. However, in this version, the size toggle no longer works because the w-[44px] class doesn’t seem to be generated.\n\nIf you add a div with this class, for example:\n\n```\n<div class=\"size-[144px] flex items-center justify-center mt-10 bg-yellow-500 rounded p-5\">This works</div>\n```\n\nboth the new div and the toggled element receive the correct height. Since I frequently use `size-[44px].class=\"size === 'small'\"`style bindings in my projects, I need this functionality to work properly.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17290","RelatedDescription":"Open issue \"Arbitrary value classes not generated with Aurelia 2 style class bindings.\" (#17290)"},{"Id":"2929890969","IsPullRequest":false,"CreatedAt":"2025-03-19T13:50:32","Actor":"dorianmariecom","Number":"17277","RawContent":null,"Title":"fails to scan for class in slim file (ruby/rails) (p-8)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n≈ tailwindcss v4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwindcss-rails (4.2.0)\n\n**What version of Node.js are you using?**\n\nv22.5.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nHave an application.html.slim with:\n\n```\n  body.border-t-4.p-8(class=\"#{body_classes}\" data-hotwire-native=\"#{hotwire_native_app?}\" data-controller=\"update-time-zone\")\n```\n\n**Describe your issue**\n\nit doesn't create the p-8 class\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17277","RelatedDescription":"Closed issue \"fails to scan for class in slim file (ruby/rails) (p-8)\" (#17277)"},{"Id":"2929976011","IsPullRequest":true,"CreatedAt":"2025-03-19T13:50:31","Actor":"RobinMalfait","Number":"17278","RawContent":null,"Title":"Fix class extraction followed by `(` in Slim","State":"closed","Body":"This PR fixes an issue where using the class shorthand in Slim templates, followed by an `(` results in the last class being ignored. \r\n\r\nE.g.:\r\n\r\n```slim\r\nbody.border-t-4.p-8(class=\"#{body_classes}\" data-hotwire-native=\"#{hotwire_native_app?}\" data-controller=\"update-time-zone\")\r\n```\r\n\r\nThis is because we will eventually extract `p-8` but it's followed by an invalid boundary character `(`.\r\n\r\nTo solve this, we make sure to replace the `(` with a space. We already do a similar thing when the classes are followed by an `[`.\r\n\r\nOne caveat, we _can_ have `(` in our classes, like `bg-(--my-color)`. But in my testing this is not something that can be used in the shorthand version. \r\n\r\nE.g.:\r\n```slim\r\ndiv.bg-(--my-color)\r\n```\r\n\r\nCompiles to:\r\n```html\r\n<div --my-color=\"\" class=\"bg-\"></div>\r\n```\r\n\r\nSo I didn't add any special handling for this. Even when trying to escape the `(`, `-` and `)` characters, it still doesn't work. E.g.:\r\n\r\n```slim\r\ndiv.bg-\\(--my-color\\)\r\n```\r\n\r\nCompiles to:\r\n```html\r\n<div class=\"bg-\">\\(--my-color\\)</div>\r\n```\r\n\r\n# Test plan\r\n\r\n1. Added test for the issue\r\n2. Existing tests pass\r\n3. Verified via the extractor tool:\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"958\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f72c420e-5429-424f-a01d-12f724062bf2\" /> | <img width=\"958\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b0cc8f2f-97a8-4fca-8813-3bb1da8d99a8\" /> |\r\n\r\n---\r\n\r\nFixes: #17277\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17278","RelatedDescription":"Closed or merged PR \"Fix class extraction followed by `(` in Slim\" (#17278)"},{"Id":"2929547190","IsPullRequest":true,"CreatedAt":"2025-03-19T13:25:53","Actor":"RobinMalfait","Number":"17273","RawContent":null,"Title":"Ensure multiple `--value(…)` or `--modifier(…)` calls don't delete subsequent declarations","State":"closed","Body":"This PR fixes a bug in the handling of `@utility`. Essentially if you had a declaration where you used a `--modifier(…)` _and_ a `--value(…)` and both caused the declaration to be removed, the declaration after the current one would be removed as well.\n\nThis happened because 2 reasons:\n\n1. Once we removed the declaration when we handled `--modifier(…)`, we didn't stop the walk and kept going.\n2. The `replaceWith(…)` code allows you to call the function multiple times but immediately mutates the AST. This means that if you call it multiple times that you are potentially removing / updating nodes followed by the current one.\n\nE.g.:\n\n```css\n@utility mask-r-* {\n  --mask-right: linear-gradient(to left, transparent, black --value(percentage));\n  --mask-right: linear-gradient(\n    to left,\n    transparent calc(var(--spacing) * --modifier(integer)),\n    black calc(var(--spacing) * --value(integer))\n  );\n  mask-image: var(--mask-linear), var(--mask-radial), var(--mask-conic);\n}\n```\n\nIf this is used as `mask-r-10%`, then the first definition of `--mask-right` is kept, but the second definition of `--mask-right` is deleted because both `--modifier(integer)` and `--value(integer)` do not result in a valid value.\n\nHowever, the `mask-image` declaration was also removed because the `replaceWith(…)` function was called twice. Once for `--modifier(integer)` and once for `--value(integer)`.\n\n# Test plan\n\n1. Added a test to cover this case.\n2. Existing tests pass.\n3. Added a hard error if we call `replaceWith(…)` multiple times.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17273","RelatedDescription":"Closed or merged PR \"Ensure multiple `--value(…)` or `--modifier(…)` calls don't delete subsequent declarations\" (#17273)"},{"Id":"2931636678","IsPullRequest":false,"CreatedAt":"2025-03-19T12:36:07","Actor":"erikrj","Number":"17286","RawContent":null,"Title":"tailwindcss/vite 4.0.8 or higher with qwik doesn't render classes","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?** \n\ntailwindcss 4.0.14\n@tailwindcss/vite 4.0.8 or higher\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nQwik 1.12.1\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome latest\n\n**What operating system are you using?**\n\nmacOS Sequoia 15.3.1\n\n**Reproduction URL**\n\nSee https://github.com/erikrj/2025-03-19-bug-report-qwik-tailwindcss-vite-4.0.8\nI have included an updated README.md. Simply modify the @tailwindcss/vite dependency to 4.0.7 and it works as expected. Every version between 4.0.8 and 4.0.14 breaks.\n\n**Describe your issue**\n\nWhen I use any version of @tailwindcss/vite 4.0.8 or higher my tailwindcss classes to not render properly. If I pin the version to @tailwindcss/vite 4.0.7, they work. This is a vanilla empt qwik project with tailwindcss installed. See the README.md of the repo I provided above.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17286","RelatedDescription":"Open issue \"tailwindcss/vite 4.0.8 or higher with qwik doesn't render classes\" (#17286)"},{"Id":"2929642014","IsPullRequest":true,"CreatedAt":"2025-03-18T20:28:21","Actor":"devongovett","Number":"17276","RawContent":null,"Title":"Fix segmentation fault when loading @tailwindcss/oxide in a Worker thread","State":"closed","Body":"When Tailwind is loaded in a Node Worker thread, it currently causes a segmentation fault on Linux when the thread exits. This is due to a longstanding issue in Rust that affects all native modules: https://github.com/rust-lang/rust/issues/91979. I reported this years ago but unfortunately it is still not fixed, and seems to have gotten worse in Rust 1.83.0 and later. Looks like Tailwind recently updated Rust versions and this issue started appearing when run in tools like Parcel that use worker threads.\r\n\r\nThe workaround is to prevent the native module from ever being unloaded. One way to do that is to always load the native module in the main thread in addition to workers, but this is hard to enforce. @Brooooooklyn found another method, which is to use a linker option for this. I tested this on an Ubuntu system and verified it fixed the issue. You can test with the following script.\r\n\r\n```js\r\n// test.js\r\nconst {Worker} = require('worker_threads');\r\nnew Worker('./worker.js');\r\n\r\n// worker.js\r\nrequire('@tailwindcss/oxide');\r\n```\r\n\r\nWithout this change, a segmentation fault will occur.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17276","RelatedDescription":"Closed or merged PR \"Fix segmentation fault when loading @tailwindcss/oxide in a Worker thread\" (#17276)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-22T03:30:22.4597434Z","RunDurationInMilliseconds":506}