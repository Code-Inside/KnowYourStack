{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2933182109","IsPullRequest":false,"CreatedAt":"2025-03-19T21:06:07","Actor":"b3nk3","Number":"17293","RawContent":null,"Title":"PluginUtils is no longer exported","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Next.js 15.2.3, \n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\nI could not get code sandbox working but the broken.ts and works.ts is example code that \"works\" locally\nhttps://codesandbox.io/p/sandbox/lhdkh4?file=/src/broken.ts\n\n**Describe your issue**\n\n\nPluginUtils is no longer exported have to work around it. Not ideal.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17293","RelatedDescription":"Open issue \"PluginUtils is no longer exported\" (#17293)"},{"Id":"2931943042","IsPullRequest":false,"CreatedAt":"2025-03-19T18:43:51","Actor":"charlieforward9","Number":"17289","RawContent":null,"Title":"Upgrade tool fails with unactionable error message","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`npx @tailwindcss/upgrade`\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction**\n\nRunning `npx @tailwindcss/upgrade`\n```\n≈ tailwindcss v4.0.14\n\n│ Searching for CSS files in the current directory and its subdirectories… \n\n│ ↳ Linked `./tailwind.config.cjs` to `./src/styles.css` \n\n│ Migrating JavaScript configuration files… \n\n│ ↳ Could not load the configuration file: Cannot use 'in' operator to search for \n│   '__isOptionsFunction' in tailwindcss \n```\n\nMy config file:\n```\n/**\n * Configuration file for Tailwind CSS.\n * This file defines the configuration for Tailwind CSS.\n * The content property specifies which files to include in the CSS generation process.\n * The theme property extends the default theme configuration.\n * The plugins property specifies the plugins to use.\n * For more information on how to customize Tailwind, visit the official documentation:\n * {@link https://tailwindcss.com/docs}\n * @type {import('tailwindcss').Config} */\n\n// eslint-disable-next-line no-undef\nmodule.exports = {\n  content: {\n    relative: true,\n    files: [\n      \"src/core/Agroview.tsx\",\n      \"src/core/bars/*.tsx\",\n      \"src/core/components/*.tsx\",\n      \"src/**/**/**/*.tsx\",\n    ],\n  },\n  theme: {\n    extend: {\n      backgroundImage: {\n        \"loading-logo\": \"url('../assets/images/Agroview_FullLogo.svg')\",\n      },\n      height: {\n        nav: \"7vh\",\n        op: \"93vh\",\n      },\n      minHeight: {\n        op: \"93vh\",\n      },\n      maxHeight: {\n        \"60vh\": \"60vh\",\n        \"80vh\": \"80vh\",\n        \"90vh\": \"90vh\",\n        33: \"24rem\",\n        op: \"93vh\",\n      },\n      minWidth: {\n        96: \"24rem\",\n      },\n      width: {\n        expand: \"70rem\",\n      },\n      zIndex: {\n        popup: 2,\n        control: 10,\n        nav: 1000,\n        modal: 1100,\n      },\n      screens: {},\n      colors: {\n        agroGreen: \"#239446\",\n        agroOrange: \"#F36F21\",\n        customGrayBorder: \"#eeeeee\",\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"sans-serif\"],\n      },\n    },\n  },\n  plugins: [\"tailwindcss\", \"autoprefixer\"],\n};\n```\n\nI am not clear if this config file is crashing the program, or if another file is what is causing the problem, please help me understand what `__isOptionsFunction` is supposed to be doing to narrow down the reproduction of this issue.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17289","RelatedDescription":"Closed issue \"Upgrade tool fails with unactionable error message\" (#17289)"},{"Id":"2931956083","IsPullRequest":false,"CreatedAt":"2025-03-19T14:12:27","Actor":"dtaalbers","Number":"17290","RawContent":null,"Title":"Arbitrary value classes not generated with Aurelia 2 style class bindings.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss, webpack, Aurelia 2 beta-23.\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.1\n\n**What browser are you using?**\n\nFor example:  N/A\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nhttps://github.com/dtaalbers/aurelia-tailwind-issue\n\n**Describe your issue**\n\nI have prepared two projects for comparison. The first one uses Tailwind CSS v3. To test it, open the project, install dependencies with npm install, start the project with npm start, and navigate to http://localhost:9000/. You can toggle the width of the square using the button.\n\nI have also included a version using Tailwind CSS v4. Follow the same steps to start it. However, in this version, the size toggle no longer works because the w-[44px] class doesn’t seem to be generated.\n\nIf you add a div with this class, for example:\n\n```\n<div class=\"size-[144px] flex items-center justify-center mt-10 bg-yellow-500 rounded p-5\">This works</div>\n```\n\nboth the new div and the toggled element receive the correct height. Since I frequently use `size-[44px].class=\"size === 'small'\"`style bindings in my projects, I need this functionality to work properly.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17290","RelatedDescription":"Open issue \"Arbitrary value classes not generated with Aurelia 2 style class bindings.\" (#17290)"},{"Id":"2929890969","IsPullRequest":false,"CreatedAt":"2025-03-19T13:50:32","Actor":"dorianmariecom","Number":"17277","RawContent":null,"Title":"fails to scan for class in slim file (ruby/rails) (p-8)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n≈ tailwindcss v4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwindcss-rails (4.2.0)\n\n**What version of Node.js are you using?**\n\nv22.5.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nHave an application.html.slim with:\n\n```\n  body.border-t-4.p-8(class=\"#{body_classes}\" data-hotwire-native=\"#{hotwire_native_app?}\" data-controller=\"update-time-zone\")\n```\n\n**Describe your issue**\n\nit doesn't create the p-8 class\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17277","RelatedDescription":"Closed issue \"fails to scan for class in slim file (ruby/rails) (p-8)\" (#17277)"},{"Id":"2929976011","IsPullRequest":true,"CreatedAt":"2025-03-19T13:50:31","Actor":"RobinMalfait","Number":"17278","RawContent":null,"Title":"Fix class extraction followed by `(` in Slim","State":"closed","Body":"This PR fixes an issue where using the class shorthand in Slim templates, followed by an `(` results in the last class being ignored. \r\n\r\nE.g.:\r\n\r\n```slim\r\nbody.border-t-4.p-8(class=\"#{body_classes}\" data-hotwire-native=\"#{hotwire_native_app?}\" data-controller=\"update-time-zone\")\r\n```\r\n\r\nThis is because we will eventually extract `p-8` but it's followed by an invalid boundary character `(`.\r\n\r\nTo solve this, we make sure to replace the `(` with a space. We already do a similar thing when the classes are followed by an `[`.\r\n\r\nOne caveat, we _can_ have `(` in our classes, like `bg-(--my-color)`. But in my testing this is not something that can be used in the shorthand version. \r\n\r\nE.g.:\r\n```slim\r\ndiv.bg-(--my-color)\r\n```\r\n\r\nCompiles to:\r\n```html\r\n<div --my-color=\"\" class=\"bg-\"></div>\r\n```\r\n\r\nSo I didn't add any special handling for this. Even when trying to escape the `(`, `-` and `)` characters, it still doesn't work. E.g.:\r\n\r\n```slim\r\ndiv.bg-\\(--my-color\\)\r\n```\r\n\r\nCompiles to:\r\n```html\r\n<div class=\"bg-\">\\(--my-color\\)</div>\r\n```\r\n\r\n# Test plan\r\n\r\n1. Added test for the issue\r\n2. Existing tests pass\r\n3. Verified via the extractor tool:\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"958\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f72c420e-5429-424f-a01d-12f724062bf2\" /> | <img width=\"958\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b0cc8f2f-97a8-4fca-8813-3bb1da8d99a8\" /> |\r\n\r\n---\r\n\r\nFixes: #17277\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17278","RelatedDescription":"Closed or merged PR \"Fix class extraction followed by `(` in Slim\" (#17278)"},{"Id":"2929547190","IsPullRequest":true,"CreatedAt":"2025-03-19T13:25:53","Actor":"RobinMalfait","Number":"17273","RawContent":null,"Title":"Ensure multiple `--value(…)` or `--modifier(…)` calls don't delete subsequent declarations","State":"closed","Body":"This PR fixes a bug in the handling of `@utility`. Essentially if you had a declaration where you used a `--modifier(…)` _and_ a `--value(…)` and both caused the declaration to be removed, the declaration after the current one would be removed as well.\n\nThis happened because 2 reasons:\n\n1. Once we removed the declaration when we handled `--modifier(…)`, we didn't stop the walk and kept going.\n2. The `replaceWith(…)` code allows you to call the function multiple times but immediately mutates the AST. This means that if you call it multiple times that you are potentially removing / updating nodes followed by the current one.\n\nE.g.:\n\n```css\n@utility mask-r-* {\n  --mask-right: linear-gradient(to left, transparent, black --value(percentage));\n  --mask-right: linear-gradient(\n    to left,\n    transparent calc(var(--spacing) * --modifier(integer)),\n    black calc(var(--spacing) * --value(integer))\n  );\n  mask-image: var(--mask-linear), var(--mask-radial), var(--mask-conic);\n}\n```\n\nIf this is used as `mask-r-10%`, then the first definition of `--mask-right` is kept, but the second definition of `--mask-right` is deleted because both `--modifier(integer)` and `--value(integer)` do not result in a valid value.\n\nHowever, the `mask-image` declaration was also removed because the `replaceWith(…)` function was called twice. Once for `--modifier(integer)` and once for `--value(integer)`.\n\n# Test plan\n\n1. Added a test to cover this case.\n2. Existing tests pass.\n3. Added a hard error if we call `replaceWith(…)` multiple times.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17273","RelatedDescription":"Closed or merged PR \"Ensure multiple `--value(…)` or `--modifier(…)` calls don't delete subsequent declarations\" (#17273)"},{"Id":"2931834204","IsPullRequest":false,"CreatedAt":"2025-03-19T12:47:15","Actor":"killthecreator","Number":"17288","RawContent":null,"Title":"Directly used CSS variables declared in `@theme` don't update theme layer on files change","State":"open","Body":"<img width=\"701\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b7b9486e-7c1d-4412-8caf-b4bca1fe15a5\" />\n\nSection says that i can use CSS variables directly. It might be true in case of `static` theme, but it does not work for custom non-static theme which gets only the values picket up by the scanner from classnames. \n\nThe confusion is that it is never mentioned, that scanner does not pickup CSS variables used directly to include them in a server theme layer:\n\n![Image](https://github.com/user-attachments/assets/5884e0ed-9cf9-44a8-9fb5-78fa7e3fbcad)\n\n![Image](https://github.com/user-attachments/assets/2e37afae-b759-43c7-9e2b-9ede48b04b5c)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17288","RelatedDescription":"Open issue \"Directly used CSS variables declared in `@theme` don't update theme layer on files change\" (#17288)"},{"Id":"2931636678","IsPullRequest":false,"CreatedAt":"2025-03-19T12:36:07","Actor":"erikrj","Number":"17286","RawContent":null,"Title":"tailwindcss/vite 4.0.8 or higher with qwik doesn't render classes","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?** \n\ntailwindcss 4.0.14\n@tailwindcss/vite 4.0.8 or higher\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nQwik 1.12.1\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome latest\n\n**What operating system are you using?**\n\nmacOS Sequoia 15.3.1\n\n**Reproduction URL**\n\nSee https://github.com/erikrj/2025-03-19-bug-report-qwik-tailwindcss-vite-4.0.8\nI have included an updated README.md. Simply modify the @tailwindcss/vite dependency to 4.0.7 and it works as expected. Every version between 4.0.8 and 4.0.14 breaks.\n\n**Describe your issue**\n\nWhen I use any version of @tailwindcss/vite 4.0.8 or higher my tailwindcss classes to not render properly. If I pin the version to @tailwindcss/vite 4.0.7, they work. This is a vanilla empt qwik project with tailwindcss installed. See the README.md of the repo I provided above.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17286","RelatedDescription":"Open issue \"tailwindcss/vite 4.0.8 or higher with qwik doesn't render classes\" (#17286)"},{"Id":"2929642014","IsPullRequest":true,"CreatedAt":"2025-03-18T20:28:21","Actor":"devongovett","Number":"17276","RawContent":null,"Title":"Fix segmentation fault when loading @tailwindcss/oxide in a Worker thread","State":"closed","Body":"When Tailwind is loaded in a Node Worker thread, it currently causes a segmentation fault on Linux when the thread exits. This is due to a longstanding issue in Rust that affects all native modules: https://github.com/rust-lang/rust/issues/91979. I reported this years ago but unfortunately it is still not fixed, and seems to have gotten worse in Rust 1.83.0 and later. Looks like Tailwind recently updated Rust versions and this issue started appearing when run in tools like Parcel that use worker threads.\r\n\r\nThe workaround is to prevent the native module from ever being unloaded. One way to do that is to always load the native module in the main thread in addition to workers, but this is hard to enforce. @Brooooooklyn found another method, which is to use a linker option for this. I tested this on an Ubuntu system and verified it fixed the issue. You can test with the following script.\r\n\r\n```js\r\n// test.js\r\nconst {Worker} = require('worker_threads');\r\nnew Worker('./worker.js');\r\n\r\n// worker.js\r\nrequire('@tailwindcss/oxide');\r\n```\r\n\r\nWithout this change, a segmentation fault will occur.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17276","RelatedDescription":"Closed or merged PR \"Fix segmentation fault when loading @tailwindcss/oxide in a Worker thread\" (#17276)"},{"Id":"2928202333","IsPullRequest":true,"CreatedAt":"2025-03-18T11:37:20","Actor":"philipp-spiess","Number":"17267","RawContent":null,"Title":"Use bun-baseline for all x64 builds","State":"open","Body":"Closes #17259\r\n\r\nThis PR now also updates the MacOS x64 build to use `bun-baseline`, meaning all x64 builds now use baseline for the improved hardware compatibility.\r\n\r\n## Test plan\r\n\r\nGoing to change the CI script temporarily to run macOS builds on x64.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17267","RelatedDescription":"Open PR \"Use bun-baseline for all x64 builds\" (#17267)"},{"Id":"2924272200","IsPullRequest":false,"CreatedAt":"2025-03-18T11:28:43","Actor":"thomashexagon","Number":"17244","RawContent":null,"Title":"Styles in a monorepo are not included anymore after upgrading to 4.0.8 or higher","State":"closed","Body":"4.0.7 is the latest version that works for my mono repo, I tested every version above but they all break.\n\n- My styles are only imported in my main app, is that the issue?\n- My theme is inside a sub package where all config lives.\n- It feels like it does not resolve or find my css in my sub packages anymore after going to 4.0.8\n\nI can see something was changed for excluding unused variables, but even the static helper doesn't resolve it.\nWhat changed?  Is there some config update that I missed? For now staying on 4.0.7 is my solution.\n\n```\n@import \"@boa/shared-configs/theme/index.css\";\n\n#root {\n    height: 100%;\n    width: 100%;\n}\n\n.no-scroll {\n    overflow-y: hidden !important;\n    width: 100% !important;\n}\n\n.logo-img {\n    height: var(--header-height);\n}\n\n.content {\n    height: calc(100vh - var(--header-height));\n}\n```\n\n```\nimport { StrictMode, Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { queryClient } from '@boa/queries';\nimport './main.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommandMenuProvider } from '@boa/shared-ui';\nimport { AuthProvider } from 'react-oidc-context';\nimport { onSigninCallback, userManager } from './config/config';\nimport UserProvider from '@boa/app-boa/UserProvider';\nimport RouterWrapper from '@boa/shared-routes/RouterWrapper';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n    <StrictMode>\n        <Suspense>\n            <AuthProvider userManager={userManager} onSigninCallback={onSigninCallback}>\n                <QueryClientProvider client={queryClient}>\n                    <UserProvider>\n                        <CommandMenuProvider>\n                            <RouterWrapper />\n                        </CommandMenuProvider>\n                    </UserProvider>\n                    <ToastContainer />\n                </QueryClientProvider>\n            </AuthProvider>\n        </Suspense>\n    </StrictMode>,\n);\n```\n\n```\n@import \"tailwindcss\";\n\n@layer base {\n    *,\n    ::after,\n    ::before,\n    ::backdrop,\n    ::file-selector-button {\n        border-color: var(--color-gray-200, currentColor);\n    }\n}\n\n@theme {\n    --font-family-sans: 'Roboto', 'sans-serif';\n\n    --header-height: 3rem;\n\n    --color-primary: #4093ff;\n    --color-secondary: #4d4d4d;\n    --color-warning: #ffc82e;\n    --color-success: #25c760;\n    --color-error: #ff4c29;\n    --color-light: #f7f7f7;\n    --color-grey: #999999;\n    --color-dark: #343a40;\n    \n    --color-primary-active: #0d76ff;\n    --color-primary-hover: #2685ff;\n    --color-primary-light: #73b0ff;\n    --color-primary-lighter: #d9e9ff;\n    --color-primary-lightest: #f1f5ff;\n    --color-primary-outline: rgba(64, 147, 255, 0.25);\n    --color-primary-ping: rgba(64, 147, 255, 0.4);\n    \n    --color-tertiary: #f1f5ff;\n    --color-tertiary-active: #bed1ff;\n    --color-tertiary-hover: #d7e3ff;\n    --color-tertiary-light: #f2f5fe;\n    \n    --color-secondary-active: #494f54;\n    --color-secondary-hover: #545b62;\n    --color-secondary-light: #868e96;\n    --color-secondary-lighter: #e7e7e7;\n    --color-secondary-lightest: #f6f4f9;\n    --color-secondary-darker: #3d4246;\n    --color-secondary-outline: rgba(77, 77, 77, 0.25);\n    --color-secondary-ping: rgba(77, 77, 77, 0.4);\n    \n    --color-warning-active: #dca200;\n    --color-warning-hover: #f5b500;\n    --color-warning-light: #ffcd43;\n    --color-warning-lighter: #ffe8a9;\n    --color-warning-lightest: #ffefc2;\n    --color-warning-outline: rgba(255, 200, 46, 0.25);\n    --color-warning-ping: rgba(255, 200, 46, 0.4);\n    \n    --color-error-active: #fc2800;\n    --color-error-hover: #ff3c16;\n    --color-error-light: #ff7c63;\n    --color-error-lighter: #ffd2c9;\n    --color-error-lightest: #ffe7e2;\n    --color-error-outline: rgba(255, 76, 41, 0.25);\n    --color-error-ping: rgba(255, 76, 41, 0.4);\n    \n    --color-success-active: #1d9c56;\n    --color-success-hover: #21b162;\n    --color-success-light: #43dc88;\n    --color-success-lighter: #99ecbe;\n    --color-success-lightest: #c4f4d9;\n    --color-success-outline: rgba(37, 199, 96, 0.25);\n    --color-success-ping: rgba(37, 199, 96, 0.4);\n    \n    --color-dark-active: #1d2124;\n    --color-dark-hover: #23272b;\n    --color-dark-light: #343a40;\n    --color-dark-lighter: #7a8693;\n    --color-dark-lightest: #b2b9c1;\n    --color-dark-outline: rgba(82, 88, 93, 0.5);\n    --color-dark-ping: rgba(52, 58, 64, 0.4);\n    \n    --color-light-active: #dddddd;\n    --color-light-hover: #eaeaea;\n    --color-light-outline: rgba(247, 247, 247, 0.25);\n    --color-light-ping: rgba(153, 153, 153, 0.4);\n    \n    --color-transparent: transparent;\n    --color-inherit: inherit;\n    --color-black: #000000;\n    --color-white: #ffffff;\n    \n    --color-grey-darkest: #222222;\n    --color-grey-darker: #444444;\n    --color-grey-select: #777;\n    --color-grey-dark: #999999;\n    --color-grey-light: #dddddd;\n    --color-grey-lighter: #f2f2f2;\n    --color-grey-lightest: #f7f7f7;\n    --color-grey-cold: #919cab;\n    --color-grey-cold-light: #aebbce;\n    \n    --color-blue: #4093ff;\n    --color-blue-darkest: #00263d;\n    --color-blue-darker: #143b5d;\n    --color-blue-dark: #2681f6;\n    --color-blue-light: #ddefff;\n    --color-blue-lighter: #f3f6ff;\n    --color-blue-lightest: #f8faff;\n    --color-blue-selected-dark: #457ec7;\n    --color-blue-selected: #f1f5ff;\n    --color-blue-bricsys: #4093ff;\n    --color-blue-card-border: #bedaff;\n    \n    --color-green: #25c760;\n    --color-orange: #ffae00;\n    --color-orange-dark: #ff6200;\n    --color-orange-light: #fff6db;\n    --color-red: #e74610;\n    --color-red-notification: #FF4747;\n    --color-yellow: #ffc82e;\n    \n    --color-binder: #b0f9d6;\n    --color-revision: #b0f9d6;\n    --color-annotation: #ffbcc2;\n    --color-note: #fff576;\n    --color-notification: #ccecff;\n    --color-workflow: #c6bfff;\n    --color-share: #4093ff;\n    --color-link: #dcdcdc;\n    --color-turquoise: #23fdca;\n    \n    --color-overlay: rgba(215, 215, 215, 0.4);\n    --color-overlay-light: rgba(215, 215, 215, 0.7);\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17244","RelatedDescription":"Closed issue \"Styles in a monorepo are not included anymore after upgrading to 4.0.8 or higher\" (#17244)"},{"Id":"2927825440","IsPullRequest":false,"CreatedAt":"2025-03-18T09:54:45","Actor":"cuiqg","Number":"17264","RawContent":null,"Title":"Are these lines of code incorrect?","State":"closed","Body":"**Reproduction URL**\nhttps://github.com/tailwindlabs/tailwindcss/blob/d7c81164da55a09ef4333abb5195da2fe2e1ba62/packages/tailwindcss/preflight.css#L33-L42\n\nAre these lines of code incorrect?\n\nIt should be?\n\n```css\nfont-family: var(--default-font-family),\n    ui-sans-serif,\n    system-ui,\n    sans-serif,\n    'Apple Color Emoji',\n    'Segoe UI Emoji',\n    'Segoe UI Symbol',\n    'Noto Color Emoji';\n```\n\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17264","RelatedDescription":"Closed issue \"Are these lines of code incorrect?\" (#17264)"},{"Id":"2926656184","IsPullRequest":false,"CreatedAt":"2025-03-17T23:48:32","Actor":"julik","Number":"17259","RawContent":null,"Title":"[V4] Illegal instruction on older Mac Xeons due to same bun AVX","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.0 to 4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNone, I try to run the CLI raw\n\n**What version of Node.js are you using?**\n\nFor example: v22\n\n**What browser are you using?**\n\nDoesn't get there\n\n**What operating system are you using?**\n\nmacOS 12.7.6\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nTrying to run the tailwindcss binary results in a segfault with exit code 4 and SIGILL. This is likely the same issue as the one in #15181 . Also mentioned in https://github.com/tailwindlabs/tailwindcss/discussions/17098 \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17259","RelatedDescription":"Open issue \"[V4] Illegal instruction on older Mac Xeons due to same bun AVX\" (#17259)"},{"Id":"2926070698","IsPullRequest":false,"CreatedAt":"2025-03-17T19:05:57","Actor":"ygdani89","Number":"17256","RawContent":null,"Title":"Error: ‘Failed to load tailwindcss as a PostCSS plugin’ in Next.js","State":"closed","Body":"Error evaluating Node.js code\nError: It looks like you're trying to use tailwindcss directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install @tailwindcss/postcss and update your PostCSS configuration.\n\n\nHi everyone, the only way to fix this is to revert to the previous version of Tailwind. Run this command, and the problem will be solved:  ` npm i -D tailwindcss@3 postcss ` ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17256","RelatedDescription":"Closed issue \"Error: ‘Failed to load tailwindcss as a PostCSS plugin’ in Next.js\" (#17256)"},{"Id":"2925479188","IsPullRequest":true,"CreatedAt":"2025-03-17T15:16:30","Actor":"RobinMalfait","Number":"17255","RawContent":null,"Title":"Add `@source not` support","State":"open","Body":"[ci-all]\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17255","RelatedDescription":"Open PR \"Add `@source not` support\" (#17255)"},{"Id":"2921847750","IsPullRequest":false,"CreatedAt":"2025-03-17T13:54:39","Actor":"davidrunger","Number":"17211","RawContent":null,"Title":"CSS is not included for some Tailwind classes in Pug template (in Vue)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.14 (the latest released version, at the time of writing)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.2, Vue 3.5.13, Pug 3.0.3 (the latest released version of each, at the time of writing)\n\n**What version of Node.js are you using?**\n\nv22.14.0 (the latest LTS release, at the time of writing)\n\n**What browser are you using?**\n\nFirefox (though I don't think it's relevant)\n\n**What operating system are you using?**\n\nLinux (Debian / MX Linux) (though I don't think it's relevant)\n\n**Reproduction URL**\n\nI cannot provide a Tailwind Play URL, because I think that this bug occurs only in Pug templates, whereas Tailwind Play only supports plain HTML.\n\nBut here's a public GitHub repo with a minimal reproduction: https://github.com/davidrunger/tailwind-pug-bug-demo \n\nAnd here's that GitHub repo imported into CodeSandbox: https://codesandbox.io/p/github/davidrunger/tailwind-pug-bug-demo/main?file=%2Fsrc%2FApp.vue\n\n**Describe your issue**\n\nCSS styles are sometimes not included for some Tailwind classes in Pug templates in my Vue project.\n\nIn the reproduction linked above, there is this Vue component:\n\n```vue\n<template lang=\"pug\">\n.bg-neutral-900.text-red-500 This is a test.\n</template>\n```\n\nWhen viewed in the browser, only the `text-red-500` class has any visible effect (making the text red). The `bg-neutral-900` class does not have any effect (when served either via the Vite hot-reloading dev server or when compiled and viewed via the Vite static production preview server).\n\n**Live dev server:**\n\n![Image](https://github.com/user-attachments/assets/af67c656-2990-4a7a-97d8-e8b182de7009)\n\n**Compiled production server:**\n\n![Image](https://github.com/user-attachments/assets/796b2e64-59fd-4829-9e82-102053e39f86)\n\nI expect that the `bg-neutral-900` class in the Pug Vue template would cause Tailwind to include CSS that gives that text a dark background, which is what happens if we go back to `tailwindcss` and `@tailwindcss/vite` at v4.0.9 :\n\n**Live dev server:**\n\n![Image](https://github.com/user-attachments/assets/ce2e1231-c77c-42b9-b268-e81f3a3835bc)\n\n**Compiled production server:**\n\n![Image](https://github.com/user-attachments/assets/0074db7d-553f-44ec-afd8-3096c36be27d)\n\nThank you for Tailwind and for taking a look at this bug!\n\n**Edit:** The bug also occurs when using the Tailwind PostCSS plugin, rather than the Tailwind Vite plugin (when using Tailwind v4.0.14, and not when using Tailwind v4.0.9). I pushed a branch [`use-tailwind-postcss-plugin`](https://github.com/davidrunger/tailwind-pug-bug-demo/tree/use-tailwind-postcss-plugin) to the minimal bug reproduction repo that demonstrates this.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17211","RelatedDescription":"Closed issue \"CSS is not included for some Tailwind classes in Pug template (in Vue)\" (#17211)"},{"Id":"2925153603","IsPullRequest":true,"CreatedAt":"2025-03-17T13:54:38","Actor":"RobinMalfait","Number":"17252","RawContent":null,"Title":"Pre process `<template lang=\"…\">` in Vue files","State":"closed","Body":"This PR fixes an issue where `<template lang=\"…\">…</template>` in Vue files should be handled as-if it's the language specified in the `lang` attribute.\r\n\r\nTo do this, we added a new Vue pre processor and run the content through the same pre processor logic as we do for other languages.\r\n\r\nFixes: #17211\r\n\r\n# Test plan\r\n\r\n1. Added a test to verify this works\r\n2. Existing tests still work\r\n\r\nVisually verified against the reproduction in the issue:\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"1273\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d1accdeb-97cf-48ef-83fb-978832b3e599\" /> | <img width=\"1273\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ab7ec19c-b6c4-43be-8845-096ff4e58808\" /> |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17252","RelatedDescription":"Closed or merged PR \"Pre process `<template lang=\"…\">` in Vue files\" (#17252)"},{"Id":"2924575512","IsPullRequest":true,"CreatedAt":"2025-03-17T12:23:02","Actor":"philipp-spiess","Number":"17247","RawContent":null,"Title":"Don't use `color-mix(…)` on `currentColor`","State":"closed","Body":"Closes #17194\r\n\r\nThis PR works around a crash when rendering opacity on `currentColor` (as used by the placeholder styles in preflight) on Safari 16.4 and Safari 16.5. Unfortunately it seems that the [`color-mix(…)` function is not compatible with `currentColor` for these versions of Safari](https://stackoverflow.com/questions/76436497/the-color-mix-property-involving-currentcolor-causes-safari-to-crash). We tried a few different ways to work around this without success:\r\n\r\n- Using an `@supports` media query to target these Safari versions and overwriting the placeholder still makes these browsers crash.\r\n- Changing the way we apply opacity to `currentColor` in core doesn't seem to work for non-placeholder values: https://github.com/tailwindlabs/tailwindcss/issues/17194#issuecomment-2728949181 However, a wrong opacity is still better than a complete browser crash.\r\n\r\nThe work-around of using the `oklab(…)` function does seem to work for `::placeholder` styles in preflight though according to our testing so this PR applies this change to preflight. \r\n\r\n## Test plan\r\n\r\n- See https://play.tailwindcss.com/WSsSTLHu8h?file=css \r\n- Tested on Chrome/Safari 16.4/Safari 18.3/Firefox\r\n\r\n<img width=\"564\" alt=\"Screenshot 2025-03-17 at 11 32 47\" src=\"https://github.com/user-attachments/assets/cfd0db71-f39a-4bc0-bade-cea70afe50ae\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17247","RelatedDescription":"Closed or merged PR \"Don't use `color-mix(…)` on `currentColor`\" (#17247)"},{"Id":"2922283990","IsPullRequest":false,"CreatedAt":"2025-03-17T11:35:57","Actor":"leetcow","Number":"17221","RawContent":null,"Title":"length interpreted as color","State":"closed","Body":"values for `border-[]` with more than one value (such as `border-[2px_2px]` or `border-[0_2px_0_2px]` are misinterpreted as colors\n\nthis can be disambiguated with `border-[length:2px_2px]`, but still this seems worth addressing as colors would not have spaces ever I think?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17221","RelatedDescription":"Closed issue \"length interpreted as color\" (#17221)"},{"Id":"2924581773","IsPullRequest":true,"CreatedAt":"2025-03-17T11:35:56","Actor":"RobinMalfait","Number":"17248","RawContent":null,"Title":"Fix inferring data type of `border-[…]` with multiple values","State":"closed","Body":"This PR fixes an issue where arbitrary values such as `border-[12px_4px]` were incorrectly producing `border-color` instead of `border-width` values.\n\nTo solve it, I extended the `<line-width>` check to make sure that every part of the value is a valid `<line-width>`.\n\nIn order for a `line-width` to be valid, every part should be one of:\n\n1. A keyword: `thin`, `medium`, `thick`\n2. A length: `12px`\n3. A number: `0`\n\nFixes: #17221\n\n# Test plan\n\n1. Added test to verify this works\n2. All existing tests pass\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17248","RelatedDescription":"Closed or merged PR \"Fix inferring data type of `border-[…]` with multiple values\" (#17248)"},{"Id":"2923071845","IsPullRequest":true,"CreatedAt":"2025-03-17T09:59:19","Actor":"depfu[bot]","Number":"17229","RawContent":null,"Title":"Update autoprefixer 10.4.20 → 10.4.21 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ autoprefixer (10.4.20 → 10.4.21) · [Repo](https://github.com/postcss/autoprefixer) · [Changelog](https://github.com/postcss/autoprefixer/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/autoprefixer/releases/tag/10.4.21\">10.4.21</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed old <code class=\"notranslate\">-moz-</code> prefix for <code class=\"notranslate\">:placeholder-shown</code> (by <a href=\"https://bounce.depfu.com/github.com/Marukome0743\">@Marukome0743</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/autoprefixer/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/autoprefixer/compare/dae6eb465da5640bb03ecda8b6d6b73e9ba26429...541295c0e6dd348db2d3f52772b59cd403c59d29\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/541295c0e6dd348db2d3f52772b59cd403c59d29\"><code>Release 10.4.21 version</code></a></li>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/8d555f7e5e665d6a70e1d08db6e0bc9c4262db66\"><code>Update dependencies and sort imports</code></a></li>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/5c2421e82af45ee085d0806110fcef66bbebe59b\"><code>Update Node.js and pnpm on CI</code></a></li>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/af9cb5f365f66bf5169f1f42e08036651453b1a6\"><code>fix: replace `:-moz-placeholder-shown` with `:-moz-placeholder` (#1532)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17229","RelatedDescription":"Closed or merged PR \"Update autoprefixer 10.4.20 → 10.4.21 (patch)\" (#17229)"},{"Id":"2921399537","IsPullRequest":false,"CreatedAt":"2025-03-17T09:53:46","Actor":"cyrdam","Number":"17208","RawContent":null,"Title":"Theme loading and CSS referencing in multiple clients css files in v4 is not working","State":"closed","Body":"Theme loading and CSS referencing in multiple clients css files in v4 is not working\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.2\n\n**What version of Node.js are you using?**\n\nv22.13.0\n\n**What browser are you using?**\n\nZen Browser, Chrome, Firefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/devbox/xenodochial-wind-xq6tpr?workspaceId=ws_9myXi1t2wFh75z5XMDVEu&embed=1\n\n**Describe your issue**\n\nWe have updated our app from v3 to v4. Our app has multiple clients configurations, meaning: each client has its own config file. Using the dev server and build with v3 works fine and produces the expected result. The style files are also imported with `import('path/to/CSS')` and all looks good.\n\nWith v4 we migrated the JS configs into CSS files. Each client has its own CSS file. This is our example file structure:\n\n```\nsrc/\n- styles/\n  - client-a.css (@reference \"./core.css\", @theme)\n  - client-b.css (@reference \"./core.css\", @theme)\n  - core.css (@import \"tailwindcss\", @utilities)\n  - vendor.css (@reference \"./core.css\")\n- App.tsx (imports some other CSS and also `import \"./styles/vendor.css\"`)\n- main.tsx (import \"./styles/core.css\", `import(`./style/${VITE_CLIENT}.css`)`)\n```\n\nSome explanation:\n- core.css:\n  - is the main CSS file for the application\n  - imports tailwindcss and has some global utilities defined (util class names based on the variable name in the theme files)\n  - imported statically\n- client-*.css:\n  - the files have theme defined variables and these should be available in every CSS file, that is using tailwind\n  - has one theme or multiple themes\n  - imported dynamically with `import(...)`\n- vendor.css:\n  - some file to override other packages styles by class name\n  - imported statically\n- main.tsx:\n  - imports the most critical CSS files (core and themes)\n- App.tsx:\n  - loads other CSS files\n\nHere are the issues.\n\nDev server:\n\nWhen we start the dev server, it will not load any variable/theme from any theme CSS file. When we add `@import \"tailwind\"`, rather than `@reference` into the theme file, then it works.\n\nWe could ignore the core file and move duplicated code in each client file, but we can't do that. The other files don't know which client they should reference to, as CSS can't read the env variable.\n\nThe application \"could\" work with one file only, but there is another issue with the build files.\n\nCheck out my shared link, you can test it by running whatever client config is defined in the `package.json` dev scripts. Import tailwind to the themes, and it works.\n\nPreview:\n\nVite has a preview function, that shows something different. Themes still don't work, same as dev server.\n\nOn the dev server the `vendor.css` style was fine, but it is **partly** ignored on preview. See link for the text color, should be text-black, but it is white, the background color is the correct color: yellow.\n\nBoth files (core and vendor) are statically imported, and not dynamic.\n\nBuild (extra):\n\nThe build is not failing, but the path for the dynamic theme files are not updated to the output file name. This way the import will fail: \"index-SdjkFS.css\" is not the same as the build JS loader path (import('./style/client-a.css')). This could be a vite/rollup issue, but I am not so sure. All this is working fine with v3.\n\nI tested it with vite and postcss plugin. Same issues In both cases.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17208","RelatedDescription":"Closed issue \"Theme loading and CSS referencing in multiple clients css files in v4 is not working\" (#17208)"},{"Id":"2924335914","IsPullRequest":false,"CreatedAt":"2025-03-17T09:24:42","Actor":"deguich","Number":"17246","RawContent":null,"Title":"CLI Watch never end 2 CPU cores at 100%","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.14\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nI just use the Tailwind4 directory of https://github.com/pinzonjulian/tailwind_css_cli_watch_bug.git\n\n```powershell\ngit clone https://github.com/pinzonjulian/tailwind_css_cli_watch_bug.git\ncd tailwind4\nnpm install tailwindcss @tailwindcss/cli\nnpx @tailwindcss/cli -i input.css -o output.css --watch\n```\n\n**Describe your issue**\n\nCommand never end, there is no output, 2 cores at 100%. \n\nIf I remove output.css, the process don't create it.\n\nWhen I remove --watch.\nIt works : \n\n```powershell\n> $env:DEBUG=1; npx @tailwindcss/cli -i input.css -o output.css\n≈ tailwindcss v4.0.14\n\nDone in 91ms\n\n[95.04ms] [@tailwindcss/cli] (initial build)\n[14.09ms]   ↳ Setup compiler\n[38.04ms]   ↳ Scan for candidates\n[33.33ms]   ↳ Build CSS\n[ 1.06ms]   ↳ Write output\n```\n\nCould a global configuration be the cause of the problem?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17246","RelatedDescription":"Open issue \"CLI Watch never end 2 CPU cores at 100%\" (#17246)"},{"Id":"2923381922","IsPullRequest":false,"CreatedAt":"2025-03-17T09:20:54","Actor":"kkingsbe","Number":"17234","RawContent":null,"Title":"Tailwind V4 Styles not rendering on Chromium running on a Raspberry PI","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js with Shadcn/ui\n\n**What version of Node.js are you using?**\nv18 lts\n\n**What browser are you using?**\nChromium (didn't work), Opera GX (worked)\n\n**What operating system are you using?**\nLinux and Windows\n\n**Reproduction URL**\n[https://67d7564a89aa2800080b8b79--kyles-smart-mirror.netlify.app](https://67d7564a89aa2800080b8b79--kyles-smart-mirror.netlify.app)\n\n**Describe your issue**\nI am not too sure how broad this issue is, but I have confirmed that Tailwind V4 seems to be incompatible with the Chromium browser which ships on the Raspberry Pi. The same deployment when accessed from a device other than a Raspberry Pi renders as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17234","RelatedDescription":"Closed issue \"Tailwind V4 Styles not rendering on Chromium running on a Raspberry PI\" (#17234)"},{"Id":"2922994416","IsPullRequest":false,"CreatedAt":"2025-03-17T09:19:03","Actor":"jcalfee","Number":"17228","RawContent":null,"Title":"@tailwindcss/upgrade  - JavaScript heap out of memory","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: solid-start 0.3.11\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What operating system are you using?**\n\nFor example: Linux\n\n**Describe your issue**\n\nCould you please clarify the RAM requirements for the auto upgrade?  I'm up to 4GB and still running out of heap.  Is it expected that this would need so much heap or am I looking at a bug?  It takes about 5 min of high CPU before it crashes.  \n\nThe project is not that large (about 128 component files).  I certainly have css in ts code and jsx code.  I'm not sure what the updater supports.\n\nI am unable to create a reproduction URL.  I'm just wondering if this much RAM and CPU is normal.  \n\n```bash\n$ NODE_OPTIONS=\"--max-old-space-size=4096\" npx @tailwindcss/upgrade\n⠋(node:808566) Warning: Setting the NODE_TLS_REJECT_UNAUTHORIZED environment variable to '0' makes TLS connections and HTTPS requests insecure by disabling certificate verification.\n(Use `node --trace-warnings ...` to show where the warning was created)\n≈ tailwindcss v4.0.14\n\n│ Searching for CSS files in the current directory and its subdirectories… \n\n\n<--- Last few GCs --->\n\n[808605:0xca59510]   281087 ms: Mark-Compact 3777.8 (4128.5) -> 3764.7 (4128.0) MB, 3082.03 / 0.00 ms  (average mu = 0.139, current mu = 0.033) task; scavenge might not succeed\n[808605:0xca59510]   281126 ms: Scavenge 3778.5 (4128.0) -> 3766.4 (4128.0) MB, 7.14 / 0.00 ms  (average mu = 0.139, current mu = 0.033) task; \n[808605:0xca59510]   281158 ms: Scavenge 3778.3 (4128.0) -> 3767.7 (4129.0) MB, 8.80 / 0.00 ms  (average mu = 0.139, current mu = 0.033) task; \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\n----- Native stack trace -----\n\n 1: 0xb8d0a3 node::OOMErrorHandler(char const*, v8::OOMDetails const&) [node]\n 2: 0xf06250 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node]\n 3: 0xf06537 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node]\n 4: 0x11180d5  [node]\n 5: 0x1118664 v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [node]\n 6: 0x112f554 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) [node]\n 7: 0x112fd6c v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node]\n 8: 0x1188b2c v8::internal::MinorGCJob::Task::RunInternal() [node]\n 9: 0xd44d46  [node]\n10: 0xd482ef node::PerIsolatePlatformData::FlushForegroundTasksInternal() [node]\n11: 0x18c7693  [node]\n12: 0x18dc10b  [node]\n13: 0x18c83b7 uv_run [node]\n14: 0xbd3be6 node::SpinEventLoopInternal(node::Environment*) [node]\n15: 0xd18564  [node]\n16: 0xd18ffd node::NodeMainInstance::Run() [node]\n17: 0xc7d43f node::Start(int, char**) [node]\n18: 0x7a6a9da77d90  [/lib/x86_64-linux-gnu/libc.so.6]\n19: 0x7a6a9da77e40 __libc_start_main [/lib/x86_64-linux-gnu/libc.so.6]\n20: 0xbd180e _start [node]\nAborted (core dumped)\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17228","RelatedDescription":"Closed issue \"@tailwindcss/upgrade  - JavaScript heap out of memory\" (#17228)"},{"Id":"2923406501","IsPullRequest":false,"CreatedAt":"2025-03-17T09:04:45","Actor":"babycommando","Number":"17236","RawContent":null,"Title":"The Web is for everyone, not just people with the latest iPhone. ","State":"closed","Body":"Tailwind v4 Breaks on IOS <16.4 - we need a proper fallback urgently.\n\nThe problems have been reported countless times already and a few brave community members are even trying to propose solutions for it. \n\nTailwind adoption is churning for serious production deployed projects and **definetly deserve some special attention from the core team.**\n\nV4 is effectively useless on iOS <16.4 (iphone X and below, ipads as well stuck on old safari versions - probably other older browsers and platforms as well like firefox on some linux installations, etc.), breaking sites entirely for a huge segment of users worldwide. This is very bad for business.\n\nThis isn't some minor inconvenience—honestly it’s a complete disaster for accessibility, usability, and developer sanity (if you care about it or just pretend to). \n\nAre we seriously telling people to throw their older gadgets in the bin just to view a website properly? This is not a luxury issue. This is a fundamental failure in progressive enhancement, an awful accessibility policy.\n\nThere is no fallback to support minimally the millions of users with older phones and devices. \n\n# The Web is for everyone, not just people with the latest iPhone.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17236","RelatedDescription":"Closed issue \"The Web is for everyone, not just people with the latest iPhone. \" (#17236)"},{"Id":"2923183353","IsPullRequest":false,"CreatedAt":"2025-03-16T17:26:41","Actor":"Imafikus","Number":"17231","RawContent":null,"Title":"[v4] Unable to get tailwind running with CRA","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nProject was created using CRA, currently using postcss: 8.5.3\n\n**What version of Node.js are you using?**\n\nv21.1.0\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS, Windows\n\n**Reproduction URL**\n\nNot sure how to reproduce this, since it's a build time bug\n\n**Describe your issue**\n\nI've upgraded my project as per migration instructions and I've installed separate `@taliwindcss/postcss` package as required. \n\nSteps I took: \n\n- Run `npx @tailwindcss/upgrade`\n- Installed `@taliwindcss/postcss`\n- Run `npm run start` which is an alias for `react-scripts start`\n- I'm getting the following error constantly: \n\n```\nFailed to compile.\n\nError: It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.\n```\n \n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17231","RelatedDescription":"Closed issue \"[v4] Unable to get tailwind running with CRA\" (#17231)"},{"Id":"2922360285","IsPullRequest":false,"CreatedAt":"2025-03-15T18:01:39","Actor":"nongtiny","Number":"17224","RawContent":null,"Title":"Tailwind v4 not working in mobile device but working fine in laptop","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.2\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome and Safari\n\n**What operating system are you using?**\n\nIPhone 11\niOS v16.3.1\n\n**Reproduction URL**\nhttps://tailwindcss.com/docs/compatibility\n\n**Describe your issue**\n\nHello Tailwind team,\n\nI'm developing website using TailwindV4. In the laptop(macOS) both desktop and mobile is running fine (developing responsive), but when I tried to develop and debug on real mobile device. It's error. I use with a lot of tailwind utillities. The error are something like box shadow missing, hover not working, weird z-index, border missing, etc. (a lot happen)\n\nSo, I tried to open the tailwind website using my phone. It's error too.\n\n![image](https://github.com/user-attachments/assets/a8164d24-f4e1-4d4f-a66b-ca01775ab46a)\n\n![image](https://github.com/user-attachments/assets/a217d411-b325-4ff2-9fb5-d77e37295a9f)\n\nYou can see that it's error both Chrome and Safari\n\nCan you please check what is happenning? If there anything I can help your team can fix this I willing to help. Because our team is  working on migration to TailwindV4.\n\nI hope that we can get the answer and make this work perfectly.\n\nThanks in advanced.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17224","RelatedDescription":"Closed issue \"Tailwind v4 not working in mobile device but working fine in laptop\" (#17224)"},{"Id":"2922050962","IsPullRequest":false,"CreatedAt":"2025-03-15T13:49:57","Actor":"leetcow","Number":"17214","RawContent":null,"Title":"break-words not working as intended","State":"closed","Body":"`break-words` sets `overflow-wrap: break-word;`, but this does not break the line for me:\n\n<img width=\"546\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/69b5b94d-b7a0-4baf-ac4b-1b2609dede6c\" />\n\nwhile `word-break: break-word;` does:\n\n<img width=\"496\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2e7894f1-3da9-4a01-aac6-dc94981bf796\" />\n\nI did not set a width for the container, so the viewport width is what causes the breaking.\n\nIn tailwind there is no way to set `word-break: break-word;`.\n\nmaybe `break-words` should apply both rules?\n\nedit: `overflow-wrap: anywhere` also breaks lines in my example as intended, but that rule is not available in tailwind.\n\nbasically, I would need either of these:\n\n```\noverflow-wrap: anywhere;\nword-break: break-word;\n```\n\nbut neither is available.\n\nfrom my testing, it seems that `overflow-wrap: break-word;` only actually breaks words when the element itself has a width/max-width. when a parent does, or the max viewport width is reached, it does nothing.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17214","RelatedDescription":"Closed issue \"break-words not working as intended\" (#17214)"},{"Id":"2922088844","IsPullRequest":false,"CreatedAt":"2025-03-15T13:49:09","Actor":"YoonuchOfficial","Number":"17215","RawContent":null,"Title":"Play CDN not working","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**Describe your issue**\n\n[https://unpkg.com/@tailwindcss/browser@4](https://unpkg.com/@tailwindcss/browser@4)\n\n![Image](https://github.com/user-attachments/assets/db631f60-5562-415c-9e59-70c094ee1cff)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17215","RelatedDescription":"Closed issue \"Play CDN not working\" (#17215)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-20T03:30:23.3630105Z","RunDurationInMilliseconds":693}