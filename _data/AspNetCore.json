{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ASP.NET Core in .NET 5","PublishedOn":"2020-11-10T14:30:35+00:00","CommentsCount":53,"FacebookCount":0,"Summary":".NET 5 is now released! .NET 5 is the next version of .NET Core and the future of the .NET platform. With .NET 5 you have everything you need to build rich, interactive front end web UI and powerful...","Href":"https://devblogs.microsoft.com/aspnet/announcing-asp-net-core-in-net-5/","RawContent":null},{"Title":"Unified Blazor UI in the Mobile Blazor Bindings Preview 5","PublishedOn":"2020-10-30T16:56:53+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"I&#8217;m excited to announce that today we are releasing the Mobile Blazor Bindings Preview 5 update that adds support for sharing UI between web apps and mobile/desktop apps. You can now use a Razor...","Href":"https://devblogs.microsoft.com/aspnet/unified-ui-mobile-blazor-bindings-preview-5/","RawContent":null},{"Title":"gRPC performance improvements in .NET 5","PublishedOn":"2020-10-27T17:10:30+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"gRPC is a modern open source remote procedure call framework. There are many exciting features in gRPC: real-time streaming, end-to-end code generation, and great cross-platform support to name a few....","Href":"https://devblogs.microsoft.com/aspnet/grpc-performance-improvements-in-net-5/","RawContent":null},{"Title":"ASP.NET Core updates in .NET 5 Release Candidate 2","PublishedOn":"2020-10-13T18:14:17+00:00","CommentsCount":55,"FacebookCount":0,"Summary":".NET 5 Release Candidate 2 (RC2) is now available and is ready for evaluation. .NET 5 RC2 is a &#8220;go live&#8221; release, meaning it&#8217;s supported in production. This prerelease of .NET 5 is...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-release-candidate-2/","RawContent":null},{"Title":"Azure Static Web Apps with .NET and Blazor","PublishedOn":"2020-09-22T16:00:45+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Azure Static Web Apps is a service that automatically builds and deploys full stack web apps from a GitHub repository. Azure Static Web Apps consist of a static web frontend, and an Azure Functions...","Href":"https://devblogs.microsoft.com/aspnet/azure-static-web-apps-with-blazor/","RawContent":null},{"Title":"ASP.NET Core updates in .NET 5 Release Candidate 1","PublishedOn":"2020-09-14T17:21:45+00:00","CommentsCount":102,"FacebookCount":0,"Summary":".NET 5 Release Candidate 1 (RC1) is now available and is ready for evaluation. .NET 5 RC1 is a &#8220;go live&#8221; release; you are supported using it in production. Here&#8217;s what&#8217;s new in...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-release-candidate-1/","RawContent":null},{"Title":"Free e-book: Blazor for ASP.NET Web Forms Developers","PublishedOn":"2020-09-08T16:44:00+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We are thrilled to announce the release of our new e-book: Blazor for ASP.NET Web Forms developers. This book caters specifically to ASP.NET Web Forms developers looking for guidelines. As well as...","Href":"https://devblogs.microsoft.com/aspnet/blazor-aspnet-webforms-ebook/","RawContent":null},{"Title":"ASP.NET Core updates in .NET 5 Preview 8","PublishedOn":"2020-08-25T20:18:17+00:00","CommentsCount":52,"FacebookCount":0,"Summary":".NET 5 Preview 8 is now available and is ready for evaluation. Here&#8217;s what&#8217;s new in this release:\nAzure Active Directory authentication with Microsoft.Identity.Web\nCSS isolation for Blazor...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-preview-8/","RawContent":null},{"Title":"Hybrid Blazor apps in the Mobile Blazor Bindings July update","PublishedOn":"2020-07-22T16:57:41+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"I&#8217;m excited to announce we are releasing the Mobile Blazor Bindings July update! This release adds support for building Hybrid Blazor apps, which contain both native and web UI.\nHybrid apps are...","Href":"https://devblogs.microsoft.com/aspnet/hybrid-blazor-apps-in-mobile-blazor-bindings-july-update/","RawContent":null},{"Title":"ASP.NET Core Updates in .NET 5 Preview 7","PublishedOn":"2020-07-21T17:01:04+00:00","CommentsCount":19,"FacebookCount":0,"Summary":".NET 5 Preview 7 is now available and is ready for evaluation. Here&#8217;s what&#8217;s new in this release:\nBlazor WebAssembly apps now target .NET 5\nUpdated debugging requirements for Blazor...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-preview-7/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"780898291","IsPullRequest":true,"CreatedAt":"2021-01-07T00:21:37","Actor":"dotnet-maestro[bot]","Number":"29108","RawContent":null,"Title":"[master] Update dependencies from dotnet/efcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ccafa991-4408-48df-d45d-08d76e1d3434)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: ccafa991-4408-48df-d45d-08d76e1d3434\r\n- **Build**: 20210106.1\r\n- **Date Produced**: 1/6/2021 10:45 PM\r\n- **Commit**: 8a14897ebadc5dcbc1e80528093e5c3000f4eeb6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **dotnet-ef**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **Microsoft.EntityFrameworkCore**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 6.0.0-alpha.1.21055.6 to 6.0.0-alpha.1.21056.1][1]\r\n\r\n[1]: https://github.com/dotnet/efcore/compare/81aaca8...8a14897\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ccafa991-4408-48df-d45d-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/29108","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/efcore\" (#29108)"},{"Id":"780818667","IsPullRequest":true,"CreatedAt":"2021-01-06T23:52:11","Actor":"halter73","Number":"29101","RawContent":null,"Title":"Fix padding in Kestrel connection logs","State":"closed","Body":"Before:\r\n\r\n```\r\ndbug: Microsoft.AspNetCore.Server.Kestrel.Core.Internal.LoggingConnectionMiddleware[0]\r\n      ReadAsync[490]\r\n      47 45 54 20 2F 66 61 76  69 63 6F 6E 2E 69 63 6F   GET /fav icon.ico\r\n      20 48 54 54 50 2F 31 2E  31 0D 0A 48 6F 73 74 3A    HTTP/1. 1..Host:\r\n...\r\n      65 2C 20 62 72 0D 0A 41  63 63 65 70 74 2D 4C 61   e, br..A ccept-La\r\n      6E 67 75 61 67 65 3A 20  65 6E 2D 55 53 2C 65 6E   nguage:  en-US,en\r\n      3B 71 3D 30 2E 39 0D 0A  0D 0A                  ;q=0.9.. ..\r\n```\r\n\r\nAfter:\r\n\r\n```\r\ndbug: Microsoft.AspNetCore.Server.Kestrel.Core.Internal.LoggingConnectionMiddleware[0]\r\n      ReadAsync[490]\r\n      47 45 54 20 2F 66 61 76  69 63 6F 6E 2E 69 63 6F   GET /fav icon.ico\r\n      20 48 54 54 50 2F 31 2E  31 0D 0A 48 6F 73 74 3A    HTTP/1. 1..Host:\r\n...\r\n      65 2C 20 62 72 0D 0A 41  63 63 65 70 74 2D 4C 61   e, br..A ccept-La\r\n      6E 67 75 61 67 65 3A 20  65 6E 2D 55 53 2C 65 6E   nguage:  en-US,en\r\n      3B 71 3D 30 2E 39 0D 0A  0D 0A                     ;q=0.9.. ..\r\n```\r\n\r\n\";q=0.9..\" is misaligned in the \"Before:\" example.","Url":"https://github.com/dotnet/aspnetcore/pull/29101","RelatedDescription":"Closed or merged PR \"Fix padding in Kestrel connection logs\" (#29101)"},{"Id":"780842543","IsPullRequest":true,"CreatedAt":"2021-01-06T23:31:45","Actor":"jkotalik","Number":"29104","RawContent":null,"Title":"Fix flaky test: Pass_thru_when_exception_in_logic","State":"closed","Body":"Failure here: https://dev.azure.com/dnceng/public/_build/results?buildId=938389&view=ms.vss-test-web.build-test-results-tab&runId=29665626&resultId=104752&paneView=debug\r\n```\r\n\r\n\r\nError message\r\nSystem.ArgumentException : Destination array was not long enough. Check the destination index, length, and the array's lower bounds. (Parameter 'destinationArray')\r\n\r\n\r\nStack trace\r\n   at System.Array.Copy(Array sourceArray, Int32 sourceIndex, Array destinationArray, Int32 destinationIndex, Int32 length, Boolean reliable)\r\n   at System.Array.Copy(Array sourceArray, Int32 sourceIndex, Array destinationArray, Int32 destinationIndex, Int32 length)\r\n   at System.Collections.Generic.List`1.CopyTo(T[] array, Int32 arrayIndex)\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_exception_in_logic() in /_/src/Middleware/Diagnostics.EntityFrameworkCore/test/FunctionalTests/DatabaseErrorPageMiddlewareTest.cs:line 462\r\n--- End of stack trace from previous location ---\r\n```\r\nHad a [conversation with the runtime team](https://github.com/dotnet/runtime/issues/42342) and it seemed fairly clear that there was a race in our code. This adds a lock for the logger and creates a new list to return for messages.\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/29104","RelatedDescription":"Closed or merged PR \"Fix flaky test: Pass_thru_when_exception_in_logic\" (#29104)"},{"Id":"780904216","IsPullRequest":true,"CreatedAt":"2021-01-06T23:10:35","Actor":"wtgodbe","Number":"29109","RawContent":null,"Title":"[release/5.0] Don't include RuntimeList.xml in sharedFx archive","State":"open","Body":"Resolves https://github.com/dotnet/aspnetcore/issues/27670\r\n\r\ndotnet/runtime and dotnet/windowsdesktop don't include this file in their SharedFx archives. Looking at the SDK archive, it contains a `runtimelist.xml` for aspnetcore, but not for runtime or windowsdesktop. We should remove the file from our archive, but keep it in our .nupkg.","Url":"https://github.com/dotnet/aspnetcore/pull/29109","RelatedDescription":"Open PR \"[release/5.0] Don't include RuntimeList.xml in sharedFx archive\" (#29109)"},{"Id":"780887110","IsPullRequest":false,"CreatedAt":"2021-01-06T22:27:34","Actor":"benrobot","Number":"29107","RawContent":null,"Title":"Explicitly specifying UseEphemeralDataProtectionProvider should NOT log a warning","State":"open","Body":"## Summary\r\n\r\nThe line (in Startup.cs) `services.AddDataProtection().UseEphemeralDataProtectionProvider();` results in a warning message getting logged when the `EphemeralDataProtectionProvider` is instantiated. I believe the provider should NOT log a warning if it was explicitly selected.\r\n\r\nIt appears that, when the constructor receives a logger, it will always call `UsingEphemeralDataProtectionProvider()`:\r\nhttps://github.com/dotnet/aspnetcore/blob/69600972f69d669ebecd30d59abd0e1e2ff62ac0/src/DataProtection/DataProtection/src/EphemeralDataProtectionProvider.cs#L60\r\n\r\nAnd `UsingEphemeralDataProtectionProvider()` results in a warning:\r\nhttps://github.com/dotnet/aspnetcore/blob/69600972f69d669ebecd30d59abd0e1e2ff62ac0/src/DataProtection/DataProtection/src/LoggingExtensions.cs#L328-L331\r\n\r\n\r\n\r\n\r\n## Motivation and goals\r\n\r\nThe intent is to encourage developers to always take warnings seriously. This warning causes logs to contain warnings that developers have no choice but to ignore.\r\n\r\nOne possible solution is to simply change this warning to an information level message. This should be ok because code that employs the ephemeral data provider as a fall back is already logging an equivalent warning.\r\nhttps://github.com/dotnet/aspnetcore/blob/69600972f69d669ebecd30d59abd0e1e2ff62ac0/src/DataProtection/DataProtection/src/KeyManagement/XmlKeyManager.cs#L549-L553\r\n\r\nA different solution would be to change `UseEphemeralDataProtectionProvider()` extension method to pass in a newly created option to specify that this specific warning is NOT necessary because the provider was explicitly requested.\r\n\r\n\r\n## In scope\r\n\r\nA stateless API backend that uses JWTs to manage authentication and has no need to persist keys between instances of the application (aside from the JWT related key which is obtained from configuration).\r\n\r\n\r\n## Risks / unknowns\r\n\r\n*How might developers misinterpret/misuse this?*\r\nThe current implementation, which always logs a warning, can lead developers to search for a way to avoid the ephemeral data protection provider even when it might be a good fit for their solution.\r\n\r\n*How might implementing it restrict us from other enhancements in the future? Also list any perf/security/correctness concerns.*\r\nNew code that falls back on the ephemeral provider should always log a warning similar to https://github.com/dotnet/aspnetcore/blob/69600972f69d669ebecd30d59abd0e1e2ff62ac0/src/DataProtection/DataProtection/src/KeyManagement/XmlKeyManager.cs#L553 because the new ephemeral provider will no longer log a warning on its own.\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/29107","RelatedDescription":"Open issue \"Explicitly specifying UseEphemeralDataProtectionProvider should NOT log a warning\" (#29107)"},{"Id":"780827687","IsPullRequest":true,"CreatedAt":"2021-01-06T22:19:06","Actor":"JamesNK","Number":"29102","RawContent":null,"Title":"Fix incorrect Kestrel logging IDs and names","State":"closed","Body":"Fixes https://github.com/dotnet/aspnetcore/issues/28261","Url":"https://github.com/dotnet/aspnetcore/pull/29102","RelatedDescription":"Closed or merged PR \"Fix incorrect Kestrel logging IDs and names\" (#29102)"},{"Id":"780864467","IsPullRequest":false,"CreatedAt":"2021-01-06T21:43:42","Actor":"ryanbrandenburg","Number":"29106","RawContent":null,"Title":"Razor Semantic tokens tests need to use baselines","State":"open","Body":"Currently we manually write out the test number for this which is majorly time consuming when we make big changes. Let's make this a baseline similar to Ajay's to make it more maintainable.","Url":"https://github.com/dotnet/aspnetcore/issues/29106","RelatedDescription":"Open issue \"Razor Semantic tokens tests need to use baselines\" (#29106)"},{"Id":"780863435","IsPullRequest":false,"CreatedAt":"2021-01-06T21:41:40","Actor":"jontavakoli","Number":"29105","RawContent":null,"Title":"Generics and Inheritance","State":"open","Body":"Consider the following code in C#, it executes just fine. As the middle tier class instantiates the Storage class as an Array of TValue.\r\n\r\n```\t\r\n       public class Storage<TValue> {\r\n\t\tpublic TValue Values { get; set; }\r\n\t}\r\n\r\n\tpublic class BaseClass<TValue> : Storage<TValue[]> { }\r\n\r\n\tpublic class FinalClass<TValue> {\r\n\r\n\t\tprivate BaseClass<string> baseClass;\r\n\r\n\t\tpublic FinalClass() => this.baseClass = new BaseClass<string> { Values = new string[] { } }; //Important Line of Code\r\n\t}\r\n```\r\n\r\nBecause the middle tier class defines the TValue parameter as string, it allows to set the Values property in the FinalClass as new string[].\r\nHowever, this behavior breaks in Blazor, because of the RuntimeHelpers.TypeCheck method.\r\n\r\nStorage.razor\r\n\r\n```\r\n@typeparam TValue\r\n\r\n@code {\r\n\t\r\n\t[Parameter]\r\n\tpublic TValue Values { get; set; }\r\n\r\n}\r\n```\r\n\r\nBaseClass.razor\r\n```\r\n@typeparam TValue\r\n@inherits Storage<TValue[]>\r\n```\r\n\r\nFinalClass.razor\r\n`<BaseClass TValue=\"string\" Values=\"@(new string[]{})\"></BaseClass>```\r\n\r\nThe error you receive is \"cannot convert from 'string[]' to 'TValue[]'\"","Url":"https://github.com/dotnet/aspnetcore/issues/29105","RelatedDescription":"Open issue \"Generics and Inheritance\" (#29105)"},{"Id":"779913834","IsPullRequest":true,"CreatedAt":"2021-01-06T21:36:28","Actor":"JamesNK","Number":"29083","RawContent":null,"Title":"HTTP/3: Log frames and remove frame max size","State":"closed","Body":"Fixes https://github.com/dotnet/aspnetcore/issues/29080\r\nFixes https://github.com/dotnet/aspnetcore/issues/29035","Url":"https://github.com/dotnet/aspnetcore/pull/29083","RelatedDescription":"Closed or merged PR \"HTTP/3: Log frames and remove frame max size\" (#29083)"},{"Id":"779757614","IsPullRequest":false,"CreatedAt":"2021-01-06T21:36:28","Actor":"JamesNK","Number":"29080","RawContent":null,"Title":"HTTP/3 logging","State":"closed","Body":"Improve HTTP/3 logging to be on par with 1.1 and 2.\r\n\r\nEnsure all log messages are defined, log incoming and outgoing frames, etc.","Url":"https://github.com/dotnet/aspnetcore/issues/29080","RelatedDescription":"Closed issue \"HTTP/3 logging\" (#29080)"},{"Id":"780827822","IsPullRequest":false,"CreatedAt":"2021-01-06T20:28:44","Actor":"adrianwright109","Number":"29103","RawContent":null,"Title":"VSCode colourisation not correct when passing string parameter to lambda method","State":"open","Body":"Step to reproduce:\r\n\r\n1. `dotnet new blazorwasm -o BlazorApp`\r\n2. `cd .\\BlazorApp\\`\r\n3. `code .`\r\n4. Open `Index.razor` and append the following code to the bottom on the file:\r\n```\r\n\r\n<button @onclick=\"@(() => WriteToBrowserConsole(\"Button 2\"))\">Button 2</button>\r\n\r\n@code {\r\n    void WriteToBrowserConsole(string buttonName)\r\n    {\r\n        Console.WriteLine($\"I've been clicked! (from {buttonName})\");\r\n    }\r\n}\r\n```\r\n**Expected**\r\nNot sure what the expected colour should be I'm guessing it should not turn it red.\r\n\r\n**Actual**\r\nThe double quotes around the string parameter turn the preceding parentheses and double quotes red.\r\n\r\n![image](https://user-images.githubusercontent.com/47532258/103816026-3d43d100-505c-11eb-8e3b-a59d2b68b18a.png)\r\n\r\nFYI in Visual Studio 2019 with the Experimental Editor preview feature ON it looks like this:\r\n![image](https://user-images.githubusercontent.com/47532258/103816931-ac6df500-505d-11eb-9652-d874c4fb5120.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/29103","RelatedDescription":"Open issue \"VSCode colourisation not correct when passing string parameter to lambda method\" (#29103)"},{"Id":"780779056","IsPullRequest":true,"CreatedAt":"2021-01-06T19:03:47","Actor":"lewing","Number":"29098","RawContent":null,"Title":"[wasm] Enable on demand GC again","State":"open","Body":"For 5.0 we turned of on demand GC because of some issues that were discovered in the bindings.  We believe those issues have now been resolved and we would like to turn on demand gc back on for 6.0.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/29098","RelatedDescription":"Open PR \"[wasm] Enable on demand GC again\" (#29098)"},{"Id":"780769300","IsPullRequest":true,"CreatedAt":"2021-01-06T18:46:32","Actor":"HaoK","Number":"29097","RawContent":null,"Title":"Debug arm dataprotection","State":"open","Body":"","Url":"https://github.com/dotnet/aspnetcore/pull/29097","RelatedDescription":"Open PR \"Debug arm dataprotection\" (#29097)"},{"Id":"780766009","IsPullRequest":false,"CreatedAt":"2021-01-06T18:40:46","Actor":"NTaylorMullen","Number":"29096","RawContent":null,"Title":"Larger Blazor projects with huge completion lists should serialize/perform better.","State":"open","Body":"This is a follow up to https://github.com/dotnet/aspnetcore/issues/29017 for preview4\r\n\r\nRight now we serialize the entire documentation content for each Component/TagHelper which results in a heavy amount of allocations in devenv. This also significantly impacts serialization/deserialization speeds.\r\n\r\nBaseline to work against:\r\n|                                              Method |      Mean |     Error |    StdDev |   Op/s |     Gen 0 |     Gen 1 |    Gen 2 | Allocated |\r\n|---------------------------------------------------- |----------:|----------:|----------:|-------:|----------:|----------:|---------:|----------:|\r\n| 'Component Completion List Roundtrip Serialization' | 28.129 ms | 0.3938 ms | 0.3684 ms |  35.55 | 2156.2500 | 1187.5000 | 218.7500 |   13.6 MB |\r\n|           'Component Completion List Serialization' |  6.081 ms | 0.0450 ms | 0.0399 ms | 164.46 |  312.5000 |  242.1875 | 226.5625 |    2.4 MB |\r\n|         'Component Completion List Deserialization' | 24.501 ms | 0.4178 ms | 0.3908 ms |  40.82 | 1968.7500 |  906.2500 | 125.0000 |  11.21 MB |","Url":"https://github.com/dotnet/aspnetcore/issues/29096","RelatedDescription":"Open issue \"Larger Blazor projects with huge completion lists should serialize/perform better.\" (#29096)"},{"Id":"780743639","IsPullRequest":false,"CreatedAt":"2021-01-06T18:01:11","Actor":"Andrew-Webb","Number":"29095","RawContent":null,"Title":"Blazor WebAssembly - very aggressive caching","State":"open","Body":"On ASP.NET Core 5.0, in a Blazor WebAssembly Client + Server + Shared website solution, the caching of assets can be very aggressive.\r\n\r\nToday we republished a new version of our website (on `azurewebsites`).  For many people, including me, it would simply NOT get data from newly-introduced server-side \"API\" controllers that return JSON.  Instead the client got a standard HTML error page rather than the JSON.  (Of course everything had worked fine when I was running locally in Visual Studio.)\r\n\r\nIn the end, a `Hard Reload` (Ctrl+Shift+R) in Chrome got the new client-side page to load its data from the server correctly.  But not even a Hard Reload / Hard Refresh worked in FireFox or Edge... I had to explicitly clear all cached data via those browser's options menus before the page worked correctly.\r\n\r\nOver the last few months, from time to time, I have also had to do Hard Reloads in the browser when running locally in VS (Visual Studio Pro at latest) just to get some new asset to be downloaded from my Server website by the browser.\r\n\r\nHard to give you a repro because it's so inconsistent, but caching (like client-side debugging) is certainly a bit wonky in Blazor.\r\n\r\nApart from that, Blazor WebAssembly is fantastic and I love it!\r\n\r\nBTW... all my \"API\" controllers that supply JSON to the client side SPA derive from this:-\r\n\r\n```\r\n    [ApiController]\r\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\r\n    public abstract class BaseApiController : ControllerBase\r\n```","Url":"https://github.com/dotnet/aspnetcore/issues/29095","RelatedDescription":"Open issue \"Blazor WebAssembly - very aggressive caching\" (#29095)"},{"Id":"780263173","IsPullRequest":true,"CreatedAt":"2021-01-06T17:32:01","Actor":"github-actions[bot]","Number":"29086","RawContent":null,"Title":"Sync shared code from runtime","State":"closed","Body":"This PR was automatically generated to sync shared code changes from runtime. Fixes #18943","Url":"https://github.com/dotnet/aspnetcore/pull/29086","RelatedDescription":"Closed or merged PR \"Sync shared code from runtime\" (#29086)"},{"Id":"780698850","IsPullRequest":false,"CreatedAt":"2021-01-06T16:53:38","Actor":"FramnkRulez","Number":"29093","RawContent":null,"Title":"How to secure Unix domain sockets created with 'ListenUnixSocket'?","State":"open","Body":"I'm trying to implement cross-platform IPC using gRPC to kestrel using unix domain sockets via the Kestrel 'ListenUnixSocket'  ([ListenUnixSocket](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.core.kestrelserveroptions.listenunixsocket?view=aspnetcore-5.0#Microsoft_AspNetCore_Server_Kestrel_Core_KestrelServerOptions_ListenUnixSocket_System_String_) API.  \r\n\r\nHowever I can't seem to figure how how to set security on the unix domain socket, it seems to create the socket with security attributes allowing any user to read/write from it instead of inheriting the security attributes of the process hosting Kestrel.  Is there an override so that a unix domain socket limited to only admin or system access can be created?","Url":"https://github.com/dotnet/aspnetcore/issues/29093","RelatedDescription":"Open issue \"How to secure Unix domain sockets created with 'ListenUnixSocket'?\" (#29093)"},{"Id":"780669815","IsPullRequest":false,"CreatedAt":"2021-01-06T16:12:09","Actor":"mthalman","Number":"29092","RawContent":null,"Title":"runtimelist.xml file not included in runtime archive","State":"open","Body":"This is a reoccurrence of https://github.com/dotnet/aspnetcore/issues/27670.\r\n\r\nThe issue is that there is not parity between the ASP.NET files contained in the SDK archive vs the standalone ASP.NET runtime archive.  The runtime archive does not contain a runtimelist.xml file.\r\n\r\nhttps://dotnetcli.azureedge.net/dotnet/Sdk/6.0.100-alpha.1.21054.2/dotnet-sdk-6.0.100-alpha.1.21054.2-win-x64.zip: Contains shared/microsoft.aspnetcore.app/6.0.0-alpha.1.20629.3/runtimelist.xml\r\n\r\nhttps://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/6.0.0-alpha.1.20629.3/aspnetcore-runtime-6.0.0-alpha.1.20629.3-win-x64.zip: Does not contain shared/microsoft.aspnetcore.app/6.0.0-alpha.1.20629.3/runtimelist.xml\r\n\r\ncc @wtgodbe ","Url":"https://github.com/dotnet/aspnetcore/issues/29092","RelatedDescription":"Open issue \"runtimelist.xml file not included in runtime archive\" (#29092)"},{"Id":"780652105","IsPullRequest":true,"CreatedAt":"2021-01-06T15:50:48","Actor":"SteveSandersonMS","Number":"29091","RawContent":null,"Title":"Make IncrementallyUpdatesCache and CachesResourcesAfterFirstLoad tests more robust. Hopefully fixes #20154","State":"open","Body":"I don't know for certain why these tests occasionally fail, because they pass ~98% of the time in CI, and 100% of the times I've tried running locally.\r\n\r\nHowever I notice that the collection in which we track the requested URLs is not thread-safe, and is potentially written from multiple threads concurrently. This could explain why sometimes we don't find the expected URLs in the collection.\r\n\r\nI've also added a second tweak to make sure that, when we navigate to `about:blank`, we wait until that navigation is completed before proceeding to re-navigate back to where we came from.","Url":"https://github.com/dotnet/aspnetcore/pull/29091","RelatedDescription":"Open PR \"Make IncrementallyUpdatesCache and CachesResourcesAfterFirstLoad tests more robust. Hopefully fixes #20154\" (#29091)"},{"Id":"780357386","IsPullRequest":false,"CreatedAt":"2021-01-06T15:42:59","Actor":"PaulSinnema","Number":"29088","RawContent":null,"Title":"When adding a net5.0.1 library reference to a net5.0.1 Blazor project a file with name MvcApplicationPartsAssemblyInfo.cs is generated that cannot be compiled.","State":"closed","Body":"### Describe the bug\r\nWhen adding a net5.0.1 library reference to a net5.0.1 Blazor project a file with name MvcApplicationPartsAssemblyInfo.cs is generated that cannot be compiled.\r\n\r\n### To Reproduce\r\n1. Generate a new Blazor project with command: dotnet new blazorwasm -au SingleOrg --framework:net5.0 \r\n2. Add a net5.0.1. class library reference to the project.\r\n3. Compile\r\n\r\n### Generated code in MvcApplicationPartsAssemblyInfo.cs:\r\n\r\n//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     Runtime Version:4.0.30319.42000\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\nusing System;\r\nusing System.Reflection;\r\n\r\n[assembly: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute(\"Wur.GroupTool.Core\")]\r\n\r\n// Generated by the MSBuild WriteCodeFragment class.\r\n\r\n### Compile error (notice the 'ApplicationPartAttributeAttribute' name with the double 'AttributeAttribute':\r\n\r\nError\tCS0234\tThe type or namespace name 'ApplicationPartAttributeAttribute' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.ApplicationParts' (are you missing an assembly reference?)\tWur.GroupTool.Blazor\tC:\\Projects\\FB-IT\\grouptool\\sources\\Wur.GroupTool\\Wur.GroupTool.Blazor\\obj\\Debug\\net5.0\\Wur.GroupTool.Blazor.MvcApplicationPartsAssemblyInfo.cs\t14\tActive\r\n\r\n### Further technical details\r\nASP.NET Core version:\r\n5.0.1\r\n\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.101\r\n Commit:    d05174dc5a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.101\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.1\r\n  Commit:  b02e13abab\r\n\r\n.NET SDKs installed:\r\n  3.1.404 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\nVisual Studio 2019 4.8.04084\r\nMicrosoft Visual Studio Professional 2019\r\nVersion 16.8.3\r\nVisualStudio.16.Release/16.8.3+30804.86\r\nMicrosoft .NET Framework\r\n\r\nInstalled Version: Professional\r\nVersion 4.8.04084\r\n\r\nMicrosoft Visual Studio Tools for Applications 2019   00435-60000-00000-AA234\r\nMicrosoft Visual Studio Tools for Applications 2019\r\n\r\nVisual C++ 2019   00435-60000-00000-AA234\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASA Service Provider   1.0\r\n\r\nASP.NET and Web Tools 2019   16.8.554.20160\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   16.8.554.20160\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.554.20160\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.554.20160\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.8.554.20160\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.6.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.8.0-5.20604.10+9ed4b774d20940880de8df1ca8b07508aa01c8cd\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   16.8.20241.2\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nCSS Tools 2019   1.1.4\r\nProvides additional features to the CSS editor in Visual Studio.\r\n\r\nExtensibility Message Bus   1.2.6 (master@34d6af2)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.6.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.6.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.6.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e.RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.8.43 (00471f8)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.5.20902.1 Commit Hash:b474efcb6f92db52a8f8e2e6a8cb9648476885cc\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nOffice Developer Tools for Visual Studio   16.0.30502.00\r\nMicrosoft Office Developer Tools for Visual Studio\r\n\r\nOpenT4EditorSettingsCommand Extension   1.0\r\nOpenT4EditorSettingsCommand Visual Studio Extension Detailed Info\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   16.8.20241.2\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Conda support   16.8.20241.2\r\nConda support for Python projects.\r\n\r\nPython - Django support   16.8.20241.2\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   16.8.20241.2\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   16.8.20241.2\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQL Server Integration Services   15.0.2000.132\r\nMicrosoft SQL Server Integration Services Designer\r\nVersion 15.0.2000.132\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTTExecuterPackage Extension   1.0\r\nTTExecuterPackage Visual Studio Extension Detailed Info\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20604.10+9ed4b774d20940880de8df1ca8b07508aa01c8cd\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.DeviceLog   1.0\r\nInformation about my package\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   16.8.000.260 (d16-8@fd405a2)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.8.0.507 (remotes/origin/d16-8@e87b24884)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.8.112 (86385a3)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   11.1.0.17 (d16-8/c0e2b8e)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: be2226b\r\n    Java.Interop: xamarin/java.interop/d16-8@79d9533\r\n    ProGuard: Guardsquare/proguard/proguard6.2.2@ebe9000\r\n    SQLite: xamarin/sqlite/3.32.1@1a3276b\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-8@2fb1cbc\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   14.6.0.15 (87a1b18d8)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/29088","RelatedDescription":"Closed issue \"When adding a net5.0.1 library reference to a net5.0.1 Blazor project a file with name MvcApplicationPartsAssemblyInfo.cs is generated that cannot be compiled.\" (#29088)"},{"Id":"780544393","IsPullRequest":true,"CreatedAt":"2021-01-06T14:30:34","Actor":"dotnet-maestro[bot]","Number":"29090","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:68568747-40a2-4823-fae6-08d7f76e4602)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 68568747-40a2-4823-fae6-08d7f76e4602\r\n- **Build**: 20210105.17\r\n- **Date Produced**: 1/6/2021 8:25 AM\r\n- **Commit**: dd3da2b5e8d4655414f8b6fbe3a97fbe0f8ee8af\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Options**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Internal.Transport**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Http**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Net.Http.Json**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Net.WebSockets.WebSocketProtocol**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Reflection.Metadata**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Runtime.CompilerServices.Unsafe**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.IO.Pipelines**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.ComponentModel.Annotations**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.DirectoryServices.Protocols**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Threading.Channels**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.21054.6 to 6.0.0-alpha.1.21055.17][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/fd5609d...dd3da2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:68568747-40a2-4823-fae6-08d7f76e4602)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/29090","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#29090)"},{"Id":"780521852","IsPullRequest":false,"CreatedAt":"2021-01-06T12:36:26","Actor":"thepra","Number":"29089","RawContent":null,"Title":"[Blazor WebAssembly] Localization not working on Firefox Developer Edition(85.0b4)","State":"open","Body":"### Describe the bug\r\nWhen I do make changes on both `CultureInfo.DefaultThreadCurrentCulture` and `CultureInfo.DefaultThreadCurrentUICulture` in any browser I perceive the change of language on the webpage except Firefox Developer Edition, where this change seems to don't function at all, and there's no logs in the browser console\r\n\r\n### To Reproduce\r\nMake up a project with 2 buttons and 2 resource files for 2 languages, on click of each button change the CultureInfo accordingly, and setup Firefox Developer Edition as the starting browser.\r\n\r\n### Further technical details\r\n- ASP.NET Core version .NET 5\r\n- Include the output of `dotnet --info`\r\n\r\n> .NET SDK (reflecting any global.json):\r\n>  Version:   5.0.101\r\n>  Commit:    d05174dc5a\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.19042\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.101\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 5.0.1\r\n>   Commit:  b02e13abab\r\n> \r\n> .NET SDKs installed:\r\n>   5.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET runtimes installed:\r\n>   Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 3.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 5.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 3.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 5.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n>   Microsoft.WindowsDesktop.App 5.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version\r\n\r\n> Microsoft Visual Studio Community 2019\r\n> Version 16.8.3\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/29089","RelatedDescription":"Open issue \"[Blazor WebAssembly] Localization not working on Firefox Developer Edition(85.0b4)\" (#29089)"},{"Id":"780264325","IsPullRequest":false,"CreatedAt":"2021-01-06T08:23:43","Actor":"tanvrkhan","Number":"29087","RawContent":null,"Title":"Blazor Virtualize does not work for options under a select element","State":"open","Body":"**Describe the bug**\r\nBlazor Virtualize does not work for options under a select element. It doesn't render anything, even with Overscancount mentioned.\r\n\r\n**To Reproduce**\r\nCreate a select or inputselect element. Try putting the options in it using Virtualize.\r\n\r\n**Include the output of dotnet --info**\r\nThere is no error. List shows no items, even with Overscancount selected.\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/29087","RelatedDescription":"Open issue \"Blazor Virtualize does not work for options under a select element\" (#29087)"},{"Id":"779689109","IsPullRequest":true,"CreatedAt":"2021-01-05T23:44:29","Actor":"mkArtakMSFT","Number":"29074","RawContent":null,"Title":"Revert \"Automatically assign `Servicing-consider` label to servicing …","State":"closed","Body":"…PRs (#29071)\"\r\n\r\nThis reverts commit 689cef0e72f92ebe7c9f0a3c667b421474be5242.\r\n\r\nTurns out that the labels aren't supported for PR templates.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/29074","RelatedDescription":"Closed or merged PR \"Revert \"Automatically assign `Servicing-consider` label to servicing …\" (#29074)"},{"Id":"779730825","IsPullRequest":false,"CreatedAt":"2021-01-05T23:35:50","Actor":"vsfeedback","Number":"29079","RawContent":null,"Title":"Incorrect (or unclear) warning in Blazor","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Incorrect-or-unclear-warning-in-Blazor/1263949?preview=true)._\r\n\r\n---\r\n[severity:It bothers me. A fix would be nice]\r\nGiven this class:\r\n\r\n```\r\npublic class Board\r\n{\r\n    public int Width { get; init; } = 6;\r\n    public int Height { get; init; } = 20;\r\n}\r\n```\r\n\r\nand this blazor component:\r\n```\r\n<div class=\"board\"\r\n     style=\"grid-template-columns: repeat(@Board.Width, 32px);          //warning here\r\n        grid-template-rows: repeat(@Board.Height.ToString(), 32px);     //warning here\r\n        grid-template-rows: repeat(15, 32px);\">                         //no warning here\r\n\r\n@Board.Width                                                       //also no warning here \r\n    @Board.Width.ToString()                                            //neither here\r\n</div>\r\n\r\n@code {\r\n    [Parameter] public TileBattles.Shared.Columns.Board Board { get; set; }\r\n}\r\n```\r\n\r\nI am getting following nonsense warning (Editor and error list).\r\n![image.png](https://aka.ms/dc/image?name=B0f2b236644c44876a1b37c8c7287f371637414668992170582_20201120-120136-image.png&tid=0f2b236644c44876a1b37c8c7287f371637414668992170582)\r\n\r\n![image.png](https://aka.ms/dc/image?name=B0eeaee308ff9423d99d2f43420938b47637414669713628443_20201120-120250-image.png&tid=0eeaee308ff9423d99d2f43420938b47637414669713628443)\r\n\r\nNew project in .NET 5 Blazor\r\nVS info:\r\n```\r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.8.2\r\nVisualStudio.16.Release/16.8.2+30717.126\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA284\r\nMicrosoft Visual C++ 2019\r\n\r\n.NET Portability Analyzer   1.1.10808.0\r\nEvaluates portability of assemblies across .NET platforms.\r\n\r\nASP.NET and Web Tools 2019   16.8.553.28003\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Razor Language Services   16.1.0.2052803+84e121f1403378489b842e1797df2f3f5a49ac3c\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.8.553.28003\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.8.553.28003\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   3.8.0-5.20567.16+53c5d7d3cf13d88978744a32a27c5f8350a8400a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCodeMaid   11.1.209\r\nCodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   16.8.20241.2\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.30924.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   2.1.113+g422d40002e. RR\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nNpgsqlVSPackage Extension   1.0\r\nNpgsqlVSPackage Visual Studio Extension Detailed Info\r\n\r\nNuGet Package Manager   5.8.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   16.8.20241.2\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Conda support   16.8.20241.2\r\nConda support for Python projects.\r\n\r\nPython - Django support   16.8.20241.2\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   16.8.20241.2\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   16.8.20241.2\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   16.0.62010.06180\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   16.0.21016.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.8.0-5.20567.16+53c5d7d3cf13d88978744a32a27c5f8350a8400a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   16.8.0-beta.20507.4+da6be68280c89131cdba2045525b80890401defd\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Container Tools Extensions   1.0\r\nView, manage, and diagnose containers within Visual Studio.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   4.8.2.0\r\nVisual Studio Tools for Unity\r\n```\r\n\r\nThanks.\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Feedback Bot on 11/23/2020, 02:32 AM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Feedback Bot on 12/1/2020, 10:25 PM: \r\n\r\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/aspnetcore/issues/29079","RelatedDescription":"Open issue \"Incorrect (or unclear) warning in Blazor\" (#29079)"},{"Id":"779722330","IsPullRequest":false,"CreatedAt":"2021-01-05T23:26:51","Actor":"Tratcher","Number":"29078","RawContent":null,"Title":"Http/3 for IIS","State":"open","Body":"We'll need some basic tests for Http/3 support on IIS including:\r\n- The bindings work as expected\r\n- The protocol version is correctly reported\r\n- Hello World requests\r\n- gRPC scenarios (Reset, Trailers)\r\n- Interop with HttpClient\r\n\r\nWe can use the new windows preview helix queue to run these.","Url":"https://github.com/dotnet/aspnetcore/issues/29078","RelatedDescription":"Open issue \"Http/3 for IIS\" (#29078)"},{"Id":"779721278","IsPullRequest":false,"CreatedAt":"2021-01-05T23:25:44","Actor":"Tratcher","Number":"29077","RawContent":null,"Title":"Http/3 for HttpSys","State":"open","Body":"We'll need some basic tests for Http/3 support on HttpSys including:\r\n- The bindings work as expected\r\n- The protocol version is correctly reported\r\n- Hello World requests\r\n- gRPC scenarios (Reset, Trailers)\r\n- Interop with HttpClient\r\n\r\nWe can use the new windows preview helix queue to run these.","Url":"https://github.com/dotnet/aspnetcore/issues/29077","RelatedDescription":"Open issue \"Http/3 for HttpSys\" (#29077)"},{"Id":"779701377","IsPullRequest":false,"CreatedAt":"2021-01-05T23:05:13","Actor":"AndyWDev","Number":"29076","RawContent":null,"Title":"CSS isolation not working with a Blazor Server app","State":"open","Body":"### Describe the bug\r\nUnable to get CSS to work using 'CSS isolation' with a Blazor Server app.\r\n\r\n### To Reproduce\r\n\r\n- Using Visual Studio 16.8.3 create a default server blazor app.\r\n- To the pages/Counter.razor file, add a new stylesheet and call it Counter.razor.css\r\n- Modify the body tag in the generated file to change the background color - add some other style elements such as an H1\r\n- Press F5 to run, navigate to the counter page - none of the css is displayed (even after refreshing browser cache)\r\n\r\n- Alternatively, add a Components directory\r\n- Create a Hello.razor and Hello.razor.css file\r\n- Add some content to the razor file and css as appropriate\r\n- Update the _imports.razor file to include the components directory\r\n- Add the <Hello /> tag to the FetchData.razor file\r\n\r\n**Note:**\r\nIn the obj directory when the app is running I can see a scopedcss file under pages (Counter.razor.rz.scp.css) which has the modified CSS inside.  The same for the above component directory.\r\nThere is also scopedcss/bundle.myapp.styles.css file.\r\n\r\nWhen I inspect the Counter page I do not see a link to the above css file, also the razor pages do not seem to be modified ( I am guessing they get modified to update the appropriate css tags - as new to blazor).\r\n\r\nI have added a link href to the _host.cshtml but it doesn't seem to make a difference.  \r\n\r\n### Further technical details\r\nASP.Net Core -  3.1.0 with latest Visual Studio release.\r\n.Net version 5.0.101\r\nVisual Studio Enterprise 16.8.3\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/29076","RelatedDescription":"Open issue \"CSS isolation not working with a Blazor Server app\" (#29076)"},{"Id":"779697476","IsPullRequest":false,"CreatedAt":"2021-01-05T23:01:11","Actor":"EnricoMassone","Number":"29075","RawContent":null,"Title":"ASP.NET core 2.2 cookie authentication: unexpected growth of cookies number when the user access token is refreshed","State":"open","Body":"Hi, \r\n\r\nI'm working on an ASP.NET core 2.2 web application. \r\n\r\nWe authenticate users against a third party open id connect authentication provider and we create the authentication cookie for our application by using the ASP.NET core open id connect authentication middleware. Everything works as expected at the cookie authentication level. \r\n\r\nWhen the user logs in the resulting authentication cookie is splitted in chunks automatically by ASP.NET core, so after the login we are able to inspect the cookies for the application domain in chrome dev tools and we see 3 different cookies (two of them are the actual chunks, there is also a third cookie which, based on my understanding, is used to keep track that there are two physical chunks). \r\n\r\nSo far, so good. \r\n\r\nThese days I'm investigating a bug which I'm **not** able to reproduce consistently in all of our environment. **As of today, we have observed this bug only for one of our customers.**\r\n\r\nBasically if a user logs in and the browser tab is kept open for a long time, after some hours all the AJAX requests fail due to a 400 response from the server and the application becomes unusable. **The 400 status code is due to a request cookie too large error** : we have obser that, after some hours, the number of cookies increases from the initial value of 3 to a value of 10. **So basically, the number of cookie chunks grows unexpectedly until the application is no more usable due to the giant resulting request cookie.**\r\n\r\nAfter some investagation I noticed that the new cookies (I mean the additional unexpected chunks) are set by a specific HTTP request that our application makes to refresh the user access token. There is a page of our application which makes an AJAX call to a backend endpoint which is used to ensure that the user access token (obtained during the OIDC login and saved inside the authentication properties of the logged in user) is not expired. This is done by using the [identity model ASP.NET core library](https://github.com/IdentityModel/IdentityModel.AspNetCore). \r\n\r\nAfter some investigation in the code of identity model ASP.NET core I've found the following method, which is responsible to save the fresh new user access token inside the user identity, as an authentication property: \r\n\r\n```\r\npublic async Task StoreTokenAsync(ClaimsPrincipal user, string accessToken, DateTimeOffset expiration,\r\n            string refreshToken = null, string resource = null)\r\n        {\r\n            var result = await _contextAccessor.HttpContext.AuthenticateAsync();\r\n\r\n            if (!result.Succeeded)\r\n            {\r\n                throw new Exception(\"Can't store tokens. User is anonymous\");\r\n            }\r\n\r\n            string tokenName = OpenIdConnectParameterNames.AccessToken;\r\n            if (!string.IsNullOrEmpty(resource))\r\n            {\r\n                tokenName += $\"::{resource}\";\r\n            }\r\n\r\n            string expiresName = \"expires_at\";\r\n            if (!string.IsNullOrEmpty(resource))\r\n            {\r\n                expiresName += $\"::{resource}\";\r\n            }\r\n\r\n\r\n            result.Properties.Items[$\".Token.{tokenName}\"] = accessToken;\r\n            result.Properties.Items[$\".Token.{expiresName}\"] = expiration.ToString(\"o\", CultureInfo.InvariantCulture);\r\n\r\n            if (refreshToken != null)\r\n            {\r\n                result.Properties.UpdateTokenValue(OpenIdConnectParameterNames.RefreshToken, refreshToken);\r\n            }\r\n\r\n            await _contextAccessor.HttpContext.SignInAsync(result.Principal, result.Properties);\r\n        }\r\n```\r\n\r\nThe original code is available [here](https://github.com/IdentityModel/IdentityModel.AspNetCore/blob/19ec3e6f520e5eac6eff9bc6dc24e31e074227b2/src/AccessTokenManagement/AuthenticationSessionUserTokenStore.cs#L82)\r\n\r\nBased on my understanding it's the final call to `HttpContext.SignInAsync` which is responsible to set the cookies in the HTTP response (see [here](https://github.com/IdentityModel/IdentityModel.AspNetCore/blob/19ec3e6f520e5eac6eff9bc6dc24e31e074227b2/src/AccessTokenManagement/AuthenticationSessionUserTokenStore.cs#L113)). \r\nFor some reason, at a certain point of the user session, the cookies set in this HTTP response are many more than the previous number of cookies (as explained above, the number of chunks increases from 3 to 10). **Notice that the user logged in is always the same and the only interaction at the level of the user identity is the refreshing of the user access token**. \r\n\r\nDo you have a possible explanation for this unexpected growth ? \r\n\r\nMaybe before calling `HttpContext.SignInAsync` it is necessary to sign out the current user, in order to delete the existing authentication cookies ? \r\n\r\nAny clue / suggestion in order to understand the root cause of the chunks growth is appreciated. \r\n\r\nThanks !","Url":"https://github.com/dotnet/aspnetcore/issues/29075","RelatedDescription":"Open issue \"ASP.NET core 2.2 cookie authentication: unexpected growth of cookies number when the user access token is refreshed\" (#29075)"},{"Id":"779680091","IsPullRequest":false,"CreatedAt":"2021-01-05T22:43:48","Actor":"TanayParikh","Number":"29073","RawContent":null,"Title":"Enhance Diagnostic Logging to Help With E2E Investigations","State":"open","Body":"Specifically in the pull-diagnostics realm with C# & HTML/CSS.","Url":"https://github.com/dotnet/aspnetcore/issues/29073","RelatedDescription":"Open issue \"Enhance Diagnostic Logging to Help With E2E Investigations\" (#29073)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"780884629","IsPullRequest":false,"CreatedAt":"2021-01-06T22:21:58","Actor":"JamesNK","Number":"447","RawContent":null,"Title":"Kestrel logging ID changes","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Kestrel logging ID changes\r\n\r\nKestrel log messages have associated IDs and names. These are used to uniquely identify different kinds of log messages. Some of those IDs and names were incorrectly duplicated. This is being fixed in .NET 6.\r\n\r\n### Version introduced\r\n\r\n.NET 6.0\r\n\r\n### New behavior\r\n\r\nHTTP/2 connection closed log messages:\r\n\r\nName: Http2ConnectionClosed (unchanged)\r\nID: 36 (before) -> 48 (after)\r\n\r\nHTTP/2 frame sending log messages:\r\n\r\nName: Http2FrameReceived (before) -> Http2FrameSending (after)\r\nID: 37 (before) -> 49 (after)\r\n\r\n### Reason for change\r\n\r\nLog IDs and names should be unique so different message types can be identified.\r\n\r\n### Recommended action\r\n\r\nIf you have code or configuration that references the old IDs and names, update those references use the new IDs and names.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/447","RelatedDescription":"Open issue \"Kestrel logging ID changes\" (#447)"},{"Id":"771201539","IsPullRequest":false,"CreatedAt":"2020-12-18T22:18:06","Actor":"captainsafia","Number":"446","RawContent":null,"Title":"Notice on obsoleted RazorEngine APIs in Razor","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Notice on obsoleted RazorEngine APIs in Razor\r\n\r\nTypes related to the `RazorEngine` type in Blazor have been obsoleted.\r\n\r\n### Version introduced\r\n\r\n6.0.0-preview1\r\n\r\n### Old behavior\r\n\r\nAPIs were not obsolete.\r\n\r\n### New behavior\r\n\r\nAPIs are obsoleted.\r\n\r\n### Reason for change\r\n\r\nThe `RazorEngine` type has been deprecated in favor of the `RazorProjectEngine` type.\r\n\r\n### Recommended action\r\n\r\nMigrate source code from the `RazorEngine` type to the `RazorProjectEngine` type.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n- [Microsoft.AspNetCore.Mvc.Razor.Extensions.InjectDirective.Register](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.extensions.injectdirective.register?view=aspnetcore-3.1)\r\n- [Microsoft.AspNetCore.Mvc.Razor.Extensions.ModelDirective.Register](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.extensions.namespacedirective.register?view=aspnetcore-2.2)\r\n- [Microsoft.AspNetCore.Mvc.Razor.Extensions.PageDirective.Register](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.extensions.namespacedirective.register?view=aspnetcore-2.2)\r\n- [Microsoft.AspNetCore.Razor.Language.Extensions.FunctionsDirective.Register](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.razor.language.extensions.functionsdirective.register?view=aspnetcore-3.0)\r\n- [Microsoft.AspNetCore.Razor.Language.Extensions.InheritsDirective.Register](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.razor.language.extensions.inheritsdirective.register?view=aspnetcore-3.0)\r\n- [Microsoft.AspNetCore.Razor.Language.Extensions.SectionDirective.Register](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.razor.language.extensions.sectiondirective.register?view=aspnetcore-3.0)\r\n- [Microsoft.AspNetCore.Razor.Language.IRazorEngineBuilder](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.razor.language.irazorenginebuilder?view=aspnetcore-3.0)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/446","RelatedDescription":"Open issue \"Notice on obsoleted RazorEngine APIs in Razor\" (#446)"},{"Id":"752198428","IsPullRequest":false,"CreatedAt":"2020-11-27T11:52:34","Actor":"javiercn","Number":"445","RawContent":null,"Title":"Updates to Blazor client-side routing catch all and optional parameters behavior","State":"open","Body":"## Changes to routing logic in Blazor applications on 5.0.1\r\n\r\nThere was a bug in the blazor routing implementation that affected how we computed the precedence of routes. This might affect you if you have defined catch all routes or routes with optional parameters within your Blazor application.\r\n\r\n### Version introduced\r\n\r\n5.0.1\r\n\r\n### Old behavior\r\n\r\nWith the erroneous behavior, routes with lower precedence like `{*slug}` would be considered and matched over routes with more precedence, like `/customer/{id}`.\r\n\r\n### New behavior\r\n\r\nThe current behavior more closely matches the routing behavior defined in ASP.NET Core apps, where we compute and establish the route precedence for each segment first and only use the length of the route to break ties as a second criteria.\r\n\r\n### Reason for change\r\n\r\nThe original behavior is considered a bug in the implementation since our goal is to make sure that the routing system in Blazor apps behaves in the same way as the routing system in ASP.NET Core for the subset of features supported by Blazor routing.\r\n\r\n### Recommended action\r\n\r\nThere is a new attribute `PreferExactMatches` on the Router that can be turned on to opt-in into the correct behavior. People upgrading from previous versions of Blazor to 5.X should take this into account.\r\n\r\n### Category\r\nASP.NET\r\n\r\n### Affected APIs\r\n\"Not detectable via API analysis\"\r\n---\r\n\r\n#### Issue metadata\r\n* Issue type: breaking-change","Url":"https://github.com/aspnet/Announcements/issues/445","RelatedDescription":"Open issue \"Updates to Blazor client-side routing catch all and optional parameters behavior\" (#445)"},{"Id":"737344012","IsPullRequest":false,"CreatedAt":"2020-11-05T23:38:31","Actor":"pranavkm","Number":"444","RawContent":null,"Title":"Changes to Nullable Reference Type Annotations in .NET 6.0","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Changes to Nullable Reference Type Annotations in .NET 6.0\r\n\r\n_**This issue represents a work-in-progress. All breaking changes to nullability annotations will be aggregated into this issue throughout the course of .NET 6.0.**_\r\n\r\nStarting in .NET 5.0, we have been applying nullability annotations to parts of ASP.NET Core. From the outset of this effort, [we anticipated that mistakes would be made](https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/api-guidelines/nullability.md#breaking-change-guidance) in these annotations and fixes would need to be made. In .NET 6.0, we are updating some annotations that have been previously applied. Some of these changes are considered source breaking changes because it leads to the APIs being incompatible or more restrictive, or could result in build-time warnings when used in projects that have nullable reference types enabled.\r\n\r\nPlease use https://github.com/dotnet/aspnetcore/issues/27564 for further discussions.\r\n\r\n### Version introduced\r\n\r\n.NET 6.0\r\n\r\n### Old behavior\r\n\r\nThe affected APIs had incorrect nullable reference type annotations and build warnings were either absent or incorrect.\r\n\r\n### New behavior\r\n\r\nNew build warnings will be produced and incorrect build warnings will no longer be produced for the affected APIs.\r\n\r\n### Reason for change\r\n\r\nThrough feedback and further testing, the nullable annotations for the affected APIs were determined to be inaccurate. The updated annotations now correctly represent the nullability contracts for the APIs.\r\n\r\n### Recommended action\r\n\r\nUpdate code calling these APIs to reflect the revised nullability contracts.\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* [ParameterView.FromDictionary(IDictionary<string, object?>](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.components.parameterview.fromdictionary)\r\n* [Renderer.DispatchEventAsync(UInt64, EventFieldInfo?, EventArgs))](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.components.rendertree.renderer.dispatcheventasync)\r\n* [AuthenticationSchemeOptions.ForwardDefaultSelector](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.authenticationschemeoptions.forwarddefaultselector)\r\n* [RangeConditionHeaderValue.ctor(EntityTagHeaderValue)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.net.http.headers.rangeconditionheadervalue.-ctor?#Microsoft_Net_Http_Headers_RangeConditionHeaderValue__ctor_Microsoft_Net_Http_Headers_EntityTagHeaderValue_)\r\n* [IConnectionListener.AcceptAsync(CancellationToken)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.connections.iconnectionlistener.acceptasync?view=aspnetcore-5.0#Microsoft_AspNetCore_Connections_IConnectionListener_AcceptAsync_System_Threading_CancellationToken_)\r\n* [IApplicationDiscriminator.Discriminator](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.infrastructure.iapplicationdiscriminator.discriminator)\r\n* [DataProtectionOptions.ApplicationDiscriminator](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.dataprotectionoptions.applicationdiscriminator)\r\n* [AuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.authenticatedencryption.authenticatedencryptorfactory.createencryptorinstance)\r\n* [CngCbcAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.authenticatedencryption.CngCbcAuthenticatedEncryptorFactory.createencryptorinstance)\r\n* [CngGcmAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.authenticatedencryption.CngGcmAuthenticatedEncryptorFactory.createencryptorinstance)\r\n* [IAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.authenticatedencryption.IAuthenticatedEncryptorFactory.createencryptorinstance)\r\n* [ManagedAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.authenticatedencryption.ManagedAuthenticatedEncryptorFactory.createencryptorinstance)\r\n* [IKey.CreateEncryptor](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.keymanagement.ikey.createencryptor)\r\n* [KeyManagementOptions.AuthenticatedEncryptorConfiguration](https://docs.microsoft.com/cs-cz/dotnet/api/microsoft.aspnetcore.dataprotection.keymanagement.keymanagementoptions.authenticatedencryptorconfiguration)\r\n* [KeyManagementOptions.XmlEncryptor](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.keymanagement.keymanagementoptions.xmlencryptor)\r\n* [KeyManagementOptions.XmlRepository](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.keymanagement.keymanagementoptions.XmlRepository)\r\n* [ICertificateResolver.ResolveCertificate(string thumbprint)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.xmlencryption.icertificateresolver.resolvecertificate)\r\n* [DataProtectionUtilityExtensions.GetApplicationUniqueIdentifier(this IServiceProvider services)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.dataprotectionutilityextensions.getapplicationuniqueidentifier)\r\n* [FileSystemXmlRepository.DefaultKeyStorageDirectory](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.repositories.filesystemxmlrepository.defaultkeystoragedirector)\r\n* [RegistryXmlRepository.DefaultRegistryKey](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.repositories.registryxmlrepository.defaultregistrykey)\r\n* [CertificateResolver.ResolveCertificate(string thumbprint)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.dataprotection.xmlencryption.certificateresolver.resolvecertificate)\r\n* [Endpoint(RequestDelegate, EndpointMetadataCollection, String) Constructor\r\nDefinition](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.endpoint.-ctor#Microsoft_AspNetCore_Http_Endpoint__ctor_Microsoft_AspNetCore_Http_RequestDelegate_Microsoft_AspNetCore_Http_EndpointMetadataCollection_System_String_)\r\n* [Endpoint.RequestDelegate](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.endpoint.requestdelegate)\r\n* [RouteValueDictionary.TryAdd(String, Object)](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.routing.routevaluedictionary.tryadd)\r\n* [LinkGenerator.GetUriByAddress](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.routing.linkgenerator.geturibyaddress#Microsoft_AspNetCore_Routing_LinkGenerator_GetUriByAddress__1___0_Microsoft_AspNetCore_Routing_RouteValueDictionary_System_String_Microsoft_AspNetCore_Http_HostString_Microsoft_AspNetCore_Http_PathString_Microsoft_AspNetCore_Http_FragmentString_Microsoft_AspNetCore_Routing_LinkOptions_)\r\n* [IFeatureCollection.Set<TFeature>(TFeature)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ifeaturecollection.set#Microsoft_AspNetCore_Http_Features_IFeatureCollection_Set__1___0_)\r\n* [FeatureCollection.Set<TFeature>(TFeature)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.featurecollection.set#Microsoft_AspNetCore_Http_Features_FeatureCollection_Set__1___0_)\r\n* [IFeatureCollection.Get<TFeature>()](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ifeaturecollection.get)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/444","RelatedDescription":"Open issue \"Changes to Nullable Reference Type Annotations in .NET 6.0\" (#444)"},{"Id":"732267282","IsPullRequest":false,"CreatedAt":"2020-10-29T12:21:50","Actor":"javiercn","Number":"443","RawContent":null,"Title":"Updated validation logic for Static Web Assets","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Updated validation logic for Static Web Assets\r\n\r\nThere was a bug in the way Static Web Assets validated the existence of conflicting assets in ASP.NET Core 3.1 and Blazor Webassembly 3.2 that prevented conflicts between the host assets and the assets coming from razor class libraries and Blazor Webassembly applications from being detected properly.\r\n\r\nThis mostly affects Blazor Webassembly applications since by default static web assets in Razor Class Libraries are served under the `_content/$(PackageId)` prefix.\r\n\r\n### Version introduced\r\n\r\n5.0\r\n\r\n### Old behavior\r\n\r\nBefore these changes, static web assets coming from razor class libraries could be silently overridden during development with assets from the host project placed on the same host path. For example, if a razor class library defined a static web asset to be served under `/folder/file.txt` and the host placed a file under `wwwroot/folder/file.txt` the file on the server would silently override the file on the Razor Class Library or Blazor Webassembly application.\r\n\r\n### New behavior\r\n\r\nASP.NET Core will now correctly detect when this issue happens and inform of the conflict so that users can be aware and take the appropriate action.\r\n\r\n### Reason for change\r\n\r\nThis was a bug in the implementation, we never intended for static web assets to be \"overridable\" by files on the wwwroot host of the project since that leads to errors that are hard to diagnose and can result in undefined behavior changes when applications are published.\r\n\r\n### Recommended action\r\n\r\nThere should be no reason for a file on a Razor Class Library to conflict with a file on the host by default since they are prefixed with `_content/${PackageId}` unless we are discussing Blazor Webassembly applications, which get placed by default at the root of the host url space, which makes conflicts easier. (For example, Blazor Webassembly Applications contain a favicon.ico that the host might also include in their wwwroot folder).\r\n\r\nIf the source of the conflict is a file in a Razor Class Library it normally means there is some code that copies the assets from the library into the wwwroot folder of the project. We don't recommend developers doing that since it defeats one of the main goals of static web assets which is that files don't have to be copied around, which is fundamental to get updates on the browser when the contents are updated without having to trigger a new compilation.\r\n\r\nIf despite that you want to preserve this behavior and maintain the file on the host, you can do so by removing the file from the list of static web assets with a custom MSBuild target.\r\n\r\nIf you want to use the file on the razor class library or the blazor webassembly file instead of the file from the host project, just remove the file from the host project.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/443","RelatedDescription":"Open issue \"Updated validation logic for Static Web Assets\" (#443)"},{"Id":"724794249","IsPullRequest":false,"CreatedAt":"2020-10-27T19:05:24","Actor":"tatti9018","Number":"442","RawContent":null,"Title":"feature “Control Startup class activation” doesn't work","State":"closed","Body":"Help with feature “Control Startup class activation”\r\n->\r\n\r\n```\r\n var host = Host.CreateDefaultBuilder()\r\n            .ConfigureWebHost(builder =>\r\n            {\r\n                builder.UseStartup(context => new Startup(logger));\r\n            })\r\n            .Build();\r\n```\r\nWhen I use Project Sdk=”Microsoft.NET.Sdk.BlazorWebAssembly”, I get error: ‘IHostBuilder’ does not contain a definition for ‘ConfigureWebHostDefaults’\r\nWhen I set Project Sdk=”Microsoft.NET.Sdk.Web”, project see ConfigureWebHostDefaults, but project doesn’t work….","Url":"https://github.com/aspnet/Announcements/issues/442","RelatedDescription":"Closed issue \"feature “Control Startup class activation” doesn't work\" (#442)"},{"Id":"712253766","IsPullRequest":false,"CreatedAt":"2020-09-30T20:21:51","Actor":"danroth27","Number":"441","RawContent":null,"Title":"Updated Blazor browser support for .NET 5","State":"open","Body":"## Updated Blazor browser support for .NET 5\r\n\r\n.NET 5 introduces a variety of [new Blazor features](https://github.com/dotnet/aspnetcore/issues/21514), some of which are not compatible with certain older browsers. We are updating the list of browsers supported by Blazor in .NET 5 accordingly.\r\n\r\nIn .NET 5 we will no longer support Blazor Server with Microsoft Internet Explorer 11. Note that Blazor WebAssembly was already not supported with Microsoft Internet Explorer 11.\r\n\r\nThere are also known incompatibilities in Blazor Server and Blazor WebAssembly with [Microsoft Edge Legacy](https://support.microsoft.com/en-us/help/4533505/what-is-microsoft-edge-legacy) in .NET 5 that we do not plan to address. The [new Microsoft Edge](https://www.microsoft.com/edge) based on Chromium is supported and is recommended instead.\r\n\r\nFor questions or discussions, please use https://github.com/dotnet/aspnetcore/issues/26475.\r\n\r\n### Version introduced\r\n\r\n5.0\r\n\r\n### Old behavior\r\n\r\nBlazor Server previously supported Microsoft Internet Explorer 11 with sufficient polyfills. Blazor Server and Blazor WebAssembly were also previously functional in Microsoft Edge Legacy.\r\n\r\n### New behavior\r\n\r\nBlazor Server in .NET 5 will no longer be supported with Microsoft Internet Explorer 11. Blazor Server and Blazor WebAssembly are also no longer fully functional in Microsoft Edge Legacy.\r\n\r\n### Reason for change\r\n\r\nNew Blazor features in .NET 5 are not compatible with these older browsers and use of these older browsers is diminishing. [Windows support for Microsoft Edge Legacy is also ending on March 9, 2021](https://support.microsoft.com/en-us/help/4533505/what-is-microsoft-edge-legacy) and [Microsoft 365 apps and services will end support for Microsoft Internet Explorer 11 by August 17, 2021](https://docs.microsoft.com/lifecycle/announcements/m365-ie11-microsoft-edge-legacy).\r\n\r\n### Recommended action\r\n\r\nWe recommend upgrading from these older browsers to the [new Microsoft Edge](https://www.microsoft.com/edge), which is fully supported. For Blazor apps that still need to continue to support these older browsers, we recommend using .NET Core 3.1 LTS. The set of supported browser platforms for Blazor in .NET Core 3.1 LTS remains unchanged and is documented here: https://docs.microsoft.com/aspnet/core/blazor/supported-platforms?view=aspnetcore-3.1.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/441","RelatedDescription":"Open issue \"Updated Blazor browser support for .NET 5\" (#441)"},{"Id":"703788318","IsPullRequest":false,"CreatedAt":"2020-09-17T17:47:43","Actor":"pranavkm","Number":"440","RawContent":null,"Title":"ObjectModelValidator calls a new overload of ValidationVisitor.Validate","State":"open","Body":"## ObjectModelValidator calls a new overload of ValidationVisitor.Validate\r\n\r\nAs part of 5.0,  we introduced an additional overload to `ValidationVisitor` that accepts the top-level model instance that contains properties:\r\n\r\n```diff\r\n  bool Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel);\r\n+ bool Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel, object container);\r\n````\r\n\r\n`ObjectModelValidator` invokes this new overload of `ValidationVisitor` to perform validation. This is pertinent if your validation library integrates with ASP.NET Core MVC\"s model validation system.\r\n\r\nFor questions or discussions, please use https://github.com/dotnet/aspnetcore/issues/26020\r\n\r\n### Version introduced\r\n\r\n5.0\r\n\r\n### Old behavior\r\n\r\n`ObjectModelValidator` invoked `ValidationVisitor.Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel)` during model validation.\r\n\r\n### New behavior\r\n\r\n`ObjectModelValidator` invoked `ValidationVisitor.Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel, object container)` during model validation.\r\n\r\n### Reason for change\r\n\r\nSupport for validators such as `CompareAttribute` that rely on being able to inspect other properties.\r\n\r\n### Recommended action\r\n\r\nValidation frameworks that rely on `ObjectModelValidator` to invoke the existing overload of `ValidationVisitor` need to be update to override the new method when targeting .NET 5:\r\n\r\n```C#\r\npublic class MyCustomValidationVisitor : ValidationVisitor\r\n{\r\n+  public override bool Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel, object container)\r\n+  {\r\n+    ...\r\n}\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* `ValidationVisitor.Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel, object container)`\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n\r\n","Url":"https://github.com/aspnet/Announcements/issues/440","RelatedDescription":"Open issue \"ObjectModelValidator calls a new overload of ValidationVisitor.Validate\" (#440)"},{"Id":"698870664","IsPullRequest":false,"CreatedAt":"2020-09-11T05:44:37","Actor":"JunTaoLuo","Number":"439","RawContent":null,"Title":"Obsoleting AzureAD.UI and AzureADB2C.UI APIs and packages","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Obsoleting AzureAD.UI and AzureADB2C.UI APIs and packages\r\n\r\nIn ASP.NET Core 2.1, integration with Azure Active Directory (AzureAD) and Azure Active Directory B2C (AzureAD B2C) authentication was provided by the [Microsoft.AspNetCore.Authentication.AzureAD.UI](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.AzureAD.UI) and [Microsoft.AspNetCore.Authentication.AzureADB2C.UI](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.AzureADB2C.UI). The functionality provided by these packages was based on the AzureAD v1.0 endpoint. \r\n\r\nStarting in .NET 5.0 integration with AzureAD and AzureAD B2C authentication will be provided by [Microsoft.Identity.Web](https://www.nuget.org/packages/Microsoft.Identity.Web) which is based on Microsoft Identity Platform (formerly known as AzureAD v2.0 endpoint). As such, we are deprecating the old APIs in the AzureAD.UI and AzureADB2C.UI packages.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0 Preview 8\r\n\r\n### Old behavior\r\n\r\nThese APIs were not Obsolete.\r\n\r\n### New behavior\r\n\r\nThey are now Obsolete.\r\n\r\n### Reason for change\r\n\r\nWe are migrating the functionality to MSAL APIs provided by Microsoft.Identity.Web, which is built from [this repository](https://github.com/azuread/microsoft-identity-web).\r\n\r\n### Recommended action\r\n\r\nFollow the documentation at https://github.com/azuread/microsoft-identity-web/wiki. Specifically instructions on how to use Microsoft.Identity.Web APIs for [web apps](https://github.com/azuread/microsoft-identity-web/wiki/web-apps) and [web api apps](https://github.com/azuread/microsoft-identity-web/wiki/web-apis) for how to use the new APIs from Microsoft.Identity.Web. \r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNote: the types listed here and all their members are obsolete. The individual members are not listed to keep the list brief.\r\n* [`Microsoft.AspNetCore.Authentication.AzureADAuthenticationBuilderExtensions`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.azureadauthenticationbuilderextensions)\r\n* [`Microsoft.AspNetCore.Authentication.AzureAD.UI.AzureADDefaults`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.azuread.ui.azureaddefaults)\r\n* [`Microsoft.AspNetCore.Authentication.AzureAD.UI.AzureADOptions`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.azuread.ui.azureadoptions)\r\n* [`Microsoft.AspNetCore.Authentication.AzureADB2CAuthenticationBuilderExtensions`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.azureadb2cauthenticationbuilderextensions)\r\n* [`Microsoft.AspNetCore.Authentication.AzureADB2C.UI.AzureADB2CDefaults`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.azureadb2c.ui.azureadb2cdefaults)\r\n* [`Microsoft.AspNetCore.Authentication.AzureADB2C.UI.AzureADB2COptions`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.authentication.azureadb2c.ui.azureadb2coptions)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\nSee discussion at https://github.com/dotnet/aspnetcore/issues/25807\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n\r\n","Url":"https://github.com/aspnet/Announcements/issues/439","RelatedDescription":"Open issue \"Obsoleting AzureAD.UI and AzureADB2C.UI APIs and packages\" (#439)"},{"Id":"696785000","IsPullRequest":false,"CreatedAt":"2020-09-09T12:48:03","Actor":"SteveSandersonMS","Number":"438","RawContent":null,"Title":"Fields on RenderTreeFrame have become properties","State":"open","Body":"*Please use https://github.com/dotnet/aspnetcore/issues/25727 to discuss this change*\r\n\r\n# Fields on `RenderTreeFrame` have become properties\r\n\r\nIn ASP.NET Core 3.0 and 3.1, the `RenderTreeFrame` struct exposed various readonly public fields, including `FrameType`, `Sequence`, and others. Starting from ASP.NET Core 5.0 RC1, all of those readonly public fields have changed to readonly public properties.\r\n\r\nWe don't expect this change to affect many developers because:\r\n\r\n * Any application or library that simply uses `.razor` files (or even manual `RenderTreeBuilder` calls) to define its components would not be referencing this type directly\r\n * The `RenderTreeFrame` type itself is regarded as an implementation detail, not intended for use outside the framework. ASP.NET Core 3.0 and later includes an analyzer that issues compiler warnings if the type is being used directly.\r\n * Even if you do reference `RenderTreeFrame` directly, this change is binary-breaking but not source-breaking. That is, your existing source code will still compile and behave properly. You will only encounter an issue if compiling against the 3.x framework and then running those binaries against the 5.0 RC1 and later framework.\r\n\r\n## Version introduced\r\n\r\nASP.NET Core 5.0 RC1\r\n\r\n## Old behavior\r\n\r\nPublic members on `RenderTreeFrame` were defined as fields, for example `renderTreeFrame.Sequence` and `renderTreeFrame.ElementName`.\r\n\r\n## New behavior\r\n\r\nPublic members on `RenderTreeFrame` are defined as properties with the same names as before, for example `renderTreeFrame.Sequence` and `renderTreeFrame.ElementName`.\r\n\r\nIf older precompiled code has not been recompiled since this change, it may throw an exception similar to *MissingFieldException: Field not found: 'Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame.FrameType'*.\r\n\r\n## Reason for change\r\n\r\nThis change was necessary in order to implement some high-impact performance improvements in Blazor component rendering on ASP.NET Core 5.0 while retaining the same level of safety and encapsulation as before.\r\n\r\n## Recommended action\r\n\r\nThe vast majority of Blazor developers will not be affected and do not need to take action. This is most likely to affect library/package authors, but still only rarely. Specifically:\r\n\r\n* If you are developing an application, and either staying on ASP.NET Core 3.x or upgrading to 5.0 RC1 or later, you don't need to make any changes to your own code.\r\n   * However if you depend on a library that needs to upgrade to account for this change, then you would need to update to a newer version of that library.\r\n* If you are developing a library, and intend to support only ASP.NET Core 5.0 RC1 or later, you don't need to take any action. Just ensure that your `csproj` declares the `TargetFramework` value `net5.0`.\r\n* If you are developing a library, and intend to support both ASP.NET Core 3.x *and* 5.0, then check whether or not your code attempts to read any of the members of `RenderTreeFrame` (for example, evaluating `someRenderTreeFrame.FrameType`).\r\n    * Most libraries will not do that. This includes libraries that contain `.razor` components. In this case you don't need to take any action.\r\n    * However, if your library does do that, then you will need to use multitargeting to support both `netstandard2.1` and `net5.0`. First, in your `csproj`, replace the existing `<TargetFramework>` with `<TargetFrameworks>netstandard2.0;net5.0</TargetFrameworks>`. Then instead of referencing `Microsoft.AspNetCore.Components` with a fixed version number such as 3.0.0, use a conditional reference to account for both versions you wish to support. For example:\r\n\r\n```xml\r\n<PackageReference Include=\"Microsoft.AspNetCore.Components\" Version=\"3.0.0\" Condition=\"'$(TargetFramework)' == 'netstandard2.0'\" />\r\n<PackageReference Include=\"Microsoft.AspNetCore.Components\" Version=\"5.0.0-rc.1.*\" Condition=\"'$(TargetFramework)' != 'netstandard2.0'\" />\r\n```\r\n\r\nFor further clarification, see this [diff showing how @jsakamoto already upgraded his `Toolbelt.Blazor.HeadElement` library in this way](https://github.com/jsakamoto/Toolbelt.Blazor.HeadElement/commit/090df430ba725f9420d412753db8104e8c32bf51).\r\n\r\n## Category\r\n\r\nASP.NET\r\n\r\n## Affected APIs\r\n\r\n`Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame`","Url":"https://github.com/aspnet/Announcements/issues/438","RelatedDescription":"Open issue \"Fields on RenderTreeFrame have become properties\" (#438)"},{"Id":"696062913","IsPullRequest":false,"CreatedAt":"2020-09-08T17:46:46","Actor":"rbhanda","Number":"437","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA security feature bypass vulnerability exists in the way Microsoft ASP.NET Core parses encoded cookie names.\r\n\r\nThe ASP.NET Core cookie parser decodes the cookie name which could allow a malicious attacker to use percent encoded characters to masquerade as a different cookie with different security features.\r\n\r\nThe security update addresses the vulnerability by fixing the way the ASP.NET Core cookie parser handles encoded names.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/25701\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.7 or lower\r\n* Any .NET Core 2.1 application running on .NET Core 2.1.21 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.8 or SDK 3.1.108 (for Visual Studio 2019 v16.4) or 3.1.402 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1045](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1045)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 8, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-09-08_\r\n","Url":"https://github.com/aspnet/Announcements/issues/437","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1045 | Microsoft ASP.NET Core Security Feature Bypass Vulnerability\" (#437)"},{"Id":"695996301","IsPullRequest":false,"CreatedAt":"2020-09-08T16:02:02","Actor":"pranavkm","Number":"436","RawContent":null,"Title":"ProtectedBrowserStorage feature moved to ASP.NET Core shared framework","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## ProtectedBrowserStorage feature moved to ASP.NET Core shared framework\r\n\r\nAs part of the 5.0-rc2 release, the `ProtectedBrowserStorage` feature has been moved to the ASP.NET Core shared framework. \r\n\r\n### Version introduced\r\n\r\n5.0-rc2\r\n\r\n### Old behavior\r\n\r\nIn 5.0-preview8, the feature was available as a part of the Microsoft.AspNetCore.Components.Web.Extensions package but was only usable in Blazor WebAssembly. In 5.0-rc1, the feature was available as part of the Microsoft.AspNetCore.Components.ProtectedBrowserStorage package which references the Microsoft.AspNetCore.App shared framework. \r\n\r\n### New behavior\r\n\r\nAs part of 5.0-rc2, a package reference is no longer needed to reference and use the feature.\r\n\r\n### Reason for change\r\n\r\nBetter fit for the user experience we expect.\r\n\r\n### Recommended action\r\n\r\n#### When upgrading from 5.0-rc1\r\n\r\n* Remove the `Microsoft.AspNetCore.Components.ProtectedBrowserStorage` package reference \r\n* Replace the `Microsoft.AspNetCore.Components.ProtectedBrowserStorage` using with `Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage`\r\n* Remove the call to `AddProtectedBrowserStorage` from your Startup.\r\n\r\n#### When upgrading from 5.0-preview8\r\n\r\n* Remove the `Microsoft.AspNetCore.Components.Web.Extensions` package reference \r\n* Replace the `Microsoft.AspNetCore.Components.Web.Extensions` using with `Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage`\r\n* Remove the call to `AddProtectedBrowserStorage` from your Startup.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* Microsoft.AspNetCore.Components.ProtectedBrowserStorage\r\n* Microsoft.Extensions.DependencyInjection.ProtectedBrowserStorageServiceCollectionExtensions.AddProtectedBrowserStorage\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/436","RelatedDescription":"Open issue \"ProtectedBrowserStorage feature moved to ASP.NET Core shared framework\" (#436)"},{"Id":"691459306","IsPullRequest":false,"CreatedAt":"2020-09-02T22:03:50","Actor":"MackinnonBuck","Number":"435","RawContent":null,"Title":"JSObjectReference has been made internal, and IJSObjectReference takes its place in the public API","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## `JSObjectReference` has been made internal, and `IJSObjectReference` takes its place in the public API\r\n\r\nThe new `Microsoft.JSInterop.JSObjectReference` and `Microsoft.JSInterop.JSInProcessObjectReference` types introduced in ASP.NET Core 5.0 RC 1 are being made internal, in favor of `Microsoft.JSInterop.IJSObjectReference` and `Microsoft.JSInterop.IJSInProcessObjectReference` which will be part of the public API in 5.0 RC 2.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0 RC 2\r\n\r\n### Old behavior\r\n\r\nA `JSObjectReference` could be obtained from a JS interop call via `IJSRuntime`. For example:\r\n```csharp\r\nvar jsObjectReference = await JSRuntime.InvokeAsync<JSObjectReference>(...);\r\n```\r\n\r\n### New behavior\r\n\r\n`JSObjectReference` will be made `internal`, so the new `IJSObjectReference` type must be used instead:\r\n```csharp\r\nvar jsObjectReference = await JSRuntime.InvokeAsync<IJSObjectReference>(...);\r\n```\r\n\r\nThis also applies for `JSInProcessObjectReference`, which was replaced by `IJSInProcessObjectReference`.\r\n\r\n### Reason for change\r\n\r\nThe change makes this feature more consistent with other patterns within Blazor. `IJSObjectReference` is analogous to `IJSRuntime` in that it serves a similar purpose and has similar methods and extensions.\r\n\r\n### Recommended action\r\n\r\nReplace all occurrences of `JSObjectReference` and `JSInProcessObjectReference` with `IJSObjectReference` and `IJSInProcessObjectReference` in your code.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n`Microsoft.JSInterop.JSObjectReference`\r\n`Microsoft.JSInterop.JSInProcessObjectReference`\r\n\r\n<!--\r\nIf no APIs are affected, this should read:\r\n     \"Not detectable via API analysis\"\r\n\r\n  If affected APIs are identifiable, include a link for each. The link takes the form:\r\n\r\n  `[friendly description of API](link to API on docs.microsoft.com)`\r\n\r\n  For example, `[String.IndexOf(String)](https://docs.microsoft.com/dotnet/api/system.string.indexof#System_String_IndexOf_System_String_)\r\n\r\n  For methods, if all overloads are affected, link to the general overloaded method page. For example:\r\n\r\n  <https://docs.microsoft.com/dotnet/api/system.string.indexof>\r\n\r\n  Otherwise, link to the individual method overload. For example:\r\n\r\n  <https://docs.microsoft.com/dotnet/api/system.string.indexof#System_String_IndexOf_System_String_>\r\n\r\n-->\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/435","RelatedDescription":"Open issue \"JSObjectReference has been made internal, and IJSObjectReference takes its place in the public API\" (#435)"},{"Id":"686608855","IsPullRequest":false,"CreatedAt":"2020-08-26T20:52:48","Actor":"JunTaoLuo","Number":"434","RawContent":null,"Title":"ExceptionHandlerMiddleware will throw original exception if exception handler cannot be found","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## ExceptionHandlerMiddleware will throw original exception if exception handler cannot be found\r\n\r\nCurrently, the `ExceptionHandlerMiddleware` will execute the configured exception handler when an exception has occurred. If the exception handler, configured via [`ExceptionHandlerOptions.ExceptionHandlingPath`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.exceptionhandleroptions.exceptionhandlingpath) for example, cannot be found, a 404 response will be produced. The 404 error is especially misleading since it makes it seem like an user error and obscures the fact that an exception occurred on the server.\r\n\r\nTo resolve this, the default behavior of `ExceptionHandlerMiddleware` will now throw the original exception if the exception handler could not be found. As a result, a 500 response will be produced by the server and it will be more obvious to examine the server logs when debugging the error that occurred.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0 RC 1\r\n\r\n### Old behavior\r\n\r\nThe `ExceptionHandlerMiddleware` will currently produce a 404 error response when the configured exception handler could not be found when the middleware executes. \r\n\r\n### New behavior\r\n\r\nBy default, the `ExceptionHandlerMiddleware` will now throw the original exception when the configured exception handler could not be found (i.e. the exception handler returns a 404) when the middleware executes. To allow 404 responses to be returned by the exception handler, please configure the option `AllowStatusCode404Response` on `ExceptionHandlerOptions` to `true`. When this option is set to true, the current behavior is maintained.\r\n\r\n### Reason for change\r\n\r\nWe have often seen `ExceptionHandlerMiddleware` with misconfigured handlers producing 404 responses leading to confusion since the 404 error doesn't make it obvious an exception occurred on the server. This change is made so that a 500 error will be produced instead to make it more obvious that it's not caused by user error but rather an exception was encountered on the server.\r\n\r\n### Recommended action\r\n\r\nThere is no API change due to this breaking change so all existing apps will continue to compile and run. The exception thrown will be handled by the server. For example, the exception will be converted to a 500 error response by Kestrel HTTP server or HTTP.SYS server. \r\n\r\nFor backwards compatibility using the current behavior, where a 404 response from the exception handler is allowed, please set `AllowStatusCode404Response` on `ExceptionHandlerOptions` to `true`. See \"New behavior\" section for details.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n\r\nSee discussion at: https://github.com/dotnet/aspnetcore/issues/25288\r\n","Url":"https://github.com/aspnet/Announcements/issues/434","RelatedDescription":"Open issue \"ExceptionHandlerMiddleware will throw original exception if exception handler cannot be found\" (#434)"},{"Id":"684954186","IsPullRequest":false,"CreatedAt":"2020-08-24T20:45:36","Actor":"NTaylorMullen","Number":"433","RawContent":null,"Title":"Removed RazorTemplateEngine API","State":"open","Body":"*Please use https://github.com/dotnet/aspnetcore/issues/25215 to discuss this change*\r\n\r\n## Removed RazorTemplateEngine API\r\n\r\nThe `RazorTemplateEngine` API was removed in favor of `RazorProjectEngine`.\r\n\r\n### Version introduced\r\n\r\n3.0\r\n\r\n### Old behavior\r\nA template engine could be created and used to parse and generate code for Razor files\r\n\r\n### New behavior\r\nA `RazorProjectEngine`  can be created and fed the same type of information as a `RazorTemplateEngine` to parse and generate code for Razor files. It also provides extra levels of configurability.\r\n\r\n### Reason for change\r\n\r\n`RazorTemplateEngine` was too coupled to our existing implementations and ultimately led to more questions when trying to properly configure a Razor parsing/generation pipeline.\r\n\r\n### Recommended action\r\n\r\nUse `RazorProjectEngine` instead of `RazorTemplateEngine`.\r\n\r\n#### Creating & configuring the RazorProjectEngine\r\n\r\n```C#\r\nvar projectEngine = RazorProjectEngine.Create(\r\n    RazorConfiguration.Default, \r\n    RazorProjectFileSystem.Create(@\"C:/Users/nimullen/source/repos/ConsoleApp4/ConsoleApp4\"), \r\n    builder =>\r\n    {\r\n        builder.ConfigureClass((document, classNode) =>\r\n        {\r\n            classNode.ClassName = \"MyClassName\";\r\n\r\n            // Can also configure other aspects of the class here.\r\n        });\r\n\r\n        // More configuration can go here\r\n    });\r\n```\r\n\r\n#### Generating code for a Razor file\r\n\r\n```C#\r\nvar item = projectEngine.FileSystem.GetItem(@\"C:\\Users\\nimullen\\source\\repos\\ConsoleApp4\\ConsoleApp4\\Example.cshtml\", FileKinds.Legacy);\r\nvar output = projectEngine.Process(item);\r\n\r\n// Things available\r\nvar syntaxTree = output.GetSyntaxTree();\r\nvar intermediateDocument = output.GetDocumentIntermediateNode();\r\nvar csharpDocument = output.GetCSharpDocument();\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n- RazorTemplateEngine\r\n- RazorTemplateEngineOptions\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/433","RelatedDescription":"Open issue \"Removed RazorTemplateEngine API\" (#433)"},{"Id":"680596487","IsPullRequest":false,"CreatedAt":"2020-08-18T00:06:02","Actor":"JunTaoLuo","Number":"432","RawContent":null,"Title":"Obsoleting DatabaseErrorPage middleware","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Obsoleting DatabaseErrorPage\r\n\r\nWith the introduction of [extensible handlers for `DeveloperExceptionPage`](https://github.com/dotnet/aspnetcore/issues/8536), we are planning to obsolete the `DatabaseErrorPageMiddleware` and its associated extension methods in .NET 5.0 with further plans to remove them in .NET 6.0. The functionality will instead be provided by `DatabaseDeveloperPageExceptionFilter` and its extension methods instead.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0 RC 1\r\n\r\n### Old behavior\r\n\r\n`DatabaseErrorPageMiddleware` and its associated extension methods were not obsolete.\r\n\r\n### New behavior\r\n\r\n`DatabaseErrorPageMiddleware` and its associated extension methods are now obsolete.\r\n\r\n### Reason for change\r\n\r\nWe are migrating the existing database error page middleware to the new extensible API for `DeveloperExceptionPage`.\r\n\r\n### Recommended action\r\n\r\n1. Remove uses of `DatabaseErrorPageMiddleware`in your app:\r\n\r\n```C#\r\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n{\r\n    if (env.IsDevelopment())\r\n    {\r\n        app.UseDatabaseErrorPage();\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n2. Ensure `DeveloperExeptionPage` and `MigrationsEndpoint` are added to your app:\r\n\r\n```C#\r\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n{\r\n    if (env.IsDevelopment())\r\n    {\r\n        app.UseDeveloperExceptionPage();\r\n        app.UseMigrationsEndPoint();\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n3. Add `DatabaseDeveloperPageExceptionFilter` to your services:\r\n\r\n```C#\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddDatabaseDeveloperPageExceptionFilter();\r\n    ...\r\n}\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n  [`Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.diagnostics.entityframeworkcore.databaseerrorpagemiddleware)\r\n  [`Microsoft.AspNetCore.Builder.DatabaseErrorPageExtensions.UseDatabaseErrorPage`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.databaseerrorpageextensions.usedatabaseerrorpage)\r\n\r\nSee discussion at: https://github.com/dotnet/aspnetcore/issues/24987\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/432","RelatedDescription":"Open issue \"Obsoleting DatabaseErrorPage middleware\" (#432)"},{"Id":"677137375","IsPullRequest":false,"CreatedAt":"2020-08-11T19:27:08","Actor":"blowdart","Number":"431","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/24796\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 application running on .NET Core 3.1.6 or lower\r\n\r\nPlease note that .NET Core 3.0 is now out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* You should download and install Runtime 3.1.7 or SDK 3.1.107 (for Visual Studio 2019 v16.4) or 3.1.401 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2020-1597](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1597)\r\n\r\n### Revisions\r\n\r\nV1.0 (August 11, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-08-11_\r\n","Url":"https://github.com/aspnet/Announcements/issues/431","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-1597 | ASP.NET Core Denial of Service Vulnerability\" (#431)"},{"Id":"657497518","IsPullRequest":false,"CreatedAt":"2020-07-15T16:44:56","Actor":"captainsafia","Number":"430","RawContent":null,"Title":"Debugging Blazor WASM apps in VS Code no longer requires installing JavaScript Debugger Nightly extension","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Debugging Blazor WASM apps in VS Code no longer requires installing JavaScript Debugger Nightly extension\r\n\r\nAs of the June release of VS Code, the JavaScript debugger is bundled into VS Code and users no longer need to install a nightly to be able to be able to debug Blazor WASM applications in VS Code.\r\n\r\n### Version introduced\r\n\r\nThis change affects all versions of Blazor WebAssembly under the June release of VS Code.\r\n\r\n### Old behavior\r\n\r\nUsers needed to install the JavaScript Debugger (Nightly) extension in order to debug Blazor WASM applications in VS Code.\r\n\r\n### New behavior\r\n\r\nUsers no longer need to install the JavaScript Debugger (Nightly) extension to debug Blazor WASM applications in VS Code.\r\n\r\n### Reason for change\r\n\r\nThe JavaScript debugger is now bundled with VS Code instead of delivered via an extension dependency.\r\n\r\n### Recommended action\r\n\r\nUsers who are not interested in using the nightly builds of the JavaScript debugger for other reasons should uninstall the JavaScript Debugger (Nightly) extension.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: announcement\r\n","Url":"https://github.com/aspnet/Announcements/issues/430","RelatedDescription":"Open issue \"Debugging Blazor WASM apps in VS Code no longer requires installing JavaScript Debugger Nightly extension\" (#430)"},{"Id":"653600438","IsPullRequest":false,"CreatedAt":"2020-07-08T21:12:19","Actor":"ryanbrandenburg","Number":"429","RawContent":null,"Title":"Remove obsolete constructor from RequestLocalizationMiddleware","State":"open","Body":"## Summary\r\nWe want all instances of `RequestLocalizationMiddleware` to have access to a `LoggerFactory`, and thus marked the constructor lacking this parameter Obsolete [in this commit](https://github.com/dotnet/aspnetcore/commit/ba8c6ccf6fd3eeb7fc42a159d362b15eae4fb3a0).\r\n\r\n### Old behavior\r\n* `RequestLocalizationMiddleware.ctor(RequestDelegate, IOptions<RequestLocalizationOptions>)` existed, but was marked Obsolete.\r\n### New Behavior\r\n* `RequestLocalizationMiddleware.ctor(RequestDelegate, IOptions<RequestLocalizationOptions>)` has been removed.\r\n\r\n### Reason for change\r\nWe considered this change valuable because it made sure that this Middleware always has access to a Logger.\r\n\r\n### Recommended Action\r\nWe recommend if you're manually constructing `RequestLocalizationMiddleware` you pass it an `ILoggerFactory`. If for some reason a \"real\" `ILoggerFactory` is not available in that context consider passing it something like [NullLoggerFactory](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.logging.abstractions.nullloggerfactory?view=dotnet-plat-ext-3.1).\r\n\r\n### Category\r\nASP.NET\r\n\r\n### Affected APIs\r\n* `RequestLocalizationMiddleware.ctor(RequestDelegate, IOptions<RequestLocalizationOptions>)` \r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/23785 for discussion.\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/429","RelatedDescription":"Open issue \"Remove obsolete constructor from RequestLocalizationMiddleware\" (#429)"},{"Id":"651758353","IsPullRequest":false,"CreatedAt":"2020-07-06T19:08:54","Actor":"HaoK","Number":"428","RawContent":null,"Title":"IdentityModel packages updated to 6.7.1","State":"open","Body":"## System.IdentityModel packages updated to 6.6.0 (6.7.1 in preview 8)\r\n\r\nWe have updated the following packages to 6.6.0 (6.7.1 in preview 8)\r\n\r\n`Microsoft.IdentityModel.Logging`\r\n`Microsoft.IdentityModel.ProtocolsOpenIdConnect`\r\n`Microsoft.IdentityModel.ProtocolsWsFederation`\r\n`System.IdentityModel.Tokens.Jwt`\r\n\r\n### Version introduced\r\n\r\n5.0.0-preview7 (5.0.0-preview8)\r\n\r\n### Old behavior\r\n\r\nThe old version was 5.5\r\n\r\n### New behavior\r\n\r\nSee https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/releases/tag/6.6.0 for details about changes between versions.\r\n\r\n### Reason for change\r\n\r\nUpdating to most recent versions for improvements in the underlying libraries.\r\n\r\n### Recommended action\r\n\r\nWe didn't have to react to any no public API changes from this change, but its possible there are breaking changes in the packages themselves.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n     \"Not detectable via API analysis\"\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/428","RelatedDescription":"Open issue \"IdentityModel packages updated to 6.7.1\" (#428)"},{"Id":"649201560","IsPullRequest":false,"CreatedAt":"2020-07-01T18:38:39","Actor":"Tratcher","Number":"427","RawContent":null,"Title":"Cookie name encoding being removed to prevent spoofing of security prefixes","State":"open","Body":"## Cookie name encoding being removed to prevent spoofing of security prefixes\r\n \r\nThe [HTTP cookie standard](https://tools.ietf.org/html/rfc6265#section-4.1.1) only allows specific characters in cookie names and values. ASP.NET Core and other web frameworks accommodate disallowed characters in these fields by encoding them when creating a response cookie and decoding when reading a request cookie.\r\n \r\nThis encoding behavior is being changed in response to a security concern.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/23578 for discussion.\r\n \r\n### Version introduced\r\n \r\n5.0\r\n \r\n### Old behavior\r\n \r\nResponse cookie names would be encoded, and request cookie names would be decoded.\r\n \r\n### New behavior\r\n \r\nIn .NET 5.0 we will remove the cookie name encoding and decoding. For prior [supported versions](https://dotnet.microsoft.com/platform/support/policy/dotnet-core) we plan a mitigate the decoding issue in place.\r\n\r\nCookie value encoding and decoding will not be changed.\r\n \r\n### Reason for change\r\n \r\nAn issue was discovered in [multiple web frameworks](https://github.com/advisories/GHSA-j6w9-fv6q-3q52) where this encoding/decoding could allow an attacker to bypass a security feature called [cookie prefixes](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-prefixes-00) by spoofing the reserved prefixes like `__Host-` with encoded values like `__%48ost-`. This attack requires a secondary exploit in order to inject the spoofed cookies, such as an XSS vulnerability in the web site. These prefixes are not used by default in ASP.NET Core or Microsoft.Owin libraries or templates.\r\n \r\nAll versions of ASP.NET Core and Microsoft.Owin are affected.\r\n \r\n### Recommended action\r\n \r\nApplications moving to .NET 5.0 should ensure that their cookie names conform to the [token spec requirements](https://tools.ietf.org/html/rfc2616#section-2.2): ASCII characters excluding controls and separators `\"(\" | \")\" | \"<\" | \">\" | \"@\" | \",\" | \";\" | \":\" | \"\\\" | <\"> | \"/\" | \"[\" | \"]\" | \"?\" | \"=\" | \"{\" | \"}\" | SP | HT`. The use of non-ASCII characters in cookie names or other HTTP headers may cause an exception from the server, or be improperly round tripped by the client.\r\n \r\n### Category\r\n \r\nASP.NET\r\n \r\n### Affected APIs\r\n \r\n[HttpRequest.Cookies](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.httprequest.cookies?view=aspnetcore-3.1#Microsoft_AspNetCore_Http_HttpRequest_Cookies)\r\n[HttpResponse.Cookies](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.httpresponse.cookies?view=aspnetcore-3.1#Microsoft_AspNetCore_Http_HttpResponse_Cookies)\r\n[IOwinRequest.Cookies](https://docs.microsoft.com/en-us/previous-versions/aspnet/mt152063%28v%3dvs.113%29)\r\n[IOwinResponse.Cookies](https://docs.microsoft.com/en-us/previous-versions/aspnet/mt173978%28v%3dvs.113%29)","Url":"https://github.com/aspnet/Announcements/issues/427","RelatedDescription":"Open issue \"Cookie name encoding being removed to prevent spoofing of security prefixes\" (#427)"},{"Id":"649049227","IsPullRequest":false,"CreatedAt":"2020-07-01T14:55:51","Actor":"SteveSandersonMS","Number":"426","RawContent":null,"Title":"Blazor components now trim insignificant whitespace by default","State":"open","Body":"## Blazor components now trim insignificant whitespace by default\r\n\r\nIn 3.x versions of Blazor Server and Blazor WebAssembly, `.razor` files preserved whitespace in the rendered output exactly. \r\n\r\nHowever, one of our major goals for Blazor on .NET 5 is to improve performance, and our investigations determined that insignificant whitespace tree nodes consumed up to 40% of the rendering time in benchmarks. So, starting with .NET 5 preview 7, the `.razor` compiler will omit insignificant whitespace by default.\r\n\r\nIn the vast majority of cases, this will not have any effect on the visual layout of the rendered component, since the whitespace nodes being removed would not normally affect it. However, the whitespace might affect the rendered output if you are using a CSS rule like `white-space: pre`. If you need to preserve the whitespace, you can use the new directive `@preservewhitespace true` at the top of your `.razor` file, or inside an `_Imports.razor` file to apply the preference to an entire subdirectory or even your whole project.\r\n\r\nFor further discussions, please use https://github.com/dotnet/aspnetcore/issues/23568\r\n\r\n### Example\r\n\r\nFor example, given the following `.razor` code:\r\n\r\n```\r\n<ul>\r\n    @foreach (var item in Items)\r\n    {\r\n        <li>\r\n            @item.Text\r\n        </li>\r\n    }\r\n</ul>\r\n```\r\n\r\nThis would previously have rendered two whitespace nodes outside the `@foreach`, and then two more around the `<li>`, and then two more around `@item.Text`. If the list contained 100 items, this would have been 402 whitespace nodes - i.e., more than half of all nodes rendered, even though none of them would visually affect the rendered output. Eliminating them at compile time greatly improves performance for rendering and diffing.\r\n\r\n### Version introduced\r\n\r\n5.0 preview 7\r\n\r\n### Old behavior\r\n\r\nWhitespace nodes were preserved\r\n\r\n### New behavior\r\n\r\nWhitespace nodes are removed if:\r\n\r\n * ... they are leading or trailing within an element\r\n * ... they are leading or trailing within a `RenderFragment` parameter (e.g., child content being passed to another component)\r\n * ... they precede or follow a C# code block such as an `@if`, `@foreach`, etc.\r\n\r\n... except if the `@preservewhitespace` directive is used with value `true`.\r\n\r\n### Reason for change\r\n\r\nPerformance. See above.\r\n\r\n### Recommended action\r\n\r\nIn most cases no action is required, as applications will typically continue to behave normally (but faster). If the whitespace stripping causes any problems for a particular component, use `@preservewhitespace true` in that component to disable this optimization.\r\n\r\n### Category\r\n\r\nASP.NET\r\nBlazor\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/426","RelatedDescription":"Open issue \"Blazor components now trim insignificant whitespace by default\" (#426)"},{"Id":"646581464","IsPullRequest":false,"CreatedAt":"2020-06-27T01:24:05","Actor":"pranavkm","Number":"425","RawContent":null,"Title":"Microsoft.AspNetCore.Components.*, Microsoft.JSInterop.* packages will no longer target netstandard2.1","State":"open","Body":"## Microsoft.AspNetCore.Components, Microsoft.JSInterop packages no longer target netstandard2.1\r\n\r\nIn 3.2, Blazor WebAssembly applications compiled to netstandard2.1. As of 5.0-preview7, both Blazor Server and Blazor WebAssembly applications will target .NET 5.0 (TargetFramework = `net5.0`). To better align with this change, the following Blazor packages will no longer target netstandard2.1:\r\n\r\n* Microsoft.AspNetCore.Components\r\n* Microsoft.AspNetCore.Components.Authorization\r\n* Microsoft.AspNetCore.Components.Forms\r\n* Microsoft.AspNetCore.Components.Web\r\n* Microsoft.AspNetCore.Components.WebAssembly\r\n* Microsoft.AspNetCore.Components.WebAssembly.Authentication\r\n* Microsoft.JSInterop\r\n* Microsoft.JSInterop.WebAssembly\r\n* Microsoft.Authentication.WebAssembly.Msal\r\n\r\nFor further discussions, please use https://github.com/dotnet/aspnetcore/issues/23424\r\n\r\n### Version introduced\r\n\r\n5.0-preview7\r\n\r\n### Old behavior\r\n\r\nIn 3.1 and 3.2, packages targeted netstandard2.1 and netcoreapp3.1\r\n\r\n### New behavior\r\n\r\nIn 5.0, packages will target net5.0\r\n\r\n### Reason for change\r\n\r\nBetter alignment with the platform requirements\r\n\r\n### Recommended action\r\n\r\nBlazor WebAssembly applications upgrading from 3.2 should update their target framework to net5.0 as part of updating their package references to 5.0. Libraries that reference one of these packages can either update their target framework to net5.0 or multi-target depending on their requirements.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\nNot detectable via API analysis\r\n\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/425","RelatedDescription":"Open issue \"Microsoft.AspNetCore.Components.*, Microsoft.JSInterop.* packages will no longer target netstandard2.1\" (#425)"},{"Id":"646515488","IsPullRequest":false,"CreatedAt":"2020-06-26T21:15:45","Actor":"Pilchie","Number":"424","RawContent":null,"Title":"Obsoleting Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv packages","State":"open","Body":"## Obsoleting Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv packages\r\n\r\nEarlier versions of ASP.NET Core used libuv as an implementation detail of how asynchronous IO was performed. In ASP.NET Core 2.0, an alternative transport was developed based on sockets. In ASP.NET Core 2.1 we switched to using the socket transport by default, but kept libuv support around for compatibility reasons.\r\n\r\nAt this point, use of the sockets transport is far more common than the libuv transport, so we're planning on obsoleting the libuv support in .NET 5.0, with a plan to remove it entirely in .NET 6.0.\r\n\r\nAs part of this, we will also plan not to add support for new OS platforms (like Windows ARM64) in the .NET 5.0 timeframe.\r\n\r\nIf you have a blocking issue that requires the use of the libuv transport, we would love to hear about it in the discussion issue at dotnet/aspnetcore#23409.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0 Preview 8\r\n\r\n### Old behavior\r\n\r\nThese APIs were not Obsolete.\r\n\r\n### New behavior\r\n\r\nThey are now Obsolete.\r\n\r\n### Reason for change\r\n\r\nThe socket transport is now the default, and we don't know of good reasons to continue to use the Libuv transport.\r\n\r\n### Recommended action\r\n\r\nRemove the use of the Libuv package and extension methods.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* [`WebHostBuilderLibuvExtensions`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderlibuvextensions)\r\n* [`WebHostBuilderLibuvExtensions.UseLibuv()`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderlibuvextensions.uselibuv)\r\n* [`Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransportOptions`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions)\r\n* [`Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransportOptions.ThreadCount`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions.threadcount)\r\n* [`Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransportOptions.NoDelay`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions.nodelay)\r\n* [`Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransportOptions.MaxWriteBufferSize`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions.maxwritebuffersize)\r\n* [`Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransportOptions.MaxReadBufferSize`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions.maxreadbuffersize)\r\n* [`Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransportOptions.Backlog`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions.backlog)\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/424","RelatedDescription":"Open issue \"Obsoleting Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv packages\" (#424)"},{"Id":"644818094","IsPullRequest":false,"CreatedAt":"2020-06-24T18:17:34","Actor":"HaoK","Number":"423","RawContent":null,"Title":"Authorization resource in endpoint routing will now be HttpContext","State":"open","Body":"## Authorization resource in endpoint routing will now be HttpContext\r\n\r\nPrior to this change, when using endpoint routing, the resource used for authorization would be the endpoint. This was insufficient to get access to the route data. Previously in MVC, the resource that was passed in was HttpContext which allows access to both the Endpoint and RouteData.  This change just makes it so the resource passed into Authorization is always the HttpContext.\r\n\r\n### Version introduced\r\n\r\n5.0-preview7\r\n\r\n### Old behavior\r\n\r\nWhen using Endpoint routing and the AuthorizationMiddleware/AuthorizeAttributes, the resource passed into Authorization would be the matching Endpoint.\r\n\r\n### New behavior\r\n\r\nEndpoint routing will now pass in the HttpContext into Authorization.\r\n\r\n### Reason for change\r\n\r\nYou can get to the Endpoint from the HttpContext, but there was no way to get from the Endpoint to things like the RouteData, so this was a loss in functionality from non endpoint routing.\r\n\r\n### Recommended action\r\n\r\nIf your app was using the Endpoint resource before, you will simply need to call `GetEndpoint()` on the HttpContext to continue to access the endpoint.\r\n\r\nIn preview8, you can also revert to the old behavior by setting `AppContext.SetSwitch(\"Microsoft.AspNetCore.Authorization.SuppressUseHttpContextAsAuthorizationResource\", isEnabled: true);`\r\n\r\n### Category\r\n\r\n- ASP.NET Core\r\n\r\n### Affected APIs\r\n\r\n     \"Not detectable via API analysis\"\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/423","RelatedDescription":"Open issue \"Authorization resource in endpoint routing will now be HttpContext\" (#423)"},{"Id":"642267447","IsPullRequest":false,"CreatedAt":"2020-06-19T23:58:01","Actor":"Tratcher","Number":"422","RawContent":null,"Title":"HttpSys client certificate renegotiation disabled by default","State":"open","Body":"## HttpSys client certificate renegotiation disabled by default\r\n\r\nThe option to renegotiate a connection and request a client certificate has been disabled by default.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/23181 for discussion.\r\n\r\n### Version introduced\r\n\r\n5.0\r\n\r\n### Old behavior\r\n\r\nThe connection could be renegotiated to request a client certificate.\r\n\r\n### New behavior\r\n\r\nClient certificates can only be requested during the initial connection handshake. See https://github.com/dotnet/aspnetcore/pull/23162.\r\n\r\n### Reason for change\r\n\r\nRenegotiation caused a number of performance and deadlock issues. It's also not supported in HTTP/2. See https://github.com/dotnet/aspnetcore/issues/14806 for when the option to control this behavior was first introduced in 3.1.\r\n\r\n### Recommended action\r\n\r\nApplications that require client certificates should use `netsh.exe` to set the `clientcertnegotiation` option to `enabled`. See https://docs.microsoft.com/en-us/windows-server/networking/technologies/netsh/netsh-http\r\n\r\nIf you only want client certificates enabled for some parts of your application then see the guidance at https://docs.microsoft.com/en-us/aspnet/core/security/authentication/certauth?view=aspnetcore-3.1#optional-client-certificates.\r\n\r\nIf you need the old renegotiate behavior then set `HttpSysOptions.ClientCertificateMethod` to the old value `ClientCertificateMethod.AllowRenegotiate`. This is not recommended for the reasons outlined above and in the linked guidance.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n [HttpSysOptions.ClientCertificateMethod](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions.clientcertificatemethod?view=aspnetcore-3.1&viewFallbackFrom=aspnetcore-5.0#Microsoft_AspNetCore_Server_HttpSys_HttpSysOptions_ClientCertificateMethod)\r\n  [HttpContext.Connection.ClientCertificate](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.clientcertificate?view=aspnetcore-3.1#Microsoft_AspNetCore_Http_ConnectionInfo_ClientCertificate)\r\n  [HttpContext.Connection.GetClientCertifiateAsync](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.getclientcertificateasync?view=aspnetcore-3.1)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/422","RelatedDescription":"Open issue \"HttpSys client certificate renegotiation disabled by default\" (#422)"},{"Id":"640807377","IsPullRequest":false,"CreatedAt":"2020-06-17T23:42:13","Actor":"JunTaoLuo","Number":"421","RawContent":null,"Title":"Kestrel disables HTTP/2 over TLS by default on incompatible Windows versions","State":"open","Body":"*Please use https://github.com/dotnet/aspnetcore/issues/23068 to discuss this change*\r\n\r\n<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Kestrel disables HTTP/2 over TLS by default on incompatible Windows versions\r\n\r\nTo enable HTTP/2 over TLS on Windows, two requirements need to be met: \r\n- ALPN support. This is available starting with Windows 8.1 and Windows Server 2012 R2 \r\n- A set of ciphers compatible with HTTP/2. THis is available starting with Windows 10 and Windows Server 2016\r\n\r\nAs such, Kestrel's behavior when HTTP/2 over TLS is configured has been changed to:\r\n- Downgrade to `Http1` and log a message at the `Information` level when [`ListenOptions.HttpProtocols`](https://github.com/dotnet/aspnetcore/blob/c4c6e25a0660ffbcae2d81c979495ec9533ccaff/src/Servers/Kestrel/Core/src/ListenOptions.cs#L79) is set to `Http1AndHttp2`. Note this is the default value for `ListenOptions.HttpProtocols`.\r\n- Throw a `NotSupportedException` when [`ListenOptions.HttpProtocols`](https://github.com/dotnet/aspnetcore/blob/c4c6e25a0660ffbcae2d81c979495ec9533ccaff/src/Servers/Kestrel/Core/src/ListenOptions.cs#L79) is set to `Http2`.\r\n\r\nWhile Windows 8.1 and Windows Server 2012 R2 are considered as incompatible since they don't have the necessary ciphers by default, it is possible to update the Computer Configuration settings to use HTTP/2 compatible ciphers, see [documentation](https://docs.microsoft.com/en-us/windows/win32/secauthn/tls-cipher-suites-in-windows-8-1). Once configured, HTTP/2 over TLS on Kestrel must be explicitly enabled by setting the app context switch `Microsoft.AspNetCore.Server.Kestrel.EnableWindows81Http2`, e.g. \r\n\r\n```C#\r\nAppContext.SetSwitch(\"Microsoft.AspNetCore.Server.Kestrel.EnableWindows81Http2\", true);\r\n```\r\n\r\nNote that no underlying support has changed. For example, HTTP/2 over TLS has never worked on Windows 8 or Windows Server 2012. The change here modifies how errors in these unsupported scenario are presented.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0 preview 7\r\n\r\n### Old behavior\r\n\r\nWhen HTTP/2 over TLS is configured:\r\n\r\n| HttpProtocols | Windows 7, <br /> Windows Server 2008 R2, <br /> or earlier | Windows 8, <br /> Windows Server 2012 | Windows 8.1, <br /> Windows Server 2012 R2 | Windows 10, <br /> Windows Server 2016, <br /> or newer |\r\n|---------------|-----------------------------------------------|--------------------------------|-------------------------------------|------------------------------------------|\r\n| Http2         | Throw NotSupportedException                   | Error during TLS handshake     | Error during TLS handshake &ast;     | No error                                 |\r\n| Http1AndHttp2 | Downgrade to Http1                    | Downgrade to Http1     | Error during TLS handshake &ast;     | No error                                 |\r\n\r\n&ast;: Compatible cipher suites need to be configured to enable these scenarios.\r\n\r\n### New behavior\r\n\r\nWhen HTTP/2 over TLS is configured:\r\n\r\n| HttpProtocols | Windows 7, <br /> Windows Server 2008 R2, <br /> or earlier | Windows 8, <br /> Windows Server 2012 | Windows 8.1, <br /> Windows Server 2012 R2 | Windows 10, <br /> Windows Server 2016, <br /> or newer |\r\n|---------------|-----------------------------------------------|--------------------------------|-------------------------------------|------------------------------------------|\r\n| Http2         | Throw NotSupportedException                   | Throw NotSupportedException     | Throw NotSupportedException &ast;&ast;     | No error                                 |\r\n| Http1AndHttp2 | Downgrade to Http1                    | Downgrade to Http1     | Downgrade to Http1 &ast;&ast;     | No error                                 |\r\n\r\n&ast;&ast;: Compatible cipher suites need to be configured and the app context switch `Microsoft.AspNetCore.Server.Kestrel.EnableWindows81Http2` need to be set to `true` to enable these scenarios.\r\n\r\n### Reason for change\r\n\r\nThis change is made to ensure compatibility errors for HTTP/2 over TLS on older Windows versions are surfaced as early and as clearly as possible. \r\n\r\n### Recommended action\r\n\r\nEnsure HTTP/2 over TLS is disabled on incompatible Windows versions. If HTTP/2 over TLS needs to be enabled for Windows 8.1 or Windows Server 2012 R2, ensure compatible cipher suites are configured and the app context switch is set to true, as discussed above.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n     \"Not detectable via API analysis\"\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/421","RelatedDescription":"Open issue \"Kestrel disables HTTP/2 over TLS by default on incompatible Windows versions\" (#421)"},{"Id":"639193843","IsPullRequest":false,"CreatedAt":"2020-06-15T21:45:50","Actor":"jkotalik","Number":"420","RawContent":null,"Title":"Breaking change in IIS UrlRewrite support with query strings","State":"open","Body":"## Changes to appendQueryString in IIS UrlRewrite middleware\r\n\r\nWe are fixing a bug in the IIS UrlRewrite middleware which will append query strings by default instead of removing them. This is to stay consistent with what the IIS UrlRewrite Module's behavior.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0-preview7\r\n\r\n### Old behavior\r\n\r\nWhen having a rewrite rule like the following:\r\n\r\n```xml\r\n<rule name=\"MyRule\" stopProcessing=\"true\">\r\n  <match url=\"^foo\" />\r\n  <action type=\"Redirect\" url=\"/bar\" redirectType=\"Temporary\" appendQueryString=\"true\" /> <!-- appendQueryString defaults to true -->\r\n</rule>\r\n```\r\n\r\nThis wouldn't actually append the query string. So a URI like `/foo?baz=1` wouldn't redirect to `/bar?baz=1` and instead `/bar`. `appendQueryString` defaults to true as well.\r\n\r\n### New behavior\r\n\r\nThe new behavior fixes this behavior. Now the URI from the previous example would be `/bar?baz=1`.\r\n\r\n### Reason for change\r\n\r\nThe previous behavior didn't match the IIS UrlRewrite Module's behavior. Our goal is to have our IIS UrlRewrite middleware match the module as much as possible, so porting between is seamless.\r\n\r\n### Recommended action\r\n\r\nIf the behavior of removing the query string is preferred, you can change the action to have  `appendQueryString=\"false\"` instead.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[`Microsoft.AspNetCore.Rewrite.IISUrlRewriteOptionsExtensions.AddIISUrlRewrite(RewriteOptions, IFileProvider, String)`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.rewrite.iisurlrewriteoptionsextensions.addiisurlrewrite?view=aspnetcore-3.1#Microsoft_AspNetCore_Rewrite_IISUrlRewriteOptionsExtensions_AddIISUrlRewrite_Microsoft_AspNetCore_Rewrite_RewriteOptions_Microsoft_Extensions_FileProviders_IFileProvider_System_String_)\r\n\r\n[`Microsoft.AspNetCore.Rewrite.IISUrlRewriteOptionsExtensions.AddIISUrlRewrite(RewriteOptions, TextReader)`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.rewrite.iisurlrewriteoptionsextensions.addiisurlrewrite?view=aspnetcore-3.1#Microsoft_AspNetCore_Rewrite_IISUrlRewriteOptionsExtensions_AddIISUrlRewrite_Microsoft_AspNetCore_Rewrite_RewriteOptions_System_IO_TextReader_)\r\n\r\n[`Microsoft.AspNetCore.Rewrite.IISUrlRewriteOptionsExtensions.AddIISUrlRewrite(RewriteOptions, TextReader, Boolean)`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.rewrite.iisurlrewriteoptionsextensions.addiisurlrewrite?view=aspnetcore-3.1#Microsoft_AspNetCore_Rewrite_IISUrlRewriteOptionsExtensions_AddIISUrlRewrite_Microsoft_AspNetCore_Rewrite_RewriteOptions_System_IO_TextReader_System_Boolean_)\r\n\r\n[`Microsoft.AspNetCore.Rewrite.IISUrlRewriteOptionsExtensions.AddIISUrlRewrite(RewriteOptions, IFileProvider, String, Boolean)`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.rewrite.iisurlrewriteoptionsextensions.addiisurlrewrite?view=aspnetcore-3.1#Microsoft_AspNetCore_Rewrite_IISUrlRewriteOptionsExtensions_AddIISUrlRewrite_Microsoft_AspNetCore_Rewrite_RewriteOptions_Microsoft_Extensions_FileProviders_IFileProvider_System_String_System_Boolean_)\r\n\r\nThis is the discussion issue for the following announcement: https://github.com/dotnet/aspnetcore/issues/22972\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/420","RelatedDescription":"Open issue \"Breaking change in IIS UrlRewrite support with query strings\" (#420)"},{"Id":"636663341","IsPullRequest":false,"CreatedAt":"2020-06-11T02:09:23","Actor":"halter73","Number":"419","RawContent":null,"Title":"Kestrel now reacts to configuration changes by default","State":"open","Body":"## Kestrel now reacts to configuration changes by default\r\n\r\nKestrel now reacts to changes made to the \"Kestrel\" section of the application's IConfiguration (e.g. appsettings.json) at runtime. To learn more about how to configure Kestrel using appsettings.json, see the appsettings.json example in https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel#endpoint-configuration.\r\n\r\nKestrel will bind, unbind and rebind endpoints as necessary to react to these configuration changes.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0.0-preview7\r\n\r\n### Old behavior\r\n\r\nPrior to 5.0.0-preview6, Kestrel did not support changing config at runtime.\r\n\r\nIn 5.0.0-preview6, you could opt into the now-default behavior of reacting to configuration changes at runtime by binding Kestrel's configuration manually as follows:\r\n\r\n```C#\r\nwebHostBuilder.UseKestrel((builderContext, kestrelOptions) =>\r\n{\r\n    kestrelOptions.Configure(builderContext.Configuration.GetSection(\"Kestrel\"), reloadOnChange: true);\r\n});\r\n```\r\n\r\n### New behavior\r\n\r\nKestrel now reacts to configuration changes at runtime by default.\r\n\r\n### Reason for change\r\n\r\nTo support reconfiguring endpoints at runtime without completely restarting the server. Unlike with a full server restart, unchanged endpoints are not unbound even temporarily.\r\n\r\n### Recommended action\r\n\r\nFor the majority of scenarios where Kestrel's default configuration section does not change at runtime, this change has no impact and no action is needed.\r\n\r\nFor scenarios where Kestrel's default configuration section does change at runtime and Kestrel should react to it, this is now the default behavior.\r\n\r\nFor scenarios where Kestrel's default configuration section changes at runtime and Kestrel should **not** react to it, you can opt out as follows:\r\n\r\n```C#\r\nwebHostBuilder.UseKestrel((builderContext, kestrelOptions) =>\r\n{\r\n    kestrelOptions.Configure(builderContext.Configuration.GetSection(\"Kestrel\"), reloadOnChange: false);\r\n});\r\n```\r\n\r\n### Notes\r\n\r\nThis does not change the behavior of the `KestrelServerOptions.Configure(IConfiguration)` overload which still defaults to the `reloadOnChange: false` behavior.\r\n\r\nIt's also important to make sure the configuration source supports reloading. For Json sources this is done by calling `AddJsonFile(path, reloadOnChange: true)`. This is already done by default for appsettings.json and appsettings.{Environment}.json.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n- [GenericHostBuilderExtensions.ConfigureWebHostDefaults(IHostBuilder, Action<IWebHostBuilder>)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.generichostbuilderextensions.configurewebhostdefaults) now calls [KestrelServerOptions.Configure(IConfiguration, bool)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.core.kestrelserveroptions.configure) with `reloadOnChange: true` by default.\r\n\r\nTo discuss this change, use the following issue: https://github.com/dotnet/aspnetcore/issues/22807\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/419","RelatedDescription":"Open issue \"Kestrel now reacts to configuration changes by default\" (#419)"},{"Id":"631235947","IsPullRequest":false,"CreatedAt":"2020-06-05T00:56:04","Actor":"halter73","Number":"418","RawContent":null,"Title":"Changes to Kestrel's default supported TLS protocol versions","State":"open","Body":"## Changes to Kestrel's default supported TLS protocol versions\r\n\r\nKestrel now uses the system default TLS protocol versions rather than restricting connections to the TLS 1.1 and TLS 1.2 protocols like it did previously.\r\n\r\nThis allows TLS 1.3 to be used by default in environments that support it, but it also allows TLS 1.0 to be used in some environments (such as Windows Server 2016 by default) which is usually [not desirable.][1] To disable older protocols you can either do so system-wide ([Windows instructions][2]) or manually select which protocols you want to support in code as follows:\r\n\r\n```csharp\r\nusing System.Security.Authentication;\r\nusing Microsoft.AspNetCore.Hosting\r\nusing Microsoft.Extensions.Hosting;\r\n\r\n// ...\r\n\r\n.ConfigureWebHostDefaults(webBuilder =>\r\n{\r\n    webBuilder.UseKestrel(kestrelOptions =>\r\n    {\r\n        kestrelOptions.ConfigureHttpsDefaults(httpsOptions =>\r\n        {\r\n            httpsOptions.SslProtocols = SslProtocols.Tls12 | SslProtocols.Tls13;\r\n        });\r\n    });\r\n\r\n// ...\r\n```\r\n\r\nUnfortunately, there's no API to exclude specific protocols.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 5.0.0-preview6\r\n\r\n### Old behavior\r\n\r\nKestrel required connections use TLS 1.1 or TLS 1.2 by default.\r\n\r\n### New behavior\r\n\r\nKestrel now allows the operating system to choose the best protocol to use, and to block protocols that are not secure.\r\n\r\n### Reason for change\r\n\r\nTo support TLS 1.3 and future TLS versions by default as they become available.\r\n\r\n### Recommended action\r\n\r\nUnless your app has a specific reason not to, you should use the new defaults.\r\n\r\nHowever, if you should verify your system is configured to allow only secure protocols. We [recommend disabling TLS 1.0](https://docs.microsoft.com/en-us/security/engineering/solving-tls1-problem) which is currently enabled by default on all Windows versions, but [can be disabled system-wide](https://docs.microsoft.com/en-us/dotnet/framework/network-programming/tls#configuring-schannel-protocols-in-the-windows-registry).\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n- [Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.SslProtocols][3] now defaults to [SslProtocols.None][4] instead of `SslProtocols.Tls12 | SslProtocols.Tls11`.\r\n\r\nTo discuss this change, use the following issue: dotnet/aspnetcore#22563\r\n\r\n[1]: https://docs.microsoft.com/en-us/security/engineering/solving-tls1-problem\r\n[2]: https://docs.microsoft.com/en-us/dotnet/framework/network-programming/tls#configuring-schannel-protocols-in-the-windows-registry\r\n[3]: https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.https.httpsconnectionadapteroptions.sslprotocols\r\n[4]: https://docs.microsoft.com/en-us/dotnet/api/system.security.authentication.sslprotocols\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/418","RelatedDescription":"Open issue \"Changes to Kestrel's default supported TLS protocol versions\" (#418)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1338906366669254657","CreatedAt":"2020-12-15T17:58:48+00:00","UserScreenname":"aspnet","Text":"Starting now! Join us at https://t.co/AyBuoJbJmc! https://t.co/GfnxOSGye8","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1338906181096464385","CreatedAt":"2020-12-15T17:58:03+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - https://t.co/PH04WV6k0Q with Shayne Boyer https://t.co/uR4ABIb0v6","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":6,"FavoriteCount":1,"RawContent":null},{"Id":"1338894649050558464","CreatedAt":"2020-12-15T17:12:14+00:00","UserScreenname":"aspnet","Text":"Join us for the last #AspNet Community Standup of the year:\n🎁 https://t.co/PH04WV6k0Q\n⭐Featuring: @spboyer \n\n📆 Tues… https://t.co/tu5MhrRs0U","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1336369686062145536","CreatedAt":"2020-12-08T17:58:56+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Material Design in Blazor with Material.Blazor https://t.co/hBAEVLTFpO","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1336369319026982912","CreatedAt":"2020-12-08T17:57:28+00:00","UserScreenname":"aspnet","Text":"Starting soon! Come join us live to hear about Material.Blazor!\n\nhttps://t.co/AyBuoJbJmc https://t.co/WYS8fhPYdo","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1336086160813084672","CreatedAt":"2020-12-07T23:12:18+00:00","UserScreenname":"aspnet","Text":"On this week's @aspnet Community Standup:\n🏗 Material Design in #Blazor with Material.Blazor\n⭐Featuring:… https://t.co/t4aeOKkjTQ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":42,"FavoriteCount":14,"RawContent":null},{"Id":"1335948146384515072","CreatedAt":"2020-12-07T14:03:53+00:00","UserScreenname":"aspnet","Text":"Our teammate @csharpfritz is hosting a LIVE STREAM right now where he's teaching the basics of MVC!  Tune in to thi… https://t.co/jFk3Crw6mj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1334911108683976705","CreatedAt":"2020-12-04T17:23:04+00:00","UserScreenname":"aspnet","Text":"Have you contributed to #AspNetCore or are you interested in contributing?\n \nWe want to hear from you!\n \nShare your… https://t.co/it7gjzrU7d","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":12,"RawContent":null},{"Id":"1333530517090619397","CreatedAt":"2020-11-30T21:57:05+00:00","UserScreenname":"aspnet","Text":"No #AspNet Community Standup this week due to a scheduling conflict. We'll be back next Tuesday with our monthly… https://t.co/27UFIXVtUl","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"1331296302458494976","CreatedAt":"2020-11-24T17:59:07+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us!\n\nhttps://t.co/AyBuoJbJmc https://t.co/iwbPuPwGM3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":7,"RawContent":null},{"Id":"1331295945535852544","CreatedAt":"2020-11-24T17:57:42+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - https://t.co/eFOzgs22K8 Core Architecture with David Fowler https://t.co/3G4h0cUbxp","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":29,"FavoriteCount":8,"RawContent":null},{"Id":"1331008246191046657","CreatedAt":"2020-11-23T22:54:29+00:00","UserScreenname":"aspnet","Text":"On this week's @aspnet  Community Standup:\n🏗 #AspNetCore Architecture\n🌟Featuring: @davidfowl\n\n📆 Tuesday | Nov 24\n⏰… https://t.co/9BbsHP6O7B","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":136,"FavoriteCount":30,"RawContent":null},{"Id":"1328759225036652545","CreatedAt":"2020-11-17T17:57:41+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Unit Testing Blazor with bUnit https://t.co/Dkm7Zf9j2g","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":31,"FavoriteCount":16,"RawContent":null},{"Id":"1328759099945746432","CreatedAt":"2020-11-17T17:57:11+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us to learn about unit testing #Blazor with @egilhansen and @captainsafia!… https://t.co/ew4IkEEmNg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1328454157808779265","CreatedAt":"2020-11-16T21:45:27+00:00","UserScreenname":"aspnet","Text":"On this week's @aspnet Community Standup:\n🧪Unit Testing Blazor with bUnit\n🌟Featuring: @egilhansen and @captainsafia… https://t.co/zV70JzGPmX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":13,"RawContent":null},{"Id":"1326225585127895040","CreatedAt":"2020-11-10T18:09:54+00:00","UserScreenname":"aspnet","Text":"Announcing #AspNetCore in .NET 5!\n\n🌠MVC model binding for C# 9 records\n🌠Blazor support and improvements\n🌠Built-in O… https://t.co/dNrGTLE356","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":192,"FavoriteCount":89,"RawContent":null}]}},"RunOn":"2021-01-07T05:30:14.8403464Z","RunDurationInMilliseconds":3497}