{"Data":{"Blog":{"FeedItems":[{"Title":"Android Asset Packs for .NET & .NET MAUI Android Apps","PublishedOn":"2024-09-12T17:05:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Introducing a new way to build and deploy Android Asset Packs using .NET for Android and .NET MAUI. If your app has allot of AndroidAsset items this feature will make your life easier.\nThe post...","Href":"https://devblogs.microsoft.com/dotnet/android-asset-packs-in-dotnet-android/","RawContent":null},{"Title":"Performance Improvements in .NET 9","PublishedOn":"2024-09-12T10:50:00+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Take an in-depth tour through hundreds of performance improvements in .NET 9.\nThe post Performance Improvements in .NET 9 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-9/","RawContent":null},{"Title":".NET 9 Release Candidate 1 is now available!","PublishedOn":"2024-09-11T20:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Try out the latest features in .NET 9 Release Candidate 1 across the .NET SDK, libraries, ASP.NET Core, SignalR, .NET MAUI, and more!\nThe post .NET 9 Release Candidate 1 is now available! appeared...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-9-release-candidate-1-is-now-available/","RawContent":null},{"Title":"GitHub Models and .NET: Building Generative AI apps for engineers","PublishedOn":"2024-09-11T17:05:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this post, you'll learn how to use AI models on GitHub.\nThe post GitHub Models and .NET: Building Generative AI apps for engineers appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/using-github-models-and-dotnet-to-build-generative-ai-apps/","RawContent":null},{"Title":"Learn to Build Your First Blazor Hybrid App!","PublishedOn":"2024-09-10T17:05:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn all about the Blazor Hybrid workshop that you can follow yourself or teach to others!\nThe post Learn to Build Your First Blazor Hybrid App! appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/introducing-blazor-hybrid-workshop/","RawContent":null},{"Title":"Why is F# code so robust and reliable?","PublishedOn":"2024-09-09T18:00:00+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"F# is not just for math and big data, it's a general purpose language that will greatly reduce the amount of bugs in your code.\nThe post Why is F# code so robust and reliable? appeared first on .NET...","Href":"https://devblogs.microsoft.com/dotnet/why-is-fsharp-code-so-robust-and-reliable/","RawContent":null},{"Title":"Discover .NET at DEVintersection Las Vegas 2024","PublishedOn":"2024-09-04T20:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us at DEVintersection Las Vegas from September 9-12, 2024, for an in-person event featuring the latest in .NET and Azure technologies. Connect with experts, dive into new advancements, and get...","Href":"https://devblogs.microsoft.com/dotnet/discover-dotnet-at-dev-intersection-las-vegas-2024/","RawContent":null},{"Title":"Enhance Your Cloud Development Skills at ‘Azure Developers – .NET Aspire Day 2024’","PublishedOn":"2024-09-03T22:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us at the Azure Developers - .NET Aspire Day 2024, a virtual event happening on September 18, 2024\nThe post Enhance Your Cloud Development Skills at &#8216;Azure Developers &#8211; .NET Aspire...","Href":"https://devblogs.microsoft.com/dotnet/enhance-your-cloud-development-skills-at-azure-developers-dotnet-aspire-day-2024/","RawContent":null},{"Title":"Announcing .NET Aspire 8.2 – Goodbye Components, Hello Integrations!","PublishedOn":"2024-08-29T17:05:00+00:00","CommentsCount":8,"FacebookCount":0,"Summary":".NET Aspire 8.2 is here with some nice updates for components... we mean integrations! Learn more about this rename, what it means for you, and what the teams has been adding to testing in .NET...","Href":"https://devblogs.microsoft.com/dotnet/announcing-dotnet-aspire-8-2/","RawContent":null},{"Title":"BinaryFormatter removed from .NET 9","PublishedOn":"2024-08-28T17:05:00+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"Starting with .NET 9, we no longer include an implementation of BinaryFormatter in the runtime. This post covers what options you have to move forward.\nThe post BinaryFormatter removed from .NET 9...","Href":"https://devblogs.microsoft.com/dotnet/binaryformatter-removed-from-dotnet-9/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"2523690897","IsPullRequest":false,"CreatedAt":"2024-09-13T01:36:30","Actor":"sam-wheat","Number":"57851","RawContent":null,"Title":"How to run an async method when a property in a child control is changed?","State":"open","Body":"\r\nI have a child control inside a parent control with a two way binding to a property in the parent.  When the value of the property changes in the parent I need to 1) update the value in the child and, 2)  call an async method in the child control.\r\n\r\nUpdating the value in the child works fine via the two way binding.  However, how to call an async method in the child is a challenge.\r\n\r\nI have spent a fair amount of time researching this and found links such as these:\r\n\r\n[Same question on SO](https://stackoverflow.com/questions/64059120/blazor-call-a-method-on-property-value-change)\r\n\r\n[Same question here but does not related to Parent/Child controls](https://github.com/dotnet/aspnetcore/issues/22394)\r\n\r\nThis article describes `@bind:after` however in my case I need the child control to call the async method - not the parent control.\r\nhttps://www.telerik.com/blogs/simplify-blazor-applications-using-dotnet-7-new-bind-modifiers\r\n\r\n[ASP.NET Core Blazor data binding](https://learn.microsoft.com/en-us/aspnet/core/blazor/components/data-binding?view=aspnetcore-8.0) appears to not address this question.  Apologies if I have missed it.\r\n\r\nThis seems like a very basic use case - sorry if I am missing something obvious.\r\n\r\nCode below is obviously incorrect but illustrates what I need to accomplish.  Note I am not asking [how to call an async method from a getter or setter](https://stackoverflow.com/questions/6602244/how-to-call-an-async-method-from-a-getter-or-setter).  I am asking how to call an async method when a bound property is changed.\r\n\r\n\r\n\r\n\r\n`ParentControl.razor`\r\n\r\n    <ChildControl @bind-Sku=\"Sku\" />\r\n\t\r\n\r\n\t\r\n`ChildControl.razor`\r\n\r\n\tprivate string _Sku;\r\n\r\n\t[Parameter]\r\n\tpublic string Sku \r\n\t{\r\n\t\tget => _Sku;\r\n\t\tset\r\n\t\t{\r\n\t\t\tif (_Sku != value)\r\n\t\t\t{\r\n\t\t\t\t_Sku = value;\r\n\t\t\t\tLoadSomeDataAsync();  // <--- need to await this method when Sku changes\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t[Parameter]\r\n\tpublic EventCallback<string> SkuChanged { get; set; }\r\n\t\r\n\tprivate async Task LoadSomeDataAsync()\r\n\t{\r\n\t\t// this is a private method - it needs to be called from within the child control\r\n\t\t// when a bound property is changed.\r\n\t}\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/57851","RelatedDescription":"Open issue \"How to run an async method when a property in a child control is changed?\" (#57851)"},{"Id":"2523514958","IsPullRequest":true,"CreatedAt":"2024-09-13T01:05:18","Actor":"amcasey","Number":"57847","RawContent":null,"Title":"Unquarantine StreamPool_StreamIsInvalidState_DontReturnedToPool","State":"closed","Body":"It hasn't failed in 30 days and code inspection suggests it can't fail in the same way as it did two years ago.\r\n\r\nFixes #40626","Url":"https://github.com/dotnet/aspnetcore/pull/57847","RelatedDescription":"Closed or merged PR \"Unquarantine StreamPool_StreamIsInvalidState_DontReturnedToPool\" (#57847)"},{"Id":"2523587751","IsPullRequest":false,"CreatedAt":"2024-09-13T00:30:39","Actor":"Fear0","Number":"57850","RawContent":null,"Title":"Is there a way to evict a cache entry by value in addition to evicting by tag  - OutputCaching Asp.Net Core","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nHi,\r\n\r\nI am using Output Caching with Redis in my .NET 8 web API. The IOutputCacheStore API only provides a method for evicting cache by tags and not by cache keys. This is limiting, as the Tag() method in the CacheOutput fluent API chain only accepts strings as parameters and does not allow for delegates, unlike the VaryByValue() method, where we can access the HttpContext and query parameters to dynamically create cache keys. As a result, it's not possible to dynamically create a tag in the same way as in VaryByValue() to use as input for the EvictByTag() method.\r\n\r\nI have overridden the caching policy to allow output caching of authenticated requests, enabling me to cache by an ID value (e.g., user ID) and evict the cache entry associated with that specific value.\r\n\r\nIs there a way to address this issue, allowing more granular cache eviction by user or query parameter, without having to evict the entire cache for the endpoint in ASP.NET Core Output Caching?\r\n\r\n### Describe the solution you'd like\r\n\r\nAn fluent api that allows evicting cache entries by value in Asp.Net Core OutputCaching\r\n\r\n### Additional context\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57850","RelatedDescription":"Open issue \"Is there a way to evict a cache entry by value in addition to evicting by tag  - OutputCaching Asp.Net Core\" (#57850)"},{"Id":"2523573605","IsPullRequest":true,"CreatedAt":"2024-09-13T00:23:08","Actor":"amcasey","Number":"57849","RawContent":null,"Title":"Unskip RunIndividualTestCase(http2_6.9.1_2)","State":"open","Body":"It's not quarantined, so there's no pass rate, but I can't get it to fail locally - even with a synthetic delay - and the code has been substantially rewritten since the bug was opened.\r\n\r\nFixes #30373","Url":"https://github.com/dotnet/aspnetcore/pull/57849","RelatedDescription":"Open PR \"Unskip RunIndividualTestCase(http2_6.9.1_2)\" (#57849)"},{"Id":"2523515993","IsPullRequest":true,"CreatedAt":"2024-09-12T23:18:46","Actor":"amcasey","Number":"57848","RawContent":null,"Title":"Unquarantine AcceptNewStreamsDuringClosingConnection","State":"open","Body":"It hasn't failed in 30 days and code inspection suggests it can't fail in the same way as it did two years ago.\r\n\r\nFixes #41172","Url":"https://github.com/dotnet/aspnetcore/pull/57848","RelatedDescription":"Open PR \"Unquarantine AcceptNewStreamsDuringClosingConnection\" (#57848)"},{"Id":"2523442730","IsPullRequest":false,"CreatedAt":"2024-09-12T22:07:33","Actor":"captainsafia","Number":"57846","RawContent":null,"Title":"Remove trimming tests workaround for runtime bug","State":"open","Body":"In https://github.com/dotnet/aspnetcore/pull/57742 we introduced a set of workarounds to the trimming test infrastructure to workaround an issue in the runtime repo.\r\n\r\nOnce https://github.com/dotnet/sdk/pull/43070 is merged we should revert the change made in https://github.com/dotnet/aspnetcore/pull/57742/commits/64f60ca87895f41a86b5121fbc3da5ea5efe17e1 and https://github.com/dotnet/aspnetcore/pull/57742/commits/d91d59c16bed05fb68cfec912fd4e9eb23936d10.","Url":"https://github.com/dotnet/aspnetcore/issues/57846","RelatedDescription":"Open issue \"Remove trimming tests workaround for runtime bug\" (#57846)"},{"Id":"2523256319","IsPullRequest":false,"CreatedAt":"2024-09-12T20:06:22","Actor":"wbuck","Number":"57845","RawContent":null,"Title":"Error: Failed to invoke 'JoinGroup' due to an error on the server","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWe're attempting to use Azure SignalR (with managed identities) with an Angular frontend and ASP.net Core backend.\r\nFor a particular method call I'll see the following error about 50% of the time:\r\n\r\n> Error observing OperationsChanged:  Error: Failed to invoke 'JoinGroup' due to an error on the server.\r\n\r\nWe're supplying an object with 3 properties to the `JoinGroup` function.\r\nFrom the Angular application this looks like the following:\r\n\r\n```\r\nconst url = ''some url';\r\n\r\nconst options: IHttpConnectionOptions = {\r\n   accessTokenFactory: async () =>  await service.getToken(),\r\n   transport: HttpTransportType.WebSockets,\r\n   withCredentials: false\r\n};\r\n\r\nconst hub = new HubConnectionBuilder()\r\n      .withUrl(url, options)\r\n      .configureLogging(LogLevel.Debug)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\nawait hub.start();\r\n\r\n// This is the call that fails about 50% of the time.\r\nconst msg = await this.hub.invoke<string>('JoinGroup', {\r\n    organizationId: '1bf751e8-67cd-4fb0-89cc-206c31371ac1',\r\n    environmentId: '02a03e43-839b-4f71-88b1-d809d26a0499',\r\n    recoveryPlanId: '9c18d9b7-a58f-4f8f-8c46-aedc996dc304'\r\n});\r\n\r\n```\r\n\r\nFrom the ASP.net core application our hub looks like the following:\r\n\r\n```\r\npublic async Task<string> JoinGroup(RecoveryGroupName group)\r\n{\r\n    await Groups.AddToGroupAsync(Context.ConnectionId, group.ToString());\r\n    return \"You've joined a group!\";\r\n}\r\n```\r\nAnd the `RecoveryGroupName` looks like the following:\r\n\r\n```\r\npublic record RecoveryGroupName\r\n{\r\n    public required Guid OrganizationId { get; init; }\r\n    public required Guid EnvironmentId { get; init; }\r\n    public required Guid RecoveryPlanId { get; init; }\r\n\r\n    // Right now I'm just creating a new string here each time ToString is called.\r\n    // Once I get this bloody this working I'll fix it.\r\n    public override string ToString() \r\n        => $\"{OrganizationId}_{EnvironmentId}_{RecoveryPlanId}\";\r\n}\r\n```\r\n\r\nI can't figure out why this is happening!! \r\nI don't see *any* errors from the server (nothing in the logs or console when running locally).\r\n\r\nI've set `EnableDetailedErrors` to `true` but that doesn't five me any clues what is going on...\r\n```\r\nbuilder.Services\r\n    .AddSignalR(opt => opt.EnableDetailedErrors = true)\r\n    .AddAzureSignalR(option => /* Setting up connection string etc */);\r\n```\r\nAll I see in the browser is the following: \r\n![image](https://github.com/user-attachments/assets/a153e822-6f96-4753-bdc3-6c4d553fc75d)\r\n\r\nAm I doing something wrong here?\r\nHow can I troubleshoot this? There are no error messages!\r\n\r\n### Expected Behavior\r\n\r\nI expect to successful call `JoinGroup` more than 50% of the time.\r\n\r\n### Steps To Reproduce\r\n\r\nI don't know exactly. All I've done is expose a SignalR hub and try to call the `JoinGroup` method...\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n8.0.302\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57845","RelatedDescription":"Open issue \"Error: Failed to invoke 'JoinGroup' due to an error on the server\" (#57845)"},{"Id":"2522574397","IsPullRequest":true,"CreatedAt":"2024-09-12T19:35:31","Actor":"github-actions[bot]","Number":"57836","RawContent":null,"Title":"[automated] Merge branch 'release/9.0' => 'main'","State":"closed","Body":"I detected changes in the release/9.0 branch which have not been merged yet to main. I'm a robot and am configured to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/9.0 by the following committers:\n\n* mgravell\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/9.0\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/9.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/9.0-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/9.0-to-main main\r\ngit pull https://github.com/dotnet/aspnetcore merge/release/9.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/9.0-to-main main\r\ngit pull git@github.com:dotnet/aspnetcore merge/release/9.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/57836","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/9.0' => 'main'\" (#57836)"},{"Id":"2523159776","IsPullRequest":true,"CreatedAt":"2024-09-12T19:13:26","Actor":"dotnet-maestro[bot]","Number":"57844","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b451f54d-a9ea-4fe6-3a48-08d961c5a689)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b451f54d-a9ea-4fe6-3a48-08d961c5a689\r\n- **Build**: 20240909.5\r\n- **Date Produced**: September 9, 2024 5:35:17 PM UTC\r\n- **Commit**: 685008547318b269dbbb82cfc9ca968126301bbe\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.24413.1 to 6.0.0-beta.24459.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Installers**: [from 6.0.0-beta.24413.1 to 6.0.0-beta.24459.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Templating**: [from 6.0.0-beta.24413.1 to 6.0.0-beta.24459.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.24413.1 to 6.0.0-beta.24459.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c3f5fe044e...6850085473\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b451f54d-a9ea-4fe6-3a48-08d961c5a689)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/57844","RelatedDescription":"Open PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#57844)"},{"Id":"2522344970","IsPullRequest":true,"CreatedAt":"2024-09-12T19:12:41","Actor":"dotnet-maestro[bot]","Number":"57835","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2540898a-e43f-481f-ebbf-08dcbc3038ad)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 2540898a-e43f-481f-ebbf-08dcbc3038ad\r\n- **Build**: 20240911.16\r\n- **Date Produced**: September 12, 2024 10:35:10 AM UTC\r\n- **Commit**: 73229ad78184da1ee76e60e937651e4b8827f31c\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Bcl.TimeProvider**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Diagnostics**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Diagnostics.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Http**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Options**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Collections.Immutable**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Composition**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.IO.Pipelines**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Net.Http.Json**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Net.ServerSentEvents**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Reflection.Metadata**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Threading.Channels**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **System.Threading.RateLimiting**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n  - **Microsoft.SourceBuild.Intermediate.runtime.linux-x64**: [from 9.0.0-rc.2.24459.11 to 9.0.0-rc.2.24461.16][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/d32b461219...73229ad781\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2540898a-e43f-481f-ebbf-08dcbc3038ad)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/57835","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/runtime\" (#57835)"},{"Id":"2523090292","IsPullRequest":false,"CreatedAt":"2024-09-12T18:38:09","Actor":"roblangston","Number":"57843","RawContent":null,"Title":"Blazor different base path produces error","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen you create a standard Blazor server app via the template, you receive an error if you have changed the base path within the configuration when trying to increment the counter.\r\n\r\n![page](https://github.com/user-attachments/assets/a45bd47b-0039-4df4-98d7-7fe16889336d)\r\n\r\nIts a similar problem to that mentioned here: [https://github.com/dotnet/aspnetcore/issues/54469](url).  This base path behaviour is different between frameworks .Net 8 and .Net 9.  In .Net 8, the blazor.web.js attempts to be downloaded from http://localhost:5165/_framework/blazor.web.js even if a different base path \"blazor\" has been set.  In .Net 9, the file is downloaded from http://localhost:5165/blazor/_framework/blazor.web.js correctly but a different error is received when trying to interact with page components (see error).\r\n\r\n![error](https://github.com/user-attachments/assets/90d7bcd8-57c8-4741-bcd0-63b1b52d2b13)\r\n\r\nThe following lines have been changed in the program.cs:-\r\n\r\n`app.UsePathBase(\"/blazor/\");\r\napp.MapBlazorHub(\"/blazor\");\r\napp.UseStaticFiles(\"/blazor\");`\r\n\r\nIn App.razor, the base has been changed as follows:-\r\n\r\n`<base href=\"/blazor/\" />`\r\n\r\nThe various page routes have been prefixed to match the base path as follows:-\r\n\r\n`@page \"/blazor/counter\"`\r\n\r\nThe reason for wanting this to work correctly is to be able to front multiple sites behind a reverse proxy, either Yarp or NginX and that behavior doesnt seem to work without the sites being deployed with a different base path.\n\n### Expected Behavior\n\nPage functions correctly when having base path changed.\n\n### Steps To Reproduce\n\nCreate a new Blazor web project from within VS2022 Preview, make changes to the code as detailed above in the description.\r\n\r\nGitHub repo here:-\r\n[https://github.com/roblangston/BlazorTest](url)\r\n\n\n### Exceptions (if any)\n\nblazor.web.js:1 [2024-09-12T18:09:34.506Z] Information: Normalizing '_blazor' to 'http://localhost:5165/blazor/_blazor'.\r\n_blazor/negotiate?negotiateVersion=1:1 \r\n        \r\n        \r\n       Failed to load resource: the server responded with a status of 405 (Method Not Allowed)\r\nblazor.web.js:1 [2024-09-12T18:09:34.509Z] Error: Failed to complete negotiation with the server: Error: Method Not Allowed: Status code '405'\r\nlog @ blazor.web.js:1\r\nblazor.web.js:1 [2024-09-12T18:09:34.510Z] Error: Failed to start the connection: Error: Failed to complete negotiation with the server: Error: Method Not Allowed: Status code '405'\r\nlog @ blazor.web.js:1\r\nblazor.web.js:1 [2024-09-12T18:09:34.510Z] Error: Error: Failed to complete negotiation with the server: Error: Method Not Allowed: Status code '405'\r\nlog @ blazor.web.js:1\r\nblazor.web.js:1 Uncaught (in promise) zt: Failed to complete negotiation with the server: Error: Method Not Allowed: Status code '405'\r\n    at Dn._getNegotiationResponse (http://localhost:5165/blazor/_framework/blazor.web.js:1:87758)\r\n    at async Dn._startInternal (http://localhost:5165/blazor/_framework/blazor.web.js:1:85614)\r\n    at async Dn.start (http://localhost:5165/blazor/_framework/blazor.web.js:1:83488)\r\n    at async wn._startInternal (http://localhost:5165/blazor/_framework/blazor.web.js:1:58614)\r\n    at async wn._startWithStateTransitions (http://localhost:5165/blazor/_framework/blazor.web.js:1:58028)\r\n    at async Bo.startConnection (http://localhost:5165/blazor/_framework/blazor.web.js:1:136200)\r\n    at async Bo.startCore (http://localhost:5165/blazor/_framework/blazor.web.js:1:134228)\r\n    at async Zo (http://localhost:5165/blazor/_framework/blazor.web.js:1:153050)\n\n### .NET Version\n\n9.0.100-rc.1.24452.12\n\n### Anything else?\n\n![1](https://github.com/user-attachments/assets/90933f33-c027-407a-b5ba-987f9e1fd89d)\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/57843","RelatedDescription":"Open issue \"Blazor different base path produces error\" (#57843)"},{"Id":"2523027427","IsPullRequest":false,"CreatedAt":"2024-09-12T18:02:35","Actor":"erdmenchen","Number":"57842","RawContent":null,"Title":"MAUI .NET 8 app using Microsoft.Extensions.Localization 8.0.8 stuck in splash screen on Android","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI have a .NET 8 MAUI app utilizing Microsoft.Extensions.Localization for localization of text resources.\r\n\r\nAfter updating the package from Microsoft.Extensions.Localization v8.0.7 to v8.0.8 the app would not launch but be stuck in splash screen.\r\n\r\nContext:\r\n* This only happens in release mode, the app is launching and working fine when debugging the app\r\n* This only happens on Android (14), the app is launching and working fine when run on iOS\r\n\r\n\r\n### Expected Behavior\r\n\r\nIt should not crash but work fine, when upgrading from v8.0.7 to v8.0.8. \r\nNo breaking changes are expected when upgrading the patch level.\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\nAndroid device log cat shows the following entry:\r\n```\r\nTime\tDevice Name\tType\tPID\tTag\tMessage\r\n09-12 17:22:35.885\tGoogle Pixel 7\tError\t20157\tile.client.test\t* Assertion at /__w/1/s/src/mono/mono/mini/aot-runtime.c:3810, condition `is_ok (error)' not met, function:decode_patch, module '[App name removed].dll.so' is unusable (GUID of dependent assembly Microsoft.Extensions.Localization doesn't match (expected '5E767599-DEB3-4C98-99C2-2D432DE9C8D3', got 'F5266167-00CD-447D-B09C-EE78D2B2CE33')).\r\n```\r\n\r\n### .NET Version\r\n\r\n.NET 8\r\n\r\n### Anything else?\r\n\r\nDeleting obj and bin folders did not resolve the issue.\r\nOnly after downgrading Microsoft.Extensions.Localization from v8.0.8 to 8.0.7, it worked again and app was launching and working as before.\r\n\r\nSo this means, the current version of Microsoft.Extensions.Localization v8.0.8 lets the app stuck in splash screen when run in release mode on Android.\r\n\r\nEdit: Posting here, because official nuget package of Microsoft.Extensions.Localization links to this Github project.","Url":"https://github.com/dotnet/aspnetcore/issues/57842","RelatedDescription":"Open issue \"MAUI .NET 8 app using Microsoft.Extensions.Localization 8.0.8 stuck in splash screen on Android\" (#57842)"},{"Id":"2522941646","IsPullRequest":true,"CreatedAt":"2024-09-12T17:16:27","Actor":"javiercn","Number":"57841","RawContent":null,"Title":"[Templates] Fix template scripts, make them more flexible and robust","State":"open","Body":"Provides an updated `Test-Templates` module with a new `Test-Template` function to create a given template and replaces the old `Test-Templates.ps1` script, which has been left there for `other` template scripts.\r\n\r\nThe new command allows passing parameters to the templates instead of hardcoding them into the wrapping scripts and the wrapping commands expose specific parameters for the templates they instantiate.\r\n\r\nOther wrapping scripts have been left untouched.","Url":"https://github.com/dotnet/aspnetcore/pull/57841","RelatedDescription":"Open PR \"[Templates] Fix template scripts, make them more flexible and robust\" (#57841)"},{"Id":"2522910639","IsPullRequest":true,"CreatedAt":"2024-09-12T16:57:59","Actor":"MackinnonBuck","Number":"57840","RawContent":null,"Title":"Fix `Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore` package README","State":"open","Body":"The package name referenced in the README ended with `EntityFramework`, not `EntityFrameworkCore`. This PR fixes the typo.","Url":"https://github.com/dotnet/aspnetcore/pull/57840","RelatedDescription":"Open PR \"Fix `Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore` package README\" (#57840)"},{"Id":"2520950270","IsPullRequest":true,"CreatedAt":"2024-09-12T16:10:11","Actor":"MackinnonBuck","Number":"57824","RawContent":null,"Title":"Provide `Microsoft.Extensions.Logging.AzureAppServices` package README","State":"closed","Body":"Contributes to #48392","Url":"https://github.com/dotnet/aspnetcore/pull/57824","RelatedDescription":"Closed or merged PR \"Provide `Microsoft.Extensions.Logging.AzureAppServices` package README\" (#57824)"},{"Id":"2520920890","IsPullRequest":true,"CreatedAt":"2024-09-12T16:09:50","Actor":"MackinnonBuck","Number":"57823","RawContent":null,"Title":"Provide `Microsoft.AspNetCore.DataProtection.EntityFrameworkCore` package README","State":"closed","Body":"Contributes to #48392","Url":"https://github.com/dotnet/aspnetcore/pull/57823","RelatedDescription":"Closed or merged PR \"Provide `Microsoft.AspNetCore.DataProtection.EntityFrameworkCore` package README\" (#57823)"},{"Id":"2520885560","IsPullRequest":true,"CreatedAt":"2024-09-12T16:09:33","Actor":"MackinnonBuck","Number":"57818","RawContent":null,"Title":"Provide `Microsoft.Authentication.WebAssembly.Msal` package README","State":"closed","Body":"Contributes to #48392\r\n\r\nLike #57791, this one is a bit short because it's usually included automatically when you create a project from a Blazor project template.","Url":"https://github.com/dotnet/aspnetcore/pull/57818","RelatedDescription":"Closed or merged PR \"Provide `Microsoft.Authentication.WebAssembly.Msal` package README\" (#57818)"},{"Id":"2522732948","IsPullRequest":false,"CreatedAt":"2024-09-12T15:32:46","Actor":"kagudimov","Number":"57838","RawContent":null,"Title":"Authentication: Support for OAuth 2.0 for Native Apps Flow in ASP.NET Core","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI am trying to provide mobile backend endpoints to my mobile app so that it can authenticate users via Google. Upon successful authentication, I would like to generate and provide the app with access and refresh tokens using the standard \"BearerToken\" scheme.\r\n\r\nThe application uses [a plugin for React Native](https://github.com/react-native-google-signin/google-signin) for authentication. The plugin uses **native** system components and user interfaces for authentication, if they are available (it has a more user-friendly UI, which is important for users). If not available, the browser is used.\r\n\r\nFor authentication, the plugin does not involve the mobile backend; everything happens on the application side. The scheme used is similar to the one described in [OAuth for Native Apps](https://www.oauth.com/oauth2-servers/oauth-native-apps/) and in [RFC 8252: OAuth 2.0 for Native Apps](https://datatracker.ietf.org/doc/html/rfc8252).\r\n\r\nIn order for the mobile backend to authenticate the user too, a special code received from Google is sent to it from the application. Then this [code is exchanged for a token](https://developers.google.com/identity/protocols/oauth2/web-server#exchange-authorization-code) on the backend, the token gets validated, and with its help, the backend receives information about the user from Google. After that, the backend generates and returns its access tokens to the application.\r\n\r\nAccess and refresh tokens on the backend are generated and validated using the standard authentication handler `BearerTokenHandler`.\r\n\r\nI would like to reuse the OAuth authentication handler `Microsoft.AspNetCore.Authentication.Google.GoogleHandler` (use `.AddGoogle(...)`). On callback, it already does what I need: exchanges the code for information about the user. I could have just sent the code to the callback URI and signed in the user on the `options.Events.OnTicketReceived` event. But it does not work this way, because in addition to the \"code\", the handler requires \"state\" to be present in the query string, which can not be provided by the app.\r\n\r\nFrom `OAuthHandler<TOptions>` class:\r\n\r\n``` C#\r\n    protected override async Task<HandleRequestResult> HandleRemoteAuthenticateAsync()\r\n    {\r\n        var query = Request.Query;\r\n\r\n        var state = query[\"state\"];  // <--------------------------- State is required\r\n        var properties = Options.StateDataFormat.Unprotect(state);\r\n\r\n        if (properties == null)\r\n        {\r\n            return HandleRequestResults.InvalidState;\r\n        }\r\n```\r\n\r\nSo the problem is that I could not reuse `Microsoft.AspNetCore.Authentication.Google.GoogleHandler` for a mobile app that uses native components to authenticate users with Google.\n\n### Describe the solution you'd like\n\nI would like to register `GoogleHandler` in `Program.cs`:\r\n\r\n``` C#\r\nbuilder.Services.AddAuthentication(BearerTokenDefaults.AuthenticationScheme)\r\n    .AddBearerToken()\r\n    .AddGoogle(options =>\r\n    {\r\n        options.ClientId = \"...\";\r\n        options.ClientSecret = \"...\";\r\n        options.CallbackPath = \"...\";\r\n    });\r\n```\r\n\r\nAnd then do something like this in my controller:\r\n\r\n``` C#\r\n[Route(\"api/v1/account\")]\r\n[ApiController]\r\npublic class AccountController : ControllerBase\r\n{\r\n    // ...\r\n    \r\n    [HttpPost(\"login\")]\r\n    public ActionResult Login(LoginRequestDto loginRequest)\r\n    {\r\n        // Need some way to pass the code to the handler...\r\n        HttpContext.Items[\"GoogleAuthenticationCode\"] = loginRequest.Code;\r\n        \r\n        // Authenticate: do what OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync would do on the callback with the code\r\n        var authenticationResult = await HttpContext.AuthenticateAsync(GoogleDefaults.AuthenticationScheme);\r\n        if (!authenticationResult.Succeeded)\r\n            throw new InvalidOperationException(\"Google authentication failed: \" + authenticationResult.Failure?.Message, authenticationResult.Failure);\r\n        \r\n        // Principal from Google:\r\n        var externalPrincipal = authenticationResult.Principal;\r\n        \r\n        // Login or register the user, create local principal object\r\n        // var principal = ...\r\n        \r\n        // Sign in with BearerToken scheme (generate access and refresh tokens for the app)\r\n        return new SignInResult(BearerTokenDefaults.AuthenticationScheme, principal);\r\n    }\r\n}\r\n```\r\n\r\n### Alternative solution\r\n\r\nTo make the above code work, I tried the following. **However I am not sure if this is the best approach**. I do not like that I had to disable PKCE and duplicate some parts of the code from `OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync`.\r\n\r\nI derived a new handler from `GoogleHandler` and overrode one method. This allowed me to use it for both authenticating on the website and providing a login method for my mobile app.\r\n\r\n``` C#\r\npublic class NativeAppGoogleHandler : GoogleHandler\r\n{\r\n    public NativeAppGoogleHandler(IOptionsMonitor<GoogleOptions> options, ILoggerFactory logger, UrlEncoder encoder) : base(options, logger, encoder)\r\n    { }\r\n\r\n    protected override async Task<AuthenticateResult> HandleAuthenticateAsync()\r\n    {\r\n        // Override the method so that it works with native applications.\r\n        // You can call it from the controller using HttpContext.AuthenticateAsync().\r\n        // The implementation is based on the OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync method.\r\n        // The difference is that the \"state\" (and optional \"code_verifier\") is not provided by native applications, while in the base implementation it is required.\r\n\r\n        var code = Context.Items[\"GoogleAuthenticationCode\"] as string;\r\n        if (code != null)\r\n        {\r\n            var properties = new AuthenticationProperties();\r\n            var codeExchangeContext = new OAuthCodeExchangeContext(properties, code.ToString(), BuildRedirectUri(Options.CallbackPath));\r\n            using var tokens = await ExchangeCodeAsync(codeExchangeContext);\r\n\r\n            if (tokens.Error != null)\r\n            {\r\n                return HandleRequestResult.Fail(tokens.Error, properties);\r\n            }\r\n\r\n            if (string.IsNullOrEmpty(tokens.AccessToken))\r\n            {\r\n                return HandleRequestResult.Fail(\"Failed to retrieve access token.\", properties);\r\n            }\r\n\r\n            var identity = new ClaimsIdentity(ClaimsIssuer);\r\n            var ticket = await CreateTicketAsync(identity, properties, tokens);\r\n\r\n            if (ticket != null)\r\n            {\r\n                return HandleRequestResult.Success(ticket);\r\n            }\r\n            else\r\n            {\r\n                return HandleRequestResult.Fail(\"Failed to retrieve user information from remote server.\", properties);\r\n            }\r\n        }\r\n\r\n        return await base.HandleAuthenticateAsync();\r\n    }\r\n}\r\n```\r\n\r\nThen I registered it in `Program.cs`:\r\n\r\n``` C#\r\nbuilder.Services\r\n    .AddAuthentication(BearerTokenDefaults.AuthenticationScheme)\r\n    .AddBearerToken()\r\n    .AddOAuth<GoogleOptions, NativeAppGoogleHandler>(GoogleDefaults.AuthenticationScheme, GoogleDefaults.DisplayName, options =>\r\n    {\r\n        options.ClientId = \"...\";\r\n        options.ClientSecret = \"...\";\r\n        options.CallbackPath = \"...\";\r\n        options.UsePkce = false; // Disable PKCE because native apps do not provide \"code_virifier\" parameter\r\n    });\r\n```\r\n\r\nIt this a good enough approach, or are there better ones?\r\n\n\n### Additional context\n\n- [OAuth for Native Apps](https://www.oauth.com/oauth2-servers/oauth-native-apps/)\r\n- [RFC 8252: OAuth 2.0 for Native Apps](https://datatracker.ietf.org/doc/html/rfc8252)\r\n- [React Native Google Sign In](https://github.com/react-native-google-signin/google-signin)\r\n- [Exchange authorization code for refresh and access tokens](https://developers.google.com/identity/protocols/oauth2/web-server#exchange-authorization-code)\r\n\r\n[Native UI for Sign in with Google](https://developer.android.com/identity/sign-in/credential-manager-siwg):\r\n<img src=\"https://github.com/user-attachments/assets/3da2cd4c-d812-4ad4-b543-976cc8da7ca8\" width=\"200\">\r\n<img src=\"https://github.com/user-attachments/assets/90bb5f29-53e5-4438-a4d1-2c50d121560e\" width=\"200\">\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/57838","RelatedDescription":"Open issue \"Authentication: Support for OAuth 2.0 for Native Apps Flow in ASP.NET Core\" (#57838)"},{"Id":"2521830009","IsPullRequest":true,"CreatedAt":"2024-09-12T09:17:16","Actor":"marcominerva","Number":"57834","RawContent":null,"Title":"Fix parameter description in GetAuthenticatorKeyAsync","State":"open","Body":"# Fix `user` parameter description for IUserAuthenticatorKeyStore.GetAuthenticatorKeyAsync method\r\n\r\nCorrected the parameter description for the `user` parameter in the `GetAuthenticatorKeyAsync` method of the `IUserAuthenticatorKeyStore<TUser>` interface. The previous description incorrectly referred to the security stamp, while the new description accurately refers to the authenticator key.\r\n\r\nFixes #57832\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/57834","RelatedDescription":"Open PR \"Fix parameter description in GetAuthenticatorKeyAsync\" (#57834)"},{"Id":"2521826565","IsPullRequest":false,"CreatedAt":"2024-09-12T09:15:49","Actor":"MichaelRomer","Number":"57833","RawContent":null,"Title":"Use TimeProvider instead of DateTimeOffset in DataProtectionAPI","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nI am trying to integration test my application which uses the DataProtectionAPI to encrypt user session data. My tests should also cover some time-related aspects. Therefore I am using the [TimeProvider](https://learn.microsoft.com/en-us/dotnet/api/system.timeprovider?view=net-8.0) and [FakeTimeProvider](https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.time.testing.faketimeprovider?view=net-8.0) which where introduced with Dotnet8. Unfortunately, the DataProtectionAPI still uses the static DateTimeOffset instead of the new TimeProvider and therefore does not react to time changes in my tests.\r\n\r\n### Describe the solution you'd like\r\n\r\nReplace the DateTimeOffset class with the TimeProvider to determine the current time in the DataProtectionAPI implementation \r\n\r\n### Additional context\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57833","RelatedDescription":"Open issue \"Use TimeProvider instead of DateTimeOffset in DataProtectionAPI\" (#57833)"},{"Id":"2521781023","IsPullRequest":false,"CreatedAt":"2024-09-12T08:56:23","Actor":"marcominerva","Number":"57832","RawContent":null,"Title":"Incorrect XML documentation for IUserAuthenticatorKeyStore","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nThe XML documentation for [IUserAuthenticatorKeyStore.GetAuthenticatorKeyAsync](https://github.com/dotnet/aspnetcore/blob/main/src/Identity/Extensions.Core/src/IUserAuthenticatorKeyStore.cs) method contains the following XML documentation:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/5545cffff68ef9b92835615c1f6ee0441d374d84/src/Identity/Extensions.Core/src/IUserAuthenticatorKeyStore.cs#L24-L30\r\n\r\nThe documentation for the `user` parameter is wrong.\n\n### Expected Behavior\n\nThe documentation for the `user` parameter should be something like this:\r\n\r\n`/// <param name=\"user\">The user whose authenticator key must be get.</param>`\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0.400\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57832","RelatedDescription":"Open issue \"Incorrect XML documentation for IUserAuthenticatorKeyStore\" (#57832)"},{"Id":"2521767011","IsPullRequest":false,"CreatedAt":"2024-09-12T08:50:13","Actor":"Wraith2","Number":"57831","RawContent":null,"Title":"Allow removal or alteration of framework-added metric tags.","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI have a multi-tenant system where I am starting to record metrics. There are some important tags that I need to add to the framework provided `http.server.request.duration` such as user, tenant. I can do this via the `IHttpMetricsTagsFeature` which provides a Tags collection. \r\n\r\nWhat I can't do it prevent the addition of, or remove after their addition, of framework provided tags like `url.scheme` or `network.protocol.version` which have no value to me. These tags seem to be added very late in the lifecycle of the request so when  I have access to the `IHttpMetricsTagsFeature.Tags` through middleware the framework added tags are not present.\r\n\r\nIn the opentelemetry aspnet (not core) instrumentation there is a callback available which is called once tags have been added and the metric is about to be dispatched. This pattern is ideal. The opentelemetry aspnetcore instrumentation does not have this callback because the metric is now raised by the framework.\n\n### Describe the solution you'd like\n\nI would like to have a callback method that I can use to edit the tags on the framework-provided `http.server.request.duration` event allowing me to remove unwanted tags.\n\n### Additional context\n\nThe tags can be removed if you are using the otelcol-contrib collector to route data from your app to the destination. This costs resources that could be better spent. It would be better not to generate unwanted information to start with.","Url":"https://github.com/dotnet/aspnetcore/issues/57831","RelatedDescription":"Open issue \"Allow removal or alteration of framework-added metric tags.\" (#57831)"},{"Id":"2521559535","IsPullRequest":false,"CreatedAt":"2024-09-12T07:18:53","Actor":"pr-benchmarks[bot]","Number":"57829","RawContent":null,"Title":"Perf regression: mvc","State":"open","Body":"| Scenario | Environment | Date | Old RPS | New RPS | Change | Deviation | StDev | Dependencies |\n| -------- | ----------- | ---- | ------- | ------- | ------ | --------- | ----- | ------------ |\n| mvc  | Plaintext Mvc 2- Trends Intel Linux | 09/10/2024 21:50:38 | 2,722,333 | 2,661,780 | -2.22 % (-60,553)  :thumbsdown:  | -2.41 σ | 25,135.99 | <details>    <summary>Changes</summary>     <table><th>Name</th><th>Version</th><th>Diff</th></table></details> |\n\n[PowerBI Dashboard](https://aka.ms/aspnet/benchmarks)\n\n\n@sebastienros\n<!-- [MSGPACK][/MSGPACK] -->","Url":"https://github.com/dotnet/aspnetcore/issues/57829","RelatedDescription":"Open issue \"Perf regression: mvc\" (#57829)"},{"Id":"2521339194","IsPullRequest":false,"CreatedAt":"2024-09-12T04:52:39","Actor":"zuizuihao","Number":"57828","RawContent":null,"Title":"clean up global event listener, when connection closed","State":"open","Body":"I found the ROOT CAUSE, @javiercn can we clean up the global event listener, when connection closed?\r\nwhen Blazor connection closed, the [detachWebRendererInterop](https://github.com/dotnet/aspnetcore/blob/7e21f2e65a5dfaed143015cfbcf0139ce3cce8da/src/Components/Web.JS/src/Platform/Circuits/CircuitManager.ts#L160C45-L160C69) in the callback of connection.onclose will be invoked. here, it will invoke [interopMethodsByRenderer.delete(rendererId);](https://github.com/dotnet/aspnetcore/blob/7e21f2e65a5dfaed143015cfbcf0139ce3cce8da/src/Components/Web.JS/src/Rendering/WebRendererInteropMethods.ts#L48C1-L49C1), all the interopMethodsByRenderer will be cleaned. also There are lots of global event listener in form.js like window.addEventListener('focus'), window.addEventListener('keydown'). if user still interact with our app like focus, click, the global event will be triggered, then invoked [EventDelegator.onGlobalEvent](https://github.com/dotnet/aspnetcore/blob/7e21f2e65a5dfaed143015cfbcf0139ce3cce8da/src/Components/Web.JS/src/Rendering/Events/EventDelegator.ts#L134), invoked [EventDelegator.dispatchGlobalEventToAllElements](https://github.com/dotnet/aspnetcore/blob/7e21f2e65a5dfaed143015cfbcf0139ce3cce8da/src/Components/Web.JS/src/Rendering/Events/EventDelegator.ts#L153) invoked [WebRendererInteropMethods.dispatchEvent](https://github.com/dotnet/aspnetcore/blob/7e21f2e65a5dfaed143015cfbcf0139ce3cce8da/src/Components/Web.JS/src/Rendering/WebRendererInteropMethods.ts#L66C17-L66C30) invoked [WebRendererInteropMethods.getInteropMethods](https://github.com/dotnet/aspnetcore/blob/7e21f2e65a5dfaed143015cfbcf0139ce3cce8da/src/Components/Web.JS/src/Rendering/WebRendererInteropMethods.ts#L78C10-L78C27), here since the interopMethodsByRenderer is empty, will throw this exception.\r\n\r\n_Originally posted by @zuizuihao in https://github.com/dotnet/aspnetcore/issues/56813#issuecomment-2345157777_\r\n            ","Url":"https://github.com/dotnet/aspnetcore/issues/57828","RelatedDescription":"Open issue \"clean up global event listener, when connection closed\" (#57828)"},{"Id":"2521076023","IsPullRequest":true,"CreatedAt":"2024-09-12T03:19:11","Actor":"github-actions[bot]","Number":"57827","RawContent":null,"Title":"[automated] Merge branch 'release/9.0' => 'main'","State":"closed","Body":"I detected changes in the release/9.0 branch which have not been merged yet to main. I'm a robot and am configured to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/9.0 by the following committers:\n\n* wtgodbe\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/9.0\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/9.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/9.0-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/9.0-to-main main\r\ngit pull https://github.com/dotnet/aspnetcore merge/release/9.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/9.0-to-main main\r\ngit pull git@github.com:dotnet/aspnetcore merge/release/9.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet/aspnetcore HEAD:merge/release/9.0-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering (dotnet/dnceng) if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/main/.github/workflows/scripts/inter-branch-merge.ps1.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/57827","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/9.0' => 'main'\" (#57827)"},{"Id":"2520993531","IsPullRequest":true,"CreatedAt":"2024-09-11T23:30:23","Actor":"MackinnonBuck","Number":"57825","RawContent":null,"Title":"Provide `Microsoft.AspNetCore.DataProtection.StackExchangeRedis` package README","State":"open","Body":"Contributes to #48392","Url":"https://github.com/dotnet/aspnetcore/pull/57825","RelatedDescription":"Open PR \"Provide `Microsoft.AspNetCore.DataProtection.StackExchangeRedis` package README\" (#57825)"},{"Id":"2520917119","IsPullRequest":false,"CreatedAt":"2024-09-11T22:49:06","Actor":"Reitor-diplomas","Number":"57822","RawContent":null,"Title":"➡️ Comprar Diploma Superior ✅","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\nComo Comprar Diploma Superior?\r\nCHAME AGORA MESMO, entre no site e chame no WhatsApp.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\n\r\nWhatsApp (62) 99809-1142\r\n\r\nComprar Diploma Superior\r\nVocê pode Comprar Diploma superiores reconhecidos pelo MEC e publicados no Diário Oficial. Os diplomas são elaborados e aprovados no secretariado institucional, depois assinados pelos respectivos reitores e enviados aos clientes por correio após a devida publicação\r\nPara garantir que o grau superior seja de fato reconhecido pelo MEC, você pode verificar sua autenticidade consultando no site do MEC ao final do programa, esta é a regra do responsável pelo sigilo absoluto, não havendo problemas com ambas as partes mais tarde. Você pode usá-lo para obter registro em conselhos profissionais regionais, demonstrar seus estudos em competições abertas ou até mesmo continuar seus estudos.\r\n\r\nNosso diploma é totalmente original e pode ser validado no diário oficial e autenticado no MEC, tudo isso graças às instituições de ensino parceiras de nossa empresa para mais detalhes, fale com um atendente para tirar suas dúvidas.\r\n\r\nNão trabalhamos com falsificações.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nWhatsApp (62) 99809-1142\r\n\r\nComprar Diploma Original com segurança\r\nPara quem não tem tempo para estudar ou não concluiu os estudos, podemos obter de forma rápida e fácil o seu certificado de origem através de nós.\r\nAtuamos nesta área há mais de 8 anos e todos os nossos documentos são reconhecidos pelos órgãos competentes das autoridades, como MEC, Diário Oficial da União, GDAE, etc…\r\nEmitimos no Brasil e no exterior, retroativamente se houver preferência.\r\nAprenda como comprar diplomas avançados, comprar diplomas técnicos, comprar diplomas juniores e intermediários.\r\nConsulte nossa FAQ para esclarecer sua dúvida ou entre em contato conosco.\r\ncomprar diplomas para vender diplomas comprar diplomas avançados comprar diplomas técnicos comprar diplomas do ensino médio comprar diplomas online como comprar diplomas comprar certificados avançados\r\nTendo esse registro, poderemos por qualquer instituição emitir o seu diploma com garantia e confiabilidade.\r\n\r\nVocê poderá consultar a validade do diploma pelo site do MEC!\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nComo Funciona a Compra do Ensino Superior?\r\nApós verificar parte de informações pelo nosso site. Preencha o Formulário de Interesse na obtenção do respectivo diploma. Após, deverá aguardar em seu e-mail uma mensagem da nossa Equipe com todas as informações ( Prazos de Entrega, Valores, Instituições e Outros ). \r\nEstes documentos são legais, ou seja registrados no MEC e publicados no Diário Oficial ?\r\nSim! São diplomas emitidos por algumas instituições (Públicas ou Particulares) da sua região.\r\nCom a respectiva certificação e licença pela Secretaria Estadual de Educação, sendo assim, licenciada pelo MEC para funcionamento.\r\nConsequentemente, o diploma e qualquer documento emitido pela mesma será legal, sem nenhum risco!\r\n\r\nVocê poderá consultar a validade do diploma pelo site do MEC!\r\n\r\nNa mesma mensagem, consta um Link, quando clicado aparecerá na tela um Formulário que deverá ser preenchido com todos os seus dados.\r\n Tendo preenchido o Formulário disponível na mensagem enviada por e-mail, receberá um contato pelo Telefone Fixo cadastrado onde o Pedido será Confirmado e o Boleto Bancário enviado ao seu e-mail.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nQue Garantia tenho de que prestarão os serviços descritos no site?\r\nTrabalhamos a tempos no ramo somente com documentação original reconhecida.\r\nNunca deixamos de entregar um documento sequer, entendemos a sua preocupação, pois alguns clientes que já adquiriram conosco também tiveram uma certa “desconfiança”, mas no final receberam seus documentos e ficaram satisfeitos com nossos serviços!\r\nNão trabalhamos com falsificações.\r\nTemos que estabelecer e seguir etapas para a emissão do respectivo diploma, na área desejada e com segurança.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nO que as pessoas pesquisam na internet?\r\nComprar diploma, comprar diploma ensino medio, comprar diploma superior, como comprar diploma, comprar diploma ensino medio reconhecido pelo mec, comprar diploma whatsapp, compra de diploma, comprar diploma de pedagogia, comprar diploma universitário reconhecido pelo mec, comprar um diploma, comprar diploma unip, diploma reconhecido pelo mec.\r\n[mecgov.digital](mecgov.digital)\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\n\r\n-\r\n\r\n\r\nDiploma Comprar\r\nDiploma Ensino Médio Comprar\r\nDiploma Superior Comprar\r\nDiplomas Comprar\r\nDiploma Ensino Medio Comprar\r\nComprar O Diploma\r\nComprardiploma\r\nDiploma Onde Comprar\r\nComprar Certificado De Conclusão Do Ensino Médio\r\nComprar Certificado Ensino Medio\r\nDiploma De Graduação Comprar\r\nComprar Certificado Do Ensino Médio\r\nComprar Histórico Escolar Reconhecido Pelo Mec\r\nCompra De Diplomas Nivel Superior\r\nDiploma De Pedagogia Comprar\r\nDiploma De Pós Graduação Comprar\r\nCertificado Do Ensino Medio Comprar\r\nComprar Certificado Ensino Médio\r\nDiploma De Faculdade Comprar\r\nCertificado Ensino Médio Comprar\r\nCertificado De Conclusão Do Ensino Médio Comprar\r\nDiploma Reconhecido Pelo Mec Comprar\r\nDiploma Pedagogia Comprar\r\nComprar O Certificado Do Ensino Médio\r\nDiploma Ensino Superior Comprar\r\nDiploma De Pós Graduação Para Comprar\r\nComprar Um Certificado Do Ensino Medio\r\nDiploma Faculdade Comprar\r\nCertificado Ensino Medio Comprar\r\nCompra De Diplomas Superior\r\nComprar Certificado Faculdade\r\nComprar Certificado Ensino Médio Reconhecido Pelo Mec\r\nComprar Certificado De Graduação\r\nComprar Certificado Ensino Superior\r\nCompre Seu Diploma\r\nDiploma Comprado Reconhecido Pelo Mec\r\nComprar Certificado Superior\r\nComprar Certificado De Faculdade\r\nVenda Diploma Superior\r\nComprar Certificado De Ensino Medio\r\nComprei Diploma Pela Internet\r\nDiploma De Mestrado Comprar\r\nCompra De Certificado Ensino Medio\r\nComprar Certificado De Conclusão Do Ensino Superior\r\nPreciso De Um Diploma Superior Urgente\r\nDiploma Mestrado Comprar\r\nComprar Certificado De Pedagogia\r\nDiploma Escolar Ensino Medio Comprar\r\nDiploma 2 Grau Comprar\r\nCertificado 2 Grau Comprar\r\nQuero Comprar Meu Diploma Ensino Medio\r\nDiploma Graduação Comprar\r\nDiploma Do Ensino Médio Comprar\r\nComprar Certificado De Conclusão Do Ensino Médio Reconhecido Pelo Mec\r\nDiploma Tecnologo Comprar\r\nCertificado De Ensino Superior Comprar\r\nDiploma Para Comprar\r\nComprar Conclusão Do Ensino Médio\r\nCertificado De 2 Grau Comprar\r\nDiploma Segundo Grau Comprar\r\nComprar Certificado De Ensino Superior\r\nDiploma Escolar Comprar\r\nVenda Diploma\r\nComprar Certificado Mestrado\r\nCompre Seu Diploma De Curso Superior\r\nCertificado Ensino Medio Comprado\r\nDiploma Curso Tecnico Comprar\r\nComprar Histórico Escolar Ensino Médio\r\nDiploma De Magisterio Comprar\r\nComprar Historico Escolar Ensino Medio Completo\r\nCompre Seu Diploma Do Ensino Medio\r\nVenda Diploma Ensino Medio\r\nDiploma Superior Quente\r\nVendas De Diplomas\r\nComprar Certificado Escolaridade Ensino Medio\r\nComprar Certificado Ensino Fundamental\r\nAdquirir Diploma\r\nCertificado De Ensino Medio Comprar\r\nCertificado De Ensino Médio Comprar\r\nCertificado Ensino Fundamental Comprar\r\nCertificado Segundo Grau Comprar\r\nCertificado Superior Comprar\r\nCompra De Certificado De Conclusão Do Ensino Médio\r\nCompra De Certificado De Ensino Medio\r\nCompra De Certificado Do Ensino Medio\r\nCompra De Certificado Superior\r\nCompra De Diplomas Universitarios\r\nComprar Certificado 2 Grau Completo\r\nComprar Certificado De Conclusão De Curso Superior\r\nComprar Certificado De Curso Superior\r\nComprar Certificado De Ensino Medio Reconhecido Pelo Mec\r\nComprar Certificado De Ensino Médio\r\nComprar Certificado De Segundo Grau\r\nComprar Certificado Do Ensino Fundamental\r\nComprar Certificado Do Ensino Medio Reconhecido Pelo Mec\r\nComprar Certificado Ensino Medio Completo\r\nComprar Certificado Ensino Médio Mercado Livre\r\nComprar Certificado Falso\r\nComprar Certificado Segundo Grau\r\nComprar Historico Escolar 2 Grau\r\nComprar Historico Escolar Ensino Medio\r\nComprar Histórico Escolar Ensino Médio Reconhecido Pelo Mec\r\nComprar Supletivo\r\nComprar Supletivo Ensino Medio\r\nCompre Seu Diploma Superior\r\nComprei Meu Diploma\r\nComprei Meu Diploma Do Ensino Medio\r\nComprei Um Diploma\r\nComprou Diploma\r\nDiploma Comprado Ensino Medio\r\nDiploma Comprar Superior\r\nDiploma Curso Superior Comprar\r\nDiploma De Ensino Superior Como Comprar\r\nDiploma De Mestrado Para Comprar\r\nDiploma De Segundo Grau Comprar\r\nDiploma Ensino Fundamental Comprar\r\nDiploma Ensino Medio Barato\r\nDiploma Ensino Medio Completo Comprar\r\nDiploma Ensino Médio Barato\r\nDiploma Pós Graduação Comprar\r\nPreço Diploma Ensino Medio\r\nQuero Comprar Meu Certificado Do Ensino Medio\r\nQuero Comprar Um Certificado Do Ensino Medio\r\nSites Vendem Diploma De Curso Superior\r\nValor Diploma Ensino Medio\r\nVenda Certificado Ensino Medio\r\nVenda Diploma Ensino Superior\r\nEnsino Medio Comprar Certificado\r\nDiploma 12o Ano Comprar\r\nDiploma Reconhecido Pelo Mec\r\nDiploma Ensino Médio Reconhecido Pelo Mec\r\nComprar Histórico Escolar Reconhecido Pelo Mec\r\nDiploma De Curso Técnico Reconhecido Pelo Mec\r\nDiploma Do Ensino Médio Reconhecido Pelo Mec\r\nMec Diploma\r\nDiplomas Falsos Reconhecidos Pelo Mec\r\nRegistro De Diploma No Mec\r\nDiploma Reconhecido Pelo Mec Comprar\r\nDiploma Registrado No Mec\r\nDiploma Unopar Reconhecido Pelo Mec\r\nCurso Autorizado Pelo Mec Pode Emitir Diploma\r\nDiplomas Mec\r\nDiplomas Registrados No Mec\r\nRegistro Diploma Mec\r\nRegistro Do Mec Diploma\r\nRegistro Mec Diploma\r\nCompra De Diplomas Nivel Superior\r\nDiploma Ensino Superior Comprar\r\nCompra De Diplomas Superior\r\nComprar Certificado Ensino Superior\r\nComprar Certificado De Conclusão Do Ensino Superior\r\nCertificado De Ensino Superior Comprar\r\nComprar Certificado De Ensino Superior\r\nCompre Seu Diploma De Curso Superior\r\nComprar Certificado De Curso Superior\r\nDiploma Curso Superior Comprar\r\nDiploma De Ensino Superior Como Comprar\r\nVenda Diploma Ensino Superior\r\nDiploma Superior\r\nDiplomas Superior Compra\r\nDiploma Ensino Superior\r\nDiploma De Curso Superior\r\nDiploma De Ensino Superior\r\nDiploma Nivel Superior\r\nCertificado De Conclusão De Curso Superior\r\nDiploma De Nivel Superior\r\nCertificado De Conclusão Do Ensino Superior\r\nDiploma De Nível Superior\r\nCertificado De Conclusão De Ensino Superior\r\nDiploma Do Ensino Superior\r\nDiploma Nível Superior\r\nDiplomas De Curso Superior\r\nDiploma Curso Superior\r\nCertificado Ensino Superior\r\nCertificado De Ensino Superior\r\nDiploma Nivel Superior Rapido\r\nDiploma Superior Reconhecido Pelo Mec\r\nDiploma Ensino Superior Rapido\r\nCertificado Curso Superior\r\nSuperior Diplomas\r\nDiploma Ensino Superior Reconhecido Pelo Mec\r\nConseguir Diploma Nivel Superior\r\nCertificado De Conclusão Ensino Superior\r\nDiploma De Ensino Superior Reconhecido Pelo Mec\r\nCertificado Conclusao Ensino Superior\r\nCertificado De Conclusão Curso Superior\r\nCertificado De Conclusão De Curso Superior Mec\r\nCertificado De Conclusão De Curso Superior Unip\r\nCertificado De Conclusão Do Curso Superior\r\nCertificado De Ensino Superior Falso\r\nCertificado Digital Ensino Superior\r\nCertificado Diploma De Conclusão De Ensino Superior Ou Equivalente\r\nConclusão De Curso Superior\r\nConclusão De Curso Superior Em Nível De Graduação\r\nConsulta De Diploma Ensino Superior\r\nConsulta Diploma Ensino Superior\r\nConsulta Diploma Mec Ensino Superior\r\nDiploma De Conclusão De Curso Superior\r\nDiploma De Curso Superior Reconhecido Pelo Mec\r\nDiploma Digital Ensino Superior\r\nDiploma Ensino Superior Mec\r\nDiploma Graduação Mec\r\nDiploma Mec Ensino Superior\r\nDiploma Nivel Superior Reconhecido Pelo Mec\r\nDiploma Ou Certificado De Conclusão De Curso Superior\r\nDiploma Superior Digital\r\nDiploma Superior Mec\r\nDiploma Superior Nacional\r\n\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57822","RelatedDescription":"Closed issue \"➡️ Comprar Diploma Superior ✅\" (#57822)"},{"Id":"2520910234","IsPullRequest":false,"CreatedAt":"2024-09-11T22:42:11","Actor":"Reitor-diplomas","Number":"57820","RawContent":null,"Title":"👉 Comprar Diploma - Compra Superior Reconhecido MEC","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\nComo Comprar Diploma Superior?\r\nCHAME AGORA MESMO, entre no site e chame no WhatsApp.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nWhatsApp (62) 99809-1142\r\nComprar Diploma Superior\r\nVocê pode Comprar Diploma superiores reconhecidos pelo MEC e publicados no Diário Oficial. Os diplomas são elaborados e aprovados no secretariado institucional, depois assinados pelos respectivos reitores e enviados aos clientes por correio após a devida publicação\r\nPara garantir que o grau superior seja de fato reconhecido pelo MEC, você pode verificar sua autenticidade consultando no site do MEC ao final do programa, esta é a regra do responsável pelo sigilo absoluto, não havendo problemas com ambas as partes mais tarde. Você pode usá-lo para obter registro em conselhos profissionais regionais, demonstrar seus estudos em competições abertas ou até mesmo continuar seus estudos.\r\n\r\nNosso diploma é totalmente original e pode ser validado no diário oficial e autenticado no MEC, tudo isso graças às instituições de ensino parceiras de nossa empresa para mais detalhes, fale com um atendente para tirar suas dúvidas.\r\n\r\nNão trabalhamos com falsificações.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nWhatsApp (62) 99809-1142\r\n\r\nComprar Diploma Original com segurança\r\nPara quem não tem tempo para estudar ou não concluiu os estudos, podemos obter de forma rápida e fácil o seu certificado de origem através de nós.\r\nAtuamos nesta área há mais de 8 anos e todos os nossos documentos são reconhecidos pelos órgãos competentes das autoridades, como MEC, Diário Oficial da União, GDAE, etc…\r\nEmitimos no Brasil e no exterior, retroativamente se houver preferência.\r\nAprenda como comprar diplomas avançados, comprar diplomas técnicos, comprar diplomas juniores e intermediários.\r\nConsulte nossa FAQ para esclarecer sua dúvida ou entre em contato conosco.\r\ncomprar diplomas para vender diplomas comprar diplomas avançados comprar diplomas técnicos comprar diplomas do ensino médio comprar diplomas online como comprar diplomas comprar certificados avançados\r\nTendo esse registro, poderemos por qualquer instituição emitir o seu diploma com garantia e confiabilidade.\r\n\r\nVocê poderá consultar a validade do diploma pelo site do MEC!\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nComo Funciona a Compra do Ensino Superior?\r\nApós verificar parte de informações pelo nosso site. Preencha o Formulário de Interesse na obtenção do respectivo diploma. Após, deverá aguardar em seu e-mail uma mensagem da nossa Equipe com todas as informações ( Prazos de Entrega, Valores, Instituições e Outros ). \r\nEstes documentos são legais, ou seja registrados no MEC e publicados no Diário Oficial ?\r\nSim! São diplomas emitidos por algumas instituições (Públicas ou Particulares) da sua região.\r\nCom a respectiva certificação e licença pela Secretaria Estadual de Educação, sendo assim, licenciada pelo MEC para funcionamento.\r\nConsequentemente, o diploma e qualquer documento emitido pela mesma será legal, sem nenhum risco!\r\n\r\nVocê poderá consultar a validade do diploma pelo site do MEC!\r\n\r\nNa mesma mensagem, consta um Link, quando clicado aparecerá na tela um Formulário que deverá ser preenchido com todos os seus dados.\r\n Tendo preenchido o Formulário disponível na mensagem enviada por e-mail, receberá um contato pelo Telefone Fixo cadastrado onde o Pedido será Confirmado e o Boleto Bancário enviado ao seu e-mail.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nQue Garantia tenho de que prestarão os serviços descritos no site?\r\nTrabalhamos a tempos no ramo somente com documentação original reconhecida.\r\nNunca deixamos de entregar um documento sequer, entendemos a sua preocupação, pois alguns clientes que já adquiriram conosco também tiveram uma certa “desconfiança”, mas no final receberam seus documentos e ficaram satisfeitos com nossos serviços!\r\nNão trabalhamos com falsificações.\r\nTemos que estabelecer e seguir etapas para a emissão do respectivo diploma, na área desejada e com segurança.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nO que as pessoas pesquisam na internet?\r\nComprar diploma, comprar diploma ensino medio, comprar diploma superior, como comprar diploma, comprar diploma ensino medio reconhecido pelo mec, comprar diploma whatsapp, compra de diploma, comprar diploma de pedagogia, comprar diploma universitário reconhecido pelo mec, comprar um diploma, comprar diploma unip, diploma reconhecido pelo mec.\r\n\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\n\r\n-\r\n\r\n\r\nDiploma Comprar\r\nDiploma Ensino Médio Comprar\r\nDiploma Superior Comprar\r\nDiplomas Comprar\r\nDiploma Ensino Medio Comprar\r\nComprar O Diploma\r\nComprardiploma\r\nDiploma Onde Comprar\r\nComprar Certificado De Conclusão Do Ensino Médio\r\nComprar Certificado Ensino Medio\r\nDiploma De Graduação Comprar\r\nComprar Certificado Do Ensino Médio\r\nComprar Histórico Escolar Reconhecido Pelo Mec\r\nCompra De Diplomas Nivel Superior\r\nDiploma De Pedagogia Comprar\r\nDiploma De Pós Graduação Comprar\r\nCertificado Do Ensino Medio Comprar\r\nComprar Certificado Ensino Médio\r\nDiploma De Faculdade Comprar\r\nCertificado Ensino Médio Comprar\r\nCertificado De Conclusão Do Ensino Médio Comprar\r\nDiploma Reconhecido Pelo Mec Comprar\r\nDiploma Pedagogia Comprar\r\nComprar O Certificado Do Ensino Médio\r\nDiploma Ensino Superior Comprar\r\nDiploma De Pós Graduação Para Comprar\r\nComprar Um Certificado Do Ensino Medio\r\nDiploma Faculdade Comprar\r\nCertificado Ensino Medio Comprar\r\nCompra De Diplomas Superior\r\nComprar Certificado Faculdade\r\nComprar Certificado Ensino Médio Reconhecido Pelo Mec\r\nComprar Certificado De Graduação\r\nComprar Certificado Ensino Superior\r\nCompre Seu Diploma\r\nDiploma Comprado Reconhecido Pelo Mec\r\nComprar Certificado Superior\r\nComprar Certificado De Faculdade\r\nVenda Diploma Superior\r\nComprar Certificado De Ensino Medio\r\nComprei Diploma Pela Internet\r\nDiploma De Mestrado Comprar\r\nCompra De Certificado Ensino Medio\r\nComprar Certificado De Conclusão Do Ensino Superior\r\nPreciso De Um Diploma Superior Urgente\r\nDiploma Mestrado Comprar\r\nComprar Certificado De Pedagogia\r\nDiploma Escolar Ensino Medio Comprar\r\nDiploma 2 Grau Comprar\r\nCertificado 2 Grau Comprar\r\nQuero Comprar Meu Diploma Ensino Medio\r\nDiploma Graduação Comprar\r\nDiploma Do Ensino Médio Comprar\r\nComprar Certificado De Conclusão Do Ensino Médio Reconhecido Pelo Mec\r\nDiploma Tecnologo Comprar\r\nCertificado De Ensino Superior Comprar\r\nDiploma Para Comprar\r\nComprar Conclusão Do Ensino Médio\r\nCertificado De 2 Grau Comprar\r\nDiploma Segundo Grau Comprar\r\nComprar Certificado De Ensino Superior\r\nDiploma Escolar Comprar\r\nVenda Diploma\r\nComprar Certificado Mestrado\r\nCompre Seu Diploma De Curso Superior\r\nCertificado Ensino Medio Comprado\r\nDiploma Curso Tecnico Comprar\r\nComprar Histórico Escolar Ensino Médio\r\nDiploma De Magisterio Comprar\r\nComprar Historico Escolar Ensino Medio Completo\r\nCompre Seu Diploma Do Ensino Medio\r\nVenda Diploma Ensino Medio\r\nDiploma Superior Quente\r\nVendas De Diplomas\r\nComprar Certificado Escolaridade Ensino Medio\r\nComprar Certificado Ensino Fundamental\r\nAdquirir Diploma\r\nCertificado De Ensino Medio Comprar\r\nCertificado De Ensino Médio Comprar\r\nCertificado Ensino Fundamental Comprar\r\nCertificado Segundo Grau Comprar\r\nCertificado Superior Comprar\r\nCompra De Certificado De Conclusão Do Ensino Médio\r\nCompra De Certificado De Ensino Medio\r\nCompra De Certificado Do Ensino Medio\r\nCompra De Certificado Superior\r\nCompra De Diplomas Universitarios\r\nComprar Certificado 2 Grau Completo\r\nComprar Certificado De Conclusão De Curso Superior\r\nComprar Certificado De Curso Superior\r\nComprar Certificado De Ensino Medio Reconhecido Pelo Mec\r\nComprar Certificado De Ensino Médio\r\nComprar Certificado De Segundo Grau\r\nComprar Certificado Do Ensino Fundamental\r\nComprar Certificado Do Ensino Medio Reconhecido Pelo Mec\r\nComprar Certificado Ensino Medio Completo\r\nComprar Certificado Ensino Médio Mercado Livre\r\nComprar Certificado Falso\r\nComprar Certificado Segundo Grau\r\nComprar Historico Escolar 2 Grau\r\nComprar Historico Escolar Ensino Medio\r\nComprar Histórico Escolar Ensino Médio Reconhecido Pelo Mec\r\nComprar Supletivo\r\nComprar Supletivo Ensino Medio\r\nCompre Seu Diploma Superior\r\nComprei Meu Diploma\r\nComprei Meu Diploma Do Ensino Medio\r\nComprei Um Diploma\r\nComprou Diploma\r\nDiploma Comprado Ensino Medio\r\nDiploma Comprar Superior\r\nDiploma Curso Superior Comprar\r\nDiploma De Ensino Superior Como Comprar\r\nDiploma De Mestrado Para Comprar\r\nDiploma De Segundo Grau Comprar\r\nDiploma Ensino Fundamental Comprar\r\nDiploma Ensino Medio Barato\r\nDiploma Ensino Medio Completo Comprar\r\nDiploma Ensino Médio Barato\r\nDiploma Pós Graduação Comprar\r\nPreço Diploma Ensino Medio\r\nQuero Comprar Meu Certificado Do Ensino Medio\r\nQuero Comprar Um Certificado Do Ensino Medio\r\nSites Vendem Diploma De Curso Superior\r\nValor Diploma Ensino Medio\r\nVenda Certificado Ensino Medio\r\nVenda Diploma Ensino Superior\r\nEnsino Medio Comprar Certificado\r\nDiploma 12o Ano Comprar\r\nDiploma Reconhecido Pelo Mec\r\nDiploma Ensino Médio Reconhecido Pelo Mec\r\nComprar Histórico Escolar Reconhecido Pelo Mec\r\nDiploma De Curso Técnico Reconhecido Pelo Mec\r\nDiploma Do Ensino Médio Reconhecido Pelo Mec\r\nMec Diploma\r\nDiplomas Falsos Reconhecidos Pelo Mec\r\nRegistro De Diploma No Mec\r\nDiploma Reconhecido Pelo Mec Comprar\r\nDiploma Registrado No Mec\r\nDiploma Unopar Reconhecido Pelo Mec\r\nCurso Autorizado Pelo Mec Pode Emitir Diploma\r\nDiplomas Mec\r\nDiplomas Registrados No Mec\r\nRegistro Diploma Mec\r\nRegistro Do Mec Diploma\r\nRegistro Mec Diploma\r\nCompra De Diplomas Nivel Superior\r\nDiploma Ensino Superior Comprar\r\nCompra De Diplomas Superior\r\nComprar Certificado Ensino Superior\r\nComprar Certificado De Conclusão Do Ensino Superior\r\nCertificado De Ensino Superior Comprar\r\nComprar Certificado De Ensino Superior\r\nCompre Seu Diploma De Curso Superior\r\nComprar Certificado De Curso Superior\r\nDiploma Curso Superior Comprar\r\nDiploma De Ensino Superior Como Comprar\r\nVenda Diploma Ensino Superior\r\nDiploma Superior\r\nDiplomas Superior Compra\r\nDiploma Ensino Superior\r\nDiploma De Curso Superior\r\nDiploma De Ensino Superior\r\nDiploma Nivel Superior\r\nCertificado De Conclusão De Curso Superior\r\nDiploma De Nivel Superior\r\nCertificado De Conclusão Do Ensino Superior\r\nDiploma De Nível Superior\r\nCertificado De Conclusão De Ensino Superior\r\nDiploma Do Ensino Superior\r\nDiploma Nível Superior\r\nDiplomas De Curso Superior\r\nDiploma Curso Superior\r\nCertificado Ensino Superior\r\nCertificado De Ensino Superior\r\nDiploma Nivel Superior Rapido\r\nDiploma Superior Reconhecido Pelo Mec\r\nDiploma Ensino Superior Rapido\r\nCertificado Curso Superior\r\nSuperior Diplomas\r\nDiploma Ensino Superior Reconhecido Pelo Mec\r\nConseguir Diploma Nivel Superior\r\nCertificado De Conclusão Ensino Superior\r\nDiploma De Ensino Superior Reconhecido Pelo Mec\r\nCertificado Conclusao Ensino Superior\r\nCertificado De Conclusão Curso Superior\r\nCertificado De Conclusão De Curso Superior Mec\r\nCertificado De Conclusão De Curso Superior Unip\r\nCertificado De Conclusão Do Curso Superior\r\nCertificado De Ensino Superior Falso\r\nCertificado Digital Ensino Superior\r\nCertificado Diploma De Conclusão De Ensino Superior Ou Equivalente\r\nConclusão De Curso Superior\r\nConclusão De Curso Superior Em Nível De Graduação\r\nConsulta De Diploma Ensino Superior\r\nConsulta Diploma Ensino Superior\r\nConsulta Diploma Mec Ensino Superior\r\nDiploma De Conclusão De Curso Superior\r\nDiploma De Curso Superior Reconhecido Pelo Mec\r\nDiploma Digital Ensino Superior\r\nDiploma Ensino Superior Mec\r\nDiploma Graduação Mec\r\nDiploma Mec Ensino Superior\r\nDiploma Nivel Superior Reconhecido Pelo Mec\r\nDiploma Ou Certificado De Conclusão De Curso Superior\r\nDiploma Superior Digital\r\nDiploma Superior Mec\r\nDiploma Superior Nacional\r\n\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57820","RelatedDescription":"Closed issue \"👉 Comprar Diploma - Compra Superior Reconhecido MEC\" (#57820)"},{"Id":"2520911422","IsPullRequest":false,"CreatedAt":"2024-09-11T22:40:40","Actor":"Reitor-diplomas","Number":"57821","RawContent":null,"Title":"👉 Comprar Diploma Superior e Ensino Médio","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\n_No response_\n\n### Describe the solution you'd like\n\nComo Comprar Diploma Superior?\r\nCHAME AGORA MESMO, entre no site e chame no WhatsApp.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nWhatsApp (62) 99809-1142\r\nComprar Diploma Superior\r\nVocê pode Comprar Diploma superiores reconhecidos pelo MEC e publicados no Diário Oficial. Os diplomas são elaborados e aprovados no secretariado institucional, depois assinados pelos respectivos reitores e enviados aos clientes por correio após a devida publicação\r\nPara garantir que o grau superior seja de fato reconhecido pelo MEC, você pode verificar sua autenticidade consultando no site do MEC ao final do programa, esta é a regra do responsável pelo sigilo absoluto, não havendo problemas com ambas as partes mais tarde. Você pode usá-lo para obter registro em conselhos profissionais regionais, demonstrar seus estudos em competições abertas ou até mesmo continuar seus estudos.\r\n\r\nNosso diploma é totalmente original e pode ser validado no diário oficial e autenticado no MEC, tudo isso graças às instituições de ensino parceiras de nossa empresa para mais detalhes, fale com um atendente para tirar suas dúvidas.\r\n\r\nNão trabalhamos com falsificações.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nWhatsApp (62) 99809-1142\r\n\r\nComprar Diploma Original com segurança\r\nPara quem não tem tempo para estudar ou não concluiu os estudos, podemos obter de forma rápida e fácil o seu certificado de origem através de nós.\r\nAtuamos nesta área há mais de 8 anos e todos os nossos documentos são reconhecidos pelos órgãos competentes das autoridades, como MEC, Diário Oficial da União, GDAE, etc…\r\nEmitimos no Brasil e no exterior, retroativamente se houver preferência.\r\nAprenda como comprar diplomas avançados, comprar diplomas técnicos, comprar diplomas juniores e intermediários.\r\nConsulte nossa FAQ para esclarecer sua dúvida ou entre em contato conosco.\r\ncomprar diplomas para vender diplomas comprar diplomas avançados comprar diplomas técnicos comprar diplomas do ensino médio comprar diplomas online como comprar diplomas comprar certificados avançados\r\nTendo esse registro, poderemos por qualquer instituição emitir o seu diploma com garantia e confiabilidade.\r\n\r\nVocê poderá consultar a validade do diploma pelo site do MEC!\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nComo Funciona a Compra do Ensino Superior?\r\nApós verificar parte de informações pelo nosso site. Preencha o Formulário de Interesse na obtenção do respectivo diploma. Após, deverá aguardar em seu e-mail uma mensagem da nossa Equipe com todas as informações ( Prazos de Entrega, Valores, Instituições e Outros ). \r\nEstes documentos são legais, ou seja registrados no MEC e publicados no Diário Oficial ?\r\nSim! São diplomas emitidos por algumas instituições (Públicas ou Particulares) da sua região.\r\nCom a respectiva certificação e licença pela Secretaria Estadual de Educação, sendo assim, licenciada pelo MEC para funcionamento.\r\nConsequentemente, o diploma e qualquer documento emitido pela mesma será legal, sem nenhum risco!\r\n\r\nVocê poderá consultar a validade do diploma pelo site do MEC!\r\n\r\nNa mesma mensagem, consta um Link, quando clicado aparecerá na tela um Formulário que deverá ser preenchido com todos os seus dados.\r\n Tendo preenchido o Formulário disponível na mensagem enviada por e-mail, receberá um contato pelo Telefone Fixo cadastrado onde o Pedido será Confirmado e o Boleto Bancário enviado ao seu e-mail.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nQue Garantia tenho de que prestarão os serviços descritos no site?\r\nTrabalhamos a tempos no ramo somente com documentação original reconhecida.\r\nNunca deixamos de entregar um documento sequer, entendemos a sua preocupação, pois alguns clientes que já adquiriram conosco também tiveram uma certa “desconfiança”, mas no final receberam seus documentos e ficaram satisfeitos com nossos serviços!\r\nNão trabalhamos com falsificações.\r\nTemos que estabelecer e seguir etapas para a emissão do respectivo diploma, na área desejada e com segurança.\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\nO que as pessoas pesquisam na internet?\r\nComprar diploma, comprar diploma ensino medio, comprar diploma superior, como comprar diploma, comprar diploma ensino medio reconhecido pelo mec, comprar diploma whatsapp, compra de diploma, comprar diploma de pedagogia, comprar diploma universitário reconhecido pelo mec, comprar um diploma, comprar diploma unip, diploma reconhecido pelo mec.\r\n[mecgov.digital](mecgov.digital)\r\n\r\n→ → Site Oficial: https://nacionalwebdiplomas.site ← ←\r\n\r\n-\r\n\r\n\r\nDiploma Comprar\r\nDiploma Ensino Médio Comprar\r\nDiploma Superior Comprar\r\nDiplomas Comprar\r\nDiploma Ensino Medio Comprar\r\nComprar O Diploma\r\nComprardiploma\r\nDiploma Onde Comprar\r\nComprar Certificado De Conclusão Do Ensino Médio\r\nComprar Certificado Ensino Medio\r\nDiploma De Graduação Comprar\r\nComprar Certificado Do Ensino Médio\r\nComprar Histórico Escolar Reconhecido Pelo Mec\r\nCompra De Diplomas Nivel Superior\r\nDiploma De Pedagogia Comprar\r\nDiploma De Pós Graduação Comprar\r\nCertificado Do Ensino Medio Comprar\r\nComprar Certificado Ensino Médio\r\nDiploma De Faculdade Comprar\r\nCertificado Ensino Médio Comprar\r\nCertificado De Conclusão Do Ensino Médio Comprar\r\nDiploma Reconhecido Pelo Mec Comprar\r\nDiploma Pedagogia Comprar\r\nComprar O Certificado Do Ensino Médio\r\nDiploma Ensino Superior Comprar\r\nDiploma De Pós Graduação Para Comprar\r\nComprar Um Certificado Do Ensino Medio\r\nDiploma Faculdade Comprar\r\nCertificado Ensino Medio Comprar\r\nCompra De Diplomas Superior\r\nComprar Certificado Faculdade\r\nComprar Certificado Ensino Médio Reconhecido Pelo Mec\r\nComprar Certificado De Graduação\r\nComprar Certificado Ensino Superior\r\nCompre Seu Diploma\r\nDiploma Comprado Reconhecido Pelo Mec\r\nComprar Certificado Superior\r\nComprar Certificado De Faculdade\r\nVenda Diploma Superior\r\nComprar Certificado De Ensino Medio\r\nComprei Diploma Pela Internet\r\nDiploma De Mestrado Comprar\r\nCompra De Certificado Ensino Medio\r\nComprar Certificado De Conclusão Do Ensino Superior\r\nPreciso De Um Diploma Superior Urgente\r\nDiploma Mestrado Comprar\r\nComprar Certificado De Pedagogia\r\nDiploma Escolar Ensino Medio Comprar\r\nDiploma 2 Grau Comprar\r\nCertificado 2 Grau Comprar\r\nQuero Comprar Meu Diploma Ensino Medio\r\nDiploma Graduação Comprar\r\nDiploma Do Ensino Médio Comprar\r\nComprar Certificado De Conclusão Do Ensino Médio Reconhecido Pelo Mec\r\nDiploma Tecnologo Comprar\r\nCertificado De Ensino Superior Comprar\r\nDiploma Para Comprar\r\nComprar Conclusão Do Ensino Médio\r\nCertificado De 2 Grau Comprar\r\nDiploma Segundo Grau Comprar\r\nComprar Certificado De Ensino Superior\r\nDiploma Escolar Comprar\r\nVenda Diploma\r\nComprar Certificado Mestrado\r\nCompre Seu Diploma De Curso Superior\r\nCertificado Ensino Medio Comprado\r\nDiploma Curso Tecnico Comprar\r\nComprar Histórico Escolar Ensino Médio\r\nDiploma De Magisterio Comprar\r\nComprar Historico Escolar Ensino Medio Completo\r\nCompre Seu Diploma Do Ensino Medio\r\nVenda Diploma Ensino Medio\r\nDiploma Superior Quente\r\nVendas De Diplomas\r\nComprar Certificado Escolaridade Ensino Medio\r\nComprar Certificado Ensino Fundamental\r\nAdquirir Diploma\r\nCertificado De Ensino Medio Comprar\r\nCertificado De Ensino Médio Comprar\r\nCertificado Ensino Fundamental Comprar\r\nCertificado Segundo Grau Comprar\r\nCertificado Superior Comprar\r\nCompra De Certificado De Conclusão Do Ensino Médio\r\nCompra De Certificado De Ensino Medio\r\nCompra De Certificado Do Ensino Medio\r\nCompra De Certificado Superior\r\nCompra De Diplomas Universitarios\r\nComprar Certificado 2 Grau Completo\r\nComprar Certificado De Conclusão De Curso Superior\r\nComprar Certificado De Curso Superior\r\nComprar Certificado De Ensino Medio Reconhecido Pelo Mec\r\nComprar Certificado De Ensino Médio\r\nComprar Certificado De Segundo Grau\r\nComprar Certificado Do Ensino Fundamental\r\nComprar Certificado Do Ensino Medio Reconhecido Pelo Mec\r\nComprar Certificado Ensino Medio Completo\r\nComprar Certificado Ensino Médio Mercado Livre\r\nComprar Certificado Falso\r\nComprar Certificado Segundo Grau\r\nComprar Historico Escolar 2 Grau\r\nComprar Historico Escolar Ensino Medio\r\nComprar Histórico Escolar Ensino Médio Reconhecido Pelo Mec\r\nComprar Supletivo\r\nComprar Supletivo Ensino Medio\r\nCompre Seu Diploma Superior\r\nComprei Meu Diploma\r\nComprei Meu Diploma Do Ensino Medio\r\nComprei Um Diploma\r\nComprou Diploma\r\nDiploma Comprado Ensino Medio\r\nDiploma Comprar Superior\r\nDiploma Curso Superior Comprar\r\nDiploma De Ensino Superior Como Comprar\r\nDiploma De Mestrado Para Comprar\r\nDiploma De Segundo Grau Comprar\r\nDiploma Ensino Fundamental Comprar\r\nDiploma Ensino Medio Barato\r\nDiploma Ensino Medio Completo Comprar\r\nDiploma Ensino Médio Barato\r\nDiploma Pós Graduação Comprar\r\nPreço Diploma Ensino Medio\r\nQuero Comprar Meu Certificado Do Ensino Medio\r\nQuero Comprar Um Certificado Do Ensino Medio\r\nSites Vendem Diploma De Curso Superior\r\nValor Diploma Ensino Medio\r\nVenda Certificado Ensino Medio\r\nVenda Diploma Ensino Superior\r\nEnsino Medio Comprar Certificado\r\nDiploma 12o Ano Comprar\r\nDiploma Reconhecido Pelo Mec\r\nDiploma Ensino Médio Reconhecido Pelo Mec\r\nComprar Histórico Escolar Reconhecido Pelo Mec\r\nDiploma De Curso Técnico Reconhecido Pelo Mec\r\nDiploma Do Ensino Médio Reconhecido Pelo Mec\r\nMec Diploma\r\nDiplomas Falsos Reconhecidos Pelo Mec\r\nRegistro De Diploma No Mec\r\nDiploma Reconhecido Pelo Mec Comprar\r\nDiploma Registrado No Mec\r\nDiploma Unopar Reconhecido Pelo Mec\r\nCurso Autorizado Pelo Mec Pode Emitir Diploma\r\nDiplomas Mec\r\nDiplomas Registrados No Mec\r\nRegistro Diploma Mec\r\nRegistro Do Mec Diploma\r\nRegistro Mec Diploma\r\nCompra De Diplomas Nivel Superior\r\nDiploma Ensino Superior Comprar\r\nCompra De Diplomas Superior\r\nComprar Certificado Ensino Superior\r\nComprar Certificado De Conclusão Do Ensino Superior\r\nCertificado De Ensino Superior Comprar\r\nComprar Certificado De Ensino Superior\r\nCompre Seu Diploma De Curso Superior\r\nComprar Certificado De Curso Superior\r\nDiploma Curso Superior Comprar\r\nDiploma De Ensino Superior Como Comprar\r\nVenda Diploma Ensino Superior\r\nDiploma Superior\r\nDiplomas Superior Compra\r\nDiploma Ensino Superior\r\nDiploma De Curso Superior\r\nDiploma De Ensino Superior\r\nDiploma Nivel Superior\r\nCertificado De Conclusão De Curso Superior\r\nDiploma De Nivel Superior\r\nCertificado De Conclusão Do Ensino Superior\r\nDiploma De Nível Superior\r\nCertificado De Conclusão De Ensino Superior\r\nDiploma Do Ensino Superior\r\nDiploma Nível Superior\r\nDiplomas De Curso Superior\r\nDiploma Curso Superior\r\nCertificado Ensino Superior\r\nCertificado De Ensino Superior\r\nDiploma Nivel Superior Rapido\r\nDiploma Superior Reconhecido Pelo Mec\r\nDiploma Ensino Superior Rapido\r\nCertificado Curso Superior\r\nSuperior Diplomas\r\nDiploma Ensino Superior Reconhecido Pelo Mec\r\nConseguir Diploma Nivel Superior\r\nCertificado De Conclusão Ensino Superior\r\nDiploma De Ensino Superior Reconhecido Pelo Mec\r\nCertificado Conclusao Ensino Superior\r\nCertificado De Conclusão Curso Superior\r\nCertificado De Conclusão De Curso Superior Mec\r\nCertificado De Conclusão De Curso Superior Unip\r\nCertificado De Conclusão Do Curso Superior\r\nCertificado De Ensino Superior Falso\r\nCertificado Digital Ensino Superior\r\nCertificado Diploma De Conclusão De Ensino Superior Ou Equivalente\r\nConclusão De Curso Superior\r\nConclusão De Curso Superior Em Nível De Graduação\r\nConsulta De Diploma Ensino Superior\r\nConsulta Diploma Ensino Superior\r\nConsulta Diploma Mec Ensino Superior\r\nDiploma De Conclusão De Curso Superior\r\nDiploma De Curso Superior Reconhecido Pelo Mec\r\nDiploma Digital Ensino Superior\r\nDiploma Ensino Superior Mec\r\nDiploma Graduação Mec\r\nDiploma Mec Ensino Superior\r\nDiploma Nivel Superior Reconhecido Pelo Mec\r\nDiploma Ou Certificado De Conclusão De Curso Superior\r\nDiploma Superior Digital\r\nDiploma Superior Mec\r\nDiploma Superior Nacional\r\n\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/57821","RelatedDescription":"Closed issue \"👉 Comprar Diploma Superior e Ensino Médio\" (#57821)"},{"Id":"2520886153","IsPullRequest":true,"CreatedAt":"2024-09-11T22:18:32","Actor":"BrennanConroy","Number":"57819","RawContent":null,"Title":"[Backport] Http.Sys: Clean up Request parsing errors","State":"open","Body":"Original change https://github.com/dotnet/aspnetcore/pull/57531","Url":"https://github.com/dotnet/aspnetcore/pull/57819","RelatedDescription":"Open PR \"[Backport] Http.Sys: Clean up Request parsing errors\" (#57819)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"2518176374","IsPullRequest":true,"CreatedAt":"2024-09-12T23:00:13","Actor":"terrajobst","Number":"513","RawContent":null,"Title":"Add SECURITY.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/513","RelatedDescription":"Closed or merged PR \"Add SECURITY.md\" (#513)"},{"Id":"2180295666","IsPullRequest":false,"CreatedAt":"2024-03-11T21:34:47","Actor":"amcasey","Number":"512","RawContent":null,"Title":"[Breaking change]: DefaultKeyResolution.ShouldGenerateNewKey has a slightly altered meaning","State":"open","Body":"### Description\r\n\r\n`DefaultKeyResolution.ShouldGenerateNewKey` no longer reflects whether the default key is close to its expiration time.\r\n\r\n### Version\r\n\r\n.NET 9 Preview 3\r\n\r\n### Previous behavior\r\n\r\nIt was an undocumented, but consistent, feature of the API that `ShouldGenerateNewKey` would be true if the default key was within two days (an over-simplification) of its expiration time.  The amount of lead time was based on the polling interval of `ICacheableKeyRingProvider`, which was not something `IDefaultKeyResolver.ResolveDefaultKeyPolicy` should have depended upon (since, for example, alternative implementations would probably not be aware of these details).\r\n\r\n### New behavior\r\n\r\nIf `ShouldGenerateNewKey` is true, it now indicates that either there is no default key or that for some other policy reason (i.e. in a specialized implementation of `IDefaultKeyResolver`, a new key should be generated.  The `ICacheableKeyRingProvider` will make its own decision about whether the expiration time is close enough to warrant generating a new key.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\r\n\r\n### Reason for change\r\n\r\nFirst, we wanted to change the logic around key generation near expiration time and, second, this makes it more straightforward to implement a custom `IDefaultKeyResolver`.\r\n\r\nNote that the documentation for this type already states that \"This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.\"\r\n\r\n### Recommended action\r\n\r\nIf you have an `IDefaultKeyResolver` implementation that tries to replicate the expiry logic, that logic can be removed (however, leaving it is fine as well).\r\n\r\nIf you were consuming `IDefaultKeyResolver` directly, for the express purpose of determining whether expiration was pending and that continues to be important, you can the default key's `ExpirationDate` property directly.\r\n\r\n### Affected APIs\r\n\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey","Url":"https://github.com/aspnet/Announcements/issues/512","RelatedDescription":"Open issue \"[Breaking change]: DefaultKeyResolution.ShouldGenerateNewKey has a slightly altered meaning\" (#512)"},{"Id":"2162366750","IsPullRequest":true,"CreatedAt":"2024-03-01T17:37:10","Actor":"amcasey","Number":"511","RawContent":null,"Title":"Update repo URL","State":"closed","Body":"We have appropriate redirects, but it seems preferable to have current URLs in the guidance.","Url":"https://github.com/aspnet/Announcements/pull/511","RelatedDescription":"Closed or merged PR \"Update repo URL\" (#511)"},{"Id":"2115619834","IsPullRequest":true,"CreatedAt":"2024-02-06T22:14:36","Actor":"dotnet-policy-service[bot]","Number":"510","RawContent":null,"Title":"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning","State":"closed","Body":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service.","Url":"https://github.com/aspnet/Announcements/pull/510","RelatedDescription":"Closed or merged PR \"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning\" (#510)"},{"Id":"2013176077","IsPullRequest":false,"CreatedAt":"2023-11-27T21:55:39","Actor":"captainsafia","Number":"509","RawContent":null,"Title":"[Breaking change]: Minimal APIs consuming IFormFile or IFormFileCollection parameters require anti-forgery checks","State":"open","Body":"### Description\n\nMinimal API endpoints that consume an `IFormFile` or `IFormFileCollection` will now be opted-in to requiring anti-forgery token validation using the new anti-forgery middleware.\n\n### Version\n\n.NET 8 RC 1\n\n### Previous behavior\n\nMinimal API endpoints that bound a parameter from the form via `IFormFile` or `IFormFileCollection` did not require anti-forgery validation.\n\n### New behavior\n\nMinimal API endpoints that bound a parameter from the form via `IFormFile` or `IFormFileCollection` did require anti-forgery validation. An exception will be thrown at startup if the anti-forgery middleware is not registered for an API that defines these input types.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nAnti-forgery token validation is a recommended security precaution for APIs that consume data from a form.\n\n### Recommended action\n\nUsers can opt out of anti-forgery validation for specific endpoints by using the `DisableAntiforgery` method like so:\r\n\r\n```csharp\r\nvar app = WebApplication.Create();\r\n\r\napp.MapPost(\"/\", (IFormFile formFile) => ...)\r\n  .DisableAntiforgery();\r\n\r\napp.Run();\r\n```\n\n### Affected APIs\n\nNone.","Url":"https://github.com/aspnet/Announcements/issues/509","RelatedDescription":"Open issue \"[Breaking change]: Minimal APIs consuming IFormFile or IFormFileCollection parameters require anti-forgery checks\" (#509)"},{"Id":"1811082947","IsPullRequest":false,"CreatedAt":"2023-07-19T03:36:42","Actor":"jmprieur","Number":"508","RawContent":null,"Title":"[Breaking change]: JwtBearer, WsFederation, and OpenIdConnect events context properties of type SecurityToken now return a JSonWebToken by default","State":"open","Body":"## Description\r\nThe `JwtBearerEvents`, `WsFederationEvents` and `OpenIdConnectEvents` are authentication events fired respectively by the `JwtBearer`, `WsFederation` and `OpenIdConnect` authentication handlers. For example the [OnTokenValidated](https://github.com/dotnet/aspnetcore/blob/bf303a1092f83d789031fdafac60f3fc454cfc49/src/Security/Authentication/JwtBearer/src/JwtBearerEvents.cs#L29) event is fired when a security token is validated. These events are fired with a context (for instance [TokenValidatedContext](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.jwtbearer.tokenvalidatedcontext?view=aspnetcore-7.0)) that exposes a `SecurityToken` property of abstract type [SecurityToken](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.tokens.securitytoken?view=msal-web-dotnet-latest). The default real implementation of SecurityToken changed from [JwtSecurityToken](https://learn.microsoft.com/dotnet/api/system.identitymodel.tokens.jwt.jwtsecuritytoken?view=msal-web-dotnet-latest) to [JsonWebToken](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.jsonwebtokens.jsonwebtoken?view=msal-web-dotnet-latest).\r\nIf you really need to keep using `JwtSecurityToken`, you can re-enable it by setting `UseSecurityTokenValidators` on the `JwtBearerOptions`, `WsFederationOptions`, `OpenIdConnectOptions`.\r\n\r\nFor details [#aspnetcore/49469](https://github.com/dotnet/aspnetcore/issues/49469#issue) API Review.\r\n\r\n### Version\r\n.NET 8 Preview 7\r\n\r\n### Previous behavior\r\nUntil ASP.NET Core 8-preview 7, these SecurityToken properties were implemented by a sub-class of SecurityToken named JwtSecurityToken, which is the previous generation of implementation of JWT. These JwtSecurityToken were produced by [SecurityTokenValidators](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.tokens.isecuritytokenvalidator?view=msal-web-dotnet-latest).\r\n\r\n### New behavior\r\nFrom ASP.NET Core 8-preview 7, by default the class derived from SecurityToken implenting these properties is JSonWebToken which are produced by more optimized [TokenHandlers](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.tokens.tokenhandler?view=msal-web-dotnet-latest).\r\n\r\n## Type of breaking change\r\n- [ ] Binary incompatible: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [ ] Source incompatible: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [x] Behavioral change: Existing binaries may behave differently at run time.\r\n\r\n## Reason for change\r\nThis change was made because JSonWebToken (and its associated JSonWebTokenHandler) are bringing:\r\n- 30% performance improvement.\r\n- Improved reliability by the usage of a Last Known Good metadata (such as the OpenIdConnectMetadata)\r\n- async processing\r\n\r\n### Recommended action\r\nFor most of you, this shouldn't be a problem as the type of the properties (SecurityToken) has not changed, and you were not supposed to look at the real type.\r\n\r\nHowever, if you were downcasting one of these SecurityToken properties to JwtSecurityToken (for example to get the claims), you will now need to:\r\n- either down-cast them to JSonWebToken\r\n\r\n  ```CSharp\r\n  service.Configure<JwtBearerOptions>(JwtBearerDefaults.AuthenticationScheme,  options => {\r\n      options.Events.TokenValidated = (context) => {\r\n          // Replace your cast to JwtSecurityToken.\r\n          JSonWebToken token = context.SecurityToken as JSonWebToken;\r\n          // Do something ...\r\n      };\r\n  });\r\n  ```\r\n\r\n- or set one of the UseSecurityTokenValidators boolean properties on the corresponding options (JtwBearerOptions, WsFederationOptions, OpenIdConnectOptions) to true, in which case the authentication handlers will keep using the JwtTokenValidators and will keep producing JwtSecurityTokens.\r\n\r\n  ```CSharp\r\n  service.Configure<JwtBearerOptions>(JwtBearerDefaults.AuthenticationScheme,  options => {\r\n      options.UseSecurityTokenValidators = true;\r\n      options.Events.TokenValidated = (context) => {\r\n          // As you were doing before\r\n          JwtSecurityToken token = context.SecurityToken as JwtSecurityToken;\r\n          // Do something ...\r\n      };\r\n  });\r\n  ```\r\n\r\n\r\n\r\n## Affected APIs\r\nThe properties that are concerned are the following:\r\n\r\n### In WsFederationEvents\r\n\r\n- [SecurityTokenValidatedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/WsFederation/src/SecurityTokenValidatedContext.cs#L31)\r\n\r\n### In JwtBearerEvents\r\n\r\n- [TokenValidatedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/JwtBearer/src/TokenValidatedContext.cs#L27)\r\n\r\n### In OpenIdConnectEvents\r\n\r\n- [TokenValidatedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/OpenIdConnect/src/Events/TokenValidatedContext.cs#L32)\r\n- [AuthorizationCodeReceivedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/OpenIdConnect/src/Events/AuthorizationCodeReceivedContext.cs#L34)","Url":"https://github.com/aspnet/Announcements/issues/508","RelatedDescription":"Open issue \"[Breaking change]: JwtBearer, WsFederation, and OpenIdConnect events context properties of type SecurityToken now return a JSonWebToken by default\" (#508)"},{"Id":"1805550224","IsPullRequest":false,"CreatedAt":"2023-07-14T20:44:25","Actor":"captainsafia","Number":"507","RawContent":null,"Title":"[Breaking change]: TrimMode defaults to `full` for WebSDK projects","State":"open","Body":"### Description\n\nTrimming now trims all assemblies in applications targeting the Web SDK, by default. This change only affects apps that are published with PublishTrimmed=true, and it only breaks apps that had existing trim warnings. \n\n### Version\n\n.NET 8 Preview 7\n\n### Previous behavior\n\nPreviously, `TrimMode=partial` was set by default for all projects that targeted the WebSDK. \n\n### New behavior\n\nStarting in .NET 8 Preview 7, trimming trims all the assemblies in the app by default. Apps that may have previously worked with `PublishTrimmed=true` and `TrimMode=partial` may not work in .NET 8 Preview 7. However, only apps with trim warnings will be affected. If your app has no trim warnings, the change in behavior should not cause any adverse effect.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [X] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nThis change helps to decrease app size without users having to explicitly opt in and aligns with user expectations that the entire app is trimmed unless noted otherwise.\n\n### Recommended action\n\nThe best resolution is to resolve all the trim warnings in your application. For information about resolving the warnings in your own libraries, see [Introduction to trim warnings](https://learn.microsoft.com/en-us/dotnet/core/deploying/trimming/fixing-warnings).\r\n\r\nTo revert to the previous behavior, set the TrimMode property to partial.\r\n\r\n```xml\r\n<TrimMode>partial</TrimMode>\r\n```\n\n### Affected APIs\n\nNone.","Url":"https://github.com/aspnet/Announcements/issues/507","RelatedDescription":"Open issue \"[Breaking change]: TrimMode defaults to `full` for WebSDK projects\" (#507)"},{"Id":"1693295179","IsPullRequest":false,"CreatedAt":"2023-05-03T01:44:40","Actor":"JamesNK","Number":"506","RawContent":null,"Title":"[Breaking change]: ASP.NET Core rate limiting middleware now requires AddRateLimiter","State":"open","Body":"### Description\r\n\r\n[ASP.NET Core rate limiting middleware](https://learn.microsoft.com/aspnet/core/performance/rate-limit) is being updated in .NET 8 with extra functionality. The middleware now requires services registered with `AddRateLimiter`.\r\n\r\n### Version\r\n\r\n.NET 8 Preview 5\r\n\r\n### Previous behavior\r\n\r\nPreviously, rate limiting could be used without `AddRateLimiter`. For example, the middleware could be configured by calling `Configure<RateLimiterOptions>(o => { })`:\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.Configure<RateLimiterOptions>(o => o\r\n    .AddFixedWindowLimiter(policyName: \"fixed\", options =>\r\n    {\r\n        // configuration\r\n    }));\r\n\r\nvar app = builder.Build();\r\napp.UseRateLimiter();\r\napp.MapGet(\"/\", () => Results.Ok($\"Hello world\")).RequireRateLimiting(\"fixed\");\r\napp.Run();\r\n```\r\n\r\n### New behavior\r\n\r\nIf `AddRateLimiter` is not called on app startup, then ASP.NET Core will throw an informative error:\r\n\r\n> Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddRateLimiter' in the application startup code.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\r\n\r\n### Reason for change\r\n\r\nRate limiting middleware requires services that are only registered by calling `AddRateLimiter`.\r\n\r\n### Recommended action\r\n\r\nEnsure `AddRateLimiter()` is called at application startup.\r\n\r\nFor example, update `Configure<RateLimiterOptions>(o => { })` to use `AddRateLimiter()`:\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddRateLimiter(o => o\r\n    .AddFixedWindowLimiter(policyName: \"fixed\", options =>\r\n    {\r\n        // configuration\r\n    }));\r\n\r\nvar app = builder.Build();\r\napp.UseRateLimiter();\r\napp.MapGet(\"/\", () => Results.Ok($\"Hello world\")).RequireRateLimiting(\"fixed\");\r\napp.Run();\r\n```\r\n\r\n### Affected APIs\r\n\r\n[UseRateLimiter()](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.ratelimiterapplicationbuilderextensions.useratelimiter)","Url":"https://github.com/aspnet/Announcements/issues/506","RelatedDescription":"Open issue \"[Breaking change]: ASP.NET Core rate limiting middleware now requires AddRateLimiter\" (#506)"},{"Id":"1685250868","IsPullRequest":false,"CreatedAt":"2023-04-26T15:26:43","Actor":"Tratcher","Number":"505","RawContent":null,"Title":"[Breaking change]: ISystemClock obsolete and replaced by TimeProvider","State":"open","Body":"### Description\n\n`Microsoft.AspNetCore.Authentication.ISystemClock` has been used by the authentication and identity components since AspNetCore 1.0 to enable unit testing of time related functionality like expiration checking. .NET 8 now includes a suitable abstraction `System.TimeProvider` that provides the same functionality and much more. We're taking this opportunity to obsolete `ISystemClock` and replace it with `TimeProvider` throughout AspNetCore.\r\n\r\nSee https://github.com/dotnet/aspnetcore/pull/47717 for additional details.\n\n### Version\n\n.NET 8 Preview 5\n\n### Previous behavior\n\nISystemClock was injected into the constructors by Dependency Injection and could be overridden for testing.\r\n\r\nNote the default `SystemClock` implementation would truncate to the nearest second for easier formatting. \n\n### New behavior\n\nISystemClock remains in the Dependency Injection container but is no longer used. It may be removed from the container in a future version.\r\n\r\nTimeProvider is now a settable property on the Options classes for these types. It can be set directly or by registering a provider in the Dependency Injection container.\r\n\r\n`TimeProvider` does not truncate to the nearest second, consumers are expected to correctly format the time as needed.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [X] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nUnifying the time abstraction across the stack for easier testing.\n\n### Recommended action\n\nComponents that derive from `Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>` or `Microsoft.AspNetCore.Identity.SecurityStampValidator<TUser>` should remove their `ISystemClock` constructor parameter and call the new base constructor accordingly. Similarly, derived implementations that reference the `Clock` property on these types should reference the new `TimeProvider` property instead. `TimeProvider` is now settable for testing on the options or via DI.\r\n\r\n```diff\r\n-    public BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock)\r\n-        : base(options, logger, encoder, clock)\r\n+    public BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder)\r\n+        : base(options, logger, encoder)\r\n```\r\n\r\n```diff\r\n-       var currentUtc = Clock.UtcNow;\r\n+       var currentUtc = TimeProvider.GetUtcNow();\r\n```\n\n### Affected APIs\n\n- [`ISystemClock`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.isystemclock)\r\n- [`SystemClock`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.systemclock)\r\n- [`AuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.authenticationhandler-1)\r\n- [`AuthenticationHandler<TOptions>.Clock`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.authenticationhandler-1.clock)\r\n- [`CookieAuthenticationHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.cookies.cookieauthenticationhandler)\r\n- [`FacebookHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.facebook.facebookhandler)\r\n- [`GoogleHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.google.googlehandler)\r\n- [`JwtBearerHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.jwtbearer.jwtbearerhandler)\r\n- [`MicrosoftAccountHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.microsoftaccount.microsoftaccounthandler)\r\n- [`NegotiateHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.negotiate.negotiatehandler)\r\n- [`OAuthHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.oauth.oauthhandler-1)\r\n- [`OpenIdConnectHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.openidconnect.openidconnecthandler)\r\n- [`PolicySchemeHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.policyschemehandler)\r\n- [`RemoteAuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.remoteauthenticationhandler-1)\r\n- [`SignInAuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.signinauthenticationhandler-1)\r\n- [`SignOutAuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.signoutauthenticationhandler-1)\r\n- [`TwitterHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.twitter.twitterhandler)\r\n- [`WsFederationHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.wsfederation.wsfederationhandler)\r\n- [`SecurityStampValidator<TUser>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.securitystampvalidator-1)\r\n- [`TwoFactorSecurityStampValidator<TUser>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.twofactorsecuritystampvalidator-1)","Url":"https://github.com/aspnet/Announcements/issues/505","RelatedDescription":"Open issue \"[Breaking change]: ISystemClock obsolete and replaced by TimeProvider\" (#505)"},{"Id":"1661290568","IsPullRequest":false,"CreatedAt":"2023-04-10T20:06:20","Actor":"captainsafia","Number":"504","RawContent":null,"Title":"[Breaking change]: `ValidationProblemDetails` and `ProblemDetails` no longer use custom converters","State":"open","Body":"### Description\n\nPrior to .NET 8 Preview 2, `ValidationProblemDetails` and `ProblemDetails` type used custom converters to support JSON serialization due to a lack of support for the `IgnoreNullValues` option. Now that this option is supported by the S.T.J APIs, we've removed the custom converters in the framework in favor of the serialization provided by the framework.\r\n\r\nAs a result of this, the properties in the `ValidationProblemDetails` and `ProblemDetails` types no longer indiscriminately assume lowercase type names. Developers must specific a `JsonNamingPolicy` to get the correct behavior.\n\n### Version\n\n.NET 8 Preview 2\n\n### Previous behavior\n\n```csharp\r\nstring content = \"{\\\"status\\\":400,\\\"detail\\\":\\\"HTTP egress is not enabled.\\\"}\";\r\nusing MemoryStream stream = new();\r\nusing StreamWriter writer = new(stream);\r\nwriter.Write(content);\r\nwriter.Flush();\r\nstream.Position = 0;\r\n\r\nJsonSerializerOptions options = new();\r\noptions.Converters.Add(new JsonStringEnumConverter());\r\n\r\nValidationProblemDetails? details = await JsonSerializer.DeserializeAsync<ValidationProblemDetails>(stream, options);\r\nConsole.WriteLine(details.Status); // 400\r\n```\n\n### New behavior\n\n```csharp\r\nstring content = \"{\\\"status\\\":400,\\\"detail\\\":\\\"HTTP egress is not enabled.\\\"}\";\r\nusing MemoryStream stream = new();\r\nusing StreamWriter writer = new(stream);\r\nwriter.Write(content);\r\nwriter.Flush();\r\nstream.Position = 0;\r\n\r\nJsonSerializerOptions options = new();\r\noptions.Converters.Add(new JsonStringEnumConverter());\r\n\r\nValidationProblemDetails? details = await JsonSerializer.DeserializeAsync<ValidationProblemDetails>(stream, options);\r\nConsole.WriteLine(details.Status); // null\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nNow that `IgnoreNullValues` is supported by the S.T.J APIs, we've removed the custom converters in the framework in favor of the serialization provided by the framework.\n\n### Recommended action\n\nProvide a JSON serializer options with the correct details.\r\n\r\n```csharp\r\nJsonSerializerOptions options = new()\r\n{\r\n   PropertyNameCaseInsensitive = true\r\n};\r\nValidationProblemDetails? details = await JsonSerializer.DeserializeAsync<ValidationProblemDetails>(stream, options);\r\n```\n\n### Affected APIs\n\n- [`ValidationProblemDetails`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.validationproblemdetails)\r\n- [`ProblemDetails`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.problemdetails)","Url":"https://github.com/aspnet/Announcements/issues/504","RelatedDescription":"Open issue \"[Breaking change]: `ValidationProblemDetails` and `ProblemDetails` no longer use custom converters\" (#504)"},{"Id":"1657753067","IsPullRequest":true,"CreatedAt":"2023-04-06T22:49:51","Actor":"gewarren","Number":"503","RawContent":null,"Title":"Add more version choices to BC template","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/503","RelatedDescription":"Closed or merged PR \"Add more version choices to BC template\" (#503)"},{"Id":"1656483670","IsPullRequest":false,"CreatedAt":"2023-04-06T00:15:27","Actor":"mitchdenny","Number":"502","RawContent":null,"Title":"[Breaking change]: Obsolete ConcurrencyLimiterMiddleware","State":"open","Body":"### Description\r\n\r\nIn .NET 8.0 the ASP.NET Core team is deprecating the ConcurrencyLimiterMiddleware and associated methods and types (e.g. UseConcurrencyLimiter(...)). This package will be removed in .NET 9.0.\r\n\r\nDevelopers requiring rate limiting capabilties should switch to the newer and more capable rate limiting middleware that was introduced in .NET 7.0 (e.g. UseRateLimiter(...)). The .NET 7.0 rate limiting API includes a concurrency limiter along with several other rate limiting algorithms that you can apply to your application.\r\n\r\nFor more information on rate limiting in ASP.NET Core see:\r\nhttps://learn.microsoft.com/aspnet/core/performance/rate-limit\r\n\r\n### Version\r\n\r\n.NET 8 Preview 4\r\n\r\n### Previous behavior\r\n\r\nDevelopers using the `ConcurrencyLimiterMiddleware` could control concurrency by adding a policy to DI and enabling the middleware:\r\n\r\n```csharp\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddStackPolicy<options => {\r\n    options.MaxConcurrentRequests = 2;\r\n    options.RequestQueueLimit = 25;\r\n    });\r\n\r\nvar app = builder.Build();\r\napp.UseConcurrencyLimiter();\r\n// Map endpoints.\r\napp.Run();\r\n```\r\n\r\n### New behavior\r\n\r\nHere is some example usage using the new API:\r\n\r\n```csharp\r\nusing Microsoft.AspNetCore.RateLimiting;\r\nusing System.Threading.RateLimiting;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nvar app = builder.Build();\r\n\r\napp.UseRateLimiter(new RateLimiterOptions()\r\n    .AddConcurrencyLimiter(\"only-one-at-a-time-stacked\", (options) =>\r\n    {\r\n        options.PermitLimit = 2;\r\n        options.QueueLimit = 25;\r\n        options.QueueProcessingOrder = QueueProcessingOrder.NewestFirst;\r\n    }));\r\n\r\napp.MapGet(\"/\", async () =>\r\n{\r\n    await Task.Delay(10000);\r\n    return \"Hello World\";\r\n}).RequireRateLimiting(\"only-one-at-a-time-stacked\");\r\n\r\napp.Run();\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [X] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\r\n\r\n### Reason for change\r\n\r\nThe older `ConcurrencyLimiterMiddleware` is infrequently used and undocumented. The newer rate limiting API has more extensive functionality.\r\n\r\n### Recommended action\r\n\r\nIf you are using the older `ConcurrencyLimiterMiddleware` we recommend moving to the newer rate limiting middleware.\r\n\r\n### Affected APIs\r\n\r\nThe following APIs are impacted:\r\n\r\n* `ConcurrencyLimiterExtensions.UseConcurrencyLimiter(...)`\r\n* `ConcurrencyLimiterMiddleware`\r\n* `ConcurrencyLimiterOptions`","Url":"https://github.com/aspnet/Announcements/issues/502","RelatedDescription":"Open issue \"[Breaking change]: Obsolete ConcurrencyLimiterMiddleware\" (#502)"},{"Id":"1602073485","IsPullRequest":false,"CreatedAt":"2023-03-07T16:47:58","Actor":"dnfadmin","Number":"501","RawContent":null,"Title":"Moving to the new .NET Foundation CLA service","State":"closed","Body":"\r\nHello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team\r\n\r\n","Url":"https://github.com/aspnet/Announcements/issues/501","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#501)"},{"Id":"1575203037","IsPullRequest":true,"CreatedAt":"2023-02-08T00:08:59","Actor":"brunolins16","Number":"500","RawContent":null,"Title":"Fixing announcement template","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/500","RelatedDescription":"Closed or merged PR \"Fixing announcement template\" (#500)"},{"Id":"1375214843","IsPullRequest":false,"CreatedAt":"2023-02-03T03:50:56","Actor":"halter73","Number":"493","RawContent":null,"Title":"[Breaking change]: ApiExplorer and OpenAPI metadata is generated for RequestDelegate endpoints in RC1 *only*","State":"closed","Body":"### Description\r\n\r\nIn .NET 6, ASP.NET Core added support for `Delegate` [route handlers](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0#route-handlers) in addition to conventional `RequestDelegate` endpoints which have existed since ASP.NET Core 3.0.\r\n\r\nIn .NET 7 RC 1, we started automatically generating more API metadata for the older `RequestDelegate` endpoints to align the behavior of these two kinds of endpoints. **In .NET 7 RC 2, we plan to revert this breaking change** which will cause no API metadata to inferred for `RequestDelegate` endpoints again.\r\n\r\n### Version\r\n\r\n.NET 7 RC1\r\n\r\n### Previous behavior\r\n\r\nBefore .NET 7 RC1, conventional `RequestDelegate` endpoints did not get added to the [ApiExplorer](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.apiexplorer?view=aspnetcore-6.0) model or the `OpenApiOperation` generated by [WithOpenApi()](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.openapiendpointconventionbuilderextensions.withopenapi?view=aspnetcore-7.0).\r\n\r\n### New behavior\r\n\r\nIn .NET RC 1 and RC 1 only **(this is being reverted in RC 2)**, the `RequestDelegate`'s `MethodInfo` is added to the [EndpointMetadataCollection](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.endpointmetadatacollection?view=aspnetcore-6.0) just like with `Delegate` route handlers causing ApiExplorer and WithOpenApi() to generate endpoint metadata for endpoints that previously were not part of the model.\r\n\r\nThis can impact third party libraries like [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) and [NSwag](https://github.com/RicoSuter/NSwag).\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/44005 for more context. \r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe were [hoping ](https://github.com/dotnet/aspnetcore/pull/42827/files/cbff9e89b459111ea104ec71c2d3bf9cee6c9e5f#r925142793) that aligning the behavior of `RequestDelegate` and `Delegate` backed endpoints would reduce confusion. We've decided to walk this back though.\r\n\r\n### Recommended action\r\n\r\nYou can add a custom convention that removes the `MethodInfo` from the endpoint metadata or wait for RC 2 to revert this behavior. You can use a group to make it apply to multiple endpoints.\r\n\r\n```csharp\r\nvar noMetadataGroup = app.MapGroup(\"\");\r\nIEndpointConventionBuilder groupConventionBuilder = noMetadataGroup;\r\n\r\ngroupConventionBuilder.Add(endpointBuilder =>\r\n{\r\n    if (endpointBuilder.Metadata.FirstOrDefault(m => m is MethodInfo) is MethodInfo method)\r\n    {\r\n        endpointBuilder.Metadata.Remove(method);\r\n    }\r\n});\r\n\r\nnoMetadataGroup.MapGet(\"/\", (context) => context.Response.WriteAsync(\"RequestDelegate endpoint.\"));\r\n```\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(IEndpointRouteBuilder, RoutePattern, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGet(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPost(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapDelete(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPut(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapMethods(IEndpointRouteBuilder, String, IEnumerable<String>, RequestDelegate)`","Url":"https://github.com/aspnet/Announcements/issues/493","RelatedDescription":"Closed issue \"[Breaking change]: ApiExplorer and OpenAPI metadata is generated for RequestDelegate endpoints in RC1 *only*\" (#493)"},{"Id":"1497212375","IsPullRequest":true,"CreatedAt":"2022-12-14T19:04:06","Actor":"gewarren","Number":"499","RawContent":null,"Title":"Update incompatibility types in BC template","State":"closed","Body":"I updated the breaking change template to match dotnet/docs. Feel free to close if you don't like these definitions, however.","Url":"https://github.com/aspnet/Announcements/pull/499","RelatedDescription":"Closed or merged PR \"Update incompatibility types in BC template\" (#499)"},{"Id":"1455922247","IsPullRequest":false,"CreatedAt":"2022-11-18T22:38:34","Actor":"halter73","Number":"498","RawContent":null,"Title":"[Breaking change]: `WebApplicationBuilder` gives `ASPNET_`-prefixed environment variables lower precedence","State":"open","Body":"### Description\n\nStarting in .NET 7 preview 3, when using `WebApplicationBuilder` but not any other host (e.g. `ConfigureWebHostDefaults` or `WebHost.CreateDefaultBuilder`), command-line arguments and `DOTNET_`-prefixed environment variables override `ASPNET_`-prefixed environment variables when reading from [default host configuration sources](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#default-host-configuration-sources) which are used to read [host variables](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#host-variables) like the content root path and environment name when the `WebApplicationBuilder` is constructed and serves as a base for [application configuration](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#application-configuration-providers).\r\n\r\n`ASPNET_`-prefixed environment variables now has the lowest precedence of all of `WebApplicationBuilder`'s [default host configuration sources](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#default-host-configuration-sources).\r\n\r\nSee https://github.com/dotnet/AspNetCore.Docs/issues/25626#issuecomment-1098616664 for more context.\n\n### Version\n\n.NET 7 Preview 3\n\n### Previous behavior\n\n`ASPNET_`-prefixed environment variables overrode command-line arguments and `DOTNET_`-prefixed environment variables.\n\n### New behavior\n\nCommand-line arguments and `DOTNET_`-prefixed environment variables override `ASPNET_`-prefixed environment variables\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nTo prevent environment variables from overriding explicit command-line arguments when reading host variables which is more consistent with application configuration which has always given command-line arguments the highest precedence.\n\n### Recommended action\n\nIf you were using `ASPNETCORE_`-prefixed environment variables to override command-line arguments or `DOTNET_-`prefixed environment variables, use something with a higher priority. This could mean using custom [WebApplicationOptions](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplicationoptions?view=aspnetcore-7.0) which overrides all default hosting configuration sources.\n\n### Affected APIs\n\n`Microsoft.AspNetCore.Builder.WebApplicationBuilder`","Url":"https://github.com/aspnet/Announcements/issues/498","RelatedDescription":"Open issue \"[Breaking change]: `WebApplicationBuilder` gives `ASPNET_`-prefixed environment variables lower precedence\" (#498)"},{"Id":"1414759756","IsPullRequest":false,"CreatedAt":"2022-10-19T11:01:00","Actor":"javiercn","Number":"497","RawContent":null,"Title":"[Breaking change]: Updates to Authentication in webassembly applications","State":"open","Body":"### Description\n\nWe updated our support for authentication in Blazor Webassembly applications to rely on the history state instead of query strings in the URL. As a result of that, existing applications passing the return URL through the query string will fail to redirect back to the original page after a successful login.\r\n\r\nExisting applications should use the new `NavigateToLogin` extension method as it is able to flow the data to the login page corectly.\n\n### Version\n\n.NET 7 RC 1\n\n### Previous behavior\n\nThe return URL would be specified in the query string as `?returnUrl=<<return-url>>`.\n\n### New behavior\n\nThe return URL along other parameters passed to the `authentication/login` page are passed via the `history.state` entry of the page.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nWe decided to switch to using `history.state` instead of the query string as it simplifies the implementation and removes the surface attack area associated with passing data through the query string.\n\n### Recommended action\n\nMost apps have a RedirectToLogin.razor file in them that can be updated as follows:\r\n\r\n```razor\r\n@inject NavigationManager Navigation\r\n@using Microsoft.AspNetCore.Components.WebAssembly.Authentication\r\n@using Microsoft.Extensions.Options\r\n\r\n@inject IOptionsSnapshot<RemoteAuthenticationOptions<ApiAuthorizationProviderOptions>> Options\r\n@code {\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        Navigation.NavigateToLogin(Options.Get(Microsoft.Extensions.Options.Options.DefaultName).AuthenticationPaths.LogInPath);\r\n    }\r\n}\r\n```\n\n### Affected APIs\n\nAs part of this change `SignOutSessionStateManager` has been obsoleted in favor of `NavigationManager.NavigateToLogout`","Url":"https://github.com/aspnet/Announcements/issues/497","RelatedDescription":"Open issue \"[Breaking change]: Updates to Authentication in webassembly applications\" (#497)"},{"Id":"1400322849","IsPullRequest":false,"CreatedAt":"2022-10-06T21:30:20","Actor":"halter73","Number":"496","RawContent":null,"Title":"[Breaking change]: IEndpointMetadataProvider and IEndpointParameterMetadataProvider interface changes in 7.0 RC2","State":"open","Body":"### Description\n\nIn ASP.NET Core 7 RC2, the `IEndpointMetadataProvider` and `IEndpointParameterMetadataProvider` interfaces [introduced in  preview 4](https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-7-preview-4/#self-describing-minimal-apis-with-iendpointmetadataprovider-and-iendpointparametermetadataprovider) have been updated to take an [EndpointBuilder](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.endpointbuilder?view=aspnetcore-7.0) rather than a `EndpointMetadataContext` or `EndpointParameterMetadataContext`.\r\n\r\n\n\n### Version\n\n.NET 7 RC 2\n\n### Previous behavior\n\nThe `PopulateMetadata` methods on both interfaces took their respective context arguments as a single parameter. Both contexts included services (`IServiceProvider`) and endpoint metadata (`IList<object>`).\r\n\r\n`EndpointMetadataContext` included the `MethodInfo` for the minimal route handler MVC action that took the implementing type as a parameter or returned it. `EndpointParameterMetadataContext` provided `ParameterInfo` and could only be used on parameter types.\n\n### New behavior\n\nNow in RC2, both interfaces' `PopulateMetadata` method take an `EndpointBuilder` as their second parameter. The `EndpointBuilder` provides access to the application services (`IServiceProvider`) and endpoint metadata (`IList<object>`) previously provided by `EndpointMetadataContext` and `EndpointParameterMetadataContext`.\r\n\r\nNow, `IEndpointMetadataProvider` takes a `MethodInfo` and `IEndpointParameterMetadataProvider` takes a `ParameterInfo` as their first parameter.\r\n\r\nBoth `EndpointMetadataContext` and `EndpointParameterMetadataContext` have been removed.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/43125#issuecomment-1218534849 for an API diff.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThe metadata providers now get access to more metadata like the `RoutePattern` (with a downcast) and `DisplayName` via the `EndpointBuilder`, and this allowed us to delete unnecessary context types.\n\n### Recommended action\n\nUpdate implementations of `IEndpointMetadataProvider` and `IEndpointParameterMetadataProvider` to access the information necessary from the new parameters. There should be nothing that was available via the contexts previously that are unavailable via `PopulateMetadata`'s new parameters.\n\n### Affected APIs\n\n- Parameters changed: `Microsoft.AspNetCore.Http.Metadata.IEndpointMetadataProvider.PopulateMetadata`\r\n- Parameters changed: `Microsoft.AspNetCore.Http.Metadata.IEndpointParameterMetadataProvider.PopulateMetadata`\r\n- Removed: `Microsoft.AspNetCore.Http.Metadata.EndpointMetadataContext`\r\n- Removed: `Microsoft.AspNetCore.Http.Metadata.EndpointParameterMetadataContext`","Url":"https://github.com/aspnet/Announcements/issues/496","RelatedDescription":"Open issue \"[Breaking change]: IEndpointMetadataProvider and IEndpointParameterMetadataProvider interface changes in 7.0 RC2\" (#496)"},{"Id":"1396674543","IsPullRequest":false,"CreatedAt":"2022-10-04T18:23:29","Actor":"MackinnonBuck","Number":"495","RawContent":null,"Title":"[Breaking change]: Endpoints configured with 'MapFallbackToFile()' now only match 'HEAD' and 'GET' requests","State":"open","Body":"### Description\n\nThe `ConsumesAttribute` attribute allows controller actions to specify their supported content types. Starting in .NET 6, if a fallback file endpoint was configured, it could match routes that were discarded due to the request having a different content type than what was specified in an action's `ConsumesAttribute`. This was an undesirable change in behavior from .NET 5 that we are partially addressing in .NET 7 by making fallback file endpoints only match `GET` and `HEAD` requests.\n\n### Version\n\n.NET 7 RC2\n\n### Previous behavior\n\nEndpoints configured with `StaticFilesEndpointRouteBuilderExtensions.MapFallbackToFile()` may match requests made with any request method.\n\n### New behavior\n\nEndpoints configured with `StaticFilesEndpointRouteBuilderExtensions.MapFallbackToFile()` will only match `HEAD` and `GET` requests.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis partially reverts larger breaking change accidentally introduced in .NET 6. Since it's highly unusual to expect a fallback file response when making a request with a method other than `HEAD` or `GET`, we anticipate the impact of this breaking change to be minimal.\n\n### Recommended action\n\nIf you want fallback file endpoints to match requests with methods other than `HEAD` or `GET`, you can specify additional HTTP request methods using `WithMetadata()`. For example:\r\n\r\n```csharp\r\nendpoints.MapFallbackToFile(\"index.html\")\r\n    .WithMetadata(new HttpMethodMetadata(new[] { /* List supported methods here */ }));\r\n```\n\n### Affected APIs\n\nAll overloads of `StaticFilesEndpointRouteBuilderExtensions.MapFallbackToFile()`.","Url":"https://github.com/aspnet/Announcements/issues/495","RelatedDescription":"Open issue \"[Breaking change]: Endpoints configured with 'MapFallbackToFile()' now only match 'HEAD' and 'GET' requests\" (#495)"},{"Id":"1376539134","IsPullRequest":false,"CreatedAt":"2022-09-16T22:09:33","Actor":"brunolins16","Number":"494","RawContent":null,"Title":"[Breaking change]:  Using the System.Text.Json source generator with ASP. NET Core throws NotSupportedException in RC1 *only*","State":"open","Body":"### Description\r\n\r\nIn _**.NET 7 RC1**_, we started requiring that the type `object` to be explicitly specified with a `[JsonSerializable]` attribute applied to your Json Serializer context class in Minimal APIs applications using `System.Text.Json` source generation. _**This was an unexpected behavioral change that we will be fixed in RC2**_.\r\n\r\n### Version\r\n\r\n.NET 7 RC1\r\n\r\n### Previous behavior\r\n\r\nBefore **.NET 7 RC1**, if you are using `System.Text.Json` source generation with `ASP.NET Core Minimal APIs` your endpoint's response will be serialized (`JSON` format) correctly when you have your custom types declared in the `JsonSerializerContext`.\r\n\r\nThe following code shows an example using `System.Text.Json` source generation with `ASP.NET Core Minimal APIs` :\r\n\r\n``` c#\r\nusing System.Text.Json.Serialization;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.ConfigureHttpJsonOptions(o => o.SerializerOptions.AddContext<JsonContext>());\r\n\r\nvar app = builder.Build();\r\n\r\napp.MapGet(\"/\", () =>\r\n{\r\n    var l = new List<MyClass> { new(), new() };\r\n    return Results.Ok(l);\r\n});\r\n\r\napp.Run();\r\n\r\n[JsonSerializable(typeof(List<MyClass>))]\r\npublic partial class JsonContext : JsonSerializerContext\r\n{}\r\n\r\npublic class MyClass\r\n{\r\n    public int MyProp { get; set; }\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nIn .NET RC 1 and **RC 1 only** (**_this is being fixed in RC 2_**) the same sample application will throw a `NotSupportedException`.\r\n\r\n```\r\nNotSupportedException: Metadata for type 'System.Object' was not provided by TypeInfoResolver of type 'JsonContext'. \r\nIf using source generation, ensure that all root types passed to the serializer have been indicated with 'JsonSerializableAttribute',\r\nalong with any types that might be serialized polymorphically.\r\n\r\nSystem.Text.Json.ThrowHelper.ThrowNotSupportedException_NoMetadataForType(Type type, IJsonTypeInfoResolver resolver)\r\n```\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/43894 for more context.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis is an unexpected side effect cause by a combination of multiple changes, listed below, detected only after **.NET 7 RC1** release. \r\n\r\n**.NET Runtime**\r\n1. https://github.com/dotnet/docs/issues/30758\r\n2. https://github.com/dotnet/docs/issues/30755\r\n\r\n**ASP.NET CORE**\r\n1. https://github.com/dotnet/aspnetcore/issues/39856\r\n2. https://github.com/dotnet/aspnetcore/issues/41724#issuecomment-1142735823\r\n\r\nThe root cause was already identified, and a fix will be available in **.NET 7 RC2**.\r\n\r\n### Recommended action\r\n\r\nYou can add the `[JsonSerializable(typeof(object))]` to your [JsonSerializerContext](https://docs.microsoft.com/en-us/dotnet/standard/serialization/system-text-json-source-generation?pivots=dotnet-7-0) or wait for RC 2 when this unexpected behavior will be fixed.\r\n\r\n``` c#\r\n[JsonSerializable(typeof(List<MyClass>))]\r\n[JsonSerializable(typeof(object))]\r\npublic partial class JsonContext : JsonSerializerContext\r\n{}\r\n```\r\n\r\n\r\n### Affected APIs\r\n\r\n- Minimal APIs\r\n- Controllers (using [Microsoft.AspNetCore.Http.HttpResults](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.httpresults?view=aspnetcore-7.0))","Url":"https://github.com/aspnet/Announcements/issues/494","RelatedDescription":"Open issue \"[Breaking change]:  Using the System.Text.Json source generator with ASP. NET Core throws NotSupportedException in RC1 *only*\" (#494)"},{"Id":"1371807646","IsPullRequest":false,"CreatedAt":"2022-09-13T17:51:25","Actor":"sebastienros","Number":"492","RawContent":null,"Title":"[Breaking change]: Output Caching renames in 7.0 RC2","State":"open","Body":"### Description\n\nFrom 7.0 RC1 to 7.0 RC2 some APIs have changed to better represent their intent.\r\n\r\nhttps://github.com/dotnet/aspnetcore/pull/43892\r\n\n\n### Version\n\n.NET 7 RC2\n\n### Previous behavior\n\n- `OutputCachePolicyBuilder.VaryByQuery()` was additive: every call would add more query string keys to vary by.\n\n### New behavior\n\n- `OutputCachePolicyBuilder.SetVaryByQuery()` is replacing existing query string keys.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis change was made to improve the consistency of method names and to remove ambiguity in their behavior.\n\n### Recommended action\n\nIt is recommended you recompile any projects built with an earlier SDK. If any of these method names were referenced directly, the source should be updated to reflect the new names.\n\n### Affected APIs\n\n- Removed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.OutputCachePolicyBuilder()` \r\n- Removed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Clear()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AllowLocking()` to `SetLocking()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByRouteValue()` to `SetVaryByRouteValue()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByQuery()` to `SetVaryByQuery()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByHeader()` to `SetVaryByHeader()` \r\n- Added: `Microsoft.AspNetCore.OutputCaching.CacheVaryByRules.VaryByHost`\r\n- Added: `Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddPolicy(string name, Action<OutputCachePolicyBuilder> build, bool excludeDefaultPolicy)`\r\n- Added: `Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddBasePolicy(Action<OutputCachePolicyBuilder> build, bool excludeDefaultPolicy)`\r\n- Added: `Microsoft.Extensions.DependencyInjection.OutputCacheConventionBuilderExtensions.CacheOutput<TBuilder>(this TBuilder builder, Action<OutputCachePolicyBuilder> policy, bool excludeDefaultPolicy)`\r\n","Url":"https://github.com/aspnet/Announcements/issues/492","RelatedDescription":"Open issue \"[Breaking change]: Output Caching renames in 7.0 RC2\" (#492)"},{"Id":"1342406148","IsPullRequest":false,"CreatedAt":"2022-08-18T00:16:25","Actor":"Tratcher","Number":"491","RawContent":null,"Title":"[Breaking change]: AuthenticateAsync for remote authentication providers no longer fails if anonymous","State":"open","Body":"### Description\n\nRE: https://github.com/dotnet/aspnetcore/issues/43042, https://github.com/dotnet/aspnetcore/pull/43212\r\n\r\nRemote authentication providers like OpenIdConnect, WsFederation, and OAuth have been updated to avoid unnecessary errors when there is no user information available on the request.\n\n### Version\n\n.NET 7 RC1\n\n### Previous behavior\n\nWhen AuthenticateAsync was called on a remote authentication provider and there was no current user, this call would fail with a message like `OpenIdConnect was not authenticated. Failure message: Not authenticated`. \n\n### New behavior\n\nAuthenticateAsync will now return `AuthenticateResult.NoResult()`, an anonymous identity. \n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\n- This was inconsistent with Cookie and Negotiate authentication which will return `AuthenticateResult.NoResult()`.\r\n- It causes excess failure logs, especially if the remote authentication handler is set as the default handler and invoked per request.\n\n### Recommended action\n\nCode that directly invokes AuthenticateAsync should be checked to ensure it properly handles `AuthenticateResult.NoResult()` and anonymous/empty ClaimsIdentity's.\n\n### Affected APIs\n\nHttpContext.[AuthenticateAsync](https://github.com/dotnet/aspnetcore/blob/a450cb69b5e4549f5515cdb057a68771f56cefd7/src/Http/Authentication.Abstractions/src/AuthenticationHttpContextExtensions.cs#L22)","Url":"https://github.com/aspnet/Announcements/issues/491","RelatedDescription":"Open issue \"[Breaking change]: AuthenticateAsync for remote authentication providers no longer fails if anonymous\" (#491)"},{"Id":"1288995849","IsPullRequest":true,"CreatedAt":"2022-08-01T20:01:05","Actor":"ghost","Number":"489","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=aspnet/Announcements) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=aspnet/Announcements) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/aspnet/Announcements/pull/489","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#489)"},{"Id":"1311264480","IsPullRequest":false,"CreatedAt":"2022-07-20T14:46:50","Actor":"captainsafia","Number":"490","RawContent":null,"Title":"[Breaking change]: Changes in default authentication scheme handling for ASP.NET Core","State":"open","Body":"### Description\r\n\r\n\r\nStarting in .NET 7 Preview 7, we introduced new behavior in the authentication area in ASP.NET Core.\r\n\r\nPreviously, users were always required to set the default authentication scheme that would be used by authentication and authorization handlers, like so:\r\n```\r\nbuilder.Services.AddAuthentication(\"MyDefaultScheme\");\r\n```\r\nMoving forward, when (and only when) a single authentication scheme is registered, that scheme will be treated as the default scheme. For example, \"foobar\" will be treated as the default scheme in the code below.\r\n```\r\nbuilder.Services.AddAuthentication().AddOAuth(\"foobar\");\r\n```\r\nThis change might expose unintended behavior changes in applications, such as authentication options being validated earlier than expected.\r\n\r\n### Version\r\n\r\n.NET 7 Preview 7\r\n\r\n### Previous behavior\r\n\r\nPreviously, when users did not provide a default scheme in the `AddAuthentication` call, no default scheme was set.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie();\r\n```\r\n\r\nThis impacted the behavior of authentication handlers in the application layer.\r\n\r\n### New behavior\r\n\r\nMoving forward, if (and only if) a _single_ scheme is registered in an application, that scheme will be treated as the default. In the code below, the `CookieDefaults.AuthenticationScheme` will be treated as the default scheme.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie();\r\n```\r\n\r\nHowever, in the code snippet below, no default will be set because multiple schemes are registered.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie().AddJwtBearer();\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nTo reduce boilerplate when configuring authentication and set up sensible defaults.\r\n\r\n### Recommended action\r\n\r\nThe change only impacts applications with a single scheme registered. For those scenarios, it's recommended to ensure that your application is prepared to handle the assumption that a single scheme is the default. For example, the options associated with that scheme should be configured correctly.\r\n\r\nAlternatively, this behavior can be disabled by setting the `Microsoft.AspNetCore.Authentication.SuppressAutoDefaultScheme` app context flag.\r\n\r\n### Affected APIs\r\n\r\nAuthentication APIs.","Url":"https://github.com/aspnet/Announcements/issues/490","RelatedDescription":"Open issue \"[Breaking change]: Changes in default authentication scheme handling for ASP.NET Core\" (#490)"},{"Id":"1287742787","IsPullRequest":false,"CreatedAt":"2022-06-28T18:44:22","Actor":"DamianEdwards","Number":"488","RawContent":null,"Title":"[Breaking change]: Static files, default document, and directory browsing middleware no longer no-op when an endpoint with a null RequestDelegate is active","State":"open","Body":"### Description\n\nAs detailed in dotnet/aspnetcore#42413, the file-serving middleware (`DefaultFilesMiddleware`, `DirectoryBrowserMiddleware`, and `StaticFileMiddleware`) have been updated to no longer no-op (i.e. defer to the next middleware in the pipeline) in the case that there is an active endpoint with a `null` request delegate.\r\n\r\nPR that makes the change: dotnet/aspnetcore#42458\n\n### Version\n\n.NET 7 Preview 7\n\n### Previous behavior\n\nPreviously, if the current request had an active endpoint, i.e. `HttpContext.GetEndpoint() != null`, the file-serving middleware would perform no action and simply delegate to the next middleware in the request pipeline.\n\n### New behavior\n\nThe file-serving middleware will now only perform no action if there is an active endpoint and its `RequestDelegate` property value is not `null`, i.e. `HttpContext.GetEndpoint()?.RequestDelegate is not null`.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis change will enable endpoints to be active in the request for the purposes of setting and sharing metadata with middleware that are endpoint-aware so that they can perform their intended function, while allowing other middleware (like the file-serving middleware) that would usually defer their behavior when an endpoint is active to also function.\r\n\r\nFor example, an endpoint with a `null` request delegate containing authorization metadata can be set as the active endpoint for a request, causing the `AuthorizationMiddleware` to enforce authorization requirements, which if satisfied would allow the `StaticFileMiddleware` to serve the requested files.\n\n### Recommended action\n\nIf you are relying on setting an active endpoint on the request to suppress the behavior of the file-serving middleware, ensure that the endpoint has a non-null value set for its `RequestDelegate` property.\n\n### Affected APIs\n\n- `IApplicationBuilder.UseStaticFiles()`\r\n- `IApplicationBuilder.UseDefaultFiles()`\r\n- `IApplicationBuilder.UseDirectoryBrowser()`","Url":"https://github.com/aspnet/Announcements/issues/488","RelatedDescription":"Open issue \"[Breaking change]: Static files, default document, and directory browsing middleware no longer no-op when an endpoint with a null RequestDelegate is active\" (#488)"},{"Id":"1278667050","IsPullRequest":false,"CreatedAt":"2022-06-21T16:03:03","Actor":"BrennanConroy","Number":"487","RawContent":null,"Title":"[Breaking change]: Unit testing SignalR Hubs may need updating","State":"open","Body":"### Description\n\n`IHubClients` and `IHubCallerClients` now hide interface members `IClientProxy Client(string connectionId);` and `IClientProxy Caller { get; }` with `ISingleClientProxy Client(string connectionId);` and `ISingleClientProxy Caller { get; }` in order to add support for [client results](https://docs.microsoft.com/aspnet/core/signalr/hubs?view=aspnetcore-7.0#client-results).\r\n\r\nThis is not a breaking change to production code, unless you use reflection to call the above `Client` or `Caller` methods.\n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nWhen using a testing library like Moq to unit test a SignalR Hub, you may write some code like follows:\r\n```csharp\r\nvar hub = new MyHub();\r\nvar mockCaller = new Mock<IHubCallerClients>();\r\nvar mockClientProxy = new Mock<IClientProxy>();\r\nmockCaller.Setup(x => x.Caller).Returns(mockClientProxy.Object);\r\nhub.Clients = mockCaller.Object;\r\n\r\nclass MyHub : Hub { }\r\n```\n\n### New behavior\n\n```csharp\r\nvar hub = new MyHub();\r\nvar mockCaller = new Mock<IHubCallerClients>();\r\nvar mockClientProxy = new Mock<ISingleClientProxy>(); // <-- updated code\r\nmockCaller.Setup(x => x.Caller).Returns(mockClientProxy.Object);\r\nhub.Clients = mockCaller.Object;\r\n\r\nclass MyHub : Hub { }\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThe change was made to add new functionality to SignalR and is non-breaking in normal use cases. The main area we see the change breaking is in test code which is easily updated.\n\n### Recommended action\n\nUpdate test code to use the `ISingleClientProxy` interface when using reflection/reflection-based test code.\n\n### Affected APIs\n\n[`IHubClients`](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.ihubclients?view=aspnetcore-6.0) and [`IHubCallerClients`](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.ihubcallerclients?view=aspnetcore-6.0)","Url":"https://github.com/aspnet/Announcements/issues/487","RelatedDescription":"Open issue \"[Breaking change]: Unit testing SignalR Hubs may need updating\" (#487)"},{"Id":"1263972971","IsPullRequest":false,"CreatedAt":"2022-06-07T22:53:47","Actor":"Daniel-Genkin-MS-2","Number":"486","RawContent":null,"Title":"[Breaking change]: Removed default HTTPS binding on Kestrel","State":"open","Body":"### Description\n\nThe default HTTPS address and port have been removed from Kestrel in .NET 7 preview 6. This is step one in https://github.com/dotnet/aspnetcore/issues/42016 which will improve overall developer experience when dealing with HTTPS.\r\n\r\nPR that makes the change: https://github.com/dotnet/aspnetcore/pull/42021\r\n\r\n## Version\r\n.NET 7 preview 6\r\n\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\nPreviously, if no values for the address and port were specified explicitly but a local development certificate was available, Kestrel would default to binding to both http://localhost:5000 and https://localhost:5001.\n\n### New behavior\n\nUsers must now manually bind to HTTPS and specify the address and port explicitly, either via the `launchSettings.json` file, the `ASPNETCORE_URLS` environment variable, `--urls` command line argument, `urls` host configuration key, or via the [`UseUrls`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.hostingabstractionswebhostbuilderextensions.useurls?view=aspnetcore-6.0) extension method.\r\n\r\nHTTP binding is unchanged.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis current eager binding behavior occurs without regard to the configured environment and can lead to experience issues on developer machines when the certificate has not yet been trusted (i.e. trusted as root cert authority because it's self-signed). Clients often produce poor UX when hitting an HTTPS endpoint with an untrusted certificate, e.g. silent failure, scary error/warning screen, etc.\n\n### Recommended action\n\nIf you were not using the default https://localhost:5001 binding, no changes are required. However, if you were using this binding, please make sure to review [this guide](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel/endpoints) on how you can update your server to enable HTTPS.\n\n### Affected APIs\n\nN/A","Url":"https://github.com/aspnet/Announcements/issues/486","RelatedDescription":"Open issue \"[Breaking change]: Removed default HTTPS binding on Kestrel\" (#486)"},{"Id":"1240740970","IsPullRequest":false,"CreatedAt":"2022-05-18T23:44:43","Actor":"brunolins16","Number":"485","RawContent":null,"Title":"[Breaking change]: ActionResult<T> set StatusCode to 200","State":"open","Body":"### Description\r\n\r\nWhen returning a `T` in a MVC/API Controller Action that declares the return type as `ActionResult<T>` will now always set the `ObjectResult.StatusCode` to `200`, unless when the `T` is a `ProblemDetails`.\r\n\r\nSince before this change the `ObjectResult.StatusCode` was `null`, in some scenarios where the status code is set manually, this change could cause unexpected behaviors. Also, an Action Filter could be affected by this change if it expects the `null` instead of `200`.\r\n\r\n### Version\r\n\r\n.NET 6\r\n\r\n### Previous behavior\r\n\r\nBefore if you have a Controller's Action that returns `T` and sets the `Response.StatusCode` manually, similar to the example:\r\n\r\n``` C#\r\n\r\n// Generates a 202 Accepted response\r\npublic ActionResult<Model> Get()\r\n{\r\n    Response.StatusCode = StatusCodes.Status202Accepted;\r\n    return new Model();\r\n}\r\n```\r\nIt will generate the expected `202 Accepted` response status code.\r\n\r\n### New behavior\r\n\r\nAfter the changes the same Controller's Action that returns `T` that sets the `Response.StatusCode` manually, will always generate a `200 OK` response.\r\n\r\n``` C#\r\n\r\n// Generates a 200 OK response\r\npublic ActionResult<Model> Get()\r\n{\r\n    Response.StatusCode = StatusCodes.Status202Accepted;\r\n    return new Model();\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis behavior is documented since ASP.NET Core 3.1 (https://docs.microsoft.com/en-us/aspnet/core/web-api/action-return-types?view=aspnetcore-3.1#actionresultt-type), however, it keeps the `StatusCode` as `null` that will eventually generate a `200 OK` response as default. Since the default internal behavior could easily change, was decided to avoid relying on the internal default implementation and setting the `StatusCode` to the expected `200 OK`.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change, as the example mentioned before:\r\n\r\n``` C#\r\npublic ActionResult<Model> Get()\r\n{\r\n    Response.StatusCode = StatusCodes.Status202Accepted;\r\n    return new Model();\r\n}\r\n```\r\n\r\nYou will need to change your Controller Action. These are some possible options that will keep the desired behavior:\r\n\r\n``` c#\r\npublic ActionResult<Model> Get()\r\n{\r\n   return Accepted(new Model());\r\n}\r\n\r\n//or\r\n\r\npublic ActionResult<Model> Get()\r\n{\r\n   return StatusCode(StatusCodes.Status202Accepted, new Model());\r\n}\r\n\r\n//or\r\n\r\npublic Model Get()\r\n{\r\n   Response.StatusCode = StatusCodes.Status202Accepted;\r\n   return new Model();\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nMVC/API Controller actions.","Url":"https://github.com/aspnet/Announcements/issues/485","RelatedDescription":"Open issue \"[Breaking change]: ActionResult<T> set StatusCode to 200\" (#485)"},{"Id":"1190169916","IsPullRequest":false,"CreatedAt":"2022-04-01T19:03:58","Actor":"brunolins16","Number":"484","RawContent":null,"Title":"[Breaking change]: Updated empty body detection in MVC Model Binding","State":"open","Body":"### Description\r\n\r\nThe mechanism to detect an empty request `body` during the MVC Model Binding now uses the [`IHttpRequestBodyDetectionFeature.CanHaveBody`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ihttprequestbodydetectionfeature.canhavebody?view=aspnetcore-6.0#microsoft-aspnetcore-http-features-ihttprequestbodydetectionfeature-canhavebody), that is currently implemented by the following behavior:\r\n\r\n- `true` when:\r\n  - It's an `HTTP/1.x` request with a non-zero `Content-Length` or a `Transfer-Encoding: chunked` header.\r\n  - It's an `HTTP/2` request that did not set the `END_STREAM` flag on the initial headers frame.\r\n\r\n- `false` when:\r\n  - It's an `HTTP/1.x` request with no `Content-Length` or `Transfer-Encoding: chunked` header, or the `Content-Length` is `0`.\r\n  - It's an `HTTP/1.x` request with `Connection: Upgrade` (e.g. WebSockets). There is no HTTP request body for these requests and no data should be received until after the upgrade.\r\n  - It's an `HTTP/2` request that set `END_STREAM` on the initial headers frame.\r\n\r\nSince the previous behavior was a simple validation of the `Content-Length == 0`, in some scenarios when requests are not sending all needed HTTP information, could now be detected as empty request and report a failure to the client.\r\n\r\n\r\n### Version\r\n\r\n7.0.0-preview3\r\n\r\n### Previous behavior\r\n\r\n Before if you have a Controller's action that bind a parameter from body:\r\n\r\n``` csharp\r\n [HttpPost()]\r\n        public IActionResult Required([FromBody] TestClass value) => Ok(value);\r\n```\r\n\r\nAnd the client request does not include a `Content-Length` header, eg.:\r\n\r\n``` curl\r\ncurl --request POST -k -i \"[action]\" -H \"Content-Type: application/json\"\r\n```\r\n\r\nThis request will cause an internal exception during the body deserialization:\r\n\r\nEg.: When using the `System.Text.Json` input formatter\r\n``` log\r\nSystem.Text.Json.JsonException: 'The input does not contain any JSON tokens. \r\nExpected the input to start with a valid JSON token, when isFinalBlock is true. \r\nPath: $ | LineNumber: 0 | BytePositionInLine: 0.'\r\n```\r\n\r\nAlso, a response payload similar to this will be receive by the client:\r\n\r\n``` json\r\n{\r\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"traceId\": \"00-34e98b5841b88bfb5476965efd9d9c8c-5bb16bc50dfbabb7-00\",\r\n  \"errors\": {\r\n    \"$\": [\r\n+      \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0.\"\r\n    ],\r\n    \"value\": [\r\n      \"The value field is required.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWith the updated detection mechanism, the deserialization will not be trigger since an empty request body will be detected and only a `validation` message will be reported back to the client. Eg.:\r\n\r\n``` json\r\n{\r\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"traceId\": \"00-0f87920dc675fdfdf8d7638d3be66577-bd6bdbf32d21b714-00\",\r\n  \"errors\": {\r\n    \"\": [\r\n+      \"A non-empty request body is required.\"\r\n    ],\r\n    \"value\": [\r\n      \"The value field is required.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change is an alignment with other parts of the framework that were already using the [`IHttpRequestBodyDetectionFeature.CanHaveBody`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ihttprequestbodydetectionfeature.canhavebody?view=aspnetcore-6.0#microsoft-aspnetcore-http-features-ihttprequestbodydetectionfeature-canhavebody) and also a fix to a reported issue dotnet/aspnetcore/issues/29570\r\n\r\n### Recommended action\r\n\r\nNo change is required, however, if you getting an unexpected behavior is recommended to review if your client's requests are sending the appropriated headers/information.\r\n\r\n### Affected APIs\r\n\r\nMVC Action Controllers","Url":"https://github.com/aspnet/Announcements/issues/484","RelatedDescription":"Open issue \"[Breaking change]: Updated empty body detection in MVC Model Binding\" (#484)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-09-13T03:30:08.1026904Z","RunDurationInMilliseconds":3425}