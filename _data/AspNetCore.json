{"Data":{"Blog":{"FeedItems":[{"Title":"What’s new in Windows Forms in .NET 6.0","PublishedOn":"2021-11-16T15:00:31+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"We continue to support and innovate in Windows Forms runtime. Let&#8217;s recap what we&#8217;ve done in .NET 6.0.\nAccessibility improvements and fixes\nMaking Windows Forms applications more...","Href":"https://devblogs.microsoft.com/dotnet/whats-new-in-windows-forms-in-net-6-0/","RawContent":null},{"Title":"Azure Active Directory’s gateway is on .NET 6.0!","PublishedOn":"2021-11-15T15:00:11+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Azure Active Directory’s gateway service is a reverse proxy that fronts hundreds\nof services that make up Azure Active Directory (Azure AD). If you’ve used\nservices such as office.com, outlook.com,...","Href":"https://devblogs.microsoft.com/dotnet/azure-active-directorys-gateway-is-on-net-6-0/","RawContent":null},{"Title":"MSBuild and 64-bit Visual Studio 2022","PublishedOn":"2021-11-11T15:00:20+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Visual Studio’s shift to 64-bit means your builds in Visual Studio 2022 will run in a 64-bit MSBuild. This will not cause any problems for most people. However, if your build includes a task that is...","Href":"https://devblogs.microsoft.com/dotnet/msbuild-and-64-bit-visual-studio-2022/","RawContent":null},{"Title":"Announcing dotnet monitor in .NET 6","PublishedOn":"2021-11-10T15:00:40+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We first introduced dotnet monitor as an experimental tool in June 2020 and have been hard at work to turn it into a production grade tool over the last year. Today I&#8217;m excited to announce the...","Href":"https://devblogs.microsoft.com/dotnet/announcing-dotnet-monitor-in-net-6/","RawContent":null},{"Title":".NET Framework November 2021 Cumulative Update","PublishedOn":"2021-11-09T22:01:25+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the November 2021 Cumulative Update for .NET Framework.\nSecurity\nThe November Security and Quality Rollup Update does not contain any new security fixes. See February 2021...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-2021-cumulative-update/","RawContent":null},{"Title":"F# 6 is officially here!","PublishedOn":"2021-11-09T16:04:26+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"F# 6 is now released as part of .NET 6. You&#8217;ll find new task based async, pipeline debugging, and many features to make your code simpler and more performant.\nYou can find the full list of...","Href":"https://devblogs.microsoft.com/dotnet/fsharp-6-is-officially-here/","RawContent":null},{"Title":"Announcing YARP 1.0 Release","PublishedOn":"2021-11-09T15:00:32+00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Today we announce the release of YARP 1.0, which can be downloaded from NuGet. YARP (Yet Another Reverse Proxy) is a highly customizable reverse proxy built using .NET. The biggest differentiator...","Href":"https://devblogs.microsoft.com/dotnet/announcing-yarp-1-0-release/","RawContent":null},{"Title":"Announcing .NET MAUI Preview 10","PublishedOn":"2021-11-08T19:24:51+00:00","CommentsCount":30,"FacebookCount":0,"Summary":".NET Multi-platform App UI (MAUI) Preview 10 is now available atop the stable release of .NET 6, and you can acquire it today in the preview channel of Visual Studio 2022. This new release includes...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-maui-preview-10/","RawContent":null},{"Title":".NET November 2021 Updates – 5.0.12 and 3.1.21","PublishedOn":"2021-11-08T18:20:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET November 2021 Updates. These updates contains reliability and other improvements. See the individual release notes for details on updated packages.\nYou can...","Href":"https://devblogs.microsoft.com/dotnet/november-2021-updates/","RawContent":null},{"Title":"Announcing .NET 6 — The Fastest .NET Yet","PublishedOn":"2021-11-08T16:03:44+00:00","CommentsCount":66,"FacebookCount":0,"Summary":"Welcome to .NET 6. Today&#8217;s release is the result of just over a year&#8217;s worth of effort by the .NET Team and community. C# 10 and F# 6 deliver language improvements that make your code...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-6/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"1056946441","IsPullRequest":false,"CreatedAt":"2021-11-18T05:09:05","Actor":"sipi41","Number":"38488","RawContent":null,"Title":"Blazor - disposed DbContext conflicts with other instance of DbContext","State":"open","Body":"I think I found an error while trying to update an entity on my blazor server page.  The error I get is this:\r\n\r\n**A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext.**\r\n\r\nFirst I receive a parameter, in this case the CustomerId, something like this:\r\n\r\n`\r\n[Parameter]\r\n    public int id { get; set; }\r\nprivate Customer? customer { get; set; }\r\n`\r\n\r\nNow Customer has inside a list of pets and other properties, now I search for the Customer like this:\r\n\r\n`protected override async Task OnParametersSetAsync(){\r\n\r\nusing AppDbContext db = await DbContextFactory.CreateDbContextAsync();\r\n        customer = await db.Customers\r\n            .Include(i => i.Pets)\r\n            .FirstOrDefaultAsync(f => f.Id == id);\r\n\r\n        await db.DisposeAsync();\r\n\r\n    }`\r\n\r\nThis works like a charm! it load correctly showing the Customer info, but before I show the data, I make something like this:\r\n`If(customer is null){<p>Loading</p>} else {\r\nif(customer.Pets.Count == 0) { --------------> LINE SHOWING THE ERROR\r\n<p>No pets yet</p>} else {\r\n  foreach... etc etc etc\r\n}\r\n .... MY HTML SHOWING THE CLIENT INFO ...\r\n}`\r\n\r\nSo when the OnParameterSetAsync method runs, it fills the customer property with a Customer entity and as you can see, I 'm using the DbContextFactory to create a dbcontext and I make sure to dispose the dbcontext (using should do this perfectly but just in case), so basically my understanding is that I have an entity of type Customer (with the list of Pets) separated from the dbcontext, as the dbcontext was disposed.\r\n\r\nNow, after the Customer is loaded, I created a form field to update a vaccine date on each pet, so I created a method to update this value (if the user wants to of course) like this:\r\n`private async Task UpdateRabiesVaccine(int PetId)\r\n    {\r\n\r\n        Pet pet = customer.Pets.FirstOrDefault(f => f.Id == PetId);\r\n\r\n        if (pet is not null)\r\n        {\r\n            pet.RabiesVaccineExpiresOn = DateTime.Now;\r\n\r\n            using AppDbContext mydb = await DbContextFactory.CreateDbContextAsync();\r\n\r\n             mydb.Update(pet);\r\n                await mydb.SaveChangesAsync();\r\n            await mydb.DisposeAsync();\r\n\r\n        }\r\n\r\n    }`\r\n\r\nWhat I did is, I did search for the Pet in the list of pets loaded inside my Customer entity, once I found it, update the value then, I did open a new dbcontext and tried to update the entity. The app immediately goes into ERROR saying that a simple count of entities is producing a conflict but makes no sense, the update of my method goes as desired, in other words, the date update is saved correctly in the database, is just that it for some reason after the update, the page says this operation conflicts with other, the problem I see is that the method OnParameterSetAsync did run a while ago, when the page was loading, the page is completely loaded, in fact at this point the dbcontext should not exist anymore, so this method when is called creates a new instance... makes no sense. \r\n\r\nThe only way to make this works is if I lookup for the instance directly into the new dbcontext, not in the list I already have.  The app swears the first dbcontext (the one created in OnParameterSetAsync ) is dead, as I tried to get data like notes, etc and it shows me an error saying it has been disposed, so how's possible that I cant make this update way after and conflict?\r\n\r\nPlease help!\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38488","RelatedDescription":"Open issue \"Blazor - disposed DbContext conflicts with other instance of DbContext\" (#38488)"},{"Id":"1056940058","IsPullRequest":true,"CreatedAt":"2021-11-18T04:56:55","Actor":"ShreyasJejurkar","Number":"38487","RawContent":null,"Title":"fix - Error message rename `[FromService]` -> `[FromServices]`","State":"open","Body":"Error message rename `[FromService]` -> `[FromServices]`","Url":"https://github.com/dotnet/aspnetcore/pull/38487","RelatedDescription":"Open PR \"fix - Error message rename `[FromService]` -> `[FromServices]`\" (#38487)"},{"Id":"1056938060","IsPullRequest":false,"CreatedAt":"2021-11-18T04:52:30","Actor":"NbN12","Number":"38486","RawContent":null,"Title":"Something wrong with AuthorizationMessageHandler in .net 6","State":"open","Body":"Hello, I currently follow this doc about attaching token to outgoing request for my blazor wasm (.net 6) based on this doc [ASP.NET Core Blazor WebAssembly additional security scenarios](https://docs.microsoft.com/en-us/aspnet/core/blazor/security/webassembly/additional-scenarios?view=aspnetcore-6.0) but I got 2 issues:\r\n\r\n* The first one I config like this\r\n```\r\nbuilder.Services.AddScoped<AuthorizationMessageHandler>();\r\nbuilder.Services.AddScoped(sp => new HttpClient(\r\n    sp.GetRequiredService<AuthorizationMessageHandler>()\r\n    .ConfigureHandler(\r\n        authorizedUrls: new[]\r\n        {\r\n            \"http://localhost:5075/api/users\",\r\n            \"http://localhost:5075/api/products\",\r\n        }\r\n    ))\r\n{\r\n    BaseAddress = new Uri(\"http://localhost:5075/api/\")\r\n});\r\n```\r\nand when I use it. It give me error in console chrome like this\r\n```\r\nMicrosoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\r\n      Unhandled exception rendering component: The inner handler has not been assigned.\r\nSystem.InvalidOperationException: The inner handler has not been assigned.\r\n   at System.Net.Http.DelegatingHandler.SetOperationStarted()\r\n   at System.Net.Http.DelegatingHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.AuthorizationMessageHandler.<>n__0(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.AuthorizationMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\r\n   at System.Net.Http.Json.HttpClientJsonExtensions.<GetFromJsonAsyncCore>d__13`1[[System.Collections.Generic.List`1[[EcommerceClient.Models.ProductsModel, EcommerceClient, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at EcommerceClient.Services.ProductService.GetProductsAsync() in F:\\Nguyen\\Project\\Hobby-Projects\\Ecommerce\\dotnet\\EcommerceClient\\Services\\ProductService.cs:line 30\r\n   at EcommerceClient.Pages.Index.OnInitializedAsync() in F:\\Nguyen\\Project\\Hobby-Projects\\Ecommerce\\dotnet\\EcommerceClient\\Pages\\Index.razor:line 11\r\n   at Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)\r\n```\r\n\r\n* For the second one I use like this:\r\n\r\n```\r\nbuilder.Services.AddScoped<CustomAuthorizationMessageHandler>();\r\nbuilder.Services.AddHttpClient(\"WebAPI\", client =>\r\n{\r\n    client.BaseAddress = new Uri(\"http://localhost:5075/api/\");\r\n})\r\n.AddHttpMessageHandler<CustomAuthorizationMessageHandler>();\r\nbuilder.Services.AddScoped(sp => sp.GetRequiredService<IHttpClientFactory>().CreateClient(\"WebAPI\"));\r\n```\r\n\r\nCustomAuthorizationMessageHandler.cs\r\n\r\n```\r\nusing Microsoft.AspNetCore.Components;\r\nusing Microsoft.AspNetCore.Components.WebAssembly.Authentication;\r\n\r\nnamespace EcommerceClient.Services\r\n{\r\n    public class CustomAuthorizationMessageHandler : AuthorizationMessageHandler\r\n    {\r\n        public CustomAuthorizationMessageHandler(IAccessTokenProvider provider, NavigationManager navigation) : base(provider, navigation)\r\n        {\r\n            ConfigureHandler(\r\n                authorizedUrls: new[] {\r\n                   \"http://localhost:5075/api/users\",\r\n                   \"http://localhost:5075/api/products\"\r\n                });\r\n        }\r\n    }\r\n}\r\n```\r\nIt seems fine when first loading but when I go to another url and start use it. It gives me those error below:\r\n\r\n```\r\nMicrosoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\r\n      Unhandled exception rendering component: The added or subtracted value results in an un-representable DateTime. (Parameter 'value')\r\nSystem.ArgumentOutOfRangeException: The added or subtracted value results in an un-representable DateTime. (Parameter 'value')\r\n   at System.DateTime.ThrowDateArithmetic(Int32 param)\r\n   at System.DateTime.AddTicks(Int64 value)\r\n   at System.DateTime.Add(Double value, Int32 scale)\r\n   at System.DateTime.AddMinutes(Double value)\r\n   at System.DateTimeOffset.AddMinutes(Double minutes)\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.AuthorizationMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\r\n   at EcommerceClient.Services.AuthService.LoginAsync(LoginModel loginModel) in F:\\Nguyen\\Project\\Hobby-Projects\\Ecommerce\\dotnet\\EcommerceClient\\Services\\AuthService.cs:line 48\r\n   at EcommerceClient.Pages.Auth.Login.HandleValidSubmitAsync() in F:\\Nguyen\\Project\\Hobby-Projects\\Ecommerce\\dotnet\\EcommerceClient\\Pages\\Auth\\Login.razor:line 25\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.Forms.EditForm.HandleSubmitAsync()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)\r\n```\r\n\r\nwhich indicates line 48 in my AuthService:\r\n\r\n```\r\nusing System.Net.Http.Json;\r\n\r\nnamespace EcommerceClient.Services;\r\n\r\npublic class AuthService : IAuthService\r\n{\r\n    private readonly string Prefix = \"auth\";\r\n    private readonly JsonSerializerOptions _jsonSerializerOptions = new JsonSerializerOptions\r\n    {\r\n        PropertyNameCaseInsensitive = true\r\n    };\r\n    private readonly ILogger<AuthService> _logger;\r\n    private readonly HttpClient _client;\r\n    private readonly AuthenticationStateProvider _provider;\r\n    private readonly IStorageService _storageService;\r\n\r\n    public AuthService(\r\n        ILogger<AuthService> logger,\r\n        HttpClient client,\r\n        AuthenticationStateProvider provider,\r\n        IStorageService storageService)\r\n    {\r\n        _logger = logger;\r\n        _client = client;\r\n        _provider = provider;\r\n        _storageService = storageService;\r\n    }\r\n\r\n    public async Task<LoginResponse> LoginAsync(LoginModel loginModel)\r\n    {\r\n        try\r\n        {\r\n            var responseMessage = await _client.PostAsJsonAsync<LoginModel>($\"{Prefix}/login\", loginModel);\r\n            var loginResult = await JsonSerializer.DeserializeAsync<LoginResponse>(\r\n                await responseMessage.Content.ReadAsStreamAsync(),\r\n                _jsonSerializerOptions\r\n            );\r\n\r\n            if (responseMessage.IsSuccessStatusCode)\r\n            {\r\n                await _storageService.SetItemAsync(Constant.JWT_TOKEN_NAME, loginResult.Token);\r\n            }\r\n\r\n            return loginResult!;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw ex;  // This line only for debug purpose and also they indicates here ???\r\n            return new LoginResponse { Error = ex.Message };\r\n        }\r\n    }\r\n\r\n    public async Task LogoutAsync()\r\n    {\r\n        await _storageService.RemoveItemAsync(Constant.JWT_TOKEN_NAME);\r\n        _client.DefaultRequestHeaders.Authorization = null;\r\n    }\r\n\r\n    public async Task<LoginResponse> RegisterAsync(SignupModel signupModel)\r\n    {\r\n        try\r\n        {\r\n            var responseMessage = await _client.PostAsJsonAsync<SignupModel>($\"{Prefix}/signup\", signupModel);\r\n            var loginResult = await JsonSerializer.DeserializeAsync<LoginResponse>(\r\n                await responseMessage.Content.ReadAsStreamAsync(),\r\n                _jsonSerializerOptions\r\n            );\r\n\r\n            if (responseMessage.IsSuccessStatusCode)\r\n                await _storageService.SetItemAsync(Constant.JWT_TOKEN_NAME, loginResult.Token);\r\n\r\n            return loginResult!;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw ex; // This line only for debug purpose\r\n            return new LoginResponse { Error = ex.Message };\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nP\\S: Before I use those everything still normal.\r\nThank you.","Url":"https://github.com/dotnet/aspnetcore/issues/38486","RelatedDescription":"Open issue \"Something wrong with AuthorizationMessageHandler in .net 6\" (#38486)"},{"Id":"1056933956","IsPullRequest":false,"CreatedAt":"2021-11-18T04:43:11","Actor":"ShreyasJejurkar","Number":"38485","RawContent":null,"Title":"Latest .NET SDK 7.0.100-alpha.1.21558.2 not found. Blocking development","State":"open","Body":"Update SDK PR https://github.com/dotnet/aspnetcore/pull/38417\r\n\r\n![image](https://user-images.githubusercontent.com/17148381/142353018-8ba3e064-f6fb-4f8b-9bd7-f9ae44b290fb.png)\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38485","RelatedDescription":"Open issue \"Latest .NET SDK 7.0.100-alpha.1.21558.2 not found. Blocking development\" (#38485)"},{"Id":"1056915082","IsPullRequest":false,"CreatedAt":"2021-11-18T04:17:20","Actor":"ParadiseFallen","Number":"38484","RawContent":null,"Title":"[BUG]: Reiterate. <PageTitle></PageTitle> not works in WebAssemblyPrerendered mode","State":"closed","Body":"This is reiteration of #38192\r\n\r\n## Describe the bug\r\nWhen you using WebAssemblyPrerendered mode\r\n```razor\r\n<component type=\"typeof(Client.App)\" render-mode=\"WebAssemblyPrerendered\" />\r\n```\r\nfor app any change of head outlet wont work.\r\n\r\nIt seems that head content is changed by javascript call on client side only after app loaded and run.\r\nIt dosen't work when you trying to prerender on server. (check #38192)\r\n\r\n## To Reproduce\r\nhttps://github.com/ParadiseFallen/WasmBlazorPrerendered\r\nJust run Host project. look at Client project.\r\nopen link/counter\r\nafter some time title will update to \"Counter 0\"\r\n\r\nOpen postman\r\nSend [GET] link/counter\r\nIn markup title is Client\r\n\r\n## Exceptions (if any)\r\nno\r\n\r\n## Further technical details\r\n.net 6\r\nVS 2022 Current\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38484","RelatedDescription":"Closed issue \"[BUG]: Reiterate. <PageTitle></PageTitle> not works in WebAssemblyPrerendered mode\" (#38484)"},{"Id":"1056812173","IsPullRequest":true,"CreatedAt":"2021-11-18T01:10:20","Actor":"dotnet-maestro[bot]","Number":"38483","RawContent":null,"Title":"[main] Update dependencies from dotnet/efcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 8ce5251e-8269-419d-3b2a-08d8b8050dda\r\n- **Build**: 20211117.15\r\n- **Date Produced**: November 18, 2021 3:55:10 AM UTC\r\n- **Commit**: ae256a1d3681815115feba393b46221e1883410d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **dotnet-ef**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-alpha.1.21567.8 to 7.0.0-alpha.1.21567.15][1]\r\n\r\n[1]: https://github.com/dotnet/efcore/compare/1876c93...ae256a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/38483","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/efcore\" (#38483)"},{"Id":"1056774313","IsPullRequest":false,"CreatedAt":"2021-11-18T00:09:09","Actor":"khalidabuhakmeh","Number":"38482","RawContent":null,"Title":"Inferred Parameter Error Message Suggests Incorrect Attribute","State":"open","Body":"<!--\n\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\n\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\n\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\n\n-->\n\n### Describe the bug\n\nWhen presented with the error for \"inferred parameter is not allowed\", the attribute suggested is `[FromService]` which is incorrect. It should be `[FromServices]`. It looks like a spelling error.\n\nhttps://twitter.com/buhakmeh/status/1461081713690435600?s=21\n\n### To Reproduce\n\nAdd an minimal endpoint using `MapGet` with an inferred parameter and look at the error message. See the tweet above.\n\n<!--\nWe ❤ code! Point us to a minimalistic repro project hosted in a public GitHub repo.\nFor a repro project, create a new ASP.NET Core project using the template of your choice, apply the minimum required code to result in the issue you're observing.\n\nWe will close this issue if:\n- The repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\n- If we will not be able to repro the behavior you're reporting.\n- If the repro project is attached as a `.zip` file.\n- If the GitHub repro project is set to `Private`.\n-->\n\n### Exceptions (if any)\n<!--\nInclude the exception you get when facing this issue\n-->\n\n### Further technical details\n\n.NET 6","Url":"https://github.com/dotnet/aspnetcore/issues/38482","RelatedDescription":"Open issue \"Inferred Parameter Error Message Suggests Incorrect Attribute\" (#38482)"},{"Id":"1056436380","IsPullRequest":true,"CreatedAt":"2021-11-17T23:38:30","Actor":"dotnet-maestro[bot]","Number":"38480","RawContent":null,"Title":"[main] Update dependencies from dotnet/efcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 8ce5251e-8269-419d-3b2a-08d8b8050dda\r\n- **Build**: 20211117.8\r\n- **Date Produced**: November 17, 2021 9:34:49 PM UTC\r\n- **Commit**: 1876c93eb50813bac2edee421dae2d239173181e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **dotnet-ef**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-alpha.1.21566.5 to 7.0.0-alpha.1.21567.8][1]\r\n\r\n[1]: https://github.com/dotnet/efcore/compare/1aa75cb...1876c93\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/38480","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/efcore\" (#38480)"},{"Id":"1055605259","IsPullRequest":false,"CreatedAt":"2021-11-17T21:17:33","Actor":"candrewtemenoscom","Number":"38460","RawContent":null,"Title":"IAsyncEnumerable with System.Text.Json in IIS 10 - problem","State":"closed","Body":"I am trying to use the Asynchronous iterator pattern to provide streaming Web API hosting in IIS. The application reads the data from DB asynchronously and yield return each row out to the response stream. However, I found that the row data did not come out one by one but in a single chuck. For example, in a 10 row datatable,  it will show one row on the browser and then waiting for a while and the 9 rows altogethers. However, if I switch to use Krestrel as hosting. The behaviour is correct that it splits out one row at a time. It seems that there is a problem to use IIS as hosting for streaming API using the asp.net core 6. Is it a bug","Url":"https://github.com/dotnet/aspnetcore/issues/38460","RelatedDescription":"Closed issue \"IAsyncEnumerable with System.Text.Json in IIS 10 - problem\" (#38460)"},{"Id":"1056524885","IsPullRequest":false,"CreatedAt":"2021-11-17T19:19:24","Actor":"MaximRouiller","Number":"38481","RawContent":null,"Title":"`UseStaticFiles` should display the default PhysicalFileProvider default path when using a constructor that doesn't override the default `IFileProvider`","State":"open","Body":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\n-->\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n\r\nThis request is related to a discoverability issue for `UseStaticFiles` extension. If do not start from a default template and add `UseStaticFiles()`, the inline xmldoc do not describe the default local physical path it will try to fetch the static files from. \r\n\r\n* Running `dotnet run` does not log the issue in the console that no path `/wwwroot` exist in the project and that `UseStaticFiles` will do nothing.\r\n* Creating a static file at the root and trying to match the url and the physical path only returns a 404 without any more help.\r\n\r\n![image](https://user-images.githubusercontent.com/209384/142266593-147b93d6-d75a-4cc2-81ca-9ca5c6a9d4b3.png)\r\n\r\n### Describe the solution you'd like\r\n\r\nDefault values like `/wwwroot` for static files should be document in the xmldoc of the API at the point of calling as to help people avoid having to switch context between their code and the docs. \r\n\r\nAdditionally, calling the extension `UseStaticFiles` while the default physical path `/wwwroot` doesn't exist should create an warning message in the logs to warn the developer of a misconfiguration. If implemented, this message should only be shown once as to avoid polluting the logs.\r\n\r\n### Additional context\r\n\r\nMy context here is for new adopter of .NET that are simply trying to create a simple API. It should be easy for them to create code without relying on the docs unless they are stuck.","Url":"https://github.com/dotnet/aspnetcore/issues/38481","RelatedDescription":"Open issue \"`UseStaticFiles` should display the default PhysicalFileProvider default path when using a constructor that doesn't override the default `IFileProvider`\" (#38481)"},{"Id":"1056416769","IsPullRequest":false,"CreatedAt":"2021-11-17T17:45:58","Actor":"daniel-p-tech","Number":"38479","RawContent":null,"Title":"[Blazor] CascadingTypeParameter problem","State":"open","Body":"Hi,\r\n\r\nI'm trying to refactor my existing components to use the newly introduced ``CascadingTypeParameter`` attribute but I'm running into compiler errors.\r\n\r\nBlzTableGrid.razor (this is the main grid component)\r\n```razor\r\n@attribute [CascadingTypeParameter(nameof(TItem))]\r\n@typeparam TItem\r\n\r\n<CascadingValue Value=\"this\" IsFixed=\"true\">\r\n    @ColumnsTemplate\r\n</CascadingValue>\r\n...\r\n```\r\n\r\nBlzTableGrid.razor.cs\r\n```csharp\r\npublic partial class BlzTableGrid<TItem> where TItem : class\r\n{\r\n    [Parameter]\r\n    public RenderFragment ColumnsTemplate { get; set; }\r\n...\r\n```\r\n\r\nBlzGridBaseColumn.cs\r\n```csharp\r\npublic abstract partial class BlzGridBaseColumn<TItem> : ComponentBase where TItem : class\r\n{\r\n    [CascadingParameter]\r\n    internal BlzTableGrid<TItem> Grid { get; set; }\r\n...\r\n```\r\n\r\nBlzGridColumn.cs\r\n```csharp\r\npublic class BlzGridColumn<TItem> : BlzGridBaseColumn<TItem>, IGridFieldColumn<TItem> where TItem : class\r\n{\r\n    [Parameter]\r\n    public string FieldName { get; set; }\r\n...\r\n```\r\n\r\nTableGrid.razor (page consuming the grid component)\r\n```razor\r\n<BlzTableGrid\r\n    TItem=\"WeatherForecastLookup\"\r\n    Items=\"WeatherForecasts\"\r\n\r\n    <ColumnsTemplate>\r\n        <BlzGridEditColumn />\r\n        <BlzGridDeleteColumn />\r\n        <BlzGridViewColumn />\r\n        <BlzGridColumn Title=\"Date\" FieldName=\"@nameof(WeatherForecastLookup.Date)\" Format=\"d\" Width=\"10rem\" />\r\n...\r\n```\r\n\r\nI'm getting the following compiler error for what seems to be each column in ``TableGrid.razor`` page:\r\n\r\n**>C:\\Projects\\Blazor-Components\\DemoApp\\Microsoft.NET.Sdk.Razor.SourceGenerators\\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator\\Pages_Grid_TableGrid_razor.g.cs(563,29,563,34): error CS0449: The 'class', 'struct', 'unmanaged', 'notnull', and 'default' constraints cannot be combined or duplicated, and must be specified first in the constraints list.**\r\n\r\nThank you for your help.\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38479","RelatedDescription":"Open issue \"[Blazor] CascadingTypeParameter problem\" (#38479)"},{"Id":"1056402231","IsPullRequest":false,"CreatedAt":"2021-11-17T17:29:11","Actor":"pranavkm","Number":"38477","RawContent":null,"Title":"Use overload of StreamResponseBodyFeature that accepts the previous feature in BrowserRefresh","State":"open","Body":"Code in question: https://github.com/dotnet/sdk/blob/main/src/BuiltInTools/BrowserRefresh/BrowserRefreshMiddleware.cs#L31-L32\r\nOverload to use: https://github.com/dotnet/aspnetcore/blob/f186d9c9814825d70245db608dbf335a04727f4b/src/Http/Http/src/StreamResponseBodyFeature.cs#L37\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38477","RelatedDescription":"Open issue \"Use overload of StreamResponseBodyFeature that accepts the previous feature in BrowserRefresh\" (#38477)"},{"Id":"1055712735","IsPullRequest":false,"CreatedAt":"2021-11-17T17:05:56","Actor":"sangeethnandakumar","Number":"38464","RawContent":null,"Title":"Visual Studio 2022 Launches Chrome - Only with limited features when running standalone React.Js projects","State":"closed","Body":"Description\r\n1. I created a Standalone React app in Visual Studio 2022.\r\n2. When I launch my app, It always opens in a chrome window with no extensions, bookmarks, logins, profiles etc.. something similar to an incognito window. (Image attached)\r\n3. My application uses Google authentication for login.\r\n4. But when browser opens like this Google won't allow to login due to some security reasons.\r\n5. Then I had to copy the exact URL and paste it in a standard chrome browser for it to works flawlessly.\r\n\r\nWhy Visual Studio launches Chrome with this limited support. I think there are some flags passing to Chrome to work like this.\r\nHow can I change this behavior?\r\n\r\nHow To Reproduce\r\n1. Create a standalone React.Js project in Visual Studio 2022\r\n2. Launch it\r\n\r\nImport Part In Package.json\r\n```\r\n\"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  }\r\n```\r\n\r\n**WHEN OPENS FROM VISUAL STUDIO**\r\n\r\n![issue](https://user-images.githubusercontent.com/24974154/142138404-93d86796-2df4-467f-bd49-e79abf7b579e.png)\r\n\r\n**WHEN MANUALY PUT URL IN A STANDARD CHROME BROWSER**\r\n\r\n![issue2](https://user-images.githubusercontent.com/24974154/142138507-8033dc65-550f-42de-9847-b10b78a1753a.png)\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38464","RelatedDescription":"Closed issue \"Visual Studio 2022 Launches Chrome - Only with limited features when running standalone React.Js projects\" (#38464)"},{"Id":"1056359742","IsPullRequest":false,"CreatedAt":"2021-11-17T16:52:13","Actor":"vsfeedback","Number":"38476","RawContent":null,"Title":"Slow Blazor wasm build in Visual Studio 2022 .NET 5.0 based","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Slow-Blazor-wasm-build-in-Visual-Studio-/1579238)._\n\n---\n[regression] [worked-in:2019]\nI have a quite simple Blazor WASM app, created from the Blazor client/server template. Besides Blazor client and server projects it also has three more library projects.  All .NET 5.0.  Everything works in Visual Studio 2019. The solution builds in 5 seconds.\nWhen I open it in Visual studio 2022 release (and I've noticed that behavior in the preview), the same solution hangs for about a minute during the build. \"dotnet build\" from the command line - 5 seconds . When I build library projects individually - compile time is almost instant.   When I change project bindings to .NET 6  - the build is under 5 seconds. Back to .NET 5 - a minute.\nI cannot upgrade to .NET 6 at the moment. \nPlease advise.\nThanks.\n\nProject Performance Summary:\n5>        4 ms  I:\\Wasm.Utils.csproj   5 calls\n5>        4 ms  I:\\Wasm.Contracts.csproj   5 calls\n5>       10 ms  I:.\\TrialApp.Data.csproj   5 calls\n5>       24 ms  I:\\TrialApp.Web.Client.csproj   5 calls\n5>    42015 ms  I:\\TrialApp.Web.Server.csproj   1 calls\n5>\n5>Target Performance Summary:\n5>        0 ms  _CollectTargetFrameworkForTelemetry        1 calls\n5>        0 ms  ResolveRazorComponentInputs                1 calls\n5>        0 ms  _ComputeCssScope                           1 calls\n5>        0 ms  _ResolveCssScopes                          1 calls\n5>        0 ms  PrepareForRazorComponentGenerate           1 calls\n5>        0 ms  _RemoveRazorDeclartionsFromCompile         1 calls\n5>        0 ms  RazorComponentGenerateCore                 1 calls\n5>        0 ms  RazorComponentGenerate                     1 calls\n5>        0 ms  GenerateCompiledExpressionsTempFile        1 calls\n5>        0 ms  _GenerateRazorAssemblyInfo                 1 calls\n5>        0 ms  _BeforeVBCSCoreCompile                     1 calls\n5>        0 ms  AddImplicitDefineConstants                 1 calls\n5>        0 ms  _ComputeSkipAnalyzers                      1 calls\n5>        0 ms  PreXsdCodeGen                              1 calls\n5>        0 ms  _ReportUpgradeNetAnalyzersNuGetWarning     1 calls\n5>        0 ms  AfterCompile                               1 calls\n5>        0 ms  ResolveRazorConfiguration                  1 calls\n5>        0 ms  AfterRebuild                               1 calls\n5>        0 ms  GenerateAssemblyInfo                       1 calls\n5>        0 ms  CoreGenerateAssemblyInfo                   1 calls\n5>        0 ms  BeforeResGen                               1 calls\n5>        0 ms  CoreResGen                                 1 calls\n5>        0 ms  AfterResGen                                1 calls\n5>        0 ms  ResGen                                     1 calls\n5>        0 ms  PrepareResources                           1 calls\n5>        0 ms  TypeScriptDeleteOutputFromOtherConfigs     1 calls\n5>        0 ms  GetTypeScriptOutputForPublishing           1 calls\n5>        0 ms  Compile                                    1 calls\n5>        0 ms  SetWin32ManifestProperties                 1 calls\n5>        0 ms  GenerateMSBuildEditorConfigFileShouldRun   1 calls\n5>        0 ms  _SetTargetFrameworkMonikerAttribute        1 calls\n5>        0 ms  GenerateTargetFrameworkMonikerAttribute    1 calls\n5>        0 ms  GetAssemblyVersion                         1 calls\n5>        0 ms  InitializeSourceControlInformation         1 calls\n5>        0 ms  AddSourceRevisionToInformationalVersion    1 calls\n5>        0 ms  GetAssemblyAttributes                      1 calls\n5>        0 ms  _GenerateCompileInputs                     1 calls\n5>        0 ms  PrepareResourceNames                       1 calls\n5>        0 ms  _GenerateSatelliteAssemblyInputs           1 calls\n5>        0 ms  GetTargetPathWithTargetPlatformMoniker     1 calls\n5>        0 ms  _RazorPrepareForRun                        1 calls\n5>        0 ms  _IncludeGeneratedStaticWebAssetsManifest   1 calls\n5>        0 ms  _RazorGetCopyToOutputDirectoryItems        1 calls\n5>        0 ms  _PopulateCommonStateForGetCopyToOutputDirectoryItems   1 calls\n5>        0 ms  GetTypeScriptCopyToOutputDirectoryItems    1 calls\n5>        0 ms  AddDepsJsonAndRuntimeConfigToCopyItemsForReferencingProjects   1 calls\n5>        0 ms  _CopySourceItemsToOutputDirectory          1 calls\n5>        0 ms  _ComputeUserRuntimeAssemblies              1 calls\n5>        0 ms  ComputeDependencyFileCompilerOptions       1 calls\n5>        0 ms  _ResolveRazorTargetPath                    1 calls\n5>        0 ms  PrepareForRun                              1 calls\n5>        0 ms  CoreBuild                                  1 calls\n5>        0 ms  AfterBuild                                 1 calls\n5>        0 ms  Build                                      1 calls\n5>        0 ms  CleanupEmptyRefsFolder                     1 calls\n5>        0 ms  RazorCompile                               1 calls\n5>        0 ms  GenerateRazorTargetAssemblyInfo            1 calls\n5>        0 ms  ResolveRazorCompileInputs                  1 calls\n5>        0 ms  _ResolveRazorGenerateOutputs               1 calls\n5>        0 ms  _ResolveScopedCssOutputs                   1 calls\n5>        0 ms  _GenerateScopedCssFiles                    1 calls\n5>        0 ms  ResolveStaticWebAssetsConfiguration        1 calls\n5>        0 ms  _AddGeneratedScopedCssFiles                1 calls\n5>        0 ms  ResolveCurrentProjectStaticWebAssetsInputs   1 calls\n5>        0 ms  _AddGeneratedScopedCssFilesForReference    1 calls\n5>        0 ms  _BlazorWasmReplaceBundle                   1 calls\n5>        0 ms  CreateSatelliteAssemblies                  1 calls\n5>        0 ms  _ComputeCssBundles                         1 calls\n5>        0 ms  ResolveStaticWebAssetsInputs               1 calls\n5>        0 ms  BundleScopedCssFiles                       1 calls\n5>        0 ms  _PrepareForScopedCss                       1 calls\n5>        0 ms  _PrepareForStaticWebAssets                 1 calls\n5>        0 ms  AssignRazorGenerateTargetPaths             1 calls\n5>        0 ms  _RazorEnsureCompiled                       1 calls\n5>        0 ms  PrepareForRazorGenerate                    1 calls\n5>        0 ms  _AddScopedCssBundles                       1 calls\n5>        0 ms  CreateCustomManifestResourceNames          1 calls\n5>        0 ms  BeforeCompile                              1 calls\n5>        0 ms  Rebuild                                    1 calls\n5>        0 ms  ResolveRazorGenerateInputs                 1 calls\n5>        0 ms  GetReferenceAssemblyPaths                  1 calls\n5>        0 ms  GetFrameworkPaths                          1 calls\n5>        0 ms  BuildOnlySettings                          1 calls\n5>        0 ms  BeforeBuild                                1 calls\n5>        0 ms  CleanXsdCodeGen                            1 calls\n5>        0 ms  Clean                                      1 calls\n5>        0 ms  BeforeRebuild                              1 calls\n5>        0 ms  BeforeClean                                1 calls\n5>        0 ms  _DefaultMicrosoftNETPlatformLibrary        1 calls\n5>        0 ms  CheckFileSystemCaseSensitive               1 calls\n5>        0 ms  _ComputePackageReferencePublish            1 calls\n5>        0 ms  AfterClean                                 1 calls\n5>        0 ms  CleanPublishFolder                         1 calls\n5>        0 ms  CleanReferencedProjects                    1 calls\n5>        0 ms  _CheckForTransitiveWindowsDesktopDependencies   1 calls\n5>        0 ms  PrepareProjectReferences                   1 calls\n5>        0 ms  AddTransitiveFrameworkReferences           1 calls\n5>        0 ms  _RemoveComponentAnalyzer                   1 calls\n5>        0 ms  GetTargetFrameworks                        2 calls\n5>        0 ms  IncludeTransitiveProjectReferences         1 calls\n5>        0 ms  ResolvePackageDependenciesForBuild         1 calls\n5>        0 ms  _SdkBeforeRebuild                          1 calls\n5>        0 ms  _AddOutputPathToGlobalPropertiesToRemove   1 calls\n5>        0 ms  _CheckForUnsupportedNETCoreVersion         1 calls\n5>        0 ms  CopyAdditionalFiles                        1 calls\n5>        0 ms  ExpressionBuildExtension                   1 calls\n5>        0 ms  ValidationExtension                        1 calls\n5>        0 ms  _CheckForUnsupportedHostingUsage           1 calls\n5>        0 ms  ResolveReferences                          1 calls\n5>        0 ms  AfterResolveReferences                     1 calls\n5>        0 ms  BeforeResolveReferences                    1 calls\n5>        0 ms  _ChooseAppHost                             1 calls\n5>        0 ms  _GetProjectJsonPath                        1 calls\n5>        0 ms  _CheckForUnsupportedCppNETCoreVersion      1 calls\n5>        0 ms  _GetAppHostPaths                           1 calls\n5>        0 ms  _CheckForObsoleteDotNetCliToolReferences   1 calls\n5>        0 ms  CollectPackageReferences                   1 calls\n5>        0 ms  EnableIntermediateOutputPathMismatchWarning   1 calls\n5>        0 ms  ResolveSDKReferences                       1 calls\n5>        0 ms  _ComputeNETCoreBuildOutputFiles            1 calls\n5>        0 ms  GetNativeManifest                          2 calls\n5>        1 ms  RazorGenerate                              1 calls\n5>        1 ms  ValidateCommandLineProperties              1 calls\n5>        1 ms  ExpandSDKReferences                        1 calls\n5>        1 ms  CoreGenerateRazorTargetAssemblyInfo        1 calls\n5>        1 ms  IncrementalClean                           1 calls\n5>        1 ms  TypeScriptDeleteCompilerOutput             1 calls\n5>        1 ms  CheckForImplicitPackageReferenceOverrides   1 calls\n5>        1 ms  PrepareForBuild                            1 calls\n5>        1 ms  GenerateMSBuildEditorConfigFileCore        1 calls\n5>        1 ms  SplitResourcesByCulture                    1 calls\n5>        1 ms  DesignTimeXamlMarkupCompilation            1 calls\n5>        1 ms  _CreateRazorAssemblyInfoInputsCacheFile    1 calls\n5>        1 ms  PrepareForRazorCompile                     1 calls\n5>        1 ms  AssignTargetPaths                          1 calls\n5>        1 ms  ResolveLockFileAnalyzers                   1 calls\n5>        1 ms  FindConfigFiles                            1 calls\n5>        1 ms  AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzers   1 calls\n5>        1 ms  _PrepareForBundling                        1 calls\n5>        1 ms  _ResolveMvcAssemblyAttributes              1 calls\n5>        1 ms  GenerateMSBuildEditorConfigFile            1 calls\n5>        1 ms  ValidateExecutableReferences               1 calls\n5>        1 ms  _CheckForCompileOutputs                    1 calls\n5>        1 ms  GetRazorTargetAssemblyAttributes           1 calls\n5>        1 ms  _CheckForLanguageAndFeatureCombinationSupport   1 calls\n5>        1 ms  _ResolveGeneratedRazorCompileInputs        1 calls\n5>        1 ms  ReportTypeScriptVersion                    1 calls\n5>        1 ms  _SplitProjectReferencesByFileExistence     1 calls\n5>        1 ms  GetTargetFrameworksWithPlatformForSingleTargetFramework   2 calls\n5>        1 ms  ApplyImplicitVersions                      1 calls\n5>        1 ms  AssignProjectConfiguration                 1 calls\n5>        1 ms  _SetEmbeddedWin32ManifestProperties        1 calls\n5>        1 ms  _IncludeDebugProxyBinariesAsContent        1 calls\n5>        1 ms  _CheckForUnsupportedAppHostUsage           1 calls\n5>        1 ms  GetCopyToOutputDirectoryXamlAppDefs        1 calls\n5>        1 ms  _CoreGenerateRazorAssemblyInfo             1 calls\n5>        1 ms  _GetCopyToOutputDirectoryItemsFromThisProject   1 calls\n5>        1 ms  ResolveScopedCssInputs                     1 calls\n5>        1 ms  UpdateAspNetToFrameworkReference           1 calls\n5>        1 ms  _SdkBeforeClean                            1 calls\n5>        1 ms  GetTargetPath                              1 calls\n5>        1 ms  _CreateRazorTargetAssemblyInfoInputsCacheFile   1 calls\n5>        1 ms  _HashRazorGenerateInputs                   1 calls\n5>        2 ms  _CollectAllScopedCssAssets                 1 calls\n5>        2 ms  GenerateNETCompatibleDefineConstants       1 calls\n5>        2 ms  _GenerateRuntimeConfigurationFilesInputCache   1 calls\n5>        2 ms  ResolveLockFileCopyLocalFiles              1 calls\n5>        2 ms  _CheckForInvalidConfigurationAndPlatform   1 calls\n5>        2 ms  _GetRestoreProjectStyle                    1 calls\n5>        3 ms  _RazorCopyFilesToOutputDirectory           1 calls\n5>        3 ms  CheckForDuplicateItems                     1 calls\n5>        3 ms  ResolveLockFileReferences                  1 calls\n5>        3 ms  _BlockWinMDsOnUnsupportedTFMs              1 calls\n5>        4 ms  CopyFilesToOutputDirectory                 1 calls\n5>        4 ms  _DiscoverMvcApplicationParts               1 calls\n5>        4 ms  ResolveAssemblyReferenceRazorGenerateInputs   1 calls\n5>        4 ms  ResolveFrameworkReferences                 1 calls\n5>        5 ms  ProcessFrameworkReferences                 1 calls\n5>        6 ms  _CopyOutOfDateSourceItemsToOutputDirectory   1 calls\n5>        7 ms  GenerateBuildRuntimeConfigurationFiles     1 calls\n5>        7 ms  _GenerateCompileDependencyCache            1 calls\n5>        9 ms  GenerateStaticWebAssetsManifest            1 calls\n5>       10 ms  GetCurrentProjectStaticWebAssets           1 calls\n5>       10 ms  _GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences   1 calls\n5>       11 ms  _ComputeReferenceAssemblies                1 calls\n5>       12 ms  GetCopyToOutputDirectoryItems              1 calls\n5>       12 ms  _CleanGetCurrentAndPriorFileWrites         1 calls\n5>       13 ms  _GetProjectReferenceTargetFrameworkProperties   1 calls\n5>       15 ms  CreateGeneratedAssemblyInfoInputsCacheFile   1 calls\n5>       16 ms  ResolveTargetingPackAssets                 1 calls\n5>       19 ms  _CreateAppHost                             1 calls\n5>       21 ms  ResolveProjectReferences                   1 calls\n5>       22 ms  CoreClean                                  1 calls\n5>       25 ms  GenerateBuildDependencyFile                1 calls\n5>       26 ms  _HandlePackageFileConflicts                1 calls\n5>       28 ms  FindReferenceAssembliesForReferences       1 calls\n5>       29 ms  _CreateStaticWebAssetsInputsCacheFile      1 calls\n5>       35 ms  ResolvePackageAssets                       1 calls\n5>       37 ms  _CopyFilesMarkedCopyLocal                  1 calls\n5>       64 ms  RazorCoreCompile                           1 calls\n5>       72 ms  CoreCompile                                1 calls\n5>       97 ms  ResolveReferencedProjectsStaticWebAssets   1 calls\n5>      185 ms  ResolveAssemblyReferences                  1 calls\n5>    20272 ms  RazorCoreGenerate                          1 calls\n5>    20865 ms  ResolveTagHelperRazorGenerateInputs        1 calls\n5>\n5>Task Performance Summary:\n5>        0 ms  AllowEmptyTelemetry                        1 calls\n5>        0 ms  CombineXmlElements                         2 calls\n5>        0 ms  FindAppConfigFile                          1 calls\n5>        0 ms  AssignCulture                              1 calls\n5>        0 ms  ResolveNonMSBuildProjectOutput             1 calls\n5>        0 ms  GetFrameworkPath                           1 calls\n5>        0 ms  GenerateMSBuildEditorConfig                1 calls\n5>        0 ms  GetAssemblyVersion                         1 calls\n5>        0 ms  CheckFileSystemCaseSensitive               1 calls\n5>        0 ms  WriteCodeFragment                          3 calls\n5>        0 ms  RemoveDuplicates                           3 calls\n5>        0 ms  FindInList                                 1 calls\n5>        0 ms  DiscoverDefaultScopedCssItems              1 calls\n5>        0 ms  ComputeCssScope                            1 calls\n5>        0 ms  ApplyCssScopes                             1 calls\n5>        0 ms  RemoveDir                                  2 calls\n5>        0 ms  CheckForImplicitPackageReferenceOverrides   1 calls\n5>        0 ms  CopyRefAssembly                            1 calls\n5>        0 ms  FindConfigFiles                            1 calls\n5>        1 ms  ResolveAllScopedCssAssets                  1 calls\n5>        1 ms  ReadLinesFromFile                          2 calls\n5>        1 ms  GetReferenceNearestTargetFrameworkTask     1 calls\n5>        1 ms  Touch                                      4 calls\n5>        1 ms  MakeDir                                    3 calls\n5>        1 ms  JoinItems                                  1 calls\n5>        1 ms  ValidateExecutableReferences               1 calls\n5>        1 ms  CheckForDuplicateFrameworkReferences       1 calls\n5>        1 ms  FormatLocalizedString                      1 calls\n5>        1 ms  CombineTargetFrameworkInfoProperties       2 calls\n5>        1 ms  ApplyImplicitVersions                      1 calls\n5>        1 ms  AssignProjectConfiguration                 1 calls\n5>        1 ms  ResolveFrameworkReferences                 1 calls\n5>        1 ms  GenerateV1StaticWebAssetsManifest          1 calls\n5>        1 ms  AssignTargetPath                          10 calls\n5>        1 ms  CheckIfPackageReferenceShouldBeFrameworkReference   2 calls\n5>        1 ms  FindUnderPath                              7 calls\n5>        2 ms  CheckForDuplicateItems                     3 calls\n5>        2 ms  ValidateStaticWebAssetsUniquePaths         1 calls\n5>        2 ms  ResolveAppHosts                            1 calls\n5>        2 ms  ProcessFrameworkReferences                 1 calls\n5>        2 ms  Message                                    5 calls\n5>        2 ms  GetRestoreProjectStyleTask                 1 calls\n5>        3 ms  GetPackageDirectory                        8 calls\n5>        3 ms  CheckForUnsupportedWinMDReferences         1 calls\n5>        3 ms  WriteLinesToFile                           9 calls\n5>        4 ms  FindAssembliesWithReferencesTo             1 calls\n5>        6 ms  GenerateRuntimeConfigurationFiles          1 calls\n5>        9 ms  ConvertToAbsolutePath                      1 calls\n5>       11 ms  CallTarget                                 3 calls\n5>       15 ms  ResolveTargetingPackAssets                 1 calls\n5>       17 ms  Hash                                       7 calls\n5>       19 ms  CreateAppHost                              1 calls\n5>       19 ms  ResolvePackageFileConflicts                1 calls\n5>       20 ms  Delete                                     4 calls\n5>       24 ms  GenerateDepsFile                           1 calls\n5>       35 ms  ResolvePackageAssets                       1 calls\n5>       44 ms  Copy                                       6 calls\n5>      136 ms  Csc                                        2 calls\n5>      136 ms  MSBuild                                    5 calls\n5>      185 ms  ResolveAssemblyReference                   1 calls\n5>    20271 ms  SdkRazorGenerate                           1 calls\n5>    20864 ms  SdkRazorTagHelper                          1 calls\n5>\n5>Build succeeded.\n5>    0 Warning(s)\n5>    0 Error(s)\n5>\n5>Time Elapsed 00:00:42.01\n========== Rebuild All: 5 succeeded, 0 failed, 0 skipped ==========\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/10/2021, 07:29 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/aspnetcore/issues/38476","RelatedDescription":"Open issue \"Slow Blazor wasm build in Visual Studio 2022 .NET 5.0 based\" (#38476)"},{"Id":"1056354884","IsPullRequest":false,"CreatedAt":"2021-11-17T16:48:26","Actor":"yogigrantz","Number":"38475","RawContent":null,"Title":"Blazor httpcontext is renewed upon refreshing the page","State":"open","Body":"### Blazor httpcontext is renewed upon refreshing the page\r\nUsing .net core 6 / Blazor application, when I refresh the page, the httpcontext is renewed. This causes losing the claims, user identity, cookies, and sessions. Current workaround is to use Blazorized.LocalStorage \r\n\r\n### To Reproduce\r\n\r\nhttps://github.com/yogigrantz/BlazorApp1\r\n\r\ndownload the solution and open in VS2022 and run it.\r\n\r\n1. Login with demo / demo -> it would take you to the weather page. \r\n2. Click on Login link on the menu -> It would say that you are authorized. That's good.\r\n3. Go back to weather page, it still say that you are authorized. That's good\r\n4. Set a breakpoint in FetchData code (OnInitializedAsync) before line 15\r\n5. Refresh the page \r\n6. Step into line 15 to authorize the httpcontext, and it could not authorize because the claims are gone\r\n\r\nSince the claims are gone, this statement: \r\n\r\nif (httpContextAccessor.HttpContext.User.Claims.Any(x => x.Type == \"role\" && x.Value == role))\r\n\r\nwould not find any claims\r\n\r\n\r\n### Further technical details\r\n- ASP.NET Core version: 6\r\n- The IDE : VS 2022 on PC\r\n- Dependency injection: HttpContextAccessor\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38475","RelatedDescription":"Open issue \"Blazor httpcontext is renewed upon refreshing the page\" (#38475)"},{"Id":"1056221437","IsPullRequest":true,"CreatedAt":"2021-11-17T16:36:13","Actor":"SteveSandersonMS","Number":"38473","RawContent":null,"Title":"Run InputDate E2E tests on WebAssembly only. Fixes #35018, #34884","State":"closed","Body":"Our `InputDate` E2E tests have been marked as `Skip` for a long time because, unlike all the other E2E tests, we couldn't find any way to make them totally reliable when running on Blazor Server. It appears to be something very special about how keyboard input interacts with asynchrony on those specific input types.\r\n\r\nWe've made multiple attempts to fix this in the past by changing how exactly we simulate user interaction, but roughly 1% flakiness remained.\r\n\r\nSince it's better to at least have coverage for the behaviors on WebAssembly, this PR changes those specific tests into WebAssembly-specific ones.","Url":"https://github.com/dotnet/aspnetcore/pull/38473","RelatedDescription":"Closed or merged PR \"Run InputDate E2E tests on WebAssembly only. Fixes #35018, #34884\" (#38473)"},{"Id":"1056109694","IsPullRequest":true,"CreatedAt":"2021-11-17T16:09:45","Actor":"dotnet-maestro[bot]","Number":"38470","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20211117.1\r\n- **Date Produced**: November 17, 2021 12:10:15 PM UTC\r\n- **Commit**: 10e107debae28de4bd1e710cfe448be3c293e841\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Runtime.CompilerServices.Unsafe**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Net.Http.Json**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.IO.Pipelines**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Threading.Channels**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21562.1 to 7.0.0-alpha.1.21567.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/35704e4...10e107d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/38470","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#38470)"},{"Id":"1056403937","IsPullRequest":false,"CreatedAt":"2021-11-17T15:35:11","Actor":"KarthiSekar24","Number":"38478","RawContent":null,"Title":"Not Able to Navigate Custom URL using GetUriWithQueryParameter","State":"open","Body":"**Bug Description:** \r\n\r\nI need to create a new URI based on the custom path value. But it is not able to achieve from my end.\r\n\r\n**Replication Steps:**\r\n\r\n```\r\nvar uri = NavigationManager.GetUriWithQueryParameter(\"value\",3);\r\nNavigationManager.NavigateTo(uri);\r\n```\r\nIn the above sample it navigate to `https://localhost:7141/?value=3`\r\n\r\nBut i need to Navigate a value using custom path\r\n```\r\n    var path = \"counter\";\r\n   NavigationManager.NavigateTo(path + NavigationManager.GetUriWithQueryParameter(\"value\",3), true);\r\n```\r\n **Expected Result:**  `https://localhost:7141/counter?value=3`\r\n**Actual Result:** `counterhttps://localhost:7141/?value=3`\r\n\r\nFor your reference i have attached the sample, \r\n\r\n[BlazorApp2.zip](https://github.com/dotnet/core/files/7555882/BlazorApp2.zip)\r\n\r\nCould you please suggest any solution to achieve this?\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38478","RelatedDescription":"Open issue \"Not Able to Navigate Custom URL using GetUriWithQueryParameter\" (#38478)"},{"Id":"1056232347","IsPullRequest":false,"CreatedAt":"2021-11-17T14:59:34","Actor":"djfoxer","Number":"38474","RawContent":null,"Title":"Idea: .NET 6 Minimal Api - Set dynamic generated access modifier for \"Program\" class as a \"public\" not \"internal\"","State":"open","Body":"### Is your feature request related to a problem? Please describe.\r\nIt's only idea. It will be much easier if generated `Program` class for minimal API in .NET 6 will have `public` access modifier than `internal` (as it is now). Especially for testing with WebApplicationFactory as an inherited class (with `InternalsVisibleTo`):\r\n\r\n```csharp\r\npublic class MyWebApplicationFactory : WebApplicationFactory<Program>\r\n{\r\n//\r\n}\r\n```\r\n\r\ncurrently solution above throws error:\r\n```\r\nCS0060\tInconsistent accessibility: base class 'WebApplicationFactory<Program>' is less accessible than class 'MyWebApplicationFactory'\r\n```\r\n\r\n### Describe the solution you'd like\r\nGenerate dynamic `Program` class with `public` access modifier.\r\n\r\n### Additional context\r\nCurrent solution, add code to minimal API to change access modifier:\r\n\r\n```csharp\r\n#pragma warning disable CA1050 // Declare types in namespaces\r\npublic partial class Program { }\r\n#pragma warning restore CA1050 // Declare types in namespaces\r\n```\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38474","RelatedDescription":"Open issue \"Idea: .NET 6 Minimal Api - Set dynamic generated access modifier for \"Program\" class as a \"public\" not \"internal\"\" (#38474)"},{"Id":"1056207996","IsPullRequest":false,"CreatedAt":"2021-11-17T14:37:50","Actor":"heckradr","Number":"38472","RawContent":null,"Title":"Blazor Server: Websocket problems with WAN-optimization / change port for SignalR / websocket connection","State":"open","Body":"### Problem\r\nAt one of our customers we have a problem running a blazor server app when accessing the app from a different location as the server. We found already the cause at the WAN optimization (riverbed steelheads). With enabled latency optimization the websocket is unable to connect and the application falls back to long-polling mode. Maybe it's problematically for the steelhead if binary and HTTP traffic will use the same port. If I connect the client to the network at the same location as the server the problem is gone. So this is no client related issue / no browser problem. \r\n\r\nBrowser output with enabled SignalR debugging:\r\n\r\n![WebsocketError](https://user-images.githubusercontent.com/48717990/142219806-03a3d1e2-b65c-410c-ba68-0168cc6b45f4.png)\r\n\r\n### Feature request\r\nWe could solve the issue with a configuration change in the steelheads (add an exception for the corresponding server). I don't like this solution because this will affect also other running web-applications on port 80 at the same system.\r\nI'm wondering if there is a possiblity to change the port for the SignalR connection? I found no easy way for that. Maybe a little bit javascript can do the trick? A simple config option via the Startup.cs would be ideal. So I would be able to run the normal HTTP traffic over port 80 with enabled optimization and another port (not optimized) for the SignalR / websocket traffic. An azure solution is not acceptable for the customer, the app must be hosted on-premise. ","Url":"https://github.com/dotnet/aspnetcore/issues/38472","RelatedDescription":"Open issue \"Blazor Server: Websocket problems with WAN-optimization / change port for SignalR / websocket connection\" (#38472)"},{"Id":"1056193547","IsPullRequest":false,"CreatedAt":"2021-11-17T14:24:54","Actor":"SteveSandersonMS","Number":"38471","RawContent":null,"Title":"InputDate with Type=InputDateType.Time and step=1 doesn't accept keyboard input","State":"open","Body":"Using `<InputDate Type=\"InputDateType.Time\" @bind-Value=\"someDateTimeField\" step=\"1\" />`, you'll be unable to type normally into the input. After each keystroke it behaves as if you've just moved the cursor back to the start, and your next keystroke overwrites the last. This manifests as a test failure in our `InputDateInteractsWithEditContext_TimeInput_Step` E2E test which covers this exact scenario. Or you can repro it manually:\r\n\r\n * Run `BasicTestApp` and go to *Typical Validation* using Edge/Chrome\r\n * Next to *Departure time*, check the *Include seconds* box\r\n * Click inside the textbox below it and start typing 123456.\r\n * Expected: time shows as `12:34:56`\r\n * Actual: depending on how quickly you type, you'll get results like `01:00:00` or `02:00:00` or `03:00:00` with subsequent keystrokes ignored\r\n\r\nThis does seem to be a browser bug, because:\r\n\r\n * It doesn't happen on Firefox. Typing is totally normal there\r\n * It doesn't happen with `datetime-local`. It's very specific to `type=time` with `step=1` when the previous value ends with `:00`.\r\n\r\nEven if it is a browser bug, it's possible that Blazor might be able to work around it. It's hard to repro this issue without involving Blazor so it's probably specific to the way our data binding interacts with the exact sequence of events.","Url":"https://github.com/dotnet/aspnetcore/issues/38471","RelatedDescription":"Open issue \"InputDate with Type=InputDateType.Time and step=1 doesn't accept keyboard input\" (#38471)"},{"Id":"1056076889","IsPullRequest":false,"CreatedAt":"2021-11-17T12:32:40","Actor":"claudiolsmonteiro","Number":"38469","RawContent":null,"Title":"EEFileLoadException when executing Services.AddMvc after upgrading from NET5.0 to NET6.0","State":"open","Body":"### Describe the bug\r\n\r\nAfter the release of NET6.0, my team decided it was a good idea to upgrade our API and Portal to NET6.0.\r\nWe changed every project's TargetFramework to 'net6.0' and upgraded every Nuget to their latest version. We have also changed a couple of methods related to now obsolete references (i.e WebClient -> HttpClient).\r\nOur API started working right away but our Portal started throwing the exceptions written below.\r\nWe thought it could be a problem related to the old Hosting Model, but even after changing to the new one the exceptions are the same.\r\n\r\n\r\nPiece of Code being executed:\r\n```\r\nbuilder.Services.AddMvc(option => option.EnableEndpointRouting = false)\r\n              .AddControllersAsServices()\r\n              .AddTagHelpersAsServices()\r\n              .AddViewComponentsAsServices()\r\n              .AddNewtonsoftJson(options =>\r\n              {\r\n                  options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;\r\n                  options.SerializerSettings.ContractResolver = new DefaultContractResolver();\r\n              });\r\n```\r\n### Exceptions\r\n```\r\nException thrown at 0x00007FFB89384F99 in iisexpress.exe: Microsoft C++ exception: EEFileLoadException at memory location 0x00000068F7D7D310.\r\n\r\nException thrown at 0x00007FFB89384F99 in iisexpress.exe: Microsoft C++ exception: [rethrow] at memory location 0x0000000000000000.\r\n\r\nException thrown at 0x00007FFB89384F99 in iisexpress.exe: Microsoft C++ exception: EEFileLoadException at memory location 0x00000068F7D7D310.\r\n\r\nException thrown at 0x00007FFB89384F99 in iisexpress.exe: Microsoft C++ exception: [rethrow] at memory location 0x0000000000000000.\r\n\r\nException thrown at 0x00007FFB89384F99 in iisexpress.exe: Microsoft C++ exception: EEFileLoadException at memory location 0x00000068F7D7D310.\r\n\r\n\r\n\r\n\r\nSystem.IO.FileNotFoundException: 'Could not load file or assembly 'xxxxx.Client.Portal.Views, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.'\r\n```\r\n\r\n\r\n![iisexpress exception](https://user-images.githubusercontent.com/5596412/142199164-0bfa8ab4-9523-4f63-a476-247e2d6f7ae6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5596412/142199759-00d59879-edb4-4906-8a44-b5c6cd8f8ec8.png)\r\n\r\n\r\n\r\n\r\n### Further technical details\r\n- ASP.NET Core version: NET6.0\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version: Visual Studio 2022  Version 17.0.1\r\n\r\n\r\n\r\n<details>\r\n  <summary>dotnet --info Output</summary>\r\n\r\n```\r\ndotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.100\r\n Commit:    9e8b04bbff\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0\r\n  Commit:  4822e3c3aa\r\n\r\n.NET SDKs installed:\r\n  2.1.519 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.401 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n</details>\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38469","RelatedDescription":"Open issue \"EEFileLoadException when executing Services.AddMvc after upgrading from NET5.0 to NET6.0\" (#38469)"},{"Id":"1055997478","IsPullRequest":false,"CreatedAt":"2021-11-17T11:07:27","Actor":"AlexanderKot","Number":"38468","RawContent":null,"Title":"Excessive memory usage using endpoint.MapControllerRoute - never ending story (continuation of #30092)","State":"open","Body":"### Describe the bug\r\n\r\nExcessive memory usage on Asp.net Core application startup practically the same as described in #30092.\r\n\r\nOur team in process of migration big enterprise level app from ASP.Net MVC5 (472) to .Net Core.\r\nWe have 414 controllers currently and approximately 55K actions (many generic controllers instantiated by IoC and so on). \r\nWe first completed migration to .Core 3.1.21, and having it stabilized try migrate to  5.0.12.\r\nThere we have discovered behavior described in #30092 and continue migration to 6.0.\r\n\r\nThere are memory usage when app is fully initialized and showing login page\r\n(functionality of Controllers\\actions are same and routing works as predicted).\r\n\r\nApproximate results :\r\n| Framework | RAM | Top heap consumption  |\r\n| --- | --- | --- |\r\n|4.7.2   |~900m | In top position of memory dump we can see objects related to our code base. |\r\n|3.1.21 |~2.7G | In top positions mainly MVC routing but our objects can be discovered. |\r\n|5.0.12 |~**6.6G** | In top routing. |\r\n|6.0 |~**7.4->5.7G** | In top routing. |\r\n\r\nIn 6.0 seems as improvement result related to mentioned issue after some idle time some memory released. \r\n\r\nAt the same time we are exploring how to implement multi-tenancy where tenant code is first segment of url.\r\nIn my experiments this feature was commented, when not - routing info seems multiplied on tenants count\r\nso for 2 tenants i have seen >10G after initialization in 5.0.12.  \r\n\r\nSo now we are actively exploring dynamic routing, \r\n\\<sarcasm> as standard mechanism of routing so perfectly improved that cannot be used, except as in demo apps, where it demonstrate good performance. \\</sarcasm>  \r\n\r\nI understood all philosophy about RAM\\CPU tradeoff and so on, but as for me such behavior is **huge regression** comparing to 3.1.21 (cannot say it about 4.72->3.1.21, as have not measured exact influence of routing in RAM consumption there, and migrating from 4.72 to it shows human visible improvement in app reaction).\r\n\r\nProfiling our App on .Net 472 many times I have never seen any significant influence from routing mechanism, so cannot understood why it was needed to do this not optional \"optimization\" in routing with such RAM cost.\r\n\r\n---------------\r\n**.Net 472**\r\n\r\n![47a](https://user-images.githubusercontent.com/1678749/142177930-86da4ab7-3ded-45b4-b553-6583e7ef8d3f.jpg)\r\n![47b](https://user-images.githubusercontent.com/1678749/142178141-57892c4c-af74-4290-aa73-eacc2e6cea8a.jpg)\r\n![47c](https://user-images.githubusercontent.com/1678749/142178244-83c3cc9d-0cbe-40b5-af6c-a8f0a245e6d3.jpg)\r\n\r\n---------------\r\n**.Net Core 3.1.21**\r\n\r\n![3121a](https://user-images.githubusercontent.com/1678749/142178515-38df1b0a-8252-4e3a-aa78-da5a042ad458.jpg)\r\n![3121c](https://user-images.githubusercontent.com/1678749/142178525-cd77a78a-9de3-49d5-ac27-ebb9b62f4e3b.jpg)\r\n\r\n---------------\r\n**.Net Core 5.0.12**\r\n\r\n![5012a](https://user-images.githubusercontent.com/1678749/142178953-39fcdfe8-2c86-4296-ad6f-5f7eeab66523.jpg)\r\n![5012c](https://user-images.githubusercontent.com/1678749/142178957-5ce7b689-a495-48a8-9489-992073fbd8b3.jpg)\r\n\r\n---------------\r\n**.Net Core 6.0**\r\n\r\n![60a1](https://user-images.githubusercontent.com/1678749/142179117-3e9fa99a-f0e4-4feb-abdb-8168b8e85844.jpg)\r\n![60c1](https://user-images.githubusercontent.com/1678749/142179124-38b66621-4f54-46d5-b2ac-e6c8f6586f98.jpg)","Url":"https://github.com/dotnet/aspnetcore/issues/38468","RelatedDescription":"Open issue \"Excessive memory usage using endpoint.MapControllerRoute - never ending story (continuation of #30092)\" (#38468)"},{"Id":"1055854036","IsPullRequest":false,"CreatedAt":"2021-11-17T08:38:09","Actor":"karun-verghese","Number":"38467","RawContent":null,"Title":"TaskCanceled Exception thrown from  Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler class","State":"open","Body":"Dear all,\r\n\r\nWe have a .NET Core Web API service which makes use of the Authentication middleware readily available with .NET 5.0. In our service we have registered 4 different jwt bearer authentication schemes on startup of the service, (why? - that's because we are in the process of migrating from two older identity providers to two newer ones. For example, we are migrating from Azure AD V1 auth endpoints to the Microsoft Identity Platform (V2)). \r\n\r\nIn a number of our deployments we see TaskCanceled exceptions with the below stack trace, when certain api's are called. The api's are all protected by an [Authorize] attribute which makes use of the aforementioned auth schemes that are registered at startup\r\n\r\nDetails of the service:\r\nSDK version: .NET 5.0.401\r\nBase docker image: mcr.microsoft.com/dotnet/aspnet:5.0.10\r\n\r\n We always seem to have 2 of these exceptions thrown simultaeneously:\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException:\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1+<GetConfigurationAsync>d__24.MoveNext (Microsoft.IdentityModel.Protocols, Version=6.7.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+<HandleAuthenticateAsync>d__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.10.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+<HandleAuthenticateAsync>d__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.10.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1+<AuthenticateAsync>d__48.MoveNext (Microsoft.AspNetCore.Authentication, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService+<AuthenticateAsync>d__14.MoveNext (Microsoft.AspNetCore.Authentication.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authorization.Policy.PolicyEvaluator+<AuthenticateAsync>d__2.MoveNext (Microsoft.AspNetCore.Authorization.Policy, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware+<Invoke>d__6.MoveNext (Microsoft.AspNetCore.Authorization.Policy, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware+<Invoke>d__6.MoveNext (Microsoft.AspNetCore.Authentication, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Startup+<>c+<<Configure>b__9_0>d.MoveNext\r\n   ```\r\n   \r\n   And the second exception stack trace:\r\n   \r\n```\r\n  System.Threading.Tasks.TaskCanceledException:\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1+<GetConfigurationAsync>d__24.MoveNext (Microsoft.IdentityModel.Protocols, Version=6.7.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler+<HandleAuthenticateAsync>d__6.MoveNext (Microsoft.AspNetCore.Authentication.JwtBearer, Version=5.0.10.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n```\r\n   \r\n   The troublesome thing is that I can't seem to reproduce this error intentionally. We set up suitable load tests to test the affected api's, but we don't seem to be able to reproduce the failures as part of the load tests, but the errors keep happening in the same environments. As far as I can tell we have configured the middleware correctly as for the majority of our calls we are able to authenticate and authorize correctly (we have automated tests testing various scenarios).\r\n   \r\n   But in certain sporadic cases, we get these exceptions.  ","Url":"https://github.com/dotnet/aspnetcore/issues/38467","RelatedDescription":"Open issue \"TaskCanceled Exception thrown from  Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler class\" (#38467)"},{"Id":"1055787005","IsPullRequest":true,"CreatedAt":"2021-11-17T07:11:17","Actor":"ShreyasJejurkar","Number":"38466","RawContent":null,"Title":"chore - Use `HttpMethods`","State":"open","Body":"Use `HttpMethods` instead of hardcoding. ","Url":"https://github.com/dotnet/aspnetcore/pull/38466","RelatedDescription":"Open PR \"chore - Use `HttpMethods`\" (#38466)"},{"Id":"1055726508","IsPullRequest":false,"CreatedAt":"2021-11-17T05:39:06","Actor":"AndrewTriesToCode","Number":"38465","RawContent":null,"Title":"Razor runtime view compilation via environment variable not working in .NET 6","State":"open","Body":"Runtime view compilation appears to not be working in .NET 6 Razor Pages projects when using the environment variable to specify this behavior as described here:\r\n\r\nhttps://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-compilation?view=aspnetcore-6.0&tabs=visual-studio#conditionally-enable-runtime-compilation-in-an-existing-project\r\n\r\nIf I manually add `AddRazorRuntimeCompilation()` in ConfigureServices it does work though.\r\n\r\nI'm including v6.0.0 of the assembly package:\r\n`<PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"6.0.0\" />`\r\n\r\nAnd my launch profile has the following section:\r\n```\r\n\"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\"\r\n      }\r\n```\r\n\r\nWorked as expected in .NET 5 on the same project.","Url":"https://github.com/dotnet/aspnetcore/issues/38465","RelatedDescription":"Open issue \"Razor runtime view compilation via environment variable not working in .NET 6\" (#38465)"},{"Id":"1055693246","IsPullRequest":false,"CreatedAt":"2021-11-17T04:29:20","Actor":"devncore-james","Number":"38463","RawContent":null,"Title":"Core-React not started API(Server Side)","State":"open","Body":"I tried this step.\r\n```\r\n1. dotnet new react -o my-new-app\r\n2. cd my-new-app/ClientApp\r\n3. npm install\r\n4. npm start in cmd\r\n    // Api server(controller) is not listening.\r\n    // Only started react client.\r\n```\r\nWhen running through the **Visual Studio** (IIS Express or npm), the API server also operates normally.\r\n\r\nI want to operate from **vscode** to the server through **npm start**","Url":"https://github.com/dotnet/aspnetcore/issues/38463","RelatedDescription":"Open issue \"Core-React not started API(Server Side)\" (#38463)"},{"Id":"1055652248","IsPullRequest":false,"CreatedAt":"2021-11-17T03:06:55","Actor":"bronthulke","Number":"38462","RawContent":null,"Title":"InvalidOperationException on POST of form with large data","State":"open","Body":"In a .NET 5 MVC application, I am consistently able to reproduce an error where the POST of a form that includes data from an uploaded image is throwing an error:\r\n\r\nInvalidOperationException: The examined position cannot be less than the previously examined position.\r\n\r\nThe situation I have is that a user uses a file upload component to select an image, and then before submitting the form I set a hidden field value to contain the data (base64) of that image.  The issue ONLY seems to occur when the data for that image gets beyond a certain size.  That size seems to be around 2MB.\r\n\r\nThis same functionality has worked in the past in .NET Framework.\r\n\r\nHere is the full stack:\r\n\r\n```\r\nInvalidOperationException: The examined position cannot be less than the previously examined position.\r\nSystem.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_InvalidExaminedPosition()\r\nSystem.IO.Pipelines.Pipe.AdvanceReader(BufferSegment consumedSegment, int consumedIndex, BufferSegment examinedSegment, int examinedIndex)\r\nSystem.IO.Pipelines.Pipe.AdvanceReader(ref SequencePosition consumed, ref SequencePosition examined)\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2MessageBody.AdvanceTo(SequencePosition consumed, SequencePosition examined)\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2MessageBody.AdvanceTo(SequencePosition consumed)\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestPipeReader.AdvanceTo(SequencePosition consumed)\r\nMicrosoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Antiforgery.DefaultAntiforgeryTokenStore.GetRequestTokensAsync(HttpContext httpContext)\r\nMicrosoft.AspNetCore.Antiforgery.DefaultAntiforgery.ValidateRequestAsync(HttpContext httpContext)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.Filters.ValidateAntiforgeryTokenAuthorizationFilter.OnAuthorizationAsync(AuthorizationFilterContext context)\r\nMicrosoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, object state, bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\nMicrosoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\nMicrosoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\nMicrosoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n\r\nI can see previous discussions about this here https://github.com/dotnet/runtime/issues/37176 and https://github.com/dotnet/aspnetcore/issues/19476 but they didn't contain any solutions that I could see for my case.  One person did say they thought it may have been related to content request size, but in their case they decided that wasn't the cause.\r\n\r\nThe reason I feel at the moment like it's related to content size is that I can successfully submit a form with the exact same image but just a reduced size.  It seems anything above around 2MB gets this error, but around 1.5MB works.\r\n\r\n### To Reproduce\r\nHere is a github repo that you can use to reproduce the issue.  If you select the file \"large-file.jpg\" from the base directory, it should throw the error.  The small-file.jpg will not have the issue.\r\n\r\nhttps://github.com/bronthulke/ReproducingFileUploadIssue\r\n\r\nI've also noted that this issue only occurs when running the site using `dotnet run` (I can't recall what that web host is called?) -- when running in IIS Express it works.\r\n\r\nThe \"fileinput\" javascript library is being used to select the file, turn it into a preview, and then the actual image data is pulled out from that and stored in the \r\n\r\n### Exceptions (if any)\r\nInvalidOperationException: The examined position cannot be less than the previously examined position.\r\n\r\n### Further technical details\r\n- ASP.NET Core version: .NET 5\r\n- VS 2022\r\n\r\n<details>\r\n  <summary>dotnet --info Output</summary>\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.100\r\n Commit:    9e8b04bbff\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0\r\n  Commit:  4822e3c3aa\r\n\r\n.NET SDKs installed:\r\n  5.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n```\r\n</details>\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38462","RelatedDescription":"Open issue \"InvalidOperationException on POST of form with large data\" (#38462)"},{"Id":"1055619079","IsPullRequest":false,"CreatedAt":"2021-11-17T01:57:36","Actor":"VenkateshSrini","Number":"38461","RawContent":null,"Title":"Blazor to run in WASMEdge","State":"open","Body":"\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nAt present blazor runs in browser and can the blazor components can be embedded in mobile apps. The feature request is that can Blazor run in environment like WasmEdge (https://github.com/WasmEdge/WasmEdge). If that is the case then if we can port Kestrel  also to Blazor runtime or much more a light weight version, then we could run API applications using WASMEdge. This will be much  more light weight than containers. There are usecases where the same is possible using Rust runtime. Please see the article \r\nhttps://www.infoq.com/articles/webassembly-dapr-wasmedge/?utm_source=email&utm_medium=Web-Development&utm_campaign=newsletter&utm_content=11162021. \r\n### Describe the solution you'd like\r\nBlazor should be able to run in WASMEDGE. Then this can be used like desktop application and also light-weight runtime for hosting API.\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/38461","RelatedDescription":"Open issue \"Blazor to run in WASMEdge\" (#38461)"},{"Id":"1055589456","IsPullRequest":false,"CreatedAt":"2021-11-17T00:53:52","Actor":"mcguu","Number":"38459","RawContent":null,"Title":"open a page as modal?","State":"open","Body":"I think we need a feature that open a page or component as a modal page.\r\n\r\nwe do not have to write a modal div just open the page there will be open the modal page.","Url":"https://github.com/dotnet/aspnetcore/issues/38459","RelatedDescription":"Open issue \"open a page as modal?\" (#38459)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"1042509650","IsPullRequest":false,"CreatedAt":"2021-11-02T15:29:52","Actor":"Tratcher","Number":"476","RawContent":null,"Title":"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed","State":"open","Body":"### Description\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll have been removed from ASP.NET Core 7.0.0-preview1. See https://github.com/dotnet/aspnetcore/issues/38022 for discussion.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv was [obsoleted](#424) in 5.0 since its functionality was replaced by the Sockets transport.\n\n### New behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and its libuv.dll dependency have been removed from ASP.NET Core.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nTo eliminate ongoing maintenance costs associated with this obsolete component.\n\n### Recommended action\n\nRemove project references to Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv. Remove code from Program.cs that calls `UseLibuv`, the Sockets transport will be used by default.\n\n### Affected APIs\n\n[UseLibuv](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderlibuvextensions.uselibuv)\r\n[LibuvTransportOptions](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions)","Url":"https://github.com/aspnet/Announcements/issues/476","RelatedDescription":"Open issue \"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed\" (#476)"},{"Id":"1029808382","IsPullRequest":false,"CreatedAt":"2021-10-19T03:09:22","Actor":"halter73","Number":"475","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC2","State":"open","Body":"### Description\r\n\r\nIn RC2, the following APIs were renamed or merged.\r\n\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`.\r\n- The `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions`.\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions` class was removed and all of its methods were merged into the existing `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` class.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/36578.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names replacing `DelegateEndpoint` with `RouteHandler` now that there is a new `RouteHandlerOptions` class.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions`\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/475","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC2\" (#475)"},{"Id":"1029797310","IsPullRequest":false,"CreatedAt":"2021-10-19T02:51:23","Actor":"halter73","Number":"474","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC1","State":"open","Body":"### Description\r\n\r\nIn RC1, the following APIs were renamed.\r\n\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`.\r\n  - **Note:** This was renamed again in RC2 to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`.\r\n  - **Note:** This was merged with `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` in RC2. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Delegate` parameter to `Map`, `MapGet`, `MapPost`, `MapPut`, `MapDelete`, `MapMethod`, `MapFallback` and `RequestDelegateFactory.Create` was renamed from `action` to `handler`.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/35570.\r\n\r\n### Version\r\n\r\n.NET 6 RC1\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names and remove \"minimal\" and \"action\" from the APIs.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names or parameter names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions`\r\n\t- This includes all the methods on this class having their `Delegate` parameter renamed from `action` to `handler`.\r\n- `Microsoft.AspNetCore.Http.RequestDelegateFactory.Create(Delegate action, RequestDelegateFactoryOptions? options = null)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/474","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC1\" (#474)"},{"Id":"1029683595","IsPullRequest":false,"CreatedAt":"2021-10-18T23:08:43","Actor":"captainsafia","Number":"473","RawContent":null,"Title":"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints","State":"open","Body":"### Description\r\n\r\nStarting in .NET 6 RC2, behavior that was introduced in .NET 6 RC1 to automatically set the `IEndpointNameMetadata` for endpoints has been reverted to avoid issues the logic generating duplicate endpoint names.\r\n\r\n### Version\r\n\r\n.NET 6 RC 2\r\n\r\n### Previous behavior\r\n\r\nIn .NET 6 RC1 and above, the `IEndpointNameMetadata` was automatically set for endpoints that referenced a method group. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nWould produce an endpoint for `/foo` with a `EndpointName` set to \"GetFoo\".\r\n\r\n### New behavior\r\n\r\nIn .NET 6 RC 2 and onward, the `IEndpointNameMetadata` is no longer set. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nwould not generated any `IEndpointNameMetadat`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThe behavior of automatically setting endpoint name metadata was not robust and resulted in issues where the same name was set for different endpoints. See https://github.com/dotnet/aspnetcore/issues/36487 for more info.\r\n\r\n### Recommended action\r\n\r\nWe recommend that developers manually set the `IEndpointNameMetadata` using the `WithName` extension method as follows to set the metadata.\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo).WithName(\"GetFoo\");\r\n```\r\n\r\n### Feature area\r\n\r\nASP.NET Core\r\n\r\n### Affected APIs\r\n\r\n_No response_","Url":"https://github.com/aspnet/Announcements/issues/473","RelatedDescription":"Open issue \"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints\" (#473)"},{"Id":"1002953060","IsPullRequest":false,"CreatedAt":"2021-09-21T17:48:14","Actor":"BrennanConroy","Number":"472","RawContent":null,"Title":"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods","State":"open","Body":"### Description\r\n\r\nStarting in RC2, when we look for `TryParse` or `BindAsync` methods on your parameter types if we don't find a valid one we will also look for invalid ones and throw at startup to let you know that you might have written your method signature incorrectly to avoid unexpected behavior.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\n```csharp\r\n// Todo.TryParse is not in a valid format, will try to bind from body as json instead\r\napp.MapPost(\"/endpoint\", (Todo todo) => todo.Item);\r\n\r\npublic class Todo\r\n{\r\n    public string Item { get; set; }\r\n\r\n    public static bool TryParse(string value) => true;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWe have now changed it so that if we see a public `TryParse` or `BindAsync` that doesn't match the expected syntax we will throw on startup. The above example would throw an error similar to:\r\n```\r\nTryParse method found on Todo with incorrect format. Must be a static method with format\r\nbool TryParse(string, IFormatProvider, out Todo)\r\nbool TryParse(string, out Todo)\r\nbut found\r\nBoolean TryParse(System.String)\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [x] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made so that developers would be aware when they wrote a `BindAsync` or `TryParse` method that it wasn't in a valid format. Otherwise the framework would fallback to assuming the parameter is json from the body and could result in unexpected behavior.\r\n\r\n### Recommended action\r\n\r\nIt is possible your types have a `BindAsync` or `TryParse` with different syntax for other reasons besides parameter binding and will now throw at startup. There are multiple options to avoid this behavior:\r\n* Make your `BindAsync` or `TryParse` method internal or private\r\n* Add a new `BindAsync` or `TryParse` method that is in the syntax we are looking for (we ignore invalid methods if we find a valid one)\r\n* Mark your parameter as `[FromBody]`\r\n\r\n### Affected APIs\r\n\r\nAll `IEndpointRouteBuilder.Map*(...)` methods are affected by this change, e.g. `app.MapGet(...)` and `app.MapPost(...)`.\r\nAnd `RequestDelegateFactory.Create(...)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/36810","Url":"https://github.com/aspnet/Announcements/issues/472","RelatedDescription":"Open issue \"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods\" (#472)"},{"Id":"953359702","IsPullRequest":false,"CreatedAt":"2021-09-18T18:10:19","Actor":"TanayParikh","Number":"470","RawContent":null,"Title":"Disable Long Polling Fallback Transport for Blazor Server","State":"closed","Body":"## Disable Long Polling Fallback Transport for Blazor Server\r\n\r\nLong Polling is a fall-back transport utilized when WebSockets aren't available. This can lead to a degraded user experience. Thus, the Long Polling fallback has been removed, and both the client and server now support _only_ WebSockets by default.\r\n\r\n### Version introduced\r\n\r\n.NET 6 rc 1\r\n\r\n### Old behavior\r\n\r\nIf WebSockets are unavailable for a circuit (ex. network issues or browser incompatibility), Long Polling is used instead.\r\n\r\n### New behavior\r\n\r\n| Client | Server | Message |\r\n|---|---|---|\r\n|WS (without browser WS support)|WebSockets|`Unable to connect, please ensure you are using an updated browser that supports WebSockets.`|\r\n|WS (with WS connection being rejected)|WebSockets|`Unable to connect, please ensure WebSockets are available. A VPN or proxy may be blocking the connection.`|\r\n|WS|LongPolling|`An unhandled error has occurred.` Console Error: `Unable to initiate a SignalR connection to the server. This might be because the server is not configured to support WebSockets. To troubleshoot this, visit https://aka.ms/blazor-server-websockets-error.`|\r\n|LongPolling|WebSockets|`An unhandled error has occurred.`|\r\n\r\n### Reason for change\r\n\r\nImprove overall end-user-experience by enforcing WebSocket use.\r\n\r\n### Recommended action\r\n\r\nEnsure WebSockets are functioning as expected with your application. If you must use Long Polling, the following client and server side changes must be made:\r\n\r\n\r\n#### Server Side\r\n\r\nIn `Startup.cs`, replace `endpoints.MapBlazorHub()` with:\r\n\r\n```c#\r\nendpoints.MapBlazorHub(configureOptions: options => \r\n{ \r\n    options.Transports = HttpTransportType.WebSockets | HttpTransportType.LongPolling; \r\n});\r\n```\r\n\r\n#### Client Side\r\n\r\nIn `Pages/_Layout.cshtml`, update the `blazor.server.js` script tag to include the `autostart=\"false\"` attribute:\r\n\r\n```html\r\n<script src=\"_framework/blazor.server.js\" autostart=\"false\"></script>\r\n```\r\n\r\nBelow the `blazor.server.js` script tag, add the following snippet. WebSockets (1) and Long Polling (4) are the supported [HTTPTransportType](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connections.httptransporttype?view=aspnetcore-5.0#fields)s.\r\n\r\n```html\r\n<script>\r\n    (function start() {\r\n        Blazor.start({\r\n            configureSignalR: builder => builder.withUrl('_blazor', 1 | 4) // WebSockets and Long Polling\r\n        });\r\n    })()\r\n</script>\r\n```\r\n\r\n### Category\r\n<!-- Choose one of the following compatibility categories: -->\r\n\r\n- [ ] Binary compatibility (the newer version can be used without recompiling)\r\n- [ ] Source compatibility (successfully recompiling against newer version requires source changes)\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/470","RelatedDescription":"Closed issue \"Disable Long Polling Fallback Transport for Blazor Server\" (#470)"},{"Id":"973152582","IsPullRequest":false,"CreatedAt":"2021-08-18T00:07:55","Actor":"pranavkm","Number":"471","RawContent":null,"Title":"[Breaking change]: Razor Pages logging ID change","State":"open","Body":"### Description\n\nRazor Pages log messages have associated IDs and names. These are used to uniquely identify different kinds of log messages. Some of those IDs and names were incorrectly duplicated. This is being fixed in .NET 6.\n\n### Version\n\n.NET 6 RC1\n\n### Previous behavior\n\nEvent Name: ExecutedHandlerMethod\r\nEvent Id: 102\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod\r\nEvent Id: 103\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod\r\nEvent Id: 104\r\n\r\nEvent Name: NotMostEffectiveFilter\r\nEvent Id: 1\r\n\n\n### New behavior\n\nEvent Name: ExecutedHandlerMethod (unchanged)\r\nEvent Id: 108\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod  (unchanged)\r\nEvent Id: 107\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod  (unchanged)\r\nEvent Id: 109\r\n\r\nEvent Name: NotMostEffectiveFilter  (unchanged)\r\nEvent Id: 4\r\n\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs and names, update those references use the new IDs and names.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/471","RelatedDescription":"Open issue \"[Breaking change]: Razor Pages logging ID change\" (#471)"},{"Id":"951058526","IsPullRequest":true,"CreatedAt":"2021-07-30T15:24:54","Actor":"gewarren","Number":"469","RawContent":null,"Title":"Convert breaking change template to a form","State":"closed","Body":"See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms.","Url":"https://github.com/aspnet/Announcements/pull/469","RelatedDescription":"Closed or merged PR \"Convert breaking change template to a form\" (#469)"},{"Id":"940150750","IsPullRequest":true,"CreatedAt":"2021-07-08T19:25:36","Actor":"mkArtakMSFT","Number":"468","RawContent":null,"Title":"Expanded category of the change to be either source or binary","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/468","RelatedDescription":"Closed or merged PR \"Expanded category of the change to be either source or binary\" (#468)"},{"Id":"939244949","IsPullRequest":true,"CreatedAt":"2021-07-08T18:03:39","Actor":"mkArtakMSFT","Number":"467","RawContent":null,"Title":"Include preview number in version text","State":"closed","Body":"Thanks for the proposal to change this, @Rick-Anderson!","Url":"https://github.com/aspnet/Announcements/pull/467","RelatedDescription":"Closed or merged PR \"Include preview number in version text\" (#467)"},{"Id":"938148373","IsPullRequest":false,"CreatedAt":"2021-07-06T18:21:20","Actor":"Tratcher","Number":"466","RawContent":null,"Title":"ClientCertificate property no longer triggers renegotiation for HttpSys","State":"open","Body":"\r\n## ClientCertificate property no longer triggers renegotiation for HttpSys\r\n\r\nThe `HttpContext.Connection.ClientCertificate` property will no longer trigger TLS renegotiations for HttpSys. See https://github.com/dotnet/aspnetcore/issues/34124 for discussion.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` allowed renegotiation to be triggered by both `HttpContext.Connection.ClientCertificate` and `HttpContext.Connection.GetClientCertifiateAsync`.\r\n\r\nSee https://github.com/aspnet/Announcements/issues/422 for related changes in 5.0.\r\n\r\n### New behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` will allow renegotiation to be triggered only by `HttpContext.Connection.GetClientCertifiateAsync`. `HttpContext.Connection.ClientCertificate` will return the current certificate if available, but will not renegotiate with the client to request one.\r\n\r\n### Reason for change\r\n\r\nWhen implementing the same features for Kestrel it became clear that applications needed to be able to check the state of the client certificate before triggering a renegotiation. This enables the following usage pattern to deal with issues like the request body conflicting with the renegotiation:\r\n\r\n```\r\nif (connection.ClientCertificate == null)\r\n{\r\n  await BufferRequestBodyAsync();\r\n  await connection.GetClientCertificateAsync();\r\n}\r\n```\r\n\r\n### Recommended action\r\n\r\nApplications that use delayed client certificate negotiation need to call GetClientCertificateAsync() to trigger that.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n [HttpSysOptions.ClientCertificateMethod](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions.clientcertificatemethod)\r\n  [HttpContext.Connection.ClientCertificate](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.clientcertificate)\r\n  [HttpContext.Connection.GetClientCertifiateAsync](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.getclientcertificateasync)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/466","RelatedDescription":"Open issue \"ClientCertificate property no longer triggers renegotiation for HttpSys\" (#466)"},{"Id":"903915805","IsPullRequest":false,"CreatedAt":"2021-05-27T15:32:22","Actor":"LadyNaggaga","Number":"465","RawContent":null,"Title":" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6","State":"open","Body":"\r\n### React Redux - dropping support in .NET 6 preview 6\r\n\r\nThe number of ASP.NET Core with React-Redux being created using the .NET Core SDK templates is low.  As a result, we have decided to drop React-Redux support in .NET 6 preview 6. \r\n\r\nAs mentioned in [issue #27887](https://github.com/dotnet/aspnetcore/issues/27887) we shared we will be introducing a new experience for SPA templates in .NET 6 timeframe. This experience is going to focus on decoupling the frontend from the backend into two separate projects. For details here. So, even though we are dropping React-Redux in preview 6 we are providing flexibility for our customers to bring in any SPA framework for their choosing. For more information, please check out the following:\r\n\r\n- [ASP.NET Core and SPAs in .NET 6 ](https://github.com/dotnet/aspnetcore/issues/27887).\r\n- [Improved single-page app (SPA) templates](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/#improved-single-page-app-spa-templates)","Url":"https://github.com/aspnet/Announcements/issues/465","RelatedDescription":"Open issue \" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6\" (#465)"},{"Id":"879380130","IsPullRequest":false,"CreatedAt":"2021-05-07T17:13:08","Actor":"blowdart","Number":"464","RawContent":null,"Title":"ASP.NET Core 6 and Authentication Servers","State":"open","Body":"In .NET 3.0 we began shipping IdentityServer4 as part of our template to support the issuing of JWT tokens for SPA and Blazor applications. Sometime after we shipped, the IdentityServer team made [an announcement changing the license for future versions of IdentityServer](https://leastprivilege.com/2020/10/01/the-future-of-identityserver/) to a reciprocal public license – a license where the code is still open source but if used for commercial purposes then a paid license must be bought. This type of approach is common in the open-source world, where sustaining an income is difficult as your project becomes your full-time work.\r\n\r\nTwo of the reasons behind the choice to ship IdentityServer was the community’s well-expressed desire that we did not compete with an established open-source project and IdentityServer’s deep knowledge of the identity space. The .NET team are not OAuth and OIDC experts as we focus on providing building blocks for your application and a starting point from which you can be successful. Creating and sustaining an authentication server is a full-time endeavor, and Microsoft already has a team and a product in that area, Azure Active Directory, which allows 500,000 objects for free. The ASP.NET team feels a managed cloud solution remains the best practical option for developers – the security is managed, you don’t store credentials locally with the risks that presents, and new features like passwordless authentication appear seamlessly in your authentication workflow. However, we also realize that a cloud solution can be impossible for some customers due to regulatory or data sovereignty concerns.\r\n\r\nFor .NET 6 we will continue to ship IdentityServer in our templates, using the new RPL licensed version. We continue to think this is the most mature option for creating self-deployed, locally hosted token service with ASP.NET Core. We will make the licensing requirement clear if you are using a template that includes Duende IdentityServer. The [new Duende IdentityServer](https://duendesoftware.com/products/identityserver) continues to be open source, but now has a dual license. This license allows it to be used for free for development, testing, and learning, free for non-commercial open source, and free for use in commercial settings if the entity or organization makes less than 1 million USD/year. The license requires [a fee](https://duendesoftware.com/products/identityserver#pricing) to be used in used in a commercial setting if the entity or organization makes more than 1M USD/year. The previous version of IdentityServer will continue to be supported for as long as .NET 5 is supported, until [around February 2022](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nFor .NET 7 we will investigate if we can build tooling to allow development and testing of OIDC (OpenID Connect) enabled applications when disconnected from the internet. You will always be free to choose whatever identity system is best for you in production by updating a few lines of code when you’re ready to go live. We’re committed to giving you options for production identity systems now and going forward.\r\n\r\nDiscussion of this announcement can be found at https://github.com/dotnet/aspnetcore/issues/32494","Url":"https://github.com/aspnet/Announcements/issues/464","RelatedDescription":"Open issue \"ASP.NET Core 6 and Authentication Servers\" (#464)"},{"Id":"878150269","IsPullRequest":false,"CreatedAt":"2021-05-06T22:51:46","Actor":"pranavkm","Number":"463","RawContent":null,"Title":"Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json","State":"open","Body":"\r\n## Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json\r\n\r\nIn 5.0, MVC added support for output formatting `IAsyncEnumerable<>` types by buffering the sequence in memory and formatting the buffered collection. In 6.0, when formatting using System.Text.Json, `IAsyncEnumerable<>` instances are no longer buffered by MVC, instead relying on the support for these types added to System.Text.Json.\r\n\r\nIn most cases, the absence of buffering would not be observed by the application. However, some scenarios may have inadvertently relied on the buffering semantics to correctly serialize. For instance, returning an `IAsyncEnumerable<>` that is backed by a EF query on a type with lazy loaded properties might result in concurrent query execution which might be unsupported by the provider.\r\n\r\nThis change does not affect output formatting using Newtonsoft.Json, or with XML-based formatters\r\n\r\n### Version introduced\r\n\r\n6.0-preview4\r\n\r\n### Old behavior\r\n\r\n`IAsyncEnumerable<>` instances returned from an MVC action as a value to be formatted using `ObjectResult`, or a `JsonResult` would be buffered before being serialized as synchronous collection.\r\n\r\n### New behavior\r\n\r\nWhen formatting using System.Text.Json, `IAsyncEnumerable<>` instances are no longer buffered by MVC.\r\n\r\n### Reason for change\r\n\r\nSystem.Text.Json added support for streaming `IAsyncEnumerable<>` types. This allows for a smaller memory footprint during serialization.\r\n\r\n### Recommended action\r\n\r\nIf your application requires buffering, consider manually buffering the async enumerable: \r\n\r\n```C#\r\n// Before\r\npublic IActionResult Get()\r\n{\r\n    return Ok(dbContext.Blogs);\r\n}\r\n\r\n// After\r\npublic async Task<IActionResult> Get()\r\n{\r\n    return Ok(await dbContext.Blogs.ToListAsync());\r\n}\r\n```\r\n\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/463","RelatedDescription":"Open issue \"Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json\" (#463)"},{"Id":"873454283","IsPullRequest":false,"CreatedAt":"2021-04-30T23:11:40","Actor":"Tratcher","Number":"462","RawContent":null,"Title":"Microsoft.AspNetCore.Http.Features split, no longer shipped as a package","State":"open","Body":"## Microsoft.AspNetCore.Http.Features split, no longer shipped as a package\r\n\r\nMicrosoft.AspNetCore.Http.Features is being split into two assemblies, Microsoft.AspNetCore.Http.Features and Microsoft.Extensions.Features.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nMicrosoft.AspNetCore.Http.Features 5.0 shipped both in the ASP.NET shared framework and as a nuget package.\r\n\r\nMicrosoft.AspNetCore.Http.Features 5.0 targeted .NET 4.6.1, .NET Standard 2.0, and .NET 5.0\r\n\r\n### New behavior\r\n\r\nMicrosoft.AspNetCore.Http.Features 6.0 will ship only in the ASP.NET shared framework, not as a nuget package.\r\n\r\nMicrosoft.AspNetCore.Http.Features 6.0 will target .NET 6.0 only.\r\n\r\nMicrosoft.Extensions.Features 6.0 will ship both in the ASP.NET shared framework and as a nuget package.\r\n\r\nMicrosoft.Extensions.Features 6.0 will target .NET 4.6.1, .NET Standard 2.0, and .NET 6.0\r\n\r\nThe following types will move to the new assembly. The namespaces will not be changed and type forwards will be added for compatibility.\r\n\r\n```\r\nnamespace Microsoft.AspNetCore.Http.Features\r\nIFeatureCollection\r\nFeatureCollection\r\nFeatureReference<T>\r\nFeatureReferences<T>\r\n```\r\n\r\n### Reason for change\r\n\r\nThis allows these core types to be shared more broadly across components, while also allowing the remaining Http specific components in Microsoft.AspNetCore.Http.Features to take advantage of new runtime and language features.\r\n\r\n### Recommended action\r\n\r\nWhen upgrading to ASP.NET 6.0 remove any packages references for `Microsoft.AspNetCore.Http.Features`. Add a package reference for `Microsoft.Extensions.Features` only if required.\r\n\r\nClass libraries that need to consume the types from `Microsoft.AspNetCore.Http.Features` should add a FrameworkReference instead:\r\n\r\n```\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nhttps://docs.microsoft.com/aspnet/core/fundamentals/target-aspnetcore?#use-the-aspnet-core-shared-framework\r\n\r\nLibraries with out of date references may encounter a `TypeLoadException` or the following error:\r\n```\r\nError\tCS0433\tThe type 'IFeatureCollection' exists in both 'Microsoft.AspNetCore.Http.Features, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' and 'Microsoft.Extensions.Features, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n```\r\n\r\nThis can be mitigated by adding the FrameworkReference shown above to any of the affected projects.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/32307 for questions.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[IFeatureCollection](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ifeaturecollection)\r\n[FeatureCollection](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurecollection)\r\n[FeatureReference](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurereference-1)\r\n[FeatureReferences](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurereferences-1)\r\n  \r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/462","RelatedDescription":"Open issue \"Microsoft.AspNetCore.Http.Features split, no longer shipped as a package\" (#462)"},{"Id":"864076275","IsPullRequest":false,"CreatedAt":"2021-04-21T16:42:10","Actor":"BrennanConroy","Number":"461","RawContent":null,"Title":"New Use middleware overload, can cause compiler errors if you don't call next","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## [New Use middleware overload, can cause compiler errors if you don't call `next`]\r\n\r\nA new overload of `app.Use` has been introduced. If you were previously using `app.Use` but never calling the `next` middleware, you will now get a compiler error (CS0121). If that's the case you should use `app.Run` instead of `app.Use`.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0-preview4\r\n\r\n### Old behavior\r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await next();\r\n});\r\n```\r\n\r\nor \r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await SomeAsyncWork();\r\n    // next never called\r\n});\r\n```\r\n\r\n### New behavior\r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await next(context);\r\n});\r\n```\r\n\r\nNotice that you can now pass `context` to the `next` delegate.\r\n\r\n```C#\r\napp.Run(async (context) =>\r\n{\r\n    await SomeAsyncWork();\r\n    // next never called\r\n});\r\n```\r\n\r\nUse `app.Run` when your middleware never calls `next`, otherwise you will get a compile error:\r\n`CS0121 The call is ambiguous between the following methods or properties: 'UseExtensions.Use(IApplicationBuilder, Func<HttpContext, Func, Task>)' and 'UseExtensions.Use(IApplicationBuilder, Func<HttpContext, RequestDelegate, Task>)'`\r\n\r\n### Reason for change\r\n\r\nThe previous `Use` method would allocate 2 objects per request. The new overload avoids these allocations with a small change to how you invoke the next middleware.\r\n\r\n### Recommended action\r\n\r\nIf you get a compile error, it means you are calling `app.Use` without using the `next` delegate. Switch to `app.Run` to fix the error.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\nDiscussion issue https://github.com/dotnet/aspnetcore/issues/32020\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/461","RelatedDescription":"Open issue \"New Use middleware overload, can cause compiler errors if you don't call next\" (#461)"},{"Id":"853676314","IsPullRequest":false,"CreatedAt":"2021-04-08T17:07:48","Actor":"pranavkm","Number":"460","RawContent":null,"Title":"PreserveCompilationContext is no longer configured by default","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## PreserveCompilationContext is no longer configured by default for ASP.NET Core apps targeting .NET 6 and newer\r\n\r\n`PreserveCompilationContext` is an MSBuild property that causes .NET Core projects to emit additional content to the application's Dependency (.deps) file about how the app was compiled. This is primarily used to support runtime-compilation based scenarios.\r\n\r\nPrior to .NET 6, `PreserveCompilationContext` was configured to `true` for all apps that target the Razor (`Microsoft.NET.Sdk.Razor`) and Web (`Microsoft.NET.Sdk.Web`) apps. Starting in .NET 6, this property is no longer configured by default. Packages such as Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation configure this property as required.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0\r\n\r\n### Old behavior\r\n\r\nDependency file contains compilation context.\r\n\r\n### New behavior\r\n\r\nDependency file no longer contains compilation context.\r\n\r\n### Reason for change\r\n\r\nThis is part of our effort to improve build performance, startup time, and reduce the size of ASP.NET Core's build output.\r\n\r\n### Recommended action\r\n\r\nIf your app requires this feature and does not reference a package that configures this, update the project to include this property:\r\n\r\n```xml\r\n<PropertyGroup>\r\n   <PreserveCompilationContext>true</PreserveCompilationContext>\r\n</PropertyGroup>\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/460","RelatedDescription":"Open issue \"PreserveCompilationContext is no longer configured by default\" (#460)"},{"Id":"850860131","IsPullRequest":false,"CreatedAt":"2021-04-06T00:47:37","Actor":"captainsafia","Number":"459","RawContent":null,"Title":"Razor compiler no longer produces a Views assembly","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Razor compiler no longer produces a Views assembly\r\n\r\nThe Razor compiler no longer produces a separate `Views.dll` containing the CSHTML views defined in an application.\r\n\r\n### Version introduced\r\n\r\n.NET 6 Preview 3\r\n\r\n### Old behavior\r\n\r\nThe Razor compiler utilized a two-step compilation process that produced a main `AppName.dll` assembly containing application types and an `AppName.Views.dll` assembly that contains the generated views defined in the application. Generated view types were public and under the \"AspNetCore\" namespace.\r\n\r\n### New behavior\r\n\r\nBoth views and application types are included in a single `AppName.Views.dll` assembly. View types are augmented with the `internal sealed` modifiers by default and included under the `AspNetCoreGeneratedDocument` namespace.\r\n\r\n### Reason for change\r\n\r\nThis change improves build performance for applications that use Razor views by removing the two-step compilation process and also allows Razor views to participate in the hot reload experience for VS.\r\n\r\n### Recommended action\r\n\r\nN/A\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n \r\nNot detectable via API analysis\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/459","RelatedDescription":"Open issue \"Razor compiler no longer produces a Views assembly\" (#459)"},{"Id":"850544376","IsPullRequest":false,"CreatedAt":"2021-04-05T17:57:32","Actor":"SteveSandersonMS","Number":"458","RawContent":null,"Title":"Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation","State":"open","Body":"## Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation\r\n\r\nThe extension method `EditContextDataAnnotationsExtensions.AddDataAnnotationsValidation` is being marked as obsolete. Developers should use the new extension method `EditContextDataAnnotationsExtensions.EnableDataAnnotationsValidation` instead.\r\n\r\nThe only difference between these two APIs is in their return values:\r\n\r\n```cs\r\nEditContext AddDataAnnotationsValidation(this EditContext editContext) { ... }\r\n\r\nIDisposable EnableDataAnnotationsValidation(this EditContext editContext) { ... }\r\n```\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nThe older API returns its `EditContext` (as a kind of fluent API).\r\n\r\n### New behavior\r\n\r\nThe new API returns an `IDisposable` whose disposal can be used to remove the data annotations validation support from the `EditContext`.\r\n\r\n### Reason for change\r\n\r\nThere are cases where it's desirable to remove the data annotations validation support after adding it. This was not possible with the older API because there was no place to store the internal event subscriptions. The new API returns an object that holds the state necessary to remove data annotations validation support on disposal.\r\n\r\n### Recommended action\r\n\r\n**This does not affect most applications, because most applications do not call this directly anyway.** Most applications instead use the `<DataAnnotationsValidator>` component, and do not need to be changed. The use of the extension methods discussed here is a rare and advanced case.\r\n\r\nHowever, if you do call `editContext.AddDataAnnotationsValidation()`, then replace that call with `editContext.EnableDataAnnotationsValidation()`. Optionally, captured the new returned `IDisposable` and dispose it if you later wish to undo the effects of the call.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[EditContextDataAnnotationsExtensions.AddDataAnnotationsValidation(EditContext)](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.components.forms.editcontextdataannotationsextensions.adddataannotationsvalidation?view=aspnetcore-5.0)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/458","RelatedDescription":"Open issue \"Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation\" (#458)"},{"Id":"848690041","IsPullRequest":false,"CreatedAt":"2021-04-01T18:24:35","Actor":"BrennanConroy","Number":"457","RawContent":null,"Title":"SignalR Java Client updated to RxJava3","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## SignalR Java Client updated to RxJava3\r\n\r\nRxJava2 had it's end-of-life in February 2021. We are updating the SignalR Java Client to the newer RxJava3.\r\n\r\n### Version introduced\r\n\r\n6.0.0-preview4\r\n\r\n### Old behavior\r\n\r\nThe RxJava package reference in the library was RxJava2.\r\n\r\n### New behavior\r\n\r\nThe RxJava package reference in the library is now RxJava3.\r\nYou can read https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0 for what changed in RxJava3.\r\n\r\n### Reason for change\r\n\r\nThe old dependency (RxJava2) is no longer maintained.\r\n\r\n### Recommended action\r\n\r\nIf you were using RxJava2 in your app/library you might need to update to RxJava3. See https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0 for help.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\nDiscussion issue for this announcement: https://github.com/dotnet/aspnetcore/issues/31450\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/457","RelatedDescription":"Open issue \"SignalR Java Client updated to RxJava3\" (#457)"},{"Id":"825172081","IsPullRequest":false,"CreatedAt":"2021-03-21T23:42:46","Actor":"dougbu","Number":"455","RawContent":null,"Title":"Default branch has been renamed to main","State":"closed","Body":"On Monday, 15 March (slightly delayed, sorry), we renamed the default branch in this repository to main. For more details, see [our earlier announcement](https://github.com/dotnet/announcements/issues/172).","Url":"https://github.com/aspnet/Announcements/issues/455","RelatedDescription":"Closed issue \"Default branch has been renamed to main\" (#455)"},{"Id":"834175947","IsPullRequest":false,"CreatedAt":"2021-03-17T21:02:49","Actor":"pranavkm","Number":"456","RawContent":null,"Title":"Assemblies removed from Microsoft.AspNetCore.App shared framework","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Assemblies removed from Microsoft.AspNetCore.App shared framework\r\n\r\nAs part of our ongoing work to reduce the size of the ASP.NET Core shared framework, the following assemblies were removed from the ASP.NET Core targeting pack:\r\n\r\n* System.Security.Permissions\r\n* System.Windows.Extensions\r\n\r\nApplications upgrading to net6.0 would no longer be able to reference APIs provided by these libraries without adding additional `PackageReference` to their projects.\r\n\r\nIn addition, the following assemblies have been removed from the ASP.NET Core runtime pack:\r\n\r\n* Microsoft.Win32.SystemEvents\r\n* System.Drawing.Common\r\n* System.Security.Permissions\r\n* System.Windows.Extensions\r\n\r\nApplications that use APIs from these libraries but use them in a 6.0 version of Microsoft.AspNetCore.App without a PackageReference that ensures these assemblies are present as part of the application output, may see runtime errors.\r\nFor instance, an application that uses reflection to access APIs from one of these assemblies without adding an explicit reference to these packages may see runtime errors\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nApplications could use APIs provided by these libraries by referencing the Microsoft.AspNetCore.App shared framework.\r\n\r\n### New behavior\r\n\r\nPackageReference must be added to continue using these APIs.\r\n\r\n### Reason for change\r\n\r\nSize reduction.\r\n\r\n### Recommended action\r\n\r\n1. Add a `PackageReference` to the affected project. For instance,\r\n\r\n```xml\r\n<PackageReference Include=\"System.Security.Permissions\" Version=\"6.0.0\" />\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* https://docs.microsoft.com/dotnet/api/system.security.permissions\r\n* https://docs.microsoft.com/dotnet/api/system.media\r\n* https://docs.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509certificate2ui\r\n* https://docs.microsoft.com/dotnet/api/system.xaml.permissions.xamlaccesslevel\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/456","RelatedDescription":"Open issue \"Assemblies removed from Microsoft.AspNetCore.App shared framework\" (#456)"},{"Id":"816790915","IsPullRequest":false,"CreatedAt":"2021-02-25T20:42:13","Actor":"BrennanConroy","Number":"454","RawContent":null,"Title":"Changed MessagePack library in @microsoft/signalr-protocol-msgpack javascript library","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Changed MessagePack library in @microsoft/signalr-protocol-msgpack npm package\r\n\r\n@microsoft/signalr-protocol-msgpack used to reference msgpack5 now it references @msgpack/msgpack.\r\n\r\nThe `MessagePackOptions` that could optionally be passed into the `MessagePackHubProtocol` also has a breaking change. The options `disableTimestampEncoding` and `forceFloat64` no longer exist, and some additional options now exist.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0\r\n\r\n### Old behavior\r\n\r\nPreviously to use the MessagePack hub protocol in the browser you needed to include 3 script references\r\n```\r\n<script src=\"~/lib/signalr/signalr.js\"></script>\r\n<script src=\"~/lib/msgpack5/msgpack5.js\"></script>\r\n<script src=\"~/lib/signalr/signalr-protocol-msgpack.js\"></script>\r\n```\r\n\r\nIn addition the `msgpack5` package was downloaded to your `node_modules` so you could use it in your app if you wanted.\r\n\r\n`MessagePackOptions` had `disableTimestampEncoding` and `forceFloat64` properties, but doesn't anymore.\r\n\r\n### New behavior\r\n\r\nTo use the MessagePack hub protocol in the browser you now only need 2 script references\r\n```\r\n<script src=\"~/lib/signalr/signalr.js\"></script>\r\n<script src=\"~/lib/signalr/signalr-protocol-msgpack.js\"></script>\r\n```\r\n\r\nAnd you will have the `@msgpack/msgpack` package downloaded to your `node_modules` if you want to use the directly in your app.\r\n\r\n`MessagePackOptions` has new properties and removed the `disableTimestampEncoding` and `forceFloat64` properties.\r\n\r\n### Reason for change\r\n\r\nReduced asset size, reduced complexity to consume the package, and more customizability.\r\n\r\n### Recommended action\r\n\r\nIf you were previously using `msgpack5` in your app, you will need to add a direct reference to the library in your package.json.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nRemoved `MessagePackOptions.disableTimestampEncoding`\r\nRemoved `MessagePackOptions.forceFloat64`\r\n\r\n### Discussion issue\r\n\r\nhttps://github.com/dotnet/aspnetcore/issues/30471\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/454","RelatedDescription":"Open issue \"Changed MessagePack library in @microsoft/signalr-protocol-msgpack javascript library\" (#454)"},{"Id":"814357042","IsPullRequest":false,"CreatedAt":"2021-02-23T11:05:37","Actor":"SteveSandersonMS","Number":"453","RawContent":null,"Title":"WebEventDescriptor.EventArgsType replaced by WebEventDescriptor.EventName","State":"open","Body":"## WebEventDescriptor.EventArgsType replaced by WebEventDescriptor.EventName\r\n\r\nThe `Microsoft.AspNetCore.Components.RenderTree.WebEventDescriptor` class is part of Blazor's internal protocol for communicating events from JavaScript into .NET. This class is not typically used by application code. It is typically used only by platform authors.\r\n\r\nStarting from version 6.0, the `EventArgsType` property on `WebEventDescriptor` is being replaced by a new property called `EventName`. This will not affect any typical application code as it is only a detail of the low-level platform implementation.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nThe property `EventArgsType` described a nonstandard, Blazor-specific category name for groups of DOM event types. For example, the `click` and `mousedown` events were both mapped to an `EventArgsType` value of `mouse`. Similarly, `cut`, `copy`, and `paste` events were all mapped to an `EventArgsType` value of `clipboard`. These category names were used to determine the .NET type to use for deserializing the incoming event args data.\r\n\r\n### New behavior\r\n\r\nThe new property `EventName` simply specifies the original name of the event, for example `click`, `mousedown`, `cut`, `copy`, or `paste`. There is no longer a need to supply a Blazor-specific category name, so the old property `EventArgsType` is removed.\r\n\r\n### Reason for change\r\n\r\nIn PR [#29993](https://github.com/dotnet/aspnetcore/pull/29993) we have introduced support for custom event arguments classes. As part of this, we no longer rely on all events fitting into a predefined set of categories. The framework now only needs to know the original, raw event name.\r\n\r\n### Recommended action\r\n\r\nApplication code should not be affected in any way and does not need to change.\r\n\r\nAnyone building a custom Blazor rendering platform may need to update their mechanism for dispatching events into the `Renderer`, replacing any hardcoded rules they had before about event categories with simpler logic that supplies the original, raw event name.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[WebEventDescriptor.EventArgsType property](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.components.rendertree.webeventdescriptor.eventargstype?view=aspnetcore-5.0)\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/453","RelatedDescription":"Open issue \"WebEventDescriptor.EventArgsType replaced by WebEventDescriptor.EventName\" (#453)"},{"Id":"802371479","IsPullRequest":false,"CreatedAt":"2021-02-05T18:11:56","Actor":"Pilchie","Number":"452","RawContent":null,"Title":"Disabling GitHub Discussions tab for dotnet/aspnetcore","State":"open","Body":"## Rationale\r\n\r\nSince we enabled GitHub Discussions, we've found them quite hard to manage for a repository the size of aspnetcore. Without labelling and assigning capabilities, there are no effective ways to triage or track what discussions have been looked at, or who has the next step.\r\n\r\nTo that end, we're going to disable them, and encourage people to just use issues instead - that way we can continue to ensure they get reviewed by the team, and acted upon if they are in fact bugs, etc.\r\n\r\n## When will this happen\r\n\r\nI'll make the switch in a week, on 2021-02-11.\r\n\r\n## What happens to existing discussions\r\n\r\nThey will no longer be visible, but as far as we can tell, GitHub still keeps them, and if we ever enable discussions again, they will come back.\r\n\r\n## Where do I discuss this\r\n\r\nPlease comment on the [discussion issue](https://github.com/dotnet/aspnetcore/issues/29935) for this announcement on dotnet/aspnetcore. ","Url":"https://github.com/aspnet/Announcements/issues/452","RelatedDescription":"Open issue \"Disabling GitHub Discussions tab for dotnet/aspnetcore\" (#452)"},{"Id":"793857088","IsPullRequest":false,"CreatedAt":"2021-01-26T01:45:29","Actor":"captainsafia","Number":"451","RawContent":null,"Title":"Change to parameter name in RequestImageFileAsync","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Change to parameter name in RequestImageFileAsync\r\n\r\nThe parameter `maxWith` in the `RequestImageFileAsync` method was renamed from `maxWith` to `maxWidth` to address a typo.\r\n\r\n### Version introduced\r\n\r\n6.0.0-preview1\r\n\r\n### Old behavior\r\n\r\nThe parameter name was spelled `maxWith`.\r\n\r\n### New behavior\r\n\r\nThe parameter name is spelled `maxWidth`.\r\n\r\n### Reason for change\r\n\r\nAPI hygiene.\r\n\r\n### Recommended action\r\n\r\nIf you are using named parameters in the in `RequestImageFile` API, you may need to ensure that the parameter name is updated accordingly. Otherwise, no change is necessary.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[BrowserFileExtensions.RequestImageFileAsync](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.components.forms.browserfileextensions.requestimagefileasync?view=aspnetcore-5.0)\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/451","RelatedDescription":"Open issue \"Change to parameter name in RequestImageFileAsync\" (#451)"},{"Id":"792377360","IsPullRequest":false,"CreatedAt":"2021-01-22T23:49:01","Actor":"BrennanConroy","Number":"450","RawContent":null,"Title":"Notice on obsoleted and removed APIs in AspNetCore","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Notice on obsoleted and removed APIs in AspNetCore\r\n\r\n[Brief description of the change]\r\n\r\n### Version introduced\r\n\r\n6.0.0-preview1\r\n\r\n### Old behavior\r\n\r\nAPIs were not removed or obsolete.\r\n\r\n### New behavior\r\n\r\nAPIs are removed or obsoleted.\r\n\r\n### Reason for change\r\n\r\nAPIs are either no longer used or don't function anymore.\r\n\r\n### Recommended action\r\n\r\nUse the recommended replacement APIs.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* Removed [Microsoft.AspNetCore.Http.Connections.NegotiateProtocol.ParseResponse(Stream content)](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.connections.negotiateprotocol.parseresponse?view=aspnetcore-3.1#Microsoft_AspNetCore_Http_Connections_NegotiateProtocol_ParseResponse_System_IO_Stream_)\r\n* Removed [Microsoft.AspNetCore.SignalR.HubInvocationContext(HubCallerContext, String, Object[])](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.hubinvocationcontext.-ctor?view=aspnetcore-5.0#Microsoft_AspNetCore_SignalR_HubInvocationContext__ctor_Microsoft_AspNetCore_SignalR_HubCallerContext_System_String_System_Object___)\r\n* Removed [Microsoft.AspNetCore.Http.Features.IHttpBufferingFeature](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ihttpbufferingfeature?view=aspnetcore-3.1) use [Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ihttpresponsebodyfeature?view=aspnetcore-3.1) instead\r\n* Removed [Microsoft.AspNetCore.Http.Features.IHttpSendFileFeature](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ihttpsendfilefeature?view=aspnetcore-3.1) use [Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ihttpresponsebodyfeature?view=aspnetcore-3.1) instead\r\n* Removed argument-less constructor of [Microsoft.AspNetCore.StaticFiles.StaticFileResponseContext](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.staticfiles.staticfileresponsecontext.-ctor?view=aspnetcore-3.1#Microsoft_AspNetCore_StaticFiles_StaticFileResponseContext__ctor) use [the constructor with parameters](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.staticfiles.staticfileresponsecontext.-ctor?view=aspnetcore-3.1#Microsoft_AspNetCore_StaticFiles_StaticFileResponseContext__ctor_Microsoft_AspNetCore_Http_HttpContext_Microsoft_Extensions_FileProviders_IFileInfo_) instead\r\n* Removed a constructor of [Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.infrastructure.objectresultexecutor.-ctor?view=aspnetcore-3.1#Microsoft_AspNetCore_Mvc_Infrastructure_ObjectResultExecutor__ctor_Microsoft_AspNetCore_Mvc_Infrastructure_OutputFormatterSelector_Microsoft_AspNetCore_Mvc_Infrastructure_IHttpResponseStreamWriterFactory_Microsoft_Extensions_Logging_ILoggerFactory_)\r\n* Removed [Microsoft.AspNetCore.Mvc.ModelBinding.ValidationAllowShortCircuitingValidationWhenNoValidatorsArePresent](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.modelbinding.validation.validationvisitor.allowshortcircuitingvalidationwhennovalidatorsarepresent?view=aspnetcore-3.1#Microsoft_AspNetCore_Mvc_ModelBinding_Validation_ValidationVisitor_AllowShortCircuitingValidationWhenNoValidatorsArePresent)\r\n* Removed [Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.viewfeatures.viewcomponentresultexecutor.-ctor?view=aspnetcore-3.1#Microsoft_AspNetCore_Mvc_ViewFeatures_ViewComponentResultExecutor__ctor_Microsoft_Extensions_Options_IOptions_Microsoft_AspNetCore_Mvc_MvcViewOptions__Microsoft_Extensions_Logging_ILoggerFactory_System_Text_Encodings_Web_HtmlEncoder_Microsoft_AspNetCore_Mvc_ModelBinding_IModelMetadataProvider_Microsoft_AspNetCore_Mvc_ViewFeatures_ITempDataDictionaryFactory_)\r\n* Obsoleted [CompatibilityVersion](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.compatibilityversion?view=aspnetcore-3.1)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/450","RelatedDescription":"Open issue \"Notice on obsoleted and removed APIs in AspNetCore\" (#450)"},{"Id":"784475287","IsPullRequest":false,"CreatedAt":"2021-01-12T18:24:17","Actor":"rbhanda","Number":"449","RawContent":null,"Title":" Microsoft Security Advisory CVE-2021-1723 | ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2021-1723 | .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core and ASP.NET 5. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial-of-service vulnerability exists in the way Kestrel parses HTTP/2 requests. The security update addresses the vulnerability by fixing the way the Kestrel parses HTTP/2 requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/29236\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n* Any .NET Core 3.1 or .NET 5.0 application running on .NET Core 3.1.10 or .NET 5.0.1 or lower respectively.\r\n\r\nPlease note that .NET Core 3.0 is out of support and all applications should be updated to 3.1.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio which will also update your .NET Core SDKs.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```txt\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* If you are using .NET Core 3.1, you should download and install Runtime 3.1.11 or SDK 3.1.111 (for Visual Studio 2019 v16.4) or 3.1.405 (for Visual Studio 2019 v16.5 or later) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n* If you are using .NET 5.0, you should download and install Runtime 5.0.2 or SDK 5.0.102 (for Visual Studio 2019 v16.8) from https://dotnet.microsoft.com/download/dotnet-core/5.0\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2021-1723](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-1723)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 12, 2021): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2021-01-12_\r\n","Url":"https://github.com/aspnet/Announcements/issues/449","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2021-1723 | ASP.NET Core Denial of Service Vulnerability\" (#449)"},{"Id":"783776081","IsPullRequest":false,"CreatedAt":"2021-01-11T23:18:10","Actor":"Tratcher","Number":"448","RawContent":null,"Title":"HttpsRedirectionMiddleware will throw if there are multiple ambiguous https ports","State":"open","Body":"## HttpsRedirectionMiddleware will throw if there are multiple ambiguous https ports\r\n\r\nThe HttpsRedirectionMiddleware (UseHttpsRedirection) will now throw an InvalidOperationException if it finds multiple https ports in the server config.\r\n\r\n\"Cannot determine the https port from IServerAddressesFeature, multiple values were found. Set the desired port explicitly on HttpsRedirectionOptions.HttpsPort.\"\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/29222 for discussion.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nWhen the HttpsRedirectionMiddleware isn't explicitly configured with a port it will search IServerAddressesFeature during the first request to figure out what https port it should redirect to. If there are no https ports or multiple distinct ports then it's ambiguous which should be used so the middleware logs a warning and turns itself off. Http requests will be processed normally.\r\n\r\n### New behavior\r\n\r\nWhen the HttpsRedirectionMiddleware isn't explicitly configured with a port it will search IServerAddressesFeature during the first request to figure out what https port it should redirect to.\r\n\r\nIf there are no https ports the middleware still logs a warning and turns itself off. Http requests will be processed normally. This supports development scenarios without https, as well as hosted scenarios where TLS is terminated before reaching the server.\r\n\r\nIf there are multiple distinct ports then it's ambiguous which should be used so the middleware throws an exception and fails the http request. \r\n\r\n### Reason for change\r\n\r\nThis is done to prevent potentially sensitive data from being served over un-encrypted http connections when https is known to be available.\r\n\r\n### Recommended action\r\n\r\nTo enable https redirection when the server has multiple distinct https ports you must specify one port in the configuration. See https://docs.microsoft.com/en-us/aspnet/core/security/enforcing-ssl?view=aspnetcore-5.0&tabs=visual-studio#port-configuration.\r\n\r\nIf you do not need the HttpsRedirectionMiddleware in your app then remove UseHttpsRedirection from Startup.cs.\r\n\r\nIf you need to select the correct https port dynamically then please provide feedback on https://github.com/dotnet/aspnetcore/issues/21291. \r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[UseHttpsRedirection ](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.httpspolicybuilderextensions.usehttpsredirection?view=aspnetcore-5.0)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/448","RelatedDescription":"Open issue \"HttpsRedirectionMiddleware will throw if there are multiple ambiguous https ports\" (#448)"},{"Id":"780884629","IsPullRequest":false,"CreatedAt":"2021-01-06T22:21:58","Actor":"JamesNK","Number":"447","RawContent":null,"Title":"Kestrel logging ID changes","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Kestrel logging ID changes\r\n\r\nKestrel log messages have associated IDs and names. These are used to uniquely identify different kinds of log messages. Some of those IDs and names were incorrectly duplicated. This is being fixed in .NET 6.\r\n\r\n### Version introduced\r\n\r\n.NET 6.0\r\n\r\n### New behavior\r\n\r\nHTTP/2 connection closed log messages:\r\n\r\nName: Http2ConnectionClosed (unchanged)\r\nID: 36 (before) -> 48 (after)\r\n\r\nHTTP/2 frame sending log messages:\r\n\r\nName: Http2FrameReceived (before) -> Http2FrameSending (after)\r\nID: 37 (before) -> 49 (after)\r\n\r\n### Reason for change\r\n\r\nLog IDs and names should be unique so different message types can be identified.\r\n\r\n### Recommended action\r\n\r\nIf you have code or configuration that references the old IDs and names, update those references use the new IDs and names.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/447","RelatedDescription":"Open issue \"Kestrel logging ID changes\" (#447)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1458929984496553985","CreatedAt":"2021-11-11T22:49:48+00:00","UserScreenname":"aspnet","Text":"🏁 Get started with minimal API for .NET 6 by @chris_noring \n\n🚀 Using minimal API, you can create a Web API in just… https://t.co/WWGxWBgDJe","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"1457753355674025985","CreatedAt":"2021-11-08T16:54:18+00:00","UserScreenname":"aspnet","Text":"🚀Announcing #AspNetCore in .NET 6!\n\n🔁Hot reload\n🤏Minimal APIs\n⏬Async streaming\n5️⃣Bootstrap 5.1\n🔥Lots of Blazor upd… https://t.co/gk83Ob7gLv","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":428,"FavoriteCount":158,"RawContent":null},{"Id":"1455288347501350912","CreatedAt":"2021-11-01T21:39:14+00:00","UserScreenname":"aspnet","Text":"No #AspNet Community Standup this week, we're all getting ready for #dotNETConf!\n\nYou can catch all our past weekly… https://t.co/jLdbxmVifY","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":18,"FavoriteCount":4,"RawContent":null},{"Id":"1455214336431910915","CreatedAt":"2021-11-01T16:45:09+00:00","UserScreenname":"aspnet","Text":"➡️POSTED: Build client web assets for your Razor Class Library\n\nLearn how to integrate npm and webpack into the bui… https://t.co/4wojvVofjR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null},{"Id":"1454136524224802820","CreatedAt":"2021-10-29T17:22:18+00:00","UserScreenname":"aspnet","Text":"🎉 #dotNETConf is coming November 9 - 11! 🎉 \n\n👏 Day 1️⃣ All the big news about .NET 6\n💪 Day 2️⃣ Dive deep into all t… https://t.co/5DoPRjBfPg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":32,"RawContent":null},{"Id":"1453043796380246018","CreatedAt":"2021-10-26T17:00:11+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Blazor Native Interop with SkiaSharp - Chat live at… https://t.co/wJf8YEp7Tb","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1453042843572789258","CreatedAt":"2021-10-26T16:56:24+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us at https://t.co/AyBuoJbJmc to see native interop in #Blazor! https://t.co/2GRwH4RXPD","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null},{"Id":"1452749160441004037","CreatedAt":"2021-10-25T21:29:25+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n⚙️ Blazor Native Interop with #SkiaSharp\n🌟Featuring Matthew Leibowitz, Ta… https://t.co/vjKOaChhhf","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":10,"RawContent":null},{"Id":"1450507704229789696","CreatedAt":"2021-10-19T17:02:40+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Advanced Kestrel Socket APIs https://t.co/p8nmcZ7Bpw","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"1450507565985533960","CreatedAt":"2021-10-19T17:02:07+00:00","UserScreenname":"aspnet","Text":"Starting now! Come learn about new stuff in Kestrel for .NET 6!\n\n@davidfowl is joining, too!… https://t.co/UInMfbCKnh","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null},{"Id":"1450177219029049352","CreatedAt":"2021-10-18T19:09:26+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🦅 Advanced Kestrel Socket APIs\n🌟Featuring Stephen Halter\n🗓Tuesday | Oct 1… https://t.co/D8cfkDIJEE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":24,"FavoriteCount":13,"RawContent":null},{"Id":"1448000173167218695","CreatedAt":"2021-10-12T18:58:38+00:00","UserScreenname":"aspnet","Text":"🚀 #AspNEtCore updates in .NET 6 Release Candidate 2\n\nHere’s what’s new in this preview release:\n🌟Native dependencie… https://t.co/sUzdhQvBop","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":119,"FavoriteCount":52,"RawContent":null},{"Id":"1447970306371383297","CreatedAt":"2021-10-12T16:59:57+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Exploring MudBlazor https://t.co/XnqSsut9Yy","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2021-11-18T05:30:15.8115852Z","RunDurationInMilliseconds":3522}