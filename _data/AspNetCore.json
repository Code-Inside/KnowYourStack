{"Data":{"Blog":{"FeedItems":[{"Title":"Improve Your Productivity with New GitHub Copilot Features for .NET!","PublishedOn":"2025-06-12T17:05:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently introduced several new GitHub Copilot-powered .NET experiences designed to help you be more productive.  Take a look!\nThe post Improve Your Productivity with New GitHub Copilot Features...","Href":"https://devblogs.microsoft.com/dotnet/improve-productivity-with-github-copilot-dotnet/","RawContent":null},{"Title":"Multimodal Voice Intelligence with .NET MAUI","PublishedOn":"2025-06-11T17:05:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Learn how to enhance your .NET MAUI apps with multimodal AI capabilities, enabling users to interact through voice using plugins and Microsoft.Extensions.AI.\nThe post Multimodal Voice Intelligence...","Href":"https://devblogs.microsoft.com/dotnet/multimodal-voice-intelligence-with-dotnet-maui/","RawContent":null},{"Title":".NET and .NET Framework June 2025 servicing releases updates","PublishedOn":"2025-06-10T20:12:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A recap of the latest servicing updates for .NET and .NET Framework for June 2025.\nThe post .NET and .NET Framework June 2025 servicing releases updates appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/dotnet-and-dotnet-framework-june-2025-servicing-updates/","RawContent":null},{"Title":".NET 10 Preview 5 is now available!","PublishedOn":"2025-06-10T18:30:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Find out about the new features in .NET 10 Preview 5 across the .NET runtime, SDK, libraries, ASP.NET Core, Blazor, C#, .NET MAUI, and more!\nThe post .NET 10 Preview 5 is now available! appeared first...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-10-preview-5/","RawContent":null},{"Title":"Emit logs on-demand with log buffering","PublishedOn":"2025-06-05T17:05:00+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Learn how to delay log emission with the new log buffering feature for more intelligent, context-aware logging in .NET 9\nThe post Emit logs on-demand with log buffering appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/emit-logs-on-demand-with-log-buffering/","RawContent":null},{"Title":"Catch Up on Microsoft Build 2025: Essential Sessions for .NET Developers","PublishedOn":"2025-06-04T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Get up to date on all of the .NET sessions from Microsoft Build 2025 covering .NET 10, C# 14, .NET Aspire, ASP.NET Core, Blazor, AI development, and more!\nThe post Catch Up on Microsoft Build 2025:...","Href":"https://devblogs.microsoft.com/dotnet/catching-up-on-microsoft-build-2025-essential-sessions-for-dotnet-developers/","RawContent":null},{"Title":"Using AI Foundry with .NET MAUI","PublishedOn":"2025-06-03T17:15:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Using AI Foundry with .NET MAUI brings the power of LLMs to mobile and desktop applications.\nThe post Using AI Foundry with .NET MAUI appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/using-ai-foundry-with-dotnet-maui/","RawContent":null},{"Title":"Fine-tune the volume of logs your app produces","PublishedOn":"2025-05-29T17:05:00+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Explores the new log sampling feature\nThe post Fine-tune the volume of logs your app produces appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/finetune-the-volume-of-logs-your-app-produces/","RawContent":null},{"Title":"Announcing dotnet run app.cs – A simpler way to start with C# and .NET 10","PublishedOn":"2025-05-28T16:00:25+00:00","CommentsCount":57,"FacebookCount":0,"Summary":"We are super excited to introduce a new feature that was released as part of .NET 10 Preview 4 that makes getting started with C# easier than ever. You can now run a C# file directly using dotnet run...","Href":"https://devblogs.microsoft.com/dotnet/announcing-dotnet-run-app/","RawContent":null},{"Title":"Circuit Breaker Policy Fine-tuning Best Practice","PublishedOn":"2025-05-27T17:05:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Summary of some best practice and insights about circuit breaker resilience policy fine-tuning.\nThe post Circuit Breaker Policy Fine-tuning Best Practice appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/circuit-breaker-policy-finetuning-best-practice/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"3151799973","IsPullRequest":true,"CreatedAt":"2025-06-17T02:03:08","Actor":"dotnet-maestro[bot]","Number":"62365","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/source-build-reference-packages","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:785fec4d-50df-4a20-cbf9-08db9e4fbff5)\n## From https://github.com/dotnet/source-build-reference-packages\n- **Subscription**: [785fec4d-50df-4a20-cbf9-08db9e4fbff5](https://maestro.dot.net/subscriptions?search=785fec4d-50df-4a20-cbf9-08db9e4fbff5)\n- **Build**: [20250616.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2731290)\n- **Date Produced**: June 16, 2025 2:03:58 PM UTC\n- **Commit**: [3827e68e002064268d4be4b2d1d96048f9794808](https://github.com/dotnet/source-build-reference-packages/commit/3827e68e002064268d4be4b2d1d96048f9794808)\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.SourceBuild.Intermediate.source-build-reference-packages**: [from 8.0.0-alpha.1.25269.2 to 8.0.0-alpha.1.25316.2][1]\n\n[1]: https://github.com/dotnet/source-build-reference-packages/compare/cee2d05711...3827e68e00\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:785fec4d-50df-4a20-cbf9-08db9e4fbff5)\n\n","Url":"https://github.com/dotnet/aspnetcore/pull/62365","RelatedDescription":"Open PR \"[release/8.0] Update dependencies from dotnet/source-build-reference-packages\" (#62365)"},{"Id":"3148827354","IsPullRequest":true,"CreatedAt":"2025-06-17T00:55:11","Actor":"ilonatommy","Number":"62358","RawContent":null,"Title":"Flip switch for controlling navigation flow on SSR","State":"closed","Body":"# Navigation with `NavigationException` stays the default behavior for SSR navigation\r\n\r\nSwitch was introduced in https://github.com/dotnet/aspnetcore/pull/61306. The PR unifies the navigation across render modes but also allows SSR code after the navigation to run. Upgrading the application could lead to unexpected behaviors, e.g. see how templates had to be changed to adjust to the new navigation: https://github.com/dotnet/aspnetcore/pull/62105. From this reason, we decided to keep the default behavior for the exception flow. It can be changed by setting `Microsoft.AspNetCore.Components.Endpoints.NavigationManager.DisableThrowNavigationException` switch. New projects will use the new way of working.\r\n\r\n## Description\r\n\r\nThis PR:\r\n- renames the switch `EnableThrowNavigationException` -> `DisableThrowNavigationException`,\r\n- uses `DisableThrowNavigationException: false` by default,\r\n- adjusts tests accordingly,\r\n- sets `DisableThrowNavigationException: true` in the templates.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/62358","RelatedDescription":"Closed or merged PR \"Flip switch for controlling navigation flow on SSR\" (#62358)"},{"Id":"3151622943","IsPullRequest":true,"CreatedAt":"2025-06-17T00:01:13","Actor":"wtgodbe","Number":"62364","RawContent":null,"Title":"Update branding to preview7","State":"closed","Body":"This pull request updates milestone and version settings to reflect the transition from `10.0-preview6` to `10.0-preview7`. The changes ensure consistency across resource management policies and version configurations.\r\n\r\nVersion updates:\r\n\r\n* [`.github/policies/resourceManagement.yml`](diffhunk://#diff-fc796b019795da5d3269d452fcdb1827ca9c8789a41f2e2dc1551f70b8f36878L383-R394): Updated milestone assignments and target branches in resource management policies to reflect the new version `10.0-preview7`.\r\n* [`eng/Versions.props`](diffhunk://#diff-1ea18ff65faa2ae6fed570b83747086d0317f5e4bc325064f6c14319a9c4ff67L12-R12): Incremented the `PreReleaseVersionIteration` from `6` to `7` to align with the updated versioning scheme.","Url":"https://github.com/dotnet/aspnetcore/pull/62364","RelatedDescription":"Closed or merged PR \"Update branding to preview7\" (#62364)"},{"Id":"3151477795","IsPullRequest":true,"CreatedAt":"2025-06-16T22:19:44","Actor":"captainsafia","Number":"62363","RawContent":null,"Title":"Update Microsoft.OpenApi to preview28","State":"open","Body":"This pull request primarily updates the `Microsoft.OpenApi` package versions and refactors code to simplify imports and improve type usage. The most significant changes include updating dependencies, replacing outdated `Microsoft.OpenApi.Models` types with the new `Microsoft.OpenApi` namespace, and modifying public API definitions accordingly.\r\n\r\n### Dependency Updates:\r\n* Updated `MicrosoftOpenApiVersion` and `MicrosoftOpenApiYamlReaderVersion` from `2.0.0-preview.18` to `2.0.0-preview.28` in `eng/Versions.props`.\r\n\r\n### Refactoring Imports:\r\n* Removed references to `Microsoft.OpenApi.Models`, `Microsoft.OpenApi.Models.Interfaces`, and `Microsoft.OpenApi.Models.References` in favor of the new `Microsoft.OpenApi` namespace across multiple files, including `XmlCommentGenerator.Emitter.cs`, `TransformersBenchmark.cs`, and various transformer files in the `sample` directory. [[1]](diffhunk://#diff-ccf1c2147f9ea676bdeaf8a0b062fc74276a1a893e4d0a6ef1fb56c96238162fL61-R61) [[2]](diffhunk://#diff-9fc86114a6c135b21594047b7df9782e874098915df63e3f61ef2f483a91b79cL8-R8) [[3]](diffhunk://#diff-6e649ee4cda5e585fb0d646d3c4b3cbe0042d872ea709400a536c0a1bd9b4aaeL5) [[4]](diffhunk://#diff-fe918193aad6890fe040a1355d314ecad241e04ff0d8bde993584366605b4b4eL6-L7) [[5]](diffhunk://#diff-cb51dd0033a2b205ef78830280573959581ad50d89364d50501a4581369fd7e9L5) [[6]](diffhunk://#diff-273d282b4bad10c3b0f3d71a19b279362d15fff14751af8f07ce81ae9bfa35acL5) [[7]](diffhunk://#diff-6d3e3e39a4a53f8b1fdaf6ac2bceabf959a4c3c290a96a3dfc0dcb0adc983802L5-L6)\r\n\r\n### Code Adjustments:\r\n* Replaced the initialization of `schema.Extensions` from an empty array (`[]`) to a `Dictionary<string, IOpenApiExtension>` in `TransformersBenchmark.cs`. [[1]](diffhunk://#diff-9fc86114a6c135b21594047b7df9782e874098915df63e3f61ef2f483a91b79cL105-R104) [[2]](diffhunk://#diff-9fc86114a6c135b21594047b7df9782e874098915df63e3f61ef2f483a91b79cL179-R178)\r\n\r\n### Public API Updates:\r\n* Updated public API definitions in `PublicAPI.Shipped.txt` to reflect the transition from `Microsoft.OpenApi.Models` types to `Microsoft.OpenApi` types. This includes changes to method signatures and transformer interfaces. [[1]](diffhunk://#diff-c0fc3af6664ee711a463c5b0760c3212997ed906eb34201b3256e7fe5407b8f7L5-R9) [[2]](diffhunk://#diff-c0fc3af6664ee711a463c5b0760c3212997ed906eb34201b3256e7fe5407b8f7L28-R34) [[3]](diffhunk://#diff-c0fc3af6664ee711a463c5b0760c3212997ed906eb34201b3256e7fe5407b8f7L58-R58)\r\n\r\n### Project Configuration:\r\n* Added `<Using Include=\"Microsoft.OpenApi\" />` to the `Sample.csproj` and `Microsoft.AspNetCore.OpenApi.csproj` files to simplify namespace management. [[1]](diffhunk://#diff-c53553eaf027567cc522a96477213536415055f64a508d959f83fecb237e5884R42-R45) [[2]](diffhunk://#diff-48a26c974fa19929ccc9198e857c3664e69afa3691c7b0a782587d0e51b2b638L52-R59)","Url":"https://github.com/dotnet/aspnetcore/pull/62363","RelatedDescription":"Open PR \"Update Microsoft.OpenApi to preview28\" (#62363)"},{"Id":"3150782893","IsPullRequest":false,"CreatedAt":"2025-06-16T17:44:02","Actor":"cda-1","Number":"62362","RawContent":null,"Title":"[.net 10 Preview 5] Blazor wasm stand-alone app HostEnvironment is \"Production\" in development mode","State":"open","Body":"### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\n\nKestrel doesn't seem to be setting the Blazor-Environment header for stand-alone blazor wasm apps in .net 10. It works fine in .net 8 and 9.\n\n\n### Expected Behavior\n\nWe expect that kestrel will somehow get the Environment name into the blazor app. The console statement that logs to the browser should show the very same environment that is logged to the host console as kestrel launches.\n\nIt seems there should be a Blazor-Environment header on one of the blazor files, but I couldn't find any that had it. In .net 8 and .net 9 for example, blazor.boot.json has this header set on it. In .net 10 preview, I didn't actually see this file at all.\n\n### Steps To Reproduce\n\nUsing VIsual Studio 2022 or 2022 preview, create a blazor standalone wasm app using the template. Accept the defaults (no auth, etc) to keep it simple.\n\nIn Program.cs, after the line:\n`var builder = WebAssemblyHostBuilder.CreateDefault(args);`\n\nPlace:\n`Console.WriteLine($\"Client Hosting Environment: {builder.HostEnvironment.Environment}\");`\n\nUse `dotnet run` to launch the app. In all 3 .net versions, it will log to the console: \n\n\"info: Microsoft.Hosting.Lifetime[0]\n      Hosting environment: Development\"\n\nBut when you open your browser and look at its console, this value carried over only in .net 8 and .net 9.\n\nIn .net 8 and .net 9 apps, \"Development\" is logged to the browser console. In .net 10 preview 5 apps, it's \"Production\" that is logged.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n10.0.100-preview.5.25277.114\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/62362","RelatedDescription":"Open issue \"[.net 10 Preview 5] Blazor wasm stand-alone app HostEnvironment is \"Production\" in development mode\" (#62362)"},{"Id":"3149627307","IsPullRequest":false,"CreatedAt":"2025-06-16T11:23:18","Actor":"Kuldip4053","Number":"62361","RawContent":null,"Title":"Blazor Server Session Manage","State":"open","Body":"\"Hi, I want to manage user sessions in a Blazor Server application with the following requirements:\"\n\nNo JavaScript – I do not want to use any JavaScript for session handling.\n\nMulti-tab session sync – If the app is opened in multiple tabs in the same browser, starting or updating a session in one tab should automatically reflect in all the other tabs.\n\nSession persistence on page refresh – The session should remain active and accessible even after refreshing the page.\n\nNo Entity Framework – I don't want to use Entity Framework or any database ORM.\n\nNo third-party packages – I want to achieve this only with built-in .NET/Blazor tools, without relying on external libraries.\n\nServer-side session management – The session data should be stored and managed on the server.\n\nNo cookies\n\ni need somthing like mvc Session","Url":"https://github.com/dotnet/aspnetcore/issues/62361","RelatedDescription":"Open issue \"Blazor Server Session Manage\" (#62361)"},{"Id":"3149568396","IsPullRequest":true,"CreatedAt":"2025-06-16T11:02:06","Actor":"oroztocil","Number":"62360","RawContent":null,"Title":"Add start scripts for the Validation package solution","State":"open","Body":"Minor: Adds scripts to open the new Validation solution in VS/VSC as is done in other packages/solutions.","Url":"https://github.com/dotnet/aspnetcore/pull/62360","RelatedDescription":"Open PR \"Add start scripts for the Validation package solution\" (#62360)"},{"Id":"3141723156","IsPullRequest":false,"CreatedAt":"2025-06-16T10:06:45","Actor":"ctigrisht","Number":"62337","RawContent":null,"Title":"Blazor Native - Blazor templating engine with native component backend for desktop and mobile","State":"closed","Body":"### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nHello,\n\nBlazor is an amazing templating engine. While it could benefit from some quality of life improvement, it is light years ahead of XAML in terms of boilerplate and simplicity.\n\nReact Native has seen immense success due to the fact that it kept the JSX model but with a native backend, this made a lot of developers use existing knowledge to transition to native apps.\n\nThe downside of react is that it uses the JS runtime, I won't go into the details here.\n\nWhat if Blazor supported a backend-agnostic framework to display components that are either native (WinUI, GTK) or drawn (via Skia or others) that could be used both in desktop and mobile.\n\n### Describe the solution you'd like\n\nHere would be an example:\n\n```razor\n@page \"/Users\"\n@inject LocalesRepo Locales\n\n<StackPanel Classes=\"VerticalFlex\">\n   @foreach(var user in Users)\n   {\n      <Border Classes=\"UserDisplayBox\">\n         <Label @value=\"user.Name\"/>\n      </Border>\n   }\n</StackPanel>\n@if (Users.Count is 0)\n{\n   <Label Classes=\"BigText\">@Locales.NoUsersInList</Label>\n}\n\n<StackPanel Classes=\"AddContactBox\">\n   <Input @bind=\"newContact\"/>\n   <Button @onclick=\"addContact\">@Locales.AddContact</Button>\n</StackPanel>\n\n@code{\n   string newContact = string.Empty;\n\n   async Task addContact()\n   {\n      // do stuff\n   }\n}\n\n```\nThis is just a basic proposal, but it would function almost exactly like normal blazor, but native.\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/62337","RelatedDescription":"Closed issue \"Blazor Native - Blazor templating engine with native component backend for desktop and mobile\" (#62337)"},{"Id":"3148862403","IsPullRequest":false,"CreatedAt":"2025-06-16T07:25:49","Actor":"pr-benchmarks[bot]","Number":"62359","RawContent":null,"Title":"Blazor time to first UI improvement: blazorwasmbenchmark","State":"open","Body":"| Scenario | Environment | Date | Old (ms) | New (ms) | Change | Dependencies |\n| -------- | ----------- | ---- | -------- | -------- | ------ | ------------ |\n| blazorwasmbenchmark  |  | 06/15/2025 05:13:04 | 246 | 235 | -4.50 % (-11)  :thumbsup: | <details>    <summary>Changes</summary>     <table><th>Name</th><th>Version</th><th>Diff</th></table></details> |\n\n[PowerBI Dashboard](https://aka.ms/aspnet/benchmarks)\n<!-- [MSGPACK][/MSGPACK] -->","Url":"https://github.com/dotnet/aspnetcore/issues/62359","RelatedDescription":"Open issue \"Blazor time to first UI improvement: blazorwasmbenchmark\" (#62359)"},{"Id":"3142128142","IsPullRequest":true,"CreatedAt":"2025-06-16T06:26:52","Actor":"JamesNK","Number":"62340","RawContent":null,"Title":"Update gRPC shared code","State":"closed","Body":"gRPC JSON transcoding has some shared code with `Grpc.AspNetCore.Server`. It is just a copy of the source code that is shared between the two repos.\r\n\r\nI've updated the shared code in this PR.","Url":"https://github.com/dotnet/aspnetcore/pull/62340","RelatedDescription":"Closed or merged PR \"Update gRPC shared code\" (#62340)"},{"Id":"3148196668","IsPullRequest":true,"CreatedAt":"2025-06-16T06:23:56","Actor":"Dev-Re2906","Number":"62355","RawContent":null,"Title":"Dev re2906 patch 1","State":"closed","Body":"# {PR title}\r\n\r\n<!-- Thank you for submitting a pull request to our repo. -->\r\n\r\n<!-- If this is your first PR in the ASP.NET Core repo, please run through the checklist\r\nbelow to ensure a smooth review and merge process for your PR. -->\r\n\r\n- [x] You've read the [Contributor Guide](https://github.com/dotnet/aspnetcore/blob/main/CONTRIBUTING.md) and [Code of Conduct](https://github.com/dotnet/aspnetcore/blob/main/CODE-OF-CONDUCT.md).\r\n- [x] You've included unit or integration tests for your change, where applicable.\r\n- [x] You've included inline docs for your change, where applicable.\r\n- [x] There's an open issue for the PR that you are making. If you'd like to propose a new feature or change, please open an issue to discuss the change or find an existing issue.\r\n\r\n<!-- Once all that is done, you're ready to go. Open the PR with the content below. -->\r\n\r\nSummary of the changes (Less than 80 chars)\r\n\r\n## Description\r\n\r\n{Detail}\r\n\r\nFixes #{bug number} (in this specific format)\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/62355","RelatedDescription":"Closed or merged PR \"Dev re2906 patch 1\" (#62355)"},{"Id":"3148549481","IsPullRequest":true,"CreatedAt":"2025-06-16T05:02:16","Actor":"dotnet-maestro[bot]","Number":"62357","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/extensions","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:11a4fe08-b74d-4c15-1004-08dcbc30275f)\n## From https://github.com/dotnet/extensions\n- **Subscription**: [11a4fe08-b74d-4c15-1004-08dcbc30275f](https://maestro.dot.net/subscriptions?search=11a4fe08-b74d-4c15-1004-08dcbc30275f)\n- **Build**: [20250613.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2729432)\n- **Date Produced**: June 13, 2025 9:08:06 AM UTC\n- **Commit**: [694b95ef75c6bd9de00ef761dadae4e70ee8739f](https://github.com/dotnet/extensions/commit/694b95ef75c6bd9de00ef761dadae4e70ee8739f)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Extensions.Diagnostics.Testing**: [from 9.7.0-preview.1.25306.2 to 9.7.0-preview.1.25313.1][1]\n  - **Microsoft.Extensions.TimeProvider.Testing**: [from 9.7.0-preview.1.25306.2 to 9.7.0-preview.1.25313.1][1]\n\n[1]: https://github.com/dotnet/extensions/compare/04bd58871e...694b95ef75\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:11a4fe08-b74d-4c15-1004-08dcbc30275f)\n\n","Url":"https://github.com/dotnet/aspnetcore/pull/62357","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/extensions\" (#62357)"},{"Id":"3148308728","IsPullRequest":true,"CreatedAt":"2025-06-16T02:02:13","Actor":"dotnet-maestro[bot]","Number":"62356","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"open","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n[marker]: <> (Begin:227fbda2-94d8-406e-91e6-26cb20b6628c)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [227fbda2-94d8-406e-91e6-26cb20b6628c](https://maestro.dot.net/subscriptions?search=227fbda2-94d8-406e-91e6-26cb20b6628c)\n- **Build**: [20250616.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2731387)\n- **Date Produced**: June 16, 2025 11:03:12 PM UTC\n- **Commit Diff**: [005f36c...2034317](https://github.com/dotnet/dotnet/compare/005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4...20343176cfd35b56036dc4ca9d9ddd2a201a4e92)\n- **Commit**: [20343176cfd35b56036dc4ca9d9ddd2a201a4e92](https://github.com/dotnet/dotnet/commit/20343176cfd35b56036dc4ca9d9ddd2a201a4e92)\n- **Branch**: main\n\n**Updated Dependencies**\n- **dotnet-ef**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore.InMemory**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore.Relational**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore.Sqlite**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore.SqlServer**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore.Tools**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.EntityFrameworkCore.Design**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Caching.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Caching.Memory**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.Binder**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.CommandLine**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.FileExtensions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.Ini**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.Json**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.UserSecrets**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration.Xml**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Configuration**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.DependencyInjection**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Diagnostics**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Diagnostics.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.FileProviders.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.FileProviders.Composite**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.FileProviders.Physical**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.FileSystemGlobbing**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Hosting.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Hosting**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Http**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.Abstractions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.Configuration**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.Console**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.Debug**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.EventSource**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.EventLog**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging.TraceSource**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Logging**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Options.DataAnnotations**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Options**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.Primitives**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Diagnostics.DiagnosticSource**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Diagnostics.EventLog**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.DirectoryServices.Protocols**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Formats.Asn1**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.IO.Pipelines**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Net.Http.Json**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Net.Http.WinHttpHandler**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Net.ServerSentEvents**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Reflection.Metadata**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Security.Cryptography.Xml**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Security.Permissions**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Threading.AccessControl**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Threading.Channels**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Threading.RateLimiting**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Extensions.DependencyModel**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Bcl.AsyncInterfaces**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Bcl.TimeProvider**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Collections.Immutable**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Memory.Data**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Numerics.Tensors**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **System.Runtime.Caching**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.Web.Xdt**: [from 10.0.0-preview.25315.102 to 10.0.0-preview.25316.103][1]\n- **System.Composition**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.DotNet.HotReload.Agent**: [from 10.0.100-preview.6.25315.102 to 10.0.100-preview.6.25316.103][1]\n- **Microsoft.DotNet.HotReload.Agent.Data**: [from 10.0.100-preview.6.25315.102 to 10.0.100-preview.6.25316.103][1]\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25315.102 to 10.0.0-preview.6.25316.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n- **Microsoft.DotNet.Build.Tasks.Archives**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n- **Microsoft.DotNet.Build.Tasks.Installers**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n- **Microsoft.DotNet.Build.Tasks.Templating**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n- **Microsoft.DotNet.SharedFramework.Sdk**: [from 10.0.0-beta.25315.102 to 10.0.0-beta.25316.103][1]\n\n[marker]: <> (End:227fbda2-94d8-406e-91e6-26cb20b6628c)\n\n\n[1]: https://github.com/dotnet/dotnet/compare/005f36cd19...be8cb623e0\n\n[1]: https://github.com/dotnet/dotnet/compare/be8cb623e0...20343176cf\n","Url":"https://github.com/dotnet/aspnetcore/pull/62356","RelatedDescription":"Open PR \"[main] Source code updates from dotnet/dotnet\" (#62356)"},{"Id":"3148019957","IsPullRequest":false,"CreatedAt":"2025-06-15T19:53:19","Actor":"mrcandido","Number":"62354","RawContent":null,"Title":"Asp.net core 8.0.17 breaks redirectURI","State":"open","Body":"### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nWe have a .net 8 Blazor application running behind a reverse proxy. The application uses Okta for authentication. The application was working fine until the asp.net core hosting bundle 8.0.17 was pushed to the servers.\n\nAfter that, the application started sending the server name to Okta in the redirect URI parameter instead of the external URL.\n\nReverting to asp.net core hosting bundle 8.0.16 fixed the issue.\n\n### Expected Behavior\n\nThe external URL should be passed to Okta as the redirect URI, not the internal server name.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n8.0\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/62354","RelatedDescription":"Open issue \"Asp.net core 8.0.17 breaks redirectURI\" (#62354)"},{"Id":"3146972109","IsPullRequest":false,"CreatedAt":"2025-06-15T01:46:01","Actor":"CattyCathy","Number":"62353","RawContent":null,"Title":"ASP.NET Core Web App (MVC) and other project types lost some templates","State":"open","Body":"# OS\nWindows 24H2\n# Visual Studio Version\n17.14.5\n# .NET Version\n.NET 8 and 9\n# Description\nI'm trying to develop a project with ASP.NET Core Web App and following the tutorial, and I can't finish scaffolding pages like https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/adding-model?view=aspnetcore-9.0&tabs=visual-studio#scaffold-movie-pages , I followed the steps and then it show error to me.\n\n![Image](https://github.com/user-attachments/assets/5e3142a4-af3a-481b-a842-369c9cb8bbee)\n\n![Image](https://github.com/user-attachments/assets/29fd0e8b-1c8b-4c52-a905-5f0eda3148f3)\n\nAdd - New Item  pane doesn't have a template called  \"MVC Controller with views,  using Entity Framework\".\n\nI also tested other types of projects, including:\n- ASP.NET Core Web App (MVC)\n- ASP.NET Core Web App (Razor Pages)\n- Blazor Web App\n- Blazor Server App\n\nNone of them can finish adding scaffold items with Add - New Scaffolded Item/\n\nPlease help.","Url":"https://github.com/dotnet/aspnetcore/issues/62353","RelatedDescription":"Open issue \"ASP.NET Core Web App (MVC) and other project types lost some templates\" (#62353)"},{"Id":"3142014296","IsPullRequest":true,"CreatedAt":"2025-06-14T21:42:56","Actor":"dotnet-maestro[bot]","Number":"62339","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n\n[marker]: <> (Begin:227fbda2-94d8-406e-91e6-26cb20b6628c)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [227fbda2-94d8-406e-91e6-26cb20b6628c](https://maestro.dot.net/subscriptions?search=227fbda2-94d8-406e-91e6-26cb20b6628c)\n- **Build**: [20250614.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2730183)\n- **Date Produced**: June 14, 2025 2:02:34 PM UTC\n- **Commit Diff**: [20fdc50...005f36c](https://github.com/dotnet/dotnet/compare/20fdc50b34ee89e7c54eef0a193c30ed4816597a...005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4)\n- **Commit**: [005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4](https://github.com/dotnet/dotnet/commit/005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4)\n- **Branch**: main\n\n**Updated Dependencies**\n- **dotnet-ef**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore.InMemory**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore.Relational**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore.Sqlite**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore.SqlServer**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore.Tools**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.EntityFrameworkCore.Design**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Caching.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Caching.Memory**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.Binder**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.CommandLine**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.FileExtensions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.Ini**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.Json**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.UserSecrets**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration.Xml**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Configuration**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.DependencyInjection**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Diagnostics**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Diagnostics.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.FileProviders.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.FileProviders.Composite**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.FileProviders.Physical**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.FileSystemGlobbing**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Hosting.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Hosting**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Http**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.Abstractions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.Configuration**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.Console**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.Debug**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.EventSource**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.EventLog**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging.TraceSource**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Logging**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Options.DataAnnotations**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Options**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.Primitives**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Diagnostics.DiagnosticSource**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Diagnostics.EventLog**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.DirectoryServices.Protocols**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Formats.Asn1**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.IO.Pipelines**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Net.Http.Json**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Net.Http.WinHttpHandler**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Net.ServerSentEvents**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Reflection.Metadata**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Security.Cryptography.Xml**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Security.Permissions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Threading.AccessControl**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Threading.Channels**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Threading.RateLimiting**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Extensions.DependencyModel**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Bcl.AsyncInterfaces**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Bcl.TimeProvider**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Collections.Immutable**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Memory.Data**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Numerics.Tensors**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Runtime.Caching**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Web.Xdt**: [from 10.0.0-preview.25313.102 to 10.0.0-preview.25314.101][1]\n- **System.Composition**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.DotNet.HotReload.Agent**: [from 10.0.100-preview.6.25313.102 to 10.0.100-preview.6.25314.101][1]\n- **Microsoft.DotNet.HotReload.Agent.Data**: [from 10.0.100-preview.6.25313.102 to 10.0.100-preview.6.25314.101][1]\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.Build.Tasks.Archives**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.Build.Tasks.Installers**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.Build.Tasks.Templating**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.SharedFramework.Sdk**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n\n[marker]: <> (End:227fbda2-94d8-406e-91e6-26cb20b6628c)\n\n\n\n[1]: https://github.com/dotnet/dotnet/compare/20fdc50b34...25bec1af21\n\n[1]: https://github.com/dotnet/dotnet/compare/25bec1af21...04b9001ab9\n\n[1]: https://github.com/dotnet/dotnet/compare/04b9001ab9...005f36cd19\n","Url":"https://github.com/dotnet/aspnetcore/pull/62339","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#62339)"},{"Id":"3146763787","IsPullRequest":false,"CreatedAt":"2025-06-14T21:16:05","Actor":"tesar-tech","Number":"62352","RawContent":null,"Title":"Blazor Register page template contains asp-route-returnUrl=\"@ReturnUrl\"","State":"open","Body":"`asp-route-returnUrl` is used here:\n\nhttps://github.com/dotnet/aspnetcore/blob/30fd6e2c2336a28e3caf9a289827d90f56db2083/src/ProjectTemplates/Web.ProjectTemplates/content/BlazorWeb-CSharp/BlazorWeb-CSharp/Components/Account/Pages/Register.razor#L25C33-L25C65\n\nBut tag helpers like `asp-route-*` do not work in Blazor components. \n\n\nHappy to fix it if you'd like.\n\n","Url":"https://github.com/dotnet/aspnetcore/issues/62352","RelatedDescription":"Open issue \"Blazor Register page template contains asp-route-returnUrl=\"@ReturnUrl\"\" (#62352)"},{"Id":"3146182408","IsPullRequest":false,"CreatedAt":"2025-06-14T17:03:06","Actor":"Borgling","Number":"62351","RawContent":null,"Title":"Blazor Server - HttpContextAccessor.HttpContext null on Linux, but accessable on windows.","State":"closed","Body":"### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nUsing .NET 9 Blazor Server I get unexpected behaviour between Windows and Linux hosting. \n\nCurrently I'm getting an email address from the initial request headers. I've tried various ways of doing it, and always get the same issue. Works on Windows, doesn't work on Linux. \n\nHere is my latest example of the code, although this is 1 of many different approaches all with the same issue (works on windows not on Linux): \n\n```\n    public override Task OnConnectionUpAsync(Circuit circuit, CancellationToken cancellationToken)\n    {\n        Console.WriteLine($\"HttpContextAccessor: {_httpContextAccessor}, HttpContext null: {_httpContextAccessor.HttpContext == null}, Request null: {_httpContextAccessor.HttpContext?.Request == null}, Headers null: {_httpContextAccessor.HttpContext?.Request?.Headers == null}\");\n\n        var headers = _httpContextAccessor.HttpContext?.Request?.Headers;\n\n        if (headers != null)\n        {\n            var headerDict = headers.ToDictionary(h => h.Key, h => string.Join(\", \", h.Value.ToArray()));\n            _headerStore.SetHeaders(circuit.Id, headerDict);\n            Console.WriteLine(string.Join(\", \", headers.ToArray()));\n\n\n        }\n\n        return Task.CompletedTask;\n    }\n\n```\n\n\n\nOn windows 10, running the published .exe, it runs on http://localhost:5000\n\nIf I `curl http://localhost:5000` I get the expected output:\n\n```\nHttpContextAccessor: Microsoft.AspNetCore.Http.HttpContextAccessor, HttpContext null: False, Request null: False, Headers null: False\n[Connection, Upgrade], [Host, localhost:5000], [User-Agent, ..... etc etc\n```\n\nBut running on Linux, using `dotnet myapp.dll` followed by `curl http://localhost:5000` I will get the following output:\n\n ```\nHttpContextAccessor: Microsoft.AspNetCore.Http.HttpContextAccessor, HttpContext null: True, Request null: True, Headers null: True\n```\n\nShowing that `HttpContextAccessor.HttpContext` is null\n\n\nI have used the following code, and headers are sent correctly, on both windows and linux. \n\n```\n\napp.Use(async (context, next) =>\n{\n    if (context.Request.Path.StartsWithSegments(\"/_blazor/negotiate\"))\n    {\n        // capture headers (e.g. save in a temp store keyed by connection ID or cookie)\n        Console.WriteLine(\"Negotiation headers:\");\n        foreach (var header in context.Request.Headers)\n        {\n            Console.WriteLine($\"{header.Key} = {header.Value}\");\n        }\n    }\n\n    await next();\n});\n\n```\n\nTechnically I think HttpContextAccessor.HttpContext  should be null after the initial request, as we move onto the SignalR connection. \n\nBut I can't understand why it's accessible on windows but not linux.\n\nAlso then leaves us with the questions, on Linux, how can you map the initial request headers, to be accessible within the SignalR connection scope. \n\n\n### Expected Behavior\n\nThe same behaviour between Kestrel running on windows, and Kestrel running on Linux. \n\n\n\n### Steps To Reproduce\n\nA simple test that works on windows but not Linux.\n\n```\n@page \"/\"\n\n@inject IHttpContextAccessor accessor\n<h3>Your Request Headers</h3>\n\n@if (accessor.HttpContext == null)\n{\n    <p><em>No headers found.</em></p>\n}\nelse\n{\n    <ul>\n        @foreach (var header in accessor.HttpContext.Request.Headers)\n        {\n            <li><strong>@header.Key</strong>: @header.Value</li>\n        }\n    </ul>\n}\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/62351","RelatedDescription":"Closed issue \"Blazor Server - HttpContextAccessor.HttpContext null on Linux, but accessable on windows.\" (#62351)"},{"Id":"3145725216","IsPullRequest":false,"CreatedAt":"2025-06-14T08:00:27","Actor":"Kumima","Number":"62350","RawContent":null,"Title":"[.NET 10 Preview 5] Blazor Web WebAssembly Mode crashes related with JsonSerialization","State":"open","Body":"### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI enable the `System.Text.Json.Serialization.RespectRequiredConstructorParametersDefault` as `true` for my projects. See: https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/required-properties#feature-switch\n\nIt works fine before, but after updating to Preview5, I got:\n```\nAggregateException_ctor_DefaultMessage (An exception occurred executing JS interop: JsonRequiredPropertiesMissing, Microsoft.AspNetCore.Components.ResourceAsset, 'properties'. See InnerException for more details.)\n    at un (marshal-to-js.ts:421:18)\n    at rn.resolve_or_reject (marshal-to-js.ts:315:28)\n    at marshal-to-js.ts:364:16\n    at marshal-to-js.ts:341:48\n    at gr (invoke-js.ts:528:9)\n    at Mc (marshal-to-js.ts:341:5)\n    at dotnet.native.ulywfn9r8g.wasm:0x1f60f\n    at dotnet.native.ulywfn9r8g.wasm:0x1ca55\n    at dotnet.native.ulywfn9r8g.wasm:0xeb73\n    at dotnet.native.ulywfn9r8g.wasm:0x1f0f3\n```\n\nTo disable `RespectRequiredConstructorParametersDefault` will fix, this seems a break change, and I want to keep my `RespectRequiredConstructorParametersDefault` as true.\n\nMy guess is Preview5 deserializes `Microsoft.AspNetCore.Components.ResourceAsset` without all required properties.\n\n### Describe the solution you'd like\n\nWith `System.Text.Json.Serialization.RespectRequiredConstructorParametersDefault` as `true` won't break my Blazor Web application. An approach is to make sure all required properties presented in the json string. Or:\n```csharp\npublic sealed class ResourceAsset(string url, IReadOnlyList<ResourceAssetProperty>? properties);\n// Make the second param optional\npublic sealed class ResourceAsset(string url, IReadOnlyList<ResourceAssetProperty>? properties = null);\n```\n\n### Additional context\n\nMy .NET SDK Version: 10.0.100-preview.5.25277.114\nI'm using preview5 nuget packages for all my Blazor related packages.","Url":"https://github.com/dotnet/aspnetcore/issues/62350","RelatedDescription":"Open issue \"[.NET 10 Preview 5] Blazor Web WebAssembly Mode crashes related with JsonSerialization\" (#62350)"},{"Id":"3145507804","IsPullRequest":true,"CreatedAt":"2025-06-14T06:07:14","Actor":"jacob-l","Number":"62349","RawContent":null,"Title":"Unescape relative path before file lookup to fix space-in-filename issue","State":"open","Body":"### Summary\r\n\r\nWhen serving files, if the requested path contains spaces or other special characters, the lookup fails because `Uri.MakeRelativeUri` returns a URL-encoded path (e.g. spaces become `%20`). The file provider expects a plain file path, not a URL-encoded one.\r\n\r\nThis PR adds a call to `Uri.UnescapeDataString` after `MakeRelativeUri`, ensuring the relative path is correctly unescaped before being used to retrieve files.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/62349","RelatedDescription":"Open PR \"Unescape relative path before file lookup to fix space-in-filename issue\" (#62349)"},{"Id":"3145077055","IsPullRequest":false,"CreatedAt":"2025-06-13T23:41:33","Actor":"anandanthony","Number":"62348","RawContent":null,"Title":"ASP.NET core project does not create executable in published files when referenced by another project in .net 9.0","State":"open","Body":"Hello team, we are seeing an issue wherein one of our ASP.NET core app referencing another app when published does not generate the executable expected for the referenced project in the publish folder. This has only started to happen after we moved to .net 9.0.\n\nFollowing are the .csproj of the primary and referenced apps.\n\nPrimary:\n```\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\n    <IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <ProjectReference Include=\"..\\AppExeNotAvailable\\AppExeNotAvailable.csproj\" />\n  </ItemGroup>\n\n</Project>\n```\n\nReferenced:\n```\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\n    <PublishSingleFile>true</PublishSingleFile>\n  </PropertyGroup>\n\n</Project>\n```\n\nThe way we publish the primary App is by running the command:\n`dotnet publish .\\PrimaryExeApp\\PrimaryExeApp.csproj --no-restore -c Release -r win-x64 --self-contained true -p:PublishReadyToRun=true -p:PublishReadyToRunComposite=true -o ./publish8.0 /warnaserror`\n\nAdding screenshot for the publish folder for .net8.0 and .net9.0\n\n.net8.0\n<img width=\"753\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2991eecc-236f-4432-845c-fe446c97b0e2\" />\n\n.net9.0\n\n<img width=\"754\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e8100f67-a378-4e00-a886-28b7378ec2c9\" />\n\nSince our primary app depends on the executable generated by the referenced app, we expect the same publish behavior we were seeing in .net8.\n\nAsk: Steps, change on how we can get the executable of a referenced project when publishing the primary app referencing the project.","Url":"https://github.com/dotnet/aspnetcore/issues/62348","RelatedDescription":"Open issue \"ASP.NET core project does not create executable in published files when referenced by another project in .net 9.0\" (#62348)"},{"Id":"3144078933","IsPullRequest":true,"CreatedAt":"2025-06-13T22:55:32","Actor":"ellahathaway","Number":"62346","RawContent":null,"Title":"[DO NOT MERGE] Install scripts update validation PR","State":"closed","Body":"","Url":"https://github.com/dotnet/aspnetcore/pull/62346","RelatedDescription":"Closed or merged PR \"[DO NOT MERGE] Install scripts update validation PR\" (#62346)"},{"Id":"3144526033","IsPullRequest":false,"CreatedAt":"2025-06-13T19:15:24","Actor":"MackinnonBuck","Number":"62347","RawContent":null,"Title":"Follow-ups for passkey support in ASP.NET Core Identity","State":"open","Body":"https://github.com/dotnet/aspnetcore/pull/62112 adds support for passkeys in ASP.NET Core Identity and extends the Blazor Web App template to support passkey management and authentication. However, there are some follow-up items we should consider:\n- [ ] Update `Microsoft.AspNetCore.Identity.UI` to support the same passkey UI that got added to the Blazor Web App template\n- [ ] Update scaffolding to include passkey support\n- [ ] Extend the Blazor Web App template, Identity UI, and scaffolding to support passwordless account creation\n- [ ] Determine how to best help customers migrate their databases to include passkeys\n- [ ] Enable WebAuthn conformance testing in CI\n    * There's currently a project in this repo that can be run against the [FIDO2 Conformance Test tool](https://fidoalliance.org/certification/functional-certification/conformance/), but the tool itself is proprietary and doesn't have a CLI. We should consider writing our own solution that performs similar validations to the conformance testing tool.\n- [ ] Support [conditional create](https://developer.chrome.com/docs/identity/webauthn-conditional-create) to allow the user to seamlessly upgrade a password to a passkey after signing in\n- [ ] Use the [signals API](https://developer.chrome.com/docs/identity/webauthn-signal-api) to, e.g., inform the authenticator when a passkey was revoked so it doesn't get presented to the user as an option when signing in\n- [ ] Make it easy to configure [well-known passkey endpoints](https://w3c.github.io/webappsec-passkey-endpoints/passkey-endpoints.html) so that authenticators can automatically upgrade passwords to passkeys without requiring the customer to visit the site\n","Url":"https://github.com/dotnet/aspnetcore/issues/62347","RelatedDescription":"Open issue \"Follow-ups for passkey support in ASP.NET Core Identity\" (#62347)"},{"Id":"3142668738","IsPullRequest":true,"CreatedAt":"2025-06-13T16:38:57","Actor":"akoeplinger","Number":"62342","RawContent":null,"Title":"Skip Microsoft.AspNetCore.App.Runtime.Composite.r2r.dll in signing check","State":"closed","Body":"Fixes https://github.com/dotnet/aspnetcore/issues/61954\r\n\r\nI included this change in a signed build on my branch and it fixed the issue.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/62342","RelatedDescription":"Closed or merged PR \"Skip Microsoft.AspNetCore.App.Runtime.Composite.r2r.dll in signing check\" (#62342)"},{"Id":"3143877324","IsPullRequest":false,"CreatedAt":"2025-06-13T15:05:44","Actor":"MattParkerDev","Number":"62345","RawContent":null,"Title":"Microsoft.Extensions.ApiDescription.Server - Nullable query parameters are not generated as nullable in OpenAPI Document","State":"open","Body":"cc: @captainsafia \nNullable query parameters are not generated as nullable in OpenAPI Document, such as:\n\n```csharp\ngroup.MapGet(\"long\", (long? myLong) => { })\n\t\t\t.WithName(\"NullableLong\");\n```\nbecomes:\n```json\n\"get\": {\n        \"tags\": [\n          \"Nullable\"\n        ],\n        \"operationId\": \"NullableLong\",\n        \"parameters\": [\n          {\n            \"name\": \"myLong\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n```\n\nI believe the cause is line 745:\nhttps://github.com/dotnet/aspnetcore/blob/684e739228ae335a81e0dc7154e5c362f478cfc8/src/OpenApi/src/Services/OpenApiDocumentService.cs#L739-L761\n\nIs there a historical reason for always unwrapping nullable parameter types?","Url":"https://github.com/dotnet/aspnetcore/issues/62345","RelatedDescription":"Open issue \"Microsoft.Extensions.ApiDescription.Server - Nullable query parameters are not generated as nullable in OpenAPI Document\" (#62345)"},{"Id":"3143362379","IsPullRequest":true,"CreatedAt":"2025-06-13T14:39:34","Actor":"dependabot[bot]","Number":"62343","RawContent":null,"Title":"[main] (deps): Bump src/submodules/googletest from `7e2c425` to `175c1b5`","State":"closed","Body":"Bumps [src/submodules/googletest](https://github.com/google/googletest) from `7e2c425` to `175c1b5`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/googletest/commit/175c1b55cfb3dbed519b94a370c083aac605009f\"><code>175c1b5</code></a> Add UnpackStructImpl for structs with 24, 25 and 26 fields.</li>\n<li><a href=\"https://github.com/google/googletest/commit/1aeec48a1dda87f179d76b5f4f30db91c9ab7239\"><code>1aeec48</code></a> Merge pull request <a href=\"https://redirect.github.com/google/googletest/issues/4774\">#4774</a> from joel-langlois:FixReadme</li>\n<li><a href=\"https://github.com/google/googletest/commit/0fe21ac6ef4f4b6522e4912d73a6e9d380bc23e1\"><code>0fe21ac</code></a> README.md: Fixed broken Markdown link formatting.</li>\n<li><a href=\"https://github.com/google/googletest/commit/fd15f51d57f983c5f3f609bb39fd77f6dbdc391a\"><code>fd15f51</code></a> Automated Code Change</li>\n<li><a href=\"https://github.com/google/googletest/commit/6230d316e104d61c5e08f0ef14ced638c1d4c760\"><code>6230d31</code></a> In MatcherCast, store the input value as its own type rather than as the Matc...</li>\n<li><a href=\"https://github.com/google/googletest/commit/28e9d1f26771c6517c3b4be10254887673c94018\"><code>28e9d1f</code></a> googletest: Add a flag to fail if no tests were selected to run.</li>\n<li>See full diff in <a href=\"https://github.com/google/googletest/compare/7e2c425db2c2e024b2807bfe6d386f4ff068d0d6...175c1b55cfb3dbed519b94a370c083aac605009f\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","Url":"https://github.com/dotnet/aspnetcore/pull/62343","RelatedDescription":"Closed or merged PR \"[main] (deps): Bump src/submodules/googletest from `7e2c425` to `175c1b5`\" (#62343)"},{"Id":"3143473684","IsPullRequest":true,"CreatedAt":"2025-06-13T12:48:29","Actor":"dependabot[bot]","Number":"62344","RawContent":null,"Title":"[main] (deps): Bump dotnet/arcade from d237be4630776450573bc588eb995bb8f9ebc04f to 7a09c1144283309440a7966c664199944198c920","State":"open","Body":"Bumps [dotnet/arcade](https://github.com/dotnet/arcade) from d237be4630776450573bc588eb995bb8f9ebc04f to 7a09c1144283309440a7966c664199944198c920.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/dotnet/arcade/commit/7a09c1144283309440a7966c664199944198c920\"><code>7a09c11</code></a> Update xunit.v3 to 2.0.3 (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15904\">#15904</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/b51dedadc7a21629ea04a29464d385f9295c38f7\"><code>b51deda</code></a> Migrate Arcade.sln to slnx (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15896\">#15896</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/00d4251583e3ac1a7c682e81aae751a005f07718\"><code>00d4251</code></a> Re-enable aspnet-versioncheck test (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15900\">#15900</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/d2addec6ab5f47ee53a8b0bbd77af65225cc3b8c\"><code>d2addec</code></a> Update Directory.Packages.props</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/ec3754248b30ace9f2f20dbc63f5f5223b24ce5d\"><code>ec37542</code></a> Bump WiX v5 default version (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15906\">#15906</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/bfda6484c7463272324f6435e322e6e785039479\"><code>bfda648</code></a> Update xunit.v3 to 2.0.3</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/76e3ac65e067fa1607846964a1e9c48ec316fcc4\"><code>76e3ac6</code></a> [main] Update dependencies from dotnet/arcade (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15903\">#15903</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/186172916558a2e41c87c1ca4e02850e9bba5f53\"><code>1861729</code></a> Simplify arcade logging assembly lookup (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15899\">#15899</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/81d0f28d71282b87a5cff5a495de6e2c47419165\"><code>81d0f28</code></a> Remove AsmDiff from Arcade (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15898\">#15898</a>)</li>\n<li><a href=\"https://github.com/dotnet/arcade/commit/87d54020f2e5c6375cf015b56f48c8f90a51b6b7\"><code>87d5402</code></a> Fix slnx restore (<a href=\"https://redirect.github.com/dotnet/arcade/issues/15897\">#15897</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/dotnet/arcade/compare/d237be4630776450573bc588eb995bb8f9ebc04f...7a09c1144283309440a7966c664199944198c920\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","Url":"https://github.com/dotnet/aspnetcore/pull/62344","RelatedDescription":"Open PR \"[main] (deps): Bump dotnet/arcade from d237be4630776450573bc588eb995bb8f9ebc04f to 7a09c1144283309440a7966c664199944198c920\" (#62344)"},{"Id":"3142297125","IsPullRequest":true,"CreatedAt":"2025-06-13T05:23:25","Actor":"captainsafia","Number":"62341","RawContent":null,"Title":"Respect JsonSerializerOptions in validation errors","State":"open","Body":"This pull request introduces enhancements to JSON serialization and validation in the `Microsoft.Extensions.Validation` library. Key changes include improved handling of JSON naming policies, support for `JsonPropertyName` attributes, and caching of reflection results to optimize performance. Additionally, test cases have been updated to reflect these changes.\r\n\r\n### Enhancements to JSON Serialization and Validation:\r\n\r\n* **Support for JSON Naming Policies and Attributes**:\r\n  - Added a private method `GetJsonPropertyName` to determine effective property names during JSON serialization, considering `JsonPropertyNameAttribute` and naming policies.\r\n  - Updated validation logic to use JSON naming policies and `JsonPropertyName` attributes for formatting property names and paths. [[1]](diffhunk://#diff-8a083302cbb1a91500344326f0d3b33aaf3762a9ab85f98d8aa35a78aaeddfa3R75-R95) [[2]](diffhunk://#diff-d7fa0ebdbbee50c660e63376dbe7b96c7e78a834d4de2f0790b06ea472ef391aR109-R115)\r\n\r\n* **Performance Optimization**:\r\n  - Cached the presence of `DisplayAttribute` in the constructor of `ValidatablePropertyInfo` to avoid repeated reflection calls.\r\n  - Introduced the `HasDisplayAttribute` method to determine if a property or its corresponding record parameter has a `DisplayAttribute`.\r\n\r\n### Dependency and Context Updates:\r\n\r\n* **New Dependencies**:\r\n  - Added references to `Microsoft.AspNetCore.Http.Extensions` and `System.Text.Json` for JSON serialization support. [[1]](diffhunk://#diff-78683f0a8bc67f6315cbd76331aad1fecfcdb77e6d92169f4518cc34c20ac42cR15) [[2]](diffhunk://#diff-8a083302cbb1a91500344326f0d3b33aaf3762a9ab85f98d8aa35a78aaeddfa3R6-R8) [[3]](diffhunk://#diff-1f794ad2c3c46752a37109ea3f0ec310f8afe899e88816b6bc24b3abbc706b10R6-R9)\r\n  - Exposed `JsonSerializerOptions` in `ValidateContext` to retrieve JSON naming policies from the DI container.\r\n\r\n### Test Case Updates:\r\n\r\n* **Validation Tests**:\r\n  - Updated test cases to verify the correct application of JSON naming policies and `JsonPropertyName` attributes in validation error messages. [[1]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L129-R130) [[2]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L148-R148) [[3]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L167-R168) [[4]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L190-R196) [[5]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L219-R230) [[6]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L262-R273) [[7]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L291-R291) [[8]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L300-R300) [[9]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L310-R318) [[10]](diffhunk://#diff-b6f82f215e3815183fd9c6c9ba126943e38e07e4bb931a1a37d36c9529223f24L338-R338) [[11]](diffhunk://#diff-12246ea8fd1858f33fe57cfcf13ffc6dae91a4d86c08db728f6cee614021a0a0L131-R147)","Url":"https://github.com/dotnet/aspnetcore/pull/62341","RelatedDescription":"Open PR \"Respect JsonSerializerOptions in validation errors\" (#62341)"},{"Id":"3141740473","IsPullRequest":false,"CreatedAt":"2025-06-12T22:53:10","Actor":"vengut","Number":"62338","RawContent":null,"Title":"Minimal API: JsonStringEnumMemberName doesn't work while deserializing query params & headers","State":"open","Body":"### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Describe the bug\n\nI used this new .NET 9 attribute to customize enum names and it errors out during request parsing/deserialization:\nhttp://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/customize-properties#custom-enum-member-names\n\n### Expected Behavior\n\nI set up my enum like this:\n```csharp\n[JsonConverter(typeof(JsonStringEnumConverter))]\npublic enum TestEnum\n{\n    [JsonStringEnumMemberName(\"one\")]\n    A1,\n    [JsonStringEnumMemberName(\"two\")]\n    A2,\n}\n```\n\nI expected this call to not error out `http://localhost:5274/?testEnum=one`\n\nAll of these work:\n`http://localhost:5274/?testEnum=A1`\n`http://localhost:5274/?testEnum=0`\n\nThis also works:\n```csharp\nConsole.WriteLine(JsonSerializer.Deserialize<TestEnum>(\"\\\"one\\\"\")); // A1\n```\n\n### Steps To Reproduce\n\nProgram.cs:\n```csharp\nusing System.Text.Json;\nusing System.Text.Json.Serialization;\nusing Microsoft.AspNetCore.Mvc;\n\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.ConfigureHttpJsonOptions(options =>\n{\n    options.SerializerOptions.Converters.Add(new JsonStringEnumConverter());\n});\nvar app = builder.Build();\n\napp.MapGet(\"/\", ([FromQuery] TestEnum? testEnum = null) =>\n{\n    Console.WriteLine(testEnum);\n    Console.WriteLine(JsonSerializer.Deserialize<TestEnum>(\"\\\"one\\\"\"));\n    return testEnum;\n});\n\napp.Run();\n\n[JsonConverter(typeof(JsonStringEnumConverter))]\npublic enum TestEnum\n{\n    [JsonStringEnumMemberName(\"one\")]\n    A1,\n    [JsonStringEnumMemberName(\"two\")]\n    A2,\n}\n```\n\ncsproj:\n```\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\n\n    <PropertyGroup>\n        <TargetFramework>net9.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n    </PropertyGroup>\n\n</Project>\n```\n\n### Exceptions (if any)\n\n400\n\n### .NET Version\n\n9.0.300\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/62338","RelatedDescription":"Open issue \"Minimal API: JsonStringEnumMemberName doesn't work while deserializing query params & headers\" (#62338)"},{"Id":"3141483641","IsPullRequest":true,"CreatedAt":"2025-06-12T20:31:19","Actor":"wtgodbe","Number":"62336","RawContent":null,"Title":"[release/2.3] Update branding to 2.3.4","State":"closed","Body":"This pull request updates the baseline and patch versioning for ASP.NET Core to ensure consistency across the project. The key changes involve updating version numbers in multiple configuration files and adding a new property group for version `2.3.4`.\r\n\r\n### Version Updates:\r\n\r\n* [`eng/Baseline.Designer.props`](diffhunk://#diff-4d871589215547801f33bd38b80acdafc64a81820998305889f2b78f5feef064L5-R5): Updated `AspNetCoreBaselineVersion` from `2.3.2` to `2.3.3` and `BaselinePackageVersion` for `Microsoft.AspNetCore.HttpOverrides` from `2.3.0` to `2.3.3`. [[1]](diffhunk://#diff-4d871589215547801f33bd38b80acdafc64a81820998305889f2b78f5feef064L5-R5) [[2]](diffhunk://#diff-4d871589215547801f33bd38b80acdafc64a81820998305889f2b78f5feef064L467-R467)\r\n* [`eng/Baseline.xml`](diffhunk://#diff-f9561e127e2a447b5c99b768de51e0eff8e910dcf1930a01169ccbc8b3a05909L7-R7): Updated the baseline version from `2.3.2` to `2.3.3` and the package version for `Microsoft.AspNetCore.HttpOverrides` from `2.3.0` to `2.3.3`. [[1]](diffhunk://#diff-f9561e127e2a447b5c99b768de51e0eff8e910dcf1930a01169ccbc8b3a05909L7-R7) [[2]](diffhunk://#diff-f9561e127e2a447b5c99b768de51e0eff8e910dcf1930a01169ccbc8b3a05909L60-R60)\r\n* [`version.props`](diffhunk://#diff-e4bed5b736f205989dd4fdb6d78acfe9126577983d325d378ce91794d74e63c8L5-R5): Incremented the `AspNetCorePatchVersion` from `3` to `4`.\r\n\r\n### New Patch Configuration:\r\n\r\n* [`eng/PatchConfig.props`](diffhunk://#diff-34bcfd4dda2dd22cd2c28dfa3618f880996db857ac27ea509f78c83ec707c424R35-R38): Added a new property group for version `2.3.4` with an empty `PackagesInPatch` element.","Url":"https://github.com/dotnet/aspnetcore/pull/62336","RelatedDescription":"Closed or merged PR \"[release/2.3] Update branding to 2.3.4\" (#62336)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"2662868601","IsPullRequest":false,"CreatedAt":"2024-11-15T18:59:39","Actor":"maraf","Number":"516","RawContent":null,"Title":"[Breaking change]: Legacy Mono and Emscripten JavaScript APIs are not exported to global namespace in Blazor WebAssembly applications","State":"open","Body":"### Description\n\nIn previous versions of Blazor WebAssembly, legacy Mono and Emscripten APIs were exported to global namespace. \r\nFrom 9.0 those APIs are accessible throught Blazor.runtime object.\n\n### Version\n\n.NET 9 GA\n\n### Previous behavior\n\nLegacy Mono (MONO, BINDING) and Emscripten Module object was exported to global window object.\r\nFor example `window.Module.FS` returned emscripten virtual filesystem.\n\n### New behavior\n\nEmscripten Module object is now exported to `Blazor.runtime` object.\r\nFor example `Blazor.runtime.Module.FS` returns emscripten virtual filesystem.\r\nLegacy Mono API for interop was removed completely (MONO and BINDING) and replaced with JSImport/JSExport.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nThe general goal is not to polute global namespace and keep all the APIs accessible from single Blazor object.\n\n### Recommended action\n\nReplace accessing Emscripten APIs from window object to Blazor.runtime object.\n\n### Affected APIs\n\nwindow.MONO.*\r\nwindow.BINDING.*\r\nwindow.Module.*","Url":"https://github.com/aspnet/Announcements/issues/516","RelatedDescription":"Open issue \"[Breaking change]: Legacy Mono and Emscripten JavaScript APIs are not exported to global namespace in Blazor WebAssembly applications\" (#516)"},{"Id":"2606573022","IsPullRequest":false,"CreatedAt":"2024-10-22T21:39:01","Actor":"amcasey","Number":"515","RawContent":null,"Title":"[Breaking change]: dev cert export no longer creates folder","State":"open","Body":"### Description\n\nWhen you export the ASP.NET Core development certificate (used to enable https in local development), it will no longer create the directory into which the certificate is being exported, if that directory doesn’t already exist.\r\n\r\nThis change first appears in 8.0.10 and 9.0 RC1.\n\n### Version\n\n.NET 8 GA\n\n### Previous behavior\n\n```\r\ndotnet dev-certs https -ep C:\\NonExistent\\cert.pfx\r\n```\r\n\r\nIf `C:\\NonExistent\\` did not exist when the command was run, it would be created (with permissions inherited from the containing directory).\n\n### New behavior\n\nThe target directory must exist or the export will fail with a message like `There was an error exporting the HTTPS developer certificate to a file.`\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nThe development certificate is exported with its private key, so unauthorized access can be very problematic.  It may, nevertheless, be necessary to make it readable to multiple accounts - e.g. if the consuming process will not be run as the current user.  Rather than attempting to determine (and securely establish) permissions for the target directory, `dotnet dev-certs` require that it already exist.\n\n### Recommended action\n\nCreate the target directory (with appropriate permissions) before invoking `dotnet dev-certs`.\n\n### Affected APIs\n\nThis functionality is not presently exposed via an API - it is invoked from the command line.","Url":"https://github.com/aspnet/Announcements/issues/515","RelatedDescription":"Open issue \"[Breaking change]: dev cert export no longer creates folder\" (#515)"},{"Id":"2603358974","IsPullRequest":false,"CreatedAt":"2024-10-21T18:34:48","Actor":"amcasey","Number":"514","RawContent":null,"Title":"[Breaking change]: Handling of middleware types with multiple constructors","State":"open","Body":"### Description\n\nFormerly, when a middleware type with multiple satisfiable constructors was instantiated from the dependency injection container, the one with the most parameters would be used.  Now that only happens if the dependency injection container implements [`IServiceProviderIsService`](https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iserviceproviderisservice).\n\n### Version\n\n.NET 9 RC 1\n\n### Previous behavior\n\nFormerly, the first constructor was preferred (when both were satisfied) because it has more parameters.\r\n\r\n```csharp\r\npublic class CookiePolicyMiddleware\r\n{\r\n    public CookiePolicyMiddleware(RequestDelegate next, IOptions<CookiePolicyOptions> options, ILoggerFactory factory)\r\n    {\r\n        // Omitted for brevity\r\n    }\r\n\r\n    public CookiePolicyMiddleware(RequestDelegate next, IOptions<CookiePolicyOptions> options)\r\n    {\r\n        // Omitted for brevity\r\n    }\r\n}\r\n```\n\n### New behavior\n\nNow, neither constructor is preferred and construction fails with an error like \r\n```\r\nSystem.InvalidOperationException: 'Multiple constructors accepting all given argument types have been found in type 'Microsoft.AspNetCore.CookiePolicy.CookiePolicyMiddleware'. There should only be one applicable constructor.'\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nThe activation mechanism was [changed](https://github.com/dotnet/aspnetcore/pull/55722) to help support keyed dependency injection.\n\n### Recommended action\n\nIf this happens and you can't upgrade to a dependency injection container that implements `IServiceProviderIsService`, you can add `ActivatorUtilitiesConstructorAttribute` to the preferred constructor of the affected middleware type.\n\n### Affected APIs\n\nThis is [known](https://github.com/dotnet/aspnetcore/issues/57231) to cause errors when instantiating `Microsoft.AspNetCore.CookiePolicy.CookiePolicyMiddleware` with [Autofac.Extensions.DependencyInjection](https://www.nuget.org/packages/Autofac.Extensions.DependencyInjection) 7.x.","Url":"https://github.com/aspnet/Announcements/issues/514","RelatedDescription":"Open issue \"[Breaking change]: Handling of middleware types with multiple constructors\" (#514)"},{"Id":"2518176374","IsPullRequest":true,"CreatedAt":"2024-09-12T23:00:13","Actor":"terrajobst","Number":"513","RawContent":null,"Title":"Add SECURITY.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/513","RelatedDescription":"Closed or merged PR \"Add SECURITY.md\" (#513)"},{"Id":"2180295666","IsPullRequest":false,"CreatedAt":"2024-03-11T21:34:47","Actor":"amcasey","Number":"512","RawContent":null,"Title":"[Breaking change]: DefaultKeyResolution.ShouldGenerateNewKey has a slightly altered meaning","State":"open","Body":"### Description\r\n\r\n`DefaultKeyResolution.ShouldGenerateNewKey` no longer reflects whether the default key is close to its expiration time.\r\n\r\n### Version\r\n\r\n.NET 9 Preview 3\r\n\r\n### Previous behavior\r\n\r\nIt was an undocumented, but consistent, feature of the API that `ShouldGenerateNewKey` would be true if the default key was within two days (an over-simplification) of its expiration time.  The amount of lead time was based on the polling interval of `ICacheableKeyRingProvider`, which was not something `IDefaultKeyResolver.ResolveDefaultKeyPolicy` should have depended upon (since, for example, alternative implementations would probably not be aware of these details).\r\n\r\n### New behavior\r\n\r\nIf `ShouldGenerateNewKey` is true, it now indicates that either there is no default key or that for some other policy reason (i.e. in a specialized implementation of `IDefaultKeyResolver`, a new key should be generated.  The `ICacheableKeyRingProvider` will make its own decision about whether the expiration time is close enough to warrant generating a new key.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\r\n\r\n### Reason for change\r\n\r\nFirst, we wanted to change the logic around key generation near expiration time and, second, this makes it more straightforward to implement a custom `IDefaultKeyResolver`.\r\n\r\nNote that the documentation for this type already states that \"This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.\"\r\n\r\n### Recommended action\r\n\r\nIf you have an `IDefaultKeyResolver` implementation that tries to replicate the expiry logic, that logic can be removed (however, leaving it is fine as well).\r\n\r\nIf you were consuming `IDefaultKeyResolver` directly, for the express purpose of determining whether expiration was pending and that continues to be important, you can the default key's `ExpirationDate` property directly.\r\n\r\n### Affected APIs\r\n\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey","Url":"https://github.com/aspnet/Announcements/issues/512","RelatedDescription":"Open issue \"[Breaking change]: DefaultKeyResolution.ShouldGenerateNewKey has a slightly altered meaning\" (#512)"},{"Id":"2162366750","IsPullRequest":true,"CreatedAt":"2024-03-01T17:37:10","Actor":"amcasey","Number":"511","RawContent":null,"Title":"Update repo URL","State":"closed","Body":"We have appropriate redirects, but it seems preferable to have current URLs in the guidance.","Url":"https://github.com/aspnet/Announcements/pull/511","RelatedDescription":"Closed or merged PR \"Update repo URL\" (#511)"},{"Id":"2115619834","IsPullRequest":true,"CreatedAt":"2024-02-06T22:14:36","Actor":"dotnet-policy-service[bot]","Number":"510","RawContent":null,"Title":"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning","State":"closed","Body":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service.","Url":"https://github.com/aspnet/Announcements/pull/510","RelatedDescription":"Closed or merged PR \"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning\" (#510)"},{"Id":"2013176077","IsPullRequest":false,"CreatedAt":"2023-11-27T21:55:39","Actor":"captainsafia","Number":"509","RawContent":null,"Title":"[Breaking change]: Minimal APIs consuming IFormFile or IFormFileCollection parameters require anti-forgery checks","State":"open","Body":"### Description\n\nMinimal API endpoints that consume an `IFormFile` or `IFormFileCollection` will now be opted-in to requiring anti-forgery token validation using the new anti-forgery middleware.\n\n### Version\n\n.NET 8 RC 1\n\n### Previous behavior\n\nMinimal API endpoints that bound a parameter from the form via `IFormFile` or `IFormFileCollection` did not require anti-forgery validation.\n\n### New behavior\n\nMinimal API endpoints that bound a parameter from the form via `IFormFile` or `IFormFileCollection` did require anti-forgery validation. An exception will be thrown at startup if the anti-forgery middleware is not registered for an API that defines these input types.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nAnti-forgery token validation is a recommended security precaution for APIs that consume data from a form.\n\n### Recommended action\n\nUsers can opt out of anti-forgery validation for specific endpoints by using the `DisableAntiforgery` method like so:\r\n\r\n```csharp\r\nvar app = WebApplication.Create();\r\n\r\napp.MapPost(\"/\", (IFormFile formFile) => ...)\r\n  .DisableAntiforgery();\r\n\r\napp.Run();\r\n```\n\n### Affected APIs\n\nNone.","Url":"https://github.com/aspnet/Announcements/issues/509","RelatedDescription":"Open issue \"[Breaking change]: Minimal APIs consuming IFormFile or IFormFileCollection parameters require anti-forgery checks\" (#509)"},{"Id":"1811082947","IsPullRequest":false,"CreatedAt":"2023-07-19T03:36:42","Actor":"jmprieur","Number":"508","RawContent":null,"Title":"[Breaking change]: JwtBearer, WsFederation, and OpenIdConnect events context properties of type SecurityToken now return a JSonWebToken by default","State":"open","Body":"## Description\r\nThe `JwtBearerEvents`, `WsFederationEvents` and `OpenIdConnectEvents` are authentication events fired respectively by the `JwtBearer`, `WsFederation` and `OpenIdConnect` authentication handlers. For example the [OnTokenValidated](https://github.com/dotnet/aspnetcore/blob/bf303a1092f83d789031fdafac60f3fc454cfc49/src/Security/Authentication/JwtBearer/src/JwtBearerEvents.cs#L29) event is fired when a security token is validated. These events are fired with a context (for instance [TokenValidatedContext](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.jwtbearer.tokenvalidatedcontext?view=aspnetcore-7.0)) that exposes a `SecurityToken` property of abstract type [SecurityToken](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.tokens.securitytoken?view=msal-web-dotnet-latest). The default real implementation of SecurityToken changed from [JwtSecurityToken](https://learn.microsoft.com/dotnet/api/system.identitymodel.tokens.jwt.jwtsecuritytoken?view=msal-web-dotnet-latest) to [JsonWebToken](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.jsonwebtokens.jsonwebtoken?view=msal-web-dotnet-latest).\r\nIf you really need to keep using `JwtSecurityToken`, you can re-enable it by setting `UseSecurityTokenValidators` on the `JwtBearerOptions`, `WsFederationOptions`, `OpenIdConnectOptions`.\r\n\r\nFor details [#aspnetcore/49469](https://github.com/dotnet/aspnetcore/issues/49469#issue) API Review.\r\n\r\n### Version\r\n.NET 8 Preview 7\r\n\r\n### Previous behavior\r\nUntil ASP.NET Core 8-preview 7, these SecurityToken properties were implemented by a sub-class of SecurityToken named JwtSecurityToken, which is the previous generation of implementation of JWT. These JwtSecurityToken were produced by [SecurityTokenValidators](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.tokens.isecuritytokenvalidator?view=msal-web-dotnet-latest).\r\n\r\n### New behavior\r\nFrom ASP.NET Core 8-preview 7, by default the class derived from SecurityToken implenting these properties is JSonWebToken which are produced by more optimized [TokenHandlers](https://learn.microsoft.com/dotnet/api/microsoft.identitymodel.tokens.tokenhandler?view=msal-web-dotnet-latest).\r\n\r\n## Type of breaking change\r\n- [ ] Binary incompatible: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [ ] Source incompatible: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [x] Behavioral change: Existing binaries may behave differently at run time.\r\n\r\n## Reason for change\r\nThis change was made because JSonWebToken (and its associated JSonWebTokenHandler) are bringing:\r\n- 30% performance improvement.\r\n- Improved reliability by the usage of a Last Known Good metadata (such as the OpenIdConnectMetadata)\r\n- async processing\r\n\r\n### Recommended action\r\nFor most of you, this shouldn't be a problem as the type of the properties (SecurityToken) has not changed, and you were not supposed to look at the real type.\r\n\r\nHowever, if you were downcasting one of these SecurityToken properties to JwtSecurityToken (for example to get the claims), you will now need to:\r\n- either down-cast them to JSonWebToken\r\n\r\n  ```CSharp\r\n  service.Configure<JwtBearerOptions>(JwtBearerDefaults.AuthenticationScheme,  options => {\r\n      options.Events.TokenValidated = (context) => {\r\n          // Replace your cast to JwtSecurityToken.\r\n          JSonWebToken token = context.SecurityToken as JSonWebToken;\r\n          // Do something ...\r\n      };\r\n  });\r\n  ```\r\n\r\n- or set one of the UseSecurityTokenValidators boolean properties on the corresponding options (JtwBearerOptions, WsFederationOptions, OpenIdConnectOptions) to true, in which case the authentication handlers will keep using the JwtTokenValidators and will keep producing JwtSecurityTokens.\r\n\r\n  ```CSharp\r\n  service.Configure<JwtBearerOptions>(JwtBearerDefaults.AuthenticationScheme,  options => {\r\n      options.UseSecurityTokenValidators = true;\r\n      options.Events.TokenValidated = (context) => {\r\n          // As you were doing before\r\n          JwtSecurityToken token = context.SecurityToken as JwtSecurityToken;\r\n          // Do something ...\r\n      };\r\n  });\r\n  ```\r\n\r\n\r\n\r\n## Affected APIs\r\nThe properties that are concerned are the following:\r\n\r\n### In WsFederationEvents\r\n\r\n- [SecurityTokenValidatedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/WsFederation/src/SecurityTokenValidatedContext.cs#L31)\r\n\r\n### In JwtBearerEvents\r\n\r\n- [TokenValidatedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/JwtBearer/src/TokenValidatedContext.cs#L27)\r\n\r\n### In OpenIdConnectEvents\r\n\r\n- [TokenValidatedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/OpenIdConnect/src/Events/TokenValidatedContext.cs#L32)\r\n- [AuthorizationCodeReceivedContext.SecurityToken](https://github.com/dotnet/aspnetcore/blob/ef07bcb02ae3d7218dbd3dd0358974b2b7e9ddd2/src/Security/Authentication/OpenIdConnect/src/Events/AuthorizationCodeReceivedContext.cs#L34)","Url":"https://github.com/aspnet/Announcements/issues/508","RelatedDescription":"Open issue \"[Breaking change]: JwtBearer, WsFederation, and OpenIdConnect events context properties of type SecurityToken now return a JSonWebToken by default\" (#508)"},{"Id":"1805550224","IsPullRequest":false,"CreatedAt":"2023-07-14T20:44:25","Actor":"captainsafia","Number":"507","RawContent":null,"Title":"[Breaking change]: TrimMode defaults to `full` for WebSDK projects","State":"open","Body":"### Description\n\nTrimming now trims all assemblies in applications targeting the Web SDK, by default. This change only affects apps that are published with PublishTrimmed=true, and it only breaks apps that had existing trim warnings. \n\n### Version\n\n.NET 8 Preview 7\n\n### Previous behavior\n\nPreviously, `TrimMode=partial` was set by default for all projects that targeted the WebSDK. \n\n### New behavior\n\nStarting in .NET 8 Preview 7, trimming trims all the assemblies in the app by default. Apps that may have previously worked with `PublishTrimmed=true` and `TrimMode=partial` may not work in .NET 8 Preview 7. However, only apps with trim warnings will be affected. If your app has no trim warnings, the change in behavior should not cause any adverse effect.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [X] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nThis change helps to decrease app size without users having to explicitly opt in and aligns with user expectations that the entire app is trimmed unless noted otherwise.\n\n### Recommended action\n\nThe best resolution is to resolve all the trim warnings in your application. For information about resolving the warnings in your own libraries, see [Introduction to trim warnings](https://learn.microsoft.com/en-us/dotnet/core/deploying/trimming/fixing-warnings).\r\n\r\nTo revert to the previous behavior, set the TrimMode property to partial.\r\n\r\n```xml\r\n<TrimMode>partial</TrimMode>\r\n```\n\n### Affected APIs\n\nNone.","Url":"https://github.com/aspnet/Announcements/issues/507","RelatedDescription":"Open issue \"[Breaking change]: TrimMode defaults to `full` for WebSDK projects\" (#507)"},{"Id":"1693295179","IsPullRequest":false,"CreatedAt":"2023-05-03T01:44:40","Actor":"JamesNK","Number":"506","RawContent":null,"Title":"[Breaking change]: ASP.NET Core rate limiting middleware now requires AddRateLimiter","State":"open","Body":"### Description\r\n\r\n[ASP.NET Core rate limiting middleware](https://learn.microsoft.com/aspnet/core/performance/rate-limit) is being updated in .NET 8 with extra functionality. The middleware now requires services registered with `AddRateLimiter`.\r\n\r\n### Version\r\n\r\n.NET 8 Preview 5\r\n\r\n### Previous behavior\r\n\r\nPreviously, rate limiting could be used without `AddRateLimiter`. For example, the middleware could be configured by calling `Configure<RateLimiterOptions>(o => { })`:\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.Configure<RateLimiterOptions>(o => o\r\n    .AddFixedWindowLimiter(policyName: \"fixed\", options =>\r\n    {\r\n        // configuration\r\n    }));\r\n\r\nvar app = builder.Build();\r\napp.UseRateLimiter();\r\napp.MapGet(\"/\", () => Results.Ok($\"Hello world\")).RequireRateLimiting(\"fixed\");\r\napp.Run();\r\n```\r\n\r\n### New behavior\r\n\r\nIf `AddRateLimiter` is not called on app startup, then ASP.NET Core will throw an informative error:\r\n\r\n> Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddRateLimiter' in the application startup code.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\r\n\r\n### Reason for change\r\n\r\nRate limiting middleware requires services that are only registered by calling `AddRateLimiter`.\r\n\r\n### Recommended action\r\n\r\nEnsure `AddRateLimiter()` is called at application startup.\r\n\r\nFor example, update `Configure<RateLimiterOptions>(o => { })` to use `AddRateLimiter()`:\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddRateLimiter(o => o\r\n    .AddFixedWindowLimiter(policyName: \"fixed\", options =>\r\n    {\r\n        // configuration\r\n    }));\r\n\r\nvar app = builder.Build();\r\napp.UseRateLimiter();\r\napp.MapGet(\"/\", () => Results.Ok($\"Hello world\")).RequireRateLimiting(\"fixed\");\r\napp.Run();\r\n```\r\n\r\n### Affected APIs\r\n\r\n[UseRateLimiter()](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.ratelimiterapplicationbuilderextensions.useratelimiter)","Url":"https://github.com/aspnet/Announcements/issues/506","RelatedDescription":"Open issue \"[Breaking change]: ASP.NET Core rate limiting middleware now requires AddRateLimiter\" (#506)"},{"Id":"1685250868","IsPullRequest":false,"CreatedAt":"2023-04-26T15:26:43","Actor":"Tratcher","Number":"505","RawContent":null,"Title":"[Breaking change]: ISystemClock obsolete and replaced by TimeProvider","State":"open","Body":"### Description\n\n`Microsoft.AspNetCore.Authentication.ISystemClock` has been used by the authentication and identity components since AspNetCore 1.0 to enable unit testing of time related functionality like expiration checking. .NET 8 now includes a suitable abstraction `System.TimeProvider` that provides the same functionality and much more. We're taking this opportunity to obsolete `ISystemClock` and replace it with `TimeProvider` throughout AspNetCore.\r\n\r\nSee https://github.com/dotnet/aspnetcore/pull/47717 for additional details.\n\n### Version\n\n.NET 8 Preview 5\n\n### Previous behavior\n\nISystemClock was injected into the constructors by Dependency Injection and could be overridden for testing.\r\n\r\nNote the default `SystemClock` implementation would truncate to the nearest second for easier formatting. \n\n### New behavior\n\nISystemClock remains in the Dependency Injection container but is no longer used. It may be removed from the container in a future version.\r\n\r\nTimeProvider is now a settable property on the Options classes for these types. It can be set directly or by registering a provider in the Dependency Injection container.\r\n\r\n`TimeProvider` does not truncate to the nearest second, consumers are expected to correctly format the time as needed.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [X] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nUnifying the time abstraction across the stack for easier testing.\n\n### Recommended action\n\nComponents that derive from `Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>` or `Microsoft.AspNetCore.Identity.SecurityStampValidator<TUser>` should remove their `ISystemClock` constructor parameter and call the new base constructor accordingly. Similarly, derived implementations that reference the `Clock` property on these types should reference the new `TimeProvider` property instead. `TimeProvider` is now settable for testing on the options or via DI.\r\n\r\n```diff\r\n-    public BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock)\r\n-        : base(options, logger, encoder, clock)\r\n+    public BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder)\r\n+        : base(options, logger, encoder)\r\n```\r\n\r\n```diff\r\n-       var currentUtc = Clock.UtcNow;\r\n+       var currentUtc = TimeProvider.GetUtcNow();\r\n```\n\n### Affected APIs\n\n- [`ISystemClock`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.isystemclock)\r\n- [`SystemClock`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.systemclock)\r\n- [`AuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.authenticationhandler-1)\r\n- [`AuthenticationHandler<TOptions>.Clock`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.authenticationhandler-1.clock)\r\n- [`CookieAuthenticationHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.cookies.cookieauthenticationhandler)\r\n- [`FacebookHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.facebook.facebookhandler)\r\n- [`GoogleHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.google.googlehandler)\r\n- [`JwtBearerHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.jwtbearer.jwtbearerhandler)\r\n- [`MicrosoftAccountHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.microsoftaccount.microsoftaccounthandler)\r\n- [`NegotiateHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.negotiate.negotiatehandler)\r\n- [`OAuthHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.oauth.oauthhandler-1)\r\n- [`OpenIdConnectHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.openidconnect.openidconnecthandler)\r\n- [`PolicySchemeHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.policyschemehandler)\r\n- [`RemoteAuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.remoteauthenticationhandler-1)\r\n- [`SignInAuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.signinauthenticationhandler-1)\r\n- [`SignOutAuthenticationHandler<TOptions>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.signoutauthenticationhandler-1)\r\n- [`TwitterHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.twitter.twitterhandler)\r\n- [`WsFederationHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authentication.wsfederation.wsfederationhandler)\r\n- [`SecurityStampValidator<TUser>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.securitystampvalidator-1)\r\n- [`TwoFactorSecurityStampValidator<TUser>`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.twofactorsecuritystampvalidator-1)","Url":"https://github.com/aspnet/Announcements/issues/505","RelatedDescription":"Open issue \"[Breaking change]: ISystemClock obsolete and replaced by TimeProvider\" (#505)"},{"Id":"1661290568","IsPullRequest":false,"CreatedAt":"2023-04-10T20:06:20","Actor":"captainsafia","Number":"504","RawContent":null,"Title":"[Breaking change]: `ValidationProblemDetails` and `ProblemDetails` no longer use custom converters","State":"open","Body":"### Description\n\nPrior to .NET 8 Preview 2, `ValidationProblemDetails` and `ProblemDetails` type used custom converters to support JSON serialization due to a lack of support for the `IgnoreNullValues` option. Now that this option is supported by the S.T.J APIs, we've removed the custom converters in the framework in favor of the serialization provided by the framework.\r\n\r\nAs a result of this, the properties in the `ValidationProblemDetails` and `ProblemDetails` types no longer indiscriminately assume lowercase type names. Developers must specific a `JsonNamingPolicy` to get the correct behavior.\n\n### Version\n\n.NET 8 Preview 2\n\n### Previous behavior\n\n```csharp\r\nstring content = \"{\\\"status\\\":400,\\\"detail\\\":\\\"HTTP egress is not enabled.\\\"}\";\r\nusing MemoryStream stream = new();\r\nusing StreamWriter writer = new(stream);\r\nwriter.Write(content);\r\nwriter.Flush();\r\nstream.Position = 0;\r\n\r\nJsonSerializerOptions options = new();\r\noptions.Converters.Add(new JsonStringEnumConverter());\r\n\r\nValidationProblemDetails? details = await JsonSerializer.DeserializeAsync<ValidationProblemDetails>(stream, options);\r\nConsole.WriteLine(details.Status); // 400\r\n```\n\n### New behavior\n\n```csharp\r\nstring content = \"{\\\"status\\\":400,\\\"detail\\\":\\\"HTTP egress is not enabled.\\\"}\";\r\nusing MemoryStream stream = new();\r\nusing StreamWriter writer = new(stream);\r\nwriter.Write(content);\r\nwriter.Flush();\r\nstream.Position = 0;\r\n\r\nJsonSerializerOptions options = new();\r\noptions.Converters.Add(new JsonStringEnumConverter());\r\n\r\nValidationProblemDetails? details = await JsonSerializer.DeserializeAsync<ValidationProblemDetails>(stream, options);\r\nConsole.WriteLine(details.Status); // null\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\n- [ ] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\n- [X] **Behavioral change**: Existing binaries may behave differently at run time.\n\n### Reason for change\n\nNow that `IgnoreNullValues` is supported by the S.T.J APIs, we've removed the custom converters in the framework in favor of the serialization provided by the framework.\n\n### Recommended action\n\nProvide a JSON serializer options with the correct details.\r\n\r\n```csharp\r\nJsonSerializerOptions options = new()\r\n{\r\n   PropertyNameCaseInsensitive = true\r\n};\r\nValidationProblemDetails? details = await JsonSerializer.DeserializeAsync<ValidationProblemDetails>(stream, options);\r\n```\n\n### Affected APIs\n\n- [`ValidationProblemDetails`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.validationproblemdetails)\r\n- [`ProblemDetails`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.problemdetails)","Url":"https://github.com/aspnet/Announcements/issues/504","RelatedDescription":"Open issue \"[Breaking change]: `ValidationProblemDetails` and `ProblemDetails` no longer use custom converters\" (#504)"},{"Id":"1657753067","IsPullRequest":true,"CreatedAt":"2023-04-06T22:49:51","Actor":"gewarren","Number":"503","RawContent":null,"Title":"Add more version choices to BC template","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/503","RelatedDescription":"Closed or merged PR \"Add more version choices to BC template\" (#503)"},{"Id":"1656483670","IsPullRequest":false,"CreatedAt":"2023-04-06T00:15:27","Actor":"mitchdenny","Number":"502","RawContent":null,"Title":"[Breaking change]: Obsolete ConcurrencyLimiterMiddleware","State":"open","Body":"### Description\r\n\r\nIn .NET 8.0 the ASP.NET Core team is deprecating the ConcurrencyLimiterMiddleware and associated methods and types (e.g. UseConcurrencyLimiter(...)). This package will be removed in .NET 9.0.\r\n\r\nDevelopers requiring rate limiting capabilties should switch to the newer and more capable rate limiting middleware that was introduced in .NET 7.0 (e.g. UseRateLimiter(...)). The .NET 7.0 rate limiting API includes a concurrency limiter along with several other rate limiting algorithms that you can apply to your application.\r\n\r\nFor more information on rate limiting in ASP.NET Core see:\r\nhttps://learn.microsoft.com/aspnet/core/performance/rate-limit\r\n\r\n### Version\r\n\r\n.NET 8 Preview 4\r\n\r\n### Previous behavior\r\n\r\nDevelopers using the `ConcurrencyLimiterMiddleware` could control concurrency by adding a policy to DI and enabling the middleware:\r\n\r\n```csharp\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.AddStackPolicy<options => {\r\n    options.MaxConcurrentRequests = 2;\r\n    options.RequestQueueLimit = 25;\r\n    });\r\n\r\nvar app = builder.Build();\r\napp.UseConcurrencyLimiter();\r\n// Map endpoints.\r\napp.Run();\r\n```\r\n\r\n### New behavior\r\n\r\nHere is some example usage using the new API:\r\n\r\n```csharp\r\nusing Microsoft.AspNetCore.RateLimiting;\r\nusing System.Threading.RateLimiting;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nvar app = builder.Build();\r\n\r\napp.UseRateLimiter(new RateLimiterOptions()\r\n    .AddConcurrencyLimiter(\"only-one-at-a-time-stacked\", (options) =>\r\n    {\r\n        options.PermitLimit = 2;\r\n        options.QueueLimit = 25;\r\n        options.QueueProcessingOrder = QueueProcessingOrder.NewestFirst;\r\n    }));\r\n\r\napp.MapGet(\"/\", async () =>\r\n{\r\n    await Task.Delay(10000);\r\n    return \"Hello World\";\r\n}).RequireRateLimiting(\"only-one-at-a-time-stacked\");\r\n\r\napp.Run();\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load or execute, and if so, require recompilation.\r\n- [X] **Source incompatible**: When recompiled using the new SDK or component or to target the new runtime, existing source code may require source changes to compile successfully.\r\n- [ ] **Behavioral change**: Existing binaries may behave differently at run time.\r\n\r\n### Reason for change\r\n\r\nThe older `ConcurrencyLimiterMiddleware` is infrequently used and undocumented. The newer rate limiting API has more extensive functionality.\r\n\r\n### Recommended action\r\n\r\nIf you are using the older `ConcurrencyLimiterMiddleware` we recommend moving to the newer rate limiting middleware.\r\n\r\n### Affected APIs\r\n\r\nThe following APIs are impacted:\r\n\r\n* `ConcurrencyLimiterExtensions.UseConcurrencyLimiter(...)`\r\n* `ConcurrencyLimiterMiddleware`\r\n* `ConcurrencyLimiterOptions`","Url":"https://github.com/aspnet/Announcements/issues/502","RelatedDescription":"Open issue \"[Breaking change]: Obsolete ConcurrencyLimiterMiddleware\" (#502)"},{"Id":"1602073485","IsPullRequest":false,"CreatedAt":"2023-03-07T16:47:58","Actor":"dnfadmin","Number":"501","RawContent":null,"Title":"Moving to the new .NET Foundation CLA service","State":"closed","Body":"\r\nHello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team\r\n\r\n","Url":"https://github.com/aspnet/Announcements/issues/501","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#501)"},{"Id":"1575203037","IsPullRequest":true,"CreatedAt":"2023-02-08T00:08:59","Actor":"brunolins16","Number":"500","RawContent":null,"Title":"Fixing announcement template","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/500","RelatedDescription":"Closed or merged PR \"Fixing announcement template\" (#500)"},{"Id":"1375214843","IsPullRequest":false,"CreatedAt":"2023-02-03T03:50:56","Actor":"halter73","Number":"493","RawContent":null,"Title":"[Breaking change]: ApiExplorer and OpenAPI metadata is generated for RequestDelegate endpoints in RC1 *only*","State":"closed","Body":"### Description\r\n\r\nIn .NET 6, ASP.NET Core added support for `Delegate` [route handlers](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0#route-handlers) in addition to conventional `RequestDelegate` endpoints which have existed since ASP.NET Core 3.0.\r\n\r\nIn .NET 7 RC 1, we started automatically generating more API metadata for the older `RequestDelegate` endpoints to align the behavior of these two kinds of endpoints. **In .NET 7 RC 2, we plan to revert this breaking change** which will cause no API metadata to inferred for `RequestDelegate` endpoints again.\r\n\r\n### Version\r\n\r\n.NET 7 RC1\r\n\r\n### Previous behavior\r\n\r\nBefore .NET 7 RC1, conventional `RequestDelegate` endpoints did not get added to the [ApiExplorer](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.apiexplorer?view=aspnetcore-6.0) model or the `OpenApiOperation` generated by [WithOpenApi()](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.openapiendpointconventionbuilderextensions.withopenapi?view=aspnetcore-7.0).\r\n\r\n### New behavior\r\n\r\nIn .NET RC 1 and RC 1 only **(this is being reverted in RC 2)**, the `RequestDelegate`'s `MethodInfo` is added to the [EndpointMetadataCollection](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.endpointmetadatacollection?view=aspnetcore-6.0) just like with `Delegate` route handlers causing ApiExplorer and WithOpenApi() to generate endpoint metadata for endpoints that previously were not part of the model.\r\n\r\nThis can impact third party libraries like [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) and [NSwag](https://github.com/RicoSuter/NSwag).\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/44005 for more context. \r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe were [hoping ](https://github.com/dotnet/aspnetcore/pull/42827/files/cbff9e89b459111ea104ec71c2d3bf9cee6c9e5f#r925142793) that aligning the behavior of `RequestDelegate` and `Delegate` backed endpoints would reduce confusion. We've decided to walk this back though.\r\n\r\n### Recommended action\r\n\r\nYou can add a custom convention that removes the `MethodInfo` from the endpoint metadata or wait for RC 2 to revert this behavior. You can use a group to make it apply to multiple endpoints.\r\n\r\n```csharp\r\nvar noMetadataGroup = app.MapGroup(\"\");\r\nIEndpointConventionBuilder groupConventionBuilder = noMetadataGroup;\r\n\r\ngroupConventionBuilder.Add(endpointBuilder =>\r\n{\r\n    if (endpointBuilder.Metadata.FirstOrDefault(m => m is MethodInfo) is MethodInfo method)\r\n    {\r\n        endpointBuilder.Metadata.Remove(method);\r\n    }\r\n});\r\n\r\nnoMetadataGroup.MapGet(\"/\", (context) => context.Response.WriteAsync(\"RequestDelegate endpoint.\"));\r\n```\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(IEndpointRouteBuilder, RoutePattern, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGet(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPost(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapDelete(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPut(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapMethods(IEndpointRouteBuilder, String, IEnumerable<String>, RequestDelegate)`","Url":"https://github.com/aspnet/Announcements/issues/493","RelatedDescription":"Closed issue \"[Breaking change]: ApiExplorer and OpenAPI metadata is generated for RequestDelegate endpoints in RC1 *only*\" (#493)"},{"Id":"1497212375","IsPullRequest":true,"CreatedAt":"2022-12-14T19:04:06","Actor":"gewarren","Number":"499","RawContent":null,"Title":"Update incompatibility types in BC template","State":"closed","Body":"I updated the breaking change template to match dotnet/docs. Feel free to close if you don't like these definitions, however.","Url":"https://github.com/aspnet/Announcements/pull/499","RelatedDescription":"Closed or merged PR \"Update incompatibility types in BC template\" (#499)"},{"Id":"1455922247","IsPullRequest":false,"CreatedAt":"2022-11-18T22:38:34","Actor":"halter73","Number":"498","RawContent":null,"Title":"[Breaking change]: `WebApplicationBuilder` gives `ASPNET_`-prefixed environment variables lower precedence","State":"open","Body":"### Description\n\nStarting in .NET 7 preview 3, when using `WebApplicationBuilder` but not any other host (e.g. `ConfigureWebHostDefaults` or `WebHost.CreateDefaultBuilder`), command-line arguments and `DOTNET_`-prefixed environment variables override `ASPNET_`-prefixed environment variables when reading from [default host configuration sources](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#default-host-configuration-sources) which are used to read [host variables](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#host-variables) like the content root path and environment name when the `WebApplicationBuilder` is constructed and serves as a base for [application configuration](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#application-configuration-providers).\r\n\r\n`ASPNET_`-prefixed environment variables now has the lowest precedence of all of `WebApplicationBuilder`'s [default host configuration sources](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-7.0#default-host-configuration-sources).\r\n\r\nSee https://github.com/dotnet/AspNetCore.Docs/issues/25626#issuecomment-1098616664 for more context.\n\n### Version\n\n.NET 7 Preview 3\n\n### Previous behavior\n\n`ASPNET_`-prefixed environment variables overrode command-line arguments and `DOTNET_`-prefixed environment variables.\n\n### New behavior\n\nCommand-line arguments and `DOTNET_`-prefixed environment variables override `ASPNET_`-prefixed environment variables\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nTo prevent environment variables from overriding explicit command-line arguments when reading host variables which is more consistent with application configuration which has always given command-line arguments the highest precedence.\n\n### Recommended action\n\nIf you were using `ASPNETCORE_`-prefixed environment variables to override command-line arguments or `DOTNET_-`prefixed environment variables, use something with a higher priority. This could mean using custom [WebApplicationOptions](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.webapplicationoptions?view=aspnetcore-7.0) which overrides all default hosting configuration sources.\n\n### Affected APIs\n\n`Microsoft.AspNetCore.Builder.WebApplicationBuilder`","Url":"https://github.com/aspnet/Announcements/issues/498","RelatedDescription":"Open issue \"[Breaking change]: `WebApplicationBuilder` gives `ASPNET_`-prefixed environment variables lower precedence\" (#498)"},{"Id":"1414759756","IsPullRequest":false,"CreatedAt":"2022-10-19T11:01:00","Actor":"javiercn","Number":"497","RawContent":null,"Title":"[Breaking change]: Updates to Authentication in webassembly applications","State":"open","Body":"### Description\n\nWe updated our support for authentication in Blazor Webassembly applications to rely on the history state instead of query strings in the URL. As a result of that, existing applications passing the return URL through the query string will fail to redirect back to the original page after a successful login.\r\n\r\nExisting applications should use the new `NavigateToLogin` extension method as it is able to flow the data to the login page corectly.\n\n### Version\n\n.NET 7 RC 1\n\n### Previous behavior\n\nThe return URL would be specified in the query string as `?returnUrl=<<return-url>>`.\n\n### New behavior\n\nThe return URL along other parameters passed to the `authentication/login` page are passed via the `history.state` entry of the page.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nWe decided to switch to using `history.state` instead of the query string as it simplifies the implementation and removes the surface attack area associated with passing data through the query string.\n\n### Recommended action\n\nMost apps have a RedirectToLogin.razor file in them that can be updated as follows:\r\n\r\n```razor\r\n@inject NavigationManager Navigation\r\n@using Microsoft.AspNetCore.Components.WebAssembly.Authentication\r\n@using Microsoft.Extensions.Options\r\n\r\n@inject IOptionsSnapshot<RemoteAuthenticationOptions<ApiAuthorizationProviderOptions>> Options\r\n@code {\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        Navigation.NavigateToLogin(Options.Get(Microsoft.Extensions.Options.Options.DefaultName).AuthenticationPaths.LogInPath);\r\n    }\r\n}\r\n```\n\n### Affected APIs\n\nAs part of this change `SignOutSessionStateManager` has been obsoleted in favor of `NavigationManager.NavigateToLogout`","Url":"https://github.com/aspnet/Announcements/issues/497","RelatedDescription":"Open issue \"[Breaking change]: Updates to Authentication in webassembly applications\" (#497)"},{"Id":"1400322849","IsPullRequest":false,"CreatedAt":"2022-10-06T21:30:20","Actor":"halter73","Number":"496","RawContent":null,"Title":"[Breaking change]: IEndpointMetadataProvider and IEndpointParameterMetadataProvider interface changes in 7.0 RC2","State":"open","Body":"### Description\n\nIn ASP.NET Core 7 RC2, the `IEndpointMetadataProvider` and `IEndpointParameterMetadataProvider` interfaces [introduced in  preview 4](https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-7-preview-4/#self-describing-minimal-apis-with-iendpointmetadataprovider-and-iendpointparametermetadataprovider) have been updated to take an [EndpointBuilder](https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.endpointbuilder?view=aspnetcore-7.0) rather than a `EndpointMetadataContext` or `EndpointParameterMetadataContext`.\r\n\r\n\n\n### Version\n\n.NET 7 RC 2\n\n### Previous behavior\n\nThe `PopulateMetadata` methods on both interfaces took their respective context arguments as a single parameter. Both contexts included services (`IServiceProvider`) and endpoint metadata (`IList<object>`).\r\n\r\n`EndpointMetadataContext` included the `MethodInfo` for the minimal route handler MVC action that took the implementing type as a parameter or returned it. `EndpointParameterMetadataContext` provided `ParameterInfo` and could only be used on parameter types.\n\n### New behavior\n\nNow in RC2, both interfaces' `PopulateMetadata` method take an `EndpointBuilder` as their second parameter. The `EndpointBuilder` provides access to the application services (`IServiceProvider`) and endpoint metadata (`IList<object>`) previously provided by `EndpointMetadataContext` and `EndpointParameterMetadataContext`.\r\n\r\nNow, `IEndpointMetadataProvider` takes a `MethodInfo` and `IEndpointParameterMetadataProvider` takes a `ParameterInfo` as their first parameter.\r\n\r\nBoth `EndpointMetadataContext` and `EndpointParameterMetadataContext` have been removed.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/43125#issuecomment-1218534849 for an API diff.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThe metadata providers now get access to more metadata like the `RoutePattern` (with a downcast) and `DisplayName` via the `EndpointBuilder`, and this allowed us to delete unnecessary context types.\n\n### Recommended action\n\nUpdate implementations of `IEndpointMetadataProvider` and `IEndpointParameterMetadataProvider` to access the information necessary from the new parameters. There should be nothing that was available via the contexts previously that are unavailable via `PopulateMetadata`'s new parameters.\n\n### Affected APIs\n\n- Parameters changed: `Microsoft.AspNetCore.Http.Metadata.IEndpointMetadataProvider.PopulateMetadata`\r\n- Parameters changed: `Microsoft.AspNetCore.Http.Metadata.IEndpointParameterMetadataProvider.PopulateMetadata`\r\n- Removed: `Microsoft.AspNetCore.Http.Metadata.EndpointMetadataContext`\r\n- Removed: `Microsoft.AspNetCore.Http.Metadata.EndpointParameterMetadataContext`","Url":"https://github.com/aspnet/Announcements/issues/496","RelatedDescription":"Open issue \"[Breaking change]: IEndpointMetadataProvider and IEndpointParameterMetadataProvider interface changes in 7.0 RC2\" (#496)"},{"Id":"1396674543","IsPullRequest":false,"CreatedAt":"2022-10-04T18:23:29","Actor":"MackinnonBuck","Number":"495","RawContent":null,"Title":"[Breaking change]: Endpoints configured with 'MapFallbackToFile()' now only match 'HEAD' and 'GET' requests","State":"open","Body":"### Description\n\nThe `ConsumesAttribute` attribute allows controller actions to specify their supported content types. Starting in .NET 6, if a fallback file endpoint was configured, it could match routes that were discarded due to the request having a different content type than what was specified in an action's `ConsumesAttribute`. This was an undesirable change in behavior from .NET 5 that we are partially addressing in .NET 7 by making fallback file endpoints only match `GET` and `HEAD` requests.\n\n### Version\n\n.NET 7 RC2\n\n### Previous behavior\n\nEndpoints configured with `StaticFilesEndpointRouteBuilderExtensions.MapFallbackToFile()` may match requests made with any request method.\n\n### New behavior\n\nEndpoints configured with `StaticFilesEndpointRouteBuilderExtensions.MapFallbackToFile()` will only match `HEAD` and `GET` requests.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis partially reverts larger breaking change accidentally introduced in .NET 6. Since it's highly unusual to expect a fallback file response when making a request with a method other than `HEAD` or `GET`, we anticipate the impact of this breaking change to be minimal.\n\n### Recommended action\n\nIf you want fallback file endpoints to match requests with methods other than `HEAD` or `GET`, you can specify additional HTTP request methods using `WithMetadata()`. For example:\r\n\r\n```csharp\r\nendpoints.MapFallbackToFile(\"index.html\")\r\n    .WithMetadata(new HttpMethodMetadata(new[] { /* List supported methods here */ }));\r\n```\n\n### Affected APIs\n\nAll overloads of `StaticFilesEndpointRouteBuilderExtensions.MapFallbackToFile()`.","Url":"https://github.com/aspnet/Announcements/issues/495","RelatedDescription":"Open issue \"[Breaking change]: Endpoints configured with 'MapFallbackToFile()' now only match 'HEAD' and 'GET' requests\" (#495)"},{"Id":"1376539134","IsPullRequest":false,"CreatedAt":"2022-09-16T22:09:33","Actor":"brunolins16","Number":"494","RawContent":null,"Title":"[Breaking change]:  Using the System.Text.Json source generator with ASP. NET Core throws NotSupportedException in RC1 *only*","State":"open","Body":"### Description\r\n\r\nIn _**.NET 7 RC1**_, we started requiring that the type `object` to be explicitly specified with a `[JsonSerializable]` attribute applied to your Json Serializer context class in Minimal APIs applications using `System.Text.Json` source generation. _**This was an unexpected behavioral change that we will be fixed in RC2**_.\r\n\r\n### Version\r\n\r\n.NET 7 RC1\r\n\r\n### Previous behavior\r\n\r\nBefore **.NET 7 RC1**, if you are using `System.Text.Json` source generation with `ASP.NET Core Minimal APIs` your endpoint's response will be serialized (`JSON` format) correctly when you have your custom types declared in the `JsonSerializerContext`.\r\n\r\nThe following code shows an example using `System.Text.Json` source generation with `ASP.NET Core Minimal APIs` :\r\n\r\n``` c#\r\nusing System.Text.Json.Serialization;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Services.ConfigureHttpJsonOptions(o => o.SerializerOptions.AddContext<JsonContext>());\r\n\r\nvar app = builder.Build();\r\n\r\napp.MapGet(\"/\", () =>\r\n{\r\n    var l = new List<MyClass> { new(), new() };\r\n    return Results.Ok(l);\r\n});\r\n\r\napp.Run();\r\n\r\n[JsonSerializable(typeof(List<MyClass>))]\r\npublic partial class JsonContext : JsonSerializerContext\r\n{}\r\n\r\npublic class MyClass\r\n{\r\n    public int MyProp { get; set; }\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nIn .NET RC 1 and **RC 1 only** (**_this is being fixed in RC 2_**) the same sample application will throw a `NotSupportedException`.\r\n\r\n```\r\nNotSupportedException: Metadata for type 'System.Object' was not provided by TypeInfoResolver of type 'JsonContext'. \r\nIf using source generation, ensure that all root types passed to the serializer have been indicated with 'JsonSerializableAttribute',\r\nalong with any types that might be serialized polymorphically.\r\n\r\nSystem.Text.Json.ThrowHelper.ThrowNotSupportedException_NoMetadataForType(Type type, IJsonTypeInfoResolver resolver)\r\n```\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/43894 for more context.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis is an unexpected side effect cause by a combination of multiple changes, listed below, detected only after **.NET 7 RC1** release. \r\n\r\n**.NET Runtime**\r\n1. https://github.com/dotnet/docs/issues/30758\r\n2. https://github.com/dotnet/docs/issues/30755\r\n\r\n**ASP.NET CORE**\r\n1. https://github.com/dotnet/aspnetcore/issues/39856\r\n2. https://github.com/dotnet/aspnetcore/issues/41724#issuecomment-1142735823\r\n\r\nThe root cause was already identified, and a fix will be available in **.NET 7 RC2**.\r\n\r\n### Recommended action\r\n\r\nYou can add the `[JsonSerializable(typeof(object))]` to your [JsonSerializerContext](https://docs.microsoft.com/en-us/dotnet/standard/serialization/system-text-json-source-generation?pivots=dotnet-7-0) or wait for RC 2 when this unexpected behavior will be fixed.\r\n\r\n``` c#\r\n[JsonSerializable(typeof(List<MyClass>))]\r\n[JsonSerializable(typeof(object))]\r\npublic partial class JsonContext : JsonSerializerContext\r\n{}\r\n```\r\n\r\n\r\n### Affected APIs\r\n\r\n- Minimal APIs\r\n- Controllers (using [Microsoft.AspNetCore.Http.HttpResults](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.httpresults?view=aspnetcore-7.0))","Url":"https://github.com/aspnet/Announcements/issues/494","RelatedDescription":"Open issue \"[Breaking change]:  Using the System.Text.Json source generator with ASP. NET Core throws NotSupportedException in RC1 *only*\" (#494)"},{"Id":"1371807646","IsPullRequest":false,"CreatedAt":"2022-09-13T17:51:25","Actor":"sebastienros","Number":"492","RawContent":null,"Title":"[Breaking change]: Output Caching renames in 7.0 RC2","State":"open","Body":"### Description\n\nFrom 7.0 RC1 to 7.0 RC2 some APIs have changed to better represent their intent.\r\n\r\nhttps://github.com/dotnet/aspnetcore/pull/43892\r\n\n\n### Version\n\n.NET 7 RC2\n\n### Previous behavior\n\n- `OutputCachePolicyBuilder.VaryByQuery()` was additive: every call would add more query string keys to vary by.\n\n### New behavior\n\n- `OutputCachePolicyBuilder.SetVaryByQuery()` is replacing existing query string keys.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis change was made to improve the consistency of method names and to remove ambiguity in their behavior.\n\n### Recommended action\n\nIt is recommended you recompile any projects built with an earlier SDK. If any of these method names were referenced directly, the source should be updated to reflect the new names.\n\n### Affected APIs\n\n- Removed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.OutputCachePolicyBuilder()` \r\n- Removed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Clear()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AllowLocking()` to `SetLocking()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByRouteValue()` to `SetVaryByRouteValue()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByQuery()` to `SetVaryByQuery()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByHeader()` to `SetVaryByHeader()` \r\n- Added: `Microsoft.AspNetCore.OutputCaching.CacheVaryByRules.VaryByHost`\r\n- Added: `Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddPolicy(string name, Action<OutputCachePolicyBuilder> build, bool excludeDefaultPolicy)`\r\n- Added: `Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddBasePolicy(Action<OutputCachePolicyBuilder> build, bool excludeDefaultPolicy)`\r\n- Added: `Microsoft.Extensions.DependencyInjection.OutputCacheConventionBuilderExtensions.CacheOutput<TBuilder>(this TBuilder builder, Action<OutputCachePolicyBuilder> policy, bool excludeDefaultPolicy)`\r\n","Url":"https://github.com/aspnet/Announcements/issues/492","RelatedDescription":"Open issue \"[Breaking change]: Output Caching renames in 7.0 RC2\" (#492)"},{"Id":"1342406148","IsPullRequest":false,"CreatedAt":"2022-08-18T00:16:25","Actor":"Tratcher","Number":"491","RawContent":null,"Title":"[Breaking change]: AuthenticateAsync for remote authentication providers no longer fails if anonymous","State":"open","Body":"### Description\n\nRE: https://github.com/dotnet/aspnetcore/issues/43042, https://github.com/dotnet/aspnetcore/pull/43212\r\n\r\nRemote authentication providers like OpenIdConnect, WsFederation, and OAuth have been updated to avoid unnecessary errors when there is no user information available on the request.\n\n### Version\n\n.NET 7 RC1\n\n### Previous behavior\n\nWhen AuthenticateAsync was called on a remote authentication provider and there was no current user, this call would fail with a message like `OpenIdConnect was not authenticated. Failure message: Not authenticated`. \n\n### New behavior\n\nAuthenticateAsync will now return `AuthenticateResult.NoResult()`, an anonymous identity. \n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\n- This was inconsistent with Cookie and Negotiate authentication which will return `AuthenticateResult.NoResult()`.\r\n- It causes excess failure logs, especially if the remote authentication handler is set as the default handler and invoked per request.\n\n### Recommended action\n\nCode that directly invokes AuthenticateAsync should be checked to ensure it properly handles `AuthenticateResult.NoResult()` and anonymous/empty ClaimsIdentity's.\n\n### Affected APIs\n\nHttpContext.[AuthenticateAsync](https://github.com/dotnet/aspnetcore/blob/a450cb69b5e4549f5515cdb057a68771f56cefd7/src/Http/Authentication.Abstractions/src/AuthenticationHttpContextExtensions.cs#L22)","Url":"https://github.com/aspnet/Announcements/issues/491","RelatedDescription":"Open issue \"[Breaking change]: AuthenticateAsync for remote authentication providers no longer fails if anonymous\" (#491)"},{"Id":"1288995849","IsPullRequest":true,"CreatedAt":"2022-08-01T20:01:05","Actor":"ghost","Number":"489","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=aspnet/Announcements) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=aspnet/Announcements) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/aspnet/Announcements/pull/489","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#489)"},{"Id":"1311264480","IsPullRequest":false,"CreatedAt":"2022-07-20T14:46:50","Actor":"captainsafia","Number":"490","RawContent":null,"Title":"[Breaking change]: Changes in default authentication scheme handling for ASP.NET Core","State":"open","Body":"### Description\r\n\r\n\r\nStarting in .NET 7 Preview 7, we introduced new behavior in the authentication area in ASP.NET Core.\r\n\r\nPreviously, users were always required to set the default authentication scheme that would be used by authentication and authorization handlers, like so:\r\n```\r\nbuilder.Services.AddAuthentication(\"MyDefaultScheme\");\r\n```\r\nMoving forward, when (and only when) a single authentication scheme is registered, that scheme will be treated as the default scheme. For example, \"foobar\" will be treated as the default scheme in the code below.\r\n```\r\nbuilder.Services.AddAuthentication().AddOAuth(\"foobar\");\r\n```\r\nThis change might expose unintended behavior changes in applications, such as authentication options being validated earlier than expected.\r\n\r\n### Version\r\n\r\n.NET 7 Preview 7\r\n\r\n### Previous behavior\r\n\r\nPreviously, when users did not provide a default scheme in the `AddAuthentication` call, no default scheme was set.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie();\r\n```\r\n\r\nThis impacted the behavior of authentication handlers in the application layer.\r\n\r\n### New behavior\r\n\r\nMoving forward, if (and only if) a _single_ scheme is registered in an application, that scheme will be treated as the default. In the code below, the `CookieDefaults.AuthenticationScheme` will be treated as the default scheme.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie();\r\n```\r\n\r\nHowever, in the code snippet below, no default will be set because multiple schemes are registered.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie().AddJwtBearer();\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nTo reduce boilerplate when configuring authentication and set up sensible defaults.\r\n\r\n### Recommended action\r\n\r\nThe change only impacts applications with a single scheme registered. For those scenarios, it's recommended to ensure that your application is prepared to handle the assumption that a single scheme is the default. For example, the options associated with that scheme should be configured correctly.\r\n\r\nAlternatively, this behavior can be disabled by setting the `Microsoft.AspNetCore.Authentication.SuppressAutoDefaultScheme` app context flag.\r\n\r\n### Affected APIs\r\n\r\nAuthentication APIs.","Url":"https://github.com/aspnet/Announcements/issues/490","RelatedDescription":"Open issue \"[Breaking change]: Changes in default authentication scheme handling for ASP.NET Core\" (#490)"},{"Id":"1287742787","IsPullRequest":false,"CreatedAt":"2022-06-28T18:44:22","Actor":"DamianEdwards","Number":"488","RawContent":null,"Title":"[Breaking change]: Static files, default document, and directory browsing middleware no longer no-op when an endpoint with a null RequestDelegate is active","State":"open","Body":"### Description\n\nAs detailed in dotnet/aspnetcore#42413, the file-serving middleware (`DefaultFilesMiddleware`, `DirectoryBrowserMiddleware`, and `StaticFileMiddleware`) have been updated to no longer no-op (i.e. defer to the next middleware in the pipeline) in the case that there is an active endpoint with a `null` request delegate.\r\n\r\nPR that makes the change: dotnet/aspnetcore#42458\n\n### Version\n\n.NET 7 Preview 7\n\n### Previous behavior\n\nPreviously, if the current request had an active endpoint, i.e. `HttpContext.GetEndpoint() != null`, the file-serving middleware would perform no action and simply delegate to the next middleware in the request pipeline.\n\n### New behavior\n\nThe file-serving middleware will now only perform no action if there is an active endpoint and its `RequestDelegate` property value is not `null`, i.e. `HttpContext.GetEndpoint()?.RequestDelegate is not null`.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis change will enable endpoints to be active in the request for the purposes of setting and sharing metadata with middleware that are endpoint-aware so that they can perform their intended function, while allowing other middleware (like the file-serving middleware) that would usually defer their behavior when an endpoint is active to also function.\r\n\r\nFor example, an endpoint with a `null` request delegate containing authorization metadata can be set as the active endpoint for a request, causing the `AuthorizationMiddleware` to enforce authorization requirements, which if satisfied would allow the `StaticFileMiddleware` to serve the requested files.\n\n### Recommended action\n\nIf you are relying on setting an active endpoint on the request to suppress the behavior of the file-serving middleware, ensure that the endpoint has a non-null value set for its `RequestDelegate` property.\n\n### Affected APIs\n\n- `IApplicationBuilder.UseStaticFiles()`\r\n- `IApplicationBuilder.UseDefaultFiles()`\r\n- `IApplicationBuilder.UseDirectoryBrowser()`","Url":"https://github.com/aspnet/Announcements/issues/488","RelatedDescription":"Open issue \"[Breaking change]: Static files, default document, and directory browsing middleware no longer no-op when an endpoint with a null RequestDelegate is active\" (#488)"},{"Id":"1278667050","IsPullRequest":false,"CreatedAt":"2022-06-21T16:03:03","Actor":"BrennanConroy","Number":"487","RawContent":null,"Title":"[Breaking change]: Unit testing SignalR Hubs may need updating","State":"open","Body":"### Description\n\n`IHubClients` and `IHubCallerClients` now hide interface members `IClientProxy Client(string connectionId);` and `IClientProxy Caller { get; }` with `ISingleClientProxy Client(string connectionId);` and `ISingleClientProxy Caller { get; }` in order to add support for [client results](https://docs.microsoft.com/aspnet/core/signalr/hubs?view=aspnetcore-7.0#client-results).\r\n\r\nThis is not a breaking change to production code, unless you use reflection to call the above `Client` or `Caller` methods.\n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nWhen using a testing library like Moq to unit test a SignalR Hub, you may write some code like follows:\r\n```csharp\r\nvar hub = new MyHub();\r\nvar mockCaller = new Mock<IHubCallerClients>();\r\nvar mockClientProxy = new Mock<IClientProxy>();\r\nmockCaller.Setup(x => x.Caller).Returns(mockClientProxy.Object);\r\nhub.Clients = mockCaller.Object;\r\n\r\nclass MyHub : Hub { }\r\n```\n\n### New behavior\n\n```csharp\r\nvar hub = new MyHub();\r\nvar mockCaller = new Mock<IHubCallerClients>();\r\nvar mockClientProxy = new Mock<ISingleClientProxy>(); // <-- updated code\r\nmockCaller.Setup(x => x.Caller).Returns(mockClientProxy.Object);\r\nhub.Clients = mockCaller.Object;\r\n\r\nclass MyHub : Hub { }\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThe change was made to add new functionality to SignalR and is non-breaking in normal use cases. The main area we see the change breaking is in test code which is easily updated.\n\n### Recommended action\n\nUpdate test code to use the `ISingleClientProxy` interface when using reflection/reflection-based test code.\n\n### Affected APIs\n\n[`IHubClients`](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.ihubclients?view=aspnetcore-6.0) and [`IHubCallerClients`](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.ihubcallerclients?view=aspnetcore-6.0)","Url":"https://github.com/aspnet/Announcements/issues/487","RelatedDescription":"Open issue \"[Breaking change]: Unit testing SignalR Hubs may need updating\" (#487)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-17T03:30:07.3077267Z","RunDurationInMilliseconds":3054}