{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core updates in .NET 7 Release Candidate 1","PublishedOn":"2022-09-14T19:13:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":".NET 7 Release Candidate 1 is now available! Check out what's new in ASP.NET Core in this update.\nThe post ASP.NET Core updates in .NET 7 Release Candidate 1 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-7-rc-1/","RawContent":null},{"Title":"Announcing .NET 7 Release Candidate 1","PublishedOn":"2022-09-14T17:56:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":".NET 7 Release Candidate 1 is the first of two release candidates that developers can now use in production. This post recaps major features included in the fastest .NET version to date.\nThe post...","Href":"https://devblogs.microsoft.com/dotnet/announcing-dotnet-7-rc-1/","RawContent":null},{"Title":"Announcing Entity Framework 7 Release Candidate 1","PublishedOn":"2022-09-14T17:55:10+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Announcing EF7 Release Candidate 1\nThe post Announcing Entity Framework 7 Release Candidate 1 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef7-rc1/","RawContent":null},{"Title":"Microsoft Teams Assignments Service’s Journey to .NET 6","PublishedOn":"2022-09-14T16:46:59+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The Assignments and Grades features in Teams have seen exponential growth in usage as schools around the world have undergone a digital transformation. To better meet the needs of teachers and...","Href":"https://devblogs.microsoft.com/dotnet/microsoft-teams-assignments-service-dotnet-6-journey/","RawContent":null},{"Title":".NET Framework September 2022 Security and Quality Rollup","PublishedOn":"2022-09-13T23:37:29+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"September 2022 Security and Quality Rollup for .NET Framework\nThe post .NET Framework September 2022 Security and Quality Rollup appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/dotnet-framework-september-2022-security-and-quality-rollup/","RawContent":null},{"Title":".NET September 2022 Updates – .NET 6.0.9 and .NET Core 3.1.29","PublishedOn":"2022-09-13T17:11:49+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Check out September updates for .NET 6.0 and .NET Core 3.1\nThe post .NET September 2022 Updates – .NET 6.0.9 and .NET Core 3.1.29 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/september-2022-updates/","RawContent":null},{"Title":"Arm64 Performance Improvements in .NET 7","PublishedOn":"2022-09-12T16:13:45+00:00","CommentsCount":10,"FacebookCount":0,"Summary":".NET 7 introduces a plethora of performance improvements for developers including developers targeting Arm64 devices. In this blog I break down everything you need to know about the improvements in...","Href":"https://devblogs.microsoft.com/dotnet/arm64-performance-improvements-in-dotnet-7/","RawContent":null},{"Title":".NET now on Windows Package Manager","PublishedOn":"2022-09-12T15:13:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":".NET is now available to install through the Windows Package Manager (Winget). Read all about how what it is, how to install, and more.\nThe post .NET now on Windows Package Manager appeared first on...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-now-on-windows-package-manager/","RawContent":null},{"Title":".NET 7 comes to Azure Functions & Visual Studio 2022","PublishedOn":"2022-09-09T18:02:08+00:00","CommentsCount":1,"FacebookCount":0,"Summary":".NET 7 comes to Azure Functions and tooling supported in Visual Studio! Learn how to build and deploy isolated functions.\nThe post .NET 7 comes to Azure Functions &#038; Visual Studio 2022 appeared...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-7-comes-to-azure-functions/","RawContent":null},{"Title":"Performance Improvements in .NET 7","PublishedOn":"2022-08-31T12:28:19+00:00","CommentsCount":145,"FacebookCount":0,"Summary":".NET 7 is fast. Really fast. In this post, we'll deep-dive into literally hundreds of performance improvements that contributed to that reality.\nThe post Performance Improvements in .NET 7 appeared...","Href":"https://devblogs.microsoft.com/dotnet/performance_improvements_in_net_7/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"1375201384","IsPullRequest":true,"CreatedAt":"2022-09-15T23:21:52","Actor":"captainsafia","Number":"44021","RawContent":null,"Title":"Only add MethodInfo to route handler endpoints","State":"open","Body":"## Description\r\n\r\nThis PR resolves a regression to OpenAPI-generation behavior due to a change in the `RouteEndpointDataSource` that was introduced in RC1. See [this comment](https://github.com/dotnet/aspnetcore/issues/44005#issuecomment-1248717069) for more einfo.\r\n\r\nFixes https://github.com/dotnet/aspnetcore/issues/44005\r\n\r\n## Customer Impact\r\n\r\nThis PR resolves a regression in which endpoints that customers would expect to be hidden from OpenAPI generation were visible \r\n\r\n## Regression?\r\n\r\n- [X] Yes\r\n- [ ] No\r\n\r\nThis is a regression from .NET 6 and .NET 7 Preview 7 behavior.\r\n\r\n## Risk\r\n\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low\r\n\r\nThe risk is low because we are reverting to known behavior (as of .NET 6).\r\n\r\n## Verification\r\n\r\n- [X] Manual (required): on user code from bug report\r\n- [X] Automated\r\n\r\n## Packaging changes reviewed?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n- [X] N/A","Url":"https://github.com/dotnet/aspnetcore/pull/44021","RelatedDescription":"Open PR \"Only add MethodInfo to route handler endpoints\" (#44021)"},{"Id":"1373620274","IsPullRequest":true,"CreatedAt":"2022-09-15T23:21:20","Actor":"brunolins16","Number":"43995","RawContent":null,"Title":"Adding retries to AddsExpectedItems","State":"closed","Body":"Test Failure: https://dev.azure.com/dnceng-public/public/_build/results?buildId=16850&view=ms.vss-test-web.build-test-results-tab&runId=333676&resultId=120839&paneView=debug","Url":"https://github.com/dotnet/aspnetcore/pull/43995","RelatedDescription":"Closed or merged PR \"Adding retries to AddsExpectedItems\" (#43995)"},{"Id":"1375191705","IsPullRequest":true,"CreatedAt":"2022-09-15T23:08:58","Actor":"Tratcher","Number":"44020","RawContent":null,"Title":"Allow zero byte reads on the test server response body ","State":"open","Body":"#41692","Url":"https://github.com/dotnet/aspnetcore/pull/44020","RelatedDescription":"Open PR \"Allow zero byte reads on the test server response body \" (#44020)"},{"Id":"1374986381","IsPullRequest":true,"CreatedAt":"2022-09-15T23:00:10","Actor":"dotnet-maestro-bot","Number":"44013","RawContent":null,"Title":"[automated] Merge branch 'release/7.0' => 'main'","State":"closed","Body":"I detected changes in the release/7.0 branch which have not been merged yet to main. I'm a robot and am [configured](https://github.com/dotnet/versions/blob/main/Maestro/subscriptions.json) to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/7.0 by the following committers:\n\n* dotnet-maestro[bot]\n* brunolins16\n* MackinnonBuck\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/7.0\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/7.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/7.0-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/7.0-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/AspNetCore merge/release/7.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/7.0-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/AspNetCore merge/release/7.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/44013","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/7.0' => 'main'\" (#44013)"},{"Id":"1374987907","IsPullRequest":true,"CreatedAt":"2022-09-15T22:03:26","Actor":"github-actions[bot]","Number":"44014","RawContent":null,"Title":"[release/7.0] [SignalR] Unblock user callbacks when waiting for client result","State":"closed","Body":"Backport of #43944 to release/7.0\r\n\r\n/cc @halter73 @BrennanConroy\r\n\r\n# Unblock user callbacks when waiting for client result\r\n\r\nThis was already an issue with Task returning .On methods, but client results likely makes it more likely to block on the client side\r\n\r\n* .NET client blocks other `.On` handlers but does not block the receive loop\r\n* JS client doesn't block anything, `.On` handlers for future invokes/sends can still run while blocked on user input, pings/etc. still received and processed\r\n* Java client blocks other `.On` handlers but does not block the receive loop\r\n\r\nFixes #41996\r\n\r\n## Customer Impact\r\n\r\n@DavidErben [writes](https://github.com/dotnet/aspnetcore/issues/5280#issuecomment-1247983490)\r\n\r\n> Hey guys, I just tried this out with .NET 7 RC1 and the methods are still blocking (like before if one returned a Task). Are there any plans to change this behavior for the official .NET 7 release?\r\n>\r\n>> We are using this feature to trigger commands on connected IoT devices. Usually a bunch of commands are triggered simultaneously, so it would be cool if they would run in parallel. But if it is not possible it is not a huge deal either.\r\n\r\n## Regression?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nNo. But without this fix, client return values are not as usable with the C# and Java clients as they are with the TS/JS client.\r\n\r\n## Risk\r\n\r\n- [ ] High\r\n- [ ] Medium\r\n- [x] Low\r\n\r\nThis only affects applications taking advantage of SignalR's new client return feature.\r\n\r\n## Verification\r\n\r\n- [x] Manual (required)\r\n- [x] Automated\r\n\r\n## Packaging changes reviewed?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n- [x] N/A","Url":"https://github.com/dotnet/aspnetcore/pull/44014","RelatedDescription":"Closed or merged PR \"[release/7.0] [SignalR] Unblock user callbacks when waiting for client result\" (#44014)"},{"Id":"1375128763","IsPullRequest":false,"CreatedAt":"2022-09-15T21:54:13","Actor":"datstarkey","Number":"44019","RawContent":null,"Title":"Blazor - Inherited CascadingTypeParameter","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCascadingTypeParameters work with nested components , but require you to specify the initial Type at the top level component,  and can be inferred down, this is great except when you want to use an abstract or inherited component with a type parameter.\r\n\r\nI've found quite often we wrap each of our pages in an inherited class, normally something to handle if this page or component has a model focus and how it gets and error handles.\r\n\r\nas a very brief example something like this:\r\n\r\n```\r\npublic abstract class ListPageBase<TListType> : ComponentBase\r\n{\r\n    public List<TListType> List { get; set; } = new();\r\n\r\n    protected abstract Task<List<TListType>> Get();\r\n\r\n    protected override async Task OnInitializedAsync()\r\n    {\r\n        List = await Get();\r\n    }\r\n}\r\n```\r\n\r\nYou can then implement this in a very simple page like this: (Notice how we still have to specify T in the List Component\r\n\r\n```\r\n@page \"/\"\r\n@inherits ListPageBase<UserModel>\r\n\r\n<h1>Users List</h1>\r\n\r\n\r\n<CascadingValue Value=\"this\">\r\n\r\n    <ListComponent TListType=\"UserModel\">\r\n        @context.Name - @context.Email\r\n    </ListComponent>\r\n    \r\n    \r\n    ...other components that utilize ListPageBase<TListType>\r\n\r\n</CascadingValue>\r\n\r\n@code {\r\n\r\n    //Would normally be an api call to fetch data\r\n    protected override Task<List<UserModel>> Get()\r\n    {\r\n        return Task.FromResult(new List<UserModel>()\r\n        {\r\n            new ()\r\n            {\r\n                Id = 1,\r\n                Email = \"someemail@email.com\",\r\n                Name = \"some name\"\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\nWith an example of the ListComponent looking like this:\r\n\r\n```\r\n@typeparam TListType\r\n\r\n<Virtualize TItem=\"TListType\" Items=\"Page.List\">\r\n    <div class=\"row\">\r\n        @ChildContent(context)\r\n    </div>\r\n</Virtualize>\r\n\r\n\r\n@code {\r\n    [Parameter]\r\n    public RenderFragment<TListType> ChildContent { get; set; } = default!;\r\n\r\n    [CascadingParameter]\r\n    public ListPageBase<TListType> Page { get; set; } = default!;\r\n}\r\n```\r\n\r\n\r\nWhat would be good here is if there was a way to utilize the CascadingTypeParameter Attribute on the abstract base class.\r\n\n\n### Describe the solution you'd like\n\n### Solution 1: use CascadingTypeParameterAttribute on the abstract class and infer into the component\r\nExample:\r\n```\r\n[CascadingTypeParameter(nameof(TListType))]\r\npublic abstract class ListPageBase<TListType> : ComponentBase\r\n{\r\n    public List<TListType> List { get; set; } = new();\r\n\r\n    protected abstract Task<List<TListType>> Get();\r\n\r\n    protected override async Task OnInitializedAsync()\r\n    {\r\n        List = await Get();\r\n    }\r\n}\r\n```\r\n\r\nThis would then pass down in the razor compiler similar to how a nested component would and following models that use the same TypeParam name.\r\n\r\n\r\n### Solution 2: Specify CascadingTypeParameter Type yourself \r\n\r\n```\r\n@inherits ListPageBase<UserModel>\r\n@attribute [CascadingTypeParameter(\"TListType\", typeof(UserModel))]\r\n\r\n\r\n<h1>Users List</h1>\r\n\r\n<CascadingValue Value=\"this\">\r\n\r\n    <ListComponent>\r\n        @context.Name - @context.Email\r\n    </ListComponent>\r\n    \r\n    \r\n    ...other components that utilize ListPageBase<TListType>\r\n\r\n</CascadingValue>\r\n```\r\n\r\nLess elegant but would allow more control over passing cascading parameters down to multiple components without even having to inherit from base classes\r\n\r\n\n\n### Additional context\n\nAt the moment you can work around this by making a CascadingType Component or similar for each type name you want to cascade:\r\n\r\n```\r\n@typeparam TListType\r\n@attribute [CascadingTypeParameter(nameof(TListType))]\r\n\r\n@ChildContent\r\n\r\n@code {\r\n    [Parameter]\r\n    public RenderFragment? ChildContent { get; set; }\r\n}\r\n```\r\n\r\nutilized like:\r\n\r\n```\r\n@page \"/\"\r\n@inherits ListPageBase<UserModel>\r\n\r\n\r\n<h1>Users List</h1>\r\n\r\n<CascadingValue Value=\"this\">\r\n\r\n    <CascadingType TListType=\"UserModel\">\r\n\r\n        <ListComponent>\r\n            @context.Name - @context.Email\r\n        </ListComponent>\r\n\r\n\r\n    @*...other components that utilize ListPageBase<TListType>*@\r\n\r\n    </CascadingType>\r\n</CascadingValue>\r\n```\r\n\r\nHowever you'd have to whack in every type name you might use and doesn't feel great to use.\r\n\r\n\r\nOverall I feel like solution 1 would make the most sense and would fit in the current scheme of things, would feel like a natural extension when inheriting a base component.","Url":"https://github.com/dotnet/aspnetcore/issues/44019","RelatedDescription":"Open issue \"Blazor - Inherited CascadingTypeParameter\" (#44019)"},{"Id":"1375122990","IsPullRequest":true,"CreatedAt":"2022-09-15T21:46:33","Actor":"brunolins16","Number":"44018","RawContent":null,"Title":"Quarantine ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCi…","State":"open","Body":"Addresses #44017","Url":"https://github.com/dotnet/aspnetcore/pull/44018","RelatedDescription":"Open PR \"Quarantine ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCi…\" (#44018)"},{"Id":"1375120051","IsPullRequest":false,"CreatedAt":"2022-09-15T21:42:40","Actor":"brunolins16","Number":"44017","RawContent":null,"Title":"Quarantine ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit","State":"open","Body":"## Failing Test(s)\r\n\r\n- Microsoft.AspNetCore.Components.E2ETest.ServerExecutionTests.CircuitGracefulTerminationTests.ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit\r\n\r\n## Error Message\r\n\r\n```text\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n## Stacktrace\r\n<details>\r\n```text\r\n   at Microsoft.AspNetCore.Components.E2ETest.ServerExecutionTests.CircuitGracefulTerminationTests.ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit() in /home/vsts/work/1/s/src/Components/test/E2ETest/ServerExecutionTests/CircuitGracefulTerminationTests.cs:line 71\r\n--- End of stack trace from previous location ---\r\n```\r\n</details>\r\n\r\n## Logs\r\n\r\n<details>\r\n\r\n```text\r\n[Microsoft.AspNetCore.Components.E2ETest.ServerExecutionTests.CircuitGracefulTerminationTests.ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit] Attempt 1 of 3 failed due to Xunit.Sdk.TrueException: Assert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at Xunit.Assert.True(Nullable`1 condition, String userMessage) in /_/src/xunit.assert/Asserts/BooleanAsserts.cs:line 132\r\n   at Microsoft.AspNetCore.Components.E2ETest.ServerExecutionTests.CircuitGracefulTerminationTests.ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit() in /home/vsts/work/1/s/src/Components/test/E2ETest/ServerExecutionTests/CircuitGracefulTerminationTests.cs:line 71\r\n   at Xunit.Sdk.TestInvoker`1.<>c__DisplayClass48_0.<<InvokeTestMethodAsync>b__1>d.MoveNext() in /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs:line 273\r\n--- End of stack trace from previous location ---\r\n   at Xunit.Sdk.ExecutionTimer.AggregateAsync(Func`1 asyncAction) in /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs:line 54\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync(Func`1 code) in /_/src/xunit.core/Sdk/ExceptionAggregator.cs:line 96\r\n\r\n[Microsoft.AspNetCore.Components.E2ETest.ServerExecutionTests.CircuitGracefulTerminationTests.ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit] Attempt 2 of 3 failed due to Xunit.Sdk.TrueException: Assert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at Xunit.Assert.True(Nullable`1 condition, String userMessage) in /_/src/xunit.assert/Asserts/BooleanAsserts.cs:line 132\r\n   at Microsoft.AspNetCore.Components.E2ETest.ServerExecutionTests.CircuitGracefulTerminationTests.ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit() in /home/vsts/work/1/s/src/Components/test/E2ETest/ServerExecutionTests/CircuitGracefulTerminationTests.cs:line 71\r\n   at Xunit.Sdk.TestInvoker`1.<>c__DisplayClass48_0.<<InvokeTestMethodAsync>b__1>d.MoveNext() in /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs:line 273\r\n--- End of stack trace from previous location ---\r\n   at Xunit.Sdk.ExecutionTimer.AggregateAsync(Func`1 asyncAction) in /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs:line 54\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync(Func`1 code) in /_/src/xunit.core/Sdk/ExceptionAggregator.cs:line 96\r\n```\r\n</details>\r\n\r\n## Build\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=18904&view=ms.vss-test-web.build-test-results-tab&runId=378812&resultId=100448&paneView=attachments\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/44017","RelatedDescription":"Open issue \"Quarantine ClosingTheBrowserWindow_GracefullyDisconnects_TheCurrentCircuit\" (#44017)"},{"Id":"1374369443","IsPullRequest":true,"CreatedAt":"2022-09-15T20:27:45","Actor":"dotnet-maestro[bot]","Number":"44001","RawContent":null,"Title":"[main] Update dependencies from dotnet/efcore dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 8ce5251e-8269-419d-3b2a-08d8b8050dda\r\n- **Build**: 20220915.5\r\n- **Date Produced**: September 15, 2022 11:06:50 AM UTC\r\n- **Commit**: 53db832e4419b31f4b05b83606bd3d2bd8a2106c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-ef**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 8.0.0-alpha.1.22464.6 to 8.0.0-alpha.1.22465.5][1]\r\n\r\n[1]: https://github.com/dotnet/efcore/compare/235507f...53db832\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20220914.17\r\n- **Date Produced**: September 15, 2022 3:38:23 AM UTC\r\n- **Commit**: 0d61bffbc4dd7ba7f5626accf28ba0d8fc273313\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Hosting**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Http**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Options**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Extensions.Primitives**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.IO.Pipelines**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Net.Http.Json**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Net.Http.WinHttpHandler**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Reflection.Metadata**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Threading.Channels**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n  - **System.Threading.RateLimiting**: [from 8.0.0-alpha.1.22463.9 to 8.0.0-alpha.1.22464.17][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/67d2570...0d61bff\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/44001","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/efcore dotnet/runtime\" (#44001)"},{"Id":"1375046528","IsPullRequest":false,"CreatedAt":"2022-09-15T20:26:15","Actor":"brunolins16","Number":"44016","RawContent":null,"Title":"Add WebApplicationBuilderSettingInvalidApplicationWillFailAssemblyLoadForUserSecrets  back","State":"open","Body":"It's probably better to rewrite the test to verify that it no longer throws rather than delete it.\r\n\r\n_Originally posted by @halter73 in https://github.com/dotnet/aspnetcore/issues/44001#issuecomment-1248576707_","Url":"https://github.com/dotnet/aspnetcore/issues/44016","RelatedDescription":"Open issue \"Add WebApplicationBuilderSettingInvalidApplicationWillFailAssemblyLoadForUserSecrets  back\" (#44016)"},{"Id":"1375010328","IsPullRequest":true,"CreatedAt":"2022-09-15T19:53:41","Actor":"dotnet-maestro[bot]","Number":"44015","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/runtime dotnet/efcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 12652ed0-752c-46b0-ddca-08da7ef63a55\r\n- **Build**: 20220915.21\r\n- **Date Produced**: September 16, 2022 1:54:45 AM UTC\r\n- **Commit**: 954da5fb853c57427923a5b12e3f8a4fc7ec1181\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-ef**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-rc.2.22465.8 to 7.0.0-rtm.22465.21][5]\r\n\r\n[5]: https://github.com/dotnet/efcore/compare/8dcf426...954da5f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:ab7d5e23-27a3-44e0-6f61-08da7ef6374d)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ab7d5e23-27a3-44e0-6f61-08da7ef6374d\r\n- **Build**: 20220915.3\r\n- **Date Produced**: September 15, 2022 9:50:30 PM UTC\r\n- **Commit**: ee6cde5defb8d697d4a28602d072a3784890728f\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.IO.Pipelines**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Net.Http.Json**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Resources.Extensions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Security.Permissions**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Text.Json**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Threading.Channels**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-rc.2.22464.18 to 7.0.0-rtm.22465.3][3]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/04d61ca...ee6cde5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ab7d5e23-27a3-44e0-6f61-08da7ef6374d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/44015","RelatedDescription":"Open PR \"[release/7.0] Update dependencies from dotnet/runtime dotnet/efcore\" (#44015)"},{"Id":"1374888660","IsPullRequest":true,"CreatedAt":"2022-09-15T19:25:45","Actor":"dotnet-maestro[bot]","Number":"44010","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/efcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 12652ed0-752c-46b0-ddca-08da7ef63a55\r\n- **Build**: 20220915.8\r\n- **Date Produced**: September 15, 2022 5:33:34 PM UTC\r\n- **Commit**: 8dcf42638487173770a5649ead881ad76a97002d\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-ef**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-rc.2.22465.7 to 7.0.0-rc.2.22465.8][1]\r\n\r\n[1]: https://github.com/dotnet/efcore/compare/5d0d937...8dcf426\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/44010","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/efcore\" (#44010)"},{"Id":"1373997096","IsPullRequest":true,"CreatedAt":"2022-09-15T19:12:59","Actor":"dotnet-maestro-bot","Number":"43997","RawContent":null,"Title":"[automated] Merge branch 'release/7.0' => 'main'","State":"closed","Body":"I detected changes in the release/7.0 branch which have not been merged yet to main. I'm a robot and am [configured](https://github.com/dotnet/versions/blob/main/Maestro/subscriptions.json) to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/7.0 by the following committers:\n\n* dotnet-maestro[bot]\n* wtgodbe\n* dotnet-bot\n* dougbu\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/7.0\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/7.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/7.0-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/7.0-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/AspNetCore merge/release/7.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/7.0-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/AspNetCore merge/release/7.0-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore HEAD:merge/release/7.0-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/43997","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/7.0' => 'main'\" (#43997)"},{"Id":"1374962151","IsPullRequest":false,"CreatedAt":"2022-09-15T19:08:01","Actor":"Korporal","Number":"44012","RawContent":null,"Title":"Logging - How to always have application name or moniker included in logged messages","State":"open","Body":"I've spent several hours scouring the web and found precious little. I want an appname to be included in every logged message but it seems this is simply not supported.\r\n\r\nAll I can find is \"category\" but again I cannot find if that can be specified in appsettings or must be done in code.\r\n\r\nI am surprised that this is not supported, identifying the app that logs a message is surely rather a basic requirement?\r\n\r\nIn my case I'm using event log but that that shouldn't matter (I don't want to rely on event log \"Source\" either as that's specific to the windows event log).\r\n\r\nHere's an example - the question our support desk will ask is \"Which application logged this?\"\r\n\r\n![image](https://user-images.githubusercontent.com/12262952/190490198-3e9f57d1-bf78-4d93-8967-f3c9e48e8cc3.png)\r\n\r\nOr look at this from a short run:\r\n\r\n![image](https://user-images.githubusercontent.com/12262952/190510956-5bd50c34-6329-43c8-99bd-912422d0fcd1.png)\r\n\r\nHow is anyone to know what app wrote these? how can anyone even know if they are from the same app?\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/44012","RelatedDescription":"Open issue \"Logging - How to always have application name or moniker included in logged messages\" (#44012)"},{"Id":"1374929413","IsPullRequest":true,"CreatedAt":"2022-09-15T18:36:03","Actor":"wtgodbe","Number":"44011","RawContent":null,"Title":"Remove unneeded generic params from test case","State":"open","Body":"","Url":"https://github.com/dotnet/aspnetcore/pull/44011","RelatedDescription":"Open PR \"Remove unneeded generic params from test case\" (#44011)"},{"Id":"1374873903","IsPullRequest":false,"CreatedAt":"2022-09-15T17:44:18","Actor":"captainsafia","Number":"44009","RawContent":null,"Title":"Add analyzers introduced in .NET 7 to docs page","State":"open","Body":"We added 4 new analyzers and codefixers in .NET 7. We need to document them over at https://docs.microsoft.com/en-us/aspnet/core/diagnostics/code-analysis?view=aspnetcore-6.0.","Url":"https://github.com/dotnet/aspnetcore/issues/44009","RelatedDescription":"Open issue \"Add analyzers introduced in .NET 7 to docs page\" (#44009)"},{"Id":"1374022845","IsPullRequest":true,"CreatedAt":"2022-09-15T17:24:36","Actor":"dotnet-maestro[bot]","Number":"43998","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/runtime dotnet/efcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ab7d5e23-27a3-44e0-6f61-08da7ef6374d)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ab7d5e23-27a3-44e0-6f61-08da7ef6374d\r\n- **Build**: 20220914.18\r\n- **Date Produced**: September 15, 2022 6:07:29 AM UTC\r\n- **Commit**: 04d61ca139d82b1a9bb8d19a0c6aa9bf5135a5a4\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.IO.Pipelines**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Net.Http.Json**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Text.Json**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Threading.Channels**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-rc.2.22464.6 to 7.0.0-rc.2.22464.18][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/66a9136...04d61ca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ab7d5e23-27a3-44e0-6f61-08da7ef6374d)\r\n\r\n[marker]: <> (Begin:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 12652ed0-752c-46b0-ddca-08da7ef63a55\r\n- **Build**: 20220915.7\r\n- **Date Produced**: September 15, 2022 12:06:17 PM UTC\r\n- **Commit**: 5d0d937a7b72c7f530aa682f4e586bfdb587d7f3\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-ef**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-rc.2.22464.19 to 7.0.0-rc.2.22465.7][3]\r\n\r\n[3]: https://github.com/dotnet/efcore/compare/e67df35...5d0d937\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/43998","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/runtime dotnet/efcore\" (#43998)"},{"Id":"1374747663","IsPullRequest":false,"CreatedAt":"2022-09-15T15:49:32","Actor":"mkArtakMSFT","Number":"44008","RawContent":null,"Title":"Support for pagination","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nIt's quite common to have applications, which present lists of records in one or another way.\r\nThe examples in real life are endless - spanning from showing grid of images to a list of flat data records.\r\n\r\nMany times, those records are much more than it makes sense to show on a single page. Some developers choose to have paged solutions, while others support infinite-scrolling, which behind the scenes would work in a similar fasion.\r\n\r\nCurrently, there is no native / standard way of supporting pagination, so every application developer will need to come up with their own solution. It would be great to provide a standard mechanism for doing this.\r\n\r\n### Describe the solution you'd like\r\n\r\nWhile this doesn't seem to be a big issue, and is relatively easy for developers to do, standardization would help as it hopefully will be utilized with other Microsoft services too.\r\nThe simplest form I can think of is introduction of these two APIs:\r\n\r\n```csharp\r\npublic class PageRequest\r\n{\r\n  public int StartIndex {get;set;}\r\n  public int Count {get;set;}\r\n}\r\n\r\npublic class PagedResponse<T>\r\n{\r\n  public List<T> PageResults {get;set;}\r\n  public bool MoreRecordsExist {get;set;}\r\n}\r\n```\r\n\r\nThe two simple types would allow developers to now standardize their APIs as follows:\r\n(I assume even this could be optimized and made even nicer :) )\r\n```csharp\r\npublic Task<PageResponse<T>> RetrieveResults(CustomRequest request, PageRequest request)\r\n{\r\n // ...\r\n}\r\n```\r\n\r\n### Additional context\r\n\r\nAs I've mentioned above, I don't have any specific proposal, this was just an example. But I want this issue to serve as a seed for thinking about standardizing the notation of exposing data paging capabilities through APIs.","Url":"https://github.com/dotnet/aspnetcore/issues/44008","RelatedDescription":"Open issue \"Support for pagination\" (#44008)"},{"Id":"1374532876","IsPullRequest":false,"CreatedAt":"2022-09-15T13:28:30","Actor":"Jon-Hilton","Number":"44007","RawContent":null,"Title":"Error when using auth with prerendering after trimming","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI have a Blazor app which is prerendered and uses a third party Oidc provider for auth (Auth0).\r\n\r\nI've encountered an issue with .NET 7 RC1 where, after trimming the app for production, I run into this error:\r\n\r\n```\r\ncrit: Microsoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\r\n      Unhandled exception rendering component: ConstructorContainsNullParameterNames, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3+JavaScriptLoggingOptions[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions] SerializationNotSupportedParentType, System.Object Path: $.\r\nSystem.NotSupportedException: ConstructorContainsNullParameterNames, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3+JavaScriptLoggingOptions[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions] SerializationNotSupportedParentType, System.Object Path: $.\r\n ---> System.NotSupportedException: ConstructorContainsNullParameterNames, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3+JavaScriptLoggingOptions[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions]\r\n   at System.Text.Json.ThrowHelper.ThrowNotSupportedException_ConstructorContainsNullParameterNames(Type )\r\n   at System.Text.Json.Serialization.Metadata.ReflectionJsonTypeInfo`1[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3.JavaScriptLoggingOptions[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],\r\n```\r\n\r\nThe client app is set up to use Oidc Authentication (via Auth0) like so:\r\n\r\n**ClientApp\\Program.cs**\r\n``` csharp\r\nbuilder.Services.AddAuthorizationCore().AddOidcAuthentication(options =>\r\n{\r\n    builder.Configuration.Bind(\"Auth0\", options.ProviderOptions);\r\n\r\n    options.ProviderOptions.ResponseType = \"code\";\r\n    options.ProviderOptions.AdditionalProviderParameters.Add(\"audience\", \"https://practical-dot-net.io\");\r\n});\r\n```\r\n\r\nThe server app has the following configuration (to ensure the app doesn't fall over when prerendering).\r\n\r\n**ServerApp\\Program.cs**\r\n``` csharp\r\n...\r\n\r\nbuilder.Services.AddApiAuthorization();\r\nbuilder.Services.AddTransient<IJSRuntime, NullJSRuntime>();\r\n\r\n...\r\n```\r\n\r\nWhere `NullJsRuntime` is a simple class which does nothing (apart from returning ValueTasks).\r\n\r\n``` csharp\r\npublic class NullJSRuntime : IJSRuntime\r\n{\r\n    public ValueTask<TValue> InvokeAsync<TValue>(string identifier, object[] args)\r\n    {\r\n        return new ValueTask<TValue>();\r\n    }\r\n\r\n    public ValueTask<TValue> InvokeAsync<TValue>(string identifier, CancellationToken cancellationToken, object[] args)\r\n    {\r\n        return new ValueTask<TValue>();\r\n    }\r\n}\r\n```\r\n\r\n_Host.cshtml is configured to skip prerendering when attempting to access any Urls which begin with `/authentication` for good measure...\r\n\r\n**_Host.cshtml**\r\n``` xml\r\n@if (HttpContext.Request.Path.StartsWithSegments(\"/authentication\"))\r\n{\r\n    <component type=\"typeof(App)\" render-mode=\"WebAssembly\" />\r\n}\r\n\r\nelse\r\n{\r\n    <component type=\"typeof(App)\" render-mode=\"WebAssemblyPrerendered\" />\r\n}\r\n```\r\n\r\nIf I publish this (with linking/trimming enabled) and run the app I get the error mentioned above.\r\n\r\n### Expected Behavior\r\n\r\nThe app runs without error, after linking, when prerendering and integrating with a third party auth provider.\r\n\r\n### Steps To Reproduce\r\n\r\nClone https://github.com/Jon-Hilton/BlazorPreRenderAuthIssue\r\n\r\nEnter valid OIDC server values for `Authority` and `ClientId` in Client\\wwwroot\\appsettings.json:\r\n\r\nhttps://github.com/Jon-Hilton/BlazorPreRenderAuthIssue/blob/master/Client/wwwroot/appsettings.json\r\n\r\nYou may also need to update the audience as configured in Client\\Program.cs here: \r\n\r\nhttps://github.com/Jon-Hilton/BlazorPreRenderAuthIssue/blob/fce45fc9533200dfe8a4b0844a8b8d5bc64bf81f/Client/Program.cs#L15\r\n\r\nWith OIDC configured, now:\r\n\r\n- Publish BlazorApp1.Server\r\n- Launch the published app\r\n- Observe error in console\r\n\r\n### Exceptions (if any)\r\n\r\ncrit: Microsoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\r\n      Unhandled exception rendering component: ConstructorContainsNullParameterNames, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3+JavaScriptLoggingOptions[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions] SerializationNotSupportedParentType, System.Object Path: $.\r\nSystem.NotSupportedException: ConstructorContainsNullParameterNames, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3+JavaScriptLoggingOptions[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions] SerializationNotSupportedParentType, System.Object Path: $.\r\n ---> System.NotSupportedException: ConstructorContainsNullParameterNames, Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3+JavaScriptLoggingOptions[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions]\r\n   at System.Text.Json.ThrowHelper.ThrowNotSupportedException_ConstructorContainsNullParameterNames(Type )\r\n   at System.Text.Json.Serialization.Metadata.ReflectionJsonTypeInfo`1[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3.JavaScriptLoggingOptions[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].GetParameterInfoValues()\r\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo.Configure()\r\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo.<EnsureConfigured>g__ConfigureLocked|138_0()\r\n--- End of stack trace from previous location ---\r\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo.<EnsureConfigured>g__ConfigureLocked|138_0()\r\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo.EnsureConfigured()\r\n   at System.Text.Json.JsonSerializerOptions.GetTypeInfoInternal(Type , Boolean , Boolean )\r\n   at System.Text.Json.WriteStackFrame.InitializePolymorphicReEntry(Type , JsonSerializerOptions )\r\n   at System.Text.Json.Serialization.JsonConverter.ResolvePolymorphicConverter(Object , JsonTypeInfo , JsonSerializerOptions , WriteStack& )\r\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TryWrite(Utf8JsonWriter , Object& , JsonSerializerOptions , WriteStack& )\r\n   at System.Text.Json.Serialization.Converters.ArrayConverter`2[[System.Object[], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].OnWriteResume(Utf8JsonWriter , Object[] , JsonSerializerOptions , WriteStack& )\r\n   at System.Text.Json.Serialization.JsonCollectionConverter`2[[System.Object[], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].OnTryWrite(Utf8JsonWriter , Object[] , JsonSerializerOptions , WriteStack& )\r\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Object[], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TryWrite(Utf8JsonWriter , Object[]& , JsonSerializerOptions , WriteStack& )\r\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Object[], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].WriteCore(Utf8JsonWriter , Object[]& , JsonSerializerOptions , WriteStack& )\r\n   Exception_EndOfInnerExceptionStack\r\n   at System.Text.Json.ThrowHelper.ThrowNotSupportedException(WriteStack& , NotSupportedException )\r\n   at System.Text.Json.Serialization.JsonConverter`1[[System.Object[], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].WriteCore(Utf8JsonWriter , Object[]& , JsonSerializerOptions , WriteStack& )\r\n   at System.Text.Json.JsonSerializer.WriteCore[Object[]](Utf8JsonWriter , Object[]& , JsonTypeInfo`1 )\r\n   at System.Text.Json.JsonSerializer.WriteString[Object[]](Object[]& , JsonTypeInfo`1 )\r\n   at System.Text.Json.JsonSerializer.Serialize[Object[]](Object[] , JsonSerializerOptions )\r\n   at Microsoft.JSInterop.JSRuntime.InvokeAsync[IJSVoidResult](Int64 , String , CancellationToken , Object[] )\r\n   at Microsoft.JSInterop.JSRuntime.<InvokeAsync>d__16`1[[Microsoft.JSInterop.Infrastructure.IJSVoidResult, Microsoft.JSInterop, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].MoveNext()\r\n   at Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(IJSRuntime , String , Object[] )\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3.<EnsureAuthService>d__29[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].MoveNext()\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationService`3.<SignInAsync>d__20[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60],[Microsoft.AspNetCore.Components.WebAssembly.Authentication.OidcProviderOptions, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].MoveNext()\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.<ProcessLogIn>d__84[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].MoveNext()\r\n   at Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.<OnParametersSetAsync>d__83[[Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState, Microsoft.AspNetCore.Components.WebAssembly.Authentication, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].MoveNext()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()\r\n\r\n### .NET Version\r\n\r\n7.0.100-rc.1.22431.12\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/44007","RelatedDescription":"Open issue \"Error when using auth with prerendering after trimming\" (#44007)"},{"Id":"1374500709","IsPullRequest":false,"CreatedAt":"2022-09-15T13:05:22","Actor":"MrAntix","Number":"44006","RawContent":null,"Title":"This is by design. `FromBody` uses serializers such as Newtonsoft.Json which have a different feature set compared to model binding. Model binding - indicated by `FromQuery`, `FromRoute` etc, requires that complex types have a parameterless constructor.","State":"open","Body":"This is by design. `FromBody` uses serializers such as Newtonsoft.Json which have a different feature set compared to model binding. Model binding - indicated by `FromQuery`, `FromRoute` etc, requires that complex types have a parameterless constructor.\r\n\r\n_Originally posted by @pranavkm in https://github.com/dotnet/aspnetcore/issues/9781#issuecomment-488288308_","Url":"https://github.com/dotnet/aspnetcore/issues/44006","RelatedDescription":"Open issue \"This is by design. `FromBody` uses serializers such as Newtonsoft.Json which have a different feature set compared to model binding. Model binding - indicated by `FromQuery`, `FromRoute` etc, requires that complex types have a parameterless constructor.\" (#44006)"},{"Id":"1374472706","IsPullRequest":false,"CreatedAt":"2022-09-15T12:44:29","Actor":"martincostello","Number":"44005","RawContent":null,"Title":"New endpoints exposed by OpenAPI documentation compared to before ASP.NET Core 7 RC1","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAfter updating an application from ASP.NET Core 7 preview 7 to RC1 some integration tests we have for our OpenAPI contracts started to fail because a new endpoint appeared in the description that wasn't previously there.\r\n\r\nInvestigation lead to the internals of a NuGet package consumed by the application exposing an endpoint via a middleware using `MapGet(string, RequestDelegate)`. This package targets `netcoreapp3.1` so predates Minimal APIs and other new routing features.\r\n\r\nUpdating the NuGet package to add the metadata to hide the endpoint from API Explorer did not result in the endpoint being suppressed from the OpenAPI document.\r\n\r\nI'm not sure if this is really an issue, but given that without updating the library to target `net6.0` so that `ExcludeFromDescriptionAttribute` can be added to the metadata, there doesn't seem to be a way to suppress the endpoint that wasn't there before without writing new code to filter the generated OpenAPI document.\r\n\r\nIn our case, we can update our only library to ensure it is hidden by adding a `net6.0` target, but there might be other similar libraries out in the wider ecosystem that will start appearing in OpenAPI specs unexpectedly when an application is updated to .NET 7 which users do not have immediate control over.\r\n\n\n### Expected Behavior\n\nEither:\r\n\r\n1. The endpoint is not added to the OpenAPI metadata;\r\n2. The endpoint is hidden by the use of `new ApiExplorerSettingsAttribute() { IgnoreApi = true }` on its metadata.\r\n\n\n### Steps To Reproduce\n\nCompile and run the application below and navigate to the `/swagger/v1/swagger.json` endpoint.\r\n\r\nTargeting `net7.0`, the endpoint will return the following JSON:\r\n\r\n```json\r\n{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"API\",\r\n    \"version\": \"v1\"\r\n  },\r\n  \"paths\": {\r\n    \"/metrics\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"MetricServerMiddleware\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"components\": { }\r\n}\r\n```\r\n\r\nTargeting `net6.0`, the endpoint will return the following JSON:\r\n\r\n```json\r\n{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"API\",\r\n    \"version\": \"v1\"\r\n  },\r\n  \"paths\": { },\r\n  \"components\": { }\r\n}\r\n```\r\n\r\n### App.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n    <RootNamespace>App</RootNamespace>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"prometheus-net.AspNetCore\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"6.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n### Program.cs\r\n\r\n```csharp\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Prometheus;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\nbuilder.Services.AddEndpointsApiExplorer();\r\nbuilder.Services.AddSwaggerGen(options =>\r\n{\r\n    options.SwaggerDoc(\"v1\", new() { Title = \"API\", Version = \"v1\" });\r\n});\r\n\r\nvar app = builder.Build();\r\n\r\napp.UseSwagger();\r\n\r\nMapPrometheus(app);\r\n\r\napp.Run();\r\n\r\nstatic IEndpointRouteBuilder MapPrometheus(IEndpointRouteBuilder endpoints, string pattern = \"/metrics\")\r\n{\r\n    var requestDelegate = endpoints\r\n        .CreateApplicationBuilder()\r\n        .UseMiddleware<MetricServerMiddleware>(new MetricServerMiddleware.Settings() { Registry = null })\r\n        .Build();\r\n\r\n    endpoints\r\n        .MapGet(pattern, requestDelegate)\r\n        .Add((endpoint) =>\r\n        {\r\n            endpoint.Metadata.Add(new ApiExplorerSettingsAttribute() { IgnoreApi = true });\r\n        });\r\n\r\n    return endpoints;\r\n}\r\n```\r\n\n\n### Exceptions (if any)\n\nNone.\n\n### .NET Version\n\n7.0.100-rc.1.22431.12\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/44005","RelatedDescription":"Open issue \"New endpoints exposed by OpenAPI documentation compared to before ASP.NET Core 7 RC1\" (#44005)"},{"Id":"1374465392","IsPullRequest":true,"CreatedAt":"2022-09-15T12:38:41","Actor":"gfoidl","Number":"44004","RawContent":null,"Title":"`IsCharWhitespace` for HTML5 spec without char[].IndexOf","State":"open","Body":"In MVC's tag-helpers for the check `IsCharWhitespace` a `static readonly char[]` with the allowed chars was used and then the `IndexOf(ch)` to see if the given char is in that set or not.\r\nFor the five allowed chars this operation is quite costly, and the call to `IndexOf` can't be inlined as it's too big.\r\n\r\nAs kind of direct lookup we can construct a bit-mask from the allowed chars, then check if the given char is in that bit-mask.\r\nResults in speedup ~10x (for this isolated operation in the benchmark).\r\nMoreover the code becomes very tiny, so it can be inlined -- though the JIT needs some help with that decision.\r\n\r\n<details>\r\n  <summary>Benchmark code</summary>\r\n\r\n```c#\r\nusing System.Runtime.CompilerServices;\r\nusing BenchmarkDotNet.Attributes;\r\n\r\nBench bench = new();\r\nConsole.WriteLine(bench.Default());\r\nConsole.WriteLine(bench.BitMask());\r\nConsole.WriteLine(bench.BitMaskInlined());\r\n\r\n#if !DEBUG\r\nBenchmarkDotNet.Running.BenchmarkRunner.Run<Bench>();\r\n#endif\r\n\r\n[DisassemblyDiagnoser]\r\npublic class Bench\r\n{\r\n    private static readonly char[] ValidAttributeWhitespaceChars =\r\n        new[] { '\\t', '\\n', '\\u000C', '\\r', ' ' };\r\n\r\n    [Benchmark(Baseline = true, OperationsPerInvoke = char.MaxValue - char.MinValue)]\r\n    public int Default()\r\n    {\r\n        int count = 0;\r\n\r\n        for (int i = char.MinValue; i <= char.MaxValue; ++i)\r\n        {\r\n            if (IsCharWhitespace((char)i))\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    [Benchmark(OperationsPerInvoke = char.MaxValue - char.MinValue)]\r\n    public int BitMask()\r\n    {\r\n        int count = 0;\r\n\r\n        for (int i = char.MinValue; i <= char.MaxValue; ++i)\r\n        {\r\n            if (IsCharWhitespaceBitMask((char)i))\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    [Benchmark(OperationsPerInvoke = char.MaxValue - char.MinValue)]\r\n    public int BitMaskInlined()\r\n    {\r\n        int count = 0;\r\n\r\n        for (int i = char.MinValue; i <= char.MaxValue; ++i)\r\n        {\r\n            if (IsCharWhitespaceBitMaskInlined((char)i))\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    private static bool IsCharWhitespace(char ch)\r\n    {\r\n        return ValidAttributeWhitespaceChars.AsSpan().IndexOf(ch) != -1;\r\n    }\r\n\r\n    private static bool IsCharWhitespaceBitMask(char ch)\r\n    {\r\n        if (ch > 32) return false;\r\n\r\n        // Valid whitespace characters defined by the HTML5 spec.\r\n        const long BitMask =\r\n            (1L << '\\t')    // 9\r\n          | (1L << '\\n')    // 10\r\n          | (1L << '\\f')    // 12\r\n          | (1L << '\\r')    // 13\r\n          | (1L << ' ');    // 32\r\n\r\n        return (BitMask & (1L << ch)) != 0;\r\n    }\r\n\r\n    [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n    private static bool IsCharWhitespaceBitMaskInlined(char ch)\r\n    {\r\n        if (ch > 32) return false;\r\n\r\n        // Valid whitespace characters defined by the HTML5 spec.\r\n        const long BitMask =\r\n            (1L << '\\t')    // 9\r\n          | (1L << '\\n')    // 10\r\n          | (1L << '\\f')    // 12\r\n          | (1L << '\\r')    // 13\r\n          | (1L << ' ');    // 32\r\n\r\n        return (BitMask & (1L << ch)) != 0;\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n```\r\n|         Method |      Mean |     Error |    StdDev | Ratio | Code Size |\r\n|--------------- |----------:|----------:|----------:|------:|----------:|\r\n|        Default | 6.0844 ns | 0.1193 ns | 0.1374 ns |  1.00 |     107 B |\r\n|        BitMask | 2.1983 ns | 0.0435 ns | 0.0714 ns |  0.37 |      85 B |\r\n| BitMaskInlined | 0.6276 ns | 0.0125 ns | 0.0162 ns |  0.10 |      51 B |\r\n```\r\n(.NET SDK=7.0.100-rc.2.22426.5)\r\n\r\nMethod `BitMaskInlined` is used in this PR.","Url":"https://github.com/dotnet/aspnetcore/pull/44004","RelatedDescription":"Open PR \"`IsCharWhitespace` for HTML5 spec without char[].IndexOf\" (#44004)"},{"Id":"1374440985","IsPullRequest":false,"CreatedAt":"2022-09-15T12:20:11","Actor":"yugabe","Number":"44003","RawContent":null,"Title":"Publishing hosted Blazor WASM project breaks if not self-contained","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nUp until and including .NET 7 Preview 7, I could publish a hosted Blazor WASM project by providing both the runtime identifier and the `SelfContained` false flag to MSBuild (providing it via command line `--runtime` and either `--self-contained false` or `--no-self-contained` switches didn't work either).\r\n\r\nSince .NET 7 RC 1, the following exception occurs:\r\n> C:\\Program Files\\dotnet\\sdk\\7.0.100-rc.1.22431.12\\Sdks\\Microsoft.NET.ILLink.Tasks\\build\\Microsoft.NET.ILLink.targets(196,5): error NETSDK1102: Optimizing assemblies for size is not supported for the selected publish configuration. Please ensure that you are publishing a self-contained app. [*.Client.csproj]\r\n\r\nRelated previous issue: #43068\r\n\r\nIn the pevious .NET release, providing the MSBuild flag /p:SelfContained=false (or modifying the project file) worked and produced a non-SCD build.\r\n\r\nWeirdly, the build DOES work if publishing via Visual Studio UI *or* when putting the `<SelfContained>false</SelfContained>` property in `Server.csproj`.\n\n### Expected Behavior\n\nPublishing via command line should work (for building via CI scenarios using the `dotnet` CLI).\r\n\r\nThe issue is probably related to how there needs to be two different builds for the Client project in this case: one self-contained and trimmed for the browser, and one possibly framework-dependent for the Server environment. The self-contained flag in the Blazor WASM project should only apply when building for the browser, otherwise it should be inferred.\n\n### Steps To Reproduce\n\n```\r\ndotnet new blazorwasm -ho -o BlazorWasmHosted\r\ndotnet publish ./BlazorWasmHosted --runtime linux-x64 --no-self-contained\r\n```\n\n### Exceptions (if any)\n\n> C:\\Program Files\\dotnet\\sdk\\7.0.100-rc.1.22431.12\\Sdks\\Microsoft.NET.ILLink.Tasks\\build\\Microsoft.NET.ILLink.targets(196,5): error NETSDK1102: Optimizing assemblies for size is not supported for the selected publish configuration. Please ensure that you are publishing a self-contained app. [*.Client.csproj]\n\n### .NET Version\n\n7.0.100-rc.1.22431.12\n\n### Anything else?\n\nFollowing the discussion in #43068, the documentation was modified to explicitly reflect that the MSBuild parameter was to be set (https://github.com/dotnet/AspNetCore.Docs/issues/26619). Now that might need to be updated once more.","Url":"https://github.com/dotnet/aspnetcore/issues/44003","RelatedDescription":"Open issue \"Publishing hosted Blazor WASM project breaks if not self-contained\" (#44003)"},{"Id":"1374436338","IsPullRequest":false,"CreatedAt":"2022-09-15T12:16:29","Actor":"martincostello","Number":"44002","RawContent":null,"Title":"Razor Pages 404 after updating to ASP.NET Core 7 RC1","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAfter updating two internal applications from ASP.NET Core 7 preview 7 to RC1, endpoints related to Razor Pages in the applications started to return HTTP 404 errors when requested via our integration tests that build on `WebApplicationFactory<T>` to host the application.\r\n\r\nThe curiosity of the issue is that is does not happen when running the application build and tests locally on Windows 11 with the CLI or in Visual Studio 2022 17.4 Preview 2, but happens consistently when we run the same CLI script in our CI which currently runs on Windows Server 2016.\r\n\r\nBoth applications contain a single Razor Page used to serve an HTML page, and otherwise are APIs that contain Minimal API endpoints.\r\n\r\nWe also updated two further applications to RC1 that had not yet been upgraded from ASP.NET 6 at all. The third was a web application that contains several Razor Pages to power a handful of pages plus some Minimal API endpoints, the fourth is an MVC application that also has some Minimal API endoints.\r\n\r\nThe third application's also has the same issue as the first and second, the fourth application works as expected.\r\n\r\nTwo further applications that use Razor Pages have been successfully updated to RC1 with no issues, which suggests the issue isn't as simple as something like _\"Razor Pages is broken\"_.\r\n\r\nThe first two applications worked exactly as expected compared to ASP.NET Core 6 when running ASP.NET Core 7 preview 7.\r\n\n\n### Expected Behavior\n\nThe endpoints associated with the Razor Pages endpoints return the appropriate content rather than an HTTP 404 response.\n\n### Steps To Reproduce\n\nWe have yet to narrow down the issue enough to create a minimal repro project, and as the only apps affected are internal we can't just add them as-is to a public GitHub repo.\r\n\r\nWe will update this issue with a repro if we find one with further investigation. At this stage we thought it best to log the issue now in case the description has enough information in it for someone to think of a likely candidate change that may have broken something.\n\n### Exceptions (if any)\n\nNone.\n\n### .NET Version\n\n7.0.100-rc.1.22431.12\n\n### Anything else?\n\nWe added an endpoint to the application for a branch based on ASP.NET Core 7 preview 7 and RC1 that dumps the endpoint graph of the first application to a unit test to compare them. Other than ordering, the most appropriate piece of information of note is that the endpoint that we get a 404 for (the Razor Page with a URL of `/docs`) is missing from the graph in RC1.\r\n\r\n```csharp\r\napp.MapGet(\"_dev/endpoint-graph\", (DfaGraphWriter graphWriter, EndpointDataSource endpointData) =>\r\n{\r\n    using var writer = new StringWriter();\r\n\r\n    graphWriter.Write(endpointData, writer);\r\n\r\n    string graph = writer.ToString();\r\n\r\n    return Results.Text(graph);\r\n});\r\n\r\n[Fact]\r\npublic async Task Get_Endpoint_Graph()\r\n{\r\n    // Arrange\r\n    using var client = Fixture.CreateDefaultClient();\r\n\r\n    // Act\r\n    using var response = await client.GetAsync(\"/_dev/endpoint-graph\");\r\n\r\n    // Assert\r\n    response.StatusCode.ShouldBe(HttpStatusCode.OK);\r\n\r\n    Fixture.OutputHelper.WriteLine(await response.Content.ReadAsStringAsync());\r\n\r\n    true.ShouldBeFalse(); // Force failure to dump the output\r\n}\r\n```\r\n\r\n<details>\r\n<summary>ASP.NET Core 7 preview 7</summary>\r\n\r\n```\r\ndigraph DFA {\r\n0 [label=\"/configuration/debug/ HTTP: GET\"]\r\n1 [label=\"/configuration/debug/ HTTP: *\"]\r\n2 -> 0 [label=\"HTTP: GET\"]\r\n2 -> 1 [label=\"HTTP: *\"]\r\n2 [label=\"/configuration/debug/\"]\r\n3 [label=\"/configuration/updates/ HTTP: POST\"]\r\n4 [label=\"/configuration/updates/ HTTP: *\"]\r\n5 -> 3 [label=\"HTTP: POST\"]\r\n5 -> 4 [label=\"HTTP: *\"]\r\n5 [label=\"/configuration/updates/\"]\r\n6 [label=\"/configuration/toggles/ HTTP: GET\"]\r\n7 [label=\"/configuration/toggles/ HTTP: *\"]\r\n8 -> 6 [label=\"HTTP: GET\"]\r\n8 -> 7 [label=\"HTTP: *\"]\r\n8 [label=\"/configuration/toggles/\"]\r\n9 [label=\"/configuration/test/ HTTP: GET\"]\r\n10 [label=\"/configuration/test/ HTTP: *\"]\r\n11 -> 9 [label=\"HTTP: GET\"]\r\n11 -> 10 [label=\"HTTP: *\"]\r\n11 [label=\"/configuration/test/\"]\r\n12 -> 2 [label=\"/debug\"]\r\n12 -> 5 [label=\"/updates\"]\r\n12 -> 8 [label=\"/toggles\"]\r\n12 -> 11 [label=\"/test\"]\r\n12 [label=\"/configuration/\"]\r\n13 [label=\"/_dev/endpoint-graph/ HTTP: GET\"]\r\n14 [label=\"/_dev/endpoint-graph/ HTTP: *\"]\r\n15 -> 13 [label=\"HTTP: GET\"]\r\n15 -> 14 [label=\"HTTP: *\"]\r\n15 [label=\"/_dev/endpoint-graph/\"]\r\n16 -> 15 [label=\"/endpoint-graph\"]\r\n16 [label=\"/_dev/\"]\r\n17 [label=\"/consumer/me/orders/{...}/{...}/newbasket/ HTTP: POST\"]\r\n18 [label=\"/consumer/me/orders/{...}/{...}/newbasket/ HTTP: *\"]\r\n19 -> 17 [label=\"HTTP: POST\"]\r\n19 -> 18 [label=\"HTTP: *\"]\r\n19 [label=\"/consumer/me/orders/{...}/{...}/newbasket/\"]\r\n20 -> 19 [label=\"/newbasket\"]\r\n20 [label=\"/consumer/me/orders/{...}/{...}/\"]\r\n21 -> 20 [label=\"/*\"]\r\n21 [label=\"/consumer/me/orders/{...}/\"]\r\n22 -> 21 [label=\"/*\"]\r\n22 [label=\"/consumer/me/orders/\"]\r\n23 -> 22 [label=\"/orders\"]\r\n23 [label=\"/consumer/me/\"]\r\n24 -> 23 [label=\"/me\"]\r\n24 [label=\"/consumer/\"]\r\n25 [label=\"/health/validate/ HTTP: GET\"]\r\n26 [label=\"/health/validate/ HTTP: HEAD\"]\r\n27 [label=\"/health/validate/ HTTP: *\"]\r\n28 -> 25 [label=\"HTTP: GET\"]\r\n28 -> 26 [label=\"HTTP: HEAD\"]\r\n28 -> 27 [label=\"HTTP: *\"]\r\n28 [label=\"/health/validate/\"]\r\n29 [label=\"/health/dependencies/ HTTP: GET\"]\r\n30 [label=\"/health/dependencies/ HTTP: HEAD\"]\r\n31 [label=\"/health/dependencies/ HTTP: *\"]\r\n32 -> 29 [label=\"HTTP: GET\"]\r\n32 -> 30 [label=\"HTTP: HEAD\"]\r\n32 -> 31 [label=\"HTTP: *\"]\r\n32 [label=\"/health/dependencies/\"]\r\n33 [label=\"/health/check/ HTTP: GET\"]\r\n34 [label=\"/health/check/ HTTP: HEAD\"]\r\n35 [label=\"/health/check/ HTTP: *\"]\r\n36 -> 33 [label=\"HTTP: GET\"]\r\n36 -> 34 [label=\"HTTP: HEAD\"]\r\n36 -> 35 [label=\"HTTP: *\"]\r\n36 [label=\"/health/check/\"]\r\n37 -> 28 [label=\"/validate\"]\r\n37 -> 32 [label=\"/dependencies\"]\r\n37 -> 36 [label=\"/check\"]\r\n37 [label=\"/health/\"]\r\n38 [label=\"/boom/ HTTP: GET\"]\r\n39 [label=\"/boom/ HTTP: *\"]\r\n40 -> 38 [label=\"HTTP: GET\"]\r\n40 -> 39 [label=\"HTTP: *\"]\r\n40 [label=\"/boom/\"]\r\n41 [label=\"/error/ HTTP: DELETE\"]\r\n42 [label=\"/error/ HTTP: GET\"]\r\n43 [label=\"/error/ HTTP: HEAD\"]\r\n44 [label=\"/error/ HTTP: OPTIONS\"]\r\n45 [label=\"/error/ HTTP: PATCH\"]\r\n46 [label=\"/error/ HTTP: POST\"]\r\n47 [label=\"/error/ HTTP: PUT\"]\r\n48 [label=\"/error/ HTTP: *\"]\r\n49 -> 41 [label=\"HTTP: DELETE\"]\r\n49 -> 42 [label=\"HTTP: GET\"]\r\n49 -> 43 [label=\"HTTP: HEAD\"]\r\n49 -> 44 [label=\"HTTP: OPTIONS\"]\r\n49 -> 45 [label=\"HTTP: PATCH\"]\r\n49 -> 46 [label=\"HTTP: POST\"]\r\n49 -> 47 [label=\"HTTP: PUT\"]\r\n49 -> 48 [label=\"HTTP: *\"]\r\n49 [label=\"/error/\"]\r\n50 [label=\"/swagger-ui/ HTTP: GET\"]\r\n51 [label=\"/swagger-ui/ HTTP: *\"]\r\n52 -> 50 [label=\"HTTP: GET\"]\r\n52 -> 51 [label=\"HTTP: *\"]\r\n52 [label=\"/swagger-ui/\"]\r\n53 [label=\"/swagger/ HTTP: GET\"]\r\n54 [label=\"/swagger/ HTTP: *\"]\r\n55 -> 53 [label=\"HTTP: GET\"]\r\n55 -> 54 [label=\"HTTP: *\"]\r\n55 [label=\"/swagger/\"]\r\n56 [label=\"/version/ HTTP: GET\"]\r\n57 [label=\"/version/ HTTP: *\"]\r\n58 -> 56 [label=\"HTTP: GET\"]\r\n58 -> 57 [label=\"HTTP: *\"]\r\n58 [label=\"/version/\"]\r\n59 [label=\"/docs/\"]\r\n60 [label=\"/metrics/ HTTP: GET\"]\r\n61 [label=\"/metrics/ HTTP: *\"]\r\n62 -> 60 [label=\"HTTP: GET\"]\r\n62 -> 61 [label=\"HTTP: *\"]\r\n62 [label=\"/metrics/\"]\r\n63 [label=\"/ HTTP: GET\"]\r\n64 [label=\"/ HTTP: *\"]\r\n65 -> 12 [label=\"/configuration\"]\r\n65 -> 16 [label=\"/_dev\"]\r\n65 -> 24 [label=\"/consumer\"]\r\n65 -> 37 [label=\"/health\"]\r\n65 -> 40 [label=\"/boom\"]\r\n65 -> 49 [label=\"/error\"]\r\n65 -> 52 [label=\"/swagger-ui\"]\r\n65 -> 55 [label=\"/swagger\"]\r\n65 -> 58 [label=\"/version\"]\r\n65 -> 59 [label=\"/docs\"]\r\n65 -> 62 [label=\"/metrics\"]\r\n65 -> 63 [label=\"HTTP: GET\"]\r\n65 -> 64 [label=\"HTTP: *\"]\r\n65 [label=\"/\"]\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>ASP.NET Core 7 RC1</summary>\r\n\r\n```\r\ndigraph DFA {\r\n0 [label=\"/configuration/debug/ HTTP: GET\"]\r\n1 [label=\"/configuration/debug/ HTTP: *\"]\r\n2 -> 0 [label=\"HTTP: GET\"]\r\n2 -> 1 [label=\"HTTP: *\"]\r\n2 [label=\"/configuration/debug/\"]\r\n3 [label=\"/configuration/test/ HTTP: GET\"]\r\n4 [label=\"/configuration/test/ HTTP: *\"]\r\n5 -> 3 [label=\"HTTP: GET\"]\r\n5 -> 4 [label=\"HTTP: *\"]\r\n5 [label=\"/configuration/test/\"]\r\n6 [label=\"/configuration/toggles/ HTTP: GET\"]\r\n7 [label=\"/configuration/toggles/ HTTP: *\"]\r\n8 -> 6 [label=\"HTTP: GET\"]\r\n8 -> 7 [label=\"HTTP: *\"]\r\n8 [label=\"/configuration/toggles/\"]\r\n9 [label=\"/configuration/updates/ HTTP: POST\"]\r\n10 [label=\"/configuration/updates/ HTTP: *\"]\r\n11 -> 9 [label=\"HTTP: POST\"]\r\n11 -> 10 [label=\"HTTP: *\"]\r\n11 [label=\"/configuration/updates/\"]\r\n12 -> 2 [label=\"/debug\"]\r\n12 -> 5 [label=\"/test\"]\r\n12 -> 8 [label=\"/toggles\"]\r\n12 -> 11 [label=\"/updates\"]\r\n12 [label=\"/configuration/\"]\r\n13 [label=\"/version/ HTTP: GET\"]\r\n14 [label=\"/version/ HTTP: *\"]\r\n15 -> 13 [label=\"HTTP: GET\"]\r\n15 -> 14 [label=\"HTTP: *\"]\r\n15 [label=\"/version/\"]\r\n16 [label=\"/swagger/ HTTP: GET\"]\r\n17 [label=\"/swagger/ HTTP: *\"]\r\n18 -> 16 [label=\"HTTP: GET\"]\r\n18 -> 17 [label=\"HTTP: *\"]\r\n18 [label=\"/swagger/\"]\r\n19 [label=\"/swagger-ui/ HTTP: GET\"]\r\n20 [label=\"/swagger-ui/ HTTP: *\"]\r\n21 -> 19 [label=\"HTTP: GET\"]\r\n21 -> 20 [label=\"HTTP: *\"]\r\n21 [label=\"/swagger-ui/\"]\r\n22 [label=\"/error/ HTTP: DELETE\"]\r\n23 [label=\"/error/ HTTP: GET\"]\r\n24 [label=\"/error/ HTTP: HEAD\"]\r\n25 [label=\"/error/ HTTP: OPTIONS\"]\r\n26 [label=\"/error/ HTTP: PATCH\"]\r\n27 [label=\"/error/ HTTP: POST\"]\r\n28 [label=\"/error/ HTTP: PUT\"]\r\n29 [label=\"/error/ HTTP: *\"]\r\n30 -> 22 [label=\"HTTP: DELETE\"]\r\n30 -> 23 [label=\"HTTP: GET\"]\r\n30 -> 24 [label=\"HTTP: HEAD\"]\r\n30 -> 25 [label=\"HTTP: OPTIONS\"]\r\n30 -> 26 [label=\"HTTP: PATCH\"]\r\n30 -> 27 [label=\"HTTP: POST\"]\r\n30 -> 28 [label=\"HTTP: PUT\"]\r\n30 -> 29 [label=\"HTTP: *\"]\r\n30 [label=\"/error/\"]\r\n31 [label=\"/boom/ HTTP: GET\"]\r\n32 [label=\"/boom/ HTTP: *\"]\r\n33 -> 31 [label=\"HTTP: GET\"]\r\n33 -> 32 [label=\"HTTP: *\"]\r\n33 [label=\"/boom/\"]\r\n34 [label=\"/health/check/ HTTP: GET\"]\r\n35 [label=\"/health/check/ HTTP: HEAD\"]\r\n36 [label=\"/health/check/ HTTP: *\"]\r\n37 -> 34 [label=\"HTTP: GET\"]\r\n37 -> 35 [label=\"HTTP: HEAD\"]\r\n37 -> 36 [label=\"HTTP: *\"]\r\n37 [label=\"/health/check/\"]\r\n38 [label=\"/health/dependencies/ HTTP: GET\"]\r\n39 [label=\"/health/dependencies/ HTTP: HEAD\"]\r\n40 [label=\"/health/dependencies/ HTTP: *\"]\r\n41 -> 38 [label=\"HTTP: GET\"]\r\n41 -> 39 [label=\"HTTP: HEAD\"]\r\n41 -> 40 [label=\"HTTP: *\"]\r\n41 [label=\"/health/dependencies/\"]\r\n42 [label=\"/health/validate/ HTTP: GET\"]\r\n43 [label=\"/health/validate/ HTTP: HEAD\"]\r\n44 [label=\"/health/validate/ HTTP: *\"]\r\n45 -> 42 [label=\"HTTP: GET\"]\r\n45 -> 43 [label=\"HTTP: HEAD\"]\r\n45 -> 44 [label=\"HTTP: *\"]\r\n45 [label=\"/health/validate/\"]\r\n46 -> 37 [label=\"/check\"]\r\n46 -> 41 [label=\"/dependencies\"]\r\n46 -> 45 [label=\"/validate\"]\r\n46 [label=\"/health/\"]\r\n47 [label=\"/consumer/me/orders/{...}/{...}/newbasket/ HTTP: POST\"]\r\n48 [label=\"/consumer/me/orders/{...}/{...}/newbasket/ HTTP: *\"]\r\n49 -> 47 [label=\"HTTP: POST\"]\r\n49 -> 48 [label=\"HTTP: *\"]\r\n49 [label=\"/consumer/me/orders/{...}/{...}/newbasket/\"]\r\n50 -> 49 [label=\"/newbasket\"]\r\n50 [label=\"/consumer/me/orders/{...}/{...}/\"]\r\n51 -> 50 [label=\"/*\"]\r\n51 [label=\"/consumer/me/orders/{...}/\"]\r\n52 -> 51 [label=\"/*\"]\r\n52 [label=\"/consumer/me/orders/\"]\r\n53 -> 52 [label=\"/orders\"]\r\n53 [label=\"/consumer/me/\"]\r\n54 -> 53 [label=\"/me\"]\r\n54 [label=\"/consumer/\"]\r\n55 [label=\"/metrics/ HTTP: GET\"]\r\n56 [label=\"/metrics/ HTTP: *\"]\r\n57 -> 55 [label=\"HTTP: GET\"]\r\n57 -> 56 [label=\"HTTP: *\"]\r\n57 [label=\"/metrics/\"]\r\n58 [label=\"/_dev/endpoint-graph/ HTTP: GET\"]\r\n59 [label=\"/_dev/endpoint-graph/ HTTP: *\"]\r\n60 -> 58 [label=\"HTTP: GET\"]\r\n60 -> 59 [label=\"HTTP: *\"]\r\n60 [label=\"/_dev/endpoint-graph/\"]\r\n61 -> 60 [label=\"/endpoint-graph\"]\r\n61 [label=\"/_dev/\"]\r\n62 [label=\"/ HTTP: GET\"]\r\n63 [label=\"/ HTTP: *\"]\r\n64 -> 12 [label=\"/configuration\"]\r\n64 -> 15 [label=\"/version\"]\r\n64 -> 18 [label=\"/swagger\"]\r\n64 -> 21 [label=\"/swagger-ui\"]\r\n64 -> 30 [label=\"/error\"]\r\n64 -> 33 [label=\"/boom\"]\r\n64 -> 46 [label=\"/health\"]\r\n64 -> 54 [label=\"/consumer\"]\r\n64 -> 57 [label=\"/metrics\"]\r\n64 -> 61 [label=\"/_dev\"]\r\n64 -> 62 [label=\"HTTP: GET\"]\r\n64 -> 63 [label=\"HTTP: *\"]\r\n64 [label=\"/\"]\r\n}\r\n```\r\n\r\n</details>\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/44002","RelatedDescription":"Open issue \"Razor Pages 404 after updating to ASP.NET Core 7 RC1\" (#44002)"},{"Id":"1374262236","IsPullRequest":false,"CreatedAt":"2022-09-15T09:59:08","Actor":"pampua84","Number":"44000","RawContent":null,"Title":"Enhance the RemoveLoginAsync method of the UserManager class","State":"open","Body":"Hello,\r\nusing the RemoveLoginAsync method of the UserManager class I found an anomaly, because if wrong or non-existent values are passed, the method returns as a result Succeeded = true. \r\nIt would be preferable to return an error specifying that the data was not found, for example a not found.\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/44000","RelatedDescription":"Open issue \"Enhance the RemoveLoginAsync method of the UserManager class\" (#44000)"},{"Id":"1374037038","IsPullRequest":false,"CreatedAt":"2022-09-15T07:07:02","Actor":"pr-benchmarks[bot]","Number":"43999","RawContent":null,"Title":"Perf improvement: fortunes_actix, https","State":"open","Body":"| Scenario | Environment | Date | Old RPS | New RPS | Change | Deviation | StDev | Dependencies |\n| -------- | ----------- | ---- | ------- | ------- | ------ | --------- | ----- | ------------ |\n| fortunes_actix  | Actix fortunes 9- Frameworks Database Intel Linux | 09/14/2022 01:22:01 | 504,138 | 558,586 | 10.80 % (54,448)  :thumbsup:  | 2.73 σ | 19,927.71 | <details>    <summary>Changes</summary>     <table><th>Name</th><th>Version</th><th>Diff</th></table></details> |\n| https [Fixed] | Json Https 4- Trends Amd Linux | 09/13/2022 21:33:15 | 898,922 | 913,314 | 1.60 % (14,392)  :thumbsup:  | 1.75 σ | 8,220.19 | <details>    <summary>Changes</summary>     <table><th>Name</th><th>Version</th><th>Diff</th><tr>            <td>Microsoft.AspNetCore.App</td>            <td>`7.0.0-rc.2.22462.11` -> `7.0.0-rc.2.22463.6`</td>            <td>https://github.com/dotnet/aspnetcore/compare/21f6605d3b3f2a177c949b795839a5c468dcb952...6bd26fad6b3f5bb6d330e8f580850c4596cba417</td></tr></table></details> |\n\n[PowerBI Dashboard](https://aka.ms/aspnet/benchmarks)\n\n\n@sebastienros\n<!-- [MSGPACK][/MSGPACK] -->","Url":"https://github.com/dotnet/aspnetcore/issues/43999","RelatedDescription":"Open issue \"Perf improvement: fortunes_actix, https\" (#43999)"},{"Id":"1373655716","IsPullRequest":true,"CreatedAt":"2022-09-15T06:25:45","Actor":"dotnet-maestro[bot]","Number":"43996","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/runtime dotnet/efcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 12652ed0-752c-46b0-ddca-08da7ef63a55\r\n- **Build**: 20220914.19\r\n- **Date Produced**: September 15, 2022 4:25:16 AM UTC\r\n- **Commit**: e67df3539733909addb0ba55bbd25bdd9dcc2815\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **dotnet-ef**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-rc.2.22464.7 to 7.0.0-rc.2.22464.19][4]\r\n\r\n[4]: https://github.com/dotnet/efcore/compare/00fcaf8...e67df35\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:12652ed0-752c-46b0-ddca-08da7ef63a55)\r\n\r\n\r\n\r\n[marker]: <> (Begin:ab7d5e23-27a3-44e0-6f61-08da7ef6374d)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ab7d5e23-27a3-44e0-6f61-08da7ef6374d\r\n- **Build**: 20220914.6\r\n- **Date Produced**: September 14, 2022 11:43:52 PM UTC\r\n- **Commit**: 66a9136f6b7e65945af92bd8769bdfa80fcde741\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.IO.Pipelines**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Net.Http.Json**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Text.Json**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Threading.Channels**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-rc.2.22464.1 to 7.0.0-rc.2.22464.6][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/c623d96...66a9136\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:ab7d5e23-27a3-44e0-6f61-08da7ef6374d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/43996","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/runtime dotnet/efcore\" (#43996)"},{"Id":"1373607730","IsPullRequest":true,"CreatedAt":"2022-09-14T21:38:50","Actor":"brunolins16","Number":"43994","RawContent":null,"Title":"Adding retries to AddsExpectedItems","State":"closed","Body":"Test Failure: https://dev.azure.com/dnceng-public/public/_build/results?buildId=16850&view=ms.vss-test-web.build-test-results-tab&runId=333676&resultId=120839&paneView=debug","Url":"https://github.com/dotnet/aspnetcore/pull/43994","RelatedDescription":"Closed or merged PR \"Adding retries to AddsExpectedItems\" (#43994)"},{"Id":"1373595750","IsPullRequest":false,"CreatedAt":"2022-09-14T21:15:33","Actor":"JonathanHopeDMRC","Number":"43993","RawContent":null,"Title":"ConfigureKestrel Called During WebApplicationBuilder.Build in 6.0.9","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nIn runtime 6.0.8 the call to ConfigureKestrel occurred during WebApplication.Run. In 6.0.9 the call to ConfigureKestrel  occurs during WebApplication.Build. This means that we can no longer access anything in the ServiceProvider in ConfigureKestrel. If there is a more idiomatic way to access things in the SeviceProvider in ConfigureKestrel we are open to it, however this change surprised us for a point release.\r\n\r\n### Expected Behavior\r\n\r\nThe call to ConfigureKestrel occurring during WebApplication.Run.\r\n\r\n### Steps To Reproduce\r\n\r\n1. Clone this project: https://github.com/JonathanHopeDMRC/callorder\r\n2. docker build . -t callorder --no-cache\r\n3. docker run -t callorder\r\n\r\nChanging the runtime to 6.0.8 in the Dockerfile will make this work.\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n6.0.9\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/43993","RelatedDescription":"Open issue \"ConfigureKestrel Called During WebApplicationBuilder.Build in 6.0.9\" (#43993)"},{"Id":"1373581798","IsPullRequest":true,"CreatedAt":"2022-09-14T21:01:15","Actor":"dougbu","Number":"43992","RawContent":null,"Title":"Update versions for 7.0.0 RTM","State":"open","Body":"","Url":"https://github.com/dotnet/aspnetcore/pull/43992","RelatedDescription":"Open PR \"Update versions for 7.0.0 RTM\" (#43992)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"1375214843","IsPullRequest":false,"CreatedAt":"2022-09-15T23:41:39","Actor":"halter73","Number":"493","RawContent":null,"Title":"[Breaking change]: ApiExplorer and OpenAPI metadata is generated for RequestDelegate endpoints in RC1 *only*","State":"open","Body":"### Description\r\n\r\nIn .NET 6, ASP.NET Core added support for `Delegate` [route handlers](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0#route-handlers) in addition to conventional `RequestDelegate` endpoints which have existed since ASP.NET Core 3.0.\r\n\r\nIn .NET 7 RC 1, we started automatically generating more API metadata for the older `RequestDelegate` endpoints to align the behavior of these two kinds of endpoints. **In .NET 7 RC 2, we plan to revert this breaking change** which will cause no API metadata to inferred for `RequestDelegate` endpoints again.\r\n\r\n### Version\r\n\r\n.NET 7 RC1\r\n\r\n### Previous behavior\r\n\r\nBefore .NET 7 RC1, conventional `RequestDelegate` endpoints did not get added to the [ApiExplorer](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.apiexplorer?view=aspnetcore-6.0) model or the `OpenApiOperation` generated by [WithOpenApi()](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.builder.openapiendpointconventionbuilderextensions.withopenapi?view=aspnetcore-7.0).\r\n\r\n### New behavior\r\n\r\nIn .NET RC 1 and RC 1 only **(this is being reverted in RC 2)**, the `RequestDelegate`'s `MethodInfo` is added to the [EndpointMetadataCollection](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.endpointmetadatacollection?view=aspnetcore-6.0) just like with `Delegate` route handlers causing ApiExplorer and WithOpenApi() to generate endpoint metadata for endpoints that previously were not part of the model.\r\n\r\nThis can impact third party libraries like [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) and [NSwag](https://github.com/RicoSuter/NSwag).\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/44005 for more context. \r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe were [hoping ](https://github.com/dotnet/aspnetcore/pull/42827/files/cbff9e89b459111ea104ec71c2d3bf9cee6c9e5f#r925142793) that aligning the behavior of `RequestDelegate` and `Delegate` backed endpoints would reduce confusion. We've decided to walk this back though.\r\n\r\n### Recommended action\r\n\r\nYou can add a custom convention that removes the `MethodInfo` from the endpoint metadata or wait for RC 2 to revert this behavior. You can use a group to make it apply to multiple endpoints.\r\n\r\n```csharp\r\nvar noMetadataGroup = app.MapGroup(\"\");\r\nIEndpointConventionBuilder groupConventionBuilder = noMetadataGroup;\r\n\r\ngroupConventionBuilder.Add(endpointBuilder =>\r\n{\r\n    if (endpointBuilder.Metadata.FirstOrDefault(m => m is MethodInfo) is MethodInfo method)\r\n    {\r\n        endpointBuilder.Metadata.Remove(method);\r\n    }\r\n});\r\n\r\nnoMetadataGroup.MapGet(\"/\", (context) => context.Response.WriteAsync(\"RequestDelegate endpoint.\"));\r\n```\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(IEndpointRouteBuilder, RoutePattern, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGet(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPost(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapDelete(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPut(IEndpointRouteBuilder, String, RequestDelegate)`\r\n- `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapMethods(IEndpointRouteBuilder, String, IEnumerable<String>, RequestDelegate)`","Url":"https://github.com/aspnet/Announcements/issues/493","RelatedDescription":"Open issue \"[Breaking change]: ApiExplorer and OpenAPI metadata is generated for RequestDelegate endpoints in RC1 *only*\" (#493)"},{"Id":"1371807646","IsPullRequest":false,"CreatedAt":"2022-09-13T17:51:25","Actor":"sebastienros","Number":"492","RawContent":null,"Title":"[Breaking change]: Output Caching renames in 7.0 RC2","State":"open","Body":"### Description\n\nFrom 7.0 RC1 to 7.0 RC2 some APIs have changed to better represent their intent.\r\n\r\nhttps://github.com/dotnet/aspnetcore/pull/43892\r\n\n\n### Version\n\n.NET 7 RC2\n\n### Previous behavior\n\n- `OutputCachePolicyBuilder.VaryByQuery()` was additive: every call would add more query string keys to vary by.\n\n### New behavior\n\n- `OutputCachePolicyBuilder.SetVaryByQuery()` is replacing existing query string keys.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis change was made to improve the consistency of method names and to remove ambiguity in their behavior.\n\n### Recommended action\n\nIt is recommended you recompile any projects built with an earlier SDK. If any of these method names were referenced directly, the source should be updated to reflect the new names.\n\n### Affected APIs\n\n- Removed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.OutputCachePolicyBuilder()` \r\n- Removed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Clear()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AllowLocking()` to `SetLocking()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByRouteValue()` to `SetVaryByRouteValue()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByQuery()` to `SetVaryByQuery()` \r\n- Renamed: `Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByHeader()` to `SetVaryByHeader()` \r\n- Added: `Microsoft.AspNetCore.OutputCaching.CacheVaryByRules.VaryByHost`\r\n- Added: `Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddPolicy(string name, Action<OutputCachePolicyBuilder> build, bool excludeDefaultPolicy)`\r\n- Added: `Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddBasePolicy(Action<OutputCachePolicyBuilder> build, bool excludeDefaultPolicy)`\r\n- Added: `Microsoft.Extensions.DependencyInjection.OutputCacheConventionBuilderExtensions.CacheOutput<TBuilder>(this TBuilder builder, Action<OutputCachePolicyBuilder> policy, bool excludeDefaultPolicy)`\r\n","Url":"https://github.com/aspnet/Announcements/issues/492","RelatedDescription":"Open issue \"[Breaking change]: Output Caching renames in 7.0 RC2\" (#492)"},{"Id":"1342406148","IsPullRequest":false,"CreatedAt":"2022-08-18T00:16:25","Actor":"Tratcher","Number":"491","RawContent":null,"Title":"[Breaking change]: AuthenticateAsync for remote authentication providers no longer fails if anonymous","State":"open","Body":"### Description\n\nRE: https://github.com/dotnet/aspnetcore/issues/43042, https://github.com/dotnet/aspnetcore/pull/43212\r\n\r\nRemote authentication providers like OpenIdConnect, WsFederation, and OAuth have been updated to avoid unnecessary errors when there is no user information available on the request.\n\n### Version\n\n.NET 7 RC1\n\n### Previous behavior\n\nWhen AuthenticateAsync was called on a remote authentication provider and there was no current user, this call would fail with a message like `OpenIdConnect was not authenticated. Failure message: Not authenticated`. \n\n### New behavior\n\nAuthenticateAsync will now return `AuthenticateResult.NoResult()`, an anonymous identity. \n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\n- This was inconsistent with Cookie and Negotiate authentication which will return `AuthenticateResult.NoResult()`.\r\n- It causes excess failure logs, especially if the remote authentication handler is set as the default handler and invoked per request.\n\n### Recommended action\n\nCode that directly invokes AuthenticateAsync should be checked to ensure it properly handles `AuthenticateResult.NoResult()` and anonymous/empty ClaimsIdentity's.\n\n### Affected APIs\n\nHttpContext.[AuthenticateAsync](https://github.com/dotnet/aspnetcore/blob/a450cb69b5e4549f5515cdb057a68771f56cefd7/src/Http/Authentication.Abstractions/src/AuthenticationHttpContextExtensions.cs#L22)","Url":"https://github.com/aspnet/Announcements/issues/491","RelatedDescription":"Open issue \"[Breaking change]: AuthenticateAsync for remote authentication providers no longer fails if anonymous\" (#491)"},{"Id":"1288995849","IsPullRequest":true,"CreatedAt":"2022-08-01T20:01:05","Actor":"msftbot[bot]","Number":"489","RawContent":null,"Title":"Migrate FabricBot Tasks to Config-as-Code","State":"closed","Body":"**TL;DR;** Requesting to add [FabricBot](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/fabricbot_overview) configuration associated with your repository to `.github/fabricbot.json`.\r\n\r\n**Context**\r\n\r\nFabricBot is now a [config-as-code-only](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/bot-config-as-code) platform. As a result, while you can still use the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=aspnet/Announcements) to modify your FabricBot configuration, you can no longer save the changes. The only way to save changes to your configuration at the moment is to _export configuration_ from the portal and upload the exported configuration to `.github/fabricbot.json` in your repository. In this pull request, we are adding your FabricBot configuration to your repository at `.github/fabricbot.json` so that you can make changes to it going forward.\r\n\r\nWhile the [FabricBot Configuration Portal](https://portal.fabricbot.ms/bot/?repo=aspnet/Announcements) is the *only way* to modify your FabricBot configuration at the moment, we have a feature on our backlog to publish the JSON schema defining the structure of the FabricBot configuration file. With the JSON schema, you can (1) use a plaintext editor of your choice to modify the FabricBot configuration file and use the schema to validate the file after editing or (2) [configure](https://code.visualstudio.com/Docs/languages/json#_json-schemas-and-settings) VS Code to use the schema when editing FabricBot configuration file to take advantage of convenience features such as automatic code completion and field description on mouseover.\r\n\r\n[*Pull Request Create*](https://eng.ms/docs/products/1es-data-insights/merlinbot/extensions/prcreate), a [MerlinBot](https://https://eng.ms/docs/products/1es-data-insights/merlinbot) Extension, was used to automatically create this pull request. If you have any questions or concerns with this pull request, please contact [MerlinBot Expert DRI](mailto:merlinbotdri@microsoft.com).\r\n","Url":"https://github.com/aspnet/Announcements/pull/489","RelatedDescription":"Closed or merged PR \"Migrate FabricBot Tasks to Config-as-Code\" (#489)"},{"Id":"1311264480","IsPullRequest":false,"CreatedAt":"2022-07-20T14:46:50","Actor":"captainsafia","Number":"490","RawContent":null,"Title":"[Breaking change]: Changes in default authentication scheme handling for ASP.NET Core","State":"open","Body":"### Description\r\n\r\n\r\nStarting in .NET 7 Preview 7, we introduced new behavior in the authentication area in ASP.NET Core.\r\n\r\nPreviously, users were always required to set the default authentication scheme that would be used by authentication and authorization handlers, like so:\r\n```\r\nbuilder.Services.AddAuthentication(\"MyDefaultScheme\");\r\n```\r\nMoving forward, when (and only when) a single authentication scheme is registered, that scheme will be treated as the default scheme. For example, \"foobar\" will be treated as the default scheme in the code below.\r\n```\r\nbuilder.Services.AddAuthentication().AddOAuth(\"foobar\");\r\n```\r\nThis change might expose unintended behavior changes in applications, such as authentication options being validated earlier than expected.\r\n\r\n### Version\r\n\r\n.NET 7 Preview 7\r\n\r\n### Previous behavior\r\n\r\nPreviously, when users did not provide a default scheme in the `AddAuthentication` call, no default scheme was set.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie();\r\n```\r\n\r\nThis impacted the behavior of authentication handlers in the application layer.\r\n\r\n### New behavior\r\n\r\nMoving forward, if (and only if) a _single_ scheme is registered in an application, that scheme will be treated as the default. In the code below, the `CookieDefaults.AuthenticationScheme` will be treated as the default scheme.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie();\r\n```\r\n\r\nHowever, in the code snippet below, no default will be set because multiple schemes are registered.\r\n\r\n```csharp\r\nbuilder.Services.AddAuthentication().AddCookie().AddJwtBearer();\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nTo reduce boilerplate when configuring authentication and set up sensible defaults.\r\n\r\n### Recommended action\r\n\r\nThe change only impacts applications with a single scheme registered. For those scenarios, it's recommended to ensure that your application is prepared to handle the assumption that a single scheme is the default. For example, the options associated with that scheme should be configured correctly.\r\n\r\nAlternatively, this behavior can be disabled by setting the `SuppressAutoDefaultScheme` app context flag.\r\n\r\n### Affected APIs\r\n\r\nAuthentication APIs.","Url":"https://github.com/aspnet/Announcements/issues/490","RelatedDescription":"Open issue \"[Breaking change]: Changes in default authentication scheme handling for ASP.NET Core\" (#490)"},{"Id":"1287742787","IsPullRequest":false,"CreatedAt":"2022-06-28T18:44:22","Actor":"DamianEdwards","Number":"488","RawContent":null,"Title":"[Breaking change]: Static files, default document, and directory browsing middleware no longer no-op when an endpoint with a null RequestDelegate is active","State":"open","Body":"### Description\n\nAs detailed in dotnet/aspnetcore#42413, the file-serving middleware (`DefaultFilesMiddleware`, `DirectoryBrowserMiddleware`, and `StaticFileMiddleware`) have been updated to no longer no-op (i.e. defer to the next middleware in the pipeline) in the case that there is an active endpoint with a `null` request delegate.\r\n\r\nPR that makes the change: dotnet/aspnetcore#42458\n\n### Version\n\n.NET 7 Preview 7\n\n### Previous behavior\n\nPreviously, if the current request had an active endpoint, i.e. `HttpContext.GetEndpoint() != null`, the file-serving middleware would perform no action and simply delegate to the next middleware in the request pipeline.\n\n### New behavior\n\nThe file-serving middleware will now only perform no action if there is an active endpoint and its `RequestDelegate` property value is not `null`, i.e. `HttpContext.GetEndpoint()?.RequestDelegate is not null`.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis change will enable endpoints to be active in the request for the purposes of setting and sharing metadata with middleware that are endpoint-aware so that they can perform their intended function, while allowing other middleware (like the file-serving middleware) that would usually defer their behavior when an endpoint is active to also function.\r\n\r\nFor example, an endpoint with a `null` request delegate containing authorization metadata can be set as the active endpoint for a request, causing the `AuthorizationMiddleware` to enforce authorization requirements, which if satisfied would allow the `StaticFileMiddleware` to serve the requested files.\n\n### Recommended action\n\nIf you are relying on setting an active endpoint on the request to suppress the behavior of the file-serving middleware, ensure that the endpoint has a non-null value set for its `RequestDelegate` property.\n\n### Affected APIs\n\n- `IApplicationBuilder.UseStaticFiles()`\r\n- `IApplicationBuilder.UseDefaultFiles()`\r\n- `IApplicationBuilder.UseDirectoryBrowser()`","Url":"https://github.com/aspnet/Announcements/issues/488","RelatedDescription":"Open issue \"[Breaking change]: Static files, default document, and directory browsing middleware no longer no-op when an endpoint with a null RequestDelegate is active\" (#488)"},{"Id":"1278667050","IsPullRequest":false,"CreatedAt":"2022-06-21T16:03:03","Actor":"BrennanConroy","Number":"487","RawContent":null,"Title":"[Breaking change]: Unit testing SignalR Hubs may need updating","State":"open","Body":"### Description\n\n`IHubClients` and `IHubCallerClients` now hide interface members `IClientProxy Client(string connectionId);` and `IClientProxy Caller { get; }` with `ISingleClientProxy Client(string connectionId);` and `ISingleClientProxy Caller { get; }` in order to add support for [client results](https://docs.microsoft.com/aspnet/core/signalr/hubs?view=aspnetcore-7.0#client-results).\r\n\r\nThis is not a breaking change to production code, unless you use reflection to call the above `Client` or `Caller` methods.\n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nWhen using a testing library like Moq to unit test a SignalR Hub, you may write some code like follows:\r\n```csharp\r\nvar hub = new MyHub();\r\nvar mockCaller = new Mock<IHubCallerClients>();\r\nvar mockClientProxy = new Mock<IClientProxy>();\r\nmockCaller.Setup(x => x.Caller).Returns(mockClientProxy.Object);\r\nhub.Clients = mockCaller.Object;\r\n\r\nclass MyHub : Hub { }\r\n```\n\n### New behavior\n\n```csharp\r\nvar hub = new MyHub();\r\nvar mockCaller = new Mock<IHubCallerClients>();\r\nvar mockClientProxy = new Mock<ISingleClientProxy>(); // <-- updated code\r\nmockCaller.Setup(x => x.Caller).Returns(mockClientProxy.Object);\r\nhub.Clients = mockCaller.Object;\r\n\r\nclass MyHub : Hub { }\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [ ] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThe change was made to add new functionality to SignalR and is non-breaking in normal use cases. The main area we see the change breaking is in test code which is easily updated.\n\n### Recommended action\n\nUpdate test code to use the `ISingleClientProxy` interface when using reflection/reflection-based test code.\n\n### Affected APIs\n\n[`IHubClients`](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.ihubclients?view=aspnetcore-6.0) and [`IHubCallerClients`](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.signalr.ihubcallerclients?view=aspnetcore-6.0)","Url":"https://github.com/aspnet/Announcements/issues/487","RelatedDescription":"Open issue \"[Breaking change]: Unit testing SignalR Hubs may need updating\" (#487)"},{"Id":"1263972971","IsPullRequest":false,"CreatedAt":"2022-06-07T22:53:47","Actor":"Daniel-Genkin-MS-2","Number":"486","RawContent":null,"Title":"[Breaking change]: Removed default HTTPS binding on Kestrel","State":"open","Body":"### Description\n\nThe default HTTPS address and port have been removed from Kestrel in .NET 7 preview 6. This is step one in https://github.com/dotnet/aspnetcore/issues/42016 which will improve overall developer experience when dealing with HTTPS.\r\n\r\nPR that makes the change: https://github.com/dotnet/aspnetcore/pull/42021\r\n\r\n## Version\r\n.NET 7 preview 6\r\n\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\nPreviously, if no values for the address and port were specified explicitly but a local development certificate was available, Kestrel would default to binding to both http://localhost:5000 and https://localhost:5001.\n\n### New behavior\n\nUsers must now manually bind to HTTPS and specify the address and port explicitly, either via the `launchSettings.json` file, the `ASPNETCORE_URLS` environment variable, `--urls` command line argument, `urls` host configuration key, or via the [`UseUrls`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.hostingabstractionswebhostbuilderextensions.useurls?view=aspnetcore-6.0) extension method.\r\n\r\nHTTP binding is unchanged.\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n- [X] **Behavioral change**: Existing code and binaries may experience different run-time behavior.\n\n### Reason for change\n\nThis current eager binding behavior occurs without regard to the configured environment and can lead to experience issues on developer machines when the certificate has not yet been trusted (i.e. trusted as root cert authority because it's self-signed). Clients often produce poor UX when hitting an HTTPS endpoint with an untrusted certificate, e.g. silent failure, scary error/warning screen, etc.\n\n### Recommended action\n\nIf you were not using the default https://localhost:5001 binding, no changes are required. However, if you were using this binding, please make sure to review [this guide](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel/endpoints) on how you can update your server to enable HTTPS.\n\n### Affected APIs\n\nN/A","Url":"https://github.com/aspnet/Announcements/issues/486","RelatedDescription":"Open issue \"[Breaking change]: Removed default HTTPS binding on Kestrel\" (#486)"},{"Id":"1240740970","IsPullRequest":false,"CreatedAt":"2022-05-18T23:44:43","Actor":"brunolins16","Number":"485","RawContent":null,"Title":"[Breaking change]: ActionResult<T> set StatusCode to 200","State":"open","Body":"### Description\r\n\r\nWhen returning a `T` in a MVC/API Controller Action that declares the return type as `ActionResult<T>` will now always set the `ObjectResult.StatusCode` to `200`, unless when the `T` is a `ProblemDetails`.\r\n\r\nSince before this change the `ObjectResult.StatusCode` was `null`, in some scenarios where the status code is set manually, this change could cause unexpected behaviors. Also, an Action Filter could be affected by this change if it expects the `null` instead of `200`.\r\n\r\n### Version\r\n\r\n.NET 6\r\n\r\n### Previous behavior\r\n\r\nBefore if you have a Controller's Action that returns `T` and sets the `Response.StatusCode` manually, similar to the example:\r\n\r\n``` C#\r\n\r\n// Generates a 202 Accepted response\r\npublic ActionResult<Model> Get()\r\n{\r\n    Response.StatusCode = StatusCodes.Status202Accepted;\r\n    return new Model();\r\n}\r\n```\r\nIt will generate the expected `202 Accepted` response status code.\r\n\r\n### New behavior\r\n\r\nAfter the changes the same Controller's Action that returns `T` that sets the `Response.StatusCode` manually, will always generate a `200 OK` response.\r\n\r\n``` C#\r\n\r\n// Generates a 200 OK response\r\npublic ActionResult<Model> Get()\r\n{\r\n    Response.StatusCode = StatusCodes.Status202Accepted;\r\n    return new Model();\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis behavior is documented since ASP.NET Core 3.1 (https://docs.microsoft.com/en-us/aspnet/core/web-api/action-return-types?view=aspnetcore-3.1#actionresultt-type), however, it keeps the `StatusCode` as `null` that will eventually generate a `200 OK` response as default. Since the default internal behavior could easily change, was decided to avoid relying on the internal default implementation and setting the `StatusCode` to the expected `200 OK`.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change, as the example mentioned before:\r\n\r\n``` C#\r\npublic ActionResult<Model> Get()\r\n{\r\n    Response.StatusCode = StatusCodes.Status202Accepted;\r\n    return new Model();\r\n}\r\n```\r\n\r\nYou will need to change your Controller Action. These are some possible options that will keep the desired behavior:\r\n\r\n``` c#\r\npublic ActionResult<Model> Get()\r\n{\r\n   return Accepted(new Model());\r\n}\r\n\r\n//or\r\n\r\npublic ActionResult<Model> Get()\r\n{\r\n   return StatusCode(StatusCodes.Status202Accepted, new Model());\r\n}\r\n\r\n//or\r\n\r\npublic Model Get()\r\n{\r\n   Response.StatusCode = StatusCodes.Status202Accepted;\r\n   return new Model();\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nMVC/API Controller actions.","Url":"https://github.com/aspnet/Announcements/issues/485","RelatedDescription":"Open issue \"[Breaking change]: ActionResult<T> set StatusCode to 200\" (#485)"},{"Id":"1149914360","IsPullRequest":false,"CreatedAt":"2022-04-20T20:33:05","Actor":"pranavkm","Number":"482","RawContent":null,"Title":"[Breaking change]: Blazor components are type activated by default","State":"closed","Body":"### Description\n\nStarting in .NET 7, Blazor components use [`ActivatorUtilities`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.activatorutilities) to instantiate components. This allows components to resolve parameters from a DI container using constructor injection. Constructor injection is supported in addition to property injection that is already supported via the `InjectAttribute`.\r\n\r\nFor most existing applications, this change is not discernable. However, this may be a breaking change for libraries or applications that provided non-empty constructors for components where parameters are not meant to be resolved from the DI container.\r\n\r\nFor questions or further discussion, please use https://github.com/dotnet/aspnetcore/issues/40405\n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nIn the ordinary case, components do not specify a constructor or have a parameter-less constructor and this is a non-breaking change. However, consider the following case:\r\n\r\n```C#\r\npublic class MyMultipleConstructorComponent : ComponentBase\r\n{\r\n   public MyMultipleConstructorComponent () { }\r\n\r\n   public MyMultipleConstructorComponent (int someValue) {}\r\n}\r\n```\r\n\r\nIn .NET 6 and earlier, the parameter-less constructor would be used to instantiate the component.\n\n### New behavior\n\nIn .NET 7, parameters in a component are resolved from the DI container. Consider this component:\r\n\r\n```C#\r\npublic class MyComponent : ComponentBase\r\n{\r\n   public MyComponent(IMyService myService) { ... }\r\n}\r\n```\r\n\r\nStarting in .NET 7, `IMyService` is resolved from the container while instantiating the component. Using `[InjectAttribute]` to property inject services remains unchanged.\r\n\r\nGoing back to `MyMultipleConstructorComponent` from the earlier section - in .NET 7, `ActivatorUtilities` defaults to using the constructor with the most parameters to instantiate an object. In this case, the constructor with the single `int` parameter will be attempted to be resolved from the DI container and a runtime exception will be thrown if parameters are not resolvable.   \n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nConstructor injection was a popular request from Blazor users.\n\n### Recommended action\n\nIf this change severely impacts your ability to migrate your apps to .NET 7, please let us know in the associated discussion thread and we would be happy to reconsider this change. Optionally, there are changes to your application that you may consider to work around this change if it impacts your application:\r\n\r\n* [`ActivatorUtilitiesConstructorAttribute`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.activatorutilitiesconstructorattribute) can be applied to constructor to specify an exact constructor to use.\r\n* Application developers may register an implementation of `IComponentActivator` in the DI container that reverts to the .NET 6 behavior.\r\n\r\n\n\n### Affected APIs\n\nComponent constructors","Url":"https://github.com/aspnet/Announcements/issues/482","RelatedDescription":"Closed issue \"[Breaking change]: Blazor components are type activated by default\" (#482)"},{"Id":"1190169916","IsPullRequest":false,"CreatedAt":"2022-04-01T19:03:58","Actor":"brunolins16","Number":"484","RawContent":null,"Title":"[Breaking change]: Updated empty body detection in MVC Model Binding","State":"open","Body":"### Description\r\n\r\nThe mechanism to detect an empty request `body` during the MVC Model Binding now uses the [`IHttpRequestBodyDetectionFeature.CanHaveBody`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ihttprequestbodydetectionfeature.canhavebody?view=aspnetcore-6.0#microsoft-aspnetcore-http-features-ihttprequestbodydetectionfeature-canhavebody), that is currently implemented by the following behavior:\r\n\r\n- `true` when:\r\n  - It's an `HTTP/1.x` request with a non-zero `Content-Length` or a `Transfer-Encoding: chunked` header.\r\n  - It's an `HTTP/2` request that did not set the `END_STREAM` flag on the initial headers frame.\r\n\r\n- `false` when:\r\n  - It's an `HTTP/1.x` request with no `Content-Length` or `Transfer-Encoding: chunked` header, or the `Content-Length` is `0`.\r\n  - It's an `HTTP/1.x` request with `Connection: Upgrade` (e.g. WebSockets). There is no HTTP request body for these requests and no data should be received until after the upgrade.\r\n  - It's an `HTTP/2` request that set `END_STREAM` on the initial headers frame.\r\n\r\nSince the previous behavior was a simple validation of the `Content-Length == 0`, in some scenarios when requests are not sending all needed HTTP information, could now be detected as empty request and report a failure to the client.\r\n\r\n\r\n### Version\r\n\r\n7.0.0-preview3\r\n\r\n### Previous behavior\r\n\r\n Before if you have a Controller's action that bind a parameter from body:\r\n\r\n``` csharp\r\n [HttpPost()]\r\n        public IActionResult Required([FromBody] TestClass value) => Ok(value);\r\n```\r\n\r\nAnd the client request does not include a `Content-Length` header, eg.:\r\n\r\n``` curl\r\ncurl --request POST -k -i \"[action]\" -H \"Content-Type: application/json\"\r\n```\r\n\r\nThis request will cause an internal exception during the body deserialization:\r\n\r\nEg.: When using the `System.Text.Json` input formatter\r\n``` log\r\nSystem.Text.Json.JsonException: 'The input does not contain any JSON tokens. \r\nExpected the input to start with a valid JSON token, when isFinalBlock is true. \r\nPath: $ | LineNumber: 0 | BytePositionInLine: 0.'\r\n```\r\n\r\nAlso, a response payload similar to this will be receive by the client:\r\n\r\n``` json\r\n{\r\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"traceId\": \"00-34e98b5841b88bfb5476965efd9d9c8c-5bb16bc50dfbabb7-00\",\r\n  \"errors\": {\r\n    \"$\": [\r\n+      \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0.\"\r\n    ],\r\n    \"value\": [\r\n      \"The value field is required.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWith the updated detection mechanism, the deserialization will not be trigger since an empty request body will be detected and only a `validation` message will be reported back to the client. Eg.:\r\n\r\n``` json\r\n{\r\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"traceId\": \"00-0f87920dc675fdfdf8d7638d3be66577-bd6bdbf32d21b714-00\",\r\n  \"errors\": {\r\n    \"\": [\r\n+      \"A non-empty request body is required.\"\r\n    ],\r\n    \"value\": [\r\n      \"The value field is required.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change is an alignment with other parts of the framework that were already using the [`IHttpRequestBodyDetectionFeature.CanHaveBody`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ihttprequestbodydetectionfeature.canhavebody?view=aspnetcore-6.0#microsoft-aspnetcore-http-features-ihttprequestbodydetectionfeature-canhavebody) and also a fix to a reported issue dotnet/aspnetcore/issues/29570\r\n\r\n### Recommended action\r\n\r\nNo change is required, however, if you getting an unexpected behavior is recommended to review if your client's requests are sending the appropriated headers/information.\r\n\r\n### Affected APIs\r\n\r\nMVC Action Controllers","Url":"https://github.com/aspnet/Announcements/issues/484","RelatedDescription":"Open issue \"[Breaking change]: Updated empty body detection in MVC Model Binding\" (#484)"},{"Id":"1154726545","IsPullRequest":false,"CreatedAt":"2022-03-01T01:08:45","Actor":"pranavkm","Number":"483","RawContent":null,"Title":"[Breaking change]: Event IDs for some Microsoft.AspNetCore.Mvc.Core log messages changed","State":"open","Body":"### Description\n\nAs part of updating the Microsoft.AspNetcore.Mvc.Core assembly to use `LoggerMessageAttribute`, we discovered logger event Ids being reused within a single log category. Log IDs and names should be unique so different message types can be identified. Consequently, these have been updated to ensure that the event Ids are unique for a logger category. \n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nSome logger event IDs in Microsoft.AspNetCore.Mvc.Core were re-used within a single category.\n\n### New behavior\n\nDuplicated event ids within a single category within the Microsoft.AspNetCore.Mvc.Core assembly were updated.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs, update those references to use the new IDs.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/483","RelatedDescription":"Open issue \"[Breaking change]: Event IDs for some Microsoft.AspNetCore.Mvc.Core log messages changed\" (#483)"},{"Id":"1140446824","IsPullRequest":false,"CreatedAt":"2022-02-16T19:09:40","Actor":"wtgodbe","Number":"481","RawContent":null,"Title":"Microsoft.Data.SqlClient updated to 4.0.1","State":"open","Body":"### Description\r\n\r\nWe have updated the `Microsoft.Data.SqlClient` package to 4.0.1.\r\n\r\n### Version\r\n\r\n7.0-preview2\r\n\r\n### Previous behavior\r\n\r\nThe old version was `1.0.19249.1`\r\n\r\n### New behavior\r\n\r\nWe now use `4.0.1`. You can see breaking changes in the 4.0 band here: https://github.com/dotnet/SqlClient/blob/main/release-notes/4.0/4.0.0.md#breaking-changes. Note that `Encrypt` now equals `true` by default: https://github.com/dotnet/SqlClient/blob/main/release-notes/4.0/4.0.0.md#encrypt-default-value-set-to-true\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nUpdating to most recent versions for improvements in the underlying libraries.\r\n\r\n### Recommended action\r\n\r\nWe didn't have to react to any no public API changes from this change, but its possible there are breaking changes in the packages themselves.\r\n\r\n### Affected APIs\r\n\r\nMicrosoft.Extensions.Caching.SqlServer","Url":"https://github.com/aspnet/Announcements/issues/481","RelatedDescription":"Open issue \"Microsoft.Data.SqlClient updated to 4.0.1\" (#481)"},{"Id":"1127552680","IsPullRequest":false,"CreatedAt":"2022-02-08T17:31:43","Actor":"brunolins16","Number":"480","RawContent":null,"Title":"[Breaking change]: API Controllers Actions try to infer parameters from DI","State":"open","Body":"### Description\r\n\r\nThe mechanism to infer binding source of **API Controller action's parameters** now mark parameters to be bound from the Dependency Injection container when the type is registered in the container.\r\n\r\nIn rare cases this can break applications that have a type in DI that is also accepted in API Controller actions methods.\r\n\r\n### Version\r\n\r\n7.0.0-preview2\r\n\r\n### Previous behavior\r\n\r\nBefore if you want to bind a type registered in your Dependency Injection container, it **must** be explicitly decorated using an attribute that implements `IFromServiceMetadata` (eg.: `FromServicesAttribute`)\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    public ActionResult Get([FromServices]SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\nIf the attribute is not specified, the parameter is resolved from the request Body sent by the client.\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Bind from the request body\r\n    [HttpPost]\r\n    public ActionResult Post(SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nNow types in DI will be checked at app startup using `IServiceProviderIsService` to determine if an argument in an API controller action will come from DI or from the other sources. \r\n\r\nIn the below example `SomeCustomType` (assuming you're using the default DI container) will come from the DI container. \r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Binding from the services\r\n    [HttpPost]\r\n    public ActionResult Post(SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\nThe new mechanism to infer binding source of **API Controller action's parameters** will follow the rule bellow:\r\n\r\n1. A previously specified `BindingInfo.BindingSource` is never overwritten.\r\n2. A complex type parameter, registered in the DI container, is assigned `BindingSource.Services`.\r\n3. A complex type parameter, not registered in the DI container, is assigned `BindingSource.Body`.\r\n4. Parameter with a name that appears as a route value in ANY route template is assigned `BindingSource.Path`.\r\n5. All other parameters are `BindingSource.Query`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe believe the likelihood of breaking apps to be very low as it's not a common scenario to have a type in DI and as an argument in your API controller action at the same time. Also, this same behavior is currently supported by Minimal Actions.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change you can disable the feature by setting `DisableImplicitFromServicesParameters` to true.\r\n\r\n```csharp\r\nservices.Configure<ApiBehaviorOptions>(options =>\r\n{\r\n     options.DisableImplicitFromServicesParameters = true;\r\n});\r\n```\r\nAlso, you could continue to have your action's parameters, with the new feature enabled or not, binding from your DI container using an attribute that implements `IFromServiceMetadata` (eg.: `FromServicesAttribute`).\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Binding from the DI container\r\n    [HttpPost]\r\n    public ActionResult Post([FromServices]SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nAPI Controller actions.","Url":"https://github.com/aspnet/Announcements/issues/480","RelatedDescription":"Open issue \"[Breaking change]: API Controllers Actions try to infer parameters from DI\" (#480)"},{"Id":"1115597949","IsPullRequest":false,"CreatedAt":"2022-01-26T23:19:59","Actor":"BrennanConroy","Number":"479","RawContent":null,"Title":"[Breaking change]: SignalR Hub methods try to resolve parameters from DI","State":"open","Body":"### Description\r\n\r\nHub methods now support injecting services from your Dependency Injection container.\r\nIn rare cases this can break applications that have a type in DI that is also accepted in Hub methods from SignalR client messages.\r\n\r\n### Version\r\n\r\n7.0.0-preview2\r\n\r\n### Previous behavior\r\n\r\nBefore if you accepted a type in your Hub method that was also in your Dependency Injection container the type would always be resolved from a message sent by the client.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // type always comes from the client, never comes from DI\r\n    public Task Method(string text, SomeCustomType type) => Task.CompletedTask;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nNow types in DI will be checked at app startup using `IServiceProviderIsService` to determine if an argument in a Hub method will come from DI or from the client.\r\n\r\nIn the below example `SomeCustomType` (assuming you're using the default DI container) will come from the DI container instead of from the client. And if the client tried to send `SomeCustomType` it will get an error.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // comes from DI by default\r\n    public Task Method(string text, SomeCustomType type) => Task.CompletedTask;\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe believe the likelihood of breaking apps to be very low as it's not a common scenario to have a type in DI and as an argument in your Hub method at the same time.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change you can disable the feature by setting `DisableImplicitFromServicesParameters` to true.\r\n```csharp\r\nservices.AddSignalR(options =>\r\n{\r\n    options.DisableImplicitFromServicesParameters = true;\r\n});\r\n```\r\n\r\nIf you are broken by the change but want to use the feature without breaking clients, you can disable the feature as shown above, and use an attribute that implements `IFromServiceMetadata` on new arguments/Hub methods.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\nServices.AddScoped<SomeCustomType2>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // old method with new feature (non-breaking), only SomeCustomType2 will be resolved from DI\r\n    public Task MethodA(string arguments, SomeCustomType type, [FromServices] SomeCustomType2 type2);\r\n\r\n    // new method\r\n    public Task MethodB(string arguments, [FromServices] SomeCustomType type);\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nHub methods","Url":"https://github.com/aspnet/Announcements/issues/479","RelatedDescription":"Open issue \"[Breaking change]: SignalR Hub methods try to resolve parameters from DI\" (#479)"},{"Id":"1107147192","IsPullRequest":false,"CreatedAt":"2022-01-18T17:00:32","Actor":"italukder","Number":"478","RawContent":null,"Title":"M2A ","State":"closed","Body":"!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/AspNetCore/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/478","RelatedDescription":"Closed issue \"M2A \" (#478)"},{"Id":"1083913001","IsPullRequest":false,"CreatedAt":"2021-12-18T18:35:01","Actor":"yecril71pl","Number":"477","RawContent":null,"Title":"[Breaking change]: CommandLineUtils retired","State":"open","Body":"### Description\n\nThe package [CommandLineUtils](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.commandlineutils) was removed from ASP.NET 2.0.\r\n\r\nThe discussion issue was https://github.com/dotnet/extensions/issues/257.\r\n\r\nThis change was overlooked because we failed to follow breaking changes in extensions.  It is important to document it here because it is not mentioned at [1.x to 2.0](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x) either.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\n```C#\r\nusing Microsoft.Extensions.CommandLineUtils;\r\n```\n\n### New behavior\n\n```C#\r\nusing McMaster.Extensions.CommandLineUtils;\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nThe library has outgrown the scope of the ASP.NET project where it had been developed.\n\n### Recommended action\n\nMigration steps include the following alternatives:\r\n* adapt your code to use system [Command-line configuration provider](https://docs.microsoft.com/en-us/dotnet/core/extensions/configuration-providers#command-line-configuration-provider)\r\n* adapt your code to use community [CommandLine](https://github.com/dotnet/command-line-api)\r\n* keep your code and switch to use 3rd-party [CommandLineUtils](https://natemcmaster.github.io/CommandLineUtils/) fork\r\n\n\n### Affected APIs\n\nThe whole package [CommandLineUtils](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.commandlineutils) is unsupported.","Url":"https://github.com/aspnet/Announcements/issues/477","RelatedDescription":"Open issue \"[Breaking change]: CommandLineUtils retired\" (#477)"},{"Id":"1042509650","IsPullRequest":false,"CreatedAt":"2021-11-02T15:29:52","Actor":"Tratcher","Number":"476","RawContent":null,"Title":"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed","State":"open","Body":"### Description\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll have been removed from ASP.NET Core 7.0.0-preview1. See https://github.com/dotnet/aspnetcore/issues/38022 for discussion.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv was [obsoleted](#424) in 5.0 since its functionality was replaced by the Sockets transport.\n\n### New behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and its libuv.dll dependency have been removed from ASP.NET Core.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nTo eliminate ongoing maintenance costs associated with this obsolete component.\n\n### Recommended action\n\nRemove project references to Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv. Remove code from Program.cs that calls `UseLibuv`, the Sockets transport will be used by default.\n\n### Affected APIs\n\n[UseLibuv](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderlibuvextensions.uselibuv)\r\n[LibuvTransportOptions](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions)","Url":"https://github.com/aspnet/Announcements/issues/476","RelatedDescription":"Open issue \"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed\" (#476)"},{"Id":"1029808382","IsPullRequest":false,"CreatedAt":"2021-10-19T03:09:22","Actor":"halter73","Number":"475","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC2","State":"open","Body":"### Description\r\n\r\nIn RC2, the following APIs were renamed or merged.\r\n\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`.\r\n- The `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions`.\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions` class was removed and all of its methods were merged into the existing `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` class.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/36578.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names replacing `DelegateEndpoint` with `RouteHandler` now that there is a new `RouteHandlerOptions` class.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions`\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/475","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC2\" (#475)"},{"Id":"1029797310","IsPullRequest":false,"CreatedAt":"2021-10-19T02:51:23","Actor":"halter73","Number":"474","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC1","State":"open","Body":"### Description\r\n\r\nIn RC1, the following APIs were renamed.\r\n\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`.\r\n  - **Note:** This was renamed again in RC2 to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`.\r\n  - **Note:** This was merged with `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` in RC2. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Delegate` parameter to `Map`, `MapGet`, `MapPost`, `MapPut`, `MapDelete`, `MapMethod`, `MapFallback` and `RequestDelegateFactory.Create` was renamed from `action` to `handler`.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/35570.\r\n\r\n### Version\r\n\r\n.NET 6 RC1\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names and remove \"minimal\" and \"action\" from the APIs.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names or parameter names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions`\r\n\t- This includes all the methods on this class having their `Delegate` parameter renamed from `action` to `handler`.\r\n- `Microsoft.AspNetCore.Http.RequestDelegateFactory.Create(Delegate action, RequestDelegateFactoryOptions? options = null)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/474","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC1\" (#474)"},{"Id":"1029683595","IsPullRequest":false,"CreatedAt":"2021-10-18T23:08:43","Actor":"captainsafia","Number":"473","RawContent":null,"Title":"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints","State":"open","Body":"### Description\r\n\r\nStarting in .NET 6 RC2, behavior that was introduced in .NET 6 RC1 to automatically set the `IEndpointNameMetadata` for endpoints has been reverted to avoid issues the logic generating duplicate endpoint names.\r\n\r\n### Version\r\n\r\n.NET 6 RC 2\r\n\r\n### Previous behavior\r\n\r\nIn .NET 6 RC1 and above, the `IEndpointNameMetadata` was automatically set for endpoints that referenced a method group. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nWould produce an endpoint for `/foo` with a `EndpointName` set to \"GetFoo\".\r\n\r\n### New behavior\r\n\r\nIn .NET 6 RC 2 and onward, the `IEndpointNameMetadata` is no longer set. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nwould not generated any `IEndpointNameMetadat`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThe behavior of automatically setting endpoint name metadata was not robust and resulted in issues where the same name was set for different endpoints. See https://github.com/dotnet/aspnetcore/issues/36487 for more info.\r\n\r\n### Recommended action\r\n\r\nWe recommend that developers manually set the `IEndpointNameMetadata` using the `WithName` extension method as follows to set the metadata.\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo).WithName(\"GetFoo\");\r\n```\r\n\r\n### Feature area\r\n\r\nASP.NET Core\r\n\r\n### Affected APIs\r\n\r\n_No response_","Url":"https://github.com/aspnet/Announcements/issues/473","RelatedDescription":"Open issue \"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints\" (#473)"},{"Id":"1002953060","IsPullRequest":false,"CreatedAt":"2021-09-21T17:48:14","Actor":"BrennanConroy","Number":"472","RawContent":null,"Title":"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods","State":"open","Body":"### Description\r\n\r\nStarting in RC2, when we look for `TryParse` or `BindAsync` methods on your parameter types if we don't find a valid one we will also look for invalid ones and throw at startup to let you know that you might have written your method signature incorrectly to avoid unexpected behavior.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\n```csharp\r\n// Todo.TryParse is not in a valid format, will try to bind from body as json instead\r\napp.MapPost(\"/endpoint\", (Todo todo) => todo.Item);\r\n\r\npublic class Todo\r\n{\r\n    public string Item { get; set; }\r\n\r\n    public static bool TryParse(string value) => true;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWe have now changed it so that if we see a public `TryParse` or `BindAsync` that doesn't match the expected syntax we will throw on startup. The above example would throw an error similar to:\r\n```\r\nTryParse method found on Todo with incorrect format. Must be a static method with format\r\nbool TryParse(string, IFormatProvider, out Todo)\r\nbool TryParse(string, out Todo)\r\nbut found\r\nBoolean TryParse(System.String)\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [x] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made so that developers would be aware when they wrote a `BindAsync` or `TryParse` method that it wasn't in a valid format. Otherwise the framework would fallback to assuming the parameter is json from the body and could result in unexpected behavior.\r\n\r\n### Recommended action\r\n\r\nIt is possible your types have a `BindAsync` or `TryParse` with different syntax for other reasons besides parameter binding and will now throw at startup. There are multiple options to avoid this behavior:\r\n* Make your `BindAsync` or `TryParse` method internal or private\r\n* Add a new `BindAsync` or `TryParse` method that is in the syntax we are looking for (we ignore invalid methods if we find a valid one)\r\n* Mark your parameter as `[FromBody]`\r\n\r\n### Affected APIs\r\n\r\nAll `IEndpointRouteBuilder.Map*(...)` methods are affected by this change, e.g. `app.MapGet(...)` and `app.MapPost(...)`.\r\nAnd `RequestDelegateFactory.Create(...)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/36810","Url":"https://github.com/aspnet/Announcements/issues/472","RelatedDescription":"Open issue \"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods\" (#472)"},{"Id":"953359702","IsPullRequest":false,"CreatedAt":"2021-09-18T18:10:19","Actor":"TanayParikh","Number":"470","RawContent":null,"Title":"Disable Long Polling Fallback Transport for Blazor Server","State":"closed","Body":"## Disable Long Polling Fallback Transport for Blazor Server\r\n\r\nLong Polling is a fall-back transport utilized when WebSockets aren't available. This can lead to a degraded user experience. Thus, the Long Polling fallback has been removed, and both the client and server now support _only_ WebSockets by default.\r\n\r\n### Version introduced\r\n\r\n.NET 6 rc 1\r\n\r\n### Old behavior\r\n\r\nIf WebSockets are unavailable for a circuit (ex. network issues or browser incompatibility), Long Polling is used instead.\r\n\r\n### New behavior\r\n\r\n| Client | Server | Message |\r\n|---|---|---|\r\n|WS (without browser WS support)|WebSockets|`Unable to connect, please ensure you are using an updated browser that supports WebSockets.`|\r\n|WS (with WS connection being rejected)|WebSockets|`Unable to connect, please ensure WebSockets are available. A VPN or proxy may be blocking the connection.`|\r\n|WS|LongPolling|`An unhandled error has occurred.` Console Error: `Unable to initiate a SignalR connection to the server. This might be because the server is not configured to support WebSockets. To troubleshoot this, visit https://aka.ms/blazor-server-websockets-error.`|\r\n|LongPolling|WebSockets|`An unhandled error has occurred.`|\r\n\r\n### Reason for change\r\n\r\nImprove overall end-user-experience by enforcing WebSocket use.\r\n\r\n### Recommended action\r\n\r\nEnsure WebSockets are functioning as expected with your application. If you must use Long Polling, the following client and server side changes must be made:\r\n\r\n\r\n#### Server Side\r\n\r\nIn `Startup.cs`, replace `endpoints.MapBlazorHub()` with:\r\n\r\n```c#\r\nendpoints.MapBlazorHub(configureOptions: options => \r\n{ \r\n    options.Transports = HttpTransportType.WebSockets | HttpTransportType.LongPolling; \r\n});\r\n```\r\n\r\n#### Client Side\r\n\r\nIn `Pages/_Layout.cshtml`, update the `blazor.server.js` script tag to include the `autostart=\"false\"` attribute:\r\n\r\n```html\r\n<script src=\"_framework/blazor.server.js\" autostart=\"false\"></script>\r\n```\r\n\r\nBelow the `blazor.server.js` script tag, add the following snippet. WebSockets (1) and Long Polling (4) are the supported [HTTPTransportType](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connections.httptransporttype?view=aspnetcore-5.0#fields)s.\r\n\r\n```html\r\n<script>\r\n    (function start() {\r\n        Blazor.start({\r\n            configureSignalR: builder => builder.withUrl('_blazor', 1 | 4) // WebSockets and Long Polling\r\n        });\r\n    })()\r\n</script>\r\n```\r\n\r\n### Category\r\n<!-- Choose one of the following compatibility categories: -->\r\n\r\n- [ ] Binary compatibility (the newer version can be used without recompiling)\r\n- [ ] Source compatibility (successfully recompiling against newer version requires source changes)\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/470","RelatedDescription":"Closed issue \"Disable Long Polling Fallback Transport for Blazor Server\" (#470)"},{"Id":"973152582","IsPullRequest":false,"CreatedAt":"2021-08-18T00:07:55","Actor":"pranavkm","Number":"471","RawContent":null,"Title":"[Breaking change]: Razor Pages logging ID change","State":"open","Body":"### Description\n\nRazor Pages log messages have associated IDs and names. These are used to uniquely identify different kinds of log messages. Some of those IDs and names were incorrectly duplicated. This is being fixed in .NET 6.\n\n### Version\n\n.NET 6 RC1\n\n### Previous behavior\n\nEvent Name: ExecutedHandlerMethod\r\nEvent Id: 102\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod\r\nEvent Id: 103\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod\r\nEvent Id: 104\r\n\r\nEvent Name: NotMostEffectiveFilter\r\nEvent Id: 1\r\n\n\n### New behavior\n\nEvent Name: ExecutedHandlerMethod (unchanged)\r\nEvent Id: 108\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod  (unchanged)\r\nEvent Id: 107\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod  (unchanged)\r\nEvent Id: 109\r\n\r\nEvent Name: NotMostEffectiveFilter  (unchanged)\r\nEvent Id: 4\r\n\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs and names, update those references use the new IDs and names.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/471","RelatedDescription":"Open issue \"[Breaking change]: Razor Pages logging ID change\" (#471)"},{"Id":"951058526","IsPullRequest":true,"CreatedAt":"2021-07-30T15:24:54","Actor":"gewarren","Number":"469","RawContent":null,"Title":"Convert breaking change template to a form","State":"closed","Body":"See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms.","Url":"https://github.com/aspnet/Announcements/pull/469","RelatedDescription":"Closed or merged PR \"Convert breaking change template to a form\" (#469)"},{"Id":"940150750","IsPullRequest":true,"CreatedAt":"2021-07-08T19:25:36","Actor":"mkArtakMSFT","Number":"468","RawContent":null,"Title":"Expanded category of the change to be either source or binary","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/468","RelatedDescription":"Closed or merged PR \"Expanded category of the change to be either source or binary\" (#468)"},{"Id":"939244949","IsPullRequest":true,"CreatedAt":"2021-07-08T18:03:39","Actor":"mkArtakMSFT","Number":"467","RawContent":null,"Title":"Include preview number in version text","State":"closed","Body":"Thanks for the proposal to change this, @Rick-Anderson!","Url":"https://github.com/aspnet/Announcements/pull/467","RelatedDescription":"Closed or merged PR \"Include preview number in version text\" (#467)"},{"Id":"938148373","IsPullRequest":false,"CreatedAt":"2021-07-06T18:21:20","Actor":"Tratcher","Number":"466","RawContent":null,"Title":"ClientCertificate property no longer triggers renegotiation for HttpSys","State":"open","Body":"\r\n## ClientCertificate property no longer triggers renegotiation for HttpSys\r\n\r\nThe `HttpContext.Connection.ClientCertificate` property will no longer trigger TLS renegotiations for HttpSys. See https://github.com/dotnet/aspnetcore/issues/34124 for discussion.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` allowed renegotiation to be triggered by both `HttpContext.Connection.ClientCertificate` and `HttpContext.Connection.GetClientCertifiateAsync`.\r\n\r\nSee https://github.com/aspnet/Announcements/issues/422 for related changes in 5.0.\r\n\r\n### New behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` will allow renegotiation to be triggered only by `HttpContext.Connection.GetClientCertifiateAsync`. `HttpContext.Connection.ClientCertificate` will return the current certificate if available, but will not renegotiate with the client to request one.\r\n\r\n### Reason for change\r\n\r\nWhen implementing the same features for Kestrel it became clear that applications needed to be able to check the state of the client certificate before triggering a renegotiation. This enables the following usage pattern to deal with issues like the request body conflicting with the renegotiation:\r\n\r\n```\r\nif (connection.ClientCertificate == null)\r\n{\r\n  await BufferRequestBodyAsync();\r\n  await connection.GetClientCertificateAsync();\r\n}\r\n```\r\n\r\n### Recommended action\r\n\r\nApplications that use delayed client certificate negotiation need to call GetClientCertificateAsync() to trigger that.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n [HttpSysOptions.ClientCertificateMethod](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions.clientcertificatemethod)\r\n  [HttpContext.Connection.ClientCertificate](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.clientcertificate)\r\n  [HttpContext.Connection.GetClientCertifiateAsync](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.getclientcertificateasync)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/466","RelatedDescription":"Open issue \"ClientCertificate property no longer triggers renegotiation for HttpSys\" (#466)"},{"Id":"903915805","IsPullRequest":false,"CreatedAt":"2021-05-27T15:32:22","Actor":"LadyNaggaga","Number":"465","RawContent":null,"Title":" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6","State":"open","Body":"\r\n### React Redux - dropping support in .NET 6 preview 6\r\n\r\nThe number of ASP.NET Core with React-Redux being created using the .NET Core SDK templates is low.  As a result, we have decided to drop React-Redux support in .NET 6 preview 6. \r\n\r\nAs mentioned in [issue #27887](https://github.com/dotnet/aspnetcore/issues/27887) we shared we will be introducing a new experience for SPA templates in .NET 6 timeframe. This experience is going to focus on decoupling the frontend from the backend into two separate projects. For details here. So, even though we are dropping React-Redux in preview 6 we are providing flexibility for our customers to bring in any SPA framework for their choosing. For more information, please check out the following:\r\n\r\n- [ASP.NET Core and SPAs in .NET 6 ](https://github.com/dotnet/aspnetcore/issues/27887).\r\n- [Improved single-page app (SPA) templates](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/#improved-single-page-app-spa-templates)","Url":"https://github.com/aspnet/Announcements/issues/465","RelatedDescription":"Open issue \" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6\" (#465)"},{"Id":"879380130","IsPullRequest":false,"CreatedAt":"2021-05-07T17:13:08","Actor":"blowdart","Number":"464","RawContent":null,"Title":"ASP.NET Core 6 and Authentication Servers","State":"open","Body":"In .NET 3.0 we began shipping IdentityServer4 as part of our template to support the issuing of JWT tokens for SPA and Blazor applications. Sometime after we shipped, the IdentityServer team made [an announcement changing the license for future versions of IdentityServer](https://leastprivilege.com/2020/10/01/the-future-of-identityserver/) to a reciprocal public license – a license where the code is still open source but if used for commercial purposes then a paid license must be bought. This type of approach is common in the open-source world, where sustaining an income is difficult as your project becomes your full-time work.\r\n\r\nTwo of the reasons behind the choice to ship IdentityServer was the community’s well-expressed desire that we did not compete with an established open-source project and IdentityServer’s deep knowledge of the identity space. The .NET team are not OAuth and OIDC experts as we focus on providing building blocks for your application and a starting point from which you can be successful. Creating and sustaining an authentication server is a full-time endeavor, and Microsoft already has a team and a product in that area, Azure Active Directory, which allows 500,000 objects for free. The ASP.NET team feels a managed cloud solution remains the best practical option for developers – the security is managed, you don’t store credentials locally with the risks that presents, and new features like passwordless authentication appear seamlessly in your authentication workflow. However, we also realize that a cloud solution can be impossible for some customers due to regulatory or data sovereignty concerns.\r\n\r\nFor .NET 6 we will continue to ship IdentityServer in our templates, using the new RPL licensed version. We continue to think this is the most mature option for creating self-deployed, locally hosted token service with ASP.NET Core. We will make the licensing requirement clear if you are using a template that includes Duende IdentityServer. The [new Duende IdentityServer](https://duendesoftware.com/products/identityserver) continues to be open source, but now has a dual license. This license allows it to be used for free for development, testing, and learning, free for non-commercial open source, and free for use in commercial settings if the entity or organization makes less than 1 million USD/year. The license requires [a fee](https://duendesoftware.com/products/identityserver#pricing) to be used in used in a commercial setting if the entity or organization makes more than 1M USD/year. The previous version of IdentityServer will continue to be supported for as long as .NET 5 is supported, until [around February 2022](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nFor .NET 7 we will investigate if we can build tooling to allow development and testing of OIDC (OpenID Connect) enabled applications when disconnected from the internet. You will always be free to choose whatever identity system is best for you in production by updating a few lines of code when you’re ready to go live. We’re committed to giving you options for production identity systems now and going forward.\r\n\r\nDiscussion of this announcement can be found at https://github.com/dotnet/aspnetcore/issues/32494","Url":"https://github.com/aspnet/Announcements/issues/464","RelatedDescription":"Open issue \"ASP.NET Core 6 and Authentication Servers\" (#464)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1570115059594203142","CreatedAt":"2022-09-14T18:19:36+00:00","UserScreenname":"aspnet","Text":"Announcing Entity Framework 7 Release Candidate 1\n\nhttps://t.co/WRrb6TMOEQ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":40,"FavoriteCount":16,"RawContent":null},{"Id":"1570114729422761985","CreatedAt":"2022-09-14T18:18:17+00:00","UserScreenname":"aspnet","Text":"#AspNetCore updates in .NET 7 RC 1\n\n✨Dynamic auth requests in Blazor WASM\n✨Blazor WASM debug improvements\n✨.NET Jav… https://t.co/Rxs05vnWsy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"1569732777310064640","CreatedAt":"2022-09-13T17:00:32+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgrKZI8 Community Standup - Blazor in .NET 7 Part II https://t.co/hCrSaNIwAC","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1569732348866076672","CreatedAt":"2022-09-13T16:58:50+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us for some exciting brand new #Blazor goodies!\n\nhttps://t.co/GvDXJFlPYo https://t.co/9CjcCAmBLi","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null},{"Id":"1569457441540030464","CreatedAt":"2022-09-12T22:46:27+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🔥Blazor in .NET 7 - Part 2\n⭐Daniel Roth, Pavel Savara, Jon Galloway, Tana… https://t.co/ofVHIgq4Mq","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"1567196275300507650","CreatedAt":"2022-09-06T17:01:23+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgrKZI8 Community Standup - 🎂8 Years of .NET Community Standups🎂 https://t.co/JjwDgrsFO2","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":16,"FavoriteCount":10,"RawContent":null},{"Id":"1567195389383815168","CreatedAt":"2022-09-06T16:57:52+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us:\n\nhttps://t.co/yjH8Yaf4Oa https://t.co/dj2IioNJMm","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1566983171010592768","CreatedAt":"2022-09-06T02:54:35+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🎂8 Years of .NET Community Standups🎂\n⭐ Scott Hanselman, Damian Edwards, J… https://t.co/fvzJbJKiPy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1564659625022357504","CreatedAt":"2022-08-30T17:01:39+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgrKZI8 Community Standup - Port Tunneling for https://t.co/eFOzgrKZI8 Core Projects https://t.co/VowirD86N3","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":6,"FavoriteCount":0,"RawContent":null},{"Id":"1564659500040081408","CreatedAt":"2022-08-30T17:01:09+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us!\n\nhttps://t.co/JdDXTwNjrk https://t.co/zho0k9QdnY","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1564375042556735489","CreatedAt":"2022-08-29T22:10:49+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n📡 Port Tunneling for https://t.co/eFOzgs22K8 Core Projects\n⭐ Carolina Uri… https://t.co/ySlfPrgtVp","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"1562122634426347520","CreatedAt":"2022-08-23T17:00:33+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Blazor in .NET 7 https://t.co/aZqyALNCcd","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":16,"FavoriteCount":6,"RawContent":null},{"Id":"1562121872757645313","CreatedAt":"2022-08-23T16:57:31+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us to hear what's new for #Blazor in .NET 7!\n\nhttps://t.co/oGWQMQYCbg https://t.co/e48qOWIgam","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":8,"FavoriteCount":4,"RawContent":null},{"Id":"1561805260569452545","CreatedAt":"2022-08-22T19:59:25+00:00","UserScreenname":"aspnet","Text":"On this week's #Blazor Community Standup:\n🔥 Blazor in .NET 7\n⭐ Daniel Roth, Jon Galloway, Mackinnon Buck, Tanay Par… https://t.co/Io0gxeFvEl","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1557130910977339394","CreatedAt":"2022-08-09T22:25:13+00:00","UserScreenname":"aspnet","Text":"🔥#AspNetCore updates in .NET 7 Preview 7\n\n🆕New Blazor WebAssembly loading page\n🪢Blazor data binding get/set/after m… https://t.co/iZDMvhwsmx","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":50,"FavoriteCount":17,"RawContent":null},{"Id":"1556783156883120128","CreatedAt":"2022-08-08T23:23:22+00:00","UserScreenname":"aspnet","Text":"Migrating your https://t.co/eFOzgs22K8 app to https://t.co/eFOzgs22K8 Core keeps getting easier! \n\nCheck out the ne… https://t.co/UYYNOwYV6Z","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":150,"FavoriteCount":51,"RawContent":null},{"Id":"1554513211440803841","CreatedAt":"2022-08-02T17:03:25+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Intern Show and Tell  - Web Frameworks https://t.co/4jFamm7fff","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1554511392698351619","CreatedAt":"2022-08-02T16:56:12+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us to hear what the interns have been working on!\n\nhttps://t.co/vBGU4Eu0nb https://t.co/tR3mXseqTM","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-09-16T03:30:08.5410457Z","RunDurationInMilliseconds":3449}