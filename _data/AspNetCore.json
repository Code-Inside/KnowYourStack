{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET 7 Preview 3","PublishedOn":"2022-04-13T17:19:01+00:00","CommentsCount":15,"FacebookCount":0,"Summary":".NET 7 Preview 3 is now available with enhancements to observability, startup times, codegen, GC regions, native AOT compilation, and more.\nThe post Announcing .NET 7 Preview 3 appeared first on .NET...","Href":"https://devblogs.microsoft.com/dotnet/announcing-dotnet-7-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 7 (EF7) Preview 3","PublishedOn":"2022-04-13T17:16:28+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Announcing the release of EF7 Preview 3 and custom database-first scaffolding with T4 templates.\nThe post Announcing Entity Framework Core 7 (EF7) Preview 3 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-7-preview-3/","RawContent":null},{"Title":".NET MAUI Release Candidate – Ready for cross-platform app development","PublishedOn":"2022-04-12T18:00:39+00:00","CommentsCount":57,"FacebookCount":0,"Summary":".NET MAUI Release Candidate is now feature complete, API stable for the upcoming GA release. Get started today to build app for Android, Windows, iOS, and macOS.\nThe post .NET MAUI Release Candidate...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-1/","RawContent":null},{"Title":".NET Automatic Updates for Server Operating Systems","PublishedOn":"2022-04-12T18:00:08+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Server operating systems can opt in to get automatic updates for .NET. Learn how to easly opt in so you never miss an update.\nThe post .NET Automatic Updates for Server Operating Systems appeared...","Href":"https://devblogs.microsoft.com/dotnet/server-operating-systems-auto-updates/","RawContent":null},{"Title":".NET April 2022 Updates – .NET 6.0.4, .NET 5.0.16 and, .NET Core 3.1.24","PublishedOn":"2022-04-12T17:38:54+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Check out April updates for .NET 6.0, .NET 5.0, and .NET Core 3.1\nThe post .NET April 2022 Updates – .NET 6.0.4, .NET 5.0.16 and, .NET Core 3.1.24 appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/april-2022-updates/","RawContent":null},{"Title":".NET Framework April 2022 Security and Quality Rollup Updates","PublishedOn":"2022-04-12T16:58:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are releasing the April 2022 Security and Quality Rollup Updates for .NET Framework.\nThe post .NET Framework April 2022 Security and Quality Rollup Updates appeared first on .NET Blog.","Href":"https://devblogs.microsoft.com/dotnet/dotnet-framework-april-2022-updates/","RawContent":null},{"Title":"ASP.NET Core updates in .NET 7 Preview 3","PublishedOn":"2022-04-12T15:32:47+00:00","CommentsCount":3,"FacebookCount":0,"Summary":".NET 7 Preview 3 is here and adds some great new features to ASP.NET Core including support for route handler filters in minimal APIs, improved unit testability for minimal route handlers, performance...","Href":"https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-7-preview-3/","RawContent":null},{"Title":".NET Framework 4.5.2, 4.6, and 4.6.1 will reach End of Support on Apr 26, 2022","PublishedOn":"2022-04-04T17:17:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Framework 4.5.2, 4.6, and 4.6.1 will reach End of Support on Apr 26, 2022, this blog post is a reminder/refresher for customers that might have missed the post a year ago.\nThe post .NET Framework...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-framework-45-46-461-end-of-support/","RawContent":null},{"Title":".NET 5.0 will reach End of Support on May 08, 2022","PublishedOn":"2022-03-24T17:50:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":".NET 5.0 will reach end of support on May 08, 2022, this blog breaks down all the valuable information you need to know and how to update to .NET 6.0.\nThe post .NET 5.0 will reach End of Support on...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-5-end-of-support-update/","RawContent":null},{"Title":"Go To Definition improvements for external source in Roslyn","PublishedOn":"2022-03-22T17:23:01+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"An in depth look at improvements to Go To Definition (and Go To Implementation, and Go To Base, etc.) allowing you to navigate to source code that isn't in your current solution, but instead comes...","Href":"https://devblogs.microsoft.com/dotnet/go-to-definition-improvements-for-external-source-in-roslyn/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"1206431272","IsPullRequest":false,"CreatedAt":"2022-04-17T16:56:02","Actor":"nssidhu","Number":"41228","RawContent":null,"Title":"CustomAuthenticationProvider does not work as expected(Does not fire   NotifyAuthenticationStateChanged(GetAuthenticationStateAsync());","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI am using VS 2022\r\n\r\n```\r\nusing Microsoft.AspNetCore.Components.Authorization;\r\nusing System.Security.Claims;\r\nusing Blazored.LocalStorage;\r\nusing Models;\r\nusing Microsoft.JSInterop;\r\nusing Newtonsoft.Json;\r\n\r\n\r\nnamespace BlazorWasm.Client.Services\r\n{\r\n    public class CustomAuthenticationStateProvider : AuthenticationStateProvider\r\n    {\r\n       ILocalStorageService _localStorage;\r\n       private readonly IJSRuntime _jsruntime;\r\n        public  CustomAuthenticationStateProvider(ILocalStorageService LocalStorage, IJSRuntime jsruntime)\r\n        {\r\n            _localStorage = LocalStorage;\r\n            _jsruntime = jsruntime;\r\n        }\r\n\r\n        private ClaimsPrincipal claimsPrincipal = new ClaimsPrincipal(new ClaimsIdentity());\r\n\r\n        public override async Task<AuthenticationState> GetAuthenticationStateAsync()\r\n        {\r\n            //claimsPrincipal.Identity.IsAuthenticated = false;\r\n            if(claimsPrincipal == null || claimsPrincipal.Identity?.IsAuthenticated == false)\r\n            {\r\n                //check if we have stored in the LocalStorage\r\n                try\r\n                {\r\n                    //Issue: neither Jsonnet nor microsoft system.text.json parser could parse Claims back to object.\r\n                    //A custom converter is used to read the value as string and than create instance of object\r\n                   //var obj = await _jsruntime.InvokeAsync<string>(\"localStorage.getItem\", \"AuthInfo\");\r\n                    var authInfojson = await _localStorage.GetItemAsync<string>(\"AuthInfo\");\r\n\r\n                    if(!string.IsNullOrEmpty(authInfojson))\r\n                    {\r\n                        //system.text.json does not allow to use custom converter during deserialization\r\n                        var authInfo = JsonConvert.DeserializeObject<AuthInfo>(authInfojson, new ClaimConverter());\r\n\r\n                        if (authInfo != null)\r\n                        {\r\n                            var identity = new ClaimsIdentity(authInfo.Claims, \"AuthInfo\");\r\n\r\n                            claimsPrincipal = new ClaimsPrincipal(identity);\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Console.WriteLine(ex);\r\n                  \r\n                }\r\n             \r\n            }\r\n            return (new AuthenticationState(claimsPrincipal));\r\n        }\r\n\r\n        public async Task SetAuthInfo(AuthInfo authInfo)\r\n        {\r\n          \r\n            try\r\n            {\r\n                var identity = new ClaimsIdentity(authInfo.Claims, \"AuthInfo\");\r\n\r\n\r\n                await _localStorage.SetItemAsync<AuthInfo>(\"AuthInfo\", authInfo);\r\n\r\n                claimsPrincipal = new ClaimsPrincipal(identity);\r\n                NotifyAuthenticationStateChanged(GetAuthenticationStateAsync());\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n\r\n                throw;\r\n            }\r\n\r\n          \r\n        }\r\n\r\n        public async Task Logout()\r\n        {\r\n            await _localStorage.RemoveItemAsync(\"AuthInfo\");\r\n            claimsPrincipal = new ClaimsPrincipal(new ClaimsIdentity());\r\n            NotifyAuthenticationStateChanged(GetAuthenticationStateAsync());\r\n        }\r\n    }\r\n    \r\n}\r\n```\r\n\r\nI than register it program.cs\r\n\r\n```\r\nbuilder.Services.AddOptions(); //ToDo find out why this one is needed\r\nbuilder.Services.AddAuthorizationCore();\r\n\r\nbuilder.Services.AddScoped<ICountryDropDownDataService, CountryDropDownService>();\r\nbuilder.Services.AddScoped<ILoginService, LoginService>();\r\n\r\nbuilder.Services.AddScoped<CustomAuthenticationStateProvider>();\r\nbuilder.Services.AddScoped<AuthenticationStateProvider>(provider => provider.GetRequiredService<CustomAuthenticationStateProvider>());\r\n\r\n```\r\n\r\nIn my Login Service, i Inject the my CustomAuthStateProvider (showing partial code)\r\n\r\n```\r\npublic class LoginService : ILoginService\r\n    {\r\n       \r\n\r\n        private readonly DBContext _dbContext;\r\n        private readonly IHttpContextAccessor _httpContextAccessor;\r\n        private UtilityClass UtilCls;\r\n        private readonly IMapper _mapper;\r\n        private TelemetryClient _telemetryClient;\r\n        CustomAuthenticationStateProvider _custAuthProvider;\r\n     \r\n\r\n        public LoginService(IServiceProvider serviceProvider)\r\n        {\r\n\r\n            _mapper = serviceProvider.GetRequiredService<IMapper>(); ;\r\n            _telemetryClient = serviceProvider.GetRequiredService<TelemetryClient>();\r\n            _dbContext = serviceProvider.GetRequiredService<DBContext>();\r\n            _httpContextAccessor = serviceProvider.GetRequiredService<IHttpContextAccessor>();\r\n            _custAuthProvider = serviceProvider.GetRequiredService<CustomAuthenticationStateProvider>();\r\n           \r\n            UtilCls = new UtilityClass(serviceProvider, _telemetryClient);\r\n\r\n        }\r\n\r\n```\r\n\r\nWhen my API Returns success i call the \r\n\r\n await _custAuthProvider.SetAuthInfo(AuthInfo); //This Line is inside of Login Service.\r\n \r\nThis executes code inside the CustomAuthenticationStateProvide, but no Notification is generated.\r\n\r\nI have couple of Places with Authorize View, those don't Update\r\n\n\n### Expected Behavior\n\nCalling NotifyAuthenticationStateChanged(GetAuthenticationStateAsync());\r\nshould update all pages that are using Authorize View to reflect the new State\n\n### Steps To Reproduce\n\nMentioned Above in describe bug\n\n### Exceptions (if any)\n\nNone\n\n### .NET Version\n\n6.0.300-preview.22154.4\n\n### Anything else?\n\nC:\\Users\\nssid>dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.300-preview.22154.4\r\n Commit:    1eb22793b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22000\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300-preview.22154.4\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.2\r\n  Commit:  839cdfb0ec\r\n\r\n.NET SDKs installed:\r\n  6.0.300-preview.22154.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download","Url":"https://github.com/dotnet/aspnetcore/issues/41228","RelatedDescription":"Open issue \"CustomAuthenticationProvider does not work as expected(Does not fire   NotifyAuthenticationStateChanged(GetAuthenticationStateAsync());\" (#41228)"},{"Id":"1206422609","IsPullRequest":false,"CreatedAt":"2022-04-17T16:25:29","Actor":"Jukpfusi","Number":"41227","RawContent":null,"Title":"Random CSS class name generation","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nIt is not related to any problem.\n\n### Describe the solution you'd like\n\nHello,\r\nI haven't found a solution to rename CSS classes with random class names (a kind of \"obfuscation\") :\r\n![image](https://i.ibb.co/GtYV2r9/unknown.png)\r\nClass names would be regenerated only once (and not at each request).\r\n\r\nWhat is the best way to implement this \"obfuscation\", I thought about middleware but it would cause too much performance slowdown.\r\n\r\nMaybe the cshtml files would have to be modified at startup, during razor pages compilation?\r\n\r\nNote: if someone is willing to implement this, we can do it together.\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/41227","RelatedDescription":"Open issue \"Random CSS class name generation\" (#41227)"},{"Id":"1205884630","IsPullRequest":true,"CreatedAt":"2022-04-17T15:26:30","Actor":"Tratcher","Number":"41215","RawContent":null,"Title":"Fix MapPath and UsePathBase's use of implicit PathStrings ","State":"closed","Body":"Fixes #41168\r\n\r\nAn async state machine optimization was made in MapPath and UsePathBase for 6.0 that accidentally changed the field type for paths from PathString to string. There's an implicit converter between the types, but it encodes/decodes the string. This can result in double encoding or decoding.\r\n\r\nhttps://github.com/dotnet/aspnetcore/commit/56d0f2ac95e70742ea93a3b4e944a526ea31dc49#diff-65457624537493466dc6a9609fb01fcb49e5f17e687b04827aa4231daf44c5d6R67\r\n\r\nFix: Make sure the path fields are consistently passed as PathStrings to avoid unnecessary transformations.\r\n\r\nRecommended for servicing once this is verified in main.","Url":"https://github.com/dotnet/aspnetcore/pull/41215","RelatedDescription":"Closed or merged PR \"Fix MapPath and UsePathBase's use of implicit PathStrings \" (#41215)"},{"Id":"1206358569","IsPullRequest":true,"CreatedAt":"2022-04-17T12:08:43","Actor":"dotnet-maestro[bot]","Number":"41226","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20220416.4\r\n- **Date Produced**: April 17, 2022 6:55:53 AM UTC\r\n- **Commit**: a39ddca87f9d8e99d74ef44f280761bde578aca2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Net.Http.Json**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.IO.Pipelines**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Threading.Channels**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-preview.4.22215.7 to 7.0.0-preview.4.22216.4][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2d4f2d0...a39ddca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/41226","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#41226)"},{"Id":"1206252361","IsPullRequest":false,"CreatedAt":"2022-04-17T02:37:58","Actor":"mayaraseverodf","Number":"41225","RawContent":null,"Title":"F","State":"closed","Body":"## Background and Motivation\n\n<!--\nWe welcome API proposals! We have a process to evaluate the value and shape of new API. There is an overview of our process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/APIReviewProcess.md). This template will help us gather the information we need to start the review process.\nFirst, please describe the purpose and value of the new API here.\n-->\n\n## Proposed API\n\n<!--\nPlease provide the specific public API signature diff that you are proposing. For example:\n```diff\nnamespace Microsoft.AspNetCore.Http\n{\n    public static class HttpResponseWritingExtensions\n    {\n+       public Task WriteAsync(this HttpResponse response, StringBuilder builder);\n    }\n}\n```\nYou may find the [Framework Design Guidelines](https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/framework-design-guidelines-digest.md) helpful.\n-->\n\n## Usage Examples\n\n<!--\nPlease provide code examples that highlight how the proposed API additions are meant to be consumed.\nThis will help suggest whether the API has the right shape to be functional, performant and useable.\nYou can use code blocks like this:\n``` C#\n// some lines of code here\n```\n-->\n\n## Alternative Designs\n\n<!--\nWere there other options you considered, such as alternative API shapes?\nHow does this compare to analogous APIs in other ecosystems and libraries?\n-->\n\n## Risks\n\n<!--\nPlease mention any risks that to your knowledge the API proposal might entail, such as breaking changes, performance regressions, etc.\n-->","Url":"https://github.com/dotnet/aspnetcore/issues/41225","RelatedDescription":"Closed issue \"F\" (#41225)"},{"Id":"1205282622","IsPullRequest":false,"CreatedAt":"2022-04-16T22:00:47","Actor":"Atulin","Number":"41200","RawContent":null,"Title":"OnInitializedAsync runs on every page load","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI made a Razor component\r\n\r\n```cs\r\n@using System.IO\r\n@using Serilog\r\n<div style=\"border: 3px solid firebrick\">\r\n    <h3>File Test</h3>\r\n    <pre>@_text</pre>\r\n</div>\r\n\r\n@code {\r\n    private string _text = string.Empty;\r\n    protected override async Task OnInitializedAsync()\r\n    {\r\n        Log.Error(\"[{Date}] Running!\", DateTime.Now);\r\n        _text = await File.ReadAllTextAsync(\"config.json\");\r\n    }\r\n}\r\n```\r\n\r\nthat gets embedded inside of a `.cshtml` Razor page with\r\n\r\n```html\r\n<component type=\"typeof(FileTestComponent)\" render-mode=\"Static\"></component>\r\n```\r\n\r\nFrom what I read, `OnInitializedAsync()` runs only once, on first render, and render mode being `Static` should generate static HTML.\r\n\r\nAnd yet, every time I refresh the page, I see the message logged to the console. Which tells me that no, this code doesn't run only on first render\r\n\r\n![image](https://user-images.githubusercontent.com/11233299/163524626-12003ce5-44d7-4ff6-b51e-ca43d0d1b45e.png)\r\n\n\n### Expected Behavior\n\nCode runs only once, be it on first request or even on build time\n\n### Steps To Reproduce\n\nhttps://github.com/Atulin/ComponentDemo\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.104\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/41200","RelatedDescription":"Closed issue \"OnInitializedAsync runs on every page load\" (#41200)"},{"Id":"1206190035","IsPullRequest":false,"CreatedAt":"2022-04-16T18:42:40","Actor":"davidfowl","Number":"41224","RawContent":null,"Title":"Follow up HTTP/2 items","State":"open","Body":"There were a couple of follow up items as a result of changing how HTTP/2 output writing works https://github.com/dotnet/aspnetcore/issues/30235.\r\n\r\n- [ ] - We need to follow up on how this affects large writes. There will be a task allocation after 4K writes because the ConcurrentPipeWriter allocates a task per pending write. We might also want to use a bigger pause threshold (65K?)\r\n- [ ] - We need to determine if we want CompleteAsync to not lie and instead wait on the response to be flushed. Right now it lies and queues other operations after the response is completed. This is more efficient but makes it hard to observe exceptions. This would slow down gRPC scenarios a bit more.\r\n- [ ] - Move HPack encoding out of the write lock https://github.com/dotnet/aspnetcore/pull/40925#discussion_r846521398\r\n- [ ] - Write window updates in an async code path (https://github.com/dotnet/aspnetcore/blob/1b02b8549618c0edd7022362617251d9d1c33152/src/Servers/Kestrel/Core/src/Internal/Http2/FlowControl/StreamInputFlowControl.cs#L60 and https://github.com/dotnet/aspnetcore/blob/1b02b8549618c0edd7022362617251d9d1c33152/src/Servers/Kestrel/Core/src/Internal/Http2/FlowControl/StreamInputFlowControl.cs#L93)\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/41224","RelatedDescription":"Open issue \"Follow up HTTP/2 items\" (#41224)"},{"Id":"1206183493","IsPullRequest":false,"CreatedAt":"2022-04-16T18:08:57","Actor":"nssidhu","Number":"41223","RawContent":null,"Title":"Adding swagger to Blazor Server app break the Blazor Server App.","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAdding swagger to Blazor Server break the Blazor Server App.\r\nHere is the program.cs file\r\n\r\n```\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\n// Add services to the container.\r\nbuilder.Services.AddRazorPages();\r\nbuilder.Services.AddServerSideBlazor();\r\n\r\n\r\nApplicationInsightsServiceOptions aiOptions = new ApplicationInsightsServiceOptions();\r\naiOptions.EnableAdaptiveSampling = false;\r\naiOptions.InstrumentationKey = builder.Configuration[\"ApplicationInsights:InstrumentationKey\"];\r\naiOptions.EnableQuickPulseMetricStream = true;\r\nbuilder.Services.AddApplicationInsightsTelemetry();\r\n\r\nbuilder.Services.AddAutoMapper(typeof(AutoMapperProfile));\r\n\r\nbuilder.Services.AddSingleton<WeatherForecastService>();\r\n\r\nbuilder.Services.AddEndpointsApiExplorer();\r\n\r\nbuilder.Services.AddSwaggerGen();\r\n\r\nbuilder.Services.AddHttpContextAccessor();\r\n\r\n\r\nbuilder.Services.AddHttpClient(\"default\", client =>\r\n{\r\n    //client.BaseAddress = new Uri(\"\");\r\n    client.DefaultRequestHeaders.Add(\"Accept\", \"\");\r\n    client.DefaultRequestHeaders.Add(\"User-Agent\", \"API\");\r\n});\r\n\r\nvar app = builder.Build();\r\n\r\napp.UseSwagger();\r\napp.UseSwaggerUI(c => c.SwaggerEndpoint(\"/swagger/v1/swagger.json\", \"v1\"));\r\n\r\n\r\n// Configure the HTTP request pipeline.\r\nif (!app.Environment.IsDevelopment())\r\n{\r\n    app.UseExceptionHandler(\"/Error\");\r\n    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\r\n    app.UseHsts();\r\n\r\n}\r\n\r\napp.UseHttpsRedirection();\r\n\r\napp.UseStaticFiles();\r\n\r\napp.UseRouting();\r\n\r\napp.MapBlazorHub();\r\napp.MapFallbackToPage(\"/_Host\");\r\n\r\n\r\napp.Run();\r\n\r\n```\n\n### Expected Behavior\n\nShould load the Blazor App along with the swagger\n\n### Steps To Reproduce\n\nAdd Swagger to new Blazor server Template\n\n### Exceptions (if any)\n\nThis localhost page can’t be found \r\nNo webpage was found for the web address: https://localhost:7099/index.html\r\nHTTP ERROR 404\n\n### .NET Version\n\n6.0.300-preview.22154.4\n\n### Anything else?\n\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.300-preview.22154.4\r\n Commit:    1eb22793b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22000\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300-preview.22154.4\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.2\r\n  Commit:  839cdfb0ec\r\n\r\n.NET SDKs installed:\r\n  6.0.300-preview.22154.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download","Url":"https://github.com/dotnet/aspnetcore/issues/41223","RelatedDescription":"Open issue \"Adding swagger to Blazor Server app break the Blazor Server App.\" (#41223)"},{"Id":"1206141646","IsPullRequest":false,"CreatedAt":"2022-04-16T15:33:37","Actor":"zoran-petrovic-87","Number":"41222","RawContent":null,"Title":"Blazor InputSelect sets wrong selected Option","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nLet's say that we have a really simple class with 2 properties, one is an integer and the other one is a string. I want to use EditForm with 2 InputSelect elements that are bind to these properties. The code looks like this:\r\n\r\n```\r\n@page \"/test\"\r\n@using Microsoft.AspNetCore.Components\r\n@using Newtonsoft.Json\r\n\r\n<PageTitle>Test</PageTitle>\r\n<h3>Test form</h3>\r\n\r\n<EditForm Model=\"@_dummy\" OnValidSubmit=\"@TestAsync\">\r\n    <DataAnnotationsValidator/>\r\n    <ValidationSummary/>\r\n\r\n    <div class=\"mb-3\">\r\n        <label for=\"string\" class=\"form-label\">String</label>\r\n        <InputSelect id=\"string\" @bind-Value=\"_dummy.StringProp\" class=\"form-select\">\r\n            <option value=\"A\">A</option>\r\n            <option value=\"B\">B</option>\r\n            <option value=\"C\">C</option>\r\n        </InputSelect>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n        <label for=\"int\" class=\"form-label\">Integer</label>\r\n        <InputSelect id=\"int\" @bind-Value=\"_dummy.IntProp\" class=\"form-select\">\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n        </InputSelect>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary\">Start</button>\r\n</EditForm>\r\n\r\n@code {\r\n    readonly Dummy _dummy = new();\r\n\r\n    private void TestAsync()\r\n    {\r\n        Console.WriteLine(\"Object state: \" + JsonConvert.SerializeObject(_dummy));\r\n    }\r\n\r\n    class Dummy\r\n    {\r\n        public string? StringProp { get; set; }\r\n        public int IntProp { get; set; }\r\n    }\r\n\r\n}\r\n```\r\n\r\nHere is how it looks like in a web browser:\r\n\r\n![image](https://user-images.githubusercontent.com/6372824/163680842-698615f1-e3e2-4867-89da-330844f01181.png)\r\n\r\nAs we can see, if property is nullable, then Blazor will set the first option as selected. When we submit this form, the actual value of that property will not be the value of the selected option, it will be null.\r\n\n\n### Expected Behavior\n\nWhen we bind InputSelect to nullable property, it should not select any option by default. The behavior should be the same as with non-nullable properties\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/41222","RelatedDescription":"Open issue \"Blazor InputSelect sets wrong selected Option\" (#41222)"},{"Id":"1206137876","IsPullRequest":false,"CreatedAt":"2022-04-16T15:15:49","Actor":"kzhui125","Number":"41221","RawContent":null,"Title":"Please use net50 target dll instead of .NETStandard dll in .net runtime shared dlls","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI use Visual Studio 2022 and C++ cli and .net 5. (I will use .net 6).\r\n\r\nBecause C++ cli doesn't support mixed dll type, and it can't use .NET Standard dlls.\r\n\r\nI find that there are many  .NET Standard dlls in runtime shared dlls, such as `Microsoft.Extensions.Hosting.Abstractions.dll` and `Microsoft.Extensions.Hosting.dll`.\r\n\r\nSo my application doesn't work!!!!!!!! (my C++ clr application reference .NET 5 dll which use Grpc.AspNetCore and Grpc.AspNetCore.Web)\r\n\r\n<img width=\"852\" alt=\"111\" src=\"https://user-images.githubusercontent.com/11925432/163680308-86175377-92d9-4fe0-92a5-f8a5b5caf3f5.png\">\r\n\r\n \r\n\r\n### Expected Behavior\r\n\r\nC++ clr reference .Net 5 dll will work.\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/41221","RelatedDescription":"Open issue \"Please use net50 target dll instead of .NETStandard dll in .net runtime shared dlls\" (#41221)"},{"Id":"1206133224","IsPullRequest":false,"CreatedAt":"2022-04-16T15:07:25","Actor":"ShreyasJejurkar","Number":"41220","RawContent":null,"Title":"Hotreload does not show updated value from ViewBag","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nAs the title hints, let's say I am setting a `ViewBag` value in controller action and returning it to the user in JSON form, while debugging in VS, if I change the value, then when calling the action again, it doesn't return the updated value instead I get an exception like the below. \r\n\r\n![image](https://user-images.githubusercontent.com/17148381/163679817-36e92447-ee41-47b2-a1cb-ca9ced1dd4fc.png)\r\n\n\n### Expected Behavior\n\nI should see an updated value on the page the instead of the exception. \n\n### Steps To Reproduce\n\nIt's a simple repro. \r\nCreate action and return ViewBag value. The first time it will return the value, then change the value and then hot reload and hit the same action again. You will receive the exception. \r\n\r\n![image](https://user-images.githubusercontent.com/17148381/163680138-8d943cff-5a54-4dfc-ad00-37fef9960135.png)\r\n\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n7.0.100-preview.1.22110.4\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/41220","RelatedDescription":"Open issue \"Hotreload does not show updated value from ViewBag\" (#41220)"},{"Id":"1206097956","IsPullRequest":true,"CreatedAt":"2022-04-16T13:44:48","Actor":"dotnet-maestro[bot]","Number":"41218","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20220415.7\r\n- **Date Produced**: April 16, 2022 7:53:38 AM UTC\r\n- **Commit**: 2d4f2d0c8f60d5f49e39f3ddbe1824648ee2b306\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Net.Http.Json**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.IO.Pipelines**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Threading.Channels**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-preview.4.22214.7 to 7.0.0-preview.4.22215.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/895715e...2d4f2d0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/41218","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#41218)"},{"Id":"1205841637","IsPullRequest":true,"CreatedAt":"2022-04-15T22:55:15","Actor":"dotnet-maestro[bot]","Number":"41214","RawContent":null,"Title":"[main] Update dependencies from dotnet/efcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 8ce5251e-8269-419d-3b2a-08d8b8050dda\r\n- **Build**: 20220415.1\r\n- **Date Produced**: April 15, 2022 7:13:18 PM UTC\r\n- **Commit**: 17f802a9367e8146e030a82f4944cedca26ac23e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **dotnet-ef**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-preview.4.22214.3 to 7.0.0-preview.4.22215.1][1]\r\n\r\n[1]: https://github.com/dotnet/efcore/compare/1e194c0...17f802a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/41214","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/efcore\" (#41214)"},{"Id":"1205923042","IsPullRequest":false,"CreatedAt":"2022-04-15T22:23:55","Actor":"chappleg","Number":"41216","RawContent":null,"Title":"SNI configuration doesn't allow multiple hostnames of same length","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen I try to specify multiple wildcard hostnames in the SNI configuration following [these instructions](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel/endpoints?view=aspnetcore-6.0#sni-in-configuration), an exception is thrown if two hostnames have the same number of characters. \r\n\r\nThe documentation says nothing about a hostname length restriction, so I am guessing that this is a bug. \n\n### Expected Behavior\n\nServer should start up correctly and not throw an exception\n\n### Steps To Reproduce\n\nCreate a new project:\r\n``` Powershell\r\ndotnet new web\r\n```\r\n\r\nUpdate appsettings.json to be the following:\r\n```json\r\n{\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Information\",\r\n      \"Microsoft.AspNetCore\": \"Warning\"\r\n    }\r\n  },\r\n  \"AllowedHosts\": \"*\",\r\n  \"Kestrel\": {\r\n    \"Endpoints\": {\r\n      \"Https\": {\r\n        \"Url\": \"https://+:443\",\r\n        \"Sni\": {\r\n          \"*.abc.com\": {\r\n            \"Certificate\": {\r\n              \"Location\": \"CurrentUser\",\r\n              \"Store\": \"My\",\r\n              \"Subject\": \"*.abc.com\",\r\n              \"AllowInvalid\": true\r\n            }\r\n          },\r\n          \"*.def.com\": {\r\n            \"Certificate\": {\r\n              \"Location\": \"CurrentUser\",\r\n              \"Store\": \"My\",\r\n              \"Subject\": \"*.def.com\",\r\n              \"AllowInvalid\": true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nCreate self signed certificates:\r\n``` Powershell\r\nNew-SelfSignedCertificate -CertStoreLocation Cert:\\CurrentUser\\My\\ -DnsName \"*.abc.com\"\r\nNew-SelfSignedCertificate -CertStoreLocation Cert:\\CurrentUser\\My\\ -DnsName \"*.def.com\"\r\n```\r\n\r\nRun the project:\r\n``` Powershell\r\ndotnet run\r\n```\r\n\r\n\n\n### Exceptions (if any)\n\n```\r\nUnhandled exception. System.ArgumentException: An item with the same key has already been added. Key: .def.com (Parameter 'key')\r\n   at System.Collections.Generic.SortedList`2.Add(TKey key, TValue value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.SniOptionsSelector..ctor(String endpointName, Dictionary`2 sniDictionary, ICertificateConfigLoader certifcateConfigLoader, HttpsConnectionAdapterOptions fallbackHttpsOptions, HttpProtocols fallbackHttpProtocols, ILogger`1 logger)\r\n   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()\r\n   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Load()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)\r\n   at Microsoft.AspNetCore.Builder.WebApplication.Run(String url)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\chappleg\\temp\\snitest\\Program.cs:line 8\r\n```\n\n### .NET Version\n\n6.0.202\n\n### Anything else?\n\nI am pretty sure that the bug is in this comparer: https://github.com/dotnet/aspnetcore/blob/main/src/Servers/Kestrel/Core/src/Internal/SniOptionsSelector.cs#L213\r\n\r\nSince the sorted list is using this comparer to sort by length, and since sorted lists don't allow duplicate values, the list is treating any two strings of the same length as the same string, and so it throws an exception.","Url":"https://github.com/dotnet/aspnetcore/issues/41216","RelatedDescription":"Open issue \"SNI configuration doesn't allow multiple hostnames of same length\" (#41216)"},{"Id":"1205790626","IsPullRequest":false,"CreatedAt":"2022-04-15T18:43:56","Actor":"BrennanConroy","Number":"41213","RawContent":null,"Title":"Route handler filters don't handle all return types","State":"open","Body":"Filters currently wrap the user delegate in a `ValueTask<object?>` before handing off the function to the normal route handling logic. This causes issues with any non object returning methods like `void`, `Task`, `Task<T>`, etc. returning methods.\r\n\r\n### Void returning method with no-op filter:\r\n```csharp\r\nvoid Method() { }\r\napp.MapGet(\"/method\", Method).AddFilter((c, n) => n(c));\r\n```\r\nOutput:\r\n> ArgumentException: Expression of type 'System.Void' cannot be used for parameter of type 'System.Object' of method 'System.Threading.Tasks.ValueTask`1[System.Object] WrapObjectAsValueTask(System.Object)' (Parameter 'arg0')\r\n\r\n### Task returning method with no-op filter:\r\n```csharp\r\nTask Method() => Task.CompletedTask;\r\napp.MapGet(\"/method\", Method).AddFilter((c, n) => n(c));\r\n```\r\nOutput:\r\n> {\"result\":{},\"id\":54,\"exception\":null,\"status\":5,\"isCanceled\":false,\"isCompleted\":true,\"isCompletedSuccessfully\":true,\"creationOptions\":0,\"asyncState\":null,\"isFaulted\":false}","Url":"https://github.com/dotnet/aspnetcore/issues/41213","RelatedDescription":"Open issue \"Route handler filters don't handle all return types\" (#41213)"},{"Id":"1205719799","IsPullRequest":true,"CreatedAt":"2022-04-15T18:31:38","Actor":"Tratcher","Number":"41208","RawContent":null,"Title":"Quarantine ConfigurationChangeCanBeIgnoredInProcess","State":"closed","Body":"#41207","Url":"https://github.com/dotnet/aspnetcore/pull/41208","RelatedDescription":"Closed or merged PR \"Quarantine ConfigurationChangeCanBeIgnoredInProcess\" (#41208)"},{"Id":"1205749217","IsPullRequest":false,"CreatedAt":"2022-04-15T18:10:09","Actor":"vsfeedback","Number":"41209","RawContent":null,"Title":"Blazor Constructor Dependency Injection Stopped Working","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Blazor-Constructor-Dependency-Injection-/10013082)._\n\n---\nI had a working project which was using Blazor and dependency injection. At some point the dependency injection stopped working and I am unable to get it to work in any project. The main page just fails and shows that there was an unhandled exception. When I remove the Dependency, The page loads fine.\n\nIt seems that even the Injection of the HttpClient into TestService is not being injected properly. \n\nIf I Change the injection on the Index page to an \"@inject\" or an \"[Inject]\" and manually pass in the HttpClient for the TestService, the injection of TestService Into Index Page seems to work. But its not possible to use those injection methods to inject into a service like TestService.\n\nEssentially, Dependency Injection into a Constructor has stopped working, suddenly (4/12/22). It's worth noting that I tried to make a Blazor Project in VS2019 on .Net5 and encountered the same issue as in VS2022 on .Net 6.\n\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add(\"#app\");\n\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n\n            builder.Services.AddTransient();\n\n            builder.Services.AddTransient();\n\n            await builder.Build().RunAsync();\n        }\n    }\n\n    public class TestService\n    {\n        private HttpClient Http { get; set; }\n        public TestService(HttpClient Http)\n        {\n            this.Http = Http;\n        }\n    }\nIndex:\n{\n\n    @page \"/\"\n\n    <h1>Hello, world! </h1>\n\n    Welcome to your new app.\n\n\n\n    @code\n    {\n        public Index(TestService test)\n        {\n\n        }\n    }\n}\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/14/2022, 03:32 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/aspnetcore/issues/41209","RelatedDescription":"Closed issue \"Blazor Constructor Dependency Injection Stopped Working\" (#41209)"},{"Id":"1205755821","IsPullRequest":false,"CreatedAt":"2022-04-15T17:44:56","Actor":"vsfeedback","Number":"41211","RawContent":null,"Title":"POST 405 (Method Not Allowed) error on Azure using Blazor, but everything works on localhost","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/POST-405-Method-Not-Allowed-error-on-A/10011593)._\n\n---\nHello, I just finished my little project with **.NET 6, Blazor** on **Visual Studio 2022**, and everything works just fine on **localhost**, but when I published it on **Azure**, and I try to register again on my app, I'm receiving this error in the console:\n\n\n```\nPOST https://domasjonaitis.azurewebsites.net/api/auth/register 405 (Method Not Allowed)\n\ncrit: Microsoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]\n      Unhandled exception rendering component: ExpectedStartOfValueNotFound, T Path: $ | LineNumber: 0 | BytePositionInLine: 0.\nSystem.Text.Json.JsonException: ExpectedStartOfValueNotFound, T Path: $ | LineNumber: 0 | BytePositionInLine: 0.\n ---> System.Text.Json.JsonReaderException: ExpectedStartOfValueNotFound, T LineNumber: 0 | BytePositionInLine: 0.\n   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& , ExceptionResource , Byte , ReadOnlySpan`1 )\n   at System.Text.Json.Utf8JsonReader.ConsumeValue(Byte )\n   at System.Text.Json.Utf8JsonReader.ReadFirstToken(Byte )\n   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()\n   at System.Text.Json.Utf8JsonReader.Read()\n   at System.Text.Json.Serialization.JsonConverter`1[[BlazorApp.Shared.ServiceResponse`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], BlazorApp.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].ReadCore(Utf8JsonReader& , JsonSerializerOptions , ReadStack& )\n   Exception_EndOfInnerExceptionStack\n   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& , JsonReaderException )\n   at System.Text.Json.Serialization.JsonConverter`1[[BlazorApp.Shared.ServiceResponse`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], BlazorApp.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].ReadCore(Utf8JsonReader& , JsonSerializerOptions , ReadStack& )\n   at System.Text.Json.JsonSerializer.ReadCore[ServiceResponse`1](JsonConverter , Utf8JsonReader& , JsonSerializerOptions , ReadStack& )\n   at System.Text.Json.JsonSerializer.ReadCore[ServiceResponse`1](JsonReaderState& , Boolean , ReadOnlySpan`1 , JsonSerializerOptions , ReadStack& , JsonConverter )\n   at System.Text.Json.JsonSerializer.ContinueDeserialize[ServiceResponse`1](ReadBufferState& , JsonReaderState& , ReadStack& , JsonConverter , JsonSerializerOptions )\n   at System.Text.Json.JsonSerializer.d__65`1[[BlazorApp.Shared.ServiceResponse`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], BlazorApp.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].MoveNext()\n   at System.Net.Http.Json.HttpContentJsonExtensions.d__4`1[[BlazorApp.Shared.ServiceResponse`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], BlazorApp.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].MoveNext()\n   at BlazorApp.Client.Services.AuthService.AuthService.Register(UserRegister request)\n   at BlazorApp.Client.Pages.Register.HandleRegistration()\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\n   at Microsoft.AspNetCore.Components.Forms.EditForm.HandleSubmitAsync()\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task , ComponentState )\n```\n\nAnd the same happens if I try to login with an existing (which is [Redacted]@[Redacted] 123123).\n\nI followed through many similar threads that I found, but none of them worked.\n\nYou can find my project with all the files included on my GitHub page: https://github.com/domasjohn/BlazorApp\n\nAnd here is my azure website, that you can check out by yourself: https://domasjonaitis.azurewebsites.net/\n\nAlso, I'm a total new beginner, so a simple explanation with the detailed instructions would be appreciated \n\nThanks.\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/13/2022, 02:48 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/aspnetcore/issues/41211","RelatedDescription":"Closed issue \"POST 405 (Method Not Allowed) error on Azure using Blazor, but everything works on localhost\" (#41211)"},{"Id":"1205751594","IsPullRequest":false,"CreatedAt":"2022-04-15T17:36:57","Actor":"vsfeedback","Number":"41210","RawContent":null,"Title":"Cannot build the project which reference to another project","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Cannot-build-the-project-which-reference/10013045)._\n\n---\n[severity:I'm unable to use this version] [regression] [worked-in:Visual Studio 2022 17.2.0 Preview 3.0]\r\nI am working with Visual Studio 2022 17.2.0 Preview 3.0.\nI have created Blazor library in one solution and then open the second new Blazor project, add existing library and it cannot build it. \n\nWhat is strange that when I will try to run practically same app inside of same solution as library and it works fine and build properly. \n\nI have tried to clean projects, rebuild, delete manually bin and obj (during closed VS and open again) and stilll nothing. It is hard to describe here are some pictures:\n\nFirst window with full solution including library VEBlazor and its dependend project VEDriversLite. Here it builds ok:\n\n![image.png](https://aka.ms/dc/image?name=B34ee80f7224a46f185abf7edd490925d637854824441987624_20220413-173402-image.png&tid=34ee80f7224a46f185abf7edd490925d637854824441987624)\n\n\nHere is the second window with Blazor WASM and connected existing project VEBlazor. \n\n![image.png](https://aka.ms/dc/image?name=Bf8124126c59e4674af4afc89a00f0eb0637854825107534281_20220413-173509-image.png&tid=f8124126c59e4674af4afc89a00f0eb0637854825107534281)\n\nEven if I will prebuild it in the first window and it pass, then second window will build it again and fail. Maybe I am missing something, but dont know. before install of update it worked fine, so maybe it is something about it. If you want we can call and you can download some logs from me.\n\nThanks for help.\n\nTomas\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/14/2022, 03:32 AM: \n\n(private comment, text removed)\n#### Tomáš Svoboda on 4/14/2022, 06:21 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/aspnetcore/issues/41210","RelatedDescription":"Open issue \"Cannot build the project which reference to another project\" (#41210)"},{"Id":"1205115182","IsPullRequest":true,"CreatedAt":"2022-04-15T17:10:09","Actor":"dotnet-maestro[bot]","Number":"41198","RawContent":null,"Title":"[main] Update dependencies from dotnet/efcore dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n## From https://github.com/dotnet/efcore\r\n- **Subscription**: 8ce5251e-8269-419d-3b2a-08d8b8050dda\r\n- **Build**: 20220414.3\r\n- **Date Produced**: April 15, 2022 2:52:49 AM UTC\r\n- **Commit**: 1e194c07afd4613413870d983da1a96bbde1096a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.EntityFrameworkCore.Tools**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **dotnet-ef**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **Microsoft.EntityFrameworkCore**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **Microsoft.EntityFrameworkCore.SqlServer**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **Microsoft.EntityFrameworkCore.InMemory**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **Microsoft.EntityFrameworkCore.Relational**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **Microsoft.EntityFrameworkCore.Sqlite**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n  - **Microsoft.EntityFrameworkCore.Design**: [from 7.0.0-preview.4.22211.2 to 7.0.0-preview.4.22214.3][3]\r\n\r\n[3]: https://github.com/dotnet/efcore/compare/13c3688...1e194c0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:8ce5251e-8269-419d-3b2a-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20220414.7\r\n- **Date Produced**: April 15, 2022 9:00:25 AM UTC\r\n- **Commit**: 895715e90dba57ce8f1d7afa4511cd6d21d3cfc2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Net.Http.Json**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.IO.Pipelines**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Threading.Channels**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-preview.4.22213.16 to 7.0.0-preview.4.22214.7][4]\r\n\r\n[4]: https://github.com/dotnet/runtime/compare/1a296c0...895715e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/41198","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/efcore dotnet/runtime\" (#41198)"},{"Id":"1205718907","IsPullRequest":false,"CreatedAt":"2022-04-15T16:47:53","Actor":"Tratcher","Number":"41207","RawContent":null,"Title":"Quarantine ConfigurationChangeCanBeIgnoredInProcess","State":"open","Body":"<!--\r\nNote this issue template is specifically for failing tests within the dotnet/aspnetcore repo.\r\n-->\r\n\r\n## Failing Test(s)\r\n\r\n- Microsoft.AspNetCore.Server.IIS.NewHandler.FunctionalTests.ShutdownTests.ConfigurationChangeCanBeIgnoredInProcess\r\n\r\n## Error Message\r\n\r\n<!--\r\nProvide the error message associated with the test failure, if applicable.\r\n-->\r\n\r\n```text\r\nSystem.InvalidOperationException : Didn't get response that satisfies predicate after 10 retries\r\n```\r\n\r\n## Stacktrace\r\n\r\n<details>\r\n<!--\r\nProvide the stack trace associated with the test failure, if applicable.\r\n-->\r\n\r\n```text\r\n   at Microsoft.AspNetCore.Server.IIS.FunctionalTests.Helpers.RetryRequestAsync(HttpClient client, String uri, Func`2 predicate) in /_/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/Helpers.cs:line 128\r\n   at Microsoft.AspNetCore.Server.IIS.NewHandler.FunctionalTests.ShutdownTests.ConfigurationChangeCanBeIgnoredInProcess() in /_/src/Servers/IIS/IIS/test/Common.LongTests/ShutdownTests.cs:line 424\r\n--- End of stack trace from previous location ---\r\n```\r\n</details>\r\n\r\n\r\n## Logs\r\n\r\n<details>\r\n<!--\r\nProvide the (helix) logs associated with the test failure, if applicable.\r\n-->\r\n\r\n```text\r\n\r\n```\r\n[ShutdownTests_ConfigurationChangeCanBeIgnoredInProcess.log](https://github.com/dotnet/aspnetcore/files/8497012/ShutdownTests_ConfigurationChangeCanBeIgnoredInProcess.log)\r\n\r\n</details>\r\n\r\n## Build\r\n\r\n<!--\r\nProvide a link to the build where the test failure occurred.\r\n-->\r\n\r\nTwo consecutive failures on Windows.11.Amd64.ClientPre.Open:\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1719615&view=ms.vss-test-web.build-test-results-tab&runId=46697984&resultId=121334&paneView=debug\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1718864&view=ms.vss-test-web.build-test-results-tab&runId=46682882&resultId=111308&paneView=debug","Url":"https://github.com/dotnet/aspnetcore/issues/41207","RelatedDescription":"Open issue \"Quarantine ConfigurationChangeCanBeIgnoredInProcess\" (#41207)"},{"Id":"1205685243","IsPullRequest":false,"CreatedAt":"2022-04-15T16:01:54","Actor":"Tomius","Number":"41206","RawContent":null,"Title":"Kestrel uses exception for control flow when handling the `\"Connection\": \"close\"` header.","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen Kestrel receives an http request with the `\"Connection\": \"close\"` header, then during the process of handling it a `SocketException` or `ObjectDisposedException` will be thrown and then caught. While the request will be handled correctly (at least I believe so), the exception in the hot path is undesirable, because:\r\n* Throwing and catching the exception is definitely slower than inspecting the error code.\r\n* If the application is recording a list of all the exceptions happening in a websever, this creates a significant noise (in my company there are 100 times as many exceptions coming from this source than all the other exception sources combined). And the recorded exception is hard understand or to link with the real cause.\r\n* The thrown exception and stack trace is not always the same:\r\nOn Windows it's usually:\r\n```\r\nSystem.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitableEventArgs.<GetResult>g__ThrowSocketException|5_0(SocketError e)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitableEventArgs.GetResult(Int16 token)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoReceive()\r\n```\r\nIn linux it's usually:\r\n```\r\nSystem.Net.Sockets.SocketException (125): Operation canceled at\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitableEventArgs.<GetResult>g__ThrowSocketException|7_0(SocketError e) at\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitableEventArgs.GetResult() at\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.ProcessReceives() at\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoReceive()\r\n```\r\nBut sometimes the following exception is thrown instead. It happens about 5% of the times in production in my setup. Interestingly if I put a breakpoint into `SocketAsyncEventArgs.SocketError.get`, this exception will be thrown instead of the SocketException 100% of the times.\r\n```\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'System.Net.Sockets.Socket'.\r\n   at System.Net.Sockets.Socket.ThrowObjectDisposedException()\r\n   at System.Net.Sockets.Socket.ReceiveAsync(SocketAsyncEventArgs e, CancellationToken cancellationToken)\r\n   at System.Net.Sockets.Socket.ReceiveAsync(SocketAsyncEventArgs e)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketReceiver.ReceiveAsync(Socket socket, Memory`1 buffer)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoReceive()\r\n```\r\n* It's a frequent use-case, for consul http health checks, that always use the `\"Connection\": \"close\"` header. This means that in my company, 100% of our services in production are affected by this, with an average of 100 exceptions / application / minute.\n\n### Expected Behavior\n\n_No response_\n\n### Steps To Reproduce\n\n- Create a hello world Kestrel app with `dotnet new webapp`\r\n    - (Make sure it uses Kestrel and not HttpSys, add `.UseKestrel()` if necesssary)\r\n- Add a breakpoint into `SocketAwaitableEventArgs.GetResult.ThrowSocketException`\r\n- Write a simple client:\r\n```\r\nusing HttpClient http = new HttpClient();\r\nhttp.DefaultRequestHeaders.Connection.Add(\"close\");\r\nawait http.GetAsync(url);\r\n```\r\n\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\nI could reproduce it with asp net core 2.1, 3.1 and 6..0\n\n### Anything else?\n\nWhere is the exception coming from?\r\n==========================\r\n\r\nI know that the exception is thrown here:\r\nhttps://github.com/dotnet/aspnetcore/blob/c85baf8db0c72ae8e68643029d514b2e737c9fae/src/Servers/Kestrel/Transport.Sockets/src/Internal/SocketAwaitableEventArgs.cs#L49\r\n\r\nAnd it is caught here:\r\nhttps://github.com/dotnet/aspnetcore/blob/4931b1929188349b438575803bcec889a9a7d190/src/Servers/Kestrel/Transport.Sockets/src/Internal/SocketConnection.cs#L198\r\n\r\nBut I wasn't able to figure out where the `SocketError` inside the `SocketAwaitableEventArgs` is set. ","Url":"https://github.com/dotnet/aspnetcore/issues/41206","RelatedDescription":"Open issue \"Kestrel uses exception for control flow when handling the `\"Connection\": \"close\"` header.\" (#41206)"},{"Id":"1205591320","IsPullRequest":false,"CreatedAt":"2022-04-15T13:44:58","Actor":"lambdageek","Number":"41205","RawContent":null,"Title":"No platform compatability analyzer warnings in Razor @code sections","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nC# code in .razor files (in `@code` sections or elsewhere) should be analyzed by the platform compatibility analyzer in order to spot uses of APIs that are unsupported on the browser.\r\n\r\nCurrently, in a blazorwasm project, only .cs files (which may be partial classes for Razor components) are analyzed and the CA1416 warnings are produced.\n\n### Expected Behavior\n\nCA1416 warnings are produced for `@code` sections in .razor files:\r\n\r\n```\r\nwarning CA1416: This call site is reachable on: 'browser'. 'Thread.Start()' is unsupported on: 'browser'. [/Users/alklig/work/multi-blazy/multi-blazy.csproj]\r\n```\r\n\r\n\n\n### Steps To Reproduce\n\n1. Install a .NET 7  preview SDK or .NET 6\r\n2. `dotnet new blazorwasm`\r\n3. edit `Counter.razor` and change `IncrementCount` to the following:\r\n   ```csharp\r\n     private void IncrementCount() {\r\n         new Thread(() => { Console.WriteLine(\"hello\"); }).Start();\r\n         currentCount++;\r\n     }\r\n   ```\r\n4. `dotnet build`\r\n\r\nExpected result: CA1416 warning about use of `Thread.Start()`.\r\n\r\nActual result: no warning.\r\n\r\n\r\n---\r\n\r\nNow add `new Thread(() => { Console.WriteLine (\"hi\"); }).Start()` somewhere in `Program.cs` and rebuild.  Note that a CA1416 is generated:\r\n```\r\n/Users/alklig/work/multi-blazy/Program.cs(12,1): warning CA1416: This call site is reachable on all platforms. 'Thread.Start()' is unsupported on: 'browser'. [/Users/alklig/work/multi-blazy/multi-blazy.csproj]\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n7.0.100-preview.2.22153.17\n\n### Anything else?\n\nAlso tested with .NET 6.0.x, same behavior","Url":"https://github.com/dotnet/aspnetcore/issues/41205","RelatedDescription":"Open issue \"No platform compatability analyzer warnings in Razor @code sections\" (#41205)"},{"Id":"1205530221","IsPullRequest":false,"CreatedAt":"2022-04-15T12:12:03","Actor":"younussenn","Number":"41204","RawContent":null,"Title":"Asp.Net Core Web App + Background Service + Web Api In Same Project?","State":"open","Body":"Hello,\r\n\r\nI am developing a web application with **Asp.Net Core 5.0**. I want to run a background service on this application. I will open the TCP Server connection on the background service and the background service should stay open in the background until the host is stopped. I also need to add an API controller. We will receive API requests from other applications.\r\nWhat kind of structure should I create? Or is such a thing possible?\r\nI tried to explain the system I wanted to create in the attached diagram.\r\n\r\n![Structure_template](https://user-images.githubusercontent.com/46409298/163569054-3a31072b-d289-4163-b8e9-3b0f202b7dce.png)\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/41204","RelatedDescription":"Open issue \"Asp.Net Core Web App + Background Service + Web Api In Same Project?\" (#41204)"},{"Id":"1205932663","IsPullRequest":false,"CreatedAt":"2022-04-15T11:38:48","Actor":"UnAnalogFG","Number":"41217","RawContent":null,"Title":"Double setting of Bound Variable when using EventCallback Async Await with HttpClient call","State":"open","Body":"### Description\r\n\r\nI was trying to fetch some data via HttpClient on a Button Click and setting a bound Variable.\r\nwhen I realised that using the HttpClient leads to setting the a bound variable twice. \r\nOnce with the old object, once with the new one.\r\nI was suspecting the await to wait for the result of the Http-Call before the framework fires the 'StateHasChanged' Event for the 'OnClick' EventCallback.\r\n\r\n\r\n### (Im-)Possible workaround \r\nEven if I do an early out on the setter in the sub component based on an object-comparison, the OnSetParameter-Event is nevertheless fired twice, which is not necessary.\r\n\r\n### Some Code\r\n```\r\n<!-- the Page -->\r\n<!-- snippet-->\r\n\r\n@page \"/\"\r\n@inject HttpClient Http\r\n\r\n<button @onclick=\"ClickHttpAsync\"> Do </button>\r\n<DataSubView Data=\"Data\"/>\r\n\r\n@code{\r\n\r\nprivate X Data {get;set;}\r\n\r\n// calls the setter 2times\r\npublic async Task ClickHttpAsync()\r\n{\r\n    var newData = await Http.GetAsync(\"http://XXX\");\r\n    Data = newData;\r\n}\r\n\r\n// set only once\r\npublic async Task ClickAsync()\r\n{\r\n    await InvokeAsync(()=>{Thread.Sleep(1000);});\r\n    Data = new X();\r\n}\r\n\r\n// sets only once\r\npublic void Click()\r\n{\r\n    Data = new X();\r\n}\r\n```\r\n```\r\n<!-- the DataSubView Component -->\r\n<!-- snippet -->\r\n\r\n@code\r\n{\r\n    private X data;\r\n\r\n    [Parameter]\r\n    public X Data\r\n    {\r\n        get=>data;\r\n        set\r\n        {\r\n            if (value == data) Console.WriteLine (\"Old Data Re-Set\");\r\n            data = value;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Demo Repo\r\nI made a small Repo to show the behaviour\r\n\r\nhttps://github.com/UnAnalogFG/BlazorWasmAsyncEventBug\r\n\r\n### Expectation\r\nI would expect all ClickEvents to behave the same, calling the setter only once as the await should \"synchronize\" the async call.\r\nAs it does on the one that does not use the HttpClient\r\n\r\n### Configuration\r\n.Net Core 6.04, Blazow WASM, Windows 10, X64, Chrome, Edge, Firefox\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/41217","RelatedDescription":"Open issue \"Double setting of Bound Variable when using EventCallback Async Await with HttpClient call\" (#41217)"},{"Id":"1205131358","IsPullRequest":true,"CreatedAt":"2022-04-15T08:48:42","Actor":"JamesNK","Number":"41199","RawContent":null,"Title":"Add SocketsHttpHandler logging to gRPC interop tests","State":"closed","Body":"Provide more information from client HTTP stack on failures.","Url":"https://github.com/dotnet/aspnetcore/pull/41199","RelatedDescription":"Closed or merged PR \"Add SocketsHttpHandler logging to gRPC interop tests\" (#41199)"},{"Id":"1205077832","IsPullRequest":true,"CreatedAt":"2022-04-14T22:39:43","Actor":"captainsafia","Number":"41197","RawContent":null,"Title":"Add Microsoft.AspNetCore.OpenApi package","State":"open","Body":"Closes https://github.com/dotnet/aspnetcore/issues/40676.","Url":"https://github.com/dotnet/aspnetcore/pull/41197","RelatedDescription":"Open PR \"Add Microsoft.AspNetCore.OpenApi package\" (#41197)"},{"Id":"1205063977","IsPullRequest":true,"CreatedAt":"2022-04-14T22:23:42","Actor":"dependabot[bot]","Number":"41196","RawContent":null,"Title":"Bump async from 2.6.3 to 2.6.4 in /src/Components/test/E2ETest","State":"open","Body":"Bumps [async](https://github.com/caolan/async) from 2.6.3 to 2.6.4.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md\">async's changelog</a>.</em></p>\n<blockquote>\n<h1>v2.6.4</h1>\n<ul>\n<li>Fix potential prototype pollution exploit (<a href=\"https://github-redirect.dependabot.com/caolan/async/issues/1828\">#1828</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/caolan/async/commit/c6bdaca4f9175c14fc655d3783c6af6a883e6514\"><code>c6bdaca</code></a> Version 2.6.4</li>\n<li><a href=\"https://github.com/caolan/async/commit/8870da9d5022bab310413041b4079e10db3980b7\"><code>8870da9</code></a> Update built files</li>\n<li><a href=\"https://github.com/caolan/async/commit/4df6754ef4e96a742956df8782fee27242a2ea12\"><code>4df6754</code></a> update changelog</li>\n<li><a href=\"https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\"><code>8f7f903</code></a> Fix prototype pollution vulnerability (<a href=\"https://github-redirect.dependabot.com/caolan/async/issues/1828\">#1828</a>)</li>\n<li>See full diff in <a href=\"https://github.com/caolan/async/compare/v2.6.3...v2.6.4\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~hargasinski\">hargasinski</a>, a new releaser for async since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=async&package-manager=npm_and_yarn&previous-version=2.6.3&new-version=2.6.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/dotnet/aspnetcore/network/alerts).\n\n</details>","Url":"https://github.com/dotnet/aspnetcore/pull/41196","RelatedDescription":"Open PR \"Bump async from 2.6.3 to 2.6.4 in /src/Components/test/E2ETest\" (#41196)"},{"Id":"1204991365","IsPullRequest":false,"CreatedAt":"2022-04-14T21:15:13","Actor":"srpeirce","Number":"41195","RawContent":null,"Title":"Breaking Change in .Net 6 - WebApplicationFactory Bug with MVC","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nThere is a bug when running WebApplicationFactory tests that it looks for the `wwwroot` directory in the directory where the application was built.\r\n\r\nThis means that tests pass when running via an IDE.\r\n\r\n## Why is this a problem?\r\n\r\nWe have some tests which run against Azure resources. The tests are copied into a container, meaning we can set `Managed Identities` to the pod (as opposed to giving excessive permissions to pipeline).\r\n\r\nThe tests running inside the pod are looking for the build directory, which does not exist.\r\n\r\n> This is a breaking change since upgrading from .Net 5 to .Net 6.\n\n### Expected Behavior\n\nThe tests should pass and should not be dependent on the original source directory being present.\n\n### Steps To Reproduce\n\nWe can recreate the problem more simply without needing to use Docker.\r\n\r\n1. Clone this repo: https://github.com/srpeirce/Net6WebApplicationFactoryBug\r\n2. Build the solution. \r\n```\r\ndotnet build -c Release\r\n```\r\n3. Copy files from `.\\Net6WebApplicationFactoryBug\\SteveTest.Web.IntegrationTests\\bin\\Release\\net6.0\\` to a new directory, for example `c:\\_temp\\WafTest`\r\n4. Navigate to new directory in terminal `cd C:\\_Temp\\WafTest\\`\r\n5. Run the Tests, and it will PASS\r\n```\r\ndotnet test .\\SteveTest.Web.IntegrationTests.dll\r\n```\r\n6. Now rename the original source directory so that the path is different, e.g. renaming `.\\Net6WebApplicationFactoryBug` to `.\\Net6WebApplicationFactoryBug2`\r\n7. Navigate to new directory in terminal `cd C:\\_Temp\\WafTest\\`\r\n8. Run the Tests, and it will FAIL\r\n```\r\ndotnet test .\\SteveTest.Web.IntegrationTests.dll\r\n```\r\n\r\n\n\n### Exceptions (if any)\n\n```\r\nPS C:\\_Temp\\WafTest> dotnet test .\\SteveTest.Web.IntegrationTests.dll\r\nMicrosoft (R) Test Execution Command Line Tool Version 17.1.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\nStarting test execution, please wait...\r\nA total of 1 test files matched the specified pattern.\r\n[xUnit.net 00:00:02.10]     SteveTest.Web.IntegrationTests.UnitTest1.Test1 [FAIL]\r\n  Failed SteveTest.Web.IntegrationTests.UnitTest1.Test1 [1 ms]\r\n  Error Message:\r\n   System.IO.DirectoryNotFoundException : C:\\Code\\Net6WebApplicationFactoryBug\\SteveTest.Web\\wwwroot\\\r\n  Stack Trace:\r\n     at Microsoft.Extensions.FileProviders.PhysicalFileProvider..ctor(String root, ExclusionFilters filters)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider..ctor(String root)\r\n   at Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader.<>c.<UseStaticWebAssetsCore>b__1_0(String contentRoot)\r\n   at Microsoft.AspNetCore.StaticWebAssets.ManifestStaticWebAssetFileProvider..ctor(StaticWebAssetManifest manifest, Func`2 fileProviderFactory)\r\n   at Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader.UseStaticWebAssetsCore(IWebHostEnvironment environment, Stream manifest)\r\n   at Microsoft.AspNetCore.Hosting.StaticWebAssets.StaticWebAssetsLoader.UseStaticWebAssets(IWebHostEnvironment environment, IConfiguration configuration)\r\n   at Microsoft.AspNetCore.WebHost.<>c.<ConfigureWebDefaults>b__9_0(WebHostBuilderContext ctx, IConfigurationBuilder cb)\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass9_0.<ConfigureAppConfiguration>b__0(HostBuilderContext context, IConfigurationBuilder builder)\r\n   at Microsoft.Extensions.Hosting.HostBuilder.BuildAppConfiguration()\r\n   at Microsoft.Extensions.Hosting.HostBuilder.Build()\r\n   at Program.<Main>$(String[] args) in C:\\Code\\Net6WebApplicationFactoryBug\\SteveTest.Web\\Program.cs:line 1\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.CreateHost()\r\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.<>c__DisplayClass10_0.<ResolveHostFactory>b__0(String[] args)\r\n   at Microsoft.AspNetCore.Mvc.Testing.DeferredHostBuilder.Build()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateHost(IHostBuilder builder)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.ConfigureHostBuilder(IHostBuilder hostBuilder)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureServer()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.get_Server()\r\n   at SteveTest.Web.IntegrationTests.UnitTest1..ctor(WebApplicationFactory`1 factory) in C:\\Code\\Net6WebApplicationFactoryBug\\SteveTest.Web.IntegrationTests\\UnitTest1.cs:line 15\r\n\r\nFailed!  - Failed:     1, Passed:     0, Skipped:     0, Total:     1, Duration: < 1 ms - SteveTest.Web.IntegrationTests.dll (net6.0)\r\n```\n\n### .NET Version\n\n6.0.202\n\n### Anything else?\n\n```\r\nPS C:\\_Temp\\WafTest> dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.202\r\n Commit:    f8a55617d2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22000\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.202\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.4\r\n  Commit:  be98e88c76\r\n\r\n.NET SDKs installed:\r\n  5.0.407 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/aspnetcore/issues/41195","RelatedDescription":"Open issue \"Breaking Change in .Net 6 - WebApplicationFactory Bug with MVC\" (#41195)"},{"Id":"1204933383","IsPullRequest":true,"CreatedAt":"2022-04-14T20:09:36","Actor":"wtgodbe","Number":"41194","RawContent":null,"Title":"Try new docker image","State":"open","Body":"Attempt to fix https://github.com/dotnet/aspnetcore/issues/37406","Url":"https://github.com/dotnet/aspnetcore/pull/41194","RelatedDescription":"Open PR \"Try new docker image\" (#41194)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"1190169916","IsPullRequest":false,"CreatedAt":"2022-04-01T19:03:58","Actor":"brunolins16","Number":"484","RawContent":null,"Title":"[Breaking change]: Updated empty body detection in MVC Model Binding","State":"open","Body":"### Description\r\n\r\nThe mechanism to detect an empty request `body` during the MVC Model Binding now uses the [`IHttpRequestBodyDetectionFeature.CanHaveBody`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ihttprequestbodydetectionfeature.canhavebody?view=aspnetcore-6.0#microsoft-aspnetcore-http-features-ihttprequestbodydetectionfeature-canhavebody), that is currently implemented by the following behavior:\r\n\r\n- `true` when:\r\n  - It's an `HTTP/1.x` request with a non-zero `Content-Length` or a `Transfer-Encoding: chunked` header.\r\n  - It's an `HTTP/2` request that did not set the `END_STREAM` flag on the initial headers frame.\r\n\r\n- `false` when:\r\n  - It's an `HTTP/1.x` request with no `Content-Length` or `Transfer-Encoding: chunked` header, or the `Content-Length` is `0`.\r\n  - It's an `HTTP/1.x` request with `Connection: Upgrade` (e.g. WebSockets). There is no HTTP request body for these requests and no data should be received until after the upgrade.\r\n  - It's an `HTTP/2` request that set `END_STREAM` on the initial headers frame.\r\n\r\nSince the previous behavior was a simple validation of the `Content-Length == 0`, in some scenarios when requests are not sending all needed HTTP information, could now be detected as empty request and report a failure to the client.\r\n\r\n\r\n### Version\r\n\r\n7.0.0-preview3\r\n\r\n### Previous behavior\r\n\r\n Before if you have a Controller's action that bind a parameter from body:\r\n\r\n``` csharp\r\n [HttpPost()]\r\n        public IActionResult Required([FromBody] TestClass value) => Ok(value);\r\n```\r\n\r\nAnd the client request does not include a `Content-Length` header, eg.:\r\n\r\n``` curl\r\ncurl --request POST -k -i \"[action]\" -H \"Content-Type: application/json\"\r\n```\r\n\r\nThis request will cause an internal exception during the body deserialization:\r\n\r\nEg.: When using the `System.Text.Json` input formatter\r\n``` log\r\nSystem.Text.Json.JsonException: 'The input does not contain any JSON tokens. \r\nExpected the input to start with a valid JSON token, when isFinalBlock is true. \r\nPath: $ | LineNumber: 0 | BytePositionInLine: 0.'\r\n```\r\n\r\nAlso, a response payload similar to this will be receive by the client:\r\n\r\n``` json\r\n{\r\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"traceId\": \"00-34e98b5841b88bfb5476965efd9d9c8c-5bb16bc50dfbabb7-00\",\r\n  \"errors\": {\r\n    \"$\": [\r\n+      \"The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0.\"\r\n    ],\r\n    \"value\": [\r\n      \"The value field is required.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWith the updated detection mechanism, the deserialization will not be trigger since an empty request body will be detected and only a `validation` message will be reported back to the client. Eg.:\r\n\r\n``` json\r\n{\r\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"traceId\": \"00-0f87920dc675fdfdf8d7638d3be66577-bd6bdbf32d21b714-00\",\r\n  \"errors\": {\r\n    \"\": [\r\n+      \"A non-empty request body is required.\"\r\n    ],\r\n    \"value\": [\r\n      \"The value field is required.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change is an alignment with other parts of the framework that were already using the [`IHttpRequestBodyDetectionFeature.CanHaveBody`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.features.ihttprequestbodydetectionfeature.canhavebody?view=aspnetcore-6.0#microsoft-aspnetcore-http-features-ihttprequestbodydetectionfeature-canhavebody) and also a fix to a reported issue dotnet/aspnetcore/issues/29570\r\n\r\n### Recommended action\r\n\r\nNo change is required, however, if you getting an unexpected behavior is recommended to review if your client's requests are sending the appropriated headers/information.\r\n\r\n### Affected APIs\r\n\r\nMVC Action Controllers","Url":"https://github.com/aspnet/Announcements/issues/484","RelatedDescription":"Open issue \"[Breaking change]: Updated empty body detection in MVC Model Binding\" (#484)"},{"Id":"1154726545","IsPullRequest":false,"CreatedAt":"2022-03-01T01:08:45","Actor":"pranavkm","Number":"483","RawContent":null,"Title":"[Breaking change]: Event IDs for some Microsoft.AspNetCore.Mvc.Core log messages changed","State":"open","Body":"### Description\n\nAs part of updating the Microsoft.AspNetcore.Mvc.Core assembly to use `LoggerMessageAttribute`, we discovered logger event Ids being reused within a single log category. Log IDs and names should be unique so different message types can be identified. Consequently, these have been updated to ensure that the event Ids are unique for a logger category. \n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nSome logger event IDs in Microsoft.AspNetCore.Mvc.Core were re-used within a single category.\n\n### New behavior\n\nDuplicated event ids within a single category within the Microsoft.AspNetCore.Mvc.Core assembly were updated.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs, update those references to use the new IDs.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/483","RelatedDescription":"Open issue \"[Breaking change]: Event IDs for some Microsoft.AspNetCore.Mvc.Core log messages changed\" (#483)"},{"Id":"1149914360","IsPullRequest":false,"CreatedAt":"2022-02-25T00:38:20","Actor":"pranavkm","Number":"482","RawContent":null,"Title":"[Breaking change]: Blazor components are type activated by default","State":"open","Body":"### Description\n\nStarting in .NET 7, Blazor components use [`ActivatorUtilities`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.activatorutilities) to instantiate components. This allows components to resolve parameters from a DI container using constructor injection. Constructor injection is supported in addition to property injection that is already supported via the `InjectAttribute`.\r\n\r\nFor most existing applications, this change is not discernable. However, this may be a breaking change for libraries or applications that provided non-empty constructors for components where parameters are not meant to be resolved from the DI container.\r\n\r\nFor questions or further discussion, please use https://github.com/dotnet/aspnetcore/issues/40405\n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nIn the ordinary case, components do not specify a constructor or have a parameter-less constructor and this is a non-breaking change. However, consider the following case:\r\n\r\n```C#\r\npublic class MyMultipleConstructorComponent : ComponentBase\r\n{\r\n   public MyMultipleConstructorComponent () { }\r\n\r\n   public MyMultipleConstructorComponent (int someValue) {}\r\n}\r\n```\r\n\r\nIn .NET 6 and earlier, the parameter-less constructor would be used to instantiate the component.\n\n### New behavior\n\nIn .NET 7, parameters in a component are resolved from the DI container. Consider this component:\r\n\r\n```C#\r\npublic class MyComponent : ComponentBase\r\n{\r\n   public MyComponent(IMyService myService) { ... }\r\n}\r\n```\r\n\r\nStarting in .NET 7, `IMyService` is resolved from the container while instantiating the component. Using `[InjectAttribute]` to property inject services remains unchanged.\r\n\r\nGoing back to `MyMultipleConstructorComponent` from the earlier section - in .NET 7, `ActivatorUtilities` defaults to using the constructor with the most parameters to instantiate an object. In this case, the constructor with the single `int` parameter will be attempted to be resolved from the DI container and a runtime exception will be thrown if parameters are not resolvable.   \n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nConstructor injection was a popular request from Blazor users.\n\n### Recommended action\n\nIf this change severely impacts your ability to migrate your apps to .NET 7, please let us know in the associated discussion thread and we would be happy to reconsider this change. Optionally, there are changes to your application that you may consider to work around this change if it impacts your application:\r\n\r\n* [`ActivatorUtilitiesConstructorAttribute`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.activatorutilitiesconstructorattribute) can be applied to constructor to specify an exact constructor to use.\r\n* Application developers may register an implementation of `IComponentActivator` in the DI container that reverts to the .NET 6 behavior.\r\n\r\n\n\n### Affected APIs\n\nComponent constructors","Url":"https://github.com/aspnet/Announcements/issues/482","RelatedDescription":"Open issue \"[Breaking change]: Blazor components are type activated by default\" (#482)"},{"Id":"1140446824","IsPullRequest":false,"CreatedAt":"2022-02-16T19:09:40","Actor":"wtgodbe","Number":"481","RawContent":null,"Title":"Microsoft.Data.SqlClient updated to 4.0.1","State":"open","Body":"### Description\r\n\r\nWe have updated the `Microsoft.Data.SqlClient` package to 4.0.1.\r\n\r\n### Version\r\n\r\n7.0-preview2\r\n\r\n### Previous behavior\r\n\r\nThe old version was `1.0.19249.1`\r\n\r\n### New behavior\r\n\r\nWe now use `4.0.1`. You can see breaking changes in the 4.0 band here: https://github.com/dotnet/SqlClient/blob/main/release-notes/4.0/4.0.0.md#breaking-changes. Note that `Encrypt` now equals `true` by default: https://github.com/dotnet/SqlClient/blob/main/release-notes/4.0/4.0.0.md#encrypt-default-value-set-to-true\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nUpdating to most recent versions for improvements in the underlying libraries.\r\n\r\n### Recommended action\r\n\r\nWe didn't have to react to any no public API changes from this change, but its possible there are breaking changes in the packages themselves.\r\n\r\n### Affected APIs\r\n\r\nMicrosoft.Extensions.Caching.SqlServer","Url":"https://github.com/aspnet/Announcements/issues/481","RelatedDescription":"Open issue \"Microsoft.Data.SqlClient updated to 4.0.1\" (#481)"},{"Id":"1127552680","IsPullRequest":false,"CreatedAt":"2022-02-08T17:31:43","Actor":"brunolins16","Number":"480","RawContent":null,"Title":"[Breaking change]: API Controllers Actions try to infer parameters from DI","State":"open","Body":"### Description\r\n\r\nThe mechanism to infer binding source of **API Controller action's parameters** now mark parameters to be bound from the Dependency Injection container when the type is registered in the container.\r\n\r\nIn rare cases this can break applications that have a type in DI that is also accepted in API Controller actions methods.\r\n\r\n### Version\r\n\r\n7.0.0-preview2\r\n\r\n### Previous behavior\r\n\r\nBefore if you want to bind a type registered in your Dependency Injection container, it **must** be explicitly decorated using an attribute that implements `IFromServiceMetadata` (eg.: `FromServicesAttribute`)\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    public ActionResult Get([FromServices]SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\nIf the attribute is not specified, the parameter is resolved from the request Body sent by the client.\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Bind from the request body\r\n    [HttpPost]\r\n    public ActionResult Post(SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nNow types in DI will be checked at app startup using `IServiceProviderIsService` to determine if an argument in an API controller action will come from DI or from the other sources. \r\n\r\nIn the below example `SomeCustomType` (assuming you're using the default DI container) will come from the DI container. \r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Binding from the services\r\n    [HttpPost]\r\n    public ActionResult Post(SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\nThe new mechanism to infer binding source of **API Controller action's parameters** will follow the rule bellow:\r\n\r\n1. A previously specified `BindingInfo.BindingSource` is never overwritten.\r\n2. A complex type parameter, registered in the DI container, is assigned `BindingSource.Services`.\r\n3. A complex type parameter, not registered in the DI container, is assigned `BindingSource.Body`.\r\n4. Parameter with a name that appears as a route value in ANY route template is assigned `BindingSource.Path`.\r\n5. All other parameters are `BindingSource.Query`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe believe the likelihood of breaking apps to be very low as it's not a common scenario to have a type in DI and as an argument in your API controller action at the same time. Also, this same behavior is currently supported by Minimal Actions.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change you can disable the feature by setting `DisableImplicitFromServicesParameters` to true.\r\n\r\n```csharp\r\nservices.Configure<ApiBehaviorOptions>(options =>\r\n{\r\n     options.DisableImplicitFromServicesParameters = true;\r\n});\r\n```\r\nAlso, you could continue to have your action's parameters, with the new feature enabled or not, binding from your DI container using an attribute that implements `IFromServiceMetadata` (eg.: `FromServicesAttribute`).\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Binding from the DI container\r\n    [HttpPost]\r\n    public ActionResult Post([FromServices]SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nAPI Controller actions.","Url":"https://github.com/aspnet/Announcements/issues/480","RelatedDescription":"Open issue \"[Breaking change]: API Controllers Actions try to infer parameters from DI\" (#480)"},{"Id":"1115597949","IsPullRequest":false,"CreatedAt":"2022-01-26T23:19:59","Actor":"BrennanConroy","Number":"479","RawContent":null,"Title":"[Breaking change]: SignalR Hub methods try to resolve parameters from DI","State":"open","Body":"### Description\r\n\r\nHub methods now support injecting services from your Dependency Injection container.\r\nIn rare cases this can break applications that have a type in DI that is also accepted in Hub methods from SignalR client messages.\r\n\r\n### Version\r\n\r\n7.0.0-preview2\r\n\r\n### Previous behavior\r\n\r\nBefore if you accepted a type in your Hub method that was also in your Dependency Injection container the type would always be resolved from a message sent by the client.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // type always comes from the client, never comes from DI\r\n    public Task Method(string text, SomeCustomType type) => Task.CompletedTask;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nNow types in DI will be checked at app startup using `IServiceProviderIsService` to determine if an argument in a Hub method will come from DI or from the client.\r\n\r\nIn the below example `SomeCustomType` (assuming you're using the default DI container) will come from the DI container instead of from the client. And if the client tried to send `SomeCustomType` it will get an error.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // comes from DI by default\r\n    public Task Method(string text, SomeCustomType type) => Task.CompletedTask;\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe believe the likelihood of breaking apps to be very low as it's not a common scenario to have a type in DI and as an argument in your Hub method at the same time.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change you can disable the feature by setting `DisableImplicitFromServicesParameters` to true.\r\n```csharp\r\nservices.AddSignalR(options =>\r\n{\r\n    options.DisableImplicitFromServicesParameters = true;\r\n});\r\n```\r\n\r\nIf you are broken by the change but want to use the feature without breaking clients, you can disable the feature as shown above, and use an attribute that implements `IFromServiceMetadata` on new arguments/Hub methods.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\nServices.AddScoped<SomeCustomType2>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // old method with new feature (non-breaking), only SomeCustomType2 will be resolved from DI\r\n    public Task MethodA(string arguments, SomeCustomType type, [FromServices] SomeCustomType2 type2);\r\n\r\n    // new method\r\n    public Task MethodB(string arguments, [FromServices] SomeCustomType type);\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nHub methods","Url":"https://github.com/aspnet/Announcements/issues/479","RelatedDescription":"Open issue \"[Breaking change]: SignalR Hub methods try to resolve parameters from DI\" (#479)"},{"Id":"1107147192","IsPullRequest":false,"CreatedAt":"2022-01-18T17:00:32","Actor":"italukder","Number":"478","RawContent":null,"Title":"M2A ","State":"closed","Body":"!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/AspNetCore/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/478","RelatedDescription":"Closed issue \"M2A \" (#478)"},{"Id":"1083913001","IsPullRequest":false,"CreatedAt":"2021-12-18T18:35:01","Actor":"yecril71pl","Number":"477","RawContent":null,"Title":"[Breaking change]: CommandLineUtils retired","State":"open","Body":"### Description\n\nThe package [CommandLineUtils](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.commandlineutils) was removed from ASP.NET 2.0.\r\n\r\nThe discussion issue was https://github.com/dotnet/extensions/issues/257.\r\n\r\nThis change was overlooked because we failed to follow breaking changes in extensions.  It is important to document it here because it is not mentioned at [1.x to 2.0](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x) either.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\n```C#\r\nusing Microsoft.Extensions.CommandLineUtils;\r\n```\n\n### New behavior\n\n```C#\r\nusing McMaster.Extensions.CommandLineUtils;\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nThe library has outgrown the scope of the ASP.NET project where it had been developed.\n\n### Recommended action\n\nMigration steps include the following alternatives:\r\n* adapt your code to use system [Command-line configuration provider](https://docs.microsoft.com/en-us/dotnet/core/extensions/configuration-providers#command-line-configuration-provider)\r\n* adapt your code to use community [CommandLine](https://github.com/dotnet/command-line-api)\r\n* keep your code and switch to use 3rd-party [CommandLineUtils](https://natemcmaster.github.io/CommandLineUtils/) fork\r\n\n\n### Affected APIs\n\nThe whole package [CommandLineUtils](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.commandlineutils) is unsupported.","Url":"https://github.com/aspnet/Announcements/issues/477","RelatedDescription":"Open issue \"[Breaking change]: CommandLineUtils retired\" (#477)"},{"Id":"1042509650","IsPullRequest":false,"CreatedAt":"2021-11-02T15:29:52","Actor":"Tratcher","Number":"476","RawContent":null,"Title":"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed","State":"open","Body":"### Description\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll have been removed from ASP.NET Core 7.0.0-preview1. See https://github.com/dotnet/aspnetcore/issues/38022 for discussion.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv was [obsoleted](#424) in 5.0 since its functionality was replaced by the Sockets transport.\n\n### New behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and its libuv.dll dependency have been removed from ASP.NET Core.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nTo eliminate ongoing maintenance costs associated with this obsolete component.\n\n### Recommended action\n\nRemove project references to Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv. Remove code from Program.cs that calls `UseLibuv`, the Sockets transport will be used by default.\n\n### Affected APIs\n\n[UseLibuv](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderlibuvextensions.uselibuv)\r\n[LibuvTransportOptions](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions)","Url":"https://github.com/aspnet/Announcements/issues/476","RelatedDescription":"Open issue \"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed\" (#476)"},{"Id":"1029808382","IsPullRequest":false,"CreatedAt":"2021-10-19T03:09:22","Actor":"halter73","Number":"475","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC2","State":"open","Body":"### Description\r\n\r\nIn RC2, the following APIs were renamed or merged.\r\n\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`.\r\n- The `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions`.\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions` class was removed and all of its methods were merged into the existing `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` class.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/36578.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names replacing `DelegateEndpoint` with `RouteHandler` now that there is a new `RouteHandlerOptions` class.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions`\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/475","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC2\" (#475)"},{"Id":"1029797310","IsPullRequest":false,"CreatedAt":"2021-10-19T02:51:23","Actor":"halter73","Number":"474","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC1","State":"open","Body":"### Description\r\n\r\nIn RC1, the following APIs were renamed.\r\n\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`.\r\n  - **Note:** This was renamed again in RC2 to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`.\r\n  - **Note:** This was merged with `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` in RC2. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Delegate` parameter to `Map`, `MapGet`, `MapPost`, `MapPut`, `MapDelete`, `MapMethod`, `MapFallback` and `RequestDelegateFactory.Create` was renamed from `action` to `handler`.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/35570.\r\n\r\n### Version\r\n\r\n.NET 6 RC1\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names and remove \"minimal\" and \"action\" from the APIs.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names or parameter names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions`\r\n\t- This includes all the methods on this class having their `Delegate` parameter renamed from `action` to `handler`.\r\n- `Microsoft.AspNetCore.Http.RequestDelegateFactory.Create(Delegate action, RequestDelegateFactoryOptions? options = null)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/474","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC1\" (#474)"},{"Id":"1029683595","IsPullRequest":false,"CreatedAt":"2021-10-18T23:08:43","Actor":"captainsafia","Number":"473","RawContent":null,"Title":"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints","State":"open","Body":"### Description\r\n\r\nStarting in .NET 6 RC2, behavior that was introduced in .NET 6 RC1 to automatically set the `IEndpointNameMetadata` for endpoints has been reverted to avoid issues the logic generating duplicate endpoint names.\r\n\r\n### Version\r\n\r\n.NET 6 RC 2\r\n\r\n### Previous behavior\r\n\r\nIn .NET 6 RC1 and above, the `IEndpointNameMetadata` was automatically set for endpoints that referenced a method group. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nWould produce an endpoint for `/foo` with a `EndpointName` set to \"GetFoo\".\r\n\r\n### New behavior\r\n\r\nIn .NET 6 RC 2 and onward, the `IEndpointNameMetadata` is no longer set. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nwould not generated any `IEndpointNameMetadat`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThe behavior of automatically setting endpoint name metadata was not robust and resulted in issues where the same name was set for different endpoints. See https://github.com/dotnet/aspnetcore/issues/36487 for more info.\r\n\r\n### Recommended action\r\n\r\nWe recommend that developers manually set the `IEndpointNameMetadata` using the `WithName` extension method as follows to set the metadata.\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo).WithName(\"GetFoo\");\r\n```\r\n\r\n### Feature area\r\n\r\nASP.NET Core\r\n\r\n### Affected APIs\r\n\r\n_No response_","Url":"https://github.com/aspnet/Announcements/issues/473","RelatedDescription":"Open issue \"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints\" (#473)"},{"Id":"1002953060","IsPullRequest":false,"CreatedAt":"2021-09-21T17:48:14","Actor":"BrennanConroy","Number":"472","RawContent":null,"Title":"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods","State":"open","Body":"### Description\r\n\r\nStarting in RC2, when we look for `TryParse` or `BindAsync` methods on your parameter types if we don't find a valid one we will also look for invalid ones and throw at startup to let you know that you might have written your method signature incorrectly to avoid unexpected behavior.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\n```csharp\r\n// Todo.TryParse is not in a valid format, will try to bind from body as json instead\r\napp.MapPost(\"/endpoint\", (Todo todo) => todo.Item);\r\n\r\npublic class Todo\r\n{\r\n    public string Item { get; set; }\r\n\r\n    public static bool TryParse(string value) => true;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWe have now changed it so that if we see a public `TryParse` or `BindAsync` that doesn't match the expected syntax we will throw on startup. The above example would throw an error similar to:\r\n```\r\nTryParse method found on Todo with incorrect format. Must be a static method with format\r\nbool TryParse(string, IFormatProvider, out Todo)\r\nbool TryParse(string, out Todo)\r\nbut found\r\nBoolean TryParse(System.String)\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [x] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made so that developers would be aware when they wrote a `BindAsync` or `TryParse` method that it wasn't in a valid format. Otherwise the framework would fallback to assuming the parameter is json from the body and could result in unexpected behavior.\r\n\r\n### Recommended action\r\n\r\nIt is possible your types have a `BindAsync` or `TryParse` with different syntax for other reasons besides parameter binding and will now throw at startup. There are multiple options to avoid this behavior:\r\n* Make your `BindAsync` or `TryParse` method internal or private\r\n* Add a new `BindAsync` or `TryParse` method that is in the syntax we are looking for (we ignore invalid methods if we find a valid one)\r\n* Mark your parameter as `[FromBody]`\r\n\r\n### Affected APIs\r\n\r\nAll `IEndpointRouteBuilder.Map*(...)` methods are affected by this change, e.g. `app.MapGet(...)` and `app.MapPost(...)`.\r\nAnd `RequestDelegateFactory.Create(...)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/36810","Url":"https://github.com/aspnet/Announcements/issues/472","RelatedDescription":"Open issue \"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods\" (#472)"},{"Id":"953359702","IsPullRequest":false,"CreatedAt":"2021-09-18T18:10:19","Actor":"TanayParikh","Number":"470","RawContent":null,"Title":"Disable Long Polling Fallback Transport for Blazor Server","State":"closed","Body":"## Disable Long Polling Fallback Transport for Blazor Server\r\n\r\nLong Polling is a fall-back transport utilized when WebSockets aren't available. This can lead to a degraded user experience. Thus, the Long Polling fallback has been removed, and both the client and server now support _only_ WebSockets by default.\r\n\r\n### Version introduced\r\n\r\n.NET 6 rc 1\r\n\r\n### Old behavior\r\n\r\nIf WebSockets are unavailable for a circuit (ex. network issues or browser incompatibility), Long Polling is used instead.\r\n\r\n### New behavior\r\n\r\n| Client | Server | Message |\r\n|---|---|---|\r\n|WS (without browser WS support)|WebSockets|`Unable to connect, please ensure you are using an updated browser that supports WebSockets.`|\r\n|WS (with WS connection being rejected)|WebSockets|`Unable to connect, please ensure WebSockets are available. A VPN or proxy may be blocking the connection.`|\r\n|WS|LongPolling|`An unhandled error has occurred.` Console Error: `Unable to initiate a SignalR connection to the server. This might be because the server is not configured to support WebSockets. To troubleshoot this, visit https://aka.ms/blazor-server-websockets-error.`|\r\n|LongPolling|WebSockets|`An unhandled error has occurred.`|\r\n\r\n### Reason for change\r\n\r\nImprove overall end-user-experience by enforcing WebSocket use.\r\n\r\n### Recommended action\r\n\r\nEnsure WebSockets are functioning as expected with your application. If you must use Long Polling, the following client and server side changes must be made:\r\n\r\n\r\n#### Server Side\r\n\r\nIn `Startup.cs`, replace `endpoints.MapBlazorHub()` with:\r\n\r\n```c#\r\nendpoints.MapBlazorHub(configureOptions: options => \r\n{ \r\n    options.Transports = HttpTransportType.WebSockets | HttpTransportType.LongPolling; \r\n});\r\n```\r\n\r\n#### Client Side\r\n\r\nIn `Pages/_Layout.cshtml`, update the `blazor.server.js` script tag to include the `autostart=\"false\"` attribute:\r\n\r\n```html\r\n<script src=\"_framework/blazor.server.js\" autostart=\"false\"></script>\r\n```\r\n\r\nBelow the `blazor.server.js` script tag, add the following snippet. WebSockets (1) and Long Polling (4) are the supported [HTTPTransportType](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connections.httptransporttype?view=aspnetcore-5.0#fields)s.\r\n\r\n```html\r\n<script>\r\n    (function start() {\r\n        Blazor.start({\r\n            configureSignalR: builder => builder.withUrl('_blazor', 1 | 4) // WebSockets and Long Polling\r\n        });\r\n    })()\r\n</script>\r\n```\r\n\r\n### Category\r\n<!-- Choose one of the following compatibility categories: -->\r\n\r\n- [ ] Binary compatibility (the newer version can be used without recompiling)\r\n- [ ] Source compatibility (successfully recompiling against newer version requires source changes)\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/470","RelatedDescription":"Closed issue \"Disable Long Polling Fallback Transport for Blazor Server\" (#470)"},{"Id":"973152582","IsPullRequest":false,"CreatedAt":"2021-08-18T00:07:55","Actor":"pranavkm","Number":"471","RawContent":null,"Title":"[Breaking change]: Razor Pages logging ID change","State":"open","Body":"### Description\n\nRazor Pages log messages have associated IDs and names. These are used to uniquely identify different kinds of log messages. Some of those IDs and names were incorrectly duplicated. This is being fixed in .NET 6.\n\n### Version\n\n.NET 6 RC1\n\n### Previous behavior\n\nEvent Name: ExecutedHandlerMethod\r\nEvent Id: 102\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod\r\nEvent Id: 103\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod\r\nEvent Id: 104\r\n\r\nEvent Name: NotMostEffectiveFilter\r\nEvent Id: 1\r\n\n\n### New behavior\n\nEvent Name: ExecutedHandlerMethod (unchanged)\r\nEvent Id: 108\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod  (unchanged)\r\nEvent Id: 107\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod  (unchanged)\r\nEvent Id: 109\r\n\r\nEvent Name: NotMostEffectiveFilter  (unchanged)\r\nEvent Id: 4\r\n\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs and names, update those references use the new IDs and names.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/471","RelatedDescription":"Open issue \"[Breaking change]: Razor Pages logging ID change\" (#471)"},{"Id":"951058526","IsPullRequest":true,"CreatedAt":"2021-07-30T15:24:54","Actor":"gewarren","Number":"469","RawContent":null,"Title":"Convert breaking change template to a form","State":"closed","Body":"See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms.","Url":"https://github.com/aspnet/Announcements/pull/469","RelatedDescription":"Closed or merged PR \"Convert breaking change template to a form\" (#469)"},{"Id":"940150750","IsPullRequest":true,"CreatedAt":"2021-07-08T19:25:36","Actor":"mkArtakMSFT","Number":"468","RawContent":null,"Title":"Expanded category of the change to be either source or binary","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/468","RelatedDescription":"Closed or merged PR \"Expanded category of the change to be either source or binary\" (#468)"},{"Id":"939244949","IsPullRequest":true,"CreatedAt":"2021-07-08T18:03:39","Actor":"mkArtakMSFT","Number":"467","RawContent":null,"Title":"Include preview number in version text","State":"closed","Body":"Thanks for the proposal to change this, @Rick-Anderson!","Url":"https://github.com/aspnet/Announcements/pull/467","RelatedDescription":"Closed or merged PR \"Include preview number in version text\" (#467)"},{"Id":"938148373","IsPullRequest":false,"CreatedAt":"2021-07-06T18:21:20","Actor":"Tratcher","Number":"466","RawContent":null,"Title":"ClientCertificate property no longer triggers renegotiation for HttpSys","State":"open","Body":"\r\n## ClientCertificate property no longer triggers renegotiation for HttpSys\r\n\r\nThe `HttpContext.Connection.ClientCertificate` property will no longer trigger TLS renegotiations for HttpSys. See https://github.com/dotnet/aspnetcore/issues/34124 for discussion.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` allowed renegotiation to be triggered by both `HttpContext.Connection.ClientCertificate` and `HttpContext.Connection.GetClientCertifiateAsync`.\r\n\r\nSee https://github.com/aspnet/Announcements/issues/422 for related changes in 5.0.\r\n\r\n### New behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` will allow renegotiation to be triggered only by `HttpContext.Connection.GetClientCertifiateAsync`. `HttpContext.Connection.ClientCertificate` will return the current certificate if available, but will not renegotiate with the client to request one.\r\n\r\n### Reason for change\r\n\r\nWhen implementing the same features for Kestrel it became clear that applications needed to be able to check the state of the client certificate before triggering a renegotiation. This enables the following usage pattern to deal with issues like the request body conflicting with the renegotiation:\r\n\r\n```\r\nif (connection.ClientCertificate == null)\r\n{\r\n  await BufferRequestBodyAsync();\r\n  await connection.GetClientCertificateAsync();\r\n}\r\n```\r\n\r\n### Recommended action\r\n\r\nApplications that use delayed client certificate negotiation need to call GetClientCertificateAsync() to trigger that.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n [HttpSysOptions.ClientCertificateMethod](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions.clientcertificatemethod)\r\n  [HttpContext.Connection.ClientCertificate](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.clientcertificate)\r\n  [HttpContext.Connection.GetClientCertifiateAsync](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.getclientcertificateasync)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/466","RelatedDescription":"Open issue \"ClientCertificate property no longer triggers renegotiation for HttpSys\" (#466)"},{"Id":"903915805","IsPullRequest":false,"CreatedAt":"2021-05-27T15:32:22","Actor":"LadyNaggaga","Number":"465","RawContent":null,"Title":" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6","State":"open","Body":"\r\n### React Redux - dropping support in .NET 6 preview 6\r\n\r\nThe number of ASP.NET Core with React-Redux being created using the .NET Core SDK templates is low.  As a result, we have decided to drop React-Redux support in .NET 6 preview 6. \r\n\r\nAs mentioned in [issue #27887](https://github.com/dotnet/aspnetcore/issues/27887) we shared we will be introducing a new experience for SPA templates in .NET 6 timeframe. This experience is going to focus on decoupling the frontend from the backend into two separate projects. For details here. So, even though we are dropping React-Redux in preview 6 we are providing flexibility for our customers to bring in any SPA framework for their choosing. For more information, please check out the following:\r\n\r\n- [ASP.NET Core and SPAs in .NET 6 ](https://github.com/dotnet/aspnetcore/issues/27887).\r\n- [Improved single-page app (SPA) templates](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/#improved-single-page-app-spa-templates)","Url":"https://github.com/aspnet/Announcements/issues/465","RelatedDescription":"Open issue \" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6\" (#465)"},{"Id":"879380130","IsPullRequest":false,"CreatedAt":"2021-05-07T17:13:08","Actor":"blowdart","Number":"464","RawContent":null,"Title":"ASP.NET Core 6 and Authentication Servers","State":"open","Body":"In .NET 3.0 we began shipping IdentityServer4 as part of our template to support the issuing of JWT tokens for SPA and Blazor applications. Sometime after we shipped, the IdentityServer team made [an announcement changing the license for future versions of IdentityServer](https://leastprivilege.com/2020/10/01/the-future-of-identityserver/) to a reciprocal public license – a license where the code is still open source but if used for commercial purposes then a paid license must be bought. This type of approach is common in the open-source world, where sustaining an income is difficult as your project becomes your full-time work.\r\n\r\nTwo of the reasons behind the choice to ship IdentityServer was the community’s well-expressed desire that we did not compete with an established open-source project and IdentityServer’s deep knowledge of the identity space. The .NET team are not OAuth and OIDC experts as we focus on providing building blocks for your application and a starting point from which you can be successful. Creating and sustaining an authentication server is a full-time endeavor, and Microsoft already has a team and a product in that area, Azure Active Directory, which allows 500,000 objects for free. The ASP.NET team feels a managed cloud solution remains the best practical option for developers – the security is managed, you don’t store credentials locally with the risks that presents, and new features like passwordless authentication appear seamlessly in your authentication workflow. However, we also realize that a cloud solution can be impossible for some customers due to regulatory or data sovereignty concerns.\r\n\r\nFor .NET 6 we will continue to ship IdentityServer in our templates, using the new RPL licensed version. We continue to think this is the most mature option for creating self-deployed, locally hosted token service with ASP.NET Core. We will make the licensing requirement clear if you are using a template that includes Duende IdentityServer. The [new Duende IdentityServer](https://duendesoftware.com/products/identityserver) continues to be open source, but now has a dual license. This license allows it to be used for free for development, testing, and learning, free for non-commercial open source, and free for use in commercial settings if the entity or organization makes less than 1 million USD/year. The license requires [a fee](https://duendesoftware.com/products/identityserver#pricing) to be used in used in a commercial setting if the entity or organization makes more than 1M USD/year. The previous version of IdentityServer will continue to be supported for as long as .NET 5 is supported, until [around February 2022](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nFor .NET 7 we will investigate if we can build tooling to allow development and testing of OIDC (OpenID Connect) enabled applications when disconnected from the internet. You will always be free to choose whatever identity system is best for you in production by updating a few lines of code when you’re ready to go live. We’re committed to giving you options for production identity systems now and going forward.\r\n\r\nDiscussion of this announcement can be found at https://github.com/dotnet/aspnetcore/issues/32494","Url":"https://github.com/aspnet/Announcements/issues/464","RelatedDescription":"Open issue \"ASP.NET Core 6 and Authentication Servers\" (#464)"},{"Id":"878150269","IsPullRequest":false,"CreatedAt":"2021-05-06T22:51:46","Actor":"pranavkm","Number":"463","RawContent":null,"Title":"Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json","State":"open","Body":"\r\n## Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json\r\n\r\nIn 5.0, MVC added support for output formatting `IAsyncEnumerable<>` types by buffering the sequence in memory and formatting the buffered collection. In 6.0, when formatting using System.Text.Json, `IAsyncEnumerable<>` instances are no longer buffered by MVC, instead relying on the support for these types added to System.Text.Json.\r\n\r\nIn most cases, the absence of buffering would not be observed by the application. However, some scenarios may have inadvertently relied on the buffering semantics to correctly serialize. For instance, returning an `IAsyncEnumerable<>` that is backed by a EF query on a type with lazy loaded properties might result in concurrent query execution which might be unsupported by the provider.\r\n\r\nThis change does not affect output formatting using Newtonsoft.Json, or with XML-based formatters\r\n\r\n### Version introduced\r\n\r\n6.0-preview4\r\n\r\n### Old behavior\r\n\r\n`IAsyncEnumerable<>` instances returned from an MVC action as a value to be formatted using `ObjectResult`, or a `JsonResult` would be buffered before being serialized as synchronous collection.\r\n\r\n### New behavior\r\n\r\nWhen formatting using System.Text.Json, `IAsyncEnumerable<>` instances are no longer buffered by MVC.\r\n\r\n### Reason for change\r\n\r\nSystem.Text.Json added support for streaming `IAsyncEnumerable<>` types. This allows for a smaller memory footprint during serialization.\r\n\r\n### Recommended action\r\n\r\nIf your application requires buffering, consider manually buffering the async enumerable: \r\n\r\n```C#\r\n// Before\r\npublic IActionResult Get()\r\n{\r\n    return Ok(dbContext.Blogs);\r\n}\r\n\r\n// After\r\npublic async Task<IActionResult> Get()\r\n{\r\n    return Ok(await dbContext.Blogs.ToListAsync());\r\n}\r\n```\r\n\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/463","RelatedDescription":"Open issue \"Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json\" (#463)"},{"Id":"873454283","IsPullRequest":false,"CreatedAt":"2021-04-30T23:11:40","Actor":"Tratcher","Number":"462","RawContent":null,"Title":"Microsoft.AspNetCore.Http.Features split, no longer shipped as a package","State":"open","Body":"## Microsoft.AspNetCore.Http.Features split, no longer shipped as a package\r\n\r\nMicrosoft.AspNetCore.Http.Features is being split into two assemblies, Microsoft.AspNetCore.Http.Features and Microsoft.Extensions.Features.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nMicrosoft.AspNetCore.Http.Features 5.0 shipped both in the ASP.NET shared framework and as a nuget package.\r\n\r\nMicrosoft.AspNetCore.Http.Features 5.0 targeted .NET 4.6.1, .NET Standard 2.0, and .NET 5.0\r\n\r\n### New behavior\r\n\r\nMicrosoft.AspNetCore.Http.Features 6.0 will ship only in the ASP.NET shared framework, not as a nuget package.\r\n\r\nMicrosoft.AspNetCore.Http.Features 6.0 will target .NET 6.0 only.\r\n\r\nMicrosoft.Extensions.Features 6.0 will ship both in the ASP.NET shared framework and as a nuget package.\r\n\r\nMicrosoft.Extensions.Features 6.0 will target .NET 4.6.1, .NET Standard 2.0, and .NET 6.0\r\n\r\nThe following types will move to the new assembly. The namespaces will not be changed and type forwards will be added for compatibility.\r\n\r\n```\r\nnamespace Microsoft.AspNetCore.Http.Features\r\nIFeatureCollection\r\nFeatureCollection\r\nFeatureReference<T>\r\nFeatureReferences<T>\r\n```\r\n\r\n### Reason for change\r\n\r\nThis allows these core types to be shared more broadly across components, while also allowing the remaining Http specific components in Microsoft.AspNetCore.Http.Features to take advantage of new runtime and language features.\r\n\r\n### Recommended action\r\n\r\nWhen upgrading to ASP.NET 6.0 remove any packages references for `Microsoft.AspNetCore.Http.Features`. Add a package reference for `Microsoft.Extensions.Features` only if required.\r\n\r\nClass libraries that need to consume the types from `Microsoft.AspNetCore.Http.Features` should add a FrameworkReference instead:\r\n\r\n```\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nhttps://docs.microsoft.com/aspnet/core/fundamentals/target-aspnetcore?#use-the-aspnet-core-shared-framework\r\n\r\nLibraries with out of date references may encounter a `TypeLoadException` or the following error:\r\n```\r\nError\tCS0433\tThe type 'IFeatureCollection' exists in both 'Microsoft.AspNetCore.Http.Features, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' and 'Microsoft.Extensions.Features, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n```\r\n\r\nThis can be mitigated by adding the FrameworkReference shown above to any of the affected projects.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/32307 for questions.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[IFeatureCollection](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ifeaturecollection)\r\n[FeatureCollection](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurecollection)\r\n[FeatureReference](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurereference-1)\r\n[FeatureReferences](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurereferences-1)\r\n  \r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/462","RelatedDescription":"Open issue \"Microsoft.AspNetCore.Http.Features split, no longer shipped as a package\" (#462)"},{"Id":"864076275","IsPullRequest":false,"CreatedAt":"2021-04-21T16:42:10","Actor":"BrennanConroy","Number":"461","RawContent":null,"Title":"New Use middleware overload, can cause compiler errors if you don't call next","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## [New Use middleware overload, can cause compiler errors if you don't call `next`]\r\n\r\nA new overload of `app.Use` has been introduced. If you were previously using `app.Use` but never calling the `next` middleware, you will now get a compiler error (CS0121). If that's the case you should use `app.Run` instead of `app.Use`.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0-preview4\r\n\r\n### Old behavior\r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await next();\r\n});\r\n```\r\n\r\nor \r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await SomeAsyncWork();\r\n    // next never called\r\n});\r\n```\r\n\r\n### New behavior\r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await next(context);\r\n});\r\n```\r\n\r\nNotice that you can now pass `context` to the `next` delegate.\r\n\r\n```C#\r\napp.Run(async (context) =>\r\n{\r\n    await SomeAsyncWork();\r\n    // next never called\r\n});\r\n```\r\n\r\nUse `app.Run` when your middleware never calls `next`, otherwise you will get a compile error:\r\n`CS0121 The call is ambiguous between the following methods or properties: 'UseExtensions.Use(IApplicationBuilder, Func<HttpContext, Func, Task>)' and 'UseExtensions.Use(IApplicationBuilder, Func<HttpContext, RequestDelegate, Task>)'`\r\n\r\n### Reason for change\r\n\r\nThe previous `Use` method would allocate 2 objects per request. The new overload avoids these allocations with a small change to how you invoke the next middleware.\r\n\r\n### Recommended action\r\n\r\nIf you get a compile error, it means you are calling `app.Use` without using the `next` delegate. Switch to `app.Run` to fix the error.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\nDiscussion issue https://github.com/dotnet/aspnetcore/issues/32020\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/461","RelatedDescription":"Open issue \"New Use middleware overload, can cause compiler errors if you don't call next\" (#461)"},{"Id":"853676314","IsPullRequest":false,"CreatedAt":"2021-04-08T17:07:48","Actor":"pranavkm","Number":"460","RawContent":null,"Title":"PreserveCompilationContext is no longer configured by default","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## PreserveCompilationContext is no longer configured by default for ASP.NET Core apps targeting .NET 6 and newer\r\n\r\n`PreserveCompilationContext` is an MSBuild property that causes .NET Core projects to emit additional content to the application's Dependency (.deps) file about how the app was compiled. This is primarily used to support runtime-compilation based scenarios.\r\n\r\nPrior to .NET 6, `PreserveCompilationContext` was configured to `true` for all apps that target the Razor (`Microsoft.NET.Sdk.Razor`) and Web (`Microsoft.NET.Sdk.Web`) apps. Starting in .NET 6, this property is no longer configured by default. Packages such as Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation configure this property as required.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0\r\n\r\n### Old behavior\r\n\r\nDependency file contains compilation context.\r\n\r\n### New behavior\r\n\r\nDependency file no longer contains compilation context.\r\n\r\n### Reason for change\r\n\r\nThis is part of our effort to improve build performance, startup time, and reduce the size of ASP.NET Core's build output.\r\n\r\n### Recommended action\r\n\r\nIf your app requires this feature and does not reference a package that configures this, update the project to include this property:\r\n\r\n```xml\r\n<PropertyGroup>\r\n   <PreserveCompilationContext>true</PreserveCompilationContext>\r\n</PropertyGroup>\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/460","RelatedDescription":"Open issue \"PreserveCompilationContext is no longer configured by default\" (#460)"},{"Id":"850860131","IsPullRequest":false,"CreatedAt":"2021-04-06T00:47:37","Actor":"captainsafia","Number":"459","RawContent":null,"Title":"Razor compiler no longer produces a Views assembly","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Razor compiler no longer produces a Views assembly\r\n\r\nThe Razor compiler no longer produces a separate `Views.dll` containing the CSHTML views defined in an application.\r\n\r\n### Version introduced\r\n\r\n.NET 6 Preview 3\r\n\r\n### Old behavior\r\n\r\nThe Razor compiler utilized a two-step compilation process that produced a main `AppName.dll` assembly containing application types and an `AppName.Views.dll` assembly that contains the generated views defined in the application. Generated view types were public and under the \"AspNetCore\" namespace.\r\n\r\n### New behavior\r\n\r\nBoth views and application types are included in a single `AppName.Views.dll` assembly. View types are augmented with the `internal sealed` modifiers by default and included under the `AspNetCoreGeneratedDocument` namespace.\r\n\r\n### Reason for change\r\n\r\nThis change improves build performance for applications that use Razor views by removing the two-step compilation process and also allows Razor views to participate in the hot reload experience for VS.\r\n\r\n### Recommended action\r\n\r\nN/A\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n \r\nNot detectable via API analysis\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/459","RelatedDescription":"Open issue \"Razor compiler no longer produces a Views assembly\" (#459)"},{"Id":"850544376","IsPullRequest":false,"CreatedAt":"2021-04-05T17:57:32","Actor":"SteveSandersonMS","Number":"458","RawContent":null,"Title":"Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation","State":"open","Body":"## Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation\r\n\r\nThe extension method `EditContextDataAnnotationsExtensions.AddDataAnnotationsValidation` is being marked as obsolete. Developers should use the new extension method `EditContextDataAnnotationsExtensions.EnableDataAnnotationsValidation` instead.\r\n\r\nThe only difference between these two APIs is in their return values:\r\n\r\n```cs\r\nEditContext AddDataAnnotationsValidation(this EditContext editContext) { ... }\r\n\r\nIDisposable EnableDataAnnotationsValidation(this EditContext editContext) { ... }\r\n```\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nThe older API returns its `EditContext` (as a kind of fluent API).\r\n\r\n### New behavior\r\n\r\nThe new API returns an `IDisposable` whose disposal can be used to remove the data annotations validation support from the `EditContext`.\r\n\r\n### Reason for change\r\n\r\nThere are cases where it's desirable to remove the data annotations validation support after adding it. This was not possible with the older API because there was no place to store the internal event subscriptions. The new API returns an object that holds the state necessary to remove data annotations validation support on disposal.\r\n\r\n### Recommended action\r\n\r\n**This does not affect most applications, because most applications do not call this directly anyway.** Most applications instead use the `<DataAnnotationsValidator>` component, and do not need to be changed. The use of the extension methods discussed here is a rare and advanced case.\r\n\r\nHowever, if you do call `editContext.AddDataAnnotationsValidation()`, then replace that call with `editContext.EnableDataAnnotationsValidation()`. Optionally, captured the new returned `IDisposable` and dispose it if you later wish to undo the effects of the call.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[EditContextDataAnnotationsExtensions.AddDataAnnotationsValidation(EditContext)](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.components.forms.editcontextdataannotationsextensions.adddataannotationsvalidation?view=aspnetcore-5.0)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/458","RelatedDescription":"Open issue \"Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation\" (#458)"},{"Id":"848690041","IsPullRequest":false,"CreatedAt":"2021-04-01T18:24:35","Actor":"BrennanConroy","Number":"457","RawContent":null,"Title":"SignalR Java Client updated to RxJava3","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## SignalR Java Client updated to RxJava3\r\n\r\nRxJava2 had it's end-of-life in February 2021. We are updating the SignalR Java Client to the newer RxJava3.\r\n\r\n### Version introduced\r\n\r\n6.0.0-preview4\r\n\r\n### Old behavior\r\n\r\nThe RxJava package reference in the library was RxJava2.\r\n\r\n### New behavior\r\n\r\nThe RxJava package reference in the library is now RxJava3.\r\nYou can read https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0 for what changed in RxJava3.\r\n\r\n### Reason for change\r\n\r\nThe old dependency (RxJava2) is no longer maintained.\r\n\r\n### Recommended action\r\n\r\nIf you were using RxJava2 in your app/library you might need to update to RxJava3. See https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0 for help.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\nDiscussion issue for this announcement: https://github.com/dotnet/aspnetcore/issues/31450\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/457","RelatedDescription":"Open issue \"SignalR Java Client updated to RxJava3\" (#457)"},{"Id":"825172081","IsPullRequest":false,"CreatedAt":"2021-03-21T23:42:46","Actor":"dougbu","Number":"455","RawContent":null,"Title":"Default branch has been renamed to main","State":"closed","Body":"On Monday, 15 March (slightly delayed, sorry), we renamed the default branch in this repository to main. For more details, see [our earlier announcement](https://github.com/dotnet/announcements/issues/172).","Url":"https://github.com/aspnet/Announcements/issues/455","RelatedDescription":"Closed issue \"Default branch has been renamed to main\" (#455)"},{"Id":"834175947","IsPullRequest":false,"CreatedAt":"2021-03-17T21:02:49","Actor":"pranavkm","Number":"456","RawContent":null,"Title":"Assemblies removed from Microsoft.AspNetCore.App shared framework","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Assemblies removed from Microsoft.AspNetCore.App shared framework\r\n\r\nAs part of our ongoing work to reduce the size of the ASP.NET Core shared framework, the following assemblies were removed from the ASP.NET Core targeting pack:\r\n\r\n* System.Security.Permissions\r\n* System.Windows.Extensions\r\n\r\nApplications upgrading to net6.0 would no longer be able to reference APIs provided by these libraries without adding additional `PackageReference` to their projects.\r\n\r\nIn addition, the following assemblies have been removed from the ASP.NET Core runtime pack:\r\n\r\n* Microsoft.Win32.SystemEvents\r\n* System.Drawing.Common\r\n* System.Security.Permissions\r\n* System.Windows.Extensions\r\n\r\nApplications that use APIs from these libraries but use them in a 6.0 version of Microsoft.AspNetCore.App without a PackageReference that ensures these assemblies are present as part of the application output, may see runtime errors.\r\nFor instance, an application that uses reflection to access APIs from one of these assemblies without adding an explicit reference to these packages may see runtime errors\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nApplications could use APIs provided by these libraries by referencing the Microsoft.AspNetCore.App shared framework.\r\n\r\n### New behavior\r\n\r\nPackageReference must be added to continue using these APIs.\r\n\r\n### Reason for change\r\n\r\nSize reduction.\r\n\r\n### Recommended action\r\n\r\n1. Add a `PackageReference` to the affected project. For instance,\r\n\r\n```xml\r\n<PackageReference Include=\"System.Security.Permissions\" Version=\"6.0.0\" />\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* https://docs.microsoft.com/dotnet/api/system.security.permissions\r\n* https://docs.microsoft.com/dotnet/api/system.media\r\n* https://docs.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509certificate2ui\r\n* https://docs.microsoft.com/dotnet/api/system.xaml.permissions.xamlaccesslevel\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/456","RelatedDescription":"Open issue \"Assemblies removed from Microsoft.AspNetCore.App shared framework\" (#456)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1514654522328555525","CreatedAt":"2022-04-14T17:19:13+00:00","UserScreenname":"aspnet","Text":"➡️.NET MAUI Release Candidate – Ready for cross-platform app development\n\n🔥Includes info on Blazor Hybrid support -… https://t.co/d55kIgZISX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":4,"RawContent":null},{"Id":"1514652790999556117","CreatedAt":"2022-04-14T17:12:20+00:00","UserScreenname":"aspnet","Text":"🎺#AspNetCore updates in .NET 7 Preview 3\n\n↔️Route handler filters in minimal APIs\n🧪Improved unit testability for mi… https://t.co/loAxRCeJyz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":16,"RawContent":null},{"Id":"1513925087228936196","CreatedAt":"2022-04-12T17:00:42+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Blazorators: Blazor C# Source Generators https://t.co/664vyM2qmM","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1513923841742962693","CreatedAt":"2022-04-12T16:55:45+00:00","UserScreenname":"aspnet","Text":"Starting now! Come watch @davidpine7 show off Blazorators!\n\nhttps://t.co/ojnAAXmHhB https://t.co/2KY6Vx6lAI","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"1513578478536302594","CreatedAt":"2022-04-11T18:03:24+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🔥 Blazorators: Blazor C# Source Generators\n⭐ @_TanayParikh @davidpine7… https://t.co/g3wnlm0Y3b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null},{"Id":"1511388337860345876","CreatedAt":"2022-04-05T17:00:34+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Output Caching in .NET 7 https://t.co/gq5OiH7p4A","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1511388055537545217","CreatedAt":"2022-04-05T16:59:27+00:00","UserScreenname":"aspnet","Text":"Starting now! Come learn about output caching in .NET 7 with @sebastienros!\n\nhttps://t.co/3xy77Y9yqJ https://t.co/VrbMBtQ9XB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":16,"FavoriteCount":3,"RawContent":null},{"Id":"1511033776834457603","CreatedAt":"2022-04-04T17:31:40+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🚀 Output Caching in .NET 7\n⭐ Sébastien Ros (@sebastienros)\n\n🗓Tuesday | Ap… https://t.co/sB1hkVjtSq","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":17,"FavoriteCount":6,"RawContent":null},{"Id":"1506314757485170689","CreatedAt":"2022-03-22T16:59:58+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Instant APIs https://t.co/Z7e2BueHJo","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1504161094608121860","CreatedAt":"2022-03-16T18:22:05+00:00","UserScreenname":"aspnet","Text":"📰#AspNetCore updates in .NET 7 Preview 2\n\n⭐Infer API controller action parameters from services\n⭐DI for SignalR hub… https://t.co/KxMYuQNxRd","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":58,"FavoriteCount":22,"RawContent":null},{"Id":"1501256562895036419","CreatedAt":"2022-03-08T18:00:31+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Native client apps with Blazor Hybrid https://t.co/f5vHcTQhd2","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":20,"FavoriteCount":7,"RawContent":null},{"Id":"1496168009215344643","CreatedAt":"2022-02-22T17:00:25+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - 20 Years of https://t.co/eFOzgs22K8🎂 https://t.co/XXTMIc5Dy9","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1496167407744086018","CreatedAt":"2022-02-22T16:58:02+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join @shanselman, @poppastring, and @jongalloway to chat about 20 years of… https://t.co/hfMKeHr1vZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"1495871220394385411","CreatedAt":"2022-02-21T21:21:05+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🎂 20 Years of https://t.co/eFOzgrKrSA\n⭐ Featuring Scott Hanselman, Mark D… https://t.co/GPs3Ptw8qb","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":24,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2022-04-18T03:30:08.7467908Z","RunDurationInMilliseconds":3314}