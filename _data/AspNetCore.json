{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET MAUI Preview 14","PublishedOn":"2022-03-16T19:30:33+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Preview 14 of .NET Multi-platform App UI (MAUI) is now available in Visual Studio 2022 17.2 Preview 2. This release includes a hefty volume of issue resolutions and completed features, and one new...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-maui-preview-14/","RawContent":null},{"Title":"ASP.NET Core updates in .NET 7 Preview 2","PublishedOn":"2022-03-15T16:36:06+00:00","CommentsCount":9,"FacebookCount":0,"Summary":".NET 7 Preview 2 is now available and includes many great new improvements to ASP.NET Core.\nHere&#8217;s a summary of what&#8217;s new in this preview release:\nInfer API controller action parameters...","Href":"https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-7-preview-2/","RawContent":null},{"Title":"Announcing .NET 7 Preview 2 – The New, ‘New’ Experience","PublishedOn":"2022-03-15T00:54:39+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are glad to release .NET 7 Preview 2. The second preview of .NET 7 includes enhancements to RegEx source generators, progress moving NativeAOT from experimental status into the runtime, and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-dotnet-7-preview-2/","RawContent":null},{"Title":"Automate code metrics and class diagrams with GitHub Actions","PublishedOn":"2022-03-09T18:17:58+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Hi friends, in my previous post — .NET 💜 GitHub Actions, you were introduced to the GitHub Actions platform and the workflow composition syntax. You learned how common .NET CLI commands and actions...","Href":"https://devblogs.microsoft.com/dotnet/automate-code-metrics-and-class-diagrams-with-github-actions/","RawContent":null},{"Title":".NET March 2022 Updates – .NET 6.0.3, .NET 5.0.15 and, .NET 3.1.23","PublishedOn":"2022-03-08T19:38:07+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the .NET March 2022 Updates. These updates contain reliability and security improvements. See the individual release notes for details on updated packages.\nYou can download...","Href":"https://devblogs.microsoft.com/dotnet/march-2022-updates/","RawContent":null},{"Title":"Sharing code between ASP.NET and ASP.NET Core","PublishedOn":"2022-03-02T17:27:30+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With the release of .NET 6 there are even more benefits to using ASP.NET Core. But migrating existing code to ASP.NET Core often sounds like a big investment. Today we&#8217;ll share how you can...","Href":"https://devblogs.microsoft.com/dotnet/sharing-code-between-aspnet-and-aspnetcore/","RawContent":null},{"Title":"Training a ML.NET Model with Azure ML","PublishedOn":"2022-02-28T18:31:36+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Model Builder makes it easy to get started with Machine Learning and create your first model. As you gather more data over time, you may want to continuously refine or retrain your model. Using a...","Href":"https://devblogs.microsoft.com/dotnet/training-a-ml-dotnet-model-with-azure-ml/","RawContent":null},{"Title":".NET 💜 GitHub Actions: Intro to GitHub Actions for .NET","PublishedOn":"2022-02-25T16:22:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Hi friends, I put together posts where I&#8217;m going to teach you the basics of the GitHub Actions platform. In this post, you&#8217;ll learn how GitHub Actions can improve your .NET development...","Href":"https://devblogs.microsoft.com/dotnet/dotnet-loves-github-actions/","RawContent":null},{"Title":"Early peek at C# 11 features","PublishedOn":"2022-02-22T17:55:00+00:00","CommentsCount":82,"FacebookCount":0,"Summary":"Visual Studio 17.1 (Visual Studio 2022 Update 1) and .NET SDK 6.0.200 include preview features for C# 11! You can update Visual Studio or download the latest .NET SDK to get these features.\nCheck out...","Href":"https://devblogs.microsoft.com/dotnet/early-peek-at-csharp-11-features/","RawContent":null},{"Title":"Announcing Entity Framework 7 Preview 1","PublishedOn":"2022-02-17T17:00:24+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, the .NET data team announces the first preview release of\nEF Core 7.0 (EF7).\nThis release contains mostly bug fixes and foundation work for larger features that will land in later previews. Be...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-7-preview-1/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"1176163704","IsPullRequest":false,"CreatedAt":"2022-03-22T01:52:32","Actor":"neozhu","Number":"40813","RawContent":null,"Title":"@javiercn Thanks for your support.","State":"open","Body":"my solution:\r\n```\r\npublic async Task<bool> Login(LoginFormModel request)\r\n    {\r\n        var user = await _userManager.FindByNameAsync(request.UserName);\r\n        var valid = await _userManager.CheckPasswordAsync(user, request.Password);\r\n        if (valid)\r\n        {\r\n            var token = await _userManager.GenerateUserTokenAsync(user, TokenOptions.DefaultProvider, \"SignIn\");\r\n            var data = $\"{user.Email}|{token}\";\r\n            await _protectedLocalStorage.SetAsync(KEY, data);\r\n            await _protectedLocalStorage.SetAsync(USERID, user.Id);\r\n            await _protectedLocalStorage.SetAsync(USERNAME, user.UserName);\r\n            var identity = await createIdentityFromApplicationUser(user);\r\n            var principal = new ClaimsPrincipal(identity);\r\n            NotifyAuthenticationStateChanged(Task.FromResult(new AuthenticationState(principal)));\r\n        }\r\n        return valid;\r\n    }\r\n```\r\n```\r\npublic class CurrentUserService : ICurrentUserService\r\n{\r\n    private readonly ProtectedLocalStorage _protectedLocalStorage;\r\n    private const string USERID = \"UserId\";\r\n    private const string USERNAME = \"UserName\";\r\n    public CurrentUserService(\r\n        ProtectedLocalStorage protectedLocalStorage\r\n       )\r\n    {\r\n        _protectedLocalStorage = protectedLocalStorage;\r\n    }\r\n\r\n    public async Task<string> UserId()\r\n    {\r\n        try\r\n        {\r\n            var userId = string.Empty;\r\n            var storedPrincipal = await _protectedLocalStorage.GetAsync<string>(USERID);\r\n            if (storedPrincipal.Success && storedPrincipal.Value is not null)\r\n            {\r\n                userId = storedPrincipal.Value;\r\n            }\r\n\r\n            return userId;\r\n        }\r\n        catch\r\n        {\r\n            return String.Empty;\r\n        }\r\n    }\r\n    public async Task<string> UserName()\r\n    {\r\n        try\r\n        {\r\n            var userName = string.Empty;\r\n            var storedPrincipal = await _protectedLocalStorage.GetAsync<string>(USERNAME);\r\n            if (storedPrincipal.Success && storedPrincipal.Value is not null)\r\n            {\r\n                userName = storedPrincipal.Value;\r\n            }\r\n\r\n            return userName;\r\n        }\r\n        catch\r\n        {\r\n            return String.Empty;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nhttps://github.com/neozhu/CleanArchitectureWithBlazorServer","Url":"https://github.com/dotnet/aspnetcore/issues/40813","RelatedDescription":"Open issue \"@javiercn Thanks for your support.\" (#40813)"},{"Id":"1176103136","IsPullRequest":true,"CreatedAt":"2022-03-22T00:10:48","Actor":"dougbu","Number":"40812","RawContent":null,"Title":"Update branding to preview4","State":"open","Body":"","Url":"https://github.com/dotnet/aspnetcore/pull/40812","RelatedDescription":"Open PR \"Update branding to preview4\" (#40812)"},{"Id":"1176087098","IsPullRequest":true,"CreatedAt":"2022-03-21T23:42:38","Actor":"BrennanConroy","Number":"40811","RawContent":null,"Title":"[SignalR] Add client return results","State":"open","Body":"This is the majority of the https://github.com/dotnet/aspnetcore/issues/5280 work.\r\n\r\nThere is still some cleanup needed like adding logging and better exceptions/exception messages.\r\nAnd some additional work needed after this change goes in that I'll list in the issue later.","Url":"https://github.com/dotnet/aspnetcore/pull/40811","RelatedDescription":"Open PR \"[SignalR] Add client return results\" (#40811)"},{"Id":"1175993171","IsPullRequest":false,"CreatedAt":"2022-03-21T22:01:13","Actor":"jcracknell","Number":"40810","RawContent":null,"Title":"No response for multipart body exceeding MaxRequestBodySize","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nUpgrading from 3.1 to 6.0, and a multipart body exceeding the configured MaxHttpRequestBodySize no longer produces an error response (or a response at all).\r\n\r\nUnder 3.1 attempting this would produce the trace:\r\n\r\n```\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.OnReadStarting()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.TryStart()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.ReadAsyncInternal(Memory`1 buffer, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.BufferedReadStream.EnsureBufferedAsync(Int32 minCount, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReaderStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(Stream stream, ArrayPool`1 bytePool, Nullable`1 limit, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReader.ReadNextSectionAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProviderFactory.AddValueProviderAsync(ValueProviderFactoryContext context)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.CreateAsync(ActionContext actionContext, IList`1 factories)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.TryCreateAsync(ActionContext actionContext, IList`1 factories)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerBinderDelegateProvider.<>c__DisplayClass0_0.<<CreateBinderDelegate>g__Bind|0>d.MoveNext()\r\n```\r\n\r\nInterestingly the log reports:\r\n\r\n```\r\n[2022-03-21 17:26:39.0396][INFO][Microsoft.AspNetCore.Hosting.Diagnostics] Request finished HTTP/1.1 POST http://localhost:57513/api/modules/irams/attachments multipart/form-data;+boundary=---------------------------344584781640975190543136916438 34166185 - 500 - text/plain;+charset=utf-8 90.6786ms\r\n[2022-03-21 17:26:39.0396][DEBUG][Microsoft.AspNetCore.Server.Kestrel.BadRequests] Connection id \"0HMGBG5LMMVRR\" bad request data: \"Request body too large. The max request body size is 33554432 bytes.\"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Request body too large. The max request body size is 33554432 bytes.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.OnReadStarting()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.TryStartAsync()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.ConsumeAsync()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)\r\n[2022-03-21 17:26:39.0396][DEBUG][Microsoft.AspNetCore.Server.Kestrel.Connections] Connection id \"0HMGBG5LMMVRR\" disconnecting.\r\n[2022-03-21 17:26:39.0396][DEBUG][Microsoft.AspNetCore.Server.Kestrel.Connections] Connection id \"0HMGBG5LMMVRR\" stopped.\r\n[2022-03-21 17:26:39.0396][DEBUG][Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets] Connection id \"0HMGBG5LMMVRR\" resumed.\r\n[2022-03-21 17:26:39.0396][DEBUG][Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets] Connection id \"0HMGBG5LMMVRR\" sending FIN because: \"The Socket transport's send loop completed gracefully.\"\r\n```\r\n\r\nBut what I actually get is a closed connection (no response), and a ModelBinding error with a null IFormFile on the server.\r\n\r\nThis appears to be caught by FormValueProviderFactory per 78a587b02ebce99493a8e9b8c417ecbbbee457ce:\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/57c3104f0d19bb9e25b8ba75b422e2d6072e1dd5/src/Mvc/Mvc.Core/src/ModelBinding/FormValueProviderFactory.cs#L50-L55\n\n### Expected Behavior\n\nAny request exceeding MaxRequestBodySize should produce an HTTP 413: Payload too large.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.102\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40810","RelatedDescription":"Open issue \"No response for multipart body exceeding MaxRequestBodySize\" (#40810)"},{"Id":"1175978794","IsPullRequest":false,"CreatedAt":"2022-03-21T21:48:12","Actor":"jirisykora83","Number":"40809","RawContent":null,"Title":"Optimize subsequential Blazor WASM load","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nI know that there is significant focus to making the first load of Blazor WASM as fast as possible.  I understand that there are some limitations such as downloading runtime etc.. \r\n\r\nWhat I do not see is focus on loading time on fast network or subsequential where most of the dll should be cached.\r\n\r\nBecause of lack of any profiler, it is harder to tell what happen during subsequential load but i try to leverage `console.time` to get at least something. These are my results with default template just edited to trace different parts of blazor first render path.\r\n\r\n<img width=\"925\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7279825/159366691-95cef484-a83e-4ef9-91bb-2e653f91718c.png\">\r\n\r\n```\r\n<script type=\"module\">\r\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\t\t\tconsole.time(\"Blazor.Start\")\r\n\t\t\tconsole.time(\"Blazor.BeforeMain\")\r\n\t\t\tBlazor.start({\r\n\t\t\t\tloadBootResource: function (type, name, defaultUri, integrity) {\r\n\t\t\t\t\tlet resourceVersion = integrity == null || integrity === '' ? 'commitId' : integrity;\r\n\t\t\t\t\tconsole.time(\"Blazor.loadBootResource.\" + name);\r\n\r\n\t\t\t\t\tif (type !== 'dotnetjs') {\r\n\t\t\t\t\t\treturn (async function () {\r\n\t\t\t\t\t\t\tconst response = await fetch(`${defaultUri}?v=${resourceVersion}`);\r\n\t\t\t\t\t\t\tconsole.timeEnd(\"Blazor.loadBootResource.\" + name);\r\n\r\n\t\t\t\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\t\t\t\tthrow new Error(response.statusText);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn response;\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.timeEnd(\"Blazor.loadBootResource.\" + name);\r\n\t\t\t\t\treturn `${defaultUri}?v=${resourceVersion}`;\r\n\t\t\t\t}\r\n\t\t\t}).then(function () {\r\n\t\t\t\tconsole.timeEnd(\"Blazor.Start\");\r\n\t\t\t});\r\n\t\t});\r\n</script>\r\n```\r\n\r\nI also use custom base component which enables basic \"pef tracing\"\r\n\r\n```\r\npublic class BaseComponent : ComponentBase\r\n{\r\n\tpublic Guid UniqueId { get; } = Guid.NewGuid();\r\n\r\n\t[Inject, NotNull]\r\n\tpublic IJSInProcessRuntime? JsInProcessRuntime { get; set; }\r\n\r\n\tpublic BaseComponent()\r\n\t{\r\n\t}\r\n\r\n\tprotected override void OnInitialized()\r\n\t{\r\n\t\tStartRenderTrace();\r\n\t\tbase.OnInitialized();\r\n\t}\r\n\r\n\t[MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n\tprotected override bool ShouldRender()\r\n\t{\r\n\t\tbool shouldRender = base.ShouldRender();\r\n\r\n\t\tif (shouldRender)\r\n\t\t{\r\n\t\t\tStartRenderTrace();\r\n\t\t}\r\n\r\n\t\treturn shouldRender;\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// Should be called in <see cref=\"ShouldRender\"/> in case that it return true.\r\n\t/// </summary>\r\n\t[MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n\tprotected void StartRenderTrace()\r\n\t{\r\n\t\tJsInProcessRuntime.InvokeVoid(\"console.time\",\r\n\t\t\tGetComponentId(startedRenderId++));\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// Should be called in <see cref=\"OnAfterRenderAsync\"/> or <seealso cref=\"ComponentBase.OnAfterRender\"/>. By default is called in <see cref=\"OnAfterRenderAsync\"/>.\r\n\t/// </summary>\r\n\t[MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n\tprotected void EndRenderTrace()\r\n\t{\r\n\t\tJsInProcessRuntime.InvokeVoid(\"console.timeEnd\",\r\n\t\t\tGetComponentId(finishedRenderId++));\r\n\t}\r\n\r\n\tprotected override async Task OnAfterRenderAsync(bool firstRender)\r\n\t{\r\n\t\tawait base.OnAfterRenderAsync(firstRender);\r\n\t\tEndRenderTrace();\r\n\t}\r\n\r\n\tprivate int startedRenderId = 0;\r\n\tprivate int finishedRenderId = 0;\r\n\tprivate string? componentName;\r\n\r\n\tprivate string GetComponentFullName()\r\n\t{\r\n\t\tif (componentName is null)\r\n\t\t{\r\n\t\t\tcomponentName = GetType().FullName ?? \"-unknown-\";\r\n\t\t}\r\n\r\n\t\treturn componentName;\r\n\t}\r\n\r\n\tprivate string GetComponentId(int runIndex)\r\n\t{\r\n\t\treturn $\"{GetComponentFullName()}--{UniqueId}--{runIndex}\";\r\n\t}\r\n}\r\n```\r\n\r\nAny other change to default template is Program.cs\r\n\r\n```\r\n// ------- Before main...\r\nvar assembly = Assembly.GetAssembly(typeof(WebAssemblyHostBuilder));\r\n\r\nvar type = assembly.GetType(\"Microsoft.AspNetCore.Components.WebAssembly.Services.DefaultWebAssemblyJSRuntime\");\r\nvar field = type.GetField(\"Instance\",\r\n\tBindingFlags.Static\r\n\t| BindingFlags.NonPublic);\r\nvar jsInProcessRuntimeReflection = (IJSInProcessRuntime)field.GetValue(type);\r\njsInProcessRuntimeReflection.InvokeVoid(\"console.timeEnd\", \"Blazor.BeforeMain\");\r\n\r\n// ---> MAIN\r\njsInProcessRuntimeReflection.InvokeVoid(\"console.time\", \"WebAssemblyHostBuilder.CreateDefault\");\r\nvar builder = WebAssemblyHostBuilder.CreateDefault(args);\r\njsInProcessRuntimeReflection.InvokeVoid(\"console.timeEnd\", \"WebAssemblyHostBuilder.CreateDefault\");\r\n\r\njsInProcessRuntimeReflection.InvokeVoid(\"console.time\", \"Main\");\r\n\r\n// https://www.meziantou.net/optimizing-js-interop-in-a-blazor-webassembly-application.htm\r\nbuilder.Services.AddSingleton(serviceProvider => (IJSInProcessRuntime)serviceProvider.GetRequiredService<IJSRuntime>());\r\nbuilder.Services.AddSingleton(serviceProvider => (IJSUnmarshalledRuntime)serviceProvider.GetRequiredService<IJSRuntime>());\r\nvar jsInProcessRuntime = builder.Services.BuildServiceProvider().GetRequiredService<IJSInProcessRuntime>();\r\n\r\nbuilder.RootComponents.Add<App>(\"#app\");\r\nbuilder.RootComponents.Add<HeadOutlet>(\"head::after\");\r\n\r\nbuilder.Services.AddScoped(sp => new HttpClient\r\n{\r\n\tBaseAddress = new Uri(builder.HostEnvironment.BaseAddress)\r\n});\r\n\r\njsInProcessRuntime.InvokeVoid(\"console.time\", \"builder.Build\");\r\nvar host = builder.Build();\r\njsInProcessRuntime.InvokeVoid(\"console.timeEnd\", \"builder.Build\");\r\n\r\njsInProcessRuntime.InvokeVoid(\"console.timeEnd\", \"Main\");\r\n\r\nawait host.RunAsync();\r\n```\r\n\r\nChrome profile snapshot: \r\n\r\n[Profile-20220321T224724.zip](https://github.com/dotnet/aspnetcore/files/8319427/Profile-20220321T224724.zip)\r\n\r\n\r\nEdit: I also added a few nuget package as FluentValidation, MediatR, Grpc. Which are not used in any way, I just want to simulate \"real world\" example. Because my hypotesy is that loading dll it self is slow (not dowloading).\n\n### Describe the solution you'd like\n\nI will be happy if subsequent load or load on a fast network is faster. The timing in my example is without cpu throttling, so I expect on mobile it was 2x-3x slower.\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40809","RelatedDescription":"Open issue \"Optimize subsequential Blazor WASM load\" (#40809)"},{"Id":"1175099282","IsPullRequest":false,"CreatedAt":"2022-03-21T21:02:39","Actor":"mamdos","Number":"40793","RawContent":null,"Title":"The config for identity isn't sync with client-side validation for password","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI recently faced this bug that is , when I change the password minimum length in identity configure it doesn't make any change to client-side validation and client-side validation is always fixed with 6 password lengths.\n\n### Expected Behavior\n\nfor example, I want the minimum length of the password to be 8 chars and I change it in identity configuration when the user enters 4 chars password the app says to the user that your password must be more than 6 chars which is incorrect, it must be more than 8 chars.\n\n### Steps To Reproduce\n\n_No response_\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40793","RelatedDescription":"Closed issue \"The config for identity isn't sync with client-side validation for password\" (#40793)"},{"Id":"1175899530","IsPullRequest":true,"CreatedAt":"2022-03-21T20:21:46","Actor":"campersau","Number":"40808","RawContent":null,"Title":"Ignore hash when supplying querystring parameters","State":"open","Body":"Fixes #40806\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/40808","RelatedDescription":"Open PR \"Ignore hash when supplying querystring parameters\" (#40808)"},{"Id":"1174446196","IsPullRequest":false,"CreatedAt":"2022-03-21T20:04:00","Actor":"JamesNK","Number":"40788","RawContent":null,"Title":"Response.BodyWriter.FlushAsync doesn't return canceled on HttpContext.Abort","State":"closed","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nI have code that writes a large HTTP/2 response to `Response.BodyWriter` and then calls `FlushAsync`. The client isn't reading the response so `FlushAsync` waits because of flow control. At the same time, there is a `CancellationTokenSource` aborts the `HttpContext` after waiting for a couple of seconds.\r\n\r\nWhen `HttpContext` is aborted the waiting `FlushAsync` returns a `FlushResult`. However, both IsCompleted and IsCanceled properties on the result are false.\r\n\r\n### Expected Behavior\r\n\r\nI expected `FlushAsync` to either throw an `OperationCanceledException` or return `FlushResult` with IsCanceled of true.\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n6.0\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40788","RelatedDescription":"Closed issue \"Response.BodyWriter.FlushAsync doesn't return canceled on HttpContext.Abort\" (#40788)"},{"Id":"1175827584","IsPullRequest":true,"CreatedAt":"2022-03-21T19:12:47","Actor":"dougbu","Number":"40807","RawContent":null,"Title":"[release/6.0] Cleanup logs after successful test runs","State":"open","Body":"- backport for #39038\r\n- `cherry-pick` of 6958517ccd76\r\n- update `AssemblyTestLog` to perform actual log directory cleanup\r\n  - add `ReportTestFailure()` method for tests to report failures, disabling cleanup\r\n  - add `IAcceptFailureReports` for `AspNetTestAssemblyRunner` to report failures to `AssemblyTestLog`\r\n- extend `AspNetTestAssemblyRunner` to optionally create fixture instances using `static ForAssembly(Assembly)`\r\n- add `AssemblyTestLogFixtureAttribute` to register `AssemblyTestLog` as an assembly fixture\r\n  - use `AssemblyTestLogFixtureAttribute` in all test projects\r\n- disable log cleanup in three existing tests\r\n\r\n- add tests of new cleanup features\r\n  - also cover a few existing methods\r\n- do cleanup before creating new logger\r\n  - was deleting the just-created global.log file\r\n\r\nnits:\r\n- use `is [not] null` and `new()` more\r\n- move `AssemblyTestLogTests` to same namespace as `AssemblyTestLog`","Url":"https://github.com/dotnet/aspnetcore/pull/40807","RelatedDescription":"Open PR \"[release/6.0] Cleanup logs after successful test runs\" (#40807)"},{"Id":"1175790222","IsPullRequest":false,"CreatedAt":"2022-03-21T18:39:06","Actor":"terrajobst","Number":"40806","RawContent":null,"Title":"SupplyParameterFromQuery includes anchor","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nThe `[SupplyParameterFromQuery]` attribute includes anchor data:\r\n\r\n```razor\r\n@page \"/params\"\r\n<input class=\"input\" @bind-value=\"Input\" />\r\n@code {\r\n    [Parameter]\r\n    [SupplyParameterFromQuery(Name=\"q\")]\r\n    public string? Input { get; set; }\r\n}\r\n```\r\n\r\nChange the URL to `https://localhost:<port>/params?q=test#123`.\r\n\r\n### Expected Behavior\r\n\r\nThe text box contains `test`.\r\n\r\nThe actual behavior is that it contains the value `test#123`.\r\n\r\n### Steps To Reproduce\r\n\r\n1. Create a Blazor Server app `dotnet new blazorserver -o blazor-server-anchors`\r\n2. Add a page `params`\r\n3. Use the code above\r\n\r\n### .NET Version\r\n\r\n6.0.200\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/40806","RelatedDescription":"Open issue \"SupplyParameterFromQuery includes anchor\" (#40806)"},{"Id":"1175760117","IsPullRequest":true,"CreatedAt":"2022-03-21T18:31:57","Actor":"wtgodbe","Number":"40805","RawContent":null,"Title":"Revert \"[release/6.0] Build ProjectTemplates in Source-Build\"","State":"closed","Body":"This broke source build - we should re-introduce this in May after we get yarn.msbuild included in source-build.","Url":"https://github.com/dotnet/aspnetcore/pull/40805","RelatedDescription":"Closed or merged PR \"Revert \"[release/6.0] Build ProjectTemplates in Source-Build\"\" (#40805)"},{"Id":"1175754515","IsPullRequest":false,"CreatedAt":"2022-03-21T18:07:20","Actor":"rfabro","Number":"40804","RawContent":null,"Title":"Add ElementReference to InputRadioGroup & InputRadio","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nThe InputRadioGroup & InputRadio doesn't have the `ElementReference` unlike the other Blazor form components. I'm trying to set focus on these controls and since they don't have `ElementReference` I wasn't able to call the `FocusAsync` extension method.\n\n### Describe the solution you'd like\n\nAdd ElementReference to InputRadioGroup & InputRadio so I can set focus on these components without using the JS interop.\n\n### Additional context\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40804","RelatedDescription":"Open issue \"Add ElementReference to InputRadioGroup & InputRadio\" (#40804)"},{"Id":"1175735130","IsPullRequest":false,"CreatedAt":"2022-03-21T17:48:30","Actor":"Lizzy-Gallagher","Number":"40803","RawContent":null,"Title":"Undocumented breaking change in default static asset handling .NET 6: Files in wwwroot/ no longer included as content, in publishable zip file","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nMy team recently updated a web application to .NET 6 (from .NET 5) and found that after updating files in `wwwroot/` that had previously had the `Content` build action (and were therefore included in our publishable zip when using: `msbuild MySolution.sln /p:DeployOnBuild=true /p:DeployTarget=Package`) are no longer being marked as `Content` nor included in the publishable zip after the update.\r\n\r\nThis is because of the rollout of Static Web Assets V2 which is undocumented in both\r\n- https://docs.microsoft.com/en-us/aspnet/core/release-notes/aspnetcore-6.0?view=aspnetcore-6.0\r\n- https://docs.microsoft.com/en-us/dotnet/core/compatibility/6.0\r\n\r\nThis opting out of these files in `wwwroot/` happens in https://github.com/dotnet/sdk/blob/main/src/RazorSdk/Targets/Microsoft.NET.Sdk.Razor.StaticWebAssets.targets#L464 which can only be not included in the build when setting the `StaticWebAssetsEnabled` property to `false`.\r\n\r\nIt is important to our team to have these files physically deployed since we rely on a tool that does file system scanning at deploy time. \n\n### Expected Behavior\n\nTwo thoughts:\r\n1. It would have saved us quite a bit of research effort if this change has been documented on one of the above pages.  \r\n\r\n2. Also, ideally, if our app manually opts-in these files to `Content` in the .csproj, that would continue to be respected instead of overriden by the SDK, e.g.\r\n```\r\n<Content Include=\"wwwroot\\**\" />\r\n```\n\n### Steps To Reproduce\n\n1. Create a sample web project from Visual Studio\r\n2. Add a file (e.g. MyFile.css) to wwwroot\r\n3. Manually opt-in MyFile.css to `Content` in the csproj: `<Content Include=\"wwwroot/MyFile.css\" />`\r\n4. Create a publishable zip with `msbuild MySolution.sln /p:DeployOnBuild=true /p:DeployTarget=Package`\r\n5. Open the zip to confirm that MyFile.css is not included\r\n6. Add `<StaticWebAssetsEnabled>false</StaticWebAssetsEnabled>` to the .csproj (or change target framework to `net5.0`)\r\n7. Repeat step 4.\r\n8. Open the zip to confirm that MyFile.css is included\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.100\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40803","RelatedDescription":"Open issue \"Undocumented breaking change in default static asset handling .NET 6: Files in wwwroot/ no longer included as content, in publishable zip file\" (#40803)"},{"Id":"1175311917","IsPullRequest":true,"CreatedAt":"2022-03-21T16:39:39","Actor":"dependabot[bot]","Number":"40796","RawContent":null,"Title":"[main] (deps): Bump src/submodules/googletest from `ae1b7ad` to `b007c54`","State":"closed","Body":"Bumps [src/submodules/googletest](https://github.com/google/googletest) from `ae1b7ad` to `b007c54`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/googletest/commit/b007c54f2944e193ac44fba1bc997cb65826a0b9\"><code>b007c54</code></a> Running clang-format over all of GoogleTest</li>\n<li><a href=\"https://github.com/google/googletest/commit/8a422b8398dd7e2b6b3e1fcbfbceb43ead2a5761\"><code>8a422b8</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/google/googletest/issues/3774\">#3774</a> from sobczyk:main</li>\n<li><a href=\"https://github.com/google/googletest/commit/ae5e06dd35c6137d335331b0815cf1f60fd7e3c5\"><code>ae5e06d</code></a> Remove references to deleted script gen_gtest_pred_impl.py</li>\n<li><a href=\"https://github.com/google/googletest/commit/3c5320bf6f4632756a64dffb83b7837246e7f743\"><code>3c5320b</code></a> Add myself to contributors</li>\n<li><a href=\"https://github.com/google/googletest/commit/132059ba0c495406f8e523f01f7ea473ea6c6bd2\"><code>132059b</code></a> Adjust documentation regarding xml and json source file location otput.</li>\n<li><a href=\"https://github.com/google/googletest/commit/5c1b42a58dbc0e045270a96ce4de913ee9d4eeed\"><code>5c1b42a</code></a> Adjust xml and json unit tests to test for source file and line location.</li>\n<li><a href=\"https://github.com/google/googletest/commit/ee5e3043ce54939c31e6b7e14ca6cb69cc5bf18f\"><code>ee5e304</code></a> Add support for testing of xml and json output of source file and line location</li>\n<li><a href=\"https://github.com/google/googletest/commit/f7621f01918415d5d51a5c967cfe0e06a1544bb0\"><code>f7621f0</code></a> Output source file path and line number in xml and json files.</li>\n<li>See full diff in <a href=\"https://github.com/google/googletest/compare/ae1b7ad4308249bfa928e65d1a33be117fc0992c...b007c54f2944e193ac44fba1bc997cb65826a0b9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","Url":"https://github.com/dotnet/aspnetcore/pull/40796","RelatedDescription":"Closed or merged PR \"[main] (deps): Bump src/submodules/googletest from `ae1b7ad` to `b007c54`\" (#40796)"},{"Id":"1175648166","IsPullRequest":false,"CreatedAt":"2022-03-21T16:39:30","Actor":"brunolins16","Number":"40802","RawContent":null,"Title":"Make Result types constructors public","State":"open","Body":"Result types were changed to be public but was decided to keep `ctors` internal to have a better design discussion.\r\n\r\nThe original proposal is described in #40656 ","Url":"https://github.com/dotnet/aspnetcore/issues/40802","RelatedDescription":"Open issue \"Make Result types constructors public\" (#40802)"},{"Id":"1175613031","IsPullRequest":false,"CreatedAt":"2022-03-21T16:35:35","Actor":"hamiddd1980","Number":"40801","RawContent":null,"Title":"EventCallback<T> doesn't work with Generic Parameter","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nIn **Blazor webassembly** and in a generic component (**@typeparam TItem**), when the generic version of **Eventcallback** is used and Generic type is passed from Parent to Generic component as a parameter, the program doesn't compile and produce following Errors:\r\n-CS7000 Unexpected use of an aliased name\r\n-CS0400\tThe type or namespace name 'global' could not be found in the global namespace\r\n\r\n\n\n### Expected Behavior\n\nThe Generic Eventcallback must work correctly.(Eventcallback<TItem>)\n\n### Steps To Reproduce\n\nDefine Generic Component :  **GenericComponent.razor**\r\n```\r\n@typeparam TItem\r\n<button class=\"btn btn-info\" @onclick=\"@(()=>buttonClicked(Argument))\">Click</button>\r\n@code {\r\n    [Parameter]\r\n    public TItem Argument{ get; set; }\r\n    private void buttonClicked(TItem item)\r\n    {\r\n        ButtonClickedEventCallback.InvokeAsync(item);\r\n    }\r\n\r\n    [Parameter]\r\n    public EventCallback<TItem> ButtonClickedEventCallback { get; set; }\r\n}\r\n```\r\n-----------------------------------------------------------------------------------\r\nDefine a Hosting Component : **GenericConsumer.razor**\r\n\r\n```\r\n@page \"/genericconsumer\"\r\n<h3>Generic Consumer : @pageTitle</h3>\r\n\r\n<GenericComponent TItem=\"int\" ButtonClickedEventCallback=\"@buttonClickHandler\" Argument=\"10\"></GenericComponent>\r\n@code {\r\n    private string pageTitle = string.Empty;\r\n    private void buttonClickHandler(int genericValue)\r\n    {\r\n        pageTitle = $\"Button Clicked {genericValue}\";\r\n    }\r\n}\r\n```\r\n\n\n### Exceptions (if any)\n\n-CS7000 Unexpected use of an aliased name\r\n-CS0400\tThe type or namespace name 'global' could not be found in the global namespace\r\n-CS8974 Converting method group **buttonClickHandler** to none-delegate object type.Did you intend to invoke the method?\n\n### .NET Version\n\n7.0.100-preview.2.22153.17\n\n### Anything else?\n\nVS 2022  Version 17.2.0 Preview 2.0\r\nBlazor webassembly","Url":"https://github.com/dotnet/aspnetcore/issues/40801","RelatedDescription":"Closed issue \"EventCallback<T> doesn't work with Generic Parameter\" (#40801)"},{"Id":"1175595569","IsPullRequest":false,"CreatedAt":"2022-03-21T15:58:53","Actor":"Programmer3591","Number":"40800","RawContent":null,"Title":"[Blazor] Blazor Server .NET 6 No Scroll after clicking an anchor link","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nWhen clicking an anchor link to redirect to another app page the page does not scroll up to the top. This requires having the link you click low on the first page to allow room for the scroll to occur. \r\n\r\nCode to reproduce this error can be found here: https://github.com/Programmer3591/BlazorServerNet6_ScrollToTopOnPageLoadIssue\r\n\r\nA video example of this error using the code above can be found here: https://youtu.be/3lVr5Kv_TDo\r\n\r\nA very similar issues was fixed back in 2019. I have tested this code on a Blazor Server .NET 5 app and it does not occur, therefore I believe the 2019 issues has resurfaced upon moving to .NET 6.\n\n### Expected Behavior\n\nUpon a new app page redirect the web view should be at the top of the page and not get stuck while scrolling up to the top.\n\n### Steps To Reproduce\n\nCode to reproduce this error can be found here: https://github.com/Programmer3591/BlazorServerNet6_ScrollToTopOnPageLoadIssue\r\n\r\nStart at the home page, scroll down to the bottom anchor link. Click the link, repeat till the next page gets stuck somewhere at the lower half of the screen.\n\n### Exceptions (if any)\n\nNo Exceptions thrown.\n\n### .NET Version\n\n6.0.201\n\n### Anything else?\n\nCode to reproduce this error can be found here: https://github.com/Programmer3591/BlazorServerNet6_ScrollToTopOnPageLoadIssue\r\n\r\nA video example of this error using the code above can be found here: https://youtu.be/3lVr5Kv_TDo","Url":"https://github.com/dotnet/aspnetcore/issues/40800","RelatedDescription":"Open issue \"[Blazor] Blazor Server .NET 6 No Scroll after clicking an anchor link\" (#40800)"},{"Id":"1175483282","IsPullRequest":false,"CreatedAt":"2022-03-21T14:38:12","Actor":"guardrex","Number":"40798","RawContent":null,"Title":"Unexpected binding behavior (with addl side ?s) for Blazor docs","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nWhile working on possible additional Blazor binding coverage, I noticed an unexpected behavior that I'd like to ask about. It kind'a looks like a bug, but it's probably designed behavior.\r\n\r\nWhile asking about the unexpected behavior here, I'd like to toss in two additional, related side questions at the end, also for potential docs coverage related to this question.\r\n\r\n# Main question on unexpected framework behavior\r\n\r\nI've reviewed open binding work and answered questions, but I don't see my question mentioned:\r\n\r\n* [Add support for binding decimal, double, float data type with configurable formatting (dotnet/aspnetcore #5523)](https://github.com/dotnet/aspnetcore/issues/5523)\r\n* [two way binding does not yet handle color picker in blazor (dotnet/aspnetcore #10376)](https://github.com/dotnet/aspnetcore/issues/10376)\r\n\r\nWe currently cover [property-based custom binding](https://docs.microsoft.com/aspnet/core/blazor/components/data-binding#custom-binding-formats), and the example uses a `decimal`. The strange behavior occurs using property-based binding with a color picker (`<input type=\"color\" @bind=\"PickerColor\" />` where `PickerColor` is a `string`).\r\n\r\nThe following example doesn't set the color picker `value` correctly (to forest green) when the component is first rendered, then it **_works as expected_** when a color is picked by the user after the component is loaded.\r\n\r\n```razor\r\n@using System.Drawing \r\n\r\n<p>\r\n    <input type=\"color\" @bind=\"PickerColor\" />\r\n</p>\r\n\r\n<p>\r\n    color: @color\r\n</p>\r\n\r\n@code {\r\n    private Color color = Color.ForestGreen;\r\n\r\n    private string PickerColor\r\n    {\r\n        get => ColorTranslator.ToHtml(color);\r\n        set\r\n        {\r\n            color = ColorTranslator.FromHtml(value);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nInitial load:\r\n\r\n<img width=\"501\" alt=\"a-failing-load\" src=\"https://user-images.githubusercontent.com/1622880/159280461-96075102-3f19-4970-b216-b41c07331792.png\">\r\n\r\nAfter picking red:\r\n\r\n<img width=\"501\" alt=\"a-failing-picked\" src=\"https://user-images.githubusercontent.com/1622880/159280478-f8d0ab2b-dd39-42b5-be98-b7ab2e93ba17.png\">\r\n\r\n**_Setting the `PickerColor` with a formatted string (that drops the alpha) does work:_**\r\n\r\n```csharp\r\nget => string.Format(\"#{0:X6}\", color.ToArgb() & 0x00FFFFFF);\r\n```\r\n\r\nInitial load with the preceding `get`:\r\n\r\n<img width=\"501\" alt=\"a-working-load\" src=\"https://user-images.githubusercontent.com/1622880/159280523-57e5cd0e-d750-483e-af5d-4900f59a94c4.png\">\r\n\r\n❓ Why does the `ToHtml` initially fail, then work fine thereafter via user color picks? I expected that if `ToHtml` is going to fail that it would fail for both the initial render **_and_** on change events.\r\n\r\nI'm not necessarily suggesting that we'll document this behavior, but we might depending on the answer.\r\n\r\n# Side questions while I'm here\r\n\r\nAn entirely different approach is to use a `CreateBinder`, which works fine (initial value and user picks):\r\n\r\n```razor\r\n@using System.Drawing \r\n\r\n<p>\r\n    <input type=\"color\"\r\n            value=\"@string.Format(\"#{0:X6}\", color.ToArgb() & 0x00FFFFFF)\"\r\n            @onchange=\"EventCallback.Factory.CreateBinder<Color>(\r\n                this, __value => color = __value, color)\" />\r\n</p>\r\n\r\n<p>\r\n    color: @color\r\n</p>\r\n\r\n@code {\r\n    private Color color = Color.ForestGreen;\r\n}\r\n```\r\n\r\n... and works well with color logic as ...\r\n\r\n```razor\r\n@using System.Drawing \r\n\r\n<p>\r\n    <input type=\"color\"\r\n            value=\"@string.Format(\"#{0:X6}\", color.ToArgb() & 0x00FFFFFF)\"\r\n            @onchange=\"EventCallback.Factory.CreateBinder<Color>(\r\n                this,\r\n                __value => color = ColorLogic(__value),\r\n                color)\" />\r\n</p>\r\n\r\n<p>\r\n    color: @color\r\n</p>\r\n\r\n@code {\r\n    private Color color = Color.ForestGreen;\r\n\r\n    private Color ColorLogic(Color c)\r\n    {\r\n        if (c == Color.Red)\r\n        {\r\n            return Color.Blue;\r\n        }\r\n\r\n        return c;\r\n    }\r\n}\r\n```\r\n\r\n❓ **_Side question 1:_** The PU never called for docs on the use of `CreateBinder` for any purpose. This is a case where it seems like a fair (but perhaps advanced) approach. Should we cover it? If so, can you define some basic guidance on its use:\r\n\r\n* What use cases is it best suited for? Where should it be avoided?\r\n* Should we dissuade its use slightly by describing it as an \"advanced\" scenario?\r\n* Any perf or security concerns?\r\n\r\n**_BTW_**: A community dev did say that they found `CreateBinder` useful in their app that works with `DataTable`/`DataRow` at https://github.com/dotnet/AspNetCore.Docs/issues/16370. In fact, that's what generated the whole docs discussion in the first place. In spite of working for them, the dev was looking for a less gritty approach than `CreateBinder`, leading to my 2nd question 👇, which might be better for their use case (*not sure*, just speculating).\r\n\r\n❓ **_Side question 2:_** The PU also never requested `TypeConverter` coverage for any purpose.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.typeconverter\r\n\r\nI haven't worked with them (*yet* ... I'd like to at least learn more). I see it in framework tests. For example, there's a `[TypeConverter(typeof(PersonConverter))]` test at ...\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/main/src/Components/Components/test/BindConverterTest.cs#L380-L429\r\n\r\nShould we cover `TypeConverter`? If so ...\r\n\r\n* What use cases is it best suited for? Where should it be avoided?\r\n* Should we dissuade its use slightly by describing it as an \"advanced\" scenario?\r\n* Any perf or security concerns?\r\n\r\n### .NET Version\r\n\r\n6.0.300-preview.22154.4\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/40798","RelatedDescription":"Open issue \"Unexpected binding behavior (with addl side ?s) for Blazor docs\" (#40798)"},{"Id":"1175293277","IsPullRequest":true,"CreatedAt":"2022-03-21T13:41:49","Actor":"dotnet-maestro[bot]","Number":"40795","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:89b8d7af-c2e7-42f8-3b29-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 89b8d7af-c2e7-42f8-3b29-08d8b8050dda\r\n- **Build**: 20220318.2\r\n- **Date Produced**: March 18, 2022 11:42:47 PM UTC\r\n- **Commit**: bafd55901b50d6fc3507c8ed96a7777fcca1796f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Build.Tasks.Templating**: [from 7.0.0-beta.22157.6 to 7.0.0-beta.22168.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Installers**: [from 7.0.0-beta.22157.6 to 7.0.0-beta.22168.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22157.6 to 7.0.0-beta.22168.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22157.6 to 7.0.0-beta.22168.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/81001b4...bafd559\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:89b8d7af-c2e7-42f8-3b29-08d8b8050dda)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/40795","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#40795)"},{"Id":"1175290077","IsPullRequest":true,"CreatedAt":"2022-03-21T13:38:33","Actor":"dotnet-maestro[bot]","Number":"40794","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20220321.1\r\n- **Date Produced**: March 21, 2022 10:42:09 AM UTC\r\n- **Commit**: eb51b02b158c3ff71a1ec7eac8a211d1d464c1a5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Net.Http.Json**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.IO.Pipelines**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Threading.Channels**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-preview.3.22169.7 to 7.0.0-preview.3.22171.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/35be545...eb51b02\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/40794","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#40794)"},{"Id":"1174493905","IsPullRequest":false,"CreatedAt":"2022-03-21T13:04:48","Actor":"alaatm","Number":"40789","RawContent":null,"Title":"`BadHttpRequestException` not caught via `UseExceptionHandler` in non-development environment","State":"closed","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI am trying to catch bad requests such as malformed json input from my mobile app to my web api. Those types of errors throw `BadHttpRequestException`. In development environment, the developer exception middleware handles and logs these types of errors. However, when in non-development environment, Any request with malformed json will just return 400. The exception middleware doesn't catch `BadHttpRequestException` and nothing is logged either.\n\n### Expected Behavior\n\nWhen in non-development evnironment, be able to catch `BadHttpRequestException` through `UseExceptionHandler` or atleast be able to configure aspnet to log `BadHttpRequestException` errors.\n\n### Steps To Reproduce\n\n`dotnet new webapi`\r\n\r\n```cs\r\napp.UseExceptionHandler(errorApp =>\r\n{\r\n    errorApp.Run(async context =>\r\n    {\r\n        /* <<< Set breakpoint here */ var errorFeature = context.Features.Get<IExceptionHandlerFeature>();\r\n        var exception = errorFeature.Error;\r\n    });\r\n});\r\napp.MapPost(\"/test\", (Cmd cmd) => Results.Ok(cmd));\r\npublic record Cmd(string Name);\r\n```\r\n\r\nSet Production environment in Properties/launchSettings.json\r\n```json\r\n\"ASPNETCORE_ENVIRONMENT\": \"Production\"\r\n```\r\n\r\nPost any invalid json to `/test`, for example:\r\n```json\r\n{\r\n    name: \"test\"\r\n}\r\n```\r\n\r\nThe breakpoint is not hit and nothing is logged.\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.03\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40789","RelatedDescription":"Closed issue \"`BadHttpRequestException` not caught via `UseExceptionHandler` in non-development environment\" (#40789)"},{"Id":"1175314701","IsPullRequest":false,"CreatedAt":"2022-03-21T12:30:13","Actor":"dor1202","Number":"40797","RawContent":null,"Title":"Authorize Attribute Error","State":"open","Body":"Hi.\r\nI think I found a bug when using \r\n`@attribute [Authorize]`\r\n\r\nWhen the attribute is used in a specific page it works pretty well, but when you want to authorize all the pages and place the attribute in the `_import.razor` file, it will will redirect to another url but not as the first option.\r\n\r\nI'm adding the source files.\r\n[test oidc01.zip](https://github.com/dotnet/aspnetcore/files/8315356/test.oidc01.zip)\r\n\r\nOn the server side I am using orchard core server.\r\n\r\nDor.","Url":"https://github.com/dotnet/aspnetcore/issues/40797","RelatedDescription":"Open issue \"Authorize Attribute Error\" (#40797)"},{"Id":"1174913095","IsPullRequest":false,"CreatedAt":"2022-03-21T05:37:59","Actor":"JamesNK","Number":"40792","RawContent":null,"Title":"gRPC transcoding public API","State":"open","Body":"## Background and Motivation\r\n\r\ngRPC transcoding allows apps to expose gRPC services as if they were RESTful APIs.\r\n\r\n## Proposed API\r\n\r\n```cs\r\nnamespace Microsoft.AspNetCore.Grpc.JsonTranscoding\r\n{\r\n    public sealed class GrpcJsonTranscodingOptions\r\n    {\r\n        public GrpcJsonSettings JsonSettings { get; set; }\r\n        public Google.Protobuf.Reflection.TypeRegistry TypeRegistry { get; set; }\r\n    }\r\n\r\n    public sealed class GrpcJsonSettings\r\n    {\r\n        public bool WriteIndented { get; set; } = false;\r\n        public bool WriteEnumsAsIntegers { get; set; } = false;\r\n        public bool WriteInt64AsStrings { get; set; } = false;\r\n        public bool SkipDefaultValues { get; set; } = false;\r\n    }\r\n\r\n    public sealed class GrpcJsonTranscodingMetadata\r\n    {\r\n        public GrpcTranscodingMetadata(Google.Protobuf.Reflection.MethodDescriptor methodDescriptor, Google.Api.HttpRule httpRule);\r\n\r\n        public Google.Api.HttpRule HttpRule { get; }\r\n        public Google.Protobuf.Reflection.MethodDescriptor MethodDescriptor { get; }\r\n    }\r\n}\r\n\r\nnamespace Microsoft.Extensions.DependencyInjection\r\n{\r\n    public static class GrpcTranscodingServiceExtensions\r\n    {\r\n        public static IGrpcServerBuilder AddJsonTranscoding(this IGrpcServerBuilder builder);\r\n        public static IGrpcServerBuilder AddJsonTranscoding(this IGrpcServerBuilder builder, Action<GrpcJsonTranscodingOptions> configureOptions);\r\n    }\r\n}\r\n```\r\n\r\n## Usage Examples\r\n\r\n``` C#\r\n// Old and busted\r\nservices.AddGrpc(options =>\r\n    {\r\n        options.EnableDetailedErrors = true;\r\n    });\r\nservices.AddGrpcJsonTranscoding(options =>\r\n    {\r\n        options.JsonSettings.WriteIndented = true;\r\n    });\r\n\r\n// New hotness\r\nservices\r\n    .AddGrpc(options => options.EnableDetailedErrors = true)\r\n    .AddJsonTranscoding(options => options.JsonSettings.WriteIndented = true);\r\n\r\n// Maybe future?\r\nservices.AddGrpc()\r\n   .AddJsonTranscoding()\r\n   .AddJsonTranscoding<GreeterService>(options => options.JsonSettings.WriteIndented = true);\r\n```\r\n\r\n## Alternative Designs\r\n\r\n<!--\r\nWere there other options you considered, such as alternative API shapes?\r\nHow does this compare to analogous APIs in other ecosystems and libraries?\r\n-->\r\n\r\n## Risks\r\n\r\n<!--\r\nPlease mention any risks that to your knowledge the API proposal might entail, such as breaking changes, performance regressions, etc.\r\n-->\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/issues/40792","RelatedDescription":"Open issue \"gRPC transcoding public API\" (#40792)"},{"Id":"1174251066","IsPullRequest":true,"CreatedAt":"2022-03-20T13:37:43","Actor":"dotnet-maestro[bot]","Number":"40784","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 32db3699-5666-45da-a1b7-08d8b804cd75\r\n- **Build**: 20220319.7\r\n- **Date Produced**: March 20, 2022 8:02:01 AM UTC\r\n- **Commit**: 35be54579ed322177845101db4b115b3d768d9c4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.NETCore.BrowserDebugHost.Transport**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Net.Http.Json**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.IO.Pipelines**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Net.Http.WinHttpHandler**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Diagnostics.DiagnosticSource**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.DirectoryServices.Protocols**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Reflection.Metadata**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Threading.RateLimiting**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Threading.Channels**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Text.Json**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.NET.Runtime.WebAssembly.Sdk**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.NET.Runtime.MonoAOTCompiler.Task**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Internal.Runtime.AspNetCore.Transport**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.DependencyInjection.Abstractions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.DependencyInjection**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.Xml**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.UserSecrets**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.Json**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.Ini**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.FileExtensions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.EnvironmentVariables**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.CommandLine**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.Binder**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Caching.Memory**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Caching.Abstractions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Configuration.Abstractions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.DependencyModel**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.FileProviders.Abstractions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.FileProviders.Composite**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Primitives**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Options.DataAnnotations**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Options.ConfigurationExtensions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Options**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.TraceSource**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.EventSource**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.EventLog**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.Debug**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.Console**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.Configuration**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging.Abstractions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Logging**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Http**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Hosting.Abstractions**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.Hosting**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.HostFactoryResolver.Sources**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.FileSystemGlobbing**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.Extensions.FileProviders.Physical**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n  - **Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.browser-wasm**: [from 7.0.0-preview.3.22167.8 to 7.0.0-preview.3.22169.7][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/5371203...35be545\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:32db3699-5666-45da-a1b7-08d8b804cd75)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/aspnetcore/pull/40784","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#40784)"},{"Id":"1175539250","IsPullRequest":false,"CreatedAt":"2022-03-20T13:02:48","Actor":"WeihanLi","Number":"40799","RawContent":null,"Title":"System.Text.Json NotSupportedException","State":"open","Body":"Exception message:\r\n\r\n```\r\nSystem.NotSupportedException: Serialization and deserialization of 'System.IntPtr' instances are not supported. Path: $.Data.Exception.TargetSite.MethodHandle.Value.\r\n       ---> System.NotSupportedException: Serialization and deserialization of 'System.IntPtr' instances are not supported.\r\n         at System.Text.Json.Serialization.Converters.UnsupportedTypeConverter`1.Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options)\r\n         at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\r\n         at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)\r\n         at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)\r\n         at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state\r\n```","Url":"https://github.com/dotnet/aspnetcore/issues/40799","RelatedDescription":"Open issue \"System.Text.Json NotSupportedException\" (#40799)"},{"Id":"1174509021","IsPullRequest":false,"CreatedAt":"2022-03-20T11:04:37","Actor":"nkosi23","Number":"40790","RawContent":null,"Title":"Allow all or specific parts or a Blazor Server application to be stateless (no continuous SignalR connection and state automatically moved out of memory after rendering)","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [x] I have searched the existing issues\r\n\r\n### Is your feature request related to a problem? Please describe the problem.\r\n\r\nBlazor Server provides an inspiring and powerful application development and state management model. However at present a continuous SignalR connection must be maintained between every client and the server which limits scalability. Memory also is a limiting factor. \r\n\r\nWhile the stateful nature of Blazor Server is generally highly desirable, an application may have hot paths not necessarily needing statefulness. For example a news website may have very high traffic on its \"/home\" and \"/read/{articleId}\" pages but have orders of magnitude less traffic on its account management pages and discussion forum. Since article reading pages do not have high interactivity and stateful requirements, keeping these components in memory is wasteful. \r\n\r\nSuch optimizations can make the difference between a single server being able to accommodate 100,000 users or 10,000. Having this option will make Blazor Server as competitive as other technologies for consumer applications.\r\n\r\n### Describe the solution you'd like\r\n\r\nAfter #30344 is implemented (which is a hard prerequisite), Blazor Server will be in a position to allow users to create stateless components. Here what I have in mind:\r\n\r\n- If a component is marked as stateless, its state is automatically persisted after rendering and moved out of memory\r\n- Optionally (or alternatively - if keeping some components in memory and some not is not feasible), instead of marking individual components, the user can put specific routable components in a _stateless area_ (this is similar to the idea of MVC areas). In practice a stateless area may simply be a route-defined namespace: for example Blazor Server would allow the user to define in the App component (or somewhere else more appropriate) that all routes matching the pattern \"static/**\" are part of a stateless area (eg. static/read/{articleId}).\r\n- If a component is accessed using a route belonging to a stateless area:\r\n   1. All the components of the page are considered stateless\r\n   2. The SignalR connection is terminated after rendering\r\n- To support these situations, the client side javascript runtime contains a code to reestablish the SignalR connection when the user interacts with the page (and the connection is immediately terminated after rendering). If feasible, users may be allowed to define on a per-component basis which event will trigger a reconnection (default is onclick, but sometimes onmouseover etc... may also be desirable)\r\n\r\nWith stateless areas, the developer chooses to trade responsiveness for better scalability and resource management. This will typically be used on the hot path of public consumer applications as for such applications it is very common to have high-traffic public pages being fairly static (and driving conversion to turn visitors into paying customers having access to the full or actual product).\r\n\r\nThe benefit of defining stateless areas using routes is that since Blazor Components may be accessed from multiple routes, developers are empowered to - for example - provide a stateful and more interactive experience to paying customers and a static and less responsive version to non-registered users (being orders magnitude more numerous but generating less revenue) and they can do so without needing to modify their components.\r\n\r\nThis feature will allow developers to have the best of both world and will further position Blazor Server and Azure as the perfect high-productivity environment to develop the next-generation of web applications. I have a sense that this feature would be quite in reach once #30344 lands.\r\n\r\n### Additional context\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40790","RelatedDescription":"Open issue \"Allow all or specific parts or a Blazor Server application to be stateless (no continuous SignalR connection and state automatically moved out of memory after rendering)\" (#40790)"},{"Id":"1174368199","IsPullRequest":false,"CreatedAt":"2022-03-19T20:47:58","Actor":"SwiftMJ","Number":"40787","RawContent":null,"Title":"Published Hosted Blazor WASM does not contain PDB files.","State":"open","Body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nI am trying to publish a hosted blazor wasm application with PDB files.\r\n\r\nI couldn't find any way to this this apart from by using the `BlazorEnableDebugging` flag. https://github.com/dotnet/aspnetcore/pull/18859#discussion_r380155392\r\n\r\nThis flag seems to work for blazor wasm applications, but with hosted the pdb files for the client project are still not output to the publish/wwwroot/_framework directory.\n\n### Expected Behavior\n\nWhen running the command: \r\n\r\n`dotnet publish -c Release -p:BlazorEnableCompression=false -p:PublishTrimmed=false -p:BlazorEnableDebugging=true`\r\n\r\non a hosted blazor wasm application the pdb files should be included in the following directory:\r\n\r\n< server project >/bin/Release/< target framework >/publish/wwwroot/_framework\r\n\r\nand the `blazor.boot.json` file should contain a list of the pdbs.\n\n### Steps To Reproduce\n\nCreate a blazor wasm hosted solution.\r\n\r\nRun the following command to publish from within the Server folder\r\n\r\n`dotnet publish -c Release -p:BlazorEnableCompression=false -p:PublishTrimmed=false -p:BlazorEnableDebugging=true`\r\n\r\nI have created an [Example Repo](https://github.com/SwiftMJ/BlazorApp1) with these steps complete.\r\n\r\nAs you can see the `BlazorApp1.Client.pdb` is output in the [client bin folder](https://github.com/SwiftMJ/BlazorApp1/tree/main/BlazorApp1/Client/bin/Release/net6.0/wwwroot/_framework) and on line 205 of the [blazor.boot.json](https://github.com/SwiftMJ/BlazorApp1/blob/main/BlazorApp1/Client/bin/Release/net6.0/wwwroot/_framework/blazor.boot.json) the pdb's are listed.\r\n\r\nBut in the [server publish folder](https://github.com/SwiftMJ/BlazorApp1/tree/main/BlazorApp1/Server/bin/Release/net6.0/publish/wwwroot/_framework) there is no `BlazorApp1.Client.pdb` and the pdb section is null in the [blazor.boot.json](https://github.com/SwiftMJ/BlazorApp1/blob/main/BlazorApp1/Server/bin/Release/net6.0/publish/wwwroot/_framework/blazor.boot.json)\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n6.0.300-preview.22154.4\n\n### Anything else?\n\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40787","RelatedDescription":"Open issue \"Published Hosted Blazor WASM does not contain PDB files.\" (#40787)"},{"Id":"1174324789","IsPullRequest":false,"CreatedAt":"2022-03-19T18:19:04","Actor":"sevinul","Number":"40786","RawContent":null,"Title":"Blazor InputNumber and InputDate components fail to compile on .NET 7 Preview 2 ","State":"open","Body":"In  .NET 7 Preview 2 Visual Studio 2022 is not accepting blazor InputNumber and InputDate components.\r\n\r\nCompiling the code piece below in a blazor component will cause a not specified error in the RazorSourceGenerator, hence the project will fail with the error: \"Type or namespace name 'App' was not found\":\r\n\r\n            <InputNumber \r\n                @bind-Value=@someValue \r\n                @oninput=@SomeMethod />\r\n\r\nThe same happens with InputDate. InputCheckbox and InputText will compile ok.\r\nThis behaviour did not occur with .NET 7 Preview 1.\r\n\r\nAs the compiler did not point to the failing blazor component in a large project source the problem was hard to identify within a time consuming trial and error session.\r\n\r\nBest regards\r\nSevin Ulukut","Url":"https://github.com/dotnet/aspnetcore/issues/40786","RelatedDescription":"Open issue \"Blazor InputNumber and InputDate components fail to compile on .NET 7 Preview 2 \" (#40786)"},{"Id":"1174273543","IsPullRequest":false,"CreatedAt":"2022-03-19T14:07:31","Actor":"casper7526","Number":"40785","RawContent":null,"Title":"Blazor - Model Binding InputText and String","State":"open","Body":"### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Describe the bug\r\n\r\nPublic string? X\r\n \r\nBind the string to an InputText, post the form. X is null.\r\nType something into the field than delete the text, post the string. X is now an empty string.\r\n\r\nWork around was just adding a check on my setter but the fact that an empty text box can represent both null and empty string is not clear.\r\n\r\n### Expected Behavior\r\n\r\nString should always be null when blank except when explicitly told otherwise.\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Exceptions (if any)\r\n\r\n_No response_\r\n\r\n### .NET Version\r\n\r\n6\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/dotnet/aspnetcore/issues/40785","RelatedDescription":"Open issue \"Blazor - Model Binding InputText and String\" (#40785)"},{"Id":"1174158811","IsPullRequest":true,"CreatedAt":"2022-03-19T03:26:36","Actor":"github-actions[bot]","Number":"40783","RawContent":null,"Title":"[release/6.0] Get richnav.yml building again","State":"open","Body":"Backport of #40729 to release/6.0\r\n\r\n/cc @dougbu\r\n\r\n----\r\n\r\nGet richnav.yml building again (#40729)\r\n\r\n- correct build.cmd location\r\n- generally, align richnav.yml with ci.yml\r\n  - ignore signing, internal download args, and publish args\r\n  - perform native build w/o rich nav and don't do installers build; both fail\r\n- disable pipeline in PR validation\r\n  - also remove irrelevant trigger branches\r\n\r\nnits:\r\n- correct name of one build step in ci.yml\r\n- don't bother setting `$(EnableRichCodeNavigation)` or `$(OnlyPackPlatformSpecificPackages)` to `true`\r\n  - job.yml sets `$(EnableRichCodeNavigation)` variable and `msbuild` will find that in environment\r\n  - `$(OnlyPackPlatformSpecificPackages)` is not relevant in this pipeline; not packing","Url":"https://github.com/dotnet/aspnetcore/pull/40783","RelatedDescription":"Open PR \"[release/6.0] Get richnav.yml building again\" (#40783)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"ben-foster-rightio","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"597492854","IsPullRequest":true,"CreatedAt":"2020-04-09T19:44:41","Actor":"terrajobst","Number":"1097","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/aspnet/Tooling/pull/1097","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#1097)"},{"Id":"585801568","IsPullRequest":false,"CreatedAt":"2020-03-22T20:10:12","Actor":"GaryFurash","Number":"1096","RawContent":null,"Title":"Creating Edit View with Non EFModel","State":"open","Body":"Using latest ASP.NET Core with latest Nuget on Visual Studio 2019 windows 10 pro.\r\n\r\nIf I try to create an Edit view based on a view model that isn't configured in the DB context (e.g., it's a model that doesn't map to a DB table in EF), even after adding the [Key] annotation I get the error:\r\n\r\n'The entity type 'RoleEdit' requires a primary key to be defined. If you intended to use a keyless entity type call 'HasNoKey()'.'\r\n\r\nI can't use HasNoKey since the model entity isn't in the context since it isn't a real table.\r\n","Url":"https://github.com/aspnet/Tooling/issues/1096","RelatedDescription":"Open issue \"Creating Edit View with Non EFModel\" (#1096)"},{"Id":"576654849","IsPullRequest":true,"CreatedAt":"2020-03-06T02:27:01","Actor":"mairaw","Number":"1095","RawContent":null,"Title":"Update link to a more proper target","State":"open","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1095","RelatedDescription":"Open PR \"Update link to a more proper target\" (#1095)"},{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"ghost","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"1154726545","IsPullRequest":false,"CreatedAt":"2022-03-01T01:08:45","Actor":"pranavkm","Number":"483","RawContent":null,"Title":"[Breaking change]: Event IDs for some Microsoft.AspNetCore.Mvc.Core log messages changed","State":"open","Body":"### Description\n\nAs part of updating the Microsoft.AspNetcore.Mvc.Core assembly to use `LoggerMessageAttribute`, we discovered logger event Ids being reused within a single log category. Log IDs and names should be unique so different message types can be identified. Consequently, these have been updated to ensure that the event Ids are unique for a logger category. \n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nSome logger event IDs in Microsoft.AspNetCore.Mvc.Core were re-used within a single category.\n\n### New behavior\n\nDuplicated event ids within a single category within the Microsoft.AspNetCore.Mvc.Core assembly were updated.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs, update those references to use the new IDs.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/483","RelatedDescription":"Open issue \"[Breaking change]: Event IDs for some Microsoft.AspNetCore.Mvc.Core log messages changed\" (#483)"},{"Id":"1149914360","IsPullRequest":false,"CreatedAt":"2022-02-25T00:38:20","Actor":"pranavkm","Number":"482","RawContent":null,"Title":"[Breaking change]: Blazor components are type activated by default","State":"open","Body":"### Description\n\nStarting in .NET 7, Blazor components use [`ActivatorUtilities`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.activatorutilities) to instantiate components. This allows components to resolve parameters from a DI container using constructor injection. Constructor injection is supported in addition to property injection that is already supported via the `InjectAttribute`.\r\n\r\nFor most existing applications, this change is not discernable. However, this may be a breaking change for libraries or applications that provided non-empty constructors for components where parameters are not meant to be resolved from the DI container.\r\n\r\nFor questions or further discussion, please use https://github.com/dotnet/aspnetcore/issues/40405\n\n### Version\n\n.NET 7\n\n### Previous behavior\n\nIn the ordinary case, components do not specify a constructor or have a parameter-less constructor and this is a non-breaking change. However, consider the following case:\r\n\r\n```C#\r\npublic class MyMultipleConstructorComponent : ComponentBase\r\n{\r\n   public MyMultipleConstructorComponent () { }\r\n\r\n   public MyMultipleConstructorComponent (int someValue) {}\r\n}\r\n```\r\n\r\nIn .NET 6 and earlier, the parameter-less constructor would be used to instantiate the component.\n\n### New behavior\n\nIn .NET 7, parameters in a component are resolved from the DI container. Consider this component:\r\n\r\n```C#\r\npublic class MyComponent : ComponentBase\r\n{\r\n   public MyComponent(IMyService myService) { ... }\r\n}\r\n```\r\n\r\nStarting in .NET 7, `IMyService` is resolved from the container while instantiating the component. Using `[InjectAttribute]` to property inject services remains unchanged.\r\n\r\nGoing back to `MyMultipleConstructorComponent` from the earlier section - in .NET 7, `ActivatorUtilities` defaults to using the constructor with the most parameters to instantiate an object. In this case, the constructor with the single `int` parameter will be attempted to be resolved from the DI container and a runtime exception will be thrown if parameters are not resolvable.   \n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nConstructor injection was a popular request from Blazor users.\n\n### Recommended action\n\nIf this change severely impacts your ability to migrate your apps to .NET 7, please let us know in the associated discussion thread and we would be happy to reconsider this change. Optionally, there are changes to your application that you may consider to work around this change if it impacts your application:\r\n\r\n* [`ActivatorUtilitiesConstructorAttribute`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.activatorutilitiesconstructorattribute) can be applied to constructor to specify an exact constructor to use.\r\n* Application developers may register an implementation of `IComponentActivator` in the DI container that reverts to the .NET 6 behavior.\r\n\r\n\n\n### Affected APIs\n\nComponent constructors","Url":"https://github.com/aspnet/Announcements/issues/482","RelatedDescription":"Open issue \"[Breaking change]: Blazor components are type activated by default\" (#482)"},{"Id":"1140446824","IsPullRequest":false,"CreatedAt":"2022-02-16T19:09:40","Actor":"wtgodbe","Number":"481","RawContent":null,"Title":"Microsoft.Data.SqlClient updated to 4.0.1","State":"open","Body":"### Description\r\n\r\nWe have updated the `Microsoft.Data.SqlClient` package to 4.0.1.\r\n\r\n### Version\r\n\r\n7.0-preview2\r\n\r\n### Previous behavior\r\n\r\nThe old version was `1.0.19249.1`\r\n\r\n### New behavior\r\n\r\nWe now use `4.0.1`. You can see breaking changes in the 4.0 band here: https://github.com/dotnet/SqlClient/blob/main/release-notes/4.0/4.0.0.md#breaking-changes. Note that `Encrypt` now equals `true` by default: https://github.com/dotnet/SqlClient/blob/main/release-notes/4.0/4.0.0.md#encrypt-default-value-set-to-true\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nUpdating to most recent versions for improvements in the underlying libraries.\r\n\r\n### Recommended action\r\n\r\nWe didn't have to react to any no public API changes from this change, but its possible there are breaking changes in the packages themselves.\r\n\r\n### Affected APIs\r\n\r\nMicrosoft.Extensions.Caching.SqlServer","Url":"https://github.com/aspnet/Announcements/issues/481","RelatedDescription":"Open issue \"Microsoft.Data.SqlClient updated to 4.0.1\" (#481)"},{"Id":"1127552680","IsPullRequest":false,"CreatedAt":"2022-02-08T17:31:43","Actor":"brunolins16","Number":"480","RawContent":null,"Title":"[Breaking change]: API Controllers Actions try to infer parameters from DI","State":"open","Body":"### Description\r\n\r\nThe mechanism to infer binding source of **API Controller action's parameters** now mark parameters to be bound from the Dependency Injection container when the type is registered in the container.\r\n\r\nIn rare cases this can break applications that have a type in DI that is also accepted in API Controller actions methods.\r\n\r\n### Version\r\n\r\n7.0.0-preview2\r\n\r\n### Previous behavior\r\n\r\nBefore if you want to bind a type registered in your Dependency Injection container, it **must** be explicitly decorated using an attribute that implements `IFromServiceMetadata` (eg.: `FromServicesAttribute`)\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    public ActionResult Get([FromServices]SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\nIf the attribute is not specified, the parameter is resolved from the request Body sent by the client.\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Bind from the request body\r\n    [HttpPost]\r\n    public ActionResult Post(SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nNow types in DI will be checked at app startup using `IServiceProviderIsService` to determine if an argument in an API controller action will come from DI or from the other sources. \r\n\r\nIn the below example `SomeCustomType` (assuming you're using the default DI container) will come from the DI container. \r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Binding from the services\r\n    [HttpPost]\r\n    public ActionResult Post(SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\nThe new mechanism to infer binding source of **API Controller action's parameters** will follow the rule bellow:\r\n\r\n1. A previously specified `BindingInfo.BindingSource` is never overwritten.\r\n2. A complex type parameter, registered in the DI container, is assigned `BindingSource.Services`.\r\n3. A complex type parameter, not registered in the DI container, is assigned `BindingSource.Body`.\r\n4. Parameter with a name that appears as a route value in ANY route template is assigned `BindingSource.Path`.\r\n5. All other parameters are `BindingSource.Query`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe believe the likelihood of breaking apps to be very low as it's not a common scenario to have a type in DI and as an argument in your API controller action at the same time. Also, this same behavior is currently supported by Minimal Actions.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change you can disable the feature by setting `DisableImplicitFromServicesParameters` to true.\r\n\r\n```csharp\r\nservices.Configure<ApiBehaviorOptions>(options =>\r\n{\r\n     options.DisableImplicitFromServicesParameters = true;\r\n});\r\n```\r\nAlso, you could continue to have your action's parameters, with the new feature enabled or not, binding from your DI container using an attribute that implements `IFromServiceMetadata` (eg.: `FromServicesAttribute`).\r\n\r\n``` csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\n[Route(\"[controller]\")]\r\n[ApiController]\r\npublic class MyController : ControllerBase\r\n{\r\n    // Binding from the DI container\r\n    [HttpPost]\r\n    public ActionResult Post([FromServices]SomeCustomType service) => Ok();\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nAPI Controller actions.","Url":"https://github.com/aspnet/Announcements/issues/480","RelatedDescription":"Open issue \"[Breaking change]: API Controllers Actions try to infer parameters from DI\" (#480)"},{"Id":"1115597949","IsPullRequest":false,"CreatedAt":"2022-01-26T23:19:59","Actor":"BrennanConroy","Number":"479","RawContent":null,"Title":"[Breaking change]: SignalR Hub methods try to resolve parameters from DI","State":"open","Body":"### Description\r\n\r\nHub methods now support injecting services from your Dependency Injection container.\r\nIn rare cases this can break applications that have a type in DI that is also accepted in Hub methods from SignalR client messages.\r\n\r\n### Version\r\n\r\n7.0.0-preview2\r\n\r\n### Previous behavior\r\n\r\nBefore if you accepted a type in your Hub method that was also in your Dependency Injection container the type would always be resolved from a message sent by the client.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // type always comes from the client, never comes from DI\r\n    public Task Method(string text, SomeCustomType type) => Task.CompletedTask;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nNow types in DI will be checked at app startup using `IServiceProviderIsService` to determine if an argument in a Hub method will come from DI or from the client.\r\n\r\nIn the below example `SomeCustomType` (assuming you're using the default DI container) will come from the DI container instead of from the client. And if the client tried to send `SomeCustomType` it will get an error.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // comes from DI by default\r\n    public Task Method(string text, SomeCustomType type) => Task.CompletedTask;\r\n}\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nWe believe the likelihood of breaking apps to be very low as it's not a common scenario to have a type in DI and as an argument in your Hub method at the same time.\r\n\r\n### Recommended action\r\n\r\nIf you are broken by this change you can disable the feature by setting `DisableImplicitFromServicesParameters` to true.\r\n```csharp\r\nservices.AddSignalR(options =>\r\n{\r\n    options.DisableImplicitFromServicesParameters = true;\r\n});\r\n```\r\n\r\nIf you are broken by the change but want to use the feature without breaking clients, you can disable the feature as shown above, and use an attribute that implements `IFromServiceMetadata` on new arguments/Hub methods.\r\n```csharp\r\nServices.AddScoped<SomeCustomType>();\r\nServices.AddScoped<SomeCustomType2>();\r\n\r\nclass MyHub : Hub\r\n{\r\n    // old method with new feature (non-breaking), only SomeCustomType2 will be resolved from DI\r\n    public Task MethodA(string arguments, SomeCustomType type, [FromServices] SomeCustomType2 type2);\r\n\r\n    // new method\r\n    public Task MethodB(string arguments, [FromServices] SomeCustomType type);\r\n}\r\n```\r\n\r\n### Affected APIs\r\n\r\nHub methods","Url":"https://github.com/aspnet/Announcements/issues/479","RelatedDescription":"Open issue \"[Breaking change]: SignalR Hub methods try to resolve parameters from DI\" (#479)"},{"Id":"1107147192","IsPullRequest":false,"CreatedAt":"2022-01-18T17:00:32","Actor":"italukder","Number":"478","RawContent":null,"Title":"M2A ","State":"closed","Body":"!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/AspNetCore/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/478","RelatedDescription":"Closed issue \"M2A \" (#478)"},{"Id":"1083913001","IsPullRequest":false,"CreatedAt":"2021-12-18T18:35:01","Actor":"yecril71pl","Number":"477","RawContent":null,"Title":"[Breaking change]: CommandLineUtils retired","State":"open","Body":"### Description\n\nThe package [CommandLineUtils](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.commandlineutils) was removed from ASP.NET 2.0.\r\n\r\nThe discussion issue was https://github.com/dotnet/extensions/issues/257.\r\n\r\nThis change was overlooked because we failed to follow breaking changes in extensions.  It is important to document it here because it is not mentioned at [1.x to 2.0](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x) either.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\n```C#\r\nusing Microsoft.Extensions.CommandLineUtils;\r\n```\n\n### New behavior\n\n```C#\r\nusing McMaster.Extensions.CommandLineUtils;\r\n```\n\n### Type of breaking change\n\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nThe library has outgrown the scope of the ASP.NET project where it had been developed.\n\n### Recommended action\n\nMigration steps include the following alternatives:\r\n* adapt your code to use system [Command-line configuration provider](https://docs.microsoft.com/en-us/dotnet/core/extensions/configuration-providers#command-line-configuration-provider)\r\n* adapt your code to use community [CommandLine](https://github.com/dotnet/command-line-api)\r\n* keep your code and switch to use 3rd-party [CommandLineUtils](https://natemcmaster.github.io/CommandLineUtils/) fork\r\n\n\n### Affected APIs\n\nThe whole package [CommandLineUtils](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.commandlineutils) is unsupported.","Url":"https://github.com/aspnet/Announcements/issues/477","RelatedDescription":"Open issue \"[Breaking change]: CommandLineUtils retired\" (#477)"},{"Id":"1042509650","IsPullRequest":false,"CreatedAt":"2021-11-02T15:29:52","Actor":"Tratcher","Number":"476","RawContent":null,"Title":"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed","State":"open","Body":"### Description\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll have been removed from ASP.NET Core 7.0.0-preview1. See https://github.com/dotnet/aspnetcore/issues/38022 for discussion.\n\n### Version\n\nOther (please put exact version in description textbox)\n\n### Previous behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv was [obsoleted](#424) in 5.0 since its functionality was replaced by the Sockets transport.\n\n### New behavior\n\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv and its libuv.dll dependency have been removed from ASP.NET Core.\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nTo eliminate ongoing maintenance costs associated with this obsolete component.\n\n### Recommended action\n\nRemove project references to Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv. Remove code from Program.cs that calls `UseLibuv`, the Sockets transport will be used by default.\n\n### Affected APIs\n\n[UseLibuv](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.webhostbuilderlibuvextensions.uselibuv)\r\n[LibuvTransportOptions](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.server.kestrel.transport.libuv.libuvtransportoptions)","Url":"https://github.com/aspnet/Announcements/issues/476","RelatedDescription":"Open issue \"[Breaking change]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv and Libuv.dll removed\" (#476)"},{"Id":"1029808382","IsPullRequest":false,"CreatedAt":"2021-10-19T03:09:22","Actor":"halter73","Number":"475","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC2","State":"open","Body":"### Description\r\n\r\nIn RC2, the following APIs were renamed or merged.\r\n\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`.\r\n- The `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Http.OpenApiRouteHandlerBuilderExtensions`.\r\n- The `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions` class was removed and all of its methods were merged into the existing `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` class.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/36578.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names replacing `DelegateEndpoint` with `RouteHandler` now that there is a new `RouteHandlerOptions` class.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Http.OpenApiDelegateEndpointConventionBuilderExtensions`\r\n- `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/475","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC2\" (#475)"},{"Id":"1029797310","IsPullRequest":false,"CreatedAt":"2021-10-19T02:51:23","Actor":"halter73","Number":"474","RawContent":null,"Title":"[Breaking change]: Minimal API renames in RC1","State":"open","Body":"### Description\r\n\r\nIn RC1, the following APIs were renamed.\r\n\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder`.\r\n  - **Note:** This was renamed again in RC2 to `Microsoft.AspNetCore.Builder.RouteHandlerBuilder`. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions` class was renamed to `Microsoft.AspNetCore.Builder.DelegateEndpointRouteBuilderExtensions`.\r\n  - **Note:** This was merged with `Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions` in RC2. See https://github.com/aspnet/Announcements/issues/475.\r\n- The `Delegate` parameter to `Map`, `MapGet`, `MapPost`, `MapPut`, `MapDelete`, `MapMethod`, `MapFallback` and `RequestDelegateFactory.Create` was renamed from `action` to `handler`.\r\n\r\nThese changes were made in https://github.com/dotnet/aspnetcore/pull/35570.\r\n\r\n### Version\r\n\r\n.NET 6 RC1\r\n\r\n### Previous behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### New behavior\r\n\r\nThere is no behavioral change. These are just renames.\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made to improve the consistency of type names and remove \"minimal\" and \"action\" from the APIs.\r\n\r\n### Recommended action\r\n\r\nIt is recommended you recompile any projects built with an earlier SDK. For most projects, this should be all that is necessary.\r\n\r\nIf any of these type names or parameter names were referenced directly by name, the source should be updated to reflect the new names.\r\n\r\n### Affected APIs\r\n\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointConventionBuilder`\r\n- `Microsoft.AspNetCore.Builder.MinimalActionEndpointRouteBuilderExtensions`\r\n\t- This includes all the methods on this class having their `Delegate` parameter renamed from `action` to `handler`.\r\n- `Microsoft.AspNetCore.Http.RequestDelegateFactory.Create(Delegate action, RequestDelegateFactoryOptions? options = null)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/37671","Url":"https://github.com/aspnet/Announcements/issues/474","RelatedDescription":"Open issue \"[Breaking change]: Minimal API renames in RC1\" (#474)"},{"Id":"1029683595","IsPullRequest":false,"CreatedAt":"2021-10-18T23:08:43","Actor":"captainsafia","Number":"473","RawContent":null,"Title":"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints","State":"open","Body":"### Description\r\n\r\nStarting in .NET 6 RC2, behavior that was introduced in .NET 6 RC1 to automatically set the `IEndpointNameMetadata` for endpoints has been reverted to avoid issues the logic generating duplicate endpoint names.\r\n\r\n### Version\r\n\r\n.NET 6 RC 2\r\n\r\n### Previous behavior\r\n\r\nIn .NET 6 RC1 and above, the `IEndpointNameMetadata` was automatically set for endpoints that referenced a method group. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nWould produce an endpoint for `/foo` with a `EndpointName` set to \"GetFoo\".\r\n\r\n### New behavior\r\n\r\nIn .NET 6 RC 2 and onward, the `IEndpointNameMetadata` is no longer set. For example, the following code:\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo);\r\n```\r\n\r\nwould not generated any `IEndpointNameMetadat`.\r\n\r\n### Type of breaking change\r\n\r\n- [ ] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [X] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThe behavior of automatically setting endpoint name metadata was not robust and resulted in issues where the same name was set for different endpoints. See https://github.com/dotnet/aspnetcore/issues/36487 for more info.\r\n\r\n### Recommended action\r\n\r\nWe recommend that developers manually set the `IEndpointNameMetadata` using the `WithName` extension method as follows to set the metadata.\r\n\r\n```csharp\r\napp.MapGet(\"/foo\", GetFoo).WithName(\"GetFoo\");\r\n```\r\n\r\n### Feature area\r\n\r\nASP.NET Core\r\n\r\n### Affected APIs\r\n\r\n_No response_","Url":"https://github.com/aspnet/Announcements/issues/473","RelatedDescription":"Open issue \"[Breaking change]: EndpointName metadata no longer automatically set for minimal endpoints\" (#473)"},{"Id":"1002953060","IsPullRequest":false,"CreatedAt":"2021-09-21T17:48:14","Actor":"BrennanConroy","Number":"472","RawContent":null,"Title":"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods","State":"open","Body":"### Description\r\n\r\nStarting in RC2, when we look for `TryParse` or `BindAsync` methods on your parameter types if we don't find a valid one we will also look for invalid ones and throw at startup to let you know that you might have written your method signature incorrectly to avoid unexpected behavior.\r\n\r\n### Version\r\n\r\n.NET 6 RC2\r\n\r\n### Previous behavior\r\n\r\n```csharp\r\n// Todo.TryParse is not in a valid format, will try to bind from body as json instead\r\napp.MapPost(\"/endpoint\", (Todo todo) => todo.Item);\r\n\r\npublic class Todo\r\n{\r\n    public string Item { get; set; }\r\n\r\n    public static bool TryParse(string value) => true;\r\n}\r\n```\r\n\r\n### New behavior\r\n\r\nWe have now changed it so that if we see a public `TryParse` or `BindAsync` that doesn't match the expected syntax we will throw on startup. The above example would throw an error similar to:\r\n```\r\nTryParse method found on Todo with incorrect format. Must be a static method with format\r\nbool TryParse(string, IFormatProvider, out Todo)\r\nbool TryParse(string, out Todo)\r\nbut found\r\nBoolean TryParse(System.String)\r\n```\r\n\r\n### Type of breaking change\r\n\r\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\r\n- [x] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\r\n\r\n### Reason for change\r\n\r\nThis change was made so that developers would be aware when they wrote a `BindAsync` or `TryParse` method that it wasn't in a valid format. Otherwise the framework would fallback to assuming the parameter is json from the body and could result in unexpected behavior.\r\n\r\n### Recommended action\r\n\r\nIt is possible your types have a `BindAsync` or `TryParse` with different syntax for other reasons besides parameter binding and will now throw at startup. There are multiple options to avoid this behavior:\r\n* Make your `BindAsync` or `TryParse` method internal or private\r\n* Add a new `BindAsync` or `TryParse` method that is in the syntax we are looking for (we ignore invalid methods if we find a valid one)\r\n* Mark your parameter as `[FromBody]`\r\n\r\n### Affected APIs\r\n\r\nAll `IEndpointRouteBuilder.Map*(...)` methods are affected by this change, e.g. `app.MapGet(...)` and `app.MapPost(...)`.\r\nAnd `RequestDelegateFactory.Create(...)`\r\n\r\nDiscussion issue: https://github.com/dotnet/aspnetcore/issues/36810","Url":"https://github.com/aspnet/Announcements/issues/472","RelatedDescription":"Open issue \"[Breaking change]: TryParse and BindAsync discovery on Map* parameters will throw for invalid methods\" (#472)"},{"Id":"953359702","IsPullRequest":false,"CreatedAt":"2021-09-18T18:10:19","Actor":"TanayParikh","Number":"470","RawContent":null,"Title":"Disable Long Polling Fallback Transport for Blazor Server","State":"closed","Body":"## Disable Long Polling Fallback Transport for Blazor Server\r\n\r\nLong Polling is a fall-back transport utilized when WebSockets aren't available. This can lead to a degraded user experience. Thus, the Long Polling fallback has been removed, and both the client and server now support _only_ WebSockets by default.\r\n\r\n### Version introduced\r\n\r\n.NET 6 rc 1\r\n\r\n### Old behavior\r\n\r\nIf WebSockets are unavailable for a circuit (ex. network issues or browser incompatibility), Long Polling is used instead.\r\n\r\n### New behavior\r\n\r\n| Client | Server | Message |\r\n|---|---|---|\r\n|WS (without browser WS support)|WebSockets|`Unable to connect, please ensure you are using an updated browser that supports WebSockets.`|\r\n|WS (with WS connection being rejected)|WebSockets|`Unable to connect, please ensure WebSockets are available. A VPN or proxy may be blocking the connection.`|\r\n|WS|LongPolling|`An unhandled error has occurred.` Console Error: `Unable to initiate a SignalR connection to the server. This might be because the server is not configured to support WebSockets. To troubleshoot this, visit https://aka.ms/blazor-server-websockets-error.`|\r\n|LongPolling|WebSockets|`An unhandled error has occurred.`|\r\n\r\n### Reason for change\r\n\r\nImprove overall end-user-experience by enforcing WebSocket use.\r\n\r\n### Recommended action\r\n\r\nEnsure WebSockets are functioning as expected with your application. If you must use Long Polling, the following client and server side changes must be made:\r\n\r\n\r\n#### Server Side\r\n\r\nIn `Startup.cs`, replace `endpoints.MapBlazorHub()` with:\r\n\r\n```c#\r\nendpoints.MapBlazorHub(configureOptions: options => \r\n{ \r\n    options.Transports = HttpTransportType.WebSockets | HttpTransportType.LongPolling; \r\n});\r\n```\r\n\r\n#### Client Side\r\n\r\nIn `Pages/_Layout.cshtml`, update the `blazor.server.js` script tag to include the `autostart=\"false\"` attribute:\r\n\r\n```html\r\n<script src=\"_framework/blazor.server.js\" autostart=\"false\"></script>\r\n```\r\n\r\nBelow the `blazor.server.js` script tag, add the following snippet. WebSockets (1) and Long Polling (4) are the supported [HTTPTransportType](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connections.httptransporttype?view=aspnetcore-5.0#fields)s.\r\n\r\n```html\r\n<script>\r\n    (function start() {\r\n        Blazor.start({\r\n            configureSignalR: builder => builder.withUrl('_blazor', 1 | 4) // WebSockets and Long Polling\r\n        });\r\n    })()\r\n</script>\r\n```\r\n\r\n### Category\r\n<!-- Choose one of the following compatibility categories: -->\r\n\r\n- [ ] Binary compatibility (the newer version can be used without recompiling)\r\n- [ ] Source compatibility (successfully recompiling against newer version requires source changes)\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/470","RelatedDescription":"Closed issue \"Disable Long Polling Fallback Transport for Blazor Server\" (#470)"},{"Id":"973152582","IsPullRequest":false,"CreatedAt":"2021-08-18T00:07:55","Actor":"pranavkm","Number":"471","RawContent":null,"Title":"[Breaking change]: Razor Pages logging ID change","State":"open","Body":"### Description\n\nRazor Pages log messages have associated IDs and names. These are used to uniquely identify different kinds of log messages. Some of those IDs and names were incorrectly duplicated. This is being fixed in .NET 6.\n\n### Version\n\n.NET 6 RC1\n\n### Previous behavior\n\nEvent Name: ExecutedHandlerMethod\r\nEvent Id: 102\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod\r\nEvent Id: 103\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod\r\nEvent Id: 104\r\n\r\nEvent Name: NotMostEffectiveFilter\r\nEvent Id: 1\r\n\n\n### New behavior\n\nEvent Name: ExecutedHandlerMethod (unchanged)\r\nEvent Id: 108\r\n\r\nEvent Name: ExecutingImplicitHandlerMethod  (unchanged)\r\nEvent Id: 107\r\n\r\nEvent Name: ExecutedImplicitHandlerMethod  (unchanged)\r\nEvent Id: 109\r\n\r\nEvent Name: NotMostEffectiveFilter  (unchanged)\r\nEvent Id: 4\r\n\n\n### Type of breaking change\n\n- [X] **Binary incompatible**: Existing binaries may encounter a breaking change in behavior, such as failure to load/execute or different run-time behavior.\n- [ ] **Source incompatible**: Source code may encounter a breaking change in behavior when targeting the new runtime/component/SDK, such as compile errors or different run-time behavior.\n\n### Reason for change\n\nLog IDs and names should be unique so different message types can be identified.\n\n### Recommended action\n\nIf you have code or configuration that references the old IDs and names, update those references use the new IDs and names.\n\n### Affected APIs\n\nNot detectable via API analysis","Url":"https://github.com/aspnet/Announcements/issues/471","RelatedDescription":"Open issue \"[Breaking change]: Razor Pages logging ID change\" (#471)"},{"Id":"951058526","IsPullRequest":true,"CreatedAt":"2021-07-30T15:24:54","Actor":"gewarren","Number":"469","RawContent":null,"Title":"Convert breaking change template to a form","State":"closed","Body":"See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms.","Url":"https://github.com/aspnet/Announcements/pull/469","RelatedDescription":"Closed or merged PR \"Convert breaking change template to a form\" (#469)"},{"Id":"940150750","IsPullRequest":true,"CreatedAt":"2021-07-08T19:25:36","Actor":"mkArtakMSFT","Number":"468","RawContent":null,"Title":"Expanded category of the change to be either source or binary","State":"closed","Body":"","Url":"https://github.com/aspnet/Announcements/pull/468","RelatedDescription":"Closed or merged PR \"Expanded category of the change to be either source or binary\" (#468)"},{"Id":"939244949","IsPullRequest":true,"CreatedAt":"2021-07-08T18:03:39","Actor":"mkArtakMSFT","Number":"467","RawContent":null,"Title":"Include preview number in version text","State":"closed","Body":"Thanks for the proposal to change this, @Rick-Anderson!","Url":"https://github.com/aspnet/Announcements/pull/467","RelatedDescription":"Closed or merged PR \"Include preview number in version text\" (#467)"},{"Id":"938148373","IsPullRequest":false,"CreatedAt":"2021-07-06T18:21:20","Actor":"Tratcher","Number":"466","RawContent":null,"Title":"ClientCertificate property no longer triggers renegotiation for HttpSys","State":"open","Body":"\r\n## ClientCertificate property no longer triggers renegotiation for HttpSys\r\n\r\nThe `HttpContext.Connection.ClientCertificate` property will no longer trigger TLS renegotiations for HttpSys. See https://github.com/dotnet/aspnetcore/issues/34124 for discussion.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` allowed renegotiation to be triggered by both `HttpContext.Connection.ClientCertificate` and `HttpContext.Connection.GetClientCertifiateAsync`.\r\n\r\nSee https://github.com/aspnet/Announcements/issues/422 for related changes in 5.0.\r\n\r\n### New behavior\r\n\r\nSetting `HttpSysOptions.ClientCertificateMethod = ClientCertificateMethod.AllowRenegotation` will allow renegotiation to be triggered only by `HttpContext.Connection.GetClientCertifiateAsync`. `HttpContext.Connection.ClientCertificate` will return the current certificate if available, but will not renegotiate with the client to request one.\r\n\r\n### Reason for change\r\n\r\nWhen implementing the same features for Kestrel it became clear that applications needed to be able to check the state of the client certificate before triggering a renegotiation. This enables the following usage pattern to deal with issues like the request body conflicting with the renegotiation:\r\n\r\n```\r\nif (connection.ClientCertificate == null)\r\n{\r\n  await BufferRequestBodyAsync();\r\n  await connection.GetClientCertificateAsync();\r\n}\r\n```\r\n\r\n### Recommended action\r\n\r\nApplications that use delayed client certificate negotiation need to call GetClientCertificateAsync() to trigger that.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n [HttpSysOptions.ClientCertificateMethod](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions.clientcertificatemethod)\r\n  [HttpContext.Connection.ClientCertificate](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.clientcertificate)\r\n  [HttpContext.Connection.GetClientCertifiateAsync](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.connectioninfo.getclientcertificateasync)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/466","RelatedDescription":"Open issue \"ClientCertificate property no longer triggers renegotiation for HttpSys\" (#466)"},{"Id":"903915805","IsPullRequest":false,"CreatedAt":"2021-05-27T15:32:22","Actor":"LadyNaggaga","Number":"465","RawContent":null,"Title":" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6","State":"open","Body":"\r\n### React Redux - dropping support in .NET 6 preview 6\r\n\r\nThe number of ASP.NET Core with React-Redux being created using the .NET Core SDK templates is low.  As a result, we have decided to drop React-Redux support in .NET 6 preview 6. \r\n\r\nAs mentioned in [issue #27887](https://github.com/dotnet/aspnetcore/issues/27887) we shared we will be introducing a new experience for SPA templates in .NET 6 timeframe. This experience is going to focus on decoupling the frontend from the backend into two separate projects. For details here. So, even though we are dropping React-Redux in preview 6 we are providing flexibility for our customers to bring in any SPA framework for their choosing. For more information, please check out the following:\r\n\r\n- [ASP.NET Core and SPAs in .NET 6 ](https://github.com/dotnet/aspnetcore/issues/27887).\r\n- [Improved single-page app (SPA) templates](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/#improved-single-page-app-spa-templates)","Url":"https://github.com/aspnet/Announcements/issues/465","RelatedDescription":"Open issue \" React Redux - dropping support in ASP.NET Core in .NET 6 preview 6\" (#465)"},{"Id":"879380130","IsPullRequest":false,"CreatedAt":"2021-05-07T17:13:08","Actor":"blowdart","Number":"464","RawContent":null,"Title":"ASP.NET Core 6 and Authentication Servers","State":"open","Body":"In .NET 3.0 we began shipping IdentityServer4 as part of our template to support the issuing of JWT tokens for SPA and Blazor applications. Sometime after we shipped, the IdentityServer team made [an announcement changing the license for future versions of IdentityServer](https://leastprivilege.com/2020/10/01/the-future-of-identityserver/) to a reciprocal public license – a license where the code is still open source but if used for commercial purposes then a paid license must be bought. This type of approach is common in the open-source world, where sustaining an income is difficult as your project becomes your full-time work.\r\n\r\nTwo of the reasons behind the choice to ship IdentityServer was the community’s well-expressed desire that we did not compete with an established open-source project and IdentityServer’s deep knowledge of the identity space. The .NET team are not OAuth and OIDC experts as we focus on providing building blocks for your application and a starting point from which you can be successful. Creating and sustaining an authentication server is a full-time endeavor, and Microsoft already has a team and a product in that area, Azure Active Directory, which allows 500,000 objects for free. The ASP.NET team feels a managed cloud solution remains the best practical option for developers – the security is managed, you don’t store credentials locally with the risks that presents, and new features like passwordless authentication appear seamlessly in your authentication workflow. However, we also realize that a cloud solution can be impossible for some customers due to regulatory or data sovereignty concerns.\r\n\r\nFor .NET 6 we will continue to ship IdentityServer in our templates, using the new RPL licensed version. We continue to think this is the most mature option for creating self-deployed, locally hosted token service with ASP.NET Core. We will make the licensing requirement clear if you are using a template that includes Duende IdentityServer. The [new Duende IdentityServer](https://duendesoftware.com/products/identityserver) continues to be open source, but now has a dual license. This license allows it to be used for free for development, testing, and learning, free for non-commercial open source, and free for use in commercial settings if the entity or organization makes less than 1 million USD/year. The license requires [a fee](https://duendesoftware.com/products/identityserver#pricing) to be used in used in a commercial setting if the entity or organization makes more than 1M USD/year. The previous version of IdentityServer will continue to be supported for as long as .NET 5 is supported, until [around February 2022](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nFor .NET 7 we will investigate if we can build tooling to allow development and testing of OIDC (OpenID Connect) enabled applications when disconnected from the internet. You will always be free to choose whatever identity system is best for you in production by updating a few lines of code when you’re ready to go live. We’re committed to giving you options for production identity systems now and going forward.\r\n\r\nDiscussion of this announcement can be found at https://github.com/dotnet/aspnetcore/issues/32494","Url":"https://github.com/aspnet/Announcements/issues/464","RelatedDescription":"Open issue \"ASP.NET Core 6 and Authentication Servers\" (#464)"},{"Id":"878150269","IsPullRequest":false,"CreatedAt":"2021-05-06T22:51:46","Actor":"pranavkm","Number":"463","RawContent":null,"Title":"Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json","State":"open","Body":"\r\n## Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json\r\n\r\nIn 5.0, MVC added support for output formatting `IAsyncEnumerable<>` types by buffering the sequence in memory and formatting the buffered collection. In 6.0, when formatting using System.Text.Json, `IAsyncEnumerable<>` instances are no longer buffered by MVC, instead relying on the support for these types added to System.Text.Json.\r\n\r\nIn most cases, the absence of buffering would not be observed by the application. However, some scenarios may have inadvertently relied on the buffering semantics to correctly serialize. For instance, returning an `IAsyncEnumerable<>` that is backed by a EF query on a type with lazy loaded properties might result in concurrent query execution which might be unsupported by the provider.\r\n\r\nThis change does not affect output formatting using Newtonsoft.Json, or with XML-based formatters\r\n\r\n### Version introduced\r\n\r\n6.0-preview4\r\n\r\n### Old behavior\r\n\r\n`IAsyncEnumerable<>` instances returned from an MVC action as a value to be formatted using `ObjectResult`, or a `JsonResult` would be buffered before being serialized as synchronous collection.\r\n\r\n### New behavior\r\n\r\nWhen formatting using System.Text.Json, `IAsyncEnumerable<>` instances are no longer buffered by MVC.\r\n\r\n### Reason for change\r\n\r\nSystem.Text.Json added support for streaming `IAsyncEnumerable<>` types. This allows for a smaller memory footprint during serialization.\r\n\r\n### Recommended action\r\n\r\nIf your application requires buffering, consider manually buffering the async enumerable: \r\n\r\n```C#\r\n// Before\r\npublic IActionResult Get()\r\n{\r\n    return Ok(dbContext.Blogs);\r\n}\r\n\r\n// After\r\npublic async Task<IActionResult> Get()\r\n{\r\n    return Ok(await dbContext.Blogs.ToListAsync());\r\n}\r\n```\r\n\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/463","RelatedDescription":"Open issue \"Actions returning IAsyncEnumerable<> are no longer buffered by MVC when using System.Text.Json\" (#463)"},{"Id":"873454283","IsPullRequest":false,"CreatedAt":"2021-04-30T23:11:40","Actor":"Tratcher","Number":"462","RawContent":null,"Title":"Microsoft.AspNetCore.Http.Features split, no longer shipped as a package","State":"open","Body":"## Microsoft.AspNetCore.Http.Features split, no longer shipped as a package\r\n\r\nMicrosoft.AspNetCore.Http.Features is being split into two assemblies, Microsoft.AspNetCore.Http.Features and Microsoft.Extensions.Features.\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nMicrosoft.AspNetCore.Http.Features 5.0 shipped both in the ASP.NET shared framework and as a nuget package.\r\n\r\nMicrosoft.AspNetCore.Http.Features 5.0 targeted .NET 4.6.1, .NET Standard 2.0, and .NET 5.0\r\n\r\n### New behavior\r\n\r\nMicrosoft.AspNetCore.Http.Features 6.0 will ship only in the ASP.NET shared framework, not as a nuget package.\r\n\r\nMicrosoft.AspNetCore.Http.Features 6.0 will target .NET 6.0 only.\r\n\r\nMicrosoft.Extensions.Features 6.0 will ship both in the ASP.NET shared framework and as a nuget package.\r\n\r\nMicrosoft.Extensions.Features 6.0 will target .NET 4.6.1, .NET Standard 2.0, and .NET 6.0\r\n\r\nThe following types will move to the new assembly. The namespaces will not be changed and type forwards will be added for compatibility.\r\n\r\n```\r\nnamespace Microsoft.AspNetCore.Http.Features\r\nIFeatureCollection\r\nFeatureCollection\r\nFeatureReference<T>\r\nFeatureReferences<T>\r\n```\r\n\r\n### Reason for change\r\n\r\nThis allows these core types to be shared more broadly across components, while also allowing the remaining Http specific components in Microsoft.AspNetCore.Http.Features to take advantage of new runtime and language features.\r\n\r\n### Recommended action\r\n\r\nWhen upgrading to ASP.NET 6.0 remove any packages references for `Microsoft.AspNetCore.Http.Features`. Add a package reference for `Microsoft.Extensions.Features` only if required.\r\n\r\nClass libraries that need to consume the types from `Microsoft.AspNetCore.Http.Features` should add a FrameworkReference instead:\r\n\r\n```\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nhttps://docs.microsoft.com/aspnet/core/fundamentals/target-aspnetcore?#use-the-aspnet-core-shared-framework\r\n\r\nLibraries with out of date references may encounter a `TypeLoadException` or the following error:\r\n```\r\nError\tCS0433\tThe type 'IFeatureCollection' exists in both 'Microsoft.AspNetCore.Http.Features, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' and 'Microsoft.Extensions.Features, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n```\r\n\r\nThis can be mitigated by adding the FrameworkReference shown above to any of the affected projects.\r\n\r\nSee https://github.com/dotnet/aspnetcore/issues/32307 for questions.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[IFeatureCollection](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.ifeaturecollection)\r\n[FeatureCollection](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurecollection)\r\n[FeatureReference](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurereference-1)\r\n[FeatureReferences](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.http.features.featurereferences-1)\r\n  \r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/462","RelatedDescription":"Open issue \"Microsoft.AspNetCore.Http.Features split, no longer shipped as a package\" (#462)"},{"Id":"864076275","IsPullRequest":false,"CreatedAt":"2021-04-21T16:42:10","Actor":"BrennanConroy","Number":"461","RawContent":null,"Title":"New Use middleware overload, can cause compiler errors if you don't call next","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## [New Use middleware overload, can cause compiler errors if you don't call `next`]\r\n\r\nA new overload of `app.Use` has been introduced. If you were previously using `app.Use` but never calling the `next` middleware, you will now get a compiler error (CS0121). If that's the case you should use `app.Run` instead of `app.Use`.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0-preview4\r\n\r\n### Old behavior\r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await next();\r\n});\r\n```\r\n\r\nor \r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await SomeAsyncWork();\r\n    // next never called\r\n});\r\n```\r\n\r\n### New behavior\r\n\r\n```C#\r\napp.Use(async (context, next) =>\r\n{\r\n    await next(context);\r\n});\r\n```\r\n\r\nNotice that you can now pass `context` to the `next` delegate.\r\n\r\n```C#\r\napp.Run(async (context) =>\r\n{\r\n    await SomeAsyncWork();\r\n    // next never called\r\n});\r\n```\r\n\r\nUse `app.Run` when your middleware never calls `next`, otherwise you will get a compile error:\r\n`CS0121 The call is ambiguous between the following methods or properties: 'UseExtensions.Use(IApplicationBuilder, Func<HttpContext, Func, Task>)' and 'UseExtensions.Use(IApplicationBuilder, Func<HttpContext, RequestDelegate, Task>)'`\r\n\r\n### Reason for change\r\n\r\nThe previous `Use` method would allocate 2 objects per request. The new overload avoids these allocations with a small change to how you invoke the next middleware.\r\n\r\n### Recommended action\r\n\r\nIf you get a compile error, it means you are calling `app.Use` without using the `next` delegate. Switch to `app.Run` to fix the error.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\nDiscussion issue https://github.com/dotnet/aspnetcore/issues/32020\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/461","RelatedDescription":"Open issue \"New Use middleware overload, can cause compiler errors if you don't call next\" (#461)"},{"Id":"853676314","IsPullRequest":false,"CreatedAt":"2021-04-08T17:07:48","Actor":"pranavkm","Number":"460","RawContent":null,"Title":"PreserveCompilationContext is no longer configured by default","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## PreserveCompilationContext is no longer configured by default for ASP.NET Core apps targeting .NET 6 and newer\r\n\r\n`PreserveCompilationContext` is an MSBuild property that causes .NET Core projects to emit additional content to the application's Dependency (.deps) file about how the app was compiled. This is primarily used to support runtime-compilation based scenarios.\r\n\r\nPrior to .NET 6, `PreserveCompilationContext` was configured to `true` for all apps that target the Razor (`Microsoft.NET.Sdk.Razor`) and Web (`Microsoft.NET.Sdk.Web`) apps. Starting in .NET 6, this property is no longer configured by default. Packages such as Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation configure this property as required.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0\r\n\r\n### Old behavior\r\n\r\nDependency file contains compilation context.\r\n\r\n### New behavior\r\n\r\nDependency file no longer contains compilation context.\r\n\r\n### Reason for change\r\n\r\nThis is part of our effort to improve build performance, startup time, and reduce the size of ASP.NET Core's build output.\r\n\r\n### Recommended action\r\n\r\nIf your app requires this feature and does not reference a package that configures this, update the project to include this property:\r\n\r\n```xml\r\n<PropertyGroup>\r\n   <PreserveCompilationContext>true</PreserveCompilationContext>\r\n</PropertyGroup>\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nNot detectable via API analysis\r\n\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/460","RelatedDescription":"Open issue \"PreserveCompilationContext is no longer configured by default\" (#460)"},{"Id":"850860131","IsPullRequest":false,"CreatedAt":"2021-04-06T00:47:37","Actor":"captainsafia","Number":"459","RawContent":null,"Title":"Razor compiler no longer produces a Views assembly","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Razor compiler no longer produces a Views assembly\r\n\r\nThe Razor compiler no longer produces a separate `Views.dll` containing the CSHTML views defined in an application.\r\n\r\n### Version introduced\r\n\r\n.NET 6 Preview 3\r\n\r\n### Old behavior\r\n\r\nThe Razor compiler utilized a two-step compilation process that produced a main `AppName.dll` assembly containing application types and an `AppName.Views.dll` assembly that contains the generated views defined in the application. Generated view types were public and under the \"AspNetCore\" namespace.\r\n\r\n### New behavior\r\n\r\nBoth views and application types are included in a single `AppName.Views.dll` assembly. View types are augmented with the `internal sealed` modifiers by default and included under the `AspNetCoreGeneratedDocument` namespace.\r\n\r\n### Reason for change\r\n\r\nThis change improves build performance for applications that use Razor views by removing the two-step compilation process and also allows Razor views to participate in the hot reload experience for VS.\r\n\r\n### Recommended action\r\n\r\nN/A\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n \r\nNot detectable via API analysis\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/459","RelatedDescription":"Open issue \"Razor compiler no longer produces a Views assembly\" (#459)"},{"Id":"850544376","IsPullRequest":false,"CreatedAt":"2021-04-05T17:57:32","Actor":"SteveSandersonMS","Number":"458","RawContent":null,"Title":"Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation","State":"open","Body":"## Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation\r\n\r\nThe extension method `EditContextDataAnnotationsExtensions.AddDataAnnotationsValidation` is being marked as obsolete. Developers should use the new extension method `EditContextDataAnnotationsExtensions.EnableDataAnnotationsValidation` instead.\r\n\r\nThe only difference between these two APIs is in their return values:\r\n\r\n```cs\r\nEditContext AddDataAnnotationsValidation(this EditContext editContext) { ... }\r\n\r\nIDisposable EnableDataAnnotationsValidation(this EditContext editContext) { ... }\r\n```\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nThe older API returns its `EditContext` (as a kind of fluent API).\r\n\r\n### New behavior\r\n\r\nThe new API returns an `IDisposable` whose disposal can be used to remove the data annotations validation support from the `EditContext`.\r\n\r\n### Reason for change\r\n\r\nThere are cases where it's desirable to remove the data annotations validation support after adding it. This was not possible with the older API because there was no place to store the internal event subscriptions. The new API returns an object that holds the state necessary to remove data annotations validation support on disposal.\r\n\r\n### Recommended action\r\n\r\n**This does not affect most applications, because most applications do not call this directly anyway.** Most applications instead use the `<DataAnnotationsValidator>` component, and do not need to be changed. The use of the extension methods discussed here is a rare and advanced case.\r\n\r\nHowever, if you do call `editContext.AddDataAnnotationsValidation()`, then replace that call with `editContext.EnableDataAnnotationsValidation()`. Optionally, captured the new returned `IDisposable` and dispose it if you later wish to undo the effects of the call.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[EditContextDataAnnotationsExtensions.AddDataAnnotationsValidation(EditContext)](https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.components.forms.editcontextdataannotationsextensions.adddataannotationsvalidation?view=aspnetcore-5.0)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/458","RelatedDescription":"Open issue \"Obsoleting AddDataAnnotationsValidation and replacing with EnableDataAnnotationsValidation\" (#458)"},{"Id":"848690041","IsPullRequest":false,"CreatedAt":"2021-04-01T18:24:35","Actor":"BrennanConroy","Number":"457","RawContent":null,"Title":"SignalR Java Client updated to RxJava3","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## SignalR Java Client updated to RxJava3\r\n\r\nRxJava2 had it's end-of-life in February 2021. We are updating the SignalR Java Client to the newer RxJava3.\r\n\r\n### Version introduced\r\n\r\n6.0.0-preview4\r\n\r\n### Old behavior\r\n\r\nThe RxJava package reference in the library was RxJava2.\r\n\r\n### New behavior\r\n\r\nThe RxJava package reference in the library is now RxJava3.\r\nYou can read https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0 for what changed in RxJava3.\r\n\r\n### Reason for change\r\n\r\nThe old dependency (RxJava2) is no longer maintained.\r\n\r\n### Recommended action\r\n\r\nIf you were using RxJava2 in your app/library you might need to update to RxJava3. See https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0 for help.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\nDiscussion issue for this announcement: https://github.com/dotnet/aspnetcore/issues/31450\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/457","RelatedDescription":"Open issue \"SignalR Java Client updated to RxJava3\" (#457)"},{"Id":"825172081","IsPullRequest":false,"CreatedAt":"2021-03-21T23:42:46","Actor":"dougbu","Number":"455","RawContent":null,"Title":"Default branch has been renamed to main","State":"closed","Body":"On Monday, 15 March (slightly delayed, sorry), we renamed the default branch in this repository to main. For more details, see [our earlier announcement](https://github.com/dotnet/announcements/issues/172).","Url":"https://github.com/aspnet/Announcements/issues/455","RelatedDescription":"Closed issue \"Default branch has been renamed to main\" (#455)"},{"Id":"834175947","IsPullRequest":false,"CreatedAt":"2021-03-17T21:02:49","Actor":"pranavkm","Number":"456","RawContent":null,"Title":"Assemblies removed from Microsoft.AspNetCore.App shared framework","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Assemblies removed from Microsoft.AspNetCore.App shared framework\r\n\r\nAs part of our ongoing work to reduce the size of the ASP.NET Core shared framework, the following assemblies were removed from the ASP.NET Core targeting pack:\r\n\r\n* System.Security.Permissions\r\n* System.Windows.Extensions\r\n\r\nApplications upgrading to net6.0 would no longer be able to reference APIs provided by these libraries without adding additional `PackageReference` to their projects.\r\n\r\nIn addition, the following assemblies have been removed from the ASP.NET Core runtime pack:\r\n\r\n* Microsoft.Win32.SystemEvents\r\n* System.Drawing.Common\r\n* System.Security.Permissions\r\n* System.Windows.Extensions\r\n\r\nApplications that use APIs from these libraries but use them in a 6.0 version of Microsoft.AspNetCore.App without a PackageReference that ensures these assemblies are present as part of the application output, may see runtime errors.\r\nFor instance, an application that uses reflection to access APIs from one of these assemblies without adding an explicit reference to these packages may see runtime errors\r\n\r\n### Version introduced\r\n\r\n6.0\r\n\r\n### Old behavior\r\n\r\nApplications could use APIs provided by these libraries by referencing the Microsoft.AspNetCore.App shared framework.\r\n\r\n### New behavior\r\n\r\nPackageReference must be added to continue using these APIs.\r\n\r\n### Reason for change\r\n\r\nSize reduction.\r\n\r\n### Recommended action\r\n\r\n1. Add a `PackageReference` to the affected project. For instance,\r\n\r\n```xml\r\n<PackageReference Include=\"System.Security.Permissions\" Version=\"6.0.0\" />\r\n```\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n* https://docs.microsoft.com/dotnet/api/system.security.permissions\r\n* https://docs.microsoft.com/dotnet/api/system.media\r\n* https://docs.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509certificate2ui\r\n* https://docs.microsoft.com/dotnet/api/system.xaml.permissions.xamlaccesslevel\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/456","RelatedDescription":"Open issue \"Assemblies removed from Microsoft.AspNetCore.App shared framework\" (#456)"},{"Id":"816790915","IsPullRequest":false,"CreatedAt":"2021-02-25T20:42:13","Actor":"BrennanConroy","Number":"454","RawContent":null,"Title":"Changed MessagePack library in @microsoft/signalr-protocol-msgpack javascript library","State":"open","Body":"<!--\r\nThis issue template is for use in opening issues that document breaking changes. This template should be used to create an issue by Microsoft product team members who are documenting a breaking change.\r\n\r\nBracketed text is a placeholder; replace the text with the requested information and remove the brackets before submitting the issue. Also, remove this comment before submitting the issue.\r\n\r\n-->\r\n## Changed MessagePack library in @microsoft/signalr-protocol-msgpack npm package\r\n\r\n@microsoft/signalr-protocol-msgpack used to reference msgpack5 now it references @msgpack/msgpack.\r\n\r\nThe `MessagePackOptions` that could optionally be passed into the `MessagePackHubProtocol` also has a breaking change. The options `disableTimestampEncoding` and `forceFloat64` no longer exist, and some additional options now exist.\r\n\r\n### Version introduced\r\n\r\nASP.NET Core 6.0\r\n\r\n### Old behavior\r\n\r\nPreviously to use the MessagePack hub protocol in the browser you needed to include 3 script references\r\n```\r\n<script src=\"~/lib/signalr/signalr.js\"></script>\r\n<script src=\"~/lib/msgpack5/msgpack5.js\"></script>\r\n<script src=\"~/lib/signalr/signalr-protocol-msgpack.js\"></script>\r\n```\r\n\r\nIn addition the `msgpack5` package was downloaded to your `node_modules` so you could use it in your app if you wanted.\r\n\r\n`MessagePackOptions` had `disableTimestampEncoding` and `forceFloat64` properties, but doesn't anymore.\r\n\r\n### New behavior\r\n\r\nTo use the MessagePack hub protocol in the browser you now only need 2 script references\r\n```\r\n<script src=\"~/lib/signalr/signalr.js\"></script>\r\n<script src=\"~/lib/signalr/signalr-protocol-msgpack.js\"></script>\r\n```\r\n\r\nAnd you will have the `@msgpack/msgpack` package downloaded to your `node_modules` if you want to use the directly in your app.\r\n\r\n`MessagePackOptions` has new properties and removed the `disableTimestampEncoding` and `forceFloat64` properties.\r\n\r\n### Reason for change\r\n\r\nReduced asset size, reduced complexity to consume the package, and more customizability.\r\n\r\n### Recommended action\r\n\r\nIf you were previously using `msgpack5` in your app, you will need to add a direct reference to the library in your package.json.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\nRemoved `MessagePackOptions.disableTimestampEncoding`\r\nRemoved `MessagePackOptions.forceFloat64`\r\n\r\n### Discussion issue\r\n\r\nhttps://github.com/dotnet/aspnetcore/issues/30471\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/454","RelatedDescription":"Open issue \"Changed MessagePack library in @microsoft/signalr-protocol-msgpack javascript library\" (#454)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1504161094608121860","CreatedAt":"2022-03-16T18:22:05+00:00","UserScreenname":"aspnet","Text":"📰#AspNetCore updates in .NET 7 Preview 2\n\n⭐Infer API controller action parameters from services\n⭐DI for SignalR hub… https://t.co/KxMYuQNxRd","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":50,"FavoriteCount":22,"RawContent":null},{"Id":"1501256562895036419","CreatedAt":"2022-03-08T18:00:31+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Native client apps with Blazor Hybrid https://t.co/f5vHcTQhd2","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"1496168009215344643","CreatedAt":"2022-02-22T17:00:25+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - 20 Years of https://t.co/eFOzgs22K8🎂 https://t.co/XXTMIc5Dy9","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1496167407744086018","CreatedAt":"2022-02-22T16:58:02+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join @shanselman, @poppastring, and @jongalloway to chat about 20 years of… https://t.co/hfMKeHr1vZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"1495871220394385411","CreatedAt":"2022-02-21T21:21:05+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🎂 20 Years of https://t.co/eFOzgrKrSA\n⭐ Featuring Scott Hanselman, Mark D… https://t.co/GPs3Ptw8qb","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":24,"FavoriteCount":5,"RawContent":null},{"Id":"1494392800598577152","CreatedAt":"2022-02-17T19:26:22+00:00","UserScreenname":"aspnet","Text":"👉#AspNetCore updates in .NET 7 Preview 1\n\nRead what we've got planned for .NET 7 including:\n🚀Performance\n3️⃣HTTP/3… https://t.co/VPeKeXIwYv","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":130,"FavoriteCount":68,"RawContent":null},{"Id":"1493637107289522177","CreatedAt":"2022-02-15T17:23:31+00:00","UserScreenname":"aspnet","Text":"No #AspNet Community Standup today. \n\nNot to worry, we've got #AzureOpenSourceDay today and lots of great recent sh… https://t.co/8znxVhw480","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":8,"FavoriteCount":2,"RawContent":null},{"Id":"1491109605648207874","CreatedAt":"2022-02-08T18:00:08+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Blazor .NET 7 Roadmap https://t.co/Veq88bsGrw","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":25,"FavoriteCount":4,"RawContent":null},{"Id":"1491108797871722496","CreatedAt":"2022-02-08T17:56:55+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us at https://t.co/AyBuoIUGkc https://t.co/mhHu7QkzEd","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"1490768201105297408","CreatedAt":"2022-02-07T19:23:30+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🗺️ Blazor .NET 7 Roadmap\n⭐ Featuring Daniel Roth, Tanay Parikh, Jon Gallo… https://t.co/35FZoGBfdb","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":25,"RawContent":null},{"Id":"1488572677686059010","CreatedAt":"2022-02-01T17:59:17+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Community Standup - Localizing the .NET Website https://t.co/9hM6JQhLaH","Source":"<a href=\"https://periscope.tv\" rel=\"nofollow\">Periscope</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1488571968504807432","CreatedAt":"2022-02-01T17:56:28+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join the team to see how they localized the .NET website!\n\nhttps://t.co/AyBuoJbJmc https://t.co/pj5GTSIau8","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":6,"RawContent":null},{"Id":"1488253923668365312","CreatedAt":"2022-01-31T20:52:40+00:00","UserScreenname":"aspnet","Text":"On this week's #ASPNET Community Standup:\n🌐 Localizing the .NET Website\n⭐ Maira Wenzel, Dan Zhu, Sébastien Ros, Dam… https://t.co/vIF8OOOYFo","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null},{"Id":"1488221656606654467","CreatedAt":"2022-01-31T18:44:27+00:00","UserScreenname":"aspnet","Text":"🚀Performance improvements in #AspNetCore 6\n\nhttps://t.co/vZzVeuihxj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":72,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2022-03-22T03:30:08.5057135Z","RunDurationInMilliseconds":3143}