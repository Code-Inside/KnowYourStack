{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"28348119480","Type":"PullRequestEvent","CreatedAt":"2023-04-11T23:16:28","Actor":"theot12","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9464","RelatedDescription":"Opened pull request \"Disallow aria-expanded for collapsible elements without an allowed role\" (#9464) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9415\r\n\r\nAdded a fix to the JavaScript that controls collapsible elements to not add the `aria-expanded` attribute for elements that do not have an [allowed role](https://w3c.github.io/aria/#aria-expanded)."},{"Id":"28347954734","Type":"IssuesEvent","CreatedAt":"2023-04-11T23:04:55","Actor":"theot12","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9417","RelatedDescription":"Closed issue \"[A11y]Add appropriate heading tags to elements\" (#9417) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1743931\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter and Unselect Push Checkbox\r\nRun AI4W and check the heading tags are provided or not\r\nCheck whether heading level tag is provided to the text \"Select Scopes and Select Packages\" or not.\r\n\r\nNOTE: Similar issue is observed for below screen also.\r\n\r\nHit the URL:https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter.\r\nEnter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\nNavigate to \"Manage\" control and hit enter on \"Edit\" control.\r\nObserve that No heading tag is provided to the text \"Select Package\".\r\n\r\nActual Result:\r\nNo heading tag is provided to the text \"Select Scopes and Select Packages\"\r\n\r\nExpected Result:\r\nH3 Heading level should be assigned to text \"Select Scopes and Select Packages\"\r\n\r\nNotes:\r\nThis SHOULD be as simple as changing the element to a H3 and applying the relevant styles."},{"Id":"28346819361","Type":"IssuesEvent","CreatedAt":"2023-04-11T21:45:54","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9414","RelatedDescription":"Closed issue \"[A11y][TFM] Tooltip icon present beside Frameworks label is defined as both 'frameworks filter information' link and tooltip info button.\" (#9414) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745398\r\n\r\nEnvironment Details:\r\nApplication Name: Filtering by Target Frameworks\r\n#URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nWindows Version: Win11\r\nOS Version: 22621.1105\r\nChromium Edge Version: Version 109.0.1518.78 (Official build) (64-bit)\r\n\r\nRepro Steps: \r\nHit the URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nTab to Frameworks section.\r\nTab to the tooltip icon present beside Frameworks label.\r\nPress Enter and observe that tooltip info icon is behaving as a Link.\r\nAgain Tab to the same tooltip icon present beside Frameworks label .\r\nPress Tab again.\r\nObserve that now tooltip information appears on the same icon.\r\n\r\nActual Result:\r\nTooltip icon present beside Frameworks label is defined as both 'frameworks filter information' link and tooltip info button.\r\n\r\nExpected Result:\r\nTooltip icon present beside Frameworks label should be defined only as Tooltip info button and 'frameworks filter information' link should be separated from that control.\r\n\r\nNotes:\r\nThe observed keyboard interaction is a bit confusing. The cleanest thing to do there is likely going to be to separate the hover tooltip information and the link to additional information."},{"Id":"28346691311","Type":"PullRequestEvent","CreatedAt":"2023-04-11T21:38:03","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9460","RelatedDescription":"Merged pull request \"[A11y bug] Package Manager tab on Package details reads as both selected and expanded\" (#9460) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n\r\n* Removed `aria-expanded` from DisplayPackage for element that should only have `aria-selected`.\r\n* Added comment stating that `data-toggle=\"tab\"` adds `aria-expanded` every time it's selected/active. So, it needed to be removed when the script is loaded and after the `shown.bs.tab` event.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9418"},{"Id":"28345966516","Type":"PullRequestEvent","CreatedAt":"2023-04-11T20:57:11","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9463","RelatedDescription":"Merged pull request \"[A11y] TFM table differentiate versions for screen readers\" (#9463) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Added more explanatory column version message for screen readers.\r\n* Added message to differentiate between compatible and computed TFMs for screen readers.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9421"},{"Id":"28344464692","Type":"PullRequestEvent","CreatedAt":"2023-04-11T19:40:56","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9463","RelatedDescription":"Opened pull request \"[A11y] TFM table differentiate versions for screen readers\" (#9463) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Added more explanatory column version message for screen readers.\r\n* Added message to differentiate between compatible and computed TFMs for screen readers.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9421"},{"Id":"28326888126","Type":"IssuesEvent","CreatedAt":"2023-04-11T07:54:28","Actor":"muhtarmamatov","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9462","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9462) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nDear NuGet.org team,\r\nWe have a problem regarding the use of proxies when using nuget in the Teamcity CI system. If you add the proxy server data to the nuget.config configuration file via the terminal or command line, downloading dependencies will come through the proxy server. But using the same configuration file inside the Teamcity CI system downloading dependencies does not happen through a proxy but directly. Used configuration is below:\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n  <config>\r\n    <add key=\"http_proxy\" value=\"<http://ip_address_of_proxy:port_number>\" />\r\n    <add key=\"https_proxy\" value=\"<http://ip_address_of_proxy:port_number>\" />\r\n  </config>\r\n</configuration>\n\n### Repro Steps\n\n1. Set up proxy server on TeamCity ci agent \r\nteamcity.http.proxyHost=ip_address_of_proxy\r\nteamcity.http.proxyPort=port_number\r\n\r\nteamcity.https.proxyHost=ip_address_of_proxy\r\nteamcity.https.proxyPort=port_number\r\n\r\n\r\nteamcity.http.nonProxyHosts=localhost|<teamcity_server_ip>\r\nteamcity.https.nonProxyHosts=localhost|<teamcity_server_ip>\r\n\r\n2. Set up proxy server for nuget \r\n*) > nuget.exe config -set http_proxy=http://ip_address_of_proxy:port_number\r\n*) > nuget.exe config -set https_proxy=http://ip_address_of_proxy:port_number\r\n\r\n3. Run Build \n\n### Expected Behavior\n\nDownloading all the project dependencies should go through proxy server.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"28317298564","Type":"PullRequestEvent","CreatedAt":"2023-04-10T20:49:53","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9457","RelatedDescription":"Merged pull request \"Tooltip/popover placement update\" (#9457) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9424 and maybe some others.\r\n\r\n## Old behavior\r\n\r\nTooltip always appears to the right of the \"parent\" element and is inserted after it into the DOM tree sharing the same parent. This results in two things:\r\n1. tooltips often try to occupy as little horizontal space as possible:\r\n![image](https://user-images.githubusercontent.com/102933/230510833-a297b910-64ee-4825-ace4-b73425a0cf4c.png)\r\n2. When there is not enough space to the right to fit it, it is drawn off screen (and horizontal scrollbar appears for the window):\r\n![image](https://user-images.githubusercontent.com/102933/230510999-1f708443-8143-405c-b698-efabf7916c86.png)\r\n\r\n## New behavior\r\n\r\nTooltips are now parented to the `body` element, which results in them using as much horizontal space as possible (up to the limits set in bootstrap CSS for those):\r\n![image](https://user-images.githubusercontent.com/102933/230511191-d7ad8f74-8609-4935-a387-94d132a445c8.png)\r\n\r\nWhen there is little (<150 CSS pixels) space on the right side, the tooltip is shown above the \"parent\" element and if the page is scrolled down so that there isn't much space on top (<100 CSS pixels, fits 3 lines of text usually), it is drawn to the bottom of the \"parent\" element.\r\n\r\n![image](https://user-images.githubusercontent.com/102933/230511633-c1d837bf-4952-41ce-a9c0-386ac6c5a8ce.png)\r\n\r\n![image](https://user-images.githubusercontent.com/102933/230511659-57831017-5090-43cd-9708-3b6e1afb06b4.png)\r\n\r\nI had to resort to magic numbers in determining the direction as by the time placement function is called the exact size of the tooltip is undetermined.\r\n\r\nThe change is applied to all tooltips, so it addresses similar issues in other locations: blue checkmark tooltips on package details page and in search results, framework tooltips on package details page, etc.\r\n\r\n`getBoundingClientRect` support matrix:\r\n\r\n[![image](https://user-images.githubusercontent.com/102933/230513686-5c6e68fe-0549-492e-ad3a-0edf9f1c772e.png)](https://caniuse.com/getboundingclientrect)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"28345088574","Type":"IssuesEvent","CreatedAt":"2023-04-11T20:11:54","Actor":"igiona","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12537","RelatedDescription":"Opened issue \"Add the possibility replace a nuget source (force dotnet nuget add)\" (#12537) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\n### Problem statement\r\nIt is often the case that in a pipeline one has to add a nuget source with specific credentials.\r\nIt is likely that such source is already registered in a nuget.config file within the repo.\r\nSimply using `dotnet nuget add source \"http..\"` doesn't work reliably, since it fails if the source is already existing.\r\n\r\n### Desired solution\r\nAdd the possibility replace a nuget source, by adding the `--force` argument do the `dotnet nuget add source` command.\r\n\r\n`dotnet nuget add source \"http..\" --name myNewName --force`\r\n`dotnet nuget add source \"http..\" --name myNewName  --username mynewuser --password mynewtoken --force`\r\n\r\nWhen using the `--force` parameter, the dotnet command is expected to replace the source that matches the provided source-URL  with the new one (of course with all parameters that might be given like username, password etc.).\r\nIf not match is found, the source is just added as without the  `--force` parameter\r\n\n\n### Additional Context and Details\n\nCurrently, a workaround to this is to remove all source with a bash command like:\r\n\r\n`dotnet nuget list source | awk '/\\[/ {$1=$NF=\"\"; print $0}' | dotnet nuget remove source {}`\r\n\r\nThis command is not portable, and heavily depends on the printout of the tool which might change in future releases, making this solution pretty weak."},{"Id":"28339926633","Type":"IssuesEvent","CreatedAt":"2023-04-11T16:10:09","Actor":"sevens7xix","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12535","RelatedDescription":"Opened issue \"[bug] error NU1301 () when I am trying to create any .NET Application in Ubuntu 20.04\" (#12535) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet-sdk-7.0.202\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n1. Step one keep Ubuntu 20.04 with all its dependencies updated\r\n2. Try to create any project that needs additional dependencies like https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio-code#create-a-web-project-3 or https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-csharp?tabs=in-process#create-an-azure-functions-project\r\n3. That it, when omnisharp or the dotnet sdk try to restore/build/run the project the following exception its handled `error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.`\n\n### Verbose Logs\n\n```shell\n(in) RestoreGraphItems Count '7' (TaskId:39)\r\n                     (in) RestoreDisableParallel 'False' (TaskId:39)\r\n                     (in) RestoreNoCache 'False' (TaskId:39)\r\n                     (in) RestoreIgnoreFailedSources 'False' (TaskId:39)\r\n                     (in) RestoreRecursive 'True' (TaskId:39)\r\n                     (in) RestoreForce 'False' (TaskId:39)\r\n                     (in) HideWarningsAndErrors 'False' (TaskId:39)\r\n                     (in) RestoreForceEvaluate 'False' (TaskId:39)\r\n                     (in) RestorePackagesConfig 'False' (TaskId:39)\r\n                     X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/7.0.202/trustedroots/codesignctl.pem'. (TaskId:39)\r\n                     X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/7.0.202/trustedroots/timestampctl.pem'. (TaskId:39)\r\n                     Running restore with 4 concurrent jobs. (TaskId:39)\r\n                     Reading project file /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj. (TaskId:39)\r\n                     The restore inputs for 'TodoApi' have changed. Continuing restore. (TaskId:39)\r\n                     Restoring packages for /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj... (TaskId:39)\r\n                     Restoring packages for .NETCoreApp,Version=v7.0... (TaskId:39)\r\n11:06:51.525     1>/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n11:06:51.533     1>/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n                     Checking compatibility of packages on net7.0. (TaskId:39)\r\n                     All packages and projects are compatible with net7.0. (TaskId:39)\r\n                     Committing restore... (TaskId:39)\r\n                     Writing assets file to disk. Path: /home/saroui/Documents/sample-app/TodoApi/obj/project.assets.json (TaskId:39)\r\n                     Writing cache file to disk. Path: /home/saroui/Documents/sample-app/TodoApi/obj/project.nuget.cache (TaskId:39)\r\n                     Persisting dg to /home/saroui/Documents/sample-app/TodoApi/obj/TodoApi.csproj.nuget.dgspec.json (TaskId:39)\r\n                     Failed to restore /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (in 326 ms). (TaskId:39)\r\n                      (TaskId:39)\r\n                     NuGet Config files used: (TaskId:39)\r\n                         /home/saroui/.nuget/NuGet/NuGet.Config (TaskId:39)\r\n                      (TaskId:39)\r\n                     Feeds used: (TaskId:39)\r\n                         https://api.nuget.org/v3/index.json (TaskId:39)\r\n                   Done executing task \"RestoreTask\" -- FAILED. (TaskId:39)\r\n11:06:51.652     1>Done building target \"Restore\" in project \"TodoApi.csproj\" -- FAILED.: (TargetId:42)\r\n11:06:51.658     1>Done Building Project \"/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj\" (Restore target(s)) -- FAILED.\r\nDeferred Messages\r\n11:06:51.659     0>\r\nDetailed Build Summary\r\n======================\r\n     (TaskId:0)\r\n                     \r\n                     ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n                     Id                  : Exclusive Time   Total Time   Path (Targets)\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     0                   : 1.627s           1.932s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (Restore)  (TaskId:0)\r\n                     | 1                 : 0.077s           0.077s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_IsProjectRestoreSupported)  (TaskId:0)\r\n                     | 2                 : 0.009s           0.009s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_GenerateRestoreProjectPathWalk)  (TaskId:0)\r\n                     | 3                 : 0.196s           0.196s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_GenerateRestoreGraphProjectEntry)  (TaskId:0)\r\n                     . 4                 : 0.021s           0.021s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_GenerateProjectRestoreGraph)  (TaskId:0)\r\n                     \r\n                     ============================== Node Utilization (IDs represent configurations) ====================================================\r\n                     Timestamp:            1        Duration   Cumulative\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     638168260097250049:   0        0.905s     0.905s .................. (TaskId:0)\r\n                     638168260106301983:   1        0.078s     0.983s . (TaskId:0)\r\n                     638168260107081071:   0        0.041s     1.024s  (TaskId:0)\r\n                     638168260107492220:   2        0.010s     1.034s  (TaskId:0)\r\n                     638168260107587607:   0        0.019s     1.053s  (TaskId:0)\r\n                     638168260107776373:   3        0.196s     1.249s ... (TaskId:0)\r\n                     638168260109739325:   0        0.003s     1.252s  (TaskId:0)\r\n                     638168260109766418:   4        0.021s     1.273s  (TaskId:0)\r\n                     638168260109978266:   0        0.662s     1.935s ............. (TaskId:0)\r\n                     -----------------------------------------------------------------------------------------------------------------------------------\r\n                     Utilization:          100.0    Average Utilization: 100.0 (TaskId:0)\r\n\r\nProject Evaluation Performance Summary:\r\n      837 ms  /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj   2 calls\r\n\r\nProject Performance Summary:\r\n     1333 ms  /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj   6 calls\r\n               1107 ms  Restore                                    1 calls\r\n                  2 ms  _IsProjectRestoreSupported                 2 calls\r\n                  8 ms  _GenerateRestoreProjectPathWalk            1 calls\r\n                195 ms  _GenerateRestoreGraphProjectEntry          1 calls\r\n                 21 ms  _GenerateProjectRestoreGraph               1 calls\r\n\r\nTarget Performance Summary:\r\n        0 ms  _GenerateRestoreProjectPathItemsCurrentProject   1 calls\r\n        0 ms  _GenerateProjectRestoreGraph               1 calls\r\n        0 ms  _GetRestoreSettingsCurrentProject          1 calls\r\n        0 ms  _GenerateRestoreDependencies               1 calls\r\n        0 ms  _GenerateProjectRestoreGraphCurrentProject   1 calls\r\n        0 ms  _GenerateRestoreGraphProjectEntry          1 calls\r\n        0 ms  _CheckForObsoleteDotNetCliToolReferences   1 calls\r\n        0 ms  _GetRestoreTargetFrameworkOverride         1 calls\r\n        0 ms  _CheckForUnsupportedCppNETCoreVersion      2 calls\r\n        0 ms  _CheckForLanguageAndFeatureCombinationSupport   1 calls\r\n        0 ms  _GetProjectJsonPath                        1 calls\r\n        0 ms  _GetRestoreSettingsPerFramework            1 calls\r\n        0 ms  _CheckForUnsupportedNETCoreVersion         2 calls\r\n        0 ms  _GetRestoreSettingsOverrides               1 calls\r\n        0 ms  _IsProjectRestoreSupported                 1 calls\r\n        1 ms  CollectFrameworkReferences                 1 calls\r\n        1 ms  _GenerateRestoreSpecs                      1 calls\r\n        1 ms  _GenerateRestoreProjectPathItems           1 calls\r\n        1 ms  CollectCentralPackageVersions              1 calls\r\n        1 ms  _CollectTargetFrameworkForTelemetry        1 calls\r\n        2 ms  _GenerateRestoreProjectPathItemsPerFramework   1 calls\r\n        3 ms  ApplyImplicitVersions                      1 calls\r\n        3 ms  _GenerateDotnetCliToolReferenceSpecs       1 calls\r\n        3 ms  _GetRestoreTargetFrameworksOutput          1 calls\r\n        3 ms  _GenerateRestoreProjectSpec                1 calls\r\n        3 ms  CollectPackageReferences                   1 calls\r\n        3 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n        4 ms  _GenerateRestoreProjectPathWalk            1 calls\r\n        5 ms  CollectPackageDownloads                    1 calls\r\n        7 ms  _GenerateProjectRestoreGraphPerFramework   1 calls\r\n        8 ms  _GetRestoreProjectStyle                    1 calls\r\n       11 ms  UpdateAspNetToFrameworkReference           1 calls\r\n       25 ms  _LoadRestoreGraphEntryPoints               1 calls\r\n       30 ms  _GetAllRestoreProjectPathItems             1 calls\r\n       34 ms  _GetRestoreSettings                        1 calls\r\n      125 ms  ProcessFrameworkReferences                 1 calls\r\n      153 ms  _FilterRestoreGraphProjectInputItems       1 calls\r\n      227 ms  _GenerateRestoreGraph                      1 calls\r\n      652 ms  Restore                                    1 calls\r\n\r\nTask Performance Summary:\r\n        1 ms  GetRestorePackageDownloadsTask             1 calls\r\n        1 ms  AllowEmptyTelemetry                        1 calls\r\n        1 ms  GetRestoreFrameworkReferencesTask          1 calls\r\n        1 ms  ApplyImplicitVersions                      1 calls\r\n        1 ms  GetRestoreProjectReferencesTask            1 calls\r\n        1 ms  CheckForDuplicateFrameworkReferences       1 calls\r\n        1 ms  GetRestorePackageReferencesTask            1 calls\r\n        2 ms  GetRestoreDotnetCliToolsTask               1 calls\r\n        2 ms  GetProjectTargetFrameworksTask             1 calls\r\n        2 ms  NuGetMessageTask                           1 calls\r\n        2 ms  ConvertToAbsolutePath                      2 calls\r\n        2 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n        3 ms  Message                                    3 calls\r\n        4 ms  GetRestoreProjectStyleTask                 1 calls\r\n        5 ms  CheckIfPackageReferenceShouldBeFrameworkReference   2 calls\r\n        5 ms  WarnForInvalidProjectsTask                 1 calls\r\n        7 ms  RemoveDuplicates                           5 calls\r\n        8 ms  CheckForDuplicateNuGetItemsTask            3 calls\r\n       31 ms  ResolveAppHosts                            1 calls\r\n       33 ms  GetRestoreSettingsTask                     1 calls\r\n       89 ms  ProcessFrameworkReferences                 1 calls\r\n      366 ms  MSBuild                                    6 calls\r\n      651 ms  RestoreTask                                1 calls\r\n\r\nBuild FAILED.\r\n\r\n                   \"/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj\" (Restore target) (1) ->\r\n                   (Restore target) -> \r\n                     /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n                     /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n\r\n    0 Warning(s)\r\n    2 Error(s)\n```\n"},{"Id":"28339259503","Type":"IssuesEvent","CreatedAt":"2023-04-11T15:44:43","Actor":"muhtarmamatov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12534","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#12534) at NuGet/Home","RelatedBody":""},{"Id":"28317109782","Type":"IssuesEvent","CreatedAt":"2023-04-10T20:39:02","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12509","RelatedDescription":"Closed issue \"Allow resolving cousin dependency conflicts at a higher level\" (#12509) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nGiven the following dependencies:\r\n\r\n- My Project -> Package A -> Package B -> Package C (>=3.7 && < 3.8)\r\n- My Project -> Package D (>= 3.3) -> Package C (>= 3.3 && < 3.4)\r\n- Package D (3.7) -> Package C (>= 3.7 && < 3.8)\r\n\r\nattempting to resolve `My Project` will result in a version conflict for `Package C`.\n\n### Desired Behavior\n\nAllow `My Project` to resolve a newer version of `Package D` which does meet the constraints required by `Package B`.\r\nThis would not violate any of the constraints while still choosing the lowest version of dependencies.\n\n### Additional Context\n\nIt's possible to workaround this by directly referencing `Package C` in `My Project`; however, that is both an extra step and additional contextual understanding needed when simply trying to upgrade direct dependencies."},{"Id":"28317089599","Type":"IssuesEvent","CreatedAt":"2023-04-10T20:37:52","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12510","RelatedDescription":"Closed issue \"[Cross-platform Dotnet NuGet Sign] The error info of NU3018 on MacOS “the key usage is incorrect” is not clear enough when the certificate is not valid for code signing\" (#12510) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n .NET SDK 7.0.202\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. [Patched dotnet SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703).\r\n2. On Windows: Create a new test certificate:    ` .\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Type SSLServerAuthentication -Password password -GenerateCerFile`  (in the powershell \"Developer Command Prompt\"). \r\n   On macOS: Copy the .cer file(should be generated under the same path with .pfx file) and the .pfx file from the above Windows machine to macOS machine.\r\n3. Go to the patchedSDK path and run the command as below. Where <CertificateFilePath> is the file path to the created certificate (in step1) .cer or .pem file and <VersionedSdkDirectoryPath> is the directory path for the patched versioned .NET SDK directory (e.g.:  ./patchedSDK/sdk/7.0.100), add trust for the certificate: \r\nOn macOS:  `./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> -vsd <VersionedSdkDirectoryPath> `\r\n4. Use the patched \"dotnet.exe\" to sign a package. Where <PackageFilePath> is the test package path and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\nOn macOS:  `./dotnet nuget sign <PackageFilePath> --overwrite --certificate-path <PfxFilePath> --certificate-password password --timestamper http://timestamp.digicert.com/ -v n `\r\n5. Verify the output of previous step.\r\n\r\n#### Expected:\r\nThere are two errors as below.\r\nError: NU3018: NotValidForUsage: The certificate has invalid policy.  \r\nError: NU3018: Certificate chain validation failed. \r\n\r\n#### Actual:\r\nThe error info of NU3018 on MacOS “the key usage is incorrect” is not clear enough as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/228473504-5e2d0fb4-482d-4c4c-9a0f-228534206ae7.png)\r\n#### Note:\r\n1.It is not a regression.\r\n2.It doesn’t repro on Windows/Linux.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"28314609369","Type":"IssuesEvent","CreatedAt":"2023-04-10T18:25:55","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12533","RelatedDescription":"Opened issue \"Investigate An error \"Operation is not valid due to the current state of the object.\" when adding new ASP.NET Web Application(.NET Framework)\" (#12533) at NuGet/Home","RelatedBody":"\r\nThere is a bug reported saying that there is an error when adding a ASP.NET Web Applicatin(.NET Framework), this was introduced by the commit in https://github.com/NuGet/NuGet.Client/pull/4879/files. They are going to create a PR that will fix this problem so an imminent fix is not need but we need to investigate if this is a bug in our code to decide if we revert or do a fix.\r\n\r\nThey suggested using [IVsBackgroundSolution](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/vscommon/MergedPIAs/Internal/NonEmbeddable/Microsoft.Internal.VisualStudio.Shell.Interop.17.cs&version=GBmain&line=1711&lineEnd=1712&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents) to fetch information outside the UI thread. \r\n\r\nAzDO bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1746809?src=WorkItemMention&src-action=artifact_link"},{"Id":"28310913134","Type":"IssuesEvent","CreatedAt":"2023-04-10T15:18:30","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12508","RelatedDescription":"Closed issue \"Nuget does not report xml parse failures when evaluating the project file and its imports\" (#12508) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild 17.2.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nCreate Directory.Build.props containing\r\n`<Project>\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net48</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>`\r\n\r\nRemove any mention of TargetFramework from the csproj.\r\n\r\nBuild with `msbuild -restore`. Confirm successful build.\r\n\r\nBreak Directory.Build.props - e.g. by adding `<!-- Invalid XML comment -- can't have double hyphen -->`.\r\n\r\nAttempt to build with `msbuild -restore`.\r\n\r\nResult: Build fails with `Invalid framework identifier ''`\r\n\r\nExpected: Build fails with `The imported project file \"path\\to\\Directory.Build.props\" could not be loaded. An XML comment cannot contain '--', and '-' cannot be the last character. Line 3, position 27.`\r\n\r\nI have seen this issue repro in other cases where the broken xml doesn't fail the restore operation (i.e. it doesn't result in a required property being undefined), but instead causes subtly wrong restore behavior before the main build reports the error.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-04-12T03:30:24.0509247Z","RunDurationInMilliseconds":1439}