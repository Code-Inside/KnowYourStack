{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34670272964","Type":"PullRequestEvent","CreatedAt":"2024-01-09T05:51:07","Actor":"v-ayushchat","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9774","RelatedDescription":"Opened pull request \"[ReleasePrep][2024.01.09]RI of dev into main\" (#9774) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"34662904842","Type":"PullRequestEvent","CreatedAt":"2024-01-08T21:44:16","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9764","RelatedDescription":"Merged pull request \"Show TFM badges in package search results\" (#9764) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9629\r\n\r\nThis adds TFM badges to package search results:\r\n- We can choose to show either just asset frameworks, or both asset and computed frameworks. This will be based on whether the user selects the 'Include Computed Frameworks' checkbox in the new search filters (will be added with a later change). \r\n- We will show the lowest (asset/computed) version TFM from each of the 4 Framework generations (`.NET`, `.NET Core`, `.NET Standard`, `.NET Framework`).\r\n- The badges will link to the package's frameworks tab.\r\n- The TFM badges will be behind a feature flight.\r\n\r\nWe are reusing code previously written to display TFM badges on the package details page, but this needed some refactoring (See `src/NuGetGallery.Core/Frameworks/PackageFrameworkCompatibilityFactory.cs`) that touched a lot of different files.\r\n\r\nThe changes were primarily made in these files:\r\n\r\n- `src/NuGetGallery.Core/*`\r\n- `src/NuGetGallery/Controllers/PackagesController.cs`\r\n- `src/NuGetGallery/Helpers/ViewModelExtensions/ListPackageItemViewModelFactory.cs`\r\n- `src/NuGetGallery/Infrastructure/Lucene/ExternalSearchService.cs`\r\n- `src/NuGetGallery/ViewModels/ListPackageItemViewModel.cs`\r\n- `src/NuGetGallery/Views/Packages/_SupportedFrameworksBadges.cshtml`\r\n- `src/NuGetGallery/Views/Shared/_ListPackage.cshtml`\r\n- `tests/NuGetGallery.Core.Facts/Frameworks/PackageFrameworkCompatibilityFactoryFacts.cs`\r\n\r\nThe remaining files were changed either as a result of refactoring, or to add the feature flight for this change.\r\n\r\nPreviously,\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/1e9a3102-07f9-4a86-adf1-1cc86a62dcfe)\r\n\r\nAfter this change,\r\n\r\nSearch page (only asset frameworks):\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/3d67338c-88cd-48da-8a7e-6b1e8c96fdb2)\r\n\r\nSearch page (including computed frameworks):\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/3b182be0-e3b3-4b07-b7d2-ad0662a52283)\r\n\r\nWith deprecation/vulnerability indicators:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/b31d84cd-1991-458e-9451-954372939fa0)\r\n\r\nProfiles page:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/3aa1c319-c5f3-48cd-9e2a-d4ec44d42e69)\r\n\r\nPackage Details page and the Frameworks tab (**Unchanged**):\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/cd40560e-aafe-4903-bccf-0ea5f6ba9d35)\r\n"},{"Id":"34658621877","Type":"PullRequestEvent","CreatedAt":"2024-01-08T18:29:59","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9767","RelatedDescription":"Merged pull request \"Abstract typosquatting\" (#9767) at NuGet/NuGetGallery","RelatedBody":"Tracking issue: https://github.com/NuGet/Engineering/issues/4815\r\nSee at tracking issue for related PRs.\r\n"},{"Id":"34627104387","Type":"IssuesEvent","CreatedAt":"2024-01-07T08:50:19","Actor":"WithLithum","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9773","RelatedDescription":"Opened issue \"[Feature]: Allow images from Codeberg.org\" (#9773) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nAllow `readme.md` to reference images from `Codeberg.org`, specifically, `https://codeberg.org/*/*/raw/*/*/**.*` where `*` means a single directory while `**` means any directory or multiple directories. For example, the link to the one of the official logos of Codeberg in the official icon repository is `https://codeberg.org/Codeberg/Design/raw/branch/main/logo/icon/png/codeberg-logo_icon_blue-64x64.png`.\n\n### Additional Context and Details\n\n`Codeberg.org` is a FOSS-only code hosting platformed based on Forgejo, which is a soft fork of Gitea."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34731711925","Type":"IssuesEvent","CreatedAt":"2024-01-11T00:57:22","Actor":"Erarndt","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13147","RelatedDescription":"Opened issue \"Use of ConcurrentStack in object pool implementation creates large amounts of allocations\" (#13147) at NuGet/Home","RelatedBody":"Traces show that returning objects to the pool ends up allocating large amounts of memory (several GB in some cases):\r\n\r\n![image](https://github.com/NuGet/Home/assets/60519722/f1b6b868-0043-4ddf-8abc-10e159b41e17)\r\n\r\nThe `Node` allocations are happening in `ConcurrentDictionary.Push()` which is implemented like this:\r\n\r\n    public void Push(T item)\r\n    {\r\n        Node node = new Node(item);\r\n        node.m_next = m_head;\r\n        if (Interlocked.CompareExchange(ref m_head, node, node.m_next) != node.m_next)\r\n        {\r\n            PushCore(node, node);\r\n        }\r\n    }\r\n\r\nNotice that it *always* allocates a `Node` object which is why we see such high allocations."},{"Id":"34731188090","Type":"IssuesEvent","CreatedAt":"2024-01-11T00:23:53","Actor":"Erarndt","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13146","RelatedDescription":"Opened issue \"IsBestVersion boxes HashSet<T> enumerators resulting in lots of allocation overhead during restore.\" (#13146) at NuGet/Home","RelatedBody":"The boxing in IsBestVersion accounts for significant amounts of allocations during a restore. In this trace over it's over 3GB or 3.4% of total allocations.\r\n\r\n![image](https://github.com/NuGet/Home/assets/60519722/054f1120-0f70-4b48-a953-1e9e529215e6)\r\n\r\nUpdating `NoAllocEnumerate()` to handle `HashSet<T>` will provide a way to fix this issue."},{"Id":"34730358079","Type":"IssuesEvent","CreatedAt":"2024-01-10T23:28:41","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13145","RelatedDescription":"Opened issue \"Address comments on `dotnet package search` in a follow up PR\" (#13145) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nAddress comments on the following PR: https://github.com/NuGet/NuGet.Client/pull/5525\n\n### Additional Context and Details\n\n_No response_"},{"Id":"34730144606","Type":"IssuesEvent","CreatedAt":"2024-01-10T23:15:00","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13138","RelatedDescription":"Closed issue \"ResolvedDependencyKey should be struct to reduce memory allocations\" (#13138) at NuGet/Home","RelatedBody":"The `NuGet.Commands.ResolvedDependencyKey` class is allocated a lot during dependency resolution and instead could be a `struct` which would reduce memory usage.  This would be a breaking change for any user who is using the API.  This is a list of the public APIs that will change:\n\n```\nNuGet.Commands.ResolvedDependencyKey.Equals(NuGet.Commands.ResolvedDependencyKey other) -> bool\nNuGet.Commands.ResolvedDependencyKey.ResolvedDependencyKey() -> void\nstatic NuGet.Commands.ResolvedDependencyKey.operator !=(NuGet.Commands.ResolvedDependencyKey left, NuGet.Commands.ResolvedDependencyKey right) -> bool\nstatic NuGet.Commands.ResolvedDependencyKey.operator ==(NuGet.Commands.ResolvedDependencyKey left, NuGet.Commands.ResolvedDependencyKey right) -> bool\n```\n\nAlso, the `NuGet.Commands.UnexpectedDependencyMessages` was removed from the public API"},{"Id":"34729941461","Type":"IssuesEvent","CreatedAt":"2024-01-10T23:03:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13144","RelatedDescription":"Opened issue \"Building NuGet does not work on a fresh computer \" (#13144) at NuGet/Home","RelatedBody":"On a new computer, download the repo.\r\n\r\n- .\\configure.ps1\r\n- .\\run.ps1 -SkipUnitTest\r\n\r\nNote that during this, run.ps1 will disable the strong name validation for the nuget assemblies, but unfortunately that's not enough. \r\n\r\nYou get failures like:\r\n\r\n```console\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error : CreatePkgDef : error : FileLoadException: Could not load file or assembly 'NuGet.SolutionRestoreManager, Version=6.9.0.32767, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. Strong name validation failed. (Exception from HRESULT: 0x8013141A) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at System.Reflection.RuntimeAssembly.InternalLoadFrom(String assemblyFile, Evidence securityEvidence, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm, Boolean forIntrospection, Boolean suppressSecurityChecks, StackCrawlMark& stackMark) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at System.Reflection.Assembly.LoadFrom(String assemblyFile) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at Microsoft.VisualStudio.Tools.CreatePkgDef.ProcessAssembly(String fileName, Hive hive, PkgDefContext context, Boolean register, RegistrationMode mode) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at Microsoft.VisualStudio.Tools.CreatePkgDef.DoCreatePkgDef(InputArguments inputArguments) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :    at Microsoft.VisualStudio.Tools.CreatePkgDef.Main(String[] arguments) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error : SecurityException: Strong name validation failed. (Exception from HRESULT: 0x8013141A) [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :  [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :  [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\nE:\\.packages\\microsoft.vssdk.buildtools\\17.0.1600\\tools\\VSSDK\\Microsoft.VsSDK.targets(1156,3): error :  [E:\\NuGet\\nuget.client\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\NuGet.SolutionRestoreManager.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\nThe issue persists. The only way to work around is running vspreinstall. \r\n\r\nNot sure when this became a problem, but it is right now.\r\nI was able to repro this on more than 1 machine.\r\n\r\nRunning vspreinstall fixes it, but not everyone has access to that script."},{"Id":"34724500957","Type":"IssuesEvent","CreatedAt":"2024-01-10T18:55:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13098","RelatedDescription":"Closed issue \"NuGet restore always touched the project.assets.json file even no content is changed when it needs log error messages.\" (#13098) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVisual Studio 17.9\n\n### Worked before?\n\nnot sure\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nTry to create a project with NuGet package reference to 'Newtonsoft.Json' 12.0.3.\r\n\r\nClose/reopen the solution, the project.assets.json file is touched every time, with extra evaluation and design time builds.  Touching the file without any content change would lead the project system to constantly discard project cache state, and repeat the NuGet restore logic.\r\n\r\nThe restore logic should skip updating the file in this case (as long as the original file matching the end result.)\n\n### Verbose Logs\n\n```shell\nin the assets file with this section:\r\n\r\n  \"logs\": [\r\n    {\r\n      \"code\": \"NU1903\",\r\n      \"level\": \"Error\",\r\n      \"message\": \"Warning As Error: Package 'Newtonsoft.Json' 12.0.3 has a known high severity vulnerability, https://github.com/advisories/GHSA-5crp-9r3c-p9vr\",\r\n      \"libraryId\": \"Newtonsoft.Json\",\r\n      \"targetGraphs\": [\r\n        \".NETCoreApp,Version=v3.1\"\r\n      ]\r\n    }\r\n\r\nit would keep being updated, even the content is not changed.\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-11T03:30:18.9804394Z","RunDurationInMilliseconds":1136}