{"Data":{"Blog":{"FeedItems":[{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13187927408","Type":"PullRequestEvent","CreatedAt":"2020-08-13T05:03:15","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8158","RelatedDescription":"Opened pull request \"package list can be sorted by ID, owners, downloads and version\" (#8158) at NuGet/NuGetGallery","RelatedBody":"This adds support for ordering the \"Published Packages\" and \"Unlisted Packages\" tables on the \"Manage my packages\" screen, eg:\r\n\r\n![image](https://user-images.githubusercontent.com/2829865/90096166-ecae9d00-dd75-11ea-9d6e-5e26a176e642.png)\r\n\r\nClicking on any of the column headers sorts by that column. I am by no means a JS guru but hopefully this does what we want and works for most people.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"13187061574","Type":"PullRequestEvent","CreatedAt":"2020-08-13T02:13:39","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8157","RelatedDescription":"Opened pull request \"Fixed breadcrumb links for packages with build metadata #8136\" (#8157) at NuGet/NuGetGallery","RelatedBody":"Fixes breadcrumb links for packages with build metadata by calling `NugetVersionFormatter.Normalize`. Not sure if this is a good way to fix it, but seems to work ok for normal packages and pre-release packages too.\r\n\r\nAddresses #8136"},{"Id":"13186895138","Type":"PullRequestEvent","CreatedAt":"2020-08-13T01:40:37","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8156","RelatedDescription":"Opened pull request \"Display markdown licence files as HTML\" (#8156) at NuGet/NuGetGallery","RelatedBody":"(Third time lucky, sorry about the previous 2 pull requests!) \r\n\r\nThis adds support for displaying licence MD files as HTML. A few notes:\r\n\r\n- I have refactored the `ReadmeService.GetReadMeHtml()` method into it's own service, named MarkdownService. I did this in one commit so that's it's a bit more obvious what's going on. \r\n\r\n- The CommonMark library has a weird bug that if a string begins with a BOM, it doesn't convert the first line properly. As a result I stripped it out and then it works ok. I've added a test for this. (It looks like the version of CommonMark used is old, and the package is also no longer supported, but that's another matter)\r\n\r\n- A few of the unit tests eg `PackageControllerFacts.TheDisplayPackageMethod.WhenHasReadMeAndMarkdownExists_ReturnsContent` test that the markdown -> html is working properly, but that's arguably not the concern of the PackageControllerFacts and are tested anyway, inside the MarkdownServiceFacts. However, in the interests of keeping things working I've changed the `PackageControllerFacts` to inject an instantiated `MarkdownService` instead of a Mock. However if someone wiser than me wishes to change it to test against a mock and not test for the MD -> HTML logic then that seems to make sense to me, but it depends on how pure we want the unit tests to be. \r\n\r\nAddresses #7975"},{"Id":"13186884184","Type":"PullRequestEvent","CreatedAt":"2020-08-13T01:38:25","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8153","RelatedDescription":"Closed pull request \"Display markdown licence files as HTML \" (#8153) at NuGet/NuGetGallery","RelatedBody":"This adds support for displaying licence MD files as HTML. A few notes:\r\n\r\n- I have refactored the `ReadmeService.GetReadMeHtml()` method into it's own service, named MarkdownService. I did this in one commit so that's it's a bit more obvious what's going on. \r\n\r\n- The CommonMark library has a weird bug that if a string begins with a BOM, it doesn't convert the first line properly. As a result I stripped it out and then it works ok. I've added a test for this. (It looks like the version of CommonMark used is old, and the package is also no longer supported, but that's another matter)\r\n\r\n- A few of the unit tests eg `PackageControllerFacts.TheDisplayPackageMethod.WhenHasReadMeAndMarkdownExists_ReturnsContent` test that the markdown -> html is working properly, but that's arguably not the concern of the PackageControllerFacts and are tested anyway, inside the MarkdownServiceFacts. However, in the interests of keeping things working I've changed the `PackageControllerFacts` to inject an instantiated `MarkdownService` instead of a Mock. However if someone wiser than me wishes to change it to test against a mock and not test for the MD -> HTML logic then that seems to make sense to me, but it depends on how pure we want the unit tests to be. \r\n\r\nAddresses #7975"},{"Id":"13186865917","Type":"PullRequestEvent","CreatedAt":"2020-08-13T01:34:42","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8155","RelatedDescription":"Opened pull request \"Display warning when specified version was not found\" (#8155) at NuGet/NuGetGallery","RelatedBody":"Currently when specifying a version that doesn't exist (eg, https://www.nuget.org/packages/Newtonsoft.Json/1337.42.42.0)  it just takes you to the latest version with no warning. This PR adds that warning. \r\n\r\nAddresses #4624 "},{"Id":"13185579942","Type":"IssuesEvent","CreatedAt":"2020-08-12T21:43:32","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8133","RelatedDescription":"Closed issue \"Windows Authentication does not work with NuGet.Server\" (#8133) at NuGet/NuGetGallery","RelatedBody":"I have attempted to host my packages through my private intranet NuGet.Server for my firends. Yet, it worked well.\r\nBut, when i added a layer of security Windows Authentication, it stopped working!\r\n\r\n` <authentication mode=\"Windows\"/>\r\n    <authorization>\r\n      <deny users=\"?\"/>\r\n    </authorization>`\r\n\r\nWhile i searched first with visual studio it asked for credentials, but then it does not show any results. In console it found below.\r\n\r\n[MyNuget] The V2 feed at 'http://localhost/MyNuget/nuget/Search()?$filter=IsLatestVersion&searchTerm=''&targetFramework='net471'&includePrerelease=false&$skip=0&$top=26&semVerLevel=2.0.0' returned an unexpected status code '401 Unauthorized'.\r\n\r\nthen i opened browser to check it said similar\r\n\r\nError message 401.2.: Unauthorized: Logon failed due to server configuration.\r\n\r\n\r\n- Config file is untouched, i just just added these authentication lines\r\n- .Net Framework 4.6 and 4.7.1 both didnt work\r\n- I am running VS, Browser both inside domain\r\n- IIS Express also failed\r\n\r\nPlease help to make this work...\r\n\r\n[Web.config.txt](https://github.com/NuGet/NuGetGallery/files/5006235/Web.config.txt)\r\n"},{"Id":"13185573140","Type":"IssuesEvent","CreatedAt":"2020-08-12T21:42:34","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8097","RelatedDescription":"Closed issue \"[Advanced search] Add gallery functional tests \" (#8097) at NuGet/NuGetGallery","RelatedBody":"Hit specific URLs for test data and check results are expected."},{"Id":"13183460212","Type":"IssuesEvent","CreatedAt":"2020-08-12T17:33:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8121","RelatedDescription":"Closed issue \"Exceptions thrown when loading Gallery machine keys\" (#8121) at NuGet/NuGetGallery","RelatedBody":"Problem ID: `System.ObjectDisposedException at Autofac.Core.Lifetime.LifetimeScope.CheckNotDisposed`\r\nInnermost message: `Instances cannot be resolved and nested lifetimes cannot be created from this LifetimeScope as it has already been disposed.`\r\n\r\nHere is affected line:\r\n\r\nhttps://github.com/NuGet/NuGetGallery/blob/e73857484000509779c18ab4ea1bec93cc6131fa/src/NuGetGallery/App_Start/GalleryMachineKeyConfigurationProvider.cs#L25\r\n\r\nThis is the change that appears to be causing the exception: https://github.com/NuGet/NuGetGallery/pull/8098\r\n\r\n[LINK](https://ms.portal.azure.com#@33e01921-4d64-4f8c-a055-5bdaffd5e33d/blade/Microsoft_Azure_Monitoring_Logs/LogsBlade/resourceId/%2Fsubscriptions%2F685c4662-53d8-40f9-ac51-926097ede041%2FresourceGroups%2Fnuget-prod-0-v2gallery%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2Fnuget-prod-v2gallery/source/LogsBlade.AnalyticsShareLinkToQuery/q/H4sIAAAAAAAAA0WNQQrCMBRE94J3%252BPQAoR6gC6kuBLGLniD5mdJo4w%252FJFy14eMlC3Q3Mmzd4MZIGuZft5k3PGRmUsrgF8eSp66gZ16KIZnBXsB5CSVLgj98ZWaX9Q2WybHrJMOcwQUP8h5ElwfQz%252BHaRn6Cpd5I9MrmVKlfUxkQehWu1hBiUdm37AbD9qqehAAAA/timespan/P1D)\r\n\r\n```\r\nexceptions\r\n| where problemId == \"System.ObjectDisposedException at Autofac.Core.Lifetime.LifetimeScope.CheckNotDisposed\"\r\n| order by timestamp desc\r\n| limit 100\r\n```\r\n\r\nCall stack:\r\n\r\n```\r\n[\r\n   {\r\n      \"outerId\":\"0\",\r\n      \"message\":\"Failed to decrypt using provider 'GalleryMachineKeyConfigurationProvider'. Error message from the provider: Instances cannot be resolved and nested lifetimes cannot be created from this LifetimeScope as it has already been disposed. (D:\\\\home\\\\site\\\\wwwroot\\\\web.config line 364)\",\r\n      \"parsedStack\":[\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.BaseConfigurationRecord.EvaluateOne\",\r\n            \"level\":0,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.BaseConfigurationRecord.Evaluate\",\r\n            \"level\":1,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.BaseConfigurationRecord.GetSectionRecursive\",\r\n            \"level\":2,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.BaseConfigurationRecord.GetSection\",\r\n            \"level\":3,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Web.Configuration.RuntimeConfig.GetSectionObject\",\r\n            \"level\":4,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Web.Configuration.RuntimeConfig.GetSection\",\r\n            \"level\":5,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Web.Configuration.RuntimeConfig.get_MachineKey\",\r\n            \"level\":6,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Web.Configuration.MachineKeySection.GetApplicationConfig\",\r\n            \"level\":7,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Web.Security.Cryptography.AspNetCryptoServiceProvider.GetSingletonCryptoServiceProvider\",\r\n            \"level\":8,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\",\r\n            \"method\":\"System.Lazy`1.CreateValue\",\r\n            \"level\":9,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\",\r\n            \"method\":\"System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\",\r\n            \"level\":10,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\",\r\n            \"method\":\"System.Lazy`1.get_Value\",\r\n            \"level\":11,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Web.Security.MachineKey.Protect\",\r\n            \"level\":12,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Helpers.AntiXsrf.MachineKey45CryptoSystem.Protect\",\r\n            \"level\":13,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Helpers.AntiXsrf.AntiForgeryTokenSerializer.Serialize\",\r\n            \"level\":14,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Helpers.AntiXsrf.AntiForgeryTokenStore.SaveCookieToken\",\r\n            \"level\":15,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Helpers.AntiXsrf.AntiForgeryWorker.GetFormInputElement\",\r\n            \"level\":16,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Helpers.AntiForgery.GetHtml\",\r\n            \"level\":17,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.HtmlHelper.AntiForgeryToken\",\r\n            \"level\":18,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"App_Web_i3nkhjgv, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\",\r\n            \"method\":\"ASP._Page_Views_Packages_ReportAbuse_cshtml.Execute\",\r\n            \"level\":19,\r\n            \"line\":41,\r\n            \"fileName\":\"d:\\\\home\\\\site\\\\wwwroot\\\\Views\\\\Packages\\\\ReportAbuse.cshtml\"\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.WebPages.WebPageBase.ExecutePageHierarchy\",\r\n            \"level\":20,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.WebViewPage.ExecutePageHierarchy\",\r\n            \"level\":21,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.WebPages.StartPage.ExecutePageHierarchy\",\r\n            \"level\":22,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.WebPages, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.WebPages.WebPageBase.ExecutePageHierarchy\",\r\n            \"level\":23,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.ViewResultBase.ExecuteResult\",\r\n            \"level\":24,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive\",\r\n            \"level\":25,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive\",\r\n            \"level\":26,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters\",\r\n            \"level\":27,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.Async.AsyncControllerActionInvoker+<>c__DisplayClass21.<BeginInvokeAction>b__1e\",\r\n            \"level\":28,\r\n            \"line\":0\r\n         }\r\n      ],\r\n      \"type\":\"System.Configuration.ConfigurationErrorsException\",\r\n      \"id\":\"45144507\"\r\n   },\r\n   {\r\n      \"outerId\":\"45144507\",\r\n      \"message\":\"Instances cannot be resolved and nested lifetimes cannot be created from this LifetimeScope as it has already been disposed.\",\r\n      \"parsedStack\":[\r\n         {\r\n            \"assembly\":\"Autofac, Version=4.6.2.0, Culture=neutral, PublicKeyToken=17863af14b0044da\",\r\n            \"method\":\"Autofac.Core.Lifetime.LifetimeScope.CheckNotDisposed\",\r\n            \"level\":0,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"Autofac, Version=4.6.2.0, Culture=neutral, PublicKeyToken=17863af14b0044da\",\r\n            \"method\":\"Autofac.Core.Lifetime.LifetimeScope.ResolveComponent\",\r\n            \"level\":1,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"Autofac, Version=4.6.2.0, Culture=neutral, PublicKeyToken=17863af14b0044da\",\r\n            \"method\":\"Autofac.ResolutionExtensions.TryResolveService\",\r\n            \"level\":2,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"Autofac, Version=4.6.2.0, Culture=neutral, PublicKeyToken=17863af14b0044da\",\r\n            \"method\":\"Autofac.ResolutionExtensions.ResolveOptionalService\",\r\n            \"level\":3,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"Autofac.Integration.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=17863af14b0044da\",\r\n            \"method\":\"Autofac.Integration.Mvc.AutofacDependencyResolver.GetService\",\r\n            \"level\":4,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"System.Web.Mvc.DependencyResolverExtensions.GetService\",\r\n            \"level\":5,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"NuGetGallery, Version=4.4.5.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\",\r\n            \"method\":\"NuGetGallery.GalleryMachineKeyConfigurationProvider.Decrypt\",\r\n            \"level\":6,\r\n            \"line\":25,\r\n            \"fileName\":\"C:\\\\A\\\\_work\\\\99\\\\s\\\\src\\\\Gallery\\\\submodules\\\\Gallery\\\\src\\\\NuGetGallery\\\\App_Start\\\\GalleryMachineKeyConfigurationProvider.cs\"\r\n         },\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.ProtectedConfigurationSection.DecryptSection\",\r\n            \"level\":7,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.RuntimeConfigurationRecord.CallHostDecryptSection\",\r\n            \"level\":8,\r\n            \"line\":0\r\n         },\r\n         {\r\n            \"assembly\":\"System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\",\r\n            \"method\":\"System.Configuration.BaseConfigurationRecord.DecryptConfigSection\",\r\n            \"level\":9,\r\n            \"line\":0\r\n         }\r\n      ],\r\n      \"type\":\"System.ObjectDisposedException\",\r\n      \"id\":\"64277052\"\r\n   }\r\n]\r\n```"},{"Id":"13176419778","Type":"IssuesEvent","CreatedAt":"2020-08-12T04:49:43","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8154","RelatedDescription":"Opened issue \"Symbol server when hosted on prem?\" (#8154) at NuGet/NuGetGallery","RelatedBody":"Is there some documentation for enabling the symbols server functionality when hosted on prem? Or is this not possible?"},{"Id":"13176011969","Type":"PullRequestEvent","CreatedAt":"2020-08-12T03:28:18","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8151","RelatedDescription":"Closed pull request \"Display markdown licence files as HTML\" (#8151) at NuGet/NuGetGallery","RelatedBody":"This adds support for displaying licence markdown files as HTML. A few notes:\r\n\r\n* The `ReadmeService.GetReadMeHtml` should probably be refactored to factor out the MD -> HTML conversion. I have run out of time to do this\r\n\r\n* The `CommonMark` library has a weird bug that if a string begins with a BOM, it doesn't convert the first line properly. As a result I stripped it out and then it works ok. It looks like the version of CommonMark used is old, and the package is also depreciated, but I don't have time to fix this either.\r\n\r\n* Arguably there could also be another test added for converting licence MD files to HTML, I also haven't done this \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7975"},{"Id":"13176009368","Type":"PullRequestEvent","CreatedAt":"2020-08-12T03:27:48","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8153","RelatedDescription":"Opened pull request \"Display markdown licence files as HTML \" (#8153) at NuGet/NuGetGallery","RelatedBody":"This adds support for displaying licence MD files as HTML. A few notes:\r\n\r\n- I have refactored the `ReadmeService.GetReadMeHtml()` method into it's own service, named MarkdownService. I did this in one commit so that's it's a bit more obvious what's going on. \r\n\r\n- The CommonMark library has a weird bug that if a string begins with a BOM, it doesn't convert the first line properly. As a result I stripped it out and then it works ok. I've added a test for this. (It looks like the version of CommonMark used is old, and the package is also no longer supported, but that's another matter)\r\n\r\n- A few of the unit tests eg `PackageControllerFacts.TheDisplayPackageMethod.WhenHasReadMeAndMarkdownExists_ReturnsContent` test that the markdown -> html is working properly, but that's arguably not the concern of the PackageControllerFacts and are tested anyway, inside the MarkdownServiceFacts. However, in the interests of keeping things working I've changed the `PackageControllerFacts` to inject an instantiated `MarkdownService` instead of a Mock. However if someone wiser than me wishes to change it to test against a mock and not test for the MD -> HTML logic then that seems to make sense to me, but it depends on how pure we want the unit tests to be. \r\n\r\nAddresses #7975"},{"Id":"13173581566","Type":"IssuesEvent","CreatedAt":"2020-08-11T20:36:18","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8152","RelatedDescription":"Opened issue \"[A11y]Reset button for advanced search filtering does not have sufficient contrast\" (#8152) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/11051729/89946316-94da2f80-dbd7-11ea-82c5-21c0a815589a.png)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13185833637","Type":"IssuesEvent","CreatedAt":"2020-08-12T22:20:46","Actor":"lovettchris","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9902","RelatedDescription":"Opened issue \"New error from dotnet pack regarding DotnetToolSettings.xml starting with .NET SDK 3.1.401\" (#9902) at NuGet/Home","RelatedBody":"Remove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nSDK version 3.1.301, our nuget pack command worked fine.  Upgraded to 3.1.401 and now we get an error saying:\r\n```\r\n/usr/share/dotnet/sdk/3.1.401/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets(198,5): error NU5118: File '/mnt/d/Temp/Coyote/bin/netcoreapp3.1/publish/DotnetToolSettings.xml' is not added because the package already contains file 'tools/netcoreapp3.1/any/DotnetToolSettings.xml' [/mnt/d/Temp/Coyote/Tools/Coyote/Coyote.csproj]\r\n```\r\n\r\ndotnet pack version (3.1.401):\r\n\r\nOS version (Ubuntu 18.04)):\r\n\r\nWorked before? If so, with which NuGet version: 3.1.302\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. https://github.com/microsoft/coyote\r\n\r\n2. powershell -f Scripts/Build.ps1\r\n\r\n3. dotnet pack Tools/Coyote/Coyote.csproj\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nlog attached\r\n[pack.zip](https://github.com/NuGet/Home/files/5066180/pack.zip)\r\n\r\n### Sample Project\r\n\r\nhttps://github.com/microsoft/coyote\r\n\r\n"},{"Id":"13184091595","Type":"IssuesEvent","CreatedAt":"2020-08-12T18:44:33","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9439","RelatedDescription":"Closed issue \"net5 tfm: TargetPlatformMinVersion in packed nuspec\" (#9439) at NuGet/Home","RelatedBody":"Ensure Pack target passes TargetPlatformMinVersion to .nuspec generator.\r\n\r\n```xml\r\n        <!-- something like this: (not just a single property. might have multiple dgroups. One per group.) -->\r\n        <xs:attribute name=\"targetPlatformMinVersion\" type=\"xs:string\" use=\"optional\" />\r\n```"},{"Id":"13183837902","Type":"IssuesEvent","CreatedAt":"2020-08-12T18:15:41","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9444","RelatedDescription":"Closed issue \"net5 tfm: \"hydrating\" empty TargetPlatformVersions\" (#9444) at NuGet/Home","RelatedBody":"NuGet itself doesn't have the information it needs in order to understand what version `net5.0-ios` and such might mean, but omitting versions is an important part of this feature.\r\n\r\nAfter discussions with the dotnet and msbuild teams, my understanding is that they will \"fill in\" the `NuGetFramework` instances with the actual version using some API call that's yet to be determined (or, preferably, hand us a new one, so we can keep `NuGetFramework` immutable)."},{"Id":"13180300871","Type":"IssuesEvent","CreatedAt":"2020-08-12T12:34:10","Actor":"tushardevsharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9900","RelatedDescription":"Opened issue \"Invalid restore input. Missing required property 'OutputPath' for project type 'PackageReference'\" (#9900) at NuGet/Home","RelatedBody":"I have a `PackageReference` in my `csproj`. (`XYZ.csproj`)\r\n\r\nWhen I try `nuget restore XYZ.csproj -MSBuildPath \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\bin\"` everything works fine and the packages are restored. \r\n\r\nHowever if I try `nuget restore XYZ.csproj -MSBuildPath \"Z:\\Microsoft\\Current\\Bin\"` (msbuild from a custom path), I get the following error - \r\n\r\n`Invalid restore input. Missing required property 'OutputPath' for project type 'PackageReference'`.\r\n\r\nIt's the exact same `csproj` and the exact same version of `nuget.exe`.\r\n\r\nWhat's happening here?\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.6.0.6591\r\n\r\ndotnet.exe --version: 3.1.101\r\n\r\nVS version (if appropriate): NA\r\n\r\nOS version: Win10 v1901 (18363.959)\r\n\r\nWorked before? If so, with which NuGet version: Not sure.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Copy contents from \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\bin\" to \"Z:\\Microsoft\\Current\\Bin\"\r\n\r\n2. Add a `PackageReference` in my `csproj`. (`XYZ.csproj`)\r\n\r\n3. Run `nuget restore XYZ.csproj -MSBuildPath \"Z:\\Microsoft\\Current\\Bin\"`\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n```\r\nZ:\\dev\\git\\delpire-ni-analyzers>nuget.exe restore Z:\\dev\\git\\ni-central\\src\\if_applications\\RFmxSFPDistribution\\RFmxSFPApplication\\RFmxSFPApplication.csproj -MSBuildPath \"z:/helix/p4v/Perforce/build/targets/ms/cs/15.0/export/15.0/15.0.0f7/tools/win32/i386/msnet\" -verbosity detailed\r\nUsing Msbuild from 'z:/helix/p4v/Perforce/build/targets/ms/cs/15.0/export/15.0/15.0.0f7/tools/win32/i386/msnet'.\r\nNuGet Version: 5.6.0.6591\r\nMSBuild P2P timeout [ms]: 120000\r\nz:/helix/p4v/Perforce/build/targets/ms/cs/15.0/export/15.0/15.0.0f7/tools/win32/i386/msnet\\msbuild.exe \"C:\\Users\\tsharma\\AppData\\Local\\Temp\\NuGetScratch\\yew55qev.mih.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\tsharma\\AppData\\Local\\Temp\\NuGetScratch\\upk4rctp.dmg.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"Z:\\dev\\git\\delpire-ni-analyzers\\nuget.exe\" /p:RestoreBuildInParallel=\"False\" /p:RestoreUseSkipNonexistentTargets=\"False\"\r\n\r\nInvalid restore input. Missing required property 'OutputPath' for project type 'PackageReference'. Input files: Z:\\dev\\git\\ni-central\\src\\if_applications\\RFmxSFPDistribution\\RFmxSFPApplication\\RFmxSFPApplication.csproj.\r\nNuGet.Commands.RestoreSpecException: Invalid restore input. Missing required property 'OutputPath' for project type 'PackageReference'. Input files: Z:\\dev\\git\\ni-central\\src\\if_applications\\RFmxSFPDistribution\\RFmxSFPApplication\\RFmxSFPApplication.csproj.\r\n   at NuGet.Commands.SpecValidationUtility.ValidateProjectSpecPackageReference(PackageSpec spec, IEnumerable`1 files)\r\n   at NuGet.Commands.SpecValidationUtility.ValidateProjectSpec(PackageSpec spec)\r\n   at NuGet.Commands.SpecValidationUtility.ValidateDependencySpec(DependencyGraphSpec spec, HashSet`1 projectsToSkip)\r\n   at NuGet.Commands.DependencyGraphSpecRequestProvider.GetRequestsFromItems(RestoreArgs restoreContext, DependencyGraphSpec dgFile)\r\n   at NuGet.Commands.DependencyGraphSpecRequestProvider.CreateRequests(RestoreArgs restoreContext)\r\n   at NuGet.Commands.RestoreRunner.<CreatePreLoadedRequests>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<GetRequests>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\n```\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2020-08-13T05:30:41.164528Z","RunDurationInMilliseconds":1811}