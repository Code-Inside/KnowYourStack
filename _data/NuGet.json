{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14762119482","Type":"PullRequestEvent","CreatedAt":"2021-01-09T01:54:33","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8371","RelatedDescription":"Opened pull request \"Loshar push perf\" (#8371) at NuGet/NuGetGallery","RelatedBody":"## Background\r\n\r\nPreviously, the functional tests on PROD failed repeatedly:\r\n\r\n* https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=77508&view=results\r\n* https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=77522&view=results\r\n* https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=77526&view=results\r\n\r\nThe functional tests push many packages in parallel, which caused an expensive SQL query to time out.\r\n\r\n## Fix\r\n\r\nThis improves the push package API performance by avoiding a costly SQL query.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8368"},{"Id":"14761196721","Type":"IssuesEvent","CreatedAt":"2021-01-08T22:40:18","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3067","RelatedDescription":"Closed issue \"Use Serilog in Gallery\" (#3067) at NuGet/NuGetGallery","RelatedBody":"1.       Serilog traces turn into Custom events in AI.\n2.      Serilog properties turn into Custom Data properties in AI. \n3.      AI contains a filtering option, that allows to filter telemetry according to properties \n4.      Here are some tips how to write log messages, so we can take advantage of AI features, without explicitly taking dependency on AI in our business logic:\n\na.      Use the same Serilog properties throughout you code, so we can filter by them later\n\nb.      For jobs, we can add a property for each job that will contain its name, and propagate in all the events, like so: https://github.com/Microsoft/ApplicationInsights-aspnetcore/wiki/Configure#track-custom-traceeventmetric\nThis will allow us to easily filter traces of a specific job, when all jobs traces are sent to the same AI app.\n\nc. we should maybe build a glossary of terms we can reuse in log traces across our services, so we can search/filter on the same property names everywhere (e.g. avoid mixing Package, PackageId, Id, … and instead consolidate to use PackageId everywhere). This could reduce the long list of properties and make our queries more consistent (Consider a common set of strings in a common library instead of a 'documented glossary')\n\nd. Some of these properties (such as MachineName, Version) are added automatically by one of the Enrichers (just check the code base for *Enricher class names ).\nData that is readily available can always be added using an Enricher too, so we don’t have to pass it along in every trace call ourselves. We just need to consider if it needs to be part of the message template or not.\n"},{"Id":"14761073303","Type":"IssuesEvent","CreatedAt":"2021-01-08T22:22:16","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/2341","RelatedDescription":"Closed issue \"I18n (Internationalization and Localization) of NuGet Gallery.\" (#2341) at NuGet/NuGetGallery","RelatedBody":"I would like to be able to run a local copy of the NuGet Gallery in my org we are however a bilingual workplace and as such would have to provide a bilingual gallery, currently all the text is hard-coded in the views. A move should be made to make the text configurable. \n\nFor user generated packages uni-lingual is fine though localization would be a nice to have feature there as well. \n"},{"Id":"14761023026","Type":"IssuesEvent","CreatedAt":"2021-01-08T22:15:13","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/1807","RelatedDescription":"Closed issue \"WSOD on package upload when language identifier in package metadata fails validation.\" (#1807) at NuGet/NuGetGallery","RelatedBody":"To repro:\n\n1.Create a package using NPE.\n2.Change its extension to zip and expand the package file\n3.Edit the metadata to change the language field to an arbitrary string of more than 20 characters.\n4.Zip the package with the new metadata and change the extension back to .nupkg\n5.Attempt to upload the file through the gallery.\n\nRESULT: You'll receive a WSOD.  Investigation of logged errors reveals that this is an unhandled EntityException.  See https://qa.nugettest.org/Admin/Errors.axd/detail?id=8968 for a full stack trace.\nEXPECTED: Like for other kinds of package validation that we've added in Iteration 6, this ought to generate a validation error when the user this to upload the package.\n"},{"Id":"14761001362","Type":"IssuesEvent","CreatedAt":"2021-01-08T22:12:16","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/1493","RelatedDescription":"Closed issue \"Mixed versions of release and prerelease are misordered\" (#1493) at NuGet/NuGetGallery","RelatedBody":"http://www.nuget.org/api/v2/FindPackagesById()?id='EntityFramework'&$orderby=Version\n\nThe order is ascending but 4.3.0 should be after 4.3.0-beta1 (since release versions are always greater than prerelease).\n"},{"Id":"14759338459","Type":"PullRequestEvent","CreatedAt":"2021-01-08T18:55:43","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8370","RelatedDescription":"Merged pull request \"FI of master into dev\" (#8370) at NuGet/NuGetGallery","RelatedBody":"Update dev branch to latest master changes. This brings the hotfix from https://github.com/NuGet/NuGetGallery/pull/8369 to the dev branch so that I can revert it with a proper fix :)"},{"Id":"14754068193","Type":"PullRequestEvent","CreatedAt":"2021-01-08T10:26:42","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8358","RelatedDescription":"Merged pull request \"Add vulnerability messaging to package details page\" (#8358) at NuGet/NuGetGallery","RelatedBody":"Completes: https://github.com/nuget/nugetgallery/issues/7650\r\n\r\nHere we change the view to include a vulnerabilities panel for an affected package version.\r\n\r\nNon-owner view, not expanded:\r\n![image](https://user-images.githubusercontent.com/14225979/102730979-41949c80-4382-11eb-809e-7bea5218892e.png)\r\n\r\nOwner view, expanded:\r\n![image](https://user-images.githubusercontent.com/14225979/102730999-4d805e80-4382-11eb-8b5b-f5a09f86f3cc.png)\r\n\r\n- bangs and tooltips in the version list (combined for deprecations and vulnerabilities). Again, formats and icons may be tweaked going forward. \r\n\r\nVulnerability only:\r\n![image](https://user-images.githubusercontent.com/14225979/102547237-a4790000-4104-11eb-9ec6-bfbbf3a801a8.png)\r\n\r\nVulnerability + deprecation:\r\n![image](https://user-images.githubusercontent.com/14225979/102547326-c4102880-4104-11eb-8bc4-85e2c16eea40.png)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14761911059","Type":"IssuesEvent","CreatedAt":"2021-01-09T00:57:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8973","RelatedDescription":"Closed issue \"Error NU1004 disappears when building solution after enabling “RestoreLockedMode”\" (#8973) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet Version: Dev\\5.5.0.6330\r\nVS Version: Master\\29623.15\r\nOS Version: Windows-10-Enterprise-RS5\r\n\r\n## Installation steps: \r\n* https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3341765&view=results\r\n\r\n## Repro steps: \r\n1. Create above corresponding projects via VS. \r\n2. Install a few ‘PackageReference’ packages into the projects.\r\n3. Set MSBuild property “RestorePackagesWithLockFile” to true in csproj file.\r\n  `<RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>`\r\n4. Do a restore.\r\n5. Check it should have generated ‘packages.lock.json’ file alongside *.csproj file.\r\n6. Set msbuild property “RestoreLockedMode” to “true”.\r\n    `<RestoreLockedMode>true</RestoreLockedMode>`\r\n7. Install another package.\r\n8. It should still work fine and update ‘packages.lock.json’ file.\r\n9. Manually add a new PackageReference item into csproj file.\r\n```\r\n<PackageReference Include=\"NUnit\">\r\n   <Version>3.12.0</Version>\r\n </PackageReference>\r\n```\r\n10. Perform restore.\r\n11. Restore should fail with error “NU1004”\r\n12. Build the solution.\r\n\r\n## Expected:\r\nThe error was still showed on error list.\r\n\r\n## Actual:\r\nThe error disappear on error list.\r\n\r\n## Here is the record video for the repro steps:\r\n![restore](https://user-images.githubusercontent.com/20632775/71407713-ccab5b80-2676-11ea-9195-da8a996d5488.gif)\r\n\r\n## Notes: \r\n1. The issue repro on .NET Core project.\r\n2. The issue repro on Master\\29623.15 + NuGet Client Dev\\5.5.0.6355.\r\n3. The issue is not stable, the repro rate is almost 95% for us.\r\n\r\n\r\n"},{"Id":"14761528758","Type":"PullRequestEvent","CreatedAt":"2021-01-08T23:36:06","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10444","RelatedDescription":"Opened pull request \"Reduce the verbosity of the issue template\" (#10444) at NuGet/Home","RelatedBody":"The current issue template is pretty verbose, contains information that we do not need/doesn't deviate usually and often time it leads to people deleting it altogether. \r\n\r\nThese changes are meant to reduce the visual strain one has when looking at a new issue and improve issue quality by having something customers would be willing to follow instead of delete.\r\n\r\nNote that this is a template tailored towards bugs. We could use a feature template, but that's something we don't have now, so I'm not yet introducing it. "},{"Id":"14761312773","Type":"IssuesEvent","CreatedAt":"2021-01-08T22:58:33","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10443","RelatedDescription":"Opened issue \"Opening version combobox from a package with lots of versions is super slow\" (#10443) at NuGet/Home","RelatedBody":"Search for 'test10k' from package source https://apidev.nugettest.org/v3-index/index.json\r\nSelect Select the most recent version\r\nOnce the metadata is updated select a different version and wait for the metadata\r\nOnce the metadata is updated, open the combobox again\r\n\r\nObserved: VS hangs, I had to kill VS after a couple minutes as it didn't appear to be coming back.\r\nObserved: The time to open the combobox in general when it is working is also **very** slow anyways"},{"Id":"14761108745","Type":"IssuesEvent","CreatedAt":"2021-01-08T22:27:13","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10442","RelatedDescription":"Opened issue \"Uninstalled NuGet packages remain in the Visual Studio solution explorer\" (#10442) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nProduct: Visual Studio\r\n\r\nNuGet version: 5.9.0.7005\r\n\r\nVS version: 16.9.0 preview 3 (30907.6 main)\r\n\r\nWorked before? Yes\r\n\r\nWorks fine in Visual Studio 16.9.0 preview 2 with NuGet 5.9.0.6967.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Install a package to a project through any means (PMC or UI)\r\n2. Uninstall a package to a project through any means (PMC or UI)\r\n3. Check dependencies folder for project in the solution explorer and notice that uninstalled packages haven't been removed even though they have been successfully removed from the project and assets file.\r\n\r\n![image](https://user-images.githubusercontent.com/15097183/104070881-e9f58e00-51d5-11eb-83cb-1ad7c762975a.png)"},{"Id":"14760781012","Type":"IssuesEvent","CreatedAt":"2021-01-08T21:43:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10441","RelatedDescription":"Opened issue \"The NuGet issue template is too verbose.\" (#10441) at NuGet/Home","RelatedBody":"Note that I have removed the issue template. \r\n\r\nThis template is too verbose and honestly asks for a lot of information that's not very relevant.\r\n\r\nNote that on 1080p screens, our template requires scrolling!!\r\nThat's excessive!"},{"Id":"14759992284","Type":"IssuesEvent","CreatedAt":"2021-01-08T20:08:35","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10440","RelatedDescription":"Opened issue \"verified checkmark doesn't show on package recommendations\" (#10440) at NuGet/Home","RelatedBody":"using latest 5.9.0 P3 bits, @chgill-MSFT found the following problem with the newly enabled package recommendations:\r\n\r\n![image](https://user-images.githubusercontent.com/8865080/104059398-21e6dc00-51aa-11eb-8566-dd8d9edd8692.png)\r\n\r\ncc: @birgithi"},{"Id":"14759571516","Type":"IssuesEvent","CreatedAt":"2021-01-08T19:21:21","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10439","RelatedDescription":"Closed issue \"Codespaces:  fix telemetry from https://github.com/NuGet/NuGet.Client/pull/3786\" (#10439) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/3786 added some telemetry to help understand the root cause of https://github.com/NuGet/Home/issues/10336.  However, there are 2 bugs:\r\n\r\n*  The JSON schema allows dictionary entries to overwrite one another.\r\n*  The project ID isn't hashed."},{"Id":"14759483340","Type":"IssuesEvent","CreatedAt":"2021-01-08T19:11:36","Actor":"Ncage1974","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10434","RelatedDescription":"Closed issue \"Determine what downloading a specific version of a nuget package\" (#10434) at NuGet/Home","RelatedBody":"Hi Guys, hopefully its ok to ask this question here. Don't know what else to do since I asked on stackoverflow and all I got was crickets. We are using Whitesource to scan for vulnerable dependencies. Here is one of the vulnerable packages Whitesource reported:\r\n![image](https://user-images.githubusercontent.com/1213549/103939045-c4428900-50f0-11eb-89e3-98552cc9ed3b.png)\r\n\r\n\r\nAs you can see in the image if the issue in the NuGet package cache folder (actually all the issues it found were in the NuGet package cache foler):\r\n/root/.nuget/packages/system.net.http/4.3.3/system.net.http.4.3.3.nupkg\r\n\r\nWe are not directly referencing `systme.net.http` so it must be a sub dependency of something. I have verified the issue on my machine. I can delete my nuget cache folder and and soon as I do a `dotnet restore`:\r\n![image](https://user-images.githubusercontent.com/1213549/103938869-880f2880-50f0-11eb-8058-dd4cb343ff9b.png)\r\n\r\n**So the issue is how to determine what higher level dependency is causing that causing that dependency to be downloaded**  so I can upgrade that package to fix the issue? This is the only thing I could think of to try so far which apparently doesn't work:\r\n![image](https://user-images.githubusercontent.com/1213549/103939379-4df25680-50f1-11eb-9689-2166fc9fbe43.png)\r\n\r\nMost of the packages are listed as `4.3.0` which is never downloaded. I found the project in our large solution that is causing it to be downloaded by doing a `dotnet restore` project by project but still haven't been able to find the dependency. Any help would be MUCH appreciated.\r\n"},{"Id":"14758788623","Type":"IssuesEvent","CreatedAt":"2021-01-08T17:57:56","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10439","RelatedDescription":"Opened issue \"Codespaces:  fix telemetry from https://github.com/NuGet/NuGet.Client/pull/3786\" (#10439) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/3786 added some telemetry to help understand the root cause of https://github.com/NuGet/Home/issues/10336.  However, there are 2 bugs:\r\n\r\n*  The JSON schema allows dictionary entries to overwrite one another.\r\n*  The project ID isn't hashed."},{"Id":"14758659119","Type":"IssuesEvent","CreatedAt":"2021-01-08T17:44:46","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10428","RelatedDescription":"Closed issue \"Wrong TFM for PackageReference in Android Class Library\" (#10428) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\nNuGet version: 5.8.0\r\nVS version: VisualStudio.16.Release/16.8.3+30804.86\r\nOS version: Windows 8.1 x64\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create **Android Class Library** in MSVS for Windows\r\n\r\n2. Add a Nuget PackageReference that has several TFMs. In my case it is MvvmCross 7.1.2 that have TFMs:\r\n.NETCoreApp 3.1\r\n.NETFramework 4.6.1\r\n.NETStandard 2.0\r\nMonoAndroid 10.0\r\nTizen 4.0\r\nUAP 10.0.16299\r\nXamarin.iOS 1.0\r\nXamarin.Mac 2.0\r\nXamarin.TVOS 1.0\r\nXamarin.WatchOS 1.0\r\n\r\n3. Use any type that is Android specific (ex. MvxAndroidViewPresenter)\r\n4. Your lib will not compile, type is missing. The reason probably is that _netstandard2.0_ TFM is used instead of _monoandroid10.0_\r\n\r\n\r\n### Sample Project\r\nhttps://github.com/Paul-N/AndroidClassLibDemo"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-09T05:30:37.7826996Z","RunDurationInMilliseconds":1504}