{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13122489162","Type":"PullRequestEvent","CreatedAt":"2020-08-05T21:50:47","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8139","RelatedDescription":"Merged pull request \"Unbreak GitHubVulnerabilities2Db dependency injection\" (#8139) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8138\r\n\r\nIf the ContentObjectService parameter becomes optional in the PackageService constructor, dependency injection in GitHubVulnerabilities2Db won't inflate the type (which is what caused the failure--no DI registration). Inflating the type properly wouldn't be the right fix here as its dependencies aren't lightweight and it's unused in this utility. So we need an optional parameter and failsafes for nulls in PackageService.\r\n\r\nSome formatting fixes resulted from a copy/paste operation. Why not."},{"Id":"13108777695","Type":"PullRequestEvent","CreatedAt":"2020-08-04T17:27:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8134","RelatedDescription":"Merged pull request \"Add note on functional tests' requirements\" (#8134) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13102829409","Type":"PullRequestEvent","CreatedAt":"2020-08-04T07:29:11","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8139","RelatedDescription":"Opened pull request \"Unbreak GitHubVulnerabilities2Db dependency injection\" (#8139) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8138\r\n\r\nIf the ContentObjectService parameter becomes optional in the PackageService constructor, dependency injection in GitHubVulnerabilities2Db won't inflate the type (which is what caused the failure--no DI registration). Inflating the type properly wouldn't be the right fix here as its dependencies aren't lightweight and it's unused in this utility. So we need an optional parameter and failsafes for nulls in PackageService.\r\n\r\nSome formatting fixes resulted from a copy/paste operation. Why not."},{"Id":"13102407715","Type":"IssuesEvent","CreatedAt":"2020-08-04T06:38:31","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8138","RelatedDescription":"Opened issue \"Dependency Injection broken on GitHubVulnerabilities2Db\" (#8138) at NuGet/NuGetGallery","RelatedBody":"This change: https://github.com/NuGet/NuGetGallery/pull/8112, specifically [here](https://github.com/NuGet/NuGetGallery/pull/8112/files#diff-b744cb446049fcb4c87628c3d31a964fR39) has introduced a new parameter into the PackageService constructor, breaking dependency injection in GitHubVulnerabilities2Db.\r\n\r\nSalient part of exception:\r\nNone of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\\r\\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor \r\n'Void .ctor(\r\nNuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], \r\nNuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], \r\nNuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], \r\nNuGetGallery.Auditing.IAuditingService, \r\nNuGetGallery.ITelemetryService, \r\nNuGetGallery.Security.ISecurityPolicyService, \r\nNuGetGallery.IEntitiesContext, \r\nNuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.)\"}\r\n\r\nFull trace:\r\nJob Failed to Run: Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = AdvisoryCollector (ReflectionActivator), Services = [GitHubVulnerabilities2Db.Collector.IAdvisoryCollector], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = AdvisoryIngestor (ReflectionActivator), Services = [GitHubVulnerabilities2Db.Ingest.IAdvisoryIngestor], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageVulnerabilityService (ReflectionActivator), Services = [NuGetGallery.IPackageVulnerabilityService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = AdvisoryIngestor (ReflectionActivator), Services = [GitHubVulnerabilities2Db.Ingest.IAdvisoryIngestor], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageVulnerabilityService (ReflectionActivator), Services = [NuGetGallery.IPackageVulnerabilityService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageVulnerabilityService (ReflectionActivator), Services = [NuGetGallery.IPackageVulnerabilityService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'.\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.GetValidConstructorBindings(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 160\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.ResolveOperation.Execute(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 92\r\n   at Autofac.Core.Lifetime.LifetimeScope.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Lifetime\\LifetimeScope.cs:line 276\r\n   at Autofac.Core.Container.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Container.cs:line 170\r\n   at Autofac.ResolutionExtensions.TryResolveService(IComponentContext context, Service service, IEnumerable`1 parameters, Object& instance) in C:\\projects\\autofac\\src\\Autofac\\ResolutionExtensions.cs:line 1041\r\n   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\ResolutionExtensions.cs:line 871\r\n   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetRequiredService(Type serviceType) in C:\\projects\\autofac-extensions-dependencyinjection\\src\\Autofac.Extensions.DependencyInjection\\AutofacServiceProvider.cs:line 71\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at GitHubVulnerabilities2Db.Job.<Run>d__1.MoveNext() in C:\\Repos\\NuGetGallery\\src\\GitHubVulnerabilities2Db\\Job.cs:line 34\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.JobRunner.<JobLoop>d__14.MoveNext() in E:\\A\\_work\\4806\\s\\src\\NuGet.Jobs.Common\\JobRunner.cs:line 263"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13124171416","Type":"IssuesEvent","CreatedAt":"2020-08-06T02:55:25","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9877","RelatedDescription":"Opened issue \"Managed NuGet Package designer doesn't let you cut from the search field\" (#9877) at NuGet/Home","RelatedBody":"# Version\r\n\r\n: Version 16.8.0 Preview 2.0 [30404.163.master]\r\n\r\n# Repro\r\n\r\n1. Highlight the text and press CTRL+X in the search box for this designer:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/89485368-fbc8a480-d7e3-11ea-83d3-4bc1a4f9991e.png)\r\n\r\nExpected: For the text to be cut\r\nActual: Nothing\r\n\r\n\r\n"},{"Id":"13119227067","Type":"IssuesEvent","CreatedAt":"2020-08-05T15:46:41","Actor":"nullableobj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9876","RelatedDescription":"Opened issue \"Restore.csproj failed to build while running dotnet tool install dotnet-ef #21930\" (#9876) at NuGet/Home","RelatedBody":"I had ef 3.0.0 and advised to update to 3.1.0. Direct update failed so I uninstalled ef from dotnet tool and tried to reinstall it again. I got error while building a restore project in path like this: [/var/folders/gt/9l4q1djd12d__wt0cxkqyrc80000gn/T/gkjf01jk.whw/restore.csproj]\r\nI passed verbosity option for detailed (--v d) with install command and it seems there is exception at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\nI am not sure this is an actual bug or this is a problem with my environment. I am running on macos 10.15.6 and dotnet 3.1.302. This is happened also if I downgrade to dotnet 3.1.100.\r\n<img width=\"987\" alt=\"89300923-df502f00-d660-11ea-9185-802f753ab76f\" src=\"https://user-images.githubusercontent.com/20289652/89434174-24489400-d73b-11ea-9b8d-0c571d41cb99.png\">\r\n<img width=\"1421\" alt=\"89300937-e414e300-d660-11ea-90c5-4d8471e0855d\" src=\"https://user-images.githubusercontent.com/20289652/89434193-290d4800-d73b-11ea-92db-4ee819e55587.png\">\r\n<img width=\"1421\" alt=\"Screen Shot 2020-08-05 at 13 46 52\" src=\"https://user-images.githubusercontent.com/20289652/89434195-2a3e7500-d73b-11ea-9342-d699a5b25776.png\">\r\n\r\n\r\n"},{"Id":"13117494128","Type":"IssuesEvent","CreatedAt":"2020-08-05T13:15:34","Actor":"Nirmal4G","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9875","RelatedDescription":"Opened issue \"Format the NuGet props/targets to make it legible\" (#9875) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nMost of the time when looking to new feature the build process provides, we'll look into props/targets on how to use them apart from looking at the docs (when no such info is provided).\r\n\r\nEven for devs like me starting their contributions on dotnet repos such as this, having a legible source makes all the difference. But as many pointed out, this does affect `git blame`.\r\n\r\nBut instead of compromising, I propose to have minimal set of changes applied one time to make those files more legible. This way, `git blame` is preserved to an extent and the files are now at least friendly to the eyes."},{"Id":"13114717706","Type":"IssuesEvent","CreatedAt":"2020-08-05T08:15:59","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9487","RelatedDescription":"Closed issue \"[Test Failure][Unstable]The info in the “Preview Changes” window is not correct when trying to uninstall local packages from the existing solution\" (#9487) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.7.0.6595\r\nVS Version: Master\\30027.154\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Opne an exist solution that already installed several embedded icon packages.\r\n2. Open the solution PM UI and go to “Installed” tab.\r\n3. Choose an embedded icon package and click “Uninstall” button.\r\n## Expected\r\nThe info in the prompt “Preview Changes” window should be correct.\r\n## Actual\r\nThe info in the prompt “Preview Changes” window is not correct as below screenshot. It try to install a package which had been installed on the project.\r\n![PreviewChanges](https://user-images.githubusercontent.com/20632625/80495022-f2849c00-8999-11ea-8963-5db521bb2a0b.png)\r\n## Notes\r\n1. It also repro in the project PM UI.\r\n2. Package “FwPackage” is a local created .NET Framework 4.8 package with embedded icon. Package “classlib.net48” is installed from devops source: https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json."},{"Id":"13112228031","Type":"IssuesEvent","CreatedAt":"2020-08-05T01:31:58","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9807","RelatedDescription":"Closed issue \"Spike: Explore speeding up nupkg extraction using mmap/CreateFileMapping\" (#9807) at NuGet/Home","RelatedBody":"I was playing around with tarball extraction in Rust, trying to speed it up, when someone suggested using [`mmap`](https://en.wikipedia.org/wiki/Mmap) for the destination files before writing to them (Windows version is [`CreateFileMapping`](https://docs.microsoft.com/en-us/windows/win32/memory/creating-a-file-mapping-object)). This resulted in a 4-5x speedup of a 7.5mb tarball containing 65k files -- going from 17-22s extraction times to a mere 3.5-4.5s.\r\n\r\nI believe it's worth exploring doing this ourselves for .nupkg extraction during Restore -- it's unclear whether the extraction benefit is mainly for many small files, or whether fewer large files can still take advantage of this, but it's worth a shot anyway, for that kind of improvement!"},{"Id":"13112094697","Type":"IssuesEvent","CreatedAt":"2020-08-05T01:05:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8024","RelatedDescription":"Closed issue \"Clearly defined review process\" (#8024) at NuGet/Home","RelatedBody":"Discussed during our retrospective. \r\nClearer problem statements, internal/external review process.\r\n\r\n//cc @NuGet/nuget-client @anangaur @rrelyea "},{"Id":"13112037958","Type":"IssuesEvent","CreatedAt":"2020-08-05T00:55:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9874","RelatedDescription":"Closed issue \" Read the runtime identifier graph through the TargetFrameworkInformation item, improve the test coverage of dotnet tool scenarios.\" (#9874) at NuGet/Home","RelatedBody":""},{"Id":"13111455551","Type":"IssuesEvent","CreatedAt":"2020-08-04T23:04:35","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9860","RelatedDescription":"Closed issue \"[Test Failure] VS gave a wrong constraint warning when there are no package constraint in the packages.config file after updating packages \" (#9860) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6753\r\nVS Version: Master\\30328.112\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tOpen VS, click “Create a new project” button and search template “ASP.NET Web Site (Razor v3)” in the filter.\r\n2.\tCreate the project, open the PM UI of the project and go to the “Updates” tab.\r\n3.\tCheck “select all packages” and click “Update” button.\r\n4.\tBuild the project.\r\n## Expected\r\nThere is no warning.\r\n## Actual\r\nThere is a wrong constraint warning since there are no package constraint in the packages.config file as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/88785603-feb00d80-d1c3-11ea-8100-f983c7f91f5b.png)\r\n## Note\r\n1.\tIt didn’t repro on D16.7\\30323.103 with Implicit NuGet Client Release-5.7.x\\5.7.0.6726.\r\n2.     It started to repro from NuGet Client build Dev\\5.8.0.6741.\r\n\r\n"},{"Id":"13110496398","Type":"IssuesEvent","CreatedAt":"2020-08-04T20:47:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9874","RelatedDescription":"Opened issue \" Read the runtime identifier graph through the TargetFrameworkInformation item, improve the test coverage of dotnet tool scenarios.\" (#9874) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2020-08-06T05:30:44.0649696Z","RunDurationInMilliseconds":2192}