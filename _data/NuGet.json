{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29793342251","Type":"IssuesEvent","CreatedAt":"2023-06-15T22:34:43","Actor":"fluffynuts","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9525","RelatedDescription":"Opened issue \"Error when attempting to push a pre-release package: The package manifest contains an invalid Version\" (#9525) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"29765842972","Type":"PullRequestEvent","CreatedAt":"2023-06-15T00:47:28","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9524","RelatedDescription":"Opened pull request \"Fix user credential result on admin panel\" (#9524) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nproblem: `IsAADorMACredential` is not assigned. \r\n\r\nFix: check if credential is AAD or MA, then assign `IsAADorMACredential = true`, otherwise false\r\n\r\nTest: Tested in dev environment\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4904"},{"Id":"29725103669","Type":"IssuesEvent","CreatedAt":"2023-06-13T15:22:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9523","RelatedDescription":"Opened issue \"[NuGet.org Bug]: SHA-1 fingerprint is shown instead of SHA-256 in validation error\" (#9523) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWhen you upload an author signed certificate to NuGet.org that doesn't match your account settings, the error message shows a SHA-1 fingerprint. The account UI shows SHA-256. This makes it harder to match settings to error. We should show SHA-256 everywhere.\n\n### Repro Steps\n\nUpload an author signed package that has a different signing certificate than the one uploaded to the owner account.\n\n### Expected Behavior\n\nSHA-256 should be specified in the error.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/fa48a849-dd05-4f19-b9ea-3c5085ec5b8e)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29667173069","Type":"IssuesEvent","CreatedAt":"2023-06-11T00:06:37","Actor":"taori","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9522","RelatedDescription":"Opened issue \"[Feature]: When pushing a package an author should be notified if references could be optimized\" (#9522) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nC# Is improving the options to do AOT + trimming. One obstacle to push the support for that is libraries which contain unnecessary references. To slim down packages on nuget it would be nice if nuget.org notified an author if a package contains references which might not be necessary. Keeping dependency trees slim would make it easier to have this feature in a more accessible manner.\n\n### The Elevator Pitch\n\nAdditional information when pushing a package so that packages which are not essential are perhaps removed from a project\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29650467871","Type":"IssuesEvent","CreatedAt":"2023-06-09T15:13:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9521","RelatedDescription":"Closed issue \"[NuGet.org Bug]: \" (#9521) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nhttps://api.nuget.org/v3/index.json\n\n### Repro Steps\n\n.\n\n### Expected Behavior\n\nI am creating docker images for my authentication and authorization project am not able to produce all expected images or container \n\n### Screenshots\n\n![20230608_201452](https://github.com/NuGet/NuGetGallery/assets/135006031/94249499-8a34-4c7b-99ab-acbead578b43)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29627802015","Type":"PullRequestEvent","CreatedAt":"2023-06-08T17:50:41","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9520","RelatedDescription":"Merged pull request \"Readme table style\" (#9520) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nrender readme table more pretty with word warp setting.\r\n\r\n![Screenshot 2023-06-05 123258](https://github.com/NuGet/NuGetGallery/assets/64443925/605733f0-329d-49cf-acca-e88f7cd7486d)\r\n\r\n[rec-screen (2).webm](https://github.com/NuGet/NuGetGallery/assets/64443925/bf9db3a6-3c6e-4bca-b857-c351f8fe0bdd)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9518"},{"Id":"29624244485","Type":"IssuesEvent","CreatedAt":"2023-06-08T15:15:48","Actor":"soumyashree-code","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9521","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9521) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nhttps://api.nuget.org/v3/index.json\n\n### Repro Steps\n\n.\n\n### Expected Behavior\n\nI am creating docker images for my authentication and authorization project am not able to produce all expected images or container \n\n### Screenshots\n\n![20230608_201452](https://github.com/NuGet/NuGetGallery/assets/135006031/94249499-8a34-4c7b-99ab-acbead578b43)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29824141884","Type":"IssuesEvent","CreatedAt":"2023-06-17T12:24:57","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12665","RelatedDescription":"Opened issue \"ResolverUtility.FindLibraryFromSourcesAsync should cancel pending work when returning early\" (#12665) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/blob/3be9ceed93526e7fed1282820436435694f122cd/src/NuGet.Core/NuGet.DependencyResolver.Core/ResolverUtility.cs#L433-L456\r\n\r\nThis code spins up one `Task` per `IRemoteDependencyProvider` and waits for them to complete.\r\n\r\nIf one of these tasks completes with an exact match, that match is returned immediately.\r\n\r\nHowever in such a case, any pending work is left to complete. From my reading of the code, the result of that work is unused, and therefore those ongoing tasks should be cancelled to avoid wasting resources (IO/CPU/etc).\r\n\r\nIf that's right, it can be achieved easily with [`CancellationTokenSource.CreateLinkedTokenSource`](https://learn.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource.createlinkedtokensource?view=net-7.0#system-threading-cancellationtokensource-createlinkedtokensource(system-threading-cancellationtoken))."},{"Id":"29815658227","Type":"IssuesEvent","CreatedAt":"2023-06-16T18:54:40","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12630","RelatedDescription":"Closed issue \"Parsing NuGetVersion causes significant GC pressure\" (#12630) at NuGet/Home","RelatedBody":"The code that parses NuGetVersion from strings indirectly uses .NET's Version.TryParse to parse the version portion of the string. When a typical restore can be thousands upon thousands of NuGetVersion objects floating around, this API on .NET Framework is not good enough as it indirectly uses String.Split under the covers and is very inefficient."},{"Id":"29815553739","Type":"IssuesEvent","CreatedAt":"2023-06-16T18:48:38","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12664","RelatedDescription":"Closed issue \"NuGet: VersionRangeFormatter.GetNormalizedString bypassing StringBuilderCache via use of string.format\" (#12664) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1826374/"},{"Id":"29815543925","Type":"IssuesEvent","CreatedAt":"2023-06-16T18:48:03","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12664","RelatedDescription":"Opened issue \"NuGet: VersionRangeFormatter.GetNormalizedString bypassing StringBuilderCache via use of string.format\" (#12664) at NuGet/Home","RelatedBody":""},{"Id":"29815514663","Type":"IssuesEvent","CreatedAt":"2023-06-16T18:46:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12663","RelatedDescription":"Closed issue \"NuGet: LockFileFormat.ReadTargetLibrary using string.split on a simple pattern\" (#12663) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1826489"},{"Id":"29815508253","Type":"IssuesEvent","CreatedAt":"2023-06-16T18:45:59","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12663","RelatedDescription":"Opened issue \"NuGet: LockFileFormat.ReadTargetLibrary using string.split on a simple pattern\" (#12663) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1826489"},{"Id":"29811370227","Type":"IssuesEvent","CreatedAt":"2023-06-16T15:18:14","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12562","RelatedDescription":"Closed issue \"nuget restore fails for solution filters not in same directory as the solution it references.\" (#12562) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nnuget 6.5\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThe new solution filters feature added in 6.5 with nuget restore does not use the correct pathing if the solution filter is kept in a different directory than the solution file.\r\n\r\nIf I place a solution filter in a directory outside of where the solution file is kept, it will not restore properly.\r\nIt evaluates the paths for the projects in the solution filter relative to where the solution filter is rather than relative to where the solution file is.\r\n\r\nIf I use the same solution filter and run it with \"dotnet restore\" instead, it restores file.\r\n\r\nI have created a minimal reproducible example in a git repository here: https://github.com/jerhon/nuget-slnf-bug\r\n\r\nIt has two GitHub actions to show this, one with `dotnet restore` restoring the nuget packages and one with `nuget restore` restoring the nuget packages.  Both restore against the same solution filter.  The dotnet restore command restores the nuget packages.  The nuget restore command succeeds but doesn't restore the nuget packages so the build step fails.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29802955301","Type":"IssuesEvent","CreatedAt":"2023-06-16T09:28:42","Actor":"JustusGreiberORGADATA","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12662","RelatedDescription":"Opened issue \"NoWarn and transitive pinning does not play well together\" (#12662) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nVersion:   7.0.304\n\n### Worked before?\n\nDon't think so\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nHi,\r\n\r\nGuidance for ignoring warnings with central package management enabled is to ignore Warning in the Directory.Build.targets, as described in this comment https://github.com/NuGet/Home/issues/11952#issuecomment-1309090926.\r\n\r\nThis works fine for me with `CentralPackageTransitivePinningEnabled=false`. If I turn transitive pinning on, I get problems though:\r\n\r\nI have a project reference to a project that imports a package that cause the warning NU1701. With transitive pinning enabled I can't suppress the warning in Project A with the update gesture (`PackageReference Update=\"Paket_that_causes_NU1701\" NoWarn=\"%(NoWarn);NU1701\"`)\r\n\r\n```mermaid\r\ngraph TD;\r\n    Project_A-->Project_C;\r\n    Project_C-->NuGet_that_causes_NU1701;\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"29802327865","Type":"IssuesEvent","CreatedAt":"2023-06-16T09:02:49","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12661","RelatedDescription":"Opened issue \"Deprecated info will flash for less than one second in the right penal when clicking package “Microsoft.Net.Http” with a non-deprecated version in the package list\" (#12661) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.7.0.83\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. Open VS and create a F# Console Application (.Net Framework 4.8.1) project. \r\n2. Right-click the project in Solution Explorer and select “Manage NuGet Packages…” menu item to open PM UI. \r\n3. Click “Browse” tab and select the “nuget.org” from Package source drop-down list.\r\n4. Search the package “FSharp.Net.Http” in the filter and click the package in the package list.\r\n5. Install the package “FSharp.Net.Http” and go to the “Installed” tab.\r\n6. Click the package “Microsoft.Net.Http” whose latest version is not a deprecated.\r\n\r\n#### Expected:\r\nDeprecated info should not show in the right penal since the latest version is not a deprecated.\r\n#### Actual:\r\nDeprecated info will show for less than one second in the right penal as below record.\r\n![DeprecatedInfoFlash](https://github.com/NuGet/Home/assets/20632625/00f0913c-cf31-4eb2-b761-62886eaa401f)\r\n\r\n#### Notes:\r\n1.Repro rate: 100%.\r\n2.It is not a regression bug since it reproes on 17.5.4 Preview 1.0 [33530.505.d17.5]+ Dev\\6.5.0.154.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"29802203095","Type":"IssuesEvent","CreatedAt":"2023-06-16T08:57:49","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12660","RelatedDescription":"Opened issue \"No license shows when clicking the “view license” link of the package “FSharp.Net.Http” in the right penal of PM UI\" (#12660) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.7.0.83\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. Open VS and create a F# Console Application (.Net Framework 4.8.1) project. \r\n2. Right-click the project in Solution Explorer and select “Manage NuGet Packages…” menu item to open PM UI. \r\n3. Click “Browse” tab and select the “nuget.org” from Package source drop-down list.\r\n4. Search the package “FSharp.Net.Http” in the filter and click the package in the package list.\r\n5. Click the “view license” link of the package “FSharp.Net.Http” in the right penal of PM UI.\r\n\r\n#### Expected:\r\nThe license shows correctly.\r\n\r\n#### Actual:\r\nNothing shows for the license info as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/20632625/d38177b4-010b-444b-85fe-fb63f24c256e)\r\n#### Notes:\r\n1.Repro rate: 100%.\r\n2.It is not a regression bug since it reproes on 17.5.4 Preview 1.0 [33530.505.d17.5]+ Dev\\6.5.0.154.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29796077158","Type":"IssuesEvent","CreatedAt":"2023-06-16T02:31:58","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12659","RelatedDescription":"Opened issue \"Performance: Don't allocate as many Task instances\" (#12659) at NuGet/Home","RelatedBody":"When a `Task` completes successfully, it's `Task` object may be reused.\r\n\r\nCurrently NuGet.Client allocates a lot of task objects in places where singletons could be used.\r\n\r\nChanging this would reduce allocations overall and reduce the overhead of async code."},{"Id":"29791760294","Type":"IssuesEvent","CreatedAt":"2023-06-15T20:54:17","Actor":"mmitche","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12061","RelatedDescription":"Closed issue \"Specify all source-built dependencies and ensure they are regularly updated\" (#12061) at NuGet/Home","RelatedBody":"### Overview\r\n\r\nSource-build works today by building a repository, gathering the versions of the outputs, and creating a property file with those versions. This property file is then fed to downstream repositories, which import it after their `eng/Versions.props`. The resulting behavior is that the downstream repo overrides all dependency versions specified in `eng/Versions.props` with the versions built from source. This behavior is **not** the same as the Maestro dependency-flow based approach. Maestro only updates properties for dependencies that are specified in `eng/Version.Details.xml`.\r\n\r\nThis causes the following difference: Say that dotnet/aspnetcore has a `Microsoft.Net.Compilers.Toolset` dependency. It codes a property for that dependency's version in `eng/Versions.props` as `MicrosoftNetCompilersToolsetVersion`, with an older version of the package.\r\n- When building via source-build, roslyn builds first, and aspnetcore will pick up the new version of Microsoft.Net.Compilers.Toolset, even though it doesn't want to.\r\n- When building officially, the non-latest version will be used.\r\n\r\nThis difference tends to cause build breaks in source-build. The version bump may be significant and require repo reaction. This is not ideal and not sustainable.\r\n\r\nOne option would be to only override those versions that are specified in `eng/Version.Details.xml`. This would more closely align the source-build and current official builds. The huge downside is that this will cause an explosion of ref packs. And in some cases, we would be building against old versions but actually executing against newer ones. Non-ideal.\r\n\r\nIn summary, the goals are:\r\n- Reduce source-build build breaks\r\n- Avoid a large increase in ref packs.\r\n- Ensure that it is possible to freeze on old versions of a specific component if absolutely necessary\r\n\r\n### Work Required\r\n\r\n**This work is dependent on https://github.com/dotnet/source-build/issues/2982**.\r\n\r\nIn this repo, do the following\r\n- [ ] Obtain a report of un-specified dependencies in this repo. This issue will be updated with instructions on how to do so after https://github.com/dotnet/source-build/issues/2982 is complete.\r\n- [ ] Specify all dependencies classified as missing in the report in the `eng/Version.Details.xml` file.\r\n- [ ] Upgrade dependencies regularly via Maestro dependency flow mechanisms, or pin dependencies that should stay the same, with justification."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"},{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-06-18T03:30:25.3225794Z","RunDurationInMilliseconds":1066}