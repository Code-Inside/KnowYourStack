{"Data":{"Blog":{"FeedItems":[{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14161990093","Type":"PullRequestEvent","CreatedAt":"2020-11-11T22:45:32","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8315","RelatedDescription":"Merged pull request \"[SAS Token] Fallback when permissions cannot be use on container creation.\" (#8315) at NuGet/NuGetGallery","RelatedBody":"In some places we create a container and right after we set the permissions access, since we cannot modify permissions after a container has been created when using a sas token we need to modify this behavior to add the permissions at creation time.\r\n\r\n**AuthorizationFailure** is the error we get when trying to perform an update of the permissions of an already created container.\r\nSee error on: https://docs.microsoft.com/en-us/rest/api/storageservices/sas-error-codes\r\n\r\nAddress: https://github.com/NuGet/Engineering/issues/3484"},{"Id":"14161669415","Type":"IssuesEvent","CreatedAt":"2020-11-11T22:07:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8321","RelatedDescription":"Opened issue \"Test RunInternal_WithCreatedPackageThenDeletedPackage_UpdatesCatalog in NuGet.Jobs is flaky\" (#8321) at NuGet/NuGetGallery","RelatedBody":"```\r\n2020-11-11T21:59:40.6037700Z ##[error]    NgTests.Db2CatalogTests.RunInternal_WithCreatedPackageThenDeletedPackage_UpdatesCatalog [FAIL]\r\n\r\n2020-11-11T21:59:40.6046148Z       Assert.Equal() Failure\r\n2020-11-11T21:59:40.6046438Z       Expected: 4\r\n2020-11-11T21:59:40.6046621Z       Actual:   3\r\n2020-11-11T21:59:40.6046807Z       Stack Trace:\r\n2020-11-11T21:59:40.6047353Z         tests\\NgTests\\Db2CatalogTests.cs(1347,0): at NgTests.Db2CatalogTests.VerifyCatalog(Nullable`1 expectedLastCreated, Nullable`1 expectedLastDeleted, Nullable`1 expectedLastEdited, PackageOperation skippedOperation)\r\n2020-11-11T21:59:40.6048066Z         tests\\NgTests\\Db2CatalogTests.cs(1290,0): at NgTests.Db2CatalogTests.<RunInternalAndVerifyAsync>d__52.MoveNext()\r\n2020-11-11T21:59:40.6048535Z         --- End of stack trace from previous location where exception was thrown ---\r\n2020-11-11T21:59:40.6048912Z            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2020-11-11T21:59:40.6049337Z            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2020-11-11T21:59:40.6051583Z         tests\\NgTests\\Db2CatalogTests.cs(491,0): at NgTests.Db2CatalogTests.<RunInternal_WithCreatedPackageThenDeletedPackage_UpdatesCatalog>d__33.MoveNext()\r\n2020-11-11T21:59:40.6052187Z         --- End of stack trace from previous location where exception was thrown ---\r\n2020-11-11T21:59:40.6052670Z            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2020-11-11T21:59:40.6053185Z            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2020-11-11T21:59:40.6053716Z         --- End of stack trace from previous location where exception was thrown ---\r\n2020-11-11T21:59:40.6054169Z            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2020-11-11T21:59:40.6054618Z            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2020-11-11T21:59:40.6055054Z         --- End of stack trace from previous location where exception was thrown ---\r\n2020-11-11T21:59:40.6055432Z            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2020-11-11T21:59:40.6056011Z            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2020-11-11T21:59:40.6056342Z       Output:\r\n2020-11-11T21:59:40.6056631Z         Information: CATALOG LastCreated: 0001-01-01T00:00:00.0000000Z\r\n2020-11-11T21:59:40.6056980Z         Information: DATABASE CreatedPackages: 1\r\n2020-11-11T21:59:40.6057328Z         Information: Creating package catalog item for qsb1Rz8NrJjbZ0uO 7.7.5\r\n2020-11-11T21:59:40.6057735Z         Information: Finished creating package catalog item for qsb1Rz8NrJjbZ0uO 7.7.5\r\n2020-11-11T21:59:40.6058181Z         Information: Add metadata from: https://unittest.org/packages/qsb1rz8nrjjbz0uo/7.7.5.nupkg\r\n2020-11-11T21:59:40.6058563Z         Information: COMMIT metadata to catalog.\r\n2020-11-11T21:59:40.6058901Z         Information: CATALOG LastEdited: 0001-01-01T00:00:00.0000000Z\r\n2020-11-11T21:59:40.6059250Z         Information: DATABASE EditedPackages: 0\r\n2020-11-11T21:59:40.6059616Z         Information: CATALOG LastDeleted: 2020-11-11T21:58:54.0821657Z\r\n2020-11-11T21:59:40.6059946Z         Information: FEED DeletedPackages: 0\r\n2020-11-11T21:59:40.6060292Z         Information: CATALOG LastCreated: 2020-11-11T21:58:54.0821657Z\r\n2020-11-11T21:59:40.6060630Z         Information: DATABASE CreatedPackages: 0\r\n2020-11-11T21:59:40.6060982Z         Information: CATALOG LastEdited: 0001-01-01T00:00:00.0000000Z\r\n2020-11-11T21:59:40.6061318Z         Information: DATABASE EditedPackages: 0\r\n2020-11-11T21:59:40.6061673Z         Information: CATALOG LastDeleted: 2020-11-11T21:58:54.0821657Z\r\n2020-11-11T21:59:40.6062012Z         Information: FEED DeletedPackages: 0\r\n2020-11-11T21:59:40.6062352Z         Information: CATALOG LastCreated: 2020-11-11T21:58:54.0821657Z\r\n2020-11-11T21:59:40.6062698Z         Information: DATABASE CreatedPackages: 0\r\n2020-11-11T21:59:40.6063042Z         Information: CATALOG LastEdited: 0001-01-01T00:00:00.0000000Z\r\n2020-11-11T21:59:40.6063390Z         Information: DATABASE EditedPackages: 0\r\n```"},{"Id":"14161181181","Type":"PullRequestEvent","CreatedAt":"2020-11-11T21:14:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8320","RelatedDescription":"Merged pull request \"Add netstandard2.1 support to NuGetGallery.Core and NuGet.Services.Entities\" (#8320) at NuGet/NuGetGallery","RelatedBody":"This is required because these two libraries are transitive dependencies of NuGet.Services.AzureSearch. It would be technically possible to run the Azure Search Service without this change, but it would require a significantly more complex changeset in NuGet.Jobs to split all of the projects and files depended on by the search service into two halves: \"required by Azure Search Service\" and \"not required by Azure Search Service\". For example, there is a shared DI wire-up step for all search components which would need to be cleverly split. See [DependencyInjectionExtensions.cs](https://github.com/NuGet/NuGet.Jobs/blob/bbd7a3c6ebf87e1f4c7b2e6e34e3607c5ce242da/src/NuGet.Services.AzureSearch/DependencyInjectionExtensions.cs#L25).\r\n\r\nThe simpler approach is to make all project dependencies of the search service compatible with a `netcoreapp3.1` (and eventually `net5.0`) entry point. In this cases, it's a `netstandard2.1` cross-target. We need `netstandard2.1` instead of the ServerCommon `netstandard2.0` since Entity Framework supports `netstandard2.1`. Since ServerCommon already has the required .NET Core support, these are the only projects that remain outside of NuGet.Jobs to have .NET Core support.\r\n\r\nChanges:\r\n- Move NuGetGallery.Core and NuGet.Services.Entities to SDK-based projects\r\n- Introduce a shared props file for these two projects. We can't use Build.Directory.props since not all projects are converted.\r\n- Add a `netstandard2.1` target to these two projects.\r\n- Update ServerCommon version\r\n- Conditionally compile a select few lines of code that are not required for the Azure Search Service.\r\n- Note that this brings Markdig up to version 0.22.0 (/cc @lyndaidaii)\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/3487."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14164034924","Type":"IssuesEvent","CreatedAt":"2020-11-12T03:56:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10259","RelatedDescription":"Opened issue \"Warn when restore and build tooling have mismatching versions\" (#10259) at NuGet/Home","RelatedBody":""},{"Id":"14164005229","Type":"PullRequestEvent","CreatedAt":"2020-11-12T03:51:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10258","RelatedDescription":"Opened pull request \"Improving the experience when incompatible versions of the restore/build tooling are used\" (#10258) at NuGet/Home","RelatedBody":""},{"Id":"14163148849","Type":"PullRequestEvent","CreatedAt":"2020-11-12T01:37:25","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/10179","RelatedDescription":"Merged pull request \"Add Transitive Dependencies Spec\" (#10179) at NuGet/Home","RelatedBody":""},{"Id":"14162573159","Type":"IssuesEvent","CreatedAt":"2020-11-12T00:07:59","Actor":"fabio-muramatsu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10257","RelatedDescription":"Opened issue \"Breaking change in package.lock.json\" (#10257) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.8.0.6930\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 v20H2\r\n\r\nWorked before? If so, with which NuGet version: Yes, in version 5.5.1.6542\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create an empty console application targetting .NET Framework 4.7.2\r\n2. Install a nuget package (like Newtonsoft.Json)\r\n3. Enable package restore using lock file in csproj\r\n\r\n```\r\n<PropertyGroup>\r\n  <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>\r\n</PropertyGroup>\r\n```\r\n\r\n4. Get the nuget.exe client for both versions listed above (5.5.1.6542 and 5.8.0.6930). Run `nuget restore` in the solution. The packages.lock.json files generated will be different.\r\n\r\nFor 5.5.1.6542, I get this:\r\n``` json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETFramework,Version=v4.7.2\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[12.0.3, 12.0.3]\",\r\n        \"resolved\": \"12.0.3\",\r\n        \"contentHash\": \"6mgjfnRB4jKMlzHSl+VD+oUc1IebOZabkbyWj2RiTgWwYPPuaK1H97G1sHqGwPlS5npiF5Q0OrxN1wni2n5QWg==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nFor 5.8.0.6930, I get this:\r\n\r\n``` json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \"Any,Version=v0.0\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[12.0.3, 12.0.3]\",\r\n        \"resolved\": \"12.0.3\",\r\n        \"contentHash\": \"6mgjfnRB4jKMlzHSl+VD+oUc1IebOZabkbyWj2RiTgWwYPPuaK1H97G1sHqGwPlS5npiF5Q0OrxN1wni2n5QWg==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAs a consequence, restoring an existing project using locked mode in 5.8.0.6930 is resulting in failures, which broke our Azure Devops pipelines. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-11-12T05:30:38.7359789Z","RunDurationInMilliseconds":1815}