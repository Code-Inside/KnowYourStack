{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12415957100","Type":"PullRequestEvent","CreatedAt":"2020-05-22T17:09:55","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8004","RelatedDescription":"Merged pull request \"UI fix for long username in profile page and display package(#7809)\" (#8004) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Fix the long username in profile page with newline if there is not enough space\r\n![newline](https://user-images.githubusercontent.com/64443925/82522150-64558e80-9add-11ea-88c1-e61d56d4cbb9.PNG)\r\n\r\n* Fix the long username in display package, use ... if context has overflow, show full username when hover it\r\n![fix1](https://user-images.githubusercontent.com/64443925/82522279-c7dfbc00-9add-11ea-810e-9b3cb3c056e0.PNG)\r\n\r\n\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"12409138299","Type":"PullRequestEvent","CreatedAt":"2020-05-22T01:59:04","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8009","RelatedDescription":"Opened pull request \"Fixed casing of header on NuGet.org to comply with Windows/VS standards.\" (#8009) at NuGet/NuGetGallery","RelatedBody":"\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8008"},{"Id":"12409133950","Type":"IssuesEvent","CreatedAt":"2020-05-22T01:58:11","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8008","RelatedDescription":"Opened issue \"Fixed casing of header on NuGet.org to comply with Windows/VS standards.\" (#8008) at NuGet/NuGetGallery","RelatedBody":"Fixed casing of header on NuGet.org to comply with Windows/VS standards."},{"Id":"12408995298","Type":"PullRequestEvent","CreatedAt":"2020-05-22T01:30:08","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8007","RelatedDescription":"Closed pull request \"Fix NuGet.org headers (remove title-casing) to be consistent with Windows/VS standards\" (#8007) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12408928636","Type":"PullRequestEvent","CreatedAt":"2020-05-22T01:16:11","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8007","RelatedDescription":"Opened pull request \"Fix NuGet.org headers (remove title-casing) to be consistent with Windows/VS standards\" (#8007) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12408690100","Type":"IssuesEvent","CreatedAt":"2020-05-22T00:26:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8006","RelatedDescription":"Opened issue \"Document search service\" (#8006) at NuGet/NuGetGallery","RelatedBody":"The goal is a document (ideally Markdown README by the project) that explains in detail how someone can start the service and run it for development purposes."},{"Id":"12408470186","Type":"IssuesEvent","CreatedAt":"2020-05-21T23:44:24","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8005","RelatedDescription":"Opened issue \"Document search jobs \" (#8005) at NuGet/NuGetGallery","RelatedBody":"`db2auxiliarysearch`, `auxiliary2azuresearch`, `catalog2azuresearch`"},{"Id":"12408168950","Type":"IssuesEvent","CreatedAt":"2020-05-21T22:49:43","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3626","RelatedDescription":"Closed issue \"[Statistics] Reduce DB size by removing unused data - Platform dimension \" (#3626) at NuGet/NuGetGallery","RelatedBody":"This data is not used in any functionality today. We only track it because we have the data available at w3c-log parsing time. *It is questionable in terms of cost-effectiveness.*\r\n\r\nWe could still store it elsewhere (e.g. in Azure table storage). Or we could reconsider storing this data when revisiting the design of the NuGet statistics feature.\r\n\r\n> **Note**\r\n> \r\n> Even when we no longer import these datapoints into the stats database, we still have all the data in the w3c-logs we upload to blob storage.\r\n\r\n### Impact on database\r\n\r\nA database size reduction could be achieved totalling **5,172.03 MB** (or 5.05 GB)!\r\n\r\nRemoving these indices will also improve performance of insert/delete operations against the `[dbo].[Fact_Download]` and `[dbo].[Fact_Dist_Download]` tables.\r\n\r\nIn addition, we generate less churn on the data by avoiding clean-up operations.\r\n\r\nThe following database objects would become obsolete:\r\n\r\n* Table `[dbo].[Dimension_Platform]` (size = 0.39 MB)\r\n* Table column `[dbo].[Fact_Download].[Dimension_Platform_Id]` (size = 2,585.75 MB)\r\n* Table column `[dbo].[Fact_Dist_Download].[Dimension_Platform_Id]` (size = 2,585.75 MB)\r\n* Stored procedure `[dbo].[EnsurePlatformDimensionExists]`\r\n* Stored procedure `[dbo].[CleanupPlatformDimension]`\r\n* SQL Type `[dbo].[PlatformDimensionTableType]`\r\n* Clustered index `[dbo].[Dimension_Platform].[PK_Dimension_Platform]` (size = 56 KB)\r\n* Non-clustered index `[dbo].[Dimension_Platform].[IX_Dimension_Platform_UniqueIndex]` (size = 88 KB)\r\n\r\n### Impact on jobs\r\n\r\nThe `Stats.ImportAzureCdnStatistics` job would no longer need to store the Platform dimension data, which would improve import speed, throughput, and overall performance of the job.\r\n\r\nWe could:\r\n\r\n* avoid the need to check whether an Platform already exists, and if not, create it during import;\r\n* avoid the need to retain already imported Platform dimensions into in-memory cache;\r\n* reduce complexity of import by no more linking Platform dimension identifiers to the download facts."},{"Id":"12407022851","Type":"IssuesEvent","CreatedAt":"2020-05-21T20:16:07","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7900","RelatedDescription":"Closed issue \"[Package Renames] Add new schema\" (#7900) at NuGet/NuGetGallery","RelatedBody":"Add the `PackageRenames` table to the database:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nKey | Int | Primary key   (autogenerated by DB)\r\nFromPackageRegistrationKey | int | The package that   was renamed. There is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nToPackageRegistrationKey | int | The replacement   package. here is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nTransferPopularity | bool | True if the   \"from\" package's popularity should be transferred to the   replacement package.     This column is indexed.\r\n\r\nWe will also add the following column to `PackageRegistrations` table:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nRenamedMessage | String,   nvarchar(max), nullable | The custom message   for renamed packages\r\n\r\n\r\n"},{"Id":"12399120211","Type":"PullRequestEvent","CreatedAt":"2020-05-21T04:07:05","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8004","RelatedDescription":"Opened pull request \"UI fix for long username in profile page and display package(#7809)\" (#8004) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Fix the long username in profile page with newline if there is not enough space\r\n![newline](https://user-images.githubusercontent.com/64443925/82522150-64558e80-9add-11ea-88c1-e61d56d4cbb9.PNG)\r\n\r\n* Fix the long username in display package, use ... if context has overflow, show full username when hover it\r\n![fix1](https://user-images.githubusercontent.com/64443925/82522279-c7dfbc00-9add-11ea-810e-9b3cb3c056e0.PNG)\r\n\r\n\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12422254031","Type":"IssuesEvent","CreatedAt":"2020-05-23T21:05:24","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9600","RelatedDescription":"Opened issue \"No verbosity switch on dotnet list packages so HTTP requests are invisible\" (#9600) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: dotnet.exe\r\ndotnet.exe --version: 3.1.202\r\nOS version: Windows 10, version 1909\r\nWorked before? no\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new project, e.g. `dotnet new console`\r\n1. Add a package, e.g. `dotnet add package NuGet.Packaging`\r\n1. List deprecated packages, e.g. `dotnet list package --deprecated`\r\n\r\nNo HTTP `GET` and `OK` log lines are visible, unlike `dotnet restore --verbosity normal`, `dotnet nuget push`, and `dotnet nuget delete`. Especially when listing many packages or using `--include-transitive` it can lead to the command hanging for a long time without any visible output.\r\n\r\nIt would be helpful to have a verbosity switch like `dotnet restore` such as `--verbosity normal` to show the HTTP spew. This would allow understanding why the operation is slow and if one particular source is behaving badly.\r\n\r\nYou can do this investigation with restore via `dotnet restore --verbosity normal`.\r\n\r\nI think it's right that the log lines are not shown by default (there are a lot sometimes) but there should be a way to see them without launching Fiddler or some other MITM proxy.\r\n\r\n### Verbose Logs\r\n\r\n> Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nWell, that's the problem... 😂\r\n\r\n```\r\nPS C:\\Users\\joelv\\Desktop\\testproj> dotnet list package --deprecated --verbosity diag\r\nUnrecognized command or argument '--verbosity'\r\nUnrecognized command or argument 'diag'\r\nUsage: dotnet list <PROJECT | SOLUTION> package [options]\r\n\r\nArguments:\r\n  <PROJECT | SOLUTION>   The project or solution file to operate on. If a file is not specified, the command will search the current directory for one.\r\n\r\nOptions:\r\n  -h, --help                                Show command line help.\r\n  --outdated                                Lists packages that have newer versions.\r\n  --deprecated                              Lists packages that have been deprecated.\r\n  --framework <FRAMEWORK | FRAMEWORK\\RID>   Chooses a framework to show its packages. Use the option multiple times for multiple frameworks.\r\n  --include-transitive                      Lists transitive and top-level packages.\r\n  --include-prerelease                      Consider packages with prerelease versions when searching for newer packages. Requires the '--outdated' or '--deprecated' option.\r\n  --highest-patch                           Consider only the packages with a matching major and minor version numbers when searching for newer packages. Requires the '--outdated' or '--deprecated' option.\r\n  --highest-minor                           Consider only the packages with a matching major version number when searching for newer packages. Requires the '--outdated' or '--deprecated' option.\r\n  --config <CONFIG_FILE>                    The path to the NuGet config file to use. Requires the '--outdated' or '--deprecated' option.\r\n  --source <SOURCE>                         The NuGet sources to use when searching for newer packages. Requires the '--outdated' or '--deprecated' option.\r\n  --interactive                             Allows the command to stop and wait for user input or action (for example to complete authentication).\r\n```\r\n\r\n### Sample Project\r\n\r\n[testproj.zip](https://github.com/NuGet/Home/files/4672506/testproj.zip)\r\n"},{"Id":"12418225942","Type":"IssuesEvent","CreatedAt":"2020-05-22T23:20:25","Actor":"hugener","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9599","RelatedDescription":"Opened issue \"Controlling how a package's assets get consumed \" (#9599) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version: 5.5.1.6542\r\n\r\ndotnet.exe --version: 3.1.202\r\n\r\nVS version: 16.5.5\r\n\r\nOS version: win10 v1909\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nI'm trying to author a package to contains somethin in both tools and libs. According to this: https://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files\r\nIf I mark it as a developmentDependency, it prevents the package from being included as a dependency in other packages, which is what I want.\r\nHowever, it also excludes compile-time assets from compilation, which I do not want.\r\nCurrently, when I consume the package I have to add compile; to the IncludeAssets of the PackageReference and then everything works, but this is cumbersome.\r\nIs there a way to author the package so that I can control how the PackageReference gets created? E.g. so that it will add \"compile\" automatically.\r\n\r\nTo give a little more context, the tools are doing some code generation and for it to work the libs needs to be referenced. So I'm looking for something that's both a developmentDependency (Does not allow adding my package as a dependency), but still allows my package to have libs referenced.\r\n\r\n"},{"Id":"12417146961","Type":"IssuesEvent","CreatedAt":"2020-05-22T19:53:39","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9598","RelatedDescription":"Opened issue \"Error NU3001 has 7 scenarios causing maintainability issues\" (#9598) at NuGet/Home","RelatedBody":"[NU3001](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu3001) error code has 7 scenarios where few of them are dependent upon [`Exception.HResult Property`](https://docs.microsoft.com/en-us/dotnet/api/system.exception.hresult) causing maintainability issues.\r\n\r\nFor e.g. https://github.com/NuGet/NuGet.Client/blob/eb9ad919724e5ef435d6321b775868c9f2c0f9a2/src/NuGet.Core/NuGet.Commands/SignCommand/CertificateProvider.cs#L59-L90\r\n\r\nThis logic broke tests in package signing logic when `dotnet` returns a different `HRResult` value. For e.g. NuGet/Home#9523\r\n\r\nAs per https://github.com/dotnet/runtime/issues/36786#issuecomment-632193883, `dotnet doesnot guarantee the HResult values of most of our exceptions, depending on them is going to be fragile.`.\r\n\r\nWe need to re-evaluate all the 7 scenarios of NU3001 error code and implement code that doesn't reply on `Exception.HRResult` if possible."},{"Id":"12415212179","Type":"IssuesEvent","CreatedAt":"2020-05-22T15:49:36","Actor":"tdykstra","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9597","RelatedDescription":"Opened issue \"dotnet nuget add source doesnt' exist...\" (#9597) at NuGet/Home","RelatedBody":"From @Tyler-IN , issue moved from https://github.com/dotnet/docs/issues/18476\r\n\r\n> `dotnet add nuget source \"https://repo.url/here/index.json\" --name wtf --username wtf --password wtf --store-password-in-clear-text --configfile nuget.config`\r\n\r\n```\r\nRequired command was not provided.\r\nUsage: dotnet add [options] <PROJECT> [command]\r\n\r\nArguments:\r\n  <PROJECT>   The project file to operate on. If a file is not specified, the command will search the current directory for one.\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\n\r\nCommands:\r\n  package <PACKAGE_NAME>     Add a NuGet package reference to the project.\r\n  reference <PROJECT_PATH>   Add a project-to-project reference to the project.\r\n```\r\n\r\nHave .NET Core SDKs for 2.0 up to 3.1.2 installed.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a08a1fa5-6267-3122-a377-5ba5b8503a07\r\n* Version Independent ID: 1d2f0343-bda9-7e7a-34a9-f097635ff155\r\n* Content: [dotnet nuget add source command - .NET Core CLI](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-add-source#feedback)\r\n* Content Source: [docs/core/tools/dotnet-nuget-add-source.md](https://github.com/dotnet/docs/blob/master/docs/core/tools/dotnet-nuget-add-source.md)\r\n* Product: **dotnet-core**\r\n* Technology: **dotnet-cli**\r\n* GitHub Login: @tdykstra\r\n* Microsoft Alias: **tdykstra**\r\n"},{"Id":"12411512785","Type":"IssuesEvent","CreatedAt":"2020-05-22T08:44:02","Actor":"ChristophHornung","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9596","RelatedDescription":"Opened issue \"Changing the version for dotnet pack does not change the dependency version \" (#9596) at NuGet/Home","RelatedBody":"When defining a version for a package inside a custom target the package version and the reference version inside the package generated through `dontet pack` are mismatched.\r\n\r\nI change the version and packVersion within a Target running before GenerateNuSpec (in Directory.Build.targets) like this:\r\n\r\n```\r\n<Target Name=\"SetVersion\" BeforeTargets=\"GenerateNuspec\">\r\n\t\t<PropertyGroup>\r\n\t\t\t<Version>$(MyProjectSpecificCalculatedVersion)</Version>\r\n\t\t\t<PackageVersion>$(MyProjectSpecificCalculatedVersion)</PackageVersion>\r\n\t\t</PropertyGroup>\r\n</Target>\r\n```\r\n\r\nThis is picked up during `nuget pack` and correctly set as the version for the nupkg filename and inside the nupkg as the nuspec-version, as expected.\r\n\r\nWhen referencing project B from project A both are packed with the correct version but the dependency inside the nupkg for project B is always set to 1.0.0\r\n\r\nIt seems the version used is whatever is written inside the `obj/project.assets.json` which is generated during `dotnet restore`. But even if I set `BeforeTargets=\"Restore\"` that version is never populated correctly.\r\n\r\nIs there another way to write that target in order to have the same version for both the package and the reference?\r\n\r\nThis is using dotnet version 3.1.300, a minimal reproduction is attached:\r\n\r\n[DotNetPackTest.zip](https://github.com/NuGet/Home/files/4666962/DotNetPackTest.zip)\r\n\r\n"},{"Id":"12407627549","Type":"IssuesEvent","CreatedAt":"2020-05-21T21:28:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9595","RelatedDescription":"Opened issue \"Leak: PartCreationPolicy(CreationPolicy.NonShared) NuGet.SolutionRestoreManager.RestoreOperationLogger\" (#9595) at NuGet/Home","RelatedBody":"I loaded/unloaded a solution 777 times and  see almost 777 instances of “NuGet.SolutionRestoreManager.RestoreOperationLogger”\n\nSee: \n[1008657](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1008657)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"},{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-24T05:30:38.6638056Z","RunDurationInMilliseconds":1552}