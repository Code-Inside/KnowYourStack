{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"18958164480","Type":"PullRequestEvent","CreatedAt":"2021-11-18T23:16:56","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8881","RelatedDescription":"Merged pull request \"[TFM Display] Create model for badges and table from compatible frameworks.\" (#8881) at NuGet/NuGetGallery","RelatedBody":"This model will be used on the display page to create the table and badges for UI.\r\n\r\n* `FrameworkCompatibilityService` was updated to include a supported framework that is not on the `SupportedFrameworks` list. This to include all package asset frameworks that we might not know of (but they are not used to get new computed frameworks, so no computation added here).\r\n* `PackageFrameworkCompatibilityFactory` creates the model that holds the badges and table ready to be displayed.\r\n  * Badges: Contains the lowest package asset framework (we are not considering computed frameworks for this) that are part of .NET framework product.\r\n  * Table: The key is the product framework name, and the values are lists of compatible frameworks (already ordered).\r\n\r\nAddress: https://github.com/NuGet/Engineering/issues/3991."},{"Id":"18956690933","Type":"IssuesEvent","CreatedAt":"2021-11-18T21:11:35","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8884","RelatedDescription":"Opened issue \"[Deployment] 2021.11.18\" (#8884) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n## Changes\r\n* https://github.com/NuGet/NuGetGallery/pull/8869\r\n* https://github.com/NuGet/NuGetGallery/pull/8870\r\n* https://github.com/NuGet/NuGetGallery/pull/8867\r\n\r\n## Progress\r\n* [x] Merge PR: https://github.com/NuGet/NuGetGallery/pull/8875\r\n* [ ] Build: https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=5464363&view=results\r\n* [ ] Release:\r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"18956634850","Type":"PullRequestEvent","CreatedAt":"2021-11-18T21:07:22","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8875","RelatedDescription":"Merged pull request \"[ReleasePrep][2021.11.10]RI of dev into main\" (#8875) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"18954034703","Type":"IssuesEvent","CreatedAt":"2021-11-18T18:02:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8883","RelatedDescription":"Opened issue \"[Feature]: Declare nuget.org's IP addresses\" (#8883) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nRestoring NuGet packages require internet access. However, many customers secure their builds by limiting the build machines' internet access.\n\n### The Elevator Pitch\n\nTwo options:\r\n\r\n1. **Provide a list of static IP addresses** - We would need to make our IP addresses static across our CDN, blob storage, and web apps. These IP addresses would then be documented on our docs. Or...\r\n2. **Add an API that lists nuget.org's current IP addresses** - This is API would discover all the IP addresses currently used by nuget.org, similar to GitHub's meta API: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-githubs-ip-addresses\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"18959113739","Type":"IssuesEvent","CreatedAt":"2021-11-19T00:57:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11401","RelatedDescription":"Opened issue \"PackageSearchMetadata allocates PackageIdentity on every access to the identity property. \" (#11401) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/blame/dev/src/NuGet.Core/NuGet.Protocol/Model/PackageSearchMetadata.cs#L47\r\n"},{"Id":"18955405759","Type":"IssuesEvent","CreatedAt":"2021-11-18T19:37:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11396","RelatedDescription":"Closed issue \"\"nuget sources add\" does not support setting NuGet API version\" (#11396) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/nuget-sources-add-does-not-support-set/1585758)._\n\n---\n[severity:It's more difficult to complete my work]\r\nWhen running \"nuget sources add\" command, it does not support setting NuGet API version.  There should be an option to set the \"protocolVersion\" parameter in the NuGet.Config file that is written.  The only workaround is to manually edit the config file, but is shared build servers and hard to automate.\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/17/2021, 01:02 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"18955348372","Type":"IssuesEvent","CreatedAt":"2021-11-18T19:33:38","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11392","RelatedDescription":"Closed issue \"[Bug]: under certain conditions package restore fails with ProjectNotNominatedException when NuGetPackage is not initialized in VS\" (#11392) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS 2019 v16.11.5\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI have a single C++ project that I have modified (following instructions [here](https://github.com/NuGet/NuGet.Client/pull/3145#issuecomment-888769783)) to provide _PackageReference_ support:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ItemGroup Label=\"ProjectConfigurations\">\r\n    ...\r\n    <ProjectCapability Include=\"PackageReferences\" />\r\n  </ItemGroup>\r\n  <PropertyGroup Label=\"Globals\">\r\n    ...\r\n    <NuGetTargetMoniker Condition=\"'$(NuGetTargetMoniker)' == ''\">native,Version=v0.0</NuGetTargetMoniker>\r\n    <RuntimeIdentifiers Condition=\"'$(RuntimeIdentifiers)' == ''\">win;win-x86;win-x64;win-arm;win-arm64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n  ...\r\n  <ItemGroup>\r\n    <PackageReference Include=\"...\" Version=\"...\"/>\r\n  </ItemGroup>\r\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n</Project>\r\n```\r\n\r\neverything works fine (nuget restore, etc). But if you open solution in (fresh instance of) VS2019, right-click project and select Build -- it produces this in Build output window:\r\n```\r\n1>------ Build started: Project: CommonLib, Configuration: Debug x64 ------\r\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\r\n...\r\n```\r\nand build fails (sometimes not) due to missing header files/etc (that are located in referenced package). Package itself is already restored and sits in `%home%\\.nuget\\packages`.\r\n\r\nRunning with detailed build output produces:\r\n```\r\nBuild started...\r\n1>------ Up-To-Date check: Project: Common\\CommonLib\\CommonLib.vcxproj, Configuration: Debug x64 ------\r\n1>Project is not up-to-date: last build was unsuccessful.\r\n1>------ Build started: Project: CommonLib, Configuration: Debug x64 ------\r\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\r\nError occurred while restoring NuGet packages: NuGet.PackageManagement.VisualStudio.Exceptions.ProjectNotNominatedException: The operation failed as details for project CommonLib could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.CpsPackageReferenceProject.GetPackageSpecsAndAdditionalMessagesAsync(DependencyGraphCacheContext context)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.<GetSolutionRestoreSpecAndAdditionalMessages>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<RestorePackageSpecProjectsAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<RestoreAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<RestoreAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<ExecuteAsync>d__21.MoveNext()\r\n```\r\n\r\nwhich points to [this line](https://github.com/NuGet/NuGet.Client/blob/b9aa71007af196b4474dbf05bc66e9ed4cda0bcc/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/Projects/CpsPackageReferenceProject.cs#L133) -- it looks like NuGet maintains some sort of cache with project-related info and at this point it is expected that cache is already populated. I also noticed that this function uses project full path (while few other places use project full name) as a lookup key. It is my first time looking at NuGet source code, so I can't really comment on what is going on.\r\n\r\nIn cases when error message is generated and build fails detailed logs has this line buried in the output:\r\n```\r\n1>Target \"ResolveNuGetPackageAssets\" skipped, due to false condition; ('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)')) was evaluated as ('true' == 'true' and exists('obj\\project.assets.json')).\r\n```\r\nwhich suggests that at this stage `project.assets.json` was not created at that moment yet. Rerunning build works fine (no message and build succeeds).\r\n\r\nThere seem to be some race condition somewhere because there are basically three possible behaviors:\r\n- all works fine\r\n- `NuGet package restore failed` message and build works fine\r\n- `NuGet package restore failed` message and build fails (usually after I do Clean, restart VS and click Build again)\r\n\r\nI am pushing the envelope here since C++ projects do not officially support _PackageReference_. I don't expect a bugfix, but I am hoping there is a workaround for this problem -- maybe there is a directive to add to .vcxproj that will ensure package restore stage is delayed until `_projectSystemCache` is populated?\r\n\r\nMaybe an MSBuild construct that will create a dependency between certain tasks that will guarantee population of said cache before it is used?\r\n\r\n(if I click `Restore NuGet Packages` before building my project -- all works fine)\n\n### Verbose Logs\n\n_No response_"},{"Id":"18955185926","Type":"IssuesEvent","CreatedAt":"2021-11-18T19:22:20","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11400","RelatedDescription":"Opened issue \"The retry for secondary search endpoint doesn't work \" (#11400) at NuGet/Home","RelatedBody":"@loic-sharma mentioned:  NuGet client will try the \"primary\" search endpoint, and if that fails, retry on the \"secondary\" search endpoint. \r\n@zivkan helped finding the fallback at: https://github.com/NuGet/NuGet.Client/blob/f24bad0668193ce21a1db8cabd1ce95ba509c7f0/src/NuGet.Core/NuGet.Protocol/Resources/PackageSearchResourceV3.cs#L113\r\nBut it doesn't seem to retry:\r\nhttps://github.com/NuGet/NuGet.Client/blob/f24bad0668193ce21a1db8cabd1ce95ba509c7f0/src/NuGet.Core/NuGet.Protocol/Resources/PackageSearchResourceV3.cs#L174"},{"Id":"18955106726","Type":"IssuesEvent","CreatedAt":"2021-11-18T19:16:57","Actor":"KSchlobohm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11399","RelatedDescription":"Opened issue \"[Feature]: Examine Project-to-Project References when migrating from packages.config to PackageReference\" (#11399) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nExamine the project-to-project references when identifying top-level dependencies. Currently the PackageReference migrator tool will only examine the current project but the PackageReference system enables dependencies to flow through the P2P reference.\r\n\r\n![image](https://user-images.githubusercontent.com/23503973/142481306-8ed001d2-6cc3-4e83-84fe-648b20163633.png)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"18954159328","Type":"IssuesEvent","CreatedAt":"2021-11-18T18:11:02","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11398","RelatedDescription":"Closed issue \"[Bug]: NuGet goes nuts if two PackageReference projects live in same directory\" (#11398) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS 2019 v16.11.5\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Have two .csproj files in the same directory \r\n2. install a nuget package into each one using PackageReference\r\n3. trigger NuGet restore\r\n4. enjoy it overwriting obj/project.assets.json and obj/project.nuget.cache in random order and generally go nuts, spewing errors messages, etc. \r\n\r\nWorks beautifully in 100+ project solution which was just migrated to use PackageReferences. I spent enormous amount of time before I found this... It is easy to override `BaseIntermediateOutputPath` with `obj\\$(MSBuildProjectName)` (just make sure you do it before importing `Microsoft.Common.props`. But this problem should not exists in the first place.\r\n\r\nRelated to: NuGet/docs.microsoft.com-nuget#852, dotnet/sdk#1057\n\n### Verbose Logs\n\n_No response_"},{"Id":"18953982587","Type":"IssuesEvent","CreatedAt":"2021-11-18T17:58:56","Actor":"crusader-mike","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11398","RelatedDescription":"Opened issue \"[Bug]: NuGet goes nuts if two PackageReference projects live in same directory\" (#11398) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS 2019 v16.11.5\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Have two .csproj files in the same directory \r\n2. install a nuget package into each one using PackageReference\r\n3. trigger NuGet restore\r\n4. enjoy it overwriting obj/project.assets.json and obj/project.nuget.cache in random order and generally go nuts, spewing errors messages, etc. \r\n\r\nWorks beautifully in 100+ project solution which was just migrated to use PackageReferences. I spent enormous amount of time before I found this... It is easy to override `BaseIntermediateOutputPath` with `obj\\$(MSBuildProjectName)` (just make sure you do it before importing `Microsoft.Common.props`. But this problem should not exists in the first place.\r\n\r\nRelated to: NuGet/docs.microsoft.com-nuget#852, dotnet/sdk#1057\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":163,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1410695861508526080","CreatedAt":"2021-07-01T20:24:37+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠ \nHave you recently experienced issues interacting with https://t.co/KVB7werYQh's Search API?… https://t.co/3eM1gicePx","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2021-11-19T05:30:31.5843183Z","RunDurationInMilliseconds":1659}