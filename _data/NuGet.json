{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34088672356","Type":"IssuesEvent","CreatedAt":"2023-12-12T01:04:31","Actor":"cmcknz77","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9750","RelatedDescription":"Opened issue \"[Self-hosted Bug]: Build Issues in Allsigned environment\" (#9750) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use this version\n\n### Describe the bug\n\nI'm in an AllSigned PowerShell environment (locked at Domain level) which means that none of the PowerShell scripts that are included with this project will run in my environment without having been signed first. As a result, in order for me to be able to run \"build.ps1\" I'm finding that I not only need to codesign all the included *.ps* files, I'm also having to make an amendment to \"build.ps1\" in so that it signs the [NuGet/NuGet/ServerCommon/build/init.ps1](https://raw.githubusercontent.com/NuGet/ServerCommon/$BuildBranchCommit/build/init.ps1) file before it tries to import it and use functions from it during the build process.\r\n\r\nI'm accomplishing this by adding the following line in between that file being downloaded and it being run:\r\nSet-AuthenticodeSignature -FilePath \"$PSScriptRoot/build/init.ps1\" -Certificate (@(ls Cert:\\CurrentUser\\My\\ -code)[-1]) \r\n\r\nBut I'm still having a problem building the project afterwards. I have had it running since the start of 2022 and just tried to update it and I when I try to get it to build I'm receiving errors and the :\r\n\r\n\"BUILD FAILED: The term 'Remove-EditorconfigFile' is not recognized as the name of a cmdlet, function, script file\".\r\n\r\nNow, I've found the 'Remove-EditorconfigFile' function in https://github.com/NuGet/ServerCommon/blob/main/build/common.ps1 So I'm assuming that that's being pulled down by the ServerCommon/init.ps1 file but because it's being built on the fly, I can't sign it, so that function never gets imported and the build fails.\n\n### Repro Steps\n\n1. Using build\r\n2. . ./build.ps1\r\n3. \r\nPS C:\\Users\\user\\Documents\\GitHub\\NuGetGallery> . .\\build.ps1\r\nVERBOSE: Performing the operation \"Set-AuthenticodeSignature\" on target\r\n\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\build\\init.ps1\".\r\n\r\n\r\n    Directory: C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\build\r\n\r\n\r\nSignerCertificate                         Status                                 Path\r\n-----------------                         ------                                 ----\r\nDFD24E9A4927B66CFE8F3685DF0FE8D65DBB34AC  Valid                                  init.ps1\r\n\r\nPSPath            : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\ServerComm\r\n                    on\r\nPSParentPath      : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\r\nPSChildName       : ServerCommon\r\nPSDrive           : C\r\nPSProvider        : Microsoft.PowerShell.Core\\FileSystem\r\nPSIsContainer     : True\r\nName              : ServerCommon\r\nFullName          : C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\ServerCommon\r\nParent            : NuGetGallery\r\nExists            : True\r\nRoot              : C:\\\r\nExtension         :\r\nCreationTime      : 12/12/2023 00:35:47\r\nCreationTimeUtc   : 12/12/2023 00:35:47\r\nLastAccessTime    : 12/12/2023 00:35:47\r\nLastAccessTimeUtc : 12/12/2023 00:35:47\r\nLastWriteTime     : 12/12/2023 00:35:47\r\nLastWriteTimeUtc  : 12/12/2023 00:35:47\r\nAttributes        : Directory\r\nMode              : d-----\r\nBaseName          : ServerCommon\r\nTarget            : {}\r\nLinkType          :\r\n\r\nGetting ServerCommon repository...\r\nInitialized empty Git repository in C:/Users/user/Documents/GitHub/NuGetGallery/ServerCommon/.git/\r\nremote: Enumerating objects: 3994, done.\r\nremote: Counting objects: 100% (682/682), done.\r\nremote: Compressing objects: 100% (448/448), done.\r\nReceiving objects: 100% (3994/3994), 1.60 MiB | 23.80 MiB/s, done.d 3312\r\n\r\nResolving deltas: 100% (2827/2827), done.\r\nFrom https://github.com/NuGet/ServerCommon\r\n * branch            5295c6e0d2ae7357fccf01e48c56b768b192f022 -> FETCH_HEAD\r\nHEAD is now at 5295c6e Move from ADAL to MSAL (#415)\r\nServerCommon repository retrieved on 5295c6e0d2ae7357fccf01e48c56b768b192f022 commit.\r\nBuild tools directory 'build' is already at '5295c6e0d2ae7357fccf01e48c56b768b192f022'.\r\nBuild tools directory 'tools' is already at '5295c6e0d2ae7357fccf01e48c56b768b192f022'.\r\n\r\n\r\n\r\n\r\n[00:35:52 +0]   ============================================================\r\n[00:35:52 +0]   Build #785959 started at 12/12/2023 00:35:52\r\n[00:35:52 +0]   [BEGIN] Getting private build tools\r\n[00:35:52 +0]   No private build tools are configured. Use the 'PRIVATE_BUILD_TOOLS_REPO' and 'PRIVATE_BUILD_TOOLS_COMMI\r\nT' environment variables.\r\n[00:35:52 +0]   [DONE +0:00] Getting private build tools\r\n[00:35:52 +0]   [BEGIN] Cleaning test results\r\n[00:35:52 +0]   Cleaning test results\r\n[00:35:52 +0]   [DONE +0:00] Cleaning test results\r\n[00:35:52 +0]   [BEGIN] Installing NuGet.exe\r\n[00:35:52 +0]   nuget.exe is already installed\r\n[00:35:52 +0]   Marker file exists: C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\.nuget\\.marker.v1\r\n[00:35:52 +0]   Setting NuGet .NET Framework credential path\r\n[00:35:52 +0]   Increasing NuGet plug-in timeout values to 30 seconds.\r\n[00:35:52 +0]   [DONE +0:00] Installing NuGet.exe\r\nWARNING: [00:35:52 +0] [SKIP] Clearing package cache\r\n[00:35:52 +0]   [BEGIN] Clearing artifacts\r\n[00:35:52 +0]   Clearing the Artifacts folder\r\n[00:35:52 +0]   [DONE +0:00] Clearing artifacts\r\n[00:35:52 +0]   [BEGIN] Restoring solution packages\r\n[00:35:52 +0]   Installing packages @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\.nuget\"\r\n[00:35:52 +0]   C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\.nuget\\nuget.exe install C:\\Users\\user\\Documen\r\nts\\GitHub\\NuGetGallery\\.nuget\\packages.config -NonInteractive -ExcludeVersion -OutputDirectory C:\\Users\\user\\Docu\r\nments\\GitHub\\NuGetGallery\\packages\r\nFeeds used:\r\n  C:\\Users\\user\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  https://pkgs.dev.azure.com/dnceng/public/_packaging/nuget-build/nuget/v3/index.json\r\n\r\nAll packages listed in C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\.nuget\\packages.config are already installed.\r\n[00:35:54 +2]   [DONE +0:01] Restoring solution packages\r\n[00:35:54 +0]   [BEGIN] Set version metadata in AssemblyInfo.cs\r\n\r\nLastWriteTime : 12/12/2023 00:35:54\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:54 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\NuGetGallery\\Properties\r\n\\AssemblyInfo.g.cs\"\r\n[00:35:54 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:54 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:54 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:54 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:54 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:54 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:54\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:54 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\NuGetGallery.Core\\Prope\r\nrties\\AssemblyInfo.g.cs\"\r\n[00:35:54 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:54 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:54 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:54 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:54 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:54 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:55\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:55 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\NuGetGallery.Services\\P\r\nroperties\\AssemblyInfo.g.cs\"\r\n[00:35:55 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:55 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:55 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:55 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:55 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:55 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:55\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:55 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\NuGet.Services.Entities\r\n\\Properties\\AssemblyInfo.g.cs\"\r\n[00:35:55 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:55 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:55 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:55 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:55 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:55 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:57\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:57 +2]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\NuGet.Services.Database\r\nMigration\\Properties\\AssemblyInfo.g.cs\"\r\n[00:35:57 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:57 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:57 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:57 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:57 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:57 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:57\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:57 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\DatabaseMigrationTools\\\r\nProperties\\AssemblyInfo.g.cs\"\r\n[00:35:57 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:57 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:57 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:57 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:57 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:57 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:57\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:57 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\AccountDeleter\\Properti\r\nes\\AssemblyInfo.g.cs\"\r\n[00:35:58 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:58 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:58 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:58\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:58 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\GitHubVulnerabilities2D\r\nb\\Properties\\AssemblyInfo.g.cs\"\r\n[00:35:58 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:58 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:58 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:58\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:58 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\GalleryTools\\Properties\r\n\\AssemblyInfo.g.cs\"\r\n[00:35:58 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:58 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:58 +00:00\")]\r\n\r\nLastWriteTime : 12/12/2023 00:35:58\r\nLength        : 0\r\nName          : AssemblyInfo.g.cs\r\n\r\n[00:35:58 +0]   Getting version info in @\"C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\src\\VerifyMicrosoftPackage\\\r\nProperties\\AssemblyInfo.g.cs\"\r\n[00:35:58 +0]   [assembly: AssemblyVersion(\"4.4.5\")]\r\n[00:35:58 +0]   [assembly: AssemblyInformationalVersion(\"4.4.5-HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"Branch\", \"HEAD\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"CommitId\", \"e6a38a882\")]\r\n[00:35:58 +0]   [assembly: AssemblyMetadata(\"BuildDateUtc\", \"12/12/2023 00:35:58 +00:00\")]\r\n[00:35:58 +0]   [DONE +0:04] Set version metadata in AssemblyInfo.cs\r\n[00:35:58 +0]   [BEGIN] Removing .editorconfig file in NuGetGallery\r\nError-Log : [00:35:59 +1]       [FAILED +0:00] Removing .editorconfig file in NuGetGallery\r\nAt C:\\Users\\user\\Documents\\GitHub\\NuGetGallery\\build\\common.ps1:169 char:21\r\n+ ...             Error-Log \"[FAILED +$(Format-ElapsedTime $sw.Elapsed)] $B ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Error-Log\r\n\r\nBUILD FAILED: The term 'Remove-EditorconfigFile' is not recognized as the name of a cmdlet, function, script file, or op\r\nerable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again\r\n.\r\nERROR DETAILS:\r\nSystem.Management.Automation.CommandNotFoundException: The term 'Remove-EditorconfigFile' is not recognized as the name\r\nof a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, veri\r\nfy that the path is correct and try again.\r\n   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exc\r\neption)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0)\r\n   at System.Management.Automation.ScriptBlock.InvokeWithPipeImpl(ScriptBlockClauseToInvoke clauseToInvoke, Boolean crea\r\nteLocalScope, Dictionary`2 functionsToDefine, List`1 variablesToDefine, ErrorHandlingBehavior errorHandlingBehavior, Obj\r\nect dollarUnder, Object input, Object scriptThis, Pipe outputPipe, InvocationInfo invocationInfo, Object[] args)\r\n   at System.Management.Automation.ScriptBlock.<>c__DisplayClass57_0.<InvokeWithPipe>b__0()\r\n   at System.Management.Automation.Runspaces.RunspaceBase.RunActionIfNoRunningPipelinesWithThreadCheck(Action action)\r\n   at System.Management.Automation.ScriptBlock.InvokeWithPipe(Boolean useLocalScope, ErrorHandlingBehavior errorHandling\r\nBehavior, Object dollarUnder, Object input, Object scriptThis, Pipe outputPipe, InvocationInfo invocationInfo, Boolean p\r\nropagateAllExceptionsToTop, List`1 variablesToDefine, Dictionary`2 functionsToDefine, Object[] args)\r\n   at System.Management.Automation.ScriptBlock.InvokeUsingCmdlet(Cmdlet contextCmdlet, Boolean useLocalScope, ErrorHandl\r\ningBehavior errorHandlingBehavior, Object dollarUnder, Object input, Object scriptThis, Object[] args)\r\n   at Microsoft.PowerShell.Commands.InvokeCommandCommand.EndProcessing()\r\n   at System.Management.Automation.CommandProcessorBase.Complete()\r\n\n\n### Expected Behavior\n\nBuild succeeds.\r\nGallery website available at expected server URL\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34067300865","Type":"IssuesEvent","CreatedAt":"2023-12-11T12:02:57","Actor":"martincostello","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9749","RelatedDescription":"Opened issue \"[Feature]: Support OSSF Scorecard badges in package READMEs\" (#9749) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nProjects with an OSSF Scorecard badge in their repository README are not shown due to the CSP policy used to render README content in the NuGet gallery.\r\n\r\nFor example, this badge:\r\n\r\n```text\r\nhttps://img.shields.io/ossf-scorecard/github.com/justeattakeaway/httpclient-interception?label=openssf%20scorecard&style=flat\r\n```\r\n\r\n```markdown\r\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/justeattakeaway/httpclient-interception/badge)](https://securityscorecards.dev/viewer/?uri=github.com/justeattakeaway/httpclient-interception)\r\n```\r\n\r\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/justeattakeaway/httpclient-interception/badge)](https://securityscorecards.dev/viewer/?uri=github.com/justeattakeaway/httpclient-interception)\n\n### The Elevator Pitch\n\nAllow badges from https://api.securityscorecards.dev so that project READMEs render nicely without being customised.\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"34030120841","Type":"PullRequestEvent","CreatedAt":"2023-12-09T00:41:51","Actor":"RiadGahlouz","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9747","RelatedDescription":"Merged pull request \"Allow admins to select a specific number of package versions\" (#9747) at NuGet/NuGetGallery","RelatedBody":"This PR adds a little prompt when you click in the `Select listed` or `Select unlisted` asking you how many packages you want to select. If you type anything but a number, it selects all (default behavior, just press enter) \r\n![image](https://github.com/NuGet/NuGetGallery/assets/1711217/ee4750ef-e46c-4421-8ae8-2e68483e1087)\r\n\r\nAfter Clicking: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/1711217/16eeca91-ce67-4bfc-9efb-f6d5e24b581b)\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9517"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34089729233","Type":"IssuesEvent","CreatedAt":"2023-12-12T02:07:12","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12969","RelatedDescription":"Closed issue \"Executing the command “.\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -UseLocalMachineStore” of “CreateTestCertificate.ps1” in Entropy repo failed at encryption on Windows\" (#12969) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nOther/NA\r\n\r\n### Product Version\r\n\r\nlatest downloaded Entropy repo\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nNone\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:\r\n1.\tOpen “Task Manager” on a VM with OS Windows-11-Enterprise. \r\n2.\tClick the button “Run new task”  on the top-right of the window.\r\n3.\tIn the Open textbox type:       \r\n       powershell -ExecutionPolicy Bypass \r\n4.\tEnable the option “Create this task with administrative privileges.” \r\n5.\tClick OK. \r\n6.\tCd to the path of the VM , run: Git clone https://github.com/NuGet/Entropy.git and run below command.\r\n7.\tCd to <path_to_Entropy>\\TestCertGenerator and run `“.\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -UseLocalMachineStore”`.\r\n\r\n#### Expected:\r\nThe command can be executed correctly without any error and the certificate is created successfully into the path of “Entropy\\TestCertGenerator”.\r\n#### Actual:\r\nExecuting the command “.\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -UseLocalMachineStore” of “CreateTestCertificate.ps1” in Entropy repo failed at encryption as below screenshot and there is no certificate created under the path of “Entropy\\TestCertGenerator”.\r\n![image](https://github.com/NuGet/Home/assets/20632625/2711ebee-d498-44e2-8991-d817422373c8)\r\n#### Note:\r\n1.It reproes on 80% Windows VMs.\r\n2.It didn't repro on the Entropy repo downloaded on Sept.20th.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"34088511316","Type":"IssuesEvent","CreatedAt":"2023-12-12T00:55:06","Actor":"AathifMahir","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13084","RelatedDescription":"Opened issue \"NativeAOT Flag\" (#13084) at NuGet/Home","RelatedBody":"It would be great, if the Package Author does have option to Mark Packages as NativeAOT Compatible. that would Add Flag on Nuget Home, Where Devs can easily Identify if the Package does Support NativeAOT by Looking Into the Flags that Next Supported Dotnet like Below Image\n\n![Screenshot_20231212_062130_Chrome.jpg](https://github.com/NuGet/Home/assets/17165402/d3ae9f1d-f161-4423-99e6-4138183e88ed)\n\n"},{"Id":"34086905731","Type":"IssuesEvent","CreatedAt":"2023-12-11T23:21:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13081","RelatedDescription":"Closed issue \"Support for GitHub commit tags\" (#13081) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nIt would be great to see support for GitHub commit tags. Say I publish multiple packages over days/weeks/months etc, and I discover a bug in my product months down the line. I go back over the past packages, and discover the version where the bug is introduced. Currently, the only way to track down the issue is by trawling through pull request histories, and trying to match up the PR date with the package publish date, which takes time. By using GitHub commit tags in the NuGet information data, it would save time tracking the bug down.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"34084837781","Type":"IssuesEvent","CreatedAt":"2023-12-11T21:44:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11985","RelatedDescription":"Closed issue \"Signing:  macOS removed CRL support\" (#11985) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 5 SDK and later\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nIn March 2022, I confirmed with Apple developer technical support that Apple removed CRL support from macOS starting with 10.15 (Catalina).  See https://github.com/dtivel/x509-revocation-check-macos for repro steps.\r\n\r\nNuGet packages that are author- or repository-signed with certificates without OCSP support will have permanently unavailable revocation status on macOS 10.15+.\r\n\r\nMicrosoft's current author-signing certificate and NuGet.org's current repository-signing certificate are both DigiCert certificates.  Publicly trusted, commercial code signing certificates typically have both CRL and OCSP support, so as long as OCSP checks continue to work, the lack of CRL support on macOS is a non-issue.\n\n### Verbose Logs\n\n_No response_"},{"Id":"34084416905","Type":"IssuesEvent","CreatedAt":"2023-12-11T21:27:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13056","RelatedDescription":"Closed issue \"Validate --source for \"dotnet restore --source\"\" (#13056) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe, dotnet.exe\r\n\r\n### Current Behavior\r\n\r\nCurrently, there is an easy developer pitfall due to caching of NuGet package sources. Once I run something like the following code:\r\n```\r\ndotnet restore --source 'https://api./nuget.org/v3/index.json'\r\n```\r\nThis will cache the source's packages on my computer. Therefore, if I run a restore command again in the same project like the following:\r\n```\r\ndotnet restore --source 'asdasdfasfasfsgdfhgrsdtyhrtuhrthjfghj'\r\n```\r\nThe command will work because the source doesn't actually matter after the packages are cached. The developer will only run into issues if `dotnet restore --source 'asdasdfasfasfsgdfhgrsdtyhrtuhrthjfghj'` is run before `dotnet restore --source 'https://api./nuget.org/v3/index.json'`.\r\n\r\n### Desired Behavior\r\n\r\nIf a developer specifies `--source` flag, it means they want to use that source, not the cached source. So, a command like the following should fail even if packages required by the current project are cached because the NuGet source is obviously invalid:\r\n```\r\ndotnet restore --source 'asdasdfasfasfsgdfhgrsdtyhrtuhrthjfghj'\r\n```\r\n\r\n### Additional Context\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-12-12T03:30:21.104508Z","RunDurationInMilliseconds":1272}