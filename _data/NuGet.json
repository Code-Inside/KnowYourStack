{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"42916323481","Type":"PullRequestEvent","CreatedAt":"2024-10-16T18:10:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10226","RelatedDescription":"Opened pull request \"Jver mext\" (#10226) at NuGet/NuGetGallery","RelatedBody":"This takes a feature branch from @agr and adds a couple more fixes on top.\r\n\r\nSummary of changes\r\n- Bring existing Microsoft.* dependencies up to 8.x\r\n   - I need this for the https://github.com/NuGet/NuGetGallery/issues/10212 when I pull in new Identity libraries\r\n- Fix binding redirects in CDNRedirect (this app is currently broken)\r\n- Fix binding redirects in NuGetGallery, needed due to package updates\r\n- Bring test fixes for logging package update (thanks @agr)\r\n- Improve error logging when our shims layer fails to load (the Loader exceptions show Fusion logs for the failed load, these show up in the error logs section in App Service Kudu)."},{"Id":"42901786073","Type":"IssuesEvent","CreatedAt":"2024-10-16T11:40:57","Actor":"fjssilva","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10225","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Universal-FOSS-exception-1.0 license missing\" (#10225) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nLicense identifier 'Universal-FOSS-exception-1.0' is an [approved SPDX license exception](https://spdx.org/licenses/exceptions-index.html) identifier but the corresponding license text cannot be found in [licences.nuget.org/Universal-FOSS-exception-1.0](https://licenses.nuget.org/Universal-FOSS-exception-1.0). Can you please add it?\n\n### Repro Steps\n\nOpen the link https://licenses.nuget.org/Universal-FOSS-exception-1.0\n\n### Expected Behavior\n\nThe link above is expected to show the contents of the Universal FOSS exception 1.0 license text, same as in https://spdx.org/licenses/Universal-FOSS-exception-1.0.html.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\nThis is currently breaking the licencing information in [MySQL Connector/NET NuGet packages](https://www.nuget.org/packages/MySql.Data)"},{"Id":"42879860917","Type":"PullRequestEvent","CreatedAt":"2024-10-15T21:27:39","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10223","RelatedDescription":"Merged pull request \"[ReleasePrep][2024-10-15] RI dev to main\" (#10223) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"42879777509","Type":"IssuesEvent","CreatedAt":"2024-10-15T21:23:59","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10224","RelatedDescription":"Opened issue \"[Postmortem] Fix json parsing\" (#10224) at NuGet/NuGetGallery","RelatedBody":"There is an issue with parsing lengths (CompressedLength and Length) in json that relates to this incident: https://portal.microsofticm.com/imp/v5/incidents/details/537776118/summary\n\nCheck postmortem for more details."},{"Id":"42879023228","Type":"PullRequestEvent","CreatedAt":"2024-10-15T20:54:57","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10223","RelatedDescription":"Opened pull request \"[ReleasePrep][2024-10-15] RI dev to main\" (#10223) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"42913270471","Type":"IssuesEvent","CreatedAt":"2024-10-16T16:33:53","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/13719","RelatedDescription":"Reopened issue \"Version in GlobalPackageReference is resolved incorrectly for legacy-style csproj projects\" (#13719) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n6.11.0.122\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Target the legacy csproj to .Net Framework 4.7.2 with `<TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>`\r\n2. Specify in Directory.Packages.props:\r\n   ```\r\n    <ItemGroup>\r\n      <GlobalPackageReference Include=\"IDisposableAnalyzers\" Version=\"3.4.15\" />\r\n      <GlobalPackageReference Include=\"Microservice.CodeAnalyzers\" version=\"1.1.23\" />\r\n      <GlobalPackageReference Include=\"Microsoft.CodeAnalysis.NetAnalyzers\" Version=\"8.0.0\" />\r\n      <GlobalPackageReference Include=\"Microsoft.VisualStudio.SlnGen\" Version=\"4.2.5\" />\r\n      <GlobalPackageReference Include=\"Microsoft.VisualStudio.Threading.Analyzers\" Version=\"17.0.64\" />\r\n      <GlobalPackageReference Include=\"Microsoft.Build.Telemetry\" Version=\"1.0.17\" />\r\n    </ItemGroup>\r\n   ```\r\n3. Manage NuGet packages for the legacy csproj, you will see all of 6 packages resolved into wrong versions: IDisposableAnalyzers > 1.0.0; Microservice.CodeAnalyzers > 1.1.4; Microsoft.CodeAnalysis.NetAnalyzers > 5.0.0; Microsoft.VisualStudio.SlnGen > 3.0.16; Microsoft.VisualStudio.Threading.Analyzers > 15.0.240; Microsoft.Build.Telemetry > 1.0.0\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"42893816235","Type":"IssuesEvent","CreatedAt":"2024-10-16T07:56:40","Actor":"microsoft-github-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6222","RelatedDescription":"Closed issue \"PackageManagement UI depends on VS, hindering component reuse\" (#6222) at NuGet/Home","RelatedBody":"The current PackageManagement UI has dependencies on Visual Studio. This makes it nearly impossible to reuse the WPF controls in other apps that may want to interact with NuGet in a consistent way. For example, NuGet Package Explorer needs a \"Package Chooser\" dialog. This should be an ideal reusable widget where the output is the selected package. Possibly downloaded and referenced from the local cache as well.\r\n\r\nI would like to see the dependency order flipped so that the Visual Studio-specific components reference the non-VS components as this would enable more reuse."},{"Id":"42893814815","Type":"IssuesEvent","CreatedAt":"2024-10-16T07:56:37","Actor":"microsoft-github-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13719","RelatedDescription":"Closed issue \"Version in GlobalPackageReference is resolved incorrectly for legacy-style csproj projects\" (#13719) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n6.11.0.122\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Target the legacy csproj to .Net Framework 4.7.2 with `<TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>`\r\n2. Specify in Directory.Packages.props:\r\n   ```\r\n    <ItemGroup>\r\n      <GlobalPackageReference Include=\"IDisposableAnalyzers\" Version=\"3.4.15\" />\r\n      <GlobalPackageReference Include=\"Microservice.CodeAnalyzers\" version=\"1.1.23\" />\r\n      <GlobalPackageReference Include=\"Microsoft.CodeAnalysis.NetAnalyzers\" Version=\"8.0.0\" />\r\n      <GlobalPackageReference Include=\"Microsoft.VisualStudio.SlnGen\" Version=\"4.2.5\" />\r\n      <GlobalPackageReference Include=\"Microsoft.VisualStudio.Threading.Analyzers\" Version=\"17.0.64\" />\r\n      <GlobalPackageReference Include=\"Microsoft.Build.Telemetry\" Version=\"1.0.17\" />\r\n    </ItemGroup>\r\n   ```\r\n3. Manage NuGet packages for the legacy csproj, you will see all of 6 packages resolved into wrong versions: IDisposableAnalyzers > 1.0.0; Microservice.CodeAnalyzers > 1.1.4; Microsoft.CodeAnalysis.NetAnalyzers > 5.0.0; Microsoft.VisualStudio.SlnGen > 3.0.16; Microsoft.VisualStudio.Threading.Analyzers > 15.0.240; Microsoft.Build.Telemetry > 1.0.0\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"42884266738","Type":"IssuesEvent","CreatedAt":"2024-10-16T00:54:48","Actor":"MatthieuMEZIL","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13859","RelatedDescription":"Opened issue \"PackageReference GeneratePathProperty does not work with IsPackable=\"true\" on multi-targeted project\" (#13859) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n.NET 8.0.203, msbuild 17.11.9.46202, nuget 6.10.1\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOutput project does not support GeneratePathProperty causing GenerateNuspec target to fail.\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n \r\n  <PropertyGroup>\r\n    <TargetFrameworks>net8.0;net472</TargetFrameworks>\r\n    <IsPackable>true</IsPackable>\r\n    <Authors>Name</Authors>\r\n    <Company>Company</Company>\r\n  </PropertyGroup>\r\n \r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Text.Json\" Version=\"8.0.5\" ExcludeAssets=\"all\" GeneratePathProperty=\"true\" />\r\n  </ItemGroup>\r\n \r\n  <ItemGroup>\r\n    <Content Include=\"$(PkgSystem_Text_Json)\\lib\\netstandard2.0\\System.Text.Json.dll\" />\r\n  </ItemGroup>\r\n \r\n  <Target Name=\"Foo\"\r\n    AfterTargets=\"Build\"\r\n    Condition=\" '$(IsCrossTargetingBuild)' == 'true' \"\r\n    DependsOnTargets=\"GenerateNuspec\">\r\n  </Target>\r\n \r\n</Project>\r\n```\r\n \r\n It fails because PkgSystem_Text_Json is empty for the output project. \r\n See NuGetBug.csproj.nuget.g.props:\r\n ```\r\n <PropertyGroup Condition=\" '$(TargetFramework)' == 'net472' AND '$(ExcludeRestorePackageImports)' != 'true' \">\r\n  <PkgSystem_Text_Json Condition=\" '$(PkgSystem_Text_Json)' == '' \">D:\\NuGet\\system.text.json\\8.0.5</PkgSystem_Text_Json>\r\n</PropertyGroup>\r\n<PropertyGroup Condition=\" '$(TargetFramework)' == 'net8.0' AND '$(ExcludeRestorePackageImports)' != 'true' \">\r\n  <PkgSystem_Text_Json Condition=\" '$(PkgSystem_Text_Json)' == '' \">D:\\NuGet\\system.text.json\\8.0.5</PkgSystem_Text_Json>\r\n</PropertyGroup>\r\n```\r\n\r\nI don't understand why PkgSystem_Text_Json is only defined when TargetFramework is set, and this is causing GenerateNuspec target to fail. \n\n### Verbose Logs\n\n```shell\nSystem.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\lib\\netstandard2.0'.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileSystemEnumerableIterator`1.CommonInit()\r\n   at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost)\r\n   at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption)\r\n   at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includeEmptyDirectories, String& normalizedBasePath)\r\n   at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String targetPath, Boolean includeEmptyDirectories)\r\n   at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude)\r\n   at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files)\r\n   at NuGet.Commands.MSBuildProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.Build.Tasks.Pack.PackTask.Execute()\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-10-17T03:30:21.9809248Z","RunDurationInMilliseconds":897}