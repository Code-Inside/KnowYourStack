{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13066735454","Type":"PullRequestEvent","CreatedAt":"2020-07-30T22:24:00","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8115","RelatedDescription":"Merged pull request \"Add functional tests on Gallery for Advanced Search\" (#8115) at NuGet/NuGetGallery","RelatedBody":"This PR adds some basic functional tests on the Gallery for Advanced Search. Stuff being tested:\r\n\r\n- package type filter (dependency, template and a random type \"ARandomType\")\r\n- total downloads sorting\r\n- last updated sorting\r\n\r\nEdit:\r\n- Functional tests on [DEV](https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=72898)\r\n- Functional tests on [PROD](https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=72897)"},{"Id":"13066548738","Type":"PullRequestEvent","CreatedAt":"2020-07-30T21:56:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8132","RelatedDescription":"Opened pull request \"Use protected configuration provider instead of reflection (WITHOUT DI)\" (#8132) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8121\r\nRelated to https://github.com/NuGet/Engineering/issues/3206\r\n\r\nOverall, this takes a similar approach as before (https://github.com/NuGet/NuGetGallery/pull/8098) but avoids using the ambient dependency injection container. Previously, we saw in 2 of the 10 nodes get into a bad state some time after deployment. This bad state described a disposed DI container. My theory is that the following occurred:\r\n\r\n1. Instance starts up\r\n1. First request that needs machine key hits the fresh instance.\r\n1. Request is cancelled, terminated or some other action leading to the request scope to be disposed.\r\n1. Machine key configuration provider is still invoked\r\n1. `DependencyResolver.Current` throws because it sees the DI scope for the request is disposed.\r\n1. This bad state is cached and all future requests for the machine key APIs fail.\r\n\r\nI was unable to fully reproduce the problem but I was able to reproduce the cached failure (last step). I have our DEV perf environment running with the bad build for the past 3 days, constantly hitting the log-in page (which needs the machine key). No errors yet. I will keep it running for the next week or so in hopes of finding a repro.\r\n\r\nI am resolving this issue by completely avoiding the stack that threw the error. That is, I am not using DI at all. I also added some tracing to help future debugging."},{"Id":"13065657437","Type":"IssuesEvent","CreatedAt":"2020-07-30T20:11:51","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8059","RelatedDescription":"Closed issue \"Add advanced search UI to Gallery\" (#8059) at NuGet/NuGetGallery","RelatedBody":"Create the designed UI in the Gallery side for advanced search"},{"Id":"13054190837","Type":"IssuesEvent","CreatedAt":"2020-07-29T22:10:48","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8117","RelatedDescription":"Closed issue \"[2020-07-21] Deployment\" (#8117) at NuGet/NuGetGallery","RelatedBody":"⚠ This deployment has been postponed to July 27th, 2020.\r\n\r\n# Gallery\r\n\r\nChanges:\r\n* Replace advisory permalink workaround with GitHub advisory permalink field (#8088)\r\n* Made a test permalink a more realistic URL (#8108)\r\n* Use OPTIMIZE FOR UNKNOWN for dependents queries (#8112)\r\n* Add sorting and filtering UI to Gallery (#8105)\r\n* Clean Elmah (#7962)\r\n* Fix filter button alignment on small screens for Advanced Search panel (#8113)\r\n* Merge pull request #8109 from NuGet/3268-Gallery-DB-schema\r\n* Revert \"Use protected configuration provider instead of reflection (#8124)\r\n\r\nProgress:\r\n* [x] Merge RI: https://github.com/NuGet/NuGetGallery/pull/8125\r\n* [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=756011\r\n* [x] DEV [DB migration](https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=754029)\r\n* [x] DEV\r\n* [x] INT [DB migration](https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=755996)\r\n* [x] INT\r\n* [x] PROD [DB migration](https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=755996)\r\n* [x] PROD\r\n\r\n# db2catalog\r\n\r\nChanges:\r\n* Remove extraneous property from vulnerabilities in catalog leaves (https://github.com/NuGet/NuGet.Services.Metadata/pull/809)\r\n\r\nRelease: https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=755785\r\n\r\nProgress:\r\n* [x] DEV\r\n* [x] Merge RI: https://github.com/NuGet/NuGet.Services.Metadata/pull/810\r\n* [x] INT\r\n* [x] PROD\r\n"},{"Id":"13053675036","Type":"IssuesEvent","CreatedAt":"2020-07-29T21:09:49","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8081","RelatedDescription":"Closed issue \"[Advanced search] Update engineering documentation\" (#8081) at NuGet/NuGetGallery","RelatedBody":"We need to update this documentation: https://github.com/NuGet/NuGet.Services.Metadata/blob/master/src/NuGet.Services.SearchService/README.md\r\n\r\nWe should update V2 API reference to include the new `sortBy` values and `packageType` filter."},{"Id":"13043157994","Type":"IssuesEvent","CreatedAt":"2020-07-29T00:39:26","Actor":"vsfeedback","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8131","RelatedDescription":"Opened issue \"NuGet Package Manager Browse tab search results are unordered and too broad\" (#8131) at NuGet/NuGetGallery","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1100552/nuget-package-manager-browse-tab-search-results-ar.html)._\n\n---\nIn ther latest versions of Visual Studio (e.g., 16.6.1), searching for a package on the Browse tab of the NuGet Package Manager seems to be doing a full-text search and returning the thousands of results in a random order.  \n\nFor example, when I search for the Newtonsoft.Json package, the results that come back seem to contain either Newtonsoft or Json somewhere in the name, description, or dependencies(?).  There seems to be no ordering for quality of match with the package name or anything that would make it reasonable to find the package to install it in my current project.  For my example search, the Newtonsoft.Json package I was searching for was result number 656 in the list returned.  This makes the tool virtually unusable and I have resorted to using nuget.org to find the packages/versions and manually editing the csproj files rather than wasting my time trying to find them in this tool.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/2/2020, 07:06 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 7/28/2020, 05:10 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Feedback Bot on 7/28/2020, 05:11 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"13042772720","Type":"IssuesEvent","CreatedAt":"2020-07-28T23:27:00","Actor":"vsfeedback","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8130","RelatedDescription":"Opened issue \"Improve searching for nuget packages\" (#8130) at NuGet/NuGetGallery","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1021643/improve-searching-for-nuget-packages.html)._\n\n---\nI don't know whether there is a limitation with nuget.org itself (the website is similarly basic) but searching for a nuget package in Visual Studio could be significantly improved if the search box treated space-separated strings as separate tokens and _ANDED_ these together when performing the search.\n\nFor example, when entering \"imm coll l\" I'd want to see \"System.Collections.Immutable\"  - NOT every package that contains _either_ \"imm\" or \"coll\". (I can't imagine why this appears to be the default behaviour...)\n\nAlso, I'd like to be able to filter/rank based on number of downloads or \"last updated\" since there are a huge number of ancient packages which simply clutter up the result list\n\n---\n### Original Comments\n\n#### Feedback Bot on 5/8/2020, 01:34 AM: \n\nThank you for taking the time to provide your suggestion.  We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.\n#### Peter Shaw on 5/15/2020, 04:27 AM: \n\n<p>In response to this tweet I posted: </p><p>https://twitter.com/shawty_ds/status/1261061801959178241</p><p>I'd also like to back this suggestion up.</p><p>I understand the need for some results to show up when a user is not sure what they are searching for, but right now as it stands, Visual Studio NuGet search IS UNUSABLE unless you know the EXACT spelling of the package your looking for.</p><p>Mores the point, the sub-string search is way too LAX, for example I do a search for \"MapWinGis\" (I Know this term is used in the package description, but is not the namespace name) and I get 100's of results, simply because many package names have \"<strong>gi</strong>\", \"<strong>ma</strong>\", \"<strong>in</strong>\" or \"<strong>wi</strong>\" (\"wi\" being an incredibly popular term, since we are on windows), showing these results is absolutely not helpful.</p><p>Filtering and ranking the results list is a really good idea, and improving the search to be more like say google search so we can say for example \"MapWin\" \"GIS\" and that will return packages that contain those exact phrases, or for example \"Collections\" -\"Microsoft\" will return anything with the exact phrase \"Collections\" in, but only if it does NOT contain the exact phrase \"Microsoft\"</p><p>As much as I dislike google these days, I have to admit the search operators they have and the way they work, actually make for a very powerful search syntax, to be really specific about what your searching for, having something similar in NuGet would be very, very helpful, especially when you have companies like \"ThinkGeo\" who have literally filled the first 10 pages of NuGet with their \"free(but not actually free)\" GIS library (Try a search for GIS in NuGet and see how long it takes before you see anything other than their offering), it would allow us to filter out bad actors like this that are using NuGet to drive sales, and focus on finding what we need fast.</p>\n"},{"Id":"13042457370","Type":"IssuesEvent","CreatedAt":"2020-07-28T22:33:33","Actor":"jeffpatton1971","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8129","RelatedDescription":"Opened issue \"Error 500 on initial account registration\" (#8129) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nI've just compiled and modified the nugetgallery and uploaded to an azure web app. When I attempt to register for the first time I'm getting a 500, I feel I've done something wrong during the setup, but I'm not certain. Setting this up for POC so using limited resources in azure.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. followed this document https://github.com/NuGet/NuGetGallery/blob/master/README.md\r\n2. followed this document https://github.com/NuGet/NuGetGallery/blob/master/docs/Deploying/README.md\r\n3, Site loads in browser\r\n\r\n### Expected behavior\r\nWas hoping to login\r\n\r\n### Additional context\r\nAzure App Plan is F1\r\nAzure Sql DB is Basic"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13067347510","Type":"IssuesEvent","CreatedAt":"2020-07-31T00:10:18","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9866","RelatedDescription":"Opened issue \"Bad UX to get to NuGet from the \"Manage NuGet Packages\" screen\" (#9866) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1126396/bad-ux-to-get-to-nuget-from-the-manage-nuget-packa.html)._\n\n---\nRight-click a csproj project, select \"Manage NuGet Packages...\", the familiar screen appears for managing packages.\n\nLet's say you want to visit a package's page on NuGet for some additional information so you start quickly visually scanning your screen for any nuget links. The one that you'll spot first is **the Report Abuse link**, that you can then use to further navigate back to the package's page. In my case the situation is extra bad because the ReportAbuse part is wrapped to the next line.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/27/2020, 07:20 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Leftyx on 7/28/2020, 01:13 AM: \n\n<p>eh eh. I always do that.</p><p>The \"Report abuse\" is the most clicked url on the web, especially cause most packages don't have the link to the nuget packages, just the report abuse page.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"13067009392","Type":"IssuesEvent","CreatedAt":"2020-07-30T23:08:24","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9865","RelatedDescription":"Opened issue \"Set of nuget.config files considered for solution restore varies based on nuget.exe vs. dotnet\" (#9865) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: nuget.exe, dotnet restore\r\nNuGet version: 5.6.0\r\ndotnet.exe --version: 5.0.100-preview.6.20318.15\r\nOS version: Windows 10\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. `git clone https://github.com/NuGet/NuGetGallery.git`\r\n2. `cd NuGetGallery`\r\n3. `dotnet restore NuGetGallery.sln --verbosity normal`\r\n4. `nuget.exe restore NuGetGallery.sln`\r\n\r\nIn the \"NuGet Config files used:\" area in the output of each command, I would expect the same nuget.config files listed. However, .NET CLI picks up on any additional one that nuget.exe does not.\r\n\r\nThe reason this is significant is that it can lead to different feeds being used if the set of package sources in the additionally included nuget.config is different than the nuget.exe set of configs, leading to varied restore behavior (e.g. floating).\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n**dotnet restore**\r\n\r\n<pre>\r\n         NuGet Config files used:\r\n             <b>C:\\z\\s\\GitHub\\NuGet\\NuGetGallery\\tests\\NuGet.Config</b>\r\n             C:\\z\\s\\GitHub\\NuGet\\NuGetGallery\\NuGet.Config\r\n             C:\\Users\\jver\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n</pre>\r\n\r\n**nuget.exe restore**\r\n\r\n```\r\nNuGet Config files used:\r\n    C:\\z\\s\\GitHub\\NuGet\\NuGetGallery\\NuGet.Config\r\n    C:\\Users\\jver\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n```\r\n"},{"Id":"13066140319","Type":"IssuesEvent","CreatedAt":"2020-07-30T21:04:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9613","RelatedDescription":"Closed issue \"RepositoryMetadata Equals does not account for branch and commit properties\" (#9613) at NuGet/Home","RelatedBody":"Related: https://github.com/dotnet/wpf/issues/3050#event-3379286042\r\n\r\nhttps://github.com/NuGet/NuGet.Client/commit/0e4d1b598f350b3dc675018d539114d1328189ef\r\n\r\ncc @clairernovotny"},{"Id":"13064142857","Type":"IssuesEvent","CreatedAt":"2020-07-30T17:36:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9864","RelatedDescription":"Opened issue \"Duplicate PackageReference includes are handled inconsistently by all restores, leading to unnecessary full restores\" (#9864) at NuGet/Home","RelatedBody":"Take a project such as the following: \r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NuGet.Protocol\" Version=\"5.5.0\" />\r\n    <PackageReference Include=\"NuGet.Protocol\" Version=\"5.6.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nNote the duplicate PackageReference declaration. Digging further reveals that different project types and different tools handle it differently. \r\n\r\nSee the below table for details\r\n\r\n| Restore Flavor | PackageReference declaration | \r\n| - | - |\r\n| Commandline restore (all) | First |\r\n| Static graph restore (all) | First | \r\n| VS - SDK based projects | Last |\r\n| VS - Legacy PR projects | First |\r\n\r\nThis leads to issues as the ones described in https://github.com/dotnet/arcade/issues/5550 (see below repro). \r\n\r\nI think logically from an msbuild perspective, we'd expect that the last value is the one that's resolved. This needs investigated and ideally consolidated. \r\nNote that consolidating VS - LEgacy PR projects might be impossible, due to the fact that it's largely in maintenance mode.\r\n\r\nSee repro below.\r\n\r\ncc folks that might have some thoughts around: \r\n\r\n@jeffkl @davkean @dsplaisted @zivkan \r\n\r\n[DuplicateIds.zip](https://github.com/NuGet/Home/files/5002828/DuplicateIds.zip)\r\n"},{"Id":"13063716926","Type":"IssuesEvent","CreatedAt":"2020-07-30T16:56:50","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9863","RelatedDescription":"Opened issue \"Allow `net5.0-platform` projects to be loaded and restored in VS\" (#9863) at NuGet/Home","RelatedBody":"NominateProjectAsync API needs to load `TargetFrameworkIdentifier`, `TargetFrameworkVersion`, `TargetFrameworkProfile`, `TargetPlatformIdentifier` and `TargetPlatformVersion` from the property bag, rather than the `TargetFrameworkMoniker` string (which is missing the platform properties, and won't get it)."},{"Id":"13062858170","Type":"IssuesEvent","CreatedAt":"2020-07-30T15:43:31","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9862","RelatedDescription":"Opened issue \"Add license header to editorconfig\" (#9862) at NuGet/Home","RelatedBody":"The Visual Studio code editor supports a codefix/light bulb to add file headers from a template defined in the `.editorconfig` file. https://docs.microsoft.com/en-us/visualstudio/ide/reference/add-file-header?view=vs-2019\r\n"},{"Id":"13052232759","Type":"IssuesEvent","CreatedAt":"2020-07-29T18:30:51","Actor":"tyb-dev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9861","RelatedDescription":"Opened issue \"Dependency Resolution Inconsistency\" (#9861) at NuGet/Home","RelatedBody":"Expected: NuGet uses a nearest-wins approach to resolve conflicting dependencies. NuGet does not try to find a dependency that meets all constraints in the graph. That means, the dependency that is closer to the application in the dependency graph wins.\r\nActual: In the case below, this rule is violated. \r\n\r\n## Details about Problem\r\n\r\nVS version (if appropriate):\r\n2019\r\n\r\nOS version:\r\nWindows 10, 2004\r\n\r\nWorked before? If so, with which NuGet version:\r\nNo\r\n\r\ndotnet version:\r\n3.1\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nLet's assume we have 2 packages, C, and D. D comes in two versions and C takes a dependency on D. \r\nD 1.0.0\r\nC 1.0.0 -> D 2.0.0\r\n\r\nLet us construct an app that results in a classic package downgrade, by referencing both C an D:\r\n- App\r\n  - C 1.0.0\r\n    - D 1.0.0\r\n  - D 1.0.0\r\n\r\n```\r\nDetected package downgrade D from 2.0.0 to 1.0.0\r\n  App -> C 1.0.0 -> D (>= 2.0.0)\r\n  App -> D (>= 1.0.0)\r\n```\r\n\r\nLet us introduce two new dependencies, which we put in front of C and D:\r\nA 1.0.0 -> C 1.0.0\r\nB 1.0.0 -> D 1.0.0\r\n\r\nWe can now construct a new App that is identical to the first app, except the dependencies C and D are shifted down by one level. All we did is add a new first layer. The nearest wins rule should still hold, but we get the following instead:\r\n\r\n- App\r\n  - A 1.0.0\r\n    - C 1.0.0\r\n      - D 2.0.0 (! this version is farther away but wins)\r\n  - B 1.0.0\r\n    - D 2.0.0 (! package upgrade from 1.0.0 to 2.0.0, although it is closer to App)\r\n\r\nThere is no package downgrade error. Instead, D is promoted to 2.0.0. \r\n\r\nScreenshot:\r\n![image](https://user-images.githubusercontent.com/57002348/88838125-615fd400-d1d9-11ea-9e8f-53d2232a9c66.png)\r\n\r\nDocumentation:\r\nhttps://docs.microsoft.com/en-us/nuget/concepts/dependency-resolution\r\n"},{"Id":"13051371494","Type":"IssuesEvent","CreatedAt":"2020-07-29T16:58:57","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9849","RelatedDescription":"Closed issue \"NuGetFramework copy constructor does not create an equivalent frameworks\" (#9849) at NuGet/Home","RelatedBody":"This leads to ATF getting created with the wrong base framework and to an incorrect framework being used forrestore.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/e09cdc8a877737addb01eeb90d5ea2bd9433ac52/src/NuGet.Core/NuGet.Frameworks/AssetTargetFallbackFramework.cs#L52\r\n\r\nRepros anytime you use ATF + framework with a platform. "},{"Id":"13046964699","Type":"IssuesEvent","CreatedAt":"2020-07-29T09:52:27","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9860","RelatedDescription":"Opened issue \"[Test Failure] VS gave a wrong constraint warning when there are no package constraint in the packages.config file after updating packages \" (#9860) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6753\r\nVS Version: Master\\30328.112\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tOpen VS, click “Create a new project” button and search template “ASP.NET Web Site (Razor v3)” in the filter.\r\n2.\tCreate the project, open the PM UI of the project and go to the “Updates” tab.\r\n3.\tCheck “select all packages” and click “Update” button.\r\n4.\tBuild the project.\r\n## Expected\r\nThere is no warning.\r\n## Actual\r\nThere is a wrong constraint warning since there are no package constraint in the packages.config file as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/88785603-feb00d80-d1c3-11ea-8100-f983c7f91f5b.png)\r\n## Note\r\n1.\tIt didn’t repro on D16.7\\30323.103 with Implicit NuGet Client Release-5.7.x\\5.7.0.6726.\r\n\r\n"},{"Id":"13045628291","Type":"IssuesEvent","CreatedAt":"2020-07-29T07:37:41","Actor":"DhanvannthVP","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9859","RelatedDescription":"Opened issue \"Nuget pack issue\" (#9859) at NuGet/Home","RelatedBody":"\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.5\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nWhen i tried to use nuget pack -ConfigFile \"Nuget.config\" ABC.sln -Prop Configuration=Release -Symbols \r\nIt s including src folder inside nupkg file. I dont need to exclude the src folder. Is there anything i need to do with Nuget.config file. Kindly advise\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13044365499","Type":"IssuesEvent","CreatedAt":"2020-07-29T04:27:31","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9858","RelatedDescription":"Closed issue \"NuGet does not respect TreatWarningsAsErrors\" (#9858) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet restore is not respecting `<TargetWarningsAsErrors>`\r\n\r\nVS: Version 16.8.0 Preview 1.0 [30323.161.master]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nGiven:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"9.0.1\" />\r\n    <PackageReference Include=\"Newtonsoft.Json.Bson\" Version=\"1.0.2\" />\r\n    \r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nExpected: A single warning\r\nActual: A single error\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1605\tDetected package downgrade: Newtonsoft.Json from 12.0.1 to 9.0.1. Reference the package directly from the project to select a different version. \r\n ConsoleApp56 -> Newtonsoft.Json.Bson 1.0.2 -> Newtonsoft.Json (>= 12.0.1) \r\n ConsoleApp56 -> Newtonsoft.Json (>= 9.0.1)\tConsoleApp56\tC:\\Users\\davkean\\source\\repos\\ConsoleApp56\\ConsoleApp56\\ConsoleApp56.csproj\t1\t\r\n\r\n\r\n```\r\n\r\nLooking at the assets file, its being marked as an error:\r\n\r\n```\r\n  \"logs\": [\r\n    {\r\n      \"code\": \"NU1605\",\r\n      \"level\": \"Error\",\r\n      \"message\": \"Detected package downgrade: Newtonsoft.Json from 12.0.1 to 9.0.1. Reference the package directly from the project to select a different version. \\r\\n ConsoleApp56 -> Newtonsoft.Json.Bson 1.0.2 -> Newtonsoft.Json (>= 12.0.1) \\r\\n ConsoleApp56 -> Newtonsoft.Json (>= 9.0.1)\",\r\n      \"libraryId\": \"Newtonsoft.Json\",\r\n      \"targetGraphs\": [\r\n        \".NETCoreApp,Version=v3.1\"\r\n      ]\r\n    }\r\n```\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13044335289","Type":"IssuesEvent","CreatedAt":"2020-07-29T04:21:31","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9858","RelatedDescription":"Opened issue \"NuGet does not respect TreatWarningsAsErrors\" (#9858) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet restore is not respecting `<TargetWarningsAsErrors>`\r\n\r\nVS: Version 16.8.0 Preview 1.0 [30323.161.master]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nGiven:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"9.0.1\" />\r\n    <PackageReference Include=\"Newtonsoft.Json.Bson\" Version=\"1.0.2\" />\r\n    \r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nExpected: A single warning\r\nActual: A single error\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1605\tDetected package downgrade: Newtonsoft.Json from 12.0.1 to 9.0.1. Reference the package directly from the project to select a different version. \r\n ConsoleApp56 -> Newtonsoft.Json.Bson 1.0.2 -> Newtonsoft.Json (>= 12.0.1) \r\n ConsoleApp56 -> Newtonsoft.Json (>= 9.0.1)\tConsoleApp56\tC:\\Users\\davkean\\source\\repos\\ConsoleApp56\\ConsoleApp56\\ConsoleApp56.csproj\t1\t\r\n\r\n\r\n```\r\n\r\nLooking at the assets file, its being marked as an error:\r\n\r\n```\r\n  \"logs\": [\r\n    {\r\n      \"code\": \"NU1605\",\r\n      \"level\": \"Error\",\r\n      \"message\": \"Detected package downgrade: Newtonsoft.Json from 12.0.1 to 9.0.1. Reference the package directly from the project to select a different version. \\r\\n ConsoleApp56 -> Newtonsoft.Json.Bson 1.0.2 -> Newtonsoft.Json (>= 12.0.1) \\r\\n ConsoleApp56 -> Newtonsoft.Json (>= 9.0.1)\",\r\n      \"libraryId\": \"Newtonsoft.Json\",\r\n      \"targetGraphs\": [\r\n        \".NETCoreApp,Version=v3.1\"\r\n      ]\r\n    }\r\n```\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13043012620","Type":"IssuesEvent","CreatedAt":"2020-07-29T00:11:57","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9857","RelatedDescription":"Opened issue \"Cleaning up old binding redirects\" (#9857) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1092773/cleaning-up-old-binding-redirects.html)._\n\n---\nOver time the config files of my solution got a lot of obsolete binding redirects. To clean them up I had to manually remove the existing redirects and then run on the nuget powershell the command Add-BindingRedirect\n\nwanting to automate the process for all my projects in the solution, I found the code here very helpful\nhttps://martowen.com/2018/09/12/refreshing-net-assembly-binding-redirects-in-a-visual-studio-solution/\n\nPlease add to the nuget powershell a command like Remove-BindingRedirect in the URL above so this can be done within VS built-in commands and not rely on 3rd party code\n\nAnother option would be to enhance the Add-BindingRedirect command with a parameter that will instruct it to remove all existing redirects before executing\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/27/2020, 11:52 PM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-31T05:30:41.361269Z","RunDurationInMilliseconds":2084}