{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31071768086","Type":"IssuesEvent","CreatedAt":"2023-08-12T02:21:51","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9616","RelatedDescription":"Closed issue \"[NuGet.org Bug]: It is very slow to load the package details page for packages with many versions\" (#9616) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIt takes seconds to load the package details page for packages with many versions.\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/packages/AWSSDK.Core.\r\n2. It takes seconds to load this page.\n\n### Expected Behavior\n\nAs more and more package versions are published, loading all package versions may not be an ideal UI experience.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31071766452","Type":"IssuesEvent","CreatedAt":"2023-08-12T02:21:38","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9616","RelatedDescription":"Closed issue \"[NuGet.org Bug]: It is very slow to load the package details page for packages with many versions\" (#9616) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIt takes seconds to load the package details page for packages with many versions.\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/packages/AWSSDK.Core.\r\n2. It takes seconds to load this page.\n\n### Expected Behavior\n\nAs more and more package versions are published, loading all package versions may not be an ideal UI experience.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31040272995","Type":"IssuesEvent","CreatedAt":"2023-08-10T18:16:15","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9616","RelatedDescription":"Reopened issue \"[NuGet.org Bug]: It is very slow to load the package details page for packages with many versions\" (#9616) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIt takes seconds to load the package details page for packages with many versions.\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/packages/AWSSDK.Core.\r\n2. It takes seconds to load this page.\n\n### Expected Behavior\n\nAs more and more package versions are published, loading all package versions may not be an ideal UI experience.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31039117319","Type":"PullRequestEvent","CreatedAt":"2023-08-10T17:23:49","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9614","RelatedDescription":"Merged pull request \"Make search collapsible\" (#9614) at NuGet/NuGetGallery","RelatedBody":"I made the advanced search collapsible on narrow screens.\r\n\r\nBefore:\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/58230697/7be0bf38-cb88-44b4-8a75-c12148666866)\r\n\r\n\r\nAfter:\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/58230697/b8f08692-94ed-46f8-9d34-5dba8549ba63)\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/58230697/8cc48514-f149-46b9-8d93-e55091c6c947)\r\n\r\nThere are details in the problem description that I didn't change (removing sort-by and putting filters below packages returned) because I talked with PM and designers and we didn't find these changes useful.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9374ery/issues/123"},{"Id":"31016764254","Type":"IssuesEvent","CreatedAt":"2023-08-09T23:29:25","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9616","RelatedDescription":"Opened issue \"[NuGet.org Bug]: It is very slow to load the package details page for packages with many versions\" (#9616) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIt takes seconds to load the package details page for packages with many versions.\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/packages/AWSSDK.Core.\r\n2. It takes seconds to load this page.\n\n### Expected Behavior\n\nAs more and more package versions are published, loading all package versions may not be an ideal UI experience.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"31086830527","Type":"IssuesEvent","CreatedAt":"2023-08-13T18:55:54","Actor":"rambotech","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12811","RelatedDescription":"Opened issue \"NuGet Package not being built in Visual Studio 2022 or on Github actions\" (#12811) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nmsbuild 17.7.2.37605\n\n### Worked before?\n\nunknown\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nTo make things simple to reproduce, clone the master branch from this repository which is having the problem:  https://github.com/rambotech/BOG.Framework\r\n\r\nThe Framework project has the <GeneratePackageOnBuild>true</GeneratePackageOnBuild> node in the project file.  The project also has a Nuspec file for the package.  Visual Studio 2022 will build the project with no errors, and previously the package file would appear as BOG.Framework.*.nupkg in bin/release.  Note: This is a .NET Framework 4.8.1 project, previously targeting 4.7.2 ... but neither target created the nupkg file in Visual Studio 2022.\r\n\r\nThe project also has Actions in the Github repo, which are looking for output in Framework/bin/release, but find none.  Locally, I get no package looking for *.nupkg (dir {repo_root}\\*.nupkg /s /b) after building in 2022.\r\n\r\nFor comparison, I have another project on GitHub which targets .NET 7, but the 2 projects generating nuget packages target .NET Standard 2.1, have the same GeneratePackageOnBuild node in their projects, and do generate their nuget packages in the bin/release folders.   See: https://github.com/rambotech/BOG.DropZone\r\n\r\nI've exhausted my options, so... help, please.\n\n### Verbose Logs\n\n```shell\nlogs can be obtained locally from the source code.\n```\n"},{"Id":"31071010569","Type":"IssuesEvent","CreatedAt":"2023-08-12T00:34:52","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12806","RelatedDescription":"Closed issue \"Can't add New Scaffold Identity\" (#12806) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nC:\\Users\\Nguyen Tuan Anh>dotnet --info .NET SDK:  Version:   8.0.100-preview.7.23376.3  Commit:    daebeea8ea  Runtime Environment:  OS Name:     Windows  OS Version:  10.0.19045  OS Platform: Windows  RID:         win10-x64  Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100-preview.7.23376.3\\  .NET workloads installed: There are no installed workloads to display.  Host:   Version:      8.0.0-preview.7.23375.6   Architecture: x64   Commit:       65b696cf5e   RID:          win-x64  .NET SDKs installed:   7.0.305 [C:\\Program Files\\dotnet\\sdk]   8.0.100-preview.6.23330.14 [C:\\Program Files\\dotnet\\sdk]   8.0.100-preview.7.23376.3 [C:\\Program Files\\dotnet\\sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0-preview.6.23329.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0-preview.7.23375.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0-preview.6.23329.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0-preview.7.23375.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.WindowsDesktop.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.0-preview.6.23329.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.0-preview.7.23376.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]  Other architectures found:   x86   [C:\\Program Files (x86)\\dotnet]     registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]  Environment variables:   Not set  global.json file:   Not found  Learn more:   https://aka.ms/dotnet/info  Download .NET:   https://aka.ms/dotnet/download  C:\\Users\\Nguyen Tuan Anh>\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI have try to create new WebApp MVC.\r\nThen I Add Scaffold Item-> Add Identity.\r\nBut I failed.\r\n\r\nI Have try:\r\n- Add Package Microsoft.VisualStudio.Web.CodeGeneration.Design on Manage Nuget Package \r\nAnd I found\r\nMicrosoft.VisualStudio.Web.CodeGeneration.Design Version 8.0.0-preview.6.23360.4 \r\nBut Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore\" Version=\"8.0.0-preview.7.23375.9\r\nAnd I see the Error:\r\n![image](https://github.com/NuGet/Home/assets/18616693/4398613f-c8bc-46b9-b105-c3d35b542f26)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31070518184","Type":"PullRequestEvent","CreatedAt":"2023-08-11T23:34:10","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12810","RelatedDescription":"Opened pull request \"Spec for Package Source Mapping Package Management Actions in the PM UI\" (#12810) at NuGet/Home","RelatedBody":"Package Source Mapping Package Management Actions in the PM UI ([shortcut to rendered spec](https://github.com/NuGet/Home/blob/dev-donnie-msft-specSourceMappingActionSpec/proposed/2023/package-source-mapping-actions-PMUI.md))\r\n\r\nSpec for: https://github.com/NuGet/Home/issues/11366\r\nImplementation PR: https://github.com/NuGet/NuGet.Client/pull/5355"},{"Id":"31070504399","Type":"PullRequestEvent","CreatedAt":"2023-08-11T23:32:26","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12616","RelatedDescription":"Closed pull request \"[Draft] Spec for Package Source Mapping Actions in PM UI\" (#12616) at NuGet/Home","RelatedBody":"[Draft] Package Source Mapping Package Management Actions in the PM UI ([shortcut to rendered spec](https://github.com/NuGet/Home/blob/dev-donnie-msft-specSourceMappingActionSpec/proposed/2023/package-source-mapping-actions-PMUI.md))\r\n\r\nSpec for: https://github.com/NuGet/Home/issues/11366\r\n  - Marked Draft as there are questions about how we should proceed \r\n  - Various edge cases are unclear"},{"Id":"31069494786","Type":"IssuesEvent","CreatedAt":"2023-08-11T21:57:47","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12786","RelatedDescription":"Closed issue \"Opt-out of \"HTTP warning/error\" : add an allowInsecureConnections property in NuGet.Config\" (#12786) at NuGet/Home","RelatedBody":"We need to add an `allowInsecureConnections` property into `packageSources` section in NuGet.Config files, as below:\r\n```\r\n<!-- Allows insecure connections on a specific http source -->\r\n<packageSources>\r\n    <add key=\"Contoso\" value=\"http://contoso.com/packages/\" allowInsecureConnections=\"true\" />\r\n</packageSources>\r\n```\r\nSpec: https://github.com/NuGet/Home/blob/dev/proposed/2023/InsecureConnectionsDisableCertificateValidation.md#package-source-nuget-config\r\n"},{"Id":"31065912275","Type":"IssuesEvent","CreatedAt":"2023-08-11T18:18:38","Actor":"bansalsushant","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12809","RelatedDescription":"Opened issue \"Nuget package sources missing from Visual Studio\" (#12809) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nVisual Studio 2022\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nHi,\r\n\r\n\r\nI am from the MSIX/App Streaming team, and we have built a plugin for Visual Studio.\r\n\r\n\r\nDuring testing – we have come across this weird issue that nuget package source has been missing sometimes from Visual Studio. I setup a fresh Visual Studio 2022 community and faced this issue. Someone else also reported the same.\r\n\r\nI was able to fix it by manually adding nuget package source but I am not sure if everyone will do that.\r\n\r\n\r\nI also came across a stackoverflow thread where developers have reported the same issue. [c# - NuGet package sources missing - Stack Overflow](https://stackoverflow.com/questions/69045231/nuget-package-sources-missing)\r\n\r\nIs this the expected behaviour? If not, can someone please look into this?\n\n### Verbose Logs\n\n_No response_"},{"Id":"31054582677","Type":"IssuesEvent","CreatedAt":"2023-08-11T09:52:26","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12807","RelatedDescription":"Opened issue \"[Bug Bash] The “Open” button is enabled automatically after reopening the “Configuration Files” dialog\" (#12807) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.8.0.60\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1.Create a project in VS and open the PM UI or PMC window.\r\n2.Click the settings button (gear button) on PM UI or PMC window.\r\n3.Click the NuGet Package Manager->Configuration Files in the opened “Options” dialog.\r\n4.Click a config file in the “Configuration Files” list and close this dialog.\r\n5.Click the settings button (gear button) again and click “Open” button.\r\n#### Expected:\r\nThe “Open” button should be disabled because no configuration file is selected when reopening the dialog in step5.\r\n#### Actual:\r\nThe “Open” button is enabled automatically and nothing is opened after clicking the “Open” button in step5.\r\n![image](https://github.com/NuGet/Home/assets/20632625/b82c3ce2-0732-4584-a232-7934bd5a98f4)\r\n#### Note:\r\nIt's not a regression since it is a new feature.\n\n### Verbose Logs\n\n_No response_"},{"Id":"31053960907","Type":"IssuesEvent","CreatedAt":"2023-08-11T09:24:50","Actor":"nguyentuananh921","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12806","RelatedDescription":"Opened issue \"Can't add New Scaffold Identity\" (#12806) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nC:\\Users\\Nguyen Tuan Anh>dotnet --info .NET SDK:  Version:   8.0.100-preview.7.23376.3  Commit:    daebeea8ea  Runtime Environment:  OS Name:     Windows  OS Version:  10.0.19045  OS Platform: Windows  RID:         win10-x64  Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100-preview.7.23376.3\\  .NET workloads installed: There are no installed workloads to display.  Host:   Version:      8.0.0-preview.7.23375.6   Architecture: x64   Commit:       65b696cf5e   RID:          win-x64  .NET SDKs installed:   7.0.305 [C:\\Program Files\\dotnet\\sdk]   8.0.100-preview.6.23330.14 [C:\\Program Files\\dotnet\\sdk]   8.0.100-preview.7.23376.3 [C:\\Program Files\\dotnet\\sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0-preview.6.23329.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0-preview.7.23375.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0-preview.6.23329.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0-preview.7.23375.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.WindowsDesktop.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.0-preview.6.23329.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.0-preview.7.23376.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]  Other architectures found:   x86   [C:\\Program Files (x86)\\dotnet]     registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]  Environment variables:   Not set  global.json file:   Not found  Learn more:   https://aka.ms/dotnet/info  Download .NET:   https://aka.ms/dotnet/download  C:\\Users\\Nguyen Tuan Anh>\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI have try to create new WebApp MVC.\r\nThen I Add Scaffold Item-> Add Identity.\r\nBut I failed.\r\n\r\nI Have try:\r\n- Add Package Microsoft.VisualStudio.Web.CodeGeneration.Design on Manage Nuget Package \r\nAnd I found\r\nMicrosoft.VisualStudio.Web.CodeGeneration.Design Version 8.0.0-preview.6.23360.4 \r\nBut Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore\" Version=\"8.0.0-preview.7.23375.9\r\nAnd I see the Error:\r\n![image](https://github.com/NuGet/Home/assets/18616693/4398613f-c8bc-46b9-b105-c3d35b542f26)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31030054701","Type":"IssuesEvent","CreatedAt":"2023-08-10T11:52:22","Actor":"davidnemeti","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12804","RelatedDescription":"Opened issue \"NuGet restore ignores build folder of consumed nuget package when buildTransitive folder is also present\" (#12804) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nMSBuild version 17.6.3.22601, Visual Studio 2022 Version 17.6.6, nuget.exe 6.0.0.280\n\n### Worked before?\n\nAs far as I know, it has never worked.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n### Issue Description\r\n\r\nWhen building a project which consumes a `MyPackage` nuget package with both `build` and `buildTransitive` folders present, MSBuild does not import the `MyPackage.targets` file from **`build`** folder (or at least its `target`s do not get executed), but imports only the `MyPackage.targets` file from **`buildTransitive`** folder.\r\n\r\n### Steps to Reproduce\r\n\r\nThe **consumer project**'s `Consumer.csproj`:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MyPackage\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyPackage.csproj`:\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <PackageId>MyPackage</PackageId>\r\n    <Version>1.0.0</Version>\r\n    <Authors>your_name</Authors>\r\n    <Company>your_company</Company>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <None Include=\"MyBuild.targets\" Pack=\"true\" PackagePath=\"build/$(PackageId).targets\" />\r\n    <None Include=\"MyBuildTransitive.targets\" Pack=\"true\" PackagePath=\"buildTransitive/$(PackageId).targets\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuild.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuild\">\r\n  <Target Name=\"MyInitBuild\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuild\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuildTransitive.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuildTransitive\">\r\n  <Target Name=\"MyInitBuildTransitive\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuildTransitive\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nNote that `MyBuild.targets`'s target (`MyInitBuild`) and `MyBuildTransitive.targets`'s target (`MyInitBuildTransitive`) have different names, so **there is no target name collision** which could cause that only one of these targets are executed.\r\n\r\n### Expected Behavior\r\n\r\nI expect that both `MyBuild.targets` file and `MyBuildTransitive.targets` file are imported into the consumer project, thus both `MyInitBuild` target and `MyInitBuildTransitive` target are executed, so when building the consumer project the build output has both the `MyInitBuild` message and the `MyInitBuildTransitive` messages (the order does not matter).\r\n\r\nSo the build output should be either:\r\n```\r\nMyInitBuild\r\nMyInitBuildTransitive\r\n```\r\n\r\nor:\r\n```\r\nMyInitBuildTransitive\r\nMyInitBuild\r\n```\r\n\r\n### Actual Behavior\r\n\r\nIt seems that only `MyBuildTransitive.targets` file is imported into the consumer project, or at least only `MyInitBuildTransitive` target is executed, so the build output has only the `MyInitBuildTransitive` message.\r\n\r\n\r\n### Analysis\r\n\r\nThe problem seems to be that **`nuget restore`** creates a **`Consumer.csproj.nuget.g.targets`** in `Consumer` project's `out` folder, which only imports `buildTransitive\\MyPackage.targets`, but does not import `build\\MyPackage.targets`.\r\n\r\nCurrent `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\r\n`Consumer.csproj.nuget.g.targets` should import both `build\\MyPackage.targets` and `buildTransitive\\MyPackage.targets`.\r\n\r\nDesired `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets')\" />\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31012278365","Type":"IssuesEvent","CreatedAt":"2023-08-09T19:12:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12424","RelatedDescription":"Closed issue \"NU5104 (stable package should not use prerelease) should not warn when upper version uses -0\" (#12424) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nall\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nNU5104 basically says that SemVer stable versions of packages should not take dependencies on prelreease versions of packages. According to https://github.com/NuGet/Home/issues/6434#issuecomment-1323572424 this warning triggers when the version range `[1.0.0, 2.0.0-0)` is specified.\r\n\r\nHowever, and upper exclusive range of `2.0.0-0` explicitly means that no pre-release version of 2.0.0 will match since `-0` is the lowest possible prerelease version, and exclusive bound means that it won't allow the exact match. Therefore, the `-0` and the NU5104 are trying to achieve the exact same thing, so it shouldn't be warning.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31008149119","Type":"IssuesEvent","CreatedAt":"2023-08-09T16:08:57","Actor":"DaleMckeown","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12803","RelatedDescription":"Opened issue \"CPM - Provide option to explicitly use version tags\" (#12803) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Current Behavior\n\nCurrently, when CPM is used and new NuGet packages are added to a solution, the `Version` attribute is added to the `PackageReference` in the `Directory.Packages.props` file.\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\" Version=\"7.0.10\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nWhen it comes to git usage, this causes issues when dependency updating tools such as Dependabot are used, because git uses the line before and after to detect changes. If consecutive packages are updated in the same Dependabot run, this will cause merge conflicts, which require manual intervention to fix.\n\n### Desired Behavior\n\nThe git conflicts are really easy to fix by explicitly using version tags in the package reference, like so:\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\">\r\n      <Version>7.0.10</Version>\r\n    </PackageVersion>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nWhen adding new packages to a solution, we have to remember to manually amend the package references to this format. It would be better if we could specify a flag that would enforce NuGet to use the explicit version tags automatically, instead of using the inline string.\r\n\r\nA property such as `UseExplicitPackageVersionTags` could be used to enable this behaviour.\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <UseExplicitPackageVersionTags>true</UseExplicitPackageVersionTags>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\">\r\n      <Version>7.0.10</Version>\r\n    </PackageVersion>\r\n  </ItemGroup>\r\n</Project>\r\n```\n\n### Additional Context\n\nThis would improve the developer experience for CPM users, where package update processes are in place."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-14T03:30:22.6980136Z","RunDurationInMilliseconds":1169}