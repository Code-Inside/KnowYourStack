{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24340184491","Type":"IssuesEvent","CreatedAt":"2022-10-01T15:58:43","Actor":"KennethDotNet","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9265","RelatedDescription":"Opened issue \"[Feature]: Sign up / pay for licences when using opensource projects in medium to big enterprise companies\" (#9265) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI work for a small company and sometimes we come over projects (like dueende and epplus and more) where I would like to pay licences directly to the OSS when downloading the nuget package.  In azure devops we could ha a licence collection for the company.  Microsoft/Nuget could bill the company over the azure bill (even taking a handling fee, which we would gladly pay for making it easy for both the company and the oss project). \n\n### The Elevator Pitch\n\nIf nuget worked like an app store it would greatly help OSS projects to collect licences fees from companies. Nuget would enable OSS project to actually make a living of their passion.  Companies needs to support OSS by paying licences when having the revenue to do so. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"24333194873","Type":"IssuesEvent","CreatedAt":"2022-09-30T21:46:54","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9264","RelatedDescription":"Opened issue \"[Feature]Front Page announcement tools\" (#9264) at NuGet/NuGetGallery","RelatedBody":"Let's create an admin tool to enable dynamically updating the Front page without having to redeploy the entire service."},{"Id":"24330387501","Type":"IssuesEvent","CreatedAt":"2022-09-30T18:49:11","Actor":"taori","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9262","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Prerelease sorting works in an unexpected way.\" (#9262) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nImagine we have 2 packages \r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha9\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha11\r\n\r\n9 is considered most recent \r\n\r\nI am willing to contribute a fix btw.\r\n\r\nThis also affects the integration within VS Nuget - providing the wrong packages.\r\n\n\n### Repro Steps\n\nSee description\n\n### Expected Behavior\n\nwith these urls:\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/latest\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/latest/prerelease\r\n\r\ni would expect alpha 11 to be the latest package (assuming there are no release packages) for all 3 of those urls.\r\n\r\nIdeally each sequence of numerics, alphabet and non alphanumerics creates a pattern group resulting in a sorting schema of \r\n\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-beta4.1\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-beta1.5\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-alpha1.5\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.13\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.12\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.4\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha11\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha9\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24330256073","Type":"PullRequestEvent","CreatedAt":"2022-09-30T18:41:29","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9261","RelatedDescription":"Merged pull request \"Refactored PackageService code for use by Search-by-TFM\" (#9261) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4577\r\n\r\nWe need to reuse some asset framework logic from PackageService in NuGet.Jobs' Catalog2AzureSearch for Search-by-TFM, and moving this logic to NuGetGallery.Core would allow us to reuse this code with minimal changes.\r\n\r\nThis change:\r\n* Creates the AssetFrameworkHelper, which now holds the asset framework logic in its GetAssetFrameworks method\r\n* Redirects the previous GetSupportedFrameworks method in PackageService (NuGetGallery.Services) to this logic\r\n\r\nAll previous tests passed after this change."},{"Id":"24330036042","Type":"IssuesEvent","CreatedAt":"2022-09-30T18:28:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8128","RelatedDescription":"Closed issue \"Migrate to new Azure Search SDK\" (#8128) at NuGet/NuGetGallery","RelatedBody":"Consider migrating to [`Azure.Search.Documents`](https://www.nuget.org/packages/Azure.Search.Documents/) for improved performance and easier authentication."},{"Id":"24329755516","Type":"IssuesEvent","CreatedAt":"2022-09-30T18:12:40","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8863","RelatedDescription":"Closed issue \"Create an Engineering Spec for Phase 1 of Search-by-TFM\" (#8863) at NuGet/NuGetGallery","RelatedBody":"Design Spec:\r\n- [ ] Coordinate with PMs on Design Spec for Phase 1 (Daniel will work on this)\r\n- [x] Address Open Questions with Daniel and Jon\r\n- [ ] Get Sign off from Client team and Dotnet PM\r\n\r\nTechnical Spec:\r\n- [ ] Create an engineering spec for Phase 1 of the feature, have it reviewed and vetted by the team (Spec review meeting/async review)"},{"Id":"24321039829","Type":"IssuesEvent","CreatedAt":"2022-09-30T10:45:16","Actor":"donet5","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9263","RelatedDescription":"Closed issue \"[NuGet.org Bug]: \tan hour ago by jhl52771\tValidating\t\" (#9263) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\r\n\n\n### Repro Steps\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\n\n### Additional Context and logs\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n"},{"Id":"24318989944","Type":"IssuesEvent","CreatedAt":"2022-09-30T09:02:23","Actor":"donet5","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9263","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \tan hour ago by jhl52771\tValidating\t\" (#9263) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\r\n\n\n### Repro Steps\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n\n\n### Additional Context and logs\n\n![image](https://user-images.githubusercontent.com/12455385/193233638-c6e45e52-e311-486c-b908-61a3947e70cf.png)\r\nhttps://www.nuget.org/packages/SqlSugarCore/5.1.3.23-preview05\r\n"},{"Id":"24312563380","Type":"IssuesEvent","CreatedAt":"2022-09-30T00:56:09","Actor":"taori","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9262","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Prerelease sorting works in an unexpected way.\" (#9262) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nImagine we have 2 packages \r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha9\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha11\r\n\r\n9 is considered most recent \r\n\r\nI am willing to contribute a fix btw.\r\n\r\nThis also affects the integration within VS Nuget - providing the wrong packages.\r\n\n\n### Repro Steps\n\nSee description\n\n### Expected Behavior\n\nwith these urls:\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/latest\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/latest/prerelease\r\n\r\ni would expect alpha 11 to be the latest package (assuming there are no release packages) for all 3 of those urls.\r\n\r\nIdeally each sequence of numerics, alphabet and non alphanumerics creates a pattern group resulting in a sorting schema of \r\n\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-beta4.1\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-beta1.5\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-alpha1.5\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.13\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.12\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.4\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha11\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha9\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24310248002","Type":"IssuesEvent","CreatedAt":"2022-09-29T21:27:57","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9161","RelatedDescription":"Closed issue \"[Deployment] 2022.07.11\" (#9161) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n## Changes\r\n* https://github.com/NuGet/NuGetGallery/pull/9148\r\n\r\n## Progress\r\n* [x] Release: https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1360406\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD"},{"Id":"24310236171","Type":"IssuesEvent","CreatedAt":"2022-09-29T21:27:09","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8632","RelatedDescription":"Closed issue \"[README] Add support for syntax highlighting\" (#8632) at NuGet/NuGetGallery","RelatedBody":"Currently syntax blocks are not highlighted:\r\n\r\n![image](https://user-images.githubusercontent.com/1697911/121598946-3d733e80-c9f7-11eb-920a-5400380489c6.png)\r\n\r\nWould be great to enable syntax highlighting."},{"Id":"24306055337","Type":"IssuesEvent","CreatedAt":"2022-09-29T17:31:25","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9215","RelatedDescription":"Closed issue \"[Feature]: Add F# support to the new Syntax Highlighting feature\" (#9215) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\r\n\r\nThe new README syntax highlighting is great, but a .NET Language isn't supported for it: F#. I'd really like for all of my F# sample code to be highlighted just like other languages.\r\n\r\n\r\n\r\n### The Elevator Pitch\r\n\r\nThat's because the F# syntax isn't bundled with the default bundle of highlight.js. It should be very easy to add the necessary CDN extension for F# (https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/languages/fsharp.min.js), and I think all .NET languages should enjoy first-class support on NuGet.org.\r\n\r\n### Additional Context and Details\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24338991792","Type":"IssuesEvent","CreatedAt":"2022-10-01T13:01:26","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12046","RelatedDescription":"Closed issue \"System.Data.HashFunction.**** is giving Nuget Warning: NU3005\" (#12046) at NuGet/Home","RelatedBody":"Whenever we try to import the following nugets, it was resulting in nuget warning. \r\nError: ##[error]The nuget command failed with exit code(1) and error(NU3005: Package 'System.Data.HashFunction.Interfaces 2.0.0' from source '---: The package signature file entry is invalid. The central directory header field 'compression method' has an invalid value (8).\r\n\r\nNugets: \r\n<PackageReference Include=\"System.Data.HashFunction.Core\" Version=\"$(SystemDataHashFunction)\" NoWarn=\"NU3005\" />\r\n<PackageReference Include=\"System.Data.HashFunction.xxHash\" Version=\"$(SystemDataHashFunction)\" NoWarn=\"NU3005\" />\r\n<PackageReference Include=\"System.Data.HashFunction.Interfaces\" Version=\"$(SystemDataHashFunction)\" NoWarn=\"NU3005\" />\r\n\r\nSo these nuget warnings had to be suppressed manually.\r\n\r\n"},{"Id":"24333308887","Type":"IssuesEvent","CreatedAt":"2022-09-30T21:56:43","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11326","RelatedDescription":"Closed issue \"[Bug]: Some CLI commands don't respect DOTNET_CLI_UI_LANGUAGE\" (#11326) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n5.0.302\n\n### Worked before?\n\nNot sure\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\nI've set the `DOTNET_CLI_UI_LANGUAGE` env variable to `en-us`, and `dotnet --info` is displaying in English. However, some commands like `dotnet restore` still \"speak\" Chinese, which is the language of my local machine.\r\n\r\n### To Reproduce\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\n1. Create an class library using `dotnet new classlib -n Infrastructure`\r\n2. View the output:\r\n```sh\r\n> dotnet new classlib -n Infrastructure\r\nThe template \"Class library\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on Infrastructure\\Infrastructure.csproj...\r\n  正在确定要还原的项目…\r\n  所有项目均是最新的，无法还原。\r\nRestore succeeded.\r\n```\r\n\r\n### Exceptions (if any)\r\n<!-- \r\nInclude the exception you get when facing this issue\r\n-->\r\n\r\nThe info should all be in English.\r\n\r\n### Further technical details\r\n- Include the output of `dotnet --info`\r\n\r\n```sh\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.302\r\n Commit:    c005824e35\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19043\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.302\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0-preview.7.21377.19\r\n  Commit:  91ba01788d\r\n\r\n.NET SDKs installed:\r\n  5.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.302 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.100-preview.7.21379.14 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.0-preview.7.21378.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]     \r\n  Microsoft.NETCore.App 2.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.0-preview.7.21377.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.0-preview.7.21378.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version\r\n\r\nVS Code 1.60.1\r\n\r\n**Remarks**:\r\nI have a global.json to pin the dotnet version used.\r\n\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"5.0.302\"\r\n  }\r\n}\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"24310838401","Type":"IssuesEvent","CreatedAt":"2022-09-29T22:11:12","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12026","RelatedDescription":"Closed issue \"[Bug]: Remove check for nugetrecommendpkgs flight in 17.2\" (#12026) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.2\n\n### Worked before?\n\nWill stop working after VS 17.4 release\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWe will stop using the nugetrecommendpkgs flight starting after VS 17.4 release, so we also need to remove the check for the nugetrecommendpkgs flight in previous LTS versions.\n\n### Verbose Logs\n\n_No response_"},{"Id":"24305707710","Type":"IssuesEvent","CreatedAt":"2022-09-29T17:13:14","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12102","RelatedDescription":"Closed issue \"[Bug]: The transitive package doesn’t show in “Installed” tab until reopening the solution\" (#12102) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.4.0.92\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n## Repro steps: \r\n1.  Set the environment Variable NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI=1.\r\n2. Create a new C# Console App (.Net Core) project.\r\n3. Right-click the project in Solution Explorer and select ‘Manage NuGet Packages…’ menu item to open PM UI. \r\n 4. Click “Browse” tab, search a package (e.g. “Microsoft.EntityFrameworkCore”) that has dependencies, select a package version [6.0.4] in the \"Version\" drop-down list in the right panel and click the “Install” button on the right.\r\n5. Switch to “Installed” tab.\r\n\r\n## Expected:\r\nThe transitive package should show in “Installed” tab.\r\n\r\n## Actual:\r\nThe transitive package doesn’t show in “Installed” tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/191237740-12394cc1-993a-4a62-b872-9c40c42ff462.png)\r\n\r\n## Notes: \r\n1. The transitive package can be show in “Installed” tab after closing solution/VS and reopening the same solution.\r\n2. The issue starts from NuGet Client Dev\\6.4.0.90.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"24305443364","Type":"IssuesEvent","CreatedAt":"2022-09-29T16:59:38","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12115","RelatedDescription":"Closed issue \"[Bug]: dotnet list package --vulnerable --include-transitive does not report all vulnerable packages\" (#12115) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet v6.0.401\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIf the vulnerability check doesn't report known vulnerabilities then we can't notify users that they need to upgrade their version of our software to mitigate the risk.\r\n\r\n### Repro Steps & Context\r\n\r\nMySql.Data v8.0.24 uses 2 transitive packages with security vulnerabilities:\r\n\r\n1) BouncyCastle v1.85 has security vulnerability [CVE-2020-15522](https://github.com/advisories/GHSA-6xx3-rg99-gc3p)\r\n2) Google.Protobuf [CVE-2021-22570](https://github.com/advisories/GHSA-77rm-9x9h-xj3g)\r\n\r\nTransitive Package for Google.Protobuf is reported, but not BouncyCastle\r\n\r\nTo Reproduce:\r\n1. Create a project that includes MySql.Data v8.0.24\r\n2. Run: dotnet list package --vulnerable --include-transitive\r\n\r\nOutput from tool\r\n[net48]:\r\nTransitive Package Resolved Severity Advisory URL\r\nGoogle.Protobuf 3.14.0 High https://github.com/advisories/GHSA-77rm-9x9h-xj3g\r\n\r\nNo mention of BouncyCastle\r\n\r\nOther details:\r\nAdvisory: https://github.com/advisories/GHSA-6xx3-rg99-gc3p\r\nBouncyCastle release notes: https://www.bouncycastle.org/csharp/\r\nNIST: https://nvd.nist.gov/vuln/detail/cve-2020-15522\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24295245053","Type":"IssuesEvent","CreatedAt":"2022-09-29T09:31:53","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12123","RelatedDescription":"Opened issue \"[Bug]: [Cross-platform Dotnet NuGet Sign] The message “Package(s) signed successfully” lost after signing a package successfully with “dotnet nuget sign” command on macOS\" (#12123) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK Version: 7.0.100-rc.1.22431.12\n\n### Worked before?\n\nWorked well on .NET SDK 6.0.400\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps\r\n1. Execute the [Dotnet nuget sign pre-step](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FDotnet%20nuget%20sign%20pre-step%7C708e56b6-a296-493e-a615-e0e18c55f96f%2F%29&wdorigin=703).\r\n2. On Windows: Create a new test certificate:  .\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile (in the powershell \"Developer Command Prompt\"). \r\n3. On macOS: Copy the .cer file and the .pfx file from the above Windows machine to macOS machine. \r\n4. Where <CertificateFilePath> is the file path to the long-lived .cer or .pem file and <VersionedSdkDirectoryPath> is the directory path for the patched versioned .NET SDK directory (e.g.:  ./patchedSDK/sdk/7.0.100), add trust for the certificate: \r\n    On macOS:  ./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> -vsd <VersionedSdkDirectoryPath> \r\n5. Use the patched \"dotnet.exe\" to sign a package. Where <PackageFilePath> is the test package path and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\nOn macOS:  ./patchedSDK ./dotnet nuget sign <PackageFilePath> --overwrite --certificate-path <PfxFilePath> --certificate-password password -v n\r\n\r\n#### Expected \r\nThere is a message “Package(s) signed successfully” after signing a package successfully.\r\n\r\n#### Actual\r\nThe message “Package(s) signed successfully” lost after signing a package successfully with “dotnet nuget sign” command on MacBook as below.\r\n![image](https://user-images.githubusercontent.com/20632625/192995784-b870257b-643a-47e1-b7ee-d80863a67ba3.png)\r\n#### Note\r\n1. It only repro on MacBook, doesn’t repro on Linux/Windows.\r\n2. It is not a regression.\n\n### Verbose Logs\n\n_No response_"},{"Id":"24287499119","Type":"IssuesEvent","CreatedAt":"2022-09-29T00:33:14","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9612","RelatedDescription":"Closed issue \"Cannot Step Into NuGet Source Code\" (#9612) at NuGet/Home","RelatedBody":"I'm going over some simple C# .NET Core code that deals with package dependencies, using the NuGet SDK itself (code [here](https://github.com/NuGet/Home/issues/6188)). So I've created a sample project in VS 2019 and used that code.\r\n\r\nI'd like to do a step-into with Visual Studio, to see exactly what NuGet methods are called, so need to make sure the symbols I'm using match whatever version the libraries the code uses. So I don't leave things to chance, and install the 5.6.0 version of the NuGet packages the code needs (`NuGet.Protocol` and `NuGet.DependencyResolver.Core`, with their required dependencies installed automatically) from VS's own Package Manager UI. I build the project, go to the `bin` folder and record the exact file version of the `NuGet.Protocol` .dll: 5.6.0.6591. I'm pretty sure the other assemblies included in the NuGet packages use the same version, based on the fact that there are dedicated Powershell scripts inside the NuGet's own tooling that look to rewrite the version when needed for all.\r\n\r\nI clone the `NuGet.Client` GitHub repo locally. I switch to the `5.6.0.6591` tag, and build using the instructions in the `CONTRIBUTING.md` file. I go to the `artifacts` folder, where each project has its output assemblies and symbol files. I add the path to both folders containing the files I'm after, going with `netstandard2.0` folder due to the framework I'm targeting (.NET Core). Casually looking over one of the .dll within, I notice that the file version is 5.6.0.41820, clearly different from what I was expecting. Sure enough, adding both folders (corresponding to the 2 NuGet packages) to the symbol path in VS doesn't have any effect - as stepping into the code doesn't even trigger the symbols loading, let alone go into the NuGet source code.\r\n\r\nAnother hint that things don't quite match what I expect is that the .nupkg packages created right at the end of the build process have a names such as `NuGet.Protocol.5.6.0-zlocal.41820.nupkg`.\r\n\r\nI'm pretty certain VS is configured to correctly process symbols, as I can step through .NET Core's own source code for methods invoked from the project mentioned above, after VS downloads automatically the required sources.\r\n\r\nIs there any way to step into the NuGet source code in the context above ? Or is it something I've got wrong in the whole setup ?"},{"Id":"24286657251","Type":"IssuesEvent","CreatedAt":"2022-09-28T23:12:13","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12121","RelatedDescription":"Closed issue \"[Bug]: Make static restore graph evaluation long path aware\" (#12121) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\nall versions since static restore added\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nUse the NUGET_PACKAGES environment variable, or `globalPackagesFolder` config in a `nuget.config` file to set the GPF to a path of around 200 characters long. Then, restore a project with `msbuild -t:restore -p:RestoreUseStaticGraphEvaluation=true` from a Developer PowerShell. Make sure the registry/group policy setting for long paths is enabled, and this restore will fail. But if you remove `-p:RestoreUseStaticGraphEvaluation=true` from the arguments, it will work.\n\n### Verbose Logs\n\n_No response_"},{"Id":"24285087787","Type":"IssuesEvent","CreatedAt":"2022-09-28T21:11:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11434","RelatedDescription":"Closed issue \"[Feature]: nuget CLI should know options \"--version\" and \"--help\"\" (#11434) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\nMy first invocations of brew-installed nuget (`brew install nuget`):\r\n```\r\n$ nuget --help\r\nUnknown command: '--help'\r\nNuGet.Commands.CommandException: Unknown command: '--help'\r\n  at NuGet.CommandLine.CommandManager.GetCommand (System.String commandName) [0x0004e] in <3468606d201847a5b9ffe12c0a3e91c9>:0 \r\n  at NuGet.CommandLine.CommandLineParser.ParseCommandLine (System.Collections.Generic.IEnumerable`1[T] commandLineArgs) [0x00016] in <3468606d201847a5b9ffe12c0a3e91c9>:0 \r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x0012b] in <3468606d201847a5b9ffe12c0a3e91c9>:0 \r\n```\r\n```\r\n$ nuget --version\r\nUnknown command: '--version'\r\nNuGet.Commands.CommandException: Unknown command: '--version'\r\n  at NuGet.CommandLine.CommandManager.GetCommand (System.String commandName) [0x0004e] in <3468606d201847a5b9ffe12c0a3e91c9>:0 \r\n  at NuGet.CommandLine.CommandLineParser.ParseCommandLine (System.Collections.Generic.IEnumerable`1[T] commandLineArgs) [0x00016] in <3468606d201847a5b9ffe12c0a3e91c9>:0 \r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x0012b] in <3468606d201847a5b9ffe12c0a3e91c9>:0 \r\n```\r\nYeah, that doesn't shine.\r\nSure I got the right `nuget`? \r\n\r\nJust any serious CLI will support `--help` and `--version`.  How difficult to implement is that?\n\n### Additional Context and Details\n\n```\r\n$ which nuget\r\n/usr/local/bin/nuget\r\n\r\n$ l $(which nuget)\r\n/usr/local/bin/nuget -> ../Cellar/nuget/5.11.0/bin/nuget\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":126,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-10-03T03:30:25.3093295Z","RunDurationInMilliseconds":1399}