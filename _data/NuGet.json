{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13757228923","Type":"PullRequestEvent","CreatedAt":"2020-10-06T21:15:52","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8242","RelatedDescription":"Opened pull request \"Enhance OData deprecation error message\" (#8242) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/3428\r\n\r\nThere are two variants of error messages because the `/api/v1/Packages()` endpoint will be entirely disabled (it does not hijack at all) and will therefore need different wording than the rest of the endpoints which just have some sets of parameter combinations disabled.\r\n\r\n### `/api/v1/Packages` - endpoint disabled\r\n\r\n```\r\nhttps://localhost/api/v1/Packages()?$orderby=Version\r\n```\r\n\r\nResponse with formatting (my browser):\r\n\r\n![image](https://user-images.githubusercontent.com/94054/95260367-6f376400-07dd-11eb-8ec3-e0b296a98fe4.png)\r\n\r\nResponse without formatting (most likely experience):\r\n\r\n<code>\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;m:error xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"&gt;&lt;m:code /&gt;&lt;m:message xml:lang=\"en-US\"&gt;This OData endpoint is disabled. Please refer to the following URL for more information about this deprecation: https://aka.ms/nuget/odata-deprecation&lt;/m:message&gt;&lt;/m:error&gt;\r\n</code>\r\n\r\n### All other non-hijacked queries - combinations of parameters disabled\r\n\r\n```\r\nhttps://localhost/api/v2/FindPackagesById()?id=%27Newtonsoft.Json%27&$orderby=Version\r\n```\r\n\r\nResponse with formatting:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/95260626-ea007f00-07dd-11eb-857e-f93351bb923a.png)\r\n\r\nResponse without formatting (most likely experience):\r\n\r\n<code>\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;m:error xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"&gt;&lt;m:code /&gt;&lt;m:message xml:lang=\"en-US\"&gt;The combination of parameters provided to this OData endpoint is not supported. Please refer to the following URL for more information about this deprecation: https://aka.ms/nuget/odata-deprecation&lt;/m:message&gt;&lt;/m:error&gt;\r\n</code>\r\n\r\n### Notes\r\n\r\n- I could not find a good way to pretty format the XML with indentation or whitespace\r\n- The link currently points to the root blog URL but will be fixed up to point to a real blog post/doc prior to the feature flags being used.\r\n"},{"Id":"13756450860","Type":"PullRequestEvent","CreatedAt":"2020-10-06T19:57:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8241","RelatedDescription":"Opened pull request \"Add feature flags to OData $count endpoints\" (#8241) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Engineering/issues/2902\r\nAddress https://github.com/NuGet/Engineering/issues/3442"},{"Id":"13755447158","Type":"PullRequestEvent","CreatedAt":"2020-10-06T18:26:42","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8238","RelatedDescription":"Merged pull request \" Announcing the Status message displayed after selecting the create button without giving any glob pattern\" (#8238) at NuGet/NuGetGallery","RelatedBody":"add  a new aria-live region that will read this information out when it changes. \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8194"},{"Id":"13755021381","Type":"PullRequestEvent","CreatedAt":"2020-10-06T17:48:59","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8239","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.10.05]RI of dev into master\" (#8239) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13757991584","Type":"IssuesEvent","CreatedAt":"2020-10-06T22:51:03","Actor":"Anipik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10113","RelatedDescription":"Opened issue \"Making Restore for Older TFMs with TargetPlatformStrings\" (#10113) at NuGet/Home","RelatedBody":"Nuget Restore started supporting net5.0-* TargetFrameworks, but it treat all the other older targetframeworks as  if there were without targetPlatform. \r\neg restore works perfectly for this project\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net5.0;net5.0-Windows</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nbut the restore on the following project \r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp3.1;netcoreapp3.1-Windows</TargetFrameworks> -->\r\n  </PropertyGroup>  \r\n</Project>\r\n```\r\nresults in \r\n```\r\nNuGet.targets(130,5): error : Invalid restore input. Duplicate frameworks found: 'netcoreapp3.1, netcoreapp3.1'\r\n```\r\n\r\n##usage\r\n\r\nWe have using targetPlatforms in the runtime repo for a while now. This will help us in using the latest sdk and nuget feaures.\r\nCurrently the restore does not work in the VS for projects, it will help us rectify that as well.\r\n\r\n\r\ncc @ericstj @ViktorHofer @safern\r\n\r\n\r\n\r\n"},{"Id":"13757468546","Type":"IssuesEvent","CreatedAt":"2020-10-06T21:42:48","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10089","RelatedDescription":"Closed issue \"[CPVM - PMUI] Error on the Browse tab for non-CPS projects\" (#10089) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nError on \"Browse\" tab in the PMUI for a non-CPS project CPVM enabled.  \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Download the attached file\r\n\r\n2. Open the project in VisualStudio (Visual Studio version used: Version 16.8.0 Preview 4.0 [30518.12.main])\r\n\r\n3. Build \r\n\r\n4. Open \"Manage NuGet Packages For Solution\" and Browse tab\r\n\r\nResult :\r\nError:\r\nValue cannot be null.\r\nParameter name: versionRange\r\nValue cannot be null.\r\nParameter name: versionRange\r\n\r\n[Repo.zip](https://github.com/NuGet/Home/files/5300957/Repo.zip)\r\n\r\n\r\n"},{"Id":"13754078926","Type":"IssuesEvent","CreatedAt":"2020-10-06T16:26:28","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10112","RelatedDescription":"Opened issue \"PM UI:  selecting projects in a solution-level context is slow\" (#10112) at NuGet/Home","RelatedBody":"Repro steps:\r\n1.  Open the NuGet.Client solution (https://github.com/NuGet/NuGet.Client).\r\n2.  In Solution Explorer right-click on the solution and select \"Manage NuGet Packages for Solution...\"\r\n3.  In PM UI switch to the Browse tab.\r\n4   Select a package.\r\n5.  In the right-hand details pane check the checkbox for all projects.\r\n\r\nExpected result:  The action will complete nearly instantaneously.\r\nActual result:  The action takes ~2 seconds to complete in 16.8.  In 16.7 (and the release-5.6.x branch instead of dev) it's nearly instantaneous.\r\n\r\nThis appears to be the result of heavy asyncification with JTF.\r\n\r\nThis is partially affected by https://github.com/NuGet/Home/issues/10094."},{"Id":"13742467963","Type":"IssuesEvent","CreatedAt":"2020-10-05T19:58:37","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10100","RelatedDescription":"Closed issue \"Relative links are broken in NuGet.Client debugging guide\" (#10100) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): -\r\n\r\nNuGet version (x.x.x.xxx): -\r\n\r\ndotnet.exe --version (if appropriate): -\r\n\r\nVS version (if appropriate): -\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): -\r\n\r\nWorked before? If so, with which NuGet version: -\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Click any link that points to source code in GitHub Web UI\r\n2. Notice that links are broken\r\n\r\n## Other suggested things\r\nTher was also a typo, where RestoreTask was used event though PackTask was meant. I've submitted a PR here: https://github.com/NuGet/NuGet.Client/pull/3696\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13742381862","Type":"IssuesEvent","CreatedAt":"2020-10-05T19:50:19","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10111","RelatedDescription":"Opened issue \"NuGet.VisualStudio.Internal.Contracts should use PublicAPIAnalyzers\" (#10111) at NuGet/Home","RelatedBody":"`NuGet.VisualStudio.Internal.Contracts` is not packed into a nupkg, and is entirely for NuGet's own internal use. However, it defines the over-the-wire contracts for Code Spaces (and Live Share?) scenarios. Therefore, backwards compatibility is still very important. Hence we should use PublicApiAnalyzers to minimise the risk that someone accidentally adds a breaking change.\r\n"},{"Id":"13742058300","Type":"IssuesEvent","CreatedAt":"2020-10-05T19:19:28","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3055","RelatedDescription":"Closed issue \"Nuget Debug verbosity should say where a package came from\" (#3055) at NuGet/Home","RelatedBody":"For debug purposes, it would be really useful if `restore -v Debug` said where a package came from. \n\nUseful information for a package that would be nice to have:\n- whether it came from a local cache or server and the actual package path in either case\n- the address of the feed it used for that package\n- which Nuget.configs it took into consideration\n"},{"Id":"13741714956","Type":"IssuesEvent","CreatedAt":"2020-10-05T18:47:21","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10108","RelatedDescription":"Closed issue \"openbullet\" (#10108) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\nhttps://openbullet.store\r\n[openbullet](https://openbullet.store)\r\n[openbullet download](https://openbullet.store)\r\n[download openbullet](https://openbullet.store)\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13741514916","Type":"IssuesEvent","CreatedAt":"2020-10-05T18:28:43","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10110","RelatedDescription":"Opened issue \"Package signing cross verify spec\" (#10110) at NuGet/Home","RelatedBody":"Needs to write a spec for Package signing cross verify tests."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":28,"FavoriteCount":19,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-07T05:30:37.4718772Z","RunDurationInMilliseconds":1616}