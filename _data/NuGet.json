{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41888530658","Type":"PullRequestEvent","CreatedAt":"2024-09-12T23:51:11","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10179","RelatedDescription":"Merged pull request \"Set `SendCertificateChain` option in KeyVaultReader to enable SN+I authentication\" (#10179) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Set the ClientCertificateCredentialOptions with SendCertificateChain when the KeyVaultConfiguration is configured with SendCertificateChain\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41918567759","Type":"IssuesEvent","CreatedAt":"2024-09-13T19:45:33","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13788","RelatedDescription":"Opened issue \"New dependency resolver does not properly handle missing package versions when using CPM\" (#13788) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\n6.12\n\n### Worked before?\n\nYes\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIf you have two projects where one references the other and you're missing a PackageVersion for CPM, then the new dependency resolver does not handle this correctly.\r\n\r\n```\r\nProjectA -> ProjectB -> PackageX (missing a PackageVersion)\r\n```\r\n\r\n\r\nDuring restore of each project, we verify that CPM is configured properly.  For ProjectB, we correctly identify this.  When resolving the graph of ProjectA, none of its package references are missing any versions.  I'm not sure how the legacy dependency resolver handles this.  Maybe it has to do with ordering?\n\n### Verbose Logs\n\n```shell\nDirectory.Packages.props\r\n\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n\r\nClassLibrary1.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\ClassLibrary2\\ClassLibrary2.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nClassLibrary2.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"EnvironmentAbstractions\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\n\r\nNew resolver output:\r\n```\r\n  ClassLibrary2.csproj : error NU1008: Projects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items: EnvironmentAbstractions.\r\n  ClassLibrary1.csproj : error NU1101: Unable to find package EnvironmentAbstractions. No packages exist with this id in source(s): nuget.org \r\n```\r\n\r\nLegacy resolver output:\r\n```\r\n  ClassLibrary2.csproj : error NU1008: Projects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items: EnvironmentAbstractions.\r\n```\n```\n"},{"Id":"41892555125","Type":"IssuesEvent","CreatedAt":"2024-09-13T04:15:40","Actor":"jimmylewis","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13786","RelatedDescription":"Opened issue \"Apex tests do not call EnsureVisualStudioHost() consistently\" (#13786) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nn/a\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nThis is purely from reviewing the Apex test code and noticing the inconsistency.  Some tests call it, some do not.  It is called often enough that is appears to be used to ensure a consistent state at the start of each test.\r\n\r\nA possible fix to ensure this consistency would be to place this call in a [TestInitialize] method on the base test class.  This would by default ensure that all tests follow the same logic, and would simplify test authoring (don't need to remember to copy this every time).\n\n### Verbose Logs\n\n_No response_"},{"Id":"41887775866","Type":"IssuesEvent","CreatedAt":"2024-09-12T22:59:29","Actor":"ericstj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13785","RelatedDescription":"Opened issue \"Consider supporting NoWarn on `PackageVersion` items\" (#13785) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nIt might be easier to suppress a warning on a PackageVersion rather than all PackageReferences when a repo is using CPM.  If this is possible (merely join and append the values) I think it would allow for a better user experience.\n\n### Additional Context and Details\n\nHere's the change which provoked this suggestion: https://github.com/gitextensions/gitextensions/pull/11911"},{"Id":"41886937530","Type":"IssuesEvent","CreatedAt":"2024-09-12T22:10:35","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13445","RelatedDescription":"Closed issue \"allocation: nuget.protocol.dll!NuGet.Protocol.HttpCacheUtility+<CreateCacheFileAsync>d__.MoveNext|nuget.protocol.dll!NuGet.Protocol.PackageDependencyGroupConverter.ReadJson\" (#13445) at NuGet/Home","RelatedBody":"Internal issue: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1864821\r\nCode in: \r\n\r\nSome ideas: https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Protocol/Converters/PackageDependencyGroupConverter.cs\r\n\r\n* Avoid using LoadJson, iterate by token.\r\n* Intern the dependency groups /deduplicate\r\n* Ensure GetShortFolderName is not computed continously. The framework parsing tends to be cached, but another ideas to cache that as well."},{"Id":"41850291119","Type":"IssuesEvent","CreatedAt":"2024-09-12T00:57:49","Actor":"ericstj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13784","RelatedDescription":"Opened issue \"NuGetAuditSuppress is not transitive across project references\" (#13784) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe\n\n### Product Version\n\n9.0.0-preview.7.24405.7\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nAdd `NuGetAuditSuppress` to a project.  Reference that project from another project.\r\n\r\nThe reference flows transitively, but the suppression does not.\r\n\r\nYou could workaround it by applying the NuGetAuditSuppress item globally, but that might not be what you want, since it would apply to all references instead of just the one.\r\n\r\nI understand this might be by-design but it makes managing the reference more difficult.  Ideally the suppression could flow with the reference just like the package reference itself flows.\r\n\r\nI'm not certain about what the experience should be when packed, but I could see a scenario for allowing a suppression to be honored by package consumers as well - with an override.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-09-14T03:30:22.7165509Z","RunDurationInMilliseconds":862}