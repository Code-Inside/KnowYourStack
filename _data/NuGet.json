{"Data":{"Blog":{"FeedItems":[{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"16021657196","Type":"IssuesEvent","CreatedAt":"2021-04-21T00:57:49","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8497","RelatedDescription":"Closed issue \"Adjust TFM backfill logic to support portable edge cases\" (#8497) at NuGet/NuGetGallery","RelatedBody":"Seeing some interesting errors in TFM collection in PROD:\nexample: System.ArgumentException: Invalid portable frameworks 'net40-client+sl5'. A hyphen may not be in any of the portable framework names.\nAlso some out of memory exceptions.\n"},{"Id":"16021636131","Type":"PullRequestEvent","CreatedAt":"2021-04-21T00:54:24","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8536","RelatedDescription":"Merged pull request \"Adjust support request hint to include DMCA text\" (#8536) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/8535\r\n\r\nA text update for the hint of the text area in the support request edit dialog, prompting users to format their resolution to cover the  data we need for searches."},{"Id":"16021619619","Type":"PullRequestEvent","CreatedAt":"2021-04-21T00:51:39","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8531","RelatedDescription":"Merged pull request \"Adjust try blocks, repair empty TFM metadata case\" (#8531) at NuGet/NuGetGallery","RelatedBody":"Logic tweak--exceptions were still sneaking through because the try block for harvesting TFMs only surrounded the method call doing the extraction - it didn't surround the loop enumerating them. The collection is `IEnumerable`, so of course throwing can still take place while enumerating. The diffing isn't great here, but that's what's happening in `UpdatePackage`. Forcing another enumeration `ToList` is for the same reason.\r\n\r\nAlso, the case where no TFMs were being persisted to the metadata file was throwing on the update cycle. I needed to null the `MissingFieldFound` action on the csvReader (this instruction comes from the exception thrown by csvReader). The null case is covered in update code so this fixed the issue."},{"Id":"16017864933","Type":"PullRequestEvent","CreatedAt":"2021-04-20T18:22:35","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8537","RelatedDescription":"Merged pull request \"[A11Y] Screenreader does not read required keyword for the control “Package Owner\".\" (#8537) at NuGet/NuGetGallery","RelatedBody":"* Added aria-required=\"true\" to announce a required input.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8494"},{"Id":"16007012306","Type":"PullRequestEvent","CreatedAt":"2021-04-20T05:10:00","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8537","RelatedDescription":"Opened pull request \"[A11Y] Screenreader does not read required keyword for the control “Package Owner\".\" (#8537) at NuGet/NuGetGallery","RelatedBody":"* Added aria-required=\"true\" to announce a required input.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8494"},{"Id":"16005621561","Type":"PullRequestEvent","CreatedAt":"2021-04-20T02:07:48","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8536","RelatedDescription":"Opened pull request \"Adjust support request hint to include DCMA text\" (#8536) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/8535\r\n\r\nA text update for the hint of the text area in the support request edit dialog, prompting users to format their resolution to cover the  data we need for searches."},{"Id":"16005477897","Type":"IssuesEvent","CreatedAt":"2021-04-20T01:53:09","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8535","RelatedDescription":"Opened issue \"Add hint text to support request edit dialog for tracking DMCA takedowns\" (#8535) at NuGet/NuGetGallery","RelatedBody":"For example: \r\n\r\nIf resolving a DMCA request add offender account names (in single quotes, comma-delimited), offending package id, and resolution (no action, withdrawn, upheld). Example: accounts:'foo1','foo2' id:BarPkg resolution: upheld)"},{"Id":"16003254539","Type":"IssuesEvent","CreatedAt":"2021-04-19T22:12:51","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8458","RelatedDescription":"Closed issue \"[README] Show more +/- is shown even if there is no additional content\" (#8458) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nWhen the README is short (like 1-3 lines) the \"Show more\" / \"Show less\" links are shown but if you click on them they don't do anything.\r\n\r\n### To Reproduce\r\n\r\n1. Go to this package: https://dev.nugettest.org/packages/ICanHazReadme/1.0.0\r\n2. Click \"Show more\" and \"Show less\"\r\n\r\n### Expected behavior\r\n\r\nThe link should not appear for short READMEs.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/94054/111710428-ea7a5880-8806-11eb-94b3-ef11fe2a20b1.png)\r\n"},{"Id":"16003253992","Type":"IssuesEvent","CreatedAt":"2021-04-19T22:12:48","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8460","RelatedDescription":"Closed issue \"[README] Empty embedded readme breaks the manage package > documentation section\" (#8460) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nI created a package with an empty README file. It seems to confuse the upload UI and the manage package Documentation section. It sort of looks like some of the code thinks it's a legacy readme package and other code thinks its an embedded readme.\r\n\r\n### To Reproduce\r\n\r\nGo here: https://dev.nugettest.org/packages/ICanHazReadme/1.0.2/Manage\r\n\r\nOr\r\n\r\n1. Create a nupkg with an embedded readme and make the readme empty (0 bytes)\r\n2. Upload to Gallery\r\n3. Notice the README preview on the upload package\r\n4. After the package is uploaded, go to the Manage Package page and expand the Documentation section\r\n\r\n### Expected behavior\r\n\r\nEither the package should be rejected or the package should be considered to have an embedded readme and no Preview button should appear.\r\n\r\n### Screenshots\r\n\r\nNo submit button:\r\n![image](https://user-images.githubusercontent.com/94054/111712721-71c9cb00-880b-11eb-8ed0-5522618fd639.png)\r\n"},{"Id":"15997043353","Type":"IssuesEvent","CreatedAt":"2021-04-19T15:07:16","Actor":"sokolovsa","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8534","RelatedDescription":"Opened issue \"nuget.org website keeps asking to sign in every day\" (#8534) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nNuget.org website asks to sign in at least once every day.\r\nI use Firefox v87\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Open nuget.org in browser and sign in with microsoft account\r\n2. Proceed to interact with the website and make sure you're still signed in.\r\n3. Next day, open nuget.org again and notice that you're not signed in\r\n4. Click \"sign in\",  enter your email\r\n5. Notice, that it doesn't even ask for a password \r\n6. you're signed in again.\r\n\r\n### Expected behavior\r\nnuget.org does not force me to enter my email every day and stays in signed in state.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"16022227909","Type":"IssuesEvent","CreatedAt":"2021-04-21T02:24:16","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/10613","RelatedDescription":"Reopened issue \"update package.nuspec file if it is exists when install/update nuget package reference\" (#10613) at NuGet/Home","RelatedBody":"Hi,\r\nCurrently, we use an NuPack extension to pack nuget packages. But when depended package updated, we need to manually modify package.nuspec file, Please update package.nuspec file if it is exists when install/update nuget package reference to an project."},{"Id":"16022049180","Type":"IssuesEvent","CreatedAt":"2021-04-21T01:57:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3963","RelatedDescription":"Closed issue \"Update NuGet options to configure the auto-restore behavior.\" (#3963) at NuGet/Home","RelatedBody":"According to the [NRM spec](https://github.com/NuGet/Home/wiki/NuGet-Restore-Manager) restore behavior may be configured to run in 3 distinct modes:\r\n\r\n- Automatic restore\r\n- On-Build only\r\n- Manual only\r\n\r\nUpdate the NuGet options page with the new options."},{"Id":"16021747154","Type":"IssuesEvent","CreatedAt":"2021-04-21T01:11:24","Actor":"matkoch","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10784","RelatedDescription":"Opened issue \"Add a NUKE tab for NuGet packages\" (#10784) at NuGet/Home","RelatedBody":"I'm following up on @JonDouglas suggesting to use the new proposal process for my suggestion from NuGet/NuGetGallery#8511. Spec is here https://github.com/NuGet/Home/pull/10782. Happy to answer your questions! :)"},{"Id":"16021736691","Type":"IssuesEvent","CreatedAt":"2021-04-21T01:09:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10783","RelatedDescription":"Opened issue \"Validate that the package namespace syntax is correct\" (#10783) at NuGet/Home","RelatedBody":"Specifically, validate that the package namespace specified is `packageid` + `*` at the end. "},{"Id":"16021731061","Type":"PullRequestEvent","CreatedAt":"2021-04-21T01:08:53","Actor":"matkoch","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10782","RelatedDescription":"Opened pull request \"Initial draft for adding a NUKE tab with installation instructions\" (#10782) at NuGet/Home","RelatedBody":"Hi everyone!\r\n\r\nI'm following up on @JonDouglas suggesting to use the new proposal process for my suggestion from https://github.com/NuGet/NuGetGallery/issues/8511. Happy to answer your questions! :)"},{"Id":"16021280952","Type":"IssuesEvent","CreatedAt":"2021-04-21T00:00:24","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10719","RelatedDescription":"Closed issue \"CpsPackageReferenceProjectTests.TestPackageManager_PreviewProjectsUninstallPackageAsync_AllProjects_UninstallExistingPackage_Success test is flaky\" (#10719) at NuGet/Home","RelatedBody":"`TestPackageManager_PreviewProjectsUninstallPackageAsync_AllProjects_UninstallExistingPackage_Success` is flaky. It failed on few [1](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4615033&view=ms.vss-test-web.build-test-results-tab&runId=20317228&resultId=115623&paneView=debug), [2](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4596916&view=ms.vss-test-web.build-test-results-tab&runId=20129492&resultId=115718), [3](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4598257&view=ms.vss-test-web.build-test-results-tab&runId=20169506&resultId=115547) builds but passed on re-run.\r\n\r\nI reproduced it only once while debugging the test in VS and here is the call stack. \r\n\r\nThe `predicate` used in the following line of code is throwing that exception because `string` is null. I tried 3 or 4 times but reproduced this exception only once.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/606dcb613eefc5d28cc2af29176f76105f588ff8/test/NuGet.Clients.Tests/NuGet.PackageManagement.VisualStudio.Test/CpsPackageReferenceProjectTests.cs#L2442\r\n\r\n```\r\n[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.1 (32-bit Desktop .NET 4.0.30319.42000)\r\n[xUnit.net 00:00:02.00]   Starting:    NuGet.PackageManagement.VisualStudio.Test\r\n[xUnit.net 00:04:29.74]     NuGet.PackageManagement.VisualStudio.Test.CpsPackageReferenceProjectTests.TestPackageManager_PreviewProjectsUninstallPackageAsync_AllProjects_UninstallExistingPackage_Success [FAIL]\r\n[xUnit.net 00:04:29.74]       System.NullReferenceException : Object reference not set to an instance of an object.\r\n[xUnit.net 00:04:29.74]       Stack Trace:\r\n[xUnit.net 00:04:29.74]         C:\\repos\\NuGet.Client\\test\\NuGet.Clients.Tests\\NuGet.PackageManagement.VisualStudio.Test\\CpsPackageReferenceProjectTests.cs(2442,0): at NuGet.PackageManagement.VisualStudio.Test.CpsPackageReferenceProjectTests.<>c.<TestPackageManager_PreviewProjectsUninstallPackageAsync_AllProjects_UninstallExistingPackage_Success>b__22_2(String l)\r\n[xUnit.net 00:04:29.74]            at System.Linq.Enumerable.WhereListIterator`1.MoveNext()\r\n[xUnit.net 00:04:29.74]            at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n[xUnit.net 00:04:29.74]            at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n[xUnit.net 00:04:29.74]         C:\\repos\\NuGet.Client\\test\\NuGet.Clients.Tests\\NuGet.PackageManagement.VisualStudio.Test\\CpsPackageReferenceProjectTests.cs(2442,0): at NuGet.PackageManagement.VisualStudio.Test.CpsPackageReferenceProjectTests.<TestPackageManager_PreviewProjectsUninstallPackageAsync_AllProjects_UninstallExistingPackage_Success>d__22.MoveNext()\r\n[xUnit.net 00:04:29.74]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:04:29.74]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[xUnit.net 00:04:29.74]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:04:29.74]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:04:29.74]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[xUnit.net 00:04:29.74]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:04:29.74]         --- End of stack trace from previous location where exception was thrown ---\r\n[xUnit.net 00:04:29.74]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n[xUnit.net 00:04:29.74]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n[xUnit.net 00:04:29.76]   Finished:    NuGet.PackageManagement.VisualStudio.Test\r\n========== Test run finished: 1 Tests (0 Passed, 1 Failed, 0 Skipped) run in 4.9 min =========\r\n```\r\n\r\nIt looks like this test was added recently in https://github.com/NuGet/NuGet.Client/pull/3703.\r\n\r\n@erdembayar any idea what could have caused this issue?\r\n"},{"Id":"16020339247","Type":"IssuesEvent","CreatedAt":"2021-04-20T21:55:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/2157","RelatedDescription":"Closed issue \"Package metadata panel is empty for packages with '-*' version\" (#2157) at NuGet/Home","RelatedBody":"The installed status is wrong either: \"Not available in this source\".\n\n![image](https://cloud.githubusercontent.com/assets/8239356/13258718/2403453c-da09-11e5-89f2-e2b6f8bf2b2f.png)\n"},{"Id":"16009263511","Type":"IssuesEvent","CreatedAt":"2021-04-20T08:31:55","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10781","RelatedDescription":"Opened issue \"[Unstable] The package icon in the right panel of PM UI didn’t update correctly \" (#10781) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Main\\31219.244\r\nNuGet Version: Dev\\5.10.0.7216\r\nOS Version: Windows-10-Enterprise-20H1\r\n## Repro steps and/or sample project\r\n1. Launch VS and create a project [e.g. C# Class Library (.NET Framework 4.8)/C++ Blank App (Univeral Windows)]\r\n2. Open the PM UI of the project/solution and select a package (e.g. EntityFramework.SqlServerCompact/Newtonsoft.Json) in “Browse” tab.\r\n3. Install the package and observe the package icon in the left panel/right panel.\r\n## Expected\r\nThe package icon in the right panel of PM UI show correctly.\r\n## Actual\r\nThe package icon in the right panel of PM UI didn’t update correctly as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/115364000-87a92200-a1f5-11eb-9c40-f5e8e79986c2.png)\r\n## Notes:\r\n1.It is an unstable issue. Occurred randomly. Hard to say it is regressed from which build.\r\n2.It also repro on “Installed”/”Updates” tab.\r\n3.This issue will not repro after clicking the “Refresh” button.\r\n"},{"Id":"16005783877","Type":"IssuesEvent","CreatedAt":"2021-04-20T02:24:14","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10535","RelatedDescription":"Closed issue \"Signing:  primary signature details not displayed when certificate expired and timestamp untrusted\" (#10535) at NuGet/Home","RelatedBody":"NuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):  NuGet.exe\r\n\r\nProduct version:  5.8.1.7021\r\n\r\nWorked before?  No.  This reproes as early as 4.9.4.5839 and probably earlier (but did not verify).\r\n\r\n## Repro steps and/or sample project\r\n\r\n1.  Extract the contents of [AuthorExpired.1.0.0.zip](https://github.com/NuGet/Home/files/5922200/AuthorExpired.1.0.0.zip) to your local drive.\r\n2.  Add AuthorExpired.1.0.0.nupkg.certificates\\0.cer as a trusted root authority.\r\n3.  In a command prompt execute:\r\n```\r\nnuget.exe verify -all AuthorExpired.1.0.0.nupkg\r\n```\r\n**Note:  be sure to remove the trusted root authority added in step 2.**\r\n\r\n### Expected results:\r\nI expect to see:\r\n*  primary signature details\r\n*  a warning that the primary signature's certificate has expired\r\n*  timestamp signature details\r\n*  a warning or error that the primary signature's timestamp signature's certificate is untrusted\r\n\r\n### Actual results:\r\nI see:\r\n*  timestamp signature details\r\n*  an error that the primary signature's timestamp signature's certificate is untrusted\r\n```\r\nVerifying AuthorExpired.1.0.0\r\nE:\\Trash\\ClassLibrary3dfsdsf\\packageSource\\AuthorExpired.1.0.0\\AuthorExpired.1.0.0.nupkg\r\n\r\nSignature Hash Algorithm: SHA256\r\nTimestamp: 2/3/2021 3:36:12 PM\r\n\r\nVerifying author primary signature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=NuGet Test Root Certificate Authority (40998d55-3d73-4a3b-a689-55e30c1fac3c), O=NuGet, L=Redmond, S=WA, C=US\r\n  SHA1 hash: 6B2378A3DC9CA185252BB66F24F262D129165B5B\r\n  SHA256 hash: 61B18DE3D814FA7960C6ED62DB20BEA6D0F8D65F678464D7D7C9227E7D5DEFBD\r\n  Issued by: CN=NuGet Test Root Certificate Authority (40998d55-3d73-4a3b-a689-55e30c1fac3c), O=NuGet, L=Redmond, S=WA, C=US\r\n  Valid from: 2/3/2021 3:36:11 PM to 12/31/2099 4:00:00 PM\r\n\r\nNU3028: The author primary signature's timestamp found a chain building issue: UntrustedRoot: A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.\r\nFinished with 1 errors and 0 warnings.\r\n\r\nPackage signature validation failed.\r\n```"},{"Id":"16005783869","Type":"IssuesEvent","CreatedAt":"2021-04-20T02:24:14","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10316","RelatedDescription":"Closed issue \"dotnet nuget verify is too quiet\" (#10316) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: dotnet.exe\r\n\r\ndotnet.exe --version (if appropriate): 5.0.100\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n`dotnet nuget verify` does not output anything by default:\r\n\r\n```\r\nPS > dotnet nuget verify --all .\\newtonsoft.json.12.0.3.nupkg\r\nPS > dotnet nuget verify .\\newtonsoft.json.12.0.3.nupkg\r\n```\r\n\r\nNo output is given at all for these commands. This is unfortunate as the `verify` command's output provides useful information when configuring `trusted-signers` (see this [blog post](https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/#configure-trusted-package-authors)).\r\n\r\nHowever, command output is shown if I increase the verbosity to `normal`:\r\n\r\n```\r\nPS > dotnet nuget verify .\\newtonsoft.json.12.0.3.nupkg --verbosity normal\r\n\r\nVerifying Newtonsoft.Json.12.0.3\r\n.\\newtonsoft.json.12.0.3.nupkg\r\nSignature Hash Algorithm: SHA256\r\nTimestamp: 11/8/2019 4:56:46 PM\r\nVerifying author primary signature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=TIMESTAMP-SHA256-2019-10-15, O=\"DigiCert, Inc.\", C=US\r\n  SHA1 hash: 0325BD505EDA96302DC22F4FA01E4C28BE2834C5\r\n  SHA256 hash: 481F4373272D98586C5364B6C115E82425675AEBFD9FACF7ADC464FA2FFFB8F0\r\n  Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 9/30/2019 5:00:00 PM to 10/16/2030 5:00:00 PM\r\nSignature type: Author\r\nVerifying the author primary signature with certificate:\r\n  Subject Name: CN=Json.NET (.NET Foundation), O=Json.NET (.NET Foundation), L=Redmond, S=wa, C=US, SERIALNUMBER=603 389 068\r\n  SHA1 hash: 4CFB89FAA49539A58968D81960B3C1258E8F6A34\r\n  SHA256 hash: A3AF7AF11EBB8EF729D2D91548509717E7E0FF55A129ABC3AEAA8A6940267641\r\n  Issued by: CN=.NET Foundation Projects Code Signing CA, O=.NET Foundation, C=US\r\n  Valid from: 10/24/2018 5:00:00 PM to 10/29/2021 5:00:00 AM\r\nTimestamp: 11/8/2019 5:28:02 PM\r\nVerifying repository countersignature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1 hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256 hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Issued by: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Valid from: 12/22/2017 4:00:00 PM to 3/22/2029 4:59:59 PM\r\nSignature type: Repository\r\nnuget-v3-service-index-url: https://api.nuget.org/v3/index.json\r\nnuget-package-owners: jamesnk, newtonsoft\r\nVerifying the repository countersignature with certificate:\r\n  Subject Name: CN=NuGet.org Repository by Microsoft, O=NuGet.org Repository by Microsoft, L=Redmond, S=Washington, C=US\r\n  SHA1 hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\n  SHA256 hash: 0E5F38F57DC1BCC806D8494F4F90FBCEDD988B46760709CBEEC6F4219AA6157D\r\n  Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 4/9/2018 5:00:00 PM to 4/14/2021 5:00:00 AM\r\n\r\nSuccessfully verified package 'Newtonsoft.Json.12.0.3'.\r\n```"},{"Id":"16004533501","Type":"IssuesEvent","CreatedAt":"2021-04-20T00:14:50","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10780","RelatedDescription":"Opened issue \"`NuGetProjectManagerService` calls to get transitive packages should batch projects\" (#10780) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: all\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\nContinuation of https://github.com/NuGet/Home/issues/10740\r\nThe following methods are called repeatedly for each project, rather than batched:\r\n\r\n```\r\nIProjectContextInfoExtensions.GetInstalledAndTransitivePackagesAsync(this IProjectContextInfo projectContextInfo,)\r\n->\r\nNuGetProjectManagerService.GetInstalledAndTransitivePackagesAsync(IReadOnlyCollection<string> projectIds,)\r\n```\r\n\r\nBatching these may save significant overhead in common PM UI actions, and reduce the overall load times for any Tab, event, or action that triggers them (eg, loading of any of the 4 tabs, all Package Management buttons, selecting a package, changing sources, external changes to project).\r\n\r\nRelated to https://github.com/nuget/home/issues/10356.\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"16004039994","Type":"IssuesEvent","CreatedAt":"2021-04-19T23:25:36","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10779","RelatedDescription":"Opened issue \"Tools -> Options -> NuGet Package Manager string is truncated\" (#10779) at NuGet/Home","RelatedBody":"Related to: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1151266\n\nAffected Branch:\nAffected Build: Version 16.7.0 Preview 4.0 [30301.268.master]\nAffected Product Language:\n\nSteps to reproduce:\n\n1. open tools->options->NuGet Package Manager\n2. observe the string in the label for \"Automatically check for missing packages during build in Visual\n\n\n**Expected**\nthe string should either end with \"in Visual Basic\" or with \"during build.\"\n\n**Observed**\nthe string appears trunctated, and has extraneous information (\"in Visual\"). I also question how this string will appear after localization.\n\n![image.png](https://images.zenhubusercontent.com/5fb70598d06a06645c8439d4/e0867be4-577d-401e-8bc2-e3556b98b7d3)"},{"Id":"16002569882","Type":"IssuesEvent","CreatedAt":"2021-04-19T21:18:41","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10778","RelatedDescription":"Opened issue \"IntelliCode Package Suggestions don't show the verified checkmark\" (#10778) at NuGet/Home","RelatedBody":"Bug found in VS 16.10 preview 3.\r\n\r\nBrowse tab package suggestions don't show the verified checkmark for packages that should have it, including Microsoft packages:\r\n\r\n![image](https://user-images.githubusercontent.com/15097183/115304679-3a647c00-a133-11eb-8868-da1e43648647.png)\r\n"},{"Id":"16002519225","Type":"IssuesEvent","CreatedAt":"2021-04-19T21:15:01","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10777","RelatedDescription":"Opened issue \"Browse results with NuGet IntelliCode Suggestions load noticeable slower than those without\" (#10777) at NuGet/Home","RelatedBody":"Tested in Visual Studio 16.10 preview 3 - the project level PMUI that is loading the Browse tab with suggestions takes ~1-2s longer to than the solution level PMUI without suggestions.\r\n\r\nFor reference, I recorded loading time of each for a few trials:\r\n\r\n\r\nTrial | Control (Sol PMUI) | Experiment (Proj PMUI) | Difference (Control - Experiment) | % (Difference / Control)\r\n-- | -- | -- | -- | --\r\n1 | 2.26 | 4.99 | -2.73 | -121%\r\n2 | 3.16 | 5.3 | -2.14 | -68%\r\n3 | 2.68 | 4.53 | -1.85 | -69%\r\n4 | 2.64 | 4.82 | -2.18 | -83%\r\n5 | 2.89 | 4.42 | -1.53 | -53%\r\nAVG | 2.726 | 4.812 | -2.086 | -79%\r\n\r\nI compared the Browse tab empty query load speed of the Solution Level PMUI (control with no suggestions) and the Project Level PMUI (Experiment with suggestions). I conducted each trial by clicking the refresh button near the search box and timing using a stopwatch. On average the experiment loaded 2.1s or 77% slower than the control.\r\n\r\n\r\n"},{"Id":"16001861548","Type":"IssuesEvent","CreatedAt":"2021-04-19T20:28:31","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10773","RelatedDescription":"Closed issue \"`dotnet nuget verify` command is not recognizing --configfile ..\\nuget.config\" (#10773) at NuGet/Home","RelatedBody":"## Details about Problem\n\nNuGet product used (dotnet.exe):\n\nProduct version: 5.9\n\nWorked before? If so, with which NuGet version: N/A\n\n## Repro steps and/or sample project\nRun below command, it should honor custom nuget.config file but if throws error.\n`dotnet nuget verify ..\\TestSigned\\TestSigned.1.0.0.nupkg --configfile ..\\nuget.config`\n\n\n### Verbose Logs\n\nSpecify --help for a list of available options and commands.\nerror: Unrecognized option '--configfile'\n\n\nUsage: dotnet nuget verify [arguments] [options]\n\nArguments:\n  <package-paths>  Specify the path to the package\n\nOptions:\n  --all                      Specifies that all verifications possible should be performed to the package(s).\n  --certificate-fingerprint  Verify that the signer certificate matches with one of the specified SHA256 fingerprints. A certificate SHA256 fingerprint is a SHA256 hash of the certificate used to identify the certificate. Multiple inputs should be separated by space.\n  -v|--verbosity             Set the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\n  -h|--help                  Show help information"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15928910571","Type":"IssuesEvent","CreatedAt":"2021-04-13T21:31:59","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/58","RelatedDescription":"Opened issue \"NuGet repository signature certificate will expire on April 14th, 2021\" (#58) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nAt 5:00AM PST on April 14th, 2021, the [NuGet repository signing certificate will expire](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/). This certificate is used to verify the content integrity of a package and protect against content tampering. When the signing certificate expires, it will fallback to a timestamp for verification.\r\n\r\nFor packages that have not been automatically re-signed by NuGet.org with an updated certificate, you may be affected by [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://github.com/NuGet/Announcements/issues/56). Only a subset of NuGet.org packages have been re-signed with a new certificate since March 15th, 2021.\r\n\r\nGiven that the [NuGet Microsoft author signing certificate has already expired](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/), you may have already ran into this issue if you have a Microsoft author signed package in your environment and may already be aware of this change in behavior & resolved it.\r\n\r\nFor reference of the different types of NuGet signatures:\r\n\r\n- **Author signature.** An author signature guarantees that the package has not been modified since the author signed the package, no matter from which repository or what transport method the package is delivered. Additionally, author-signed packages provide an extra authentication mechanism to the nuget.org publishing pipeline because the signing certificate must be registered ahead of time. \r\n- **Repository signature.** Repository signatures provide an integrity guarantee for all packages in a repository whether they are author signed or not, even if those packages are obtained from a different location than the original repository where they were signed.\r\n\r\n## Symptoms\r\n\r\nYour Linux environment may give you error messages when running `dotnet restore` such as:\r\n\r\n```\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nThis indicates that your environment is affected by an upstream change to [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages and you'll need to update your .NET SDK to resolve it.\r\n\r\n## Solution\r\n\r\nNew .NET builds have been provided with NuGet package verification disabled on Linux and macOS.\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0)\r\n\r\nIt is recommended that you update to these builds as soon as you can to mitigate disruption on Linux environments.\r\n\r\n## Details\r\n\r\nFor more details on this incident, see the following resources:\r\n\r\n- https://github.com/NuGet/Announcements/issues/56\r\n- https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/\r\n- https://github.com/dotnet/announcements/issues/180\r\n\r\nIf you run into this issue after April 14th, 2021, please provide a comment on https://github.com/NuGet/Home/issues/10712"},{"Id":"15789095683","Type":"IssuesEvent","CreatedAt":"2021-04-01T22:00:20","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/57","RelatedDescription":"Opened issue \"NuGet.org temporarily down due to Azure services outage\" (#57) at NuGet/Announcements","RelatedBody":"NuGet.org is being affected by an outage due to issues affecting the Azure Portal and Azure services, but the team is on it. We appreciate your patience and we will keep you updated as soon as we get more information.\r\n\r\nIn the meantime, check https://status2.azure.com/ for Azure updates and find work-arounds in this thread https://github.com/NuGet/NuGetGallery/issues/8480."},{"Id":"15770729318","Type":"IssuesEvent","CreatedAt":"2021-03-31T19:45:05","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/56","RelatedDescription":"Opened issue \"Notice: NuGet Restore Failures on Linux distributions using NSS or Mozilla root CA list\" (#56) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nUsers of .NET 5.0+ will receive error messages when running `dotnet restore` on Linux distros that use [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages maintained by Mozilla's root CA list. The root cause is due to the certificate used for signed NuGet packages recently expiring and as a result the validation for packages uses a timestamp provider chain that has a root certificate that has been [removed by Network Security Services (NSS)](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) which is a popular alternative to [OpenSSL](https://github.com/openssl/openssl).\r\n\r\n- [NuGet Microsoft Author Signing Certificate Update](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/) - Expires January 27th, 2021\r\n- [NuGet.org Repository Signing Certificate Update](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/) - Expires April 14th, 2021\r\n\r\nFor more information, please read the [Distrust of Symantec TLS Certificates](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/) on the Mozilla Security Blog, [Mozilla Root Store Policy](https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/policy/) on Mozilla.org, and [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues) on the Mozilla Wiki Page.\r\n\r\n## Affected Environments\r\n\r\n.NET 5.0+ SDK on Linux distros that use [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). \r\n\r\nAt this time, we are not sure of every distro that may be affected. If you're aware of an affected distro, please let us know!\r\n\r\nBelow is a table that includes .NET support for Linux distros:\r\n\r\n### Linux\r\n\r\nOS                                    | Version               | Affected          |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Alpine Linux][Alpine]                | N/A                 | ❓ |\r\n[CentOS][CentOS]                      | N/A                    | ❓ |\r\n[Debian][Debian]                      | N/A                    | ❓ |\r\n[Fedora][Fedora]                      | N/A                   | ❓ |\r\n[Linux Mint][Linux-Mint]              | N/A                   | ❓ |\r\n[openSUSE][OpenSUSE]                  | N/A                   | ❓ |\r\n[Red Hat Enterprise Linux][RHEL]      | N/A                    | ❓ |\r\n[SUSE Enterprise Linux (SLES)][SLES]  | N/A               | ❓ |\r\n[Ubuntu][Ubuntu]                      | N/A   | ❓ |\r\n\r\n[Alpine]: https://alpinelinux.org/\r\n[CentOS]: https://www.centos.org/\r\n[Debian]: https://www.debian.org/\r\n[Fedora]: https://getfedora.org/\r\n[Linux-Mint]: https://linuxmint.com/\r\n[OpenSUSE]: https://opensuse.org/\r\n[RHEL]: https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\r\n[SLES]: https://www.suse.com/products/server/\r\n[Ubuntu]: https://ubuntu.com/\r\n\r\nAdditionally, here is a table of other Linux variants that may be affected but are not officially supported by .NET.\r\n\r\nOS                                    | Version               | Affected       |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Arch Linux](https://archlinux.org/)                          | 20210328+                 | ✅[Issue](https://github.com/NuGet/Home/issues/10695)             |\r\n[Artix Linux](https://artixlinux.org/)                         | 20201128+                    | ✅[Issue](https://github.com/NuGet/Home/issues/10684)             |\r\n\r\n### Other Linux distros\r\n\r\n- At the time of writing, we believe other distributions will not be affected until a distribution is updated to include [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes).\r\n\r\n## Mitigation\r\n\r\n### .NET Core 3.1\r\n\r\n.NET 5 introduces a signing verification mechanism that promotes warnings to throw an error at `dotnet restore` time. To work around this, you can temporarily target against .NET Core 3.1.\r\n\r\n### Modify CA Certificate Store\r\n\r\nDepending on your Linux distro, you can modify your CA certificate store by taking on an earlier version of your `ca-certificates` package.\r\n\r\nFor reference, the affected version is [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). `nss` includes a hard-coded list of trusted CA certificates and therefore can be modified to include and trust the `Verisign Universal Root Certificate Authority` again.\r\n\r\nMany Linux distros can leverage `dpkg-reconfigure` to check for the entry and enable trust for it. As a manual workaround, you may need to remove a `leading !` from the certificate line & update your CA certificates package.\r\n\r\n**Note:** Doing this is considered a bad security practice & should only be done if you understand the security implications of doing so.\r\n\r\n## Solution\r\n\r\nDue to existing issues with the .NET 5 signing verification feature & fallback of timestamp verification, we have decided to revoke this feature for Unix-based systems within .NET 5 SDK. Therefore your experience of using `dotnet restore` will remain largely the same as it was in .NET Core 3.1. Stay tuned for an updated .NET SDK version that will include this change.\r\n\r\n### Stay updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We will also continue posting updates on [NuGet Status](https://status.nuget.org/) and [@NuGet on Twitter](https://twitter.com/nuget)."},{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1379845663807188996","CreatedAt":"2021-04-07T17:16:57+00:00","UserScreenname":"nuget","Text":"🙌New mockup just dropped🙌\n\n@jiachenjiang_  is reading all the feedback and iterating daily 💪\n\nWe want you to be inv… https://t.co/HMOopaJPDN","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1377764630769008640","CreatedAt":"2021-04-01T23:27:40+00:00","UserScreenname":"nuget","Text":"Our monitoring and tests indicate that the incident related to DNS has been mitigated. We are waiting for more info… https://t.co/Oz3vtCPt0K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1377743615422685191","CreatedAt":"2021-04-01T22:04:09+00:00","UserScreenname":"nuget","Text":"Check our announcement here for additional resources as well as a Github thread for us to share work-arounds.… https://t.co/j0UWauYtq3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1377737823994802182","CreatedAt":"2021-04-01T21:41:09+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi is being affected by this outage, but the team is on it. We appreciate your patience and we… https://t.co/ESWjKBbpYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"👏Contributor appreciation time👏\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t… https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":85,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2021-04-21T05:30:29.703896Z","RunDurationInMilliseconds":1482}