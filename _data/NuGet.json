{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31141349376","Type":"PullRequestEvent","CreatedAt":"2023-08-16T00:26:42","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9619","RelatedDescription":"Merged pull request \"Users/lilixie/package tab accessibility\" (#9619) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Remove aria-expanded attribute\r\n*Add aria-labelledby attribute to tab pane\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9607\r\nNote: refer to documentation ( https://www.w3.org/WAI/ARIA/apg/patterns/tabs/, https://www.w3.org/WAI/ARIA/apg/patterns/tabs/examples/tabs-automatic/), aria-expanded attribute is not required for tabs. This PR remove the unnecessary attribute aria-expanded and add the required attribute aria-labelledby."},{"Id":"31140516285","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:16:30","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9479","RelatedDescription":"Closed pull request \"Users/lilixie/login accessibility\" (#9479) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* change the html markups\r\n* change related css in less file\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9478"},{"Id":"31140497034","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:15:07","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9556","RelatedDescription":"Closed pull request \"Bump Microsoft.AspNetCore.Cryptography.KeyDerivation from 1.0.0 to 7.0.9\" (#9556) at NuGet/NuGetGallery","RelatedBody":"Bumps [Microsoft.AspNetCore.Cryptography.KeyDerivation](https://github.com/dotnet/aspnetcore) from 1.0.0 to 7.0.9.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/aspnetcore/releases\">Microsoft.AspNetCore.Cryptography.KeyDerivation's releases</a>.</em></p>\n<blockquote>\n<h2>.NET 7.0.9</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.9\">Release</a></p>\n<h2>.NET 7.0.8</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.8\">Release</a></p>\n<h2>.NET 7.0.7</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.7\">Release</a></p>\n<h2>.NET 7.0.5</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.5\">Release</a></p>\n<h2>.NET 7.0.4</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.4\">Release</a></p>\n<h2>.NET 7.0.3</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.3\">Release</a></p>\n<h2>.NET 7.0.2</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v7.0.2\">Release</a></p>\n<h2>.NET 7.0.1</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.1\">Release</a></p>\n<h2>.NET 7.0.0</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0\">Release</a></p>\n<h2>.NET 7.0 RC 2</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-rc.2\">Release</a></p>\n<h2>.NET 7.0 RC 1</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-rc.1\">Release</a></p>\n<h2>.NET 7.0 Preview 7</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.7\">Release</a></p>\n<h2>.NET 7.0 Preview 6</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.6\">Release</a></p>\n<h2>.NET 7.0 Preview 5</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.5\">Release</a></p>\n<h2>.NET 7.0 Preview 4</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.4\">Release</a></p>\n<h2>.NET 7.0 Preview 3</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.3\">Release</a></p>\n<h2>.NET 7.0 Preview 2</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.2\">Release</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/b506e2cb7b6c0fe787305f8cfdee046b7b3f9a53\"><code>b506e2c</code></a> Merged PR 32117: Fix shas for July</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/8c6acc1ed8d5d544edf1d8120dad148d98b162b7\"><code>8c6acc1</code></a> Merged PR 32093: [internal/release/7.0] Update dependencies from dnceng/inter...</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/4102502992b9a73c26ebce398a2e51253037e204\"><code>4102502</code></a> [internal/release/7.0] Update dependencies from dnceng/internal/dotnet-runtime</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/01ed6ed4873ade889e61e9b797d4e3965570f216\"><code>01ed6ed</code></a> [internal/release/7.0] Update dependencies from dnceng/internal/dotnet-efcore</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/52009a90fe82fefb6f03abf3d2da103dcb24e6f8\"><code>52009a9</code></a> Merge in 'release/7.0' changes</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/d248a4f2cba5e68eb26ba2e2208dc8ba3187ad85\"><code>d248a4f</code></a> Update NuGet client dependencies (<a href=\"https://redirect.github.com/dotnet/aspnetcore/issues/48865\">#48865</a>)</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/2dead36ccf4ccb7e9c132f33f9bacf37dcb3af46\"><code>2dead36</code></a> Merge in 'release/7.0' changes</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/8804a1a835821e811e5532edb3716242f481b5d2\"><code>8804a1a</code></a> Update branding to 7.0.9 (<a href=\"https://redirect.github.com/dotnet/aspnetcore/issues/48901\">#48901</a>)</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/db6432162c83e94c0334b403f4a8a2b475a9160b\"><code>db64321</code></a> Merged PR 31966: [internal/release/7.0] Merge from public</li>\n<li><a href=\"https://github.com/dotnet/aspnetcore/commit/80034989d137b7f61735ce4e9a47a99ee79c2174\"><code>8003498</code></a> [internal/release/7.0] Update dependencies from dnceng/internal/dotnet-efcore</li>\n<li>Additional commits viewable in <a href=\"https://github.com/dotnet/aspnetcore/compare/1.0.0...v7.0.9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.AspNetCore.Cryptography.KeyDerivation&package-manager=nuget&previous-version=1.0.0&new-version=7.0.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"31140495386","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:15:00","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9562","RelatedDescription":"Closed pull request \"Bump Moq from 4.8.2 to 4.18.4\" (#9562) at NuGet/NuGetGallery","RelatedBody":"Bumps [Moq](https://github.com/moq/moq4) from 4.8.2 to 4.18.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/moq/moq4/releases\">Moq's releases</a>.</em></p>\n<blockquote>\n<h2>4.18.4</h2>\n<h4>Changed</h4>\n<ul>\n<li>Update package reference to <code>Castle.Core</code> (DynamicProxy) from version 5.1.0 to 5.1.1 (<a href=\"https://github.com/stakx\"><code>@​stakx</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1317\">#1317</a>)</li>\n</ul>\n<h2>4.18.3</h2>\n<h4>Fixed</h4>\n<ul>\n<li><code>SetupAllProperties</code> crashes when invoked on a <code>Mock&lt;T&gt;</code> subclass (<a href=\"https://github.com/mo-russo\"><code>@​mo-russo</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1278\">#1278</a>)</li>\n</ul>\n<h2>4.18.2</h2>\n<h4>Changed</h4>\n<ul>\n<li>Update package reference to <code>Castle.Core</code> (DynamicProxy) from version 5.0.0 to 5.1.0 (<a href=\"https://github.com/stakx\"><code>@​stakx</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1275\">#1275</a>)</li>\n<li>Removed dependency on <code>System.Threading.Tasks.Extensions</code> for <code>netstandard2.1</code> and <code>net6.0</code> (<a href=\"https://github.com/tibel\"><code>@​tibel</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1274\">#1274</a>)</li>\n</ul>\n<h4>Fixed</h4>\n<ul>\n<li>&quot;Expression is not an event add&quot; when using <code>.Raises()</code> with redeclared event (<a href=\"https://github.com/howcheng\"><code>@​howcheng</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1175\">#1175</a>)</li>\n<li><code>MissingMethodException</code> when mocking interface with sealed default implementation (<a href=\"https://github.com/pjquirk\"><code>@​pjquirk</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1209\">#1209</a>)</li>\n<li>Throws <code>TypeLoadException</code> on mock when a record has a base record on .NET 6 (<a href=\"https://github.com/tgrieger-sf\"><code>@​tgrieger-sf</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1273\">#1273</a>)</li>\n</ul>\n<h2>4.18.1</h2>\n<h4>Fixed</h4>\n<ul>\n<li>Regression with lazy evaluation of <code>It.Is</code> predicates in setup expressions after updating from 4.13.1 to 4.16.1 (<a href=\"https://github.com/b3go\"><code>@​b3go</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1217\">#1217</a>)</li>\n<li>Regression with <code>SetupProperty</code> where Moq fails to match a property accessor implementation against its definition in an interface (<a href=\"https://github.com/Naxemar\"><code>@​Naxemar</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1248\">#1248</a>)</li>\n<li>Difference in behavior when mocking async method using <code>.Result</code> vs without (<a href=\"https://github.com/cyungmann\"><code>@​cyungmann</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1253\">#1253</a>)</li>\n</ul>\n<h2>4.18.0</h2>\n<p>New major version of DynamicProxy (you may get better performance!), so please update with care.</p>\n<h4>Changed</h4>\n<ul>\n<li>Update package reference to <code>Castle.Core</code> (DynamicProxy) from version 4.4.1 to 5.0.0 (<a href=\"https://github.com/stakx\"><code>@​stakx</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1257\">#1257</a>)</li>\n<li>Adjusted our target frameworks to match DynamicProxy's (see <a href=\"https://redirect.github.com/castleproject/Core/issues/597\">their discussion about which frameworks to target</a>):\n<ul>\n<li>minimum .NET Framework version raised from <code>net45</code> to <code>net462</code></li>\n<li>additional <code>net6.0</code> TFM</li>\n</ul>\n</li>\n</ul>\n<h4>Fixed</h4>\n<ul>\n<li>Can't set up &quot;private protected&quot; properties (<a href=\"https://github.com/RobSiklos\"><code>@​RobSiklos</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1170\">#1170</a>)</li>\n<li>Using [...] an old version of <code>System.Net.Http</code> which is vulnerable to &quot;DoS&quot;, &quot;Spoofing&quot;, &quot;Privilege Escalation&quot;, &quot;Authentication Bypass&quot; and &quot;Information Exposure&quot;  (<a href=\"https://github.com/sidseter\"><code>@​sidseter</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1219\">#1219</a>)</li>\n<li>Failure when invoking a method with by-ref parameter &amp; mockable return type on a mock with <code>CallBase</code> and <code>DefaultValue.Mock</code> configured (<a href=\"https://github.com/IanKemp\"><code>@​IanKemp</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1249\">#1249</a>)</li>\n</ul>\n<h2>4.17.2</h2>\n<h4>Fixed</h4>\n<ul>\n<li>Regression: Property stubs not working on sub mock (<a href=\"https://github.com/aaronburro\"><code>@​aaronburro</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1240\">#1240</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/moq/moq/blob/main/CHANGELOG.md\">Moq's changelog</a>.</em></p>\n<blockquote>\n<h2>4.18.4 (2022-12-30)</h2>\n<h4>Changed</h4>\n<ul>\n<li>Update package reference to <code>Castle.Core</code> (DynamicProxy) from version 5.1.0 to 5.1.1 (<a href=\"https://github.com/stakx\"><code>@​stakx</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1317\">#1317</a>)</li>\n</ul>\n<h2>4.18.3 (2022-12-05)</h2>\n<h4>Fixed</h4>\n<ul>\n<li><code>SetupAllProperties</code> crashes when invoked on a <code>Mock&lt;T&gt;</code> subclass (<a href=\"https://github.com/mo-russo\"><code>@​mo-russo</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1278\">#1278</a>)</li>\n</ul>\n<h2>4.18.2 (2022-08-02)</h2>\n<h4>Changed</h4>\n<ul>\n<li>Update package reference to <code>Castle.Core</code> (DynamicProxy) from version 5.0.0 to 5.1.0 (<a href=\"https://github.com/stakx\"><code>@​stakx</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1275\">#1275</a>)</li>\n<li>Removed dependency on <code>System.Threading.Tasks.Extensions</code> for <code>netstandard2.1</code> and <code>net6.0</code> (<a href=\"https://github.com/tibel\"><code>@​tibel</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1274\">#1274</a>)</li>\n</ul>\n<h4>Fixed</h4>\n<ul>\n<li>&quot;Expression is not an event add&quot; when using <code>.Raises()</code> with redeclared event (<a href=\"https://github.com/howcheng\"><code>@​howcheng</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1175\">#1175</a>)</li>\n<li><code>MissingMethodException</code> when mocking interface with sealed default implementation (<a href=\"https://github.com/pjquirk\"><code>@​pjquirk</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1209\">#1209</a>)</li>\n<li>Throws <code>TypeLoadException</code> on mock when a record has a base record on .NET 6 (<a href=\"https://github.com/tgrieger-sf\"><code>@​tgrieger-sf</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1273\">#1273</a>)</li>\n</ul>\n<h2>4.18.1 (2022-05-16)</h2>\n<h4>Fixed</h4>\n<ul>\n<li>Regression with lazy evaluation of <code>It.Is</code> predicates in setup expressions after updating from 4.13.1 to 4.16.1 (<a href=\"https://github.com/b3go\"><code>@​b3go</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1217\">#1217</a>)</li>\n<li>Regression with <code>SetupProperty</code> where Moq fails to match a property accessor implementation against its definition in an interface (<a href=\"https://github.com/Naxemar\"><code>@​Naxemar</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1248\">#1248</a>)</li>\n<li>Difference in behavior when mocking async method using <code>.Result</code> vs without (<a href=\"https://github.com/cyungmann\"><code>@​cyungmann</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1253\">#1253</a>)</li>\n</ul>\n<h2>4.18.0 (2022-05-12)</h2>\n<p>New major version of DynamicProxy (you may get better performance!), so please update with care.</p>\n<h4>Changed</h4>\n<ul>\n<li>Update package reference to <code>Castle.Core</code> (DynamicProxy) from version 4.4.1 to 5.0.0 (<a href=\"https://github.com/stakx\"><code>@​stakx</code></a>, <a href=\"https://redirect.github.com/moq/moq4/issues/1257\">#1257</a>)</li>\n<li>Adjusted our target frameworks to match DynamicProxy's (see <a href=\"https://redirect.github.com/castleproject/Core/issues/597\">their discussion about which frameworks to target</a>):\n<ul>\n<li>minimum .NET Framework version raised from <code>net45</code> to <code>net462</code></li>\n<li>additional <code>net6.0</code> TFM</li>\n</ul>\n</li>\n</ul>\n<h4>Fixed</h4>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/moq/moq/commit/042a2ebbeca20b6b718efb45af29a0dc2edb4ab6\"><code>042a2eb</code></a> Update version to 4.18.4</li>\n<li><a href=\"https://github.com/moq/moq/commit/4aa791d39dc4f8e5e823ed24720db9ce13b5429a\"><code>4aa791d</code></a> Update DynamicProxy to version 5.1.1</li>\n<li><a href=\"https://github.com/moq/moq/commit/d535cc40870362f9667b64de1308fda3c204e6b8\"><code>d535cc4</code></a> ⬆️ Bump files with dotnet-file sync</li>\n<li><a href=\"https://github.com/moq/moq/commit/a760c988801dffc69f1961069970a6e60e4de7f6\"><code>a760c98</code></a> Update version to 4.18.3</li>\n<li><a href=\"https://github.com/moq/moq/commit/423fee7c7a7b131ebbe3e59044c9a1ce525a1d57\"><code>423fee7</code></a> ⬆️ Bump files with dotnet-file sync</li>\n<li><a href=\"https://github.com/moq/moq/commit/a4d835405f212e188c2b535565d6834f68129ae5\"><code>a4d8354</code></a> Update moved artifacts in upstream repos</li>\n<li><a href=\"https://github.com/moq/moq/commit/207713e8086480ec7822414b3eb502eddaac518f\"><code>207713e</code></a> Align footer with the standard one I use on devlooped</li>\n<li><a href=\"https://github.com/moq/moq/commit/2e86b165ee94c855cdfc9f9e845493f2e4f0dd7a\"><code>2e86b16</code></a> Update sponsors logo location</li>\n<li><a href=\"https://github.com/moq/moq/commit/5ce8494c98e7878a7280204941af6aa3d3dd35e1\"><code>5ce8494</code></a> Fix typo in the documentation of Mock`1.cs <a href=\"https://redirect.github.com/moq/moq4/issues/1\">#1</a></li>\n<li><a href=\"https://github.com/moq/moq/commit/94eb40afac5a1defa22b0be3a7af636f296d6bc5\"><code>94eb40a</code></a> ⬆️ Bump files with dotnet-file sync</li>\n<li>Additional commits viewable in <a href=\"https://github.com/moq/moq4/compare/v4.8.2...v4.18.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Moq&package-manager=nuget&previous-version=4.8.2&new-version=4.18.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"31140494090","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:14:54","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9568","RelatedDescription":"Closed pull request \"Bump Microsoft.AspNet.WebApi.Core from 5.2.3 to 5.2.9\" (#9568) at NuGet/NuGetGallery","RelatedBody":"Bumps [Microsoft.AspNet.WebApi.Core](https://github.com/aspnet/AspNetWebStack) from 5.2.3 to 5.2.9.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/aspnet/AspNetWebStack/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.AspNet.WebApi.Core&package-manager=nuget&previous-version=5.2.3&new-version=5.2.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"31140492656","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:14:48","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9569","RelatedDescription":"Closed pull request \"Bump Microsoft.AspNet.WebApi.WebHost from 5.2.3 to 5.2.9\" (#9569) at NuGet/NuGetGallery","RelatedBody":"Bumps [Microsoft.AspNet.WebApi.WebHost](https://github.com/aspnet/AspNetWebStack) from 5.2.3 to 5.2.9.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/aspnet/AspNetWebStack/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.AspNet.WebApi.WebHost&package-manager=nuget&previous-version=5.2.3&new-version=5.2.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"31140491049","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:14:41","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9570","RelatedDescription":"Closed pull request \"Bump Microsoft.Extensions.Logging from 2.2.0 to 7.0.0\" (#9570) at NuGet/NuGetGallery","RelatedBody":"Bumps [Microsoft.Extensions.Logging](https://github.com/dotnet/runtime) from 2.2.0 to 7.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/runtime/releases\">Microsoft.Extensions.Logging's releases</a>.</em></p>\n<blockquote>\n<h2>.NET 7.0.0</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v7.0.0\">Release</a></p>\n<h2>.NET 7.0 RC 2</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-rc.2\">Release</a></p>\n<h2>.NET 7.0 RC 1</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-rc.1\">Release</a></p>\n<h2>.NET 7.0 Preview 7</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.7\">Release</a></p>\n<h2>.NET 7.0 Preview 6</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.6\">Release</a></p>\n<h2>.NET 7.0 Preview 5</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.5\">Release</a></p>\n<h2>.NET 7.0 Preview 4</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.4\">Release</a></p>\n<h2>.NET 7.0 Preview 3</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.3\">Release</a></p>\n<h2>.NET 7.0 Preview 2</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v7.0.0-preview.2\">Release</a></p>\n<h2>.NET 6.0.20</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v6.0.20\">Release</a></p>\n<h2>.NET 6.0.16</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v6.0.16\">Release</a></p>\n<h2>.NET 6.0.15</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v6.0.15\">Release</a></p>\n<h2>.NET 6.0.12</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v6.0.12\">Release</a></p>\n<h2>.NET 6.0.11</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v6.0.11\">Release</a></p>\n<h2>.NET 6.0.9</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v6.0.9\">Release</a></p>\n<h2>.NET 6.0.8</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v6.0.8\">Release</a></p>\n<h2>.NET 6.0.7</h2>\n<p><a href=\"https://github.com/dotnet/core/tree/v6.0.7\">Release</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/runtime/commits/v7.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.Extensions.Logging&package-manager=nuget&previous-version=2.2.0&new-version=7.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"31140488664","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:14:30","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9573","RelatedDescription":"Closed pull request \"Bump Autofac.Extensions.DependencyInjection from 4.3.1 to 8.0.0\" (#9573) at NuGet/NuGetGallery","RelatedBody":"Bumps [Autofac.Extensions.DependencyInjection](https://github.com/autofac/Autofac.Extensions.DependencyInjection) from 4.3.1 to 8.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/releases\">Autofac.Extensions.DependencyInjection's releases</a>.</em></p>\n<blockquote>\n<h2>v8.0.0</h2>\n<p><strong>BREAKING CHANGE</strong>: <code>IServiceScopeFactory</code> is now a singleton and child scopes are flat, not hierarchical. Based on <a href=\"https://redirect.github.com/autofac/Autofac.Extensions.DependencyInjection/issues/83\">#83</a> and <a href=\"https://redirect.github.com/dotnet/runtime/issues/67391\">dotnet/runtime#67391</a>, the <code>IServiceScopeFactory</code> is now registered as a singleton. Any scope you create from it is a <em>peer</em>, not a hierarchy like you might see in core Autofac. Even if you create a scope <em>from</em> a scope, it'll use the singleton factory under the covers and all scopes will be peers.</p>\n<p>If you are using scopes to isolate units of work, be aware that this breaks the parent/child lifetime scope relationship.</p>\n<pre lang=\"c#\"><code>// Based on an IServiceProvider...\nIServiceProvider provider = CreateServiceProvider();\n<p>// You might want to create nested scopes to track work...\nvar unitOfWorkOutside = provider.CreateScope();</p>\n<p>// And later have a sub-unit-of-work scope inside that...\nvar unitOfWorkInside = unitOfWorkOutside.ServiceProvider.CreateScope();</p>\n<p>// But they're NOT RELATED! They don't share a resolution hierarchy\n// so cached instances in the outer scope won't be seen in the inner\n// scope. You can dispose that &quot;outer scope&quot; without affecting the\n// &quot;inner scope&quot; at all because they're peers, not parent/child.\nunitOfWorkOutside.Dispose();</p>\n<p>// Still works because it's not a hierarchy!\nunitOfWorkInside.ServiceProvider.GetRequiredService&lt;MyService&gt;();\n</code></pre></p>\n<p>If you need to create hierarchical scopes, you will need to use native Autofac constructs.</p>\n<pre lang=\"c#\"><code>// Based on an IServiceProvider...\nIServiceProvider provider = CreateServiceProvider();\n<p>// You'll need to get an Autofac lifetime scope.\nvar autofacScope = provider.GetService&lt;ILifetimeScope&gt;();</p>\n<p>// Use the Autofac constructs to create hierarchical lifetimes.\nvar unitOfWorkOutside = autofacScope.BeginLifetimeScope();</p>\n<p>// And later have a sub-unit-of-work scope inside that...\nvar unitOfWorkInside = unitOfWorkOutside.BeginLifetimeScope();</p>\n<p>// Now they're related so they'll share a hierarchy. If you dispose the outer scope...\nunitOfWorkOutside.Dispose();</p>\n<p>// ...stuff in the inner scope will not resolve because you disposed its parent.\nunitOfWorkInside.Resolve&lt;MyService&gt;();\n</code></pre></p>\n<p><strong>BREAKING CHANGE</strong>: The <code>Microsoft.Extensions.DependencyInjection</code> dependency is now set at 6.0.0 for all target frameworks. M.E.DI v6 <em>is compatible</em> with all the frameworks Autofac.Extensions.DependencyInjection targets, so your application <em>should</em> be able to allow this through transitive dependencies. However, if you have a hard requirement to stay on an older version of M.E.DI for some reason, you won't be able to take this upgrade.</p>\n<p><strong>Autofac.AspNetCore.Multitenant has been updated</strong> to account for these changes. If you are using the multitenant ASP.NET Core support and update Autofac.Extensions.DependencyInjection, also be sure to take the latest Autofac.AspNetCore.Multitenant package.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/c715e5f6c82f6481c299411fd0ec1f746f5f6aa5\"><code>c715e5f</code></a> Merge branch 'develop'</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/9cc50534d3bce82a60e4688932aa9eb9a5f71527\"><code>9cc5053</code></a> Upgrade dependencies - Autofac 6.4.0</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/bf61f9225b078359c7e9e688b3823990d056a4f2\"><code>bf61f92</code></a> Merge pull request <a href=\"https://redirect.github.com/autofac/Autofac.Extensions.DependencyInjection/issues/104\">#104</a> from autofac/feature/compat-test</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/468a5c83432f82fff0a665436d4751a29163f705\"><code>468a5c8</code></a> Minor cleanup on registration.</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/65e1afc820966439ea2dcbe3f177abd6d53bb0dd\"><code>65e1afc</code></a> Always register as IServiceProvierIsService.</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/4473558887f78d23ac0bcdfcf94cd4517add5bda\"><code>4473558</code></a> Integration tests for different framework versions.</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/e63250d55d3caaf7f04f7a17c475bf762acdd0ba\"><code>e63250d</code></a> Remove conditional compilation, target M.E.DI 6.</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/af9863428a0b41763e9e2ddde20eef9e5c53368b\"><code>af98634</code></a> Switch to file-scoped namespaces.</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/48ff0165c311647c5a21bd44c63aebccef977221\"><code>48ff016</code></a> Merge pull request <a href=\"https://redirect.github.com/autofac/Autofac.Extensions.DependencyInjection/issues/102\">#102</a> from autofac/issue-83</li>\n<li><a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/commit/1c83d66ef0aaaa77b423b38f529102979a5a8a78\"><code>1c83d66</code></a> Fix <a href=\"https://redirect.github.com/autofac/Autofac.Extensions.DependencyInjection/issues/83\">#83</a>: IServiceScopeFactory is singleton, scopes are flat.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/autofac/Autofac.Extensions.DependencyInjection/compare/v4.3.1...v8.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Autofac.Extensions.DependencyInjection&package-manager=nuget&previous-version=4.3.1&new-version=8.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"31140487304","Type":"PullRequestEvent","CreatedAt":"2023-08-15T23:14:24","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9576","RelatedDescription":"Closed pull request \"Bump Microsoft.Data.Services.Client from 5.8.4 to 5.8.5\" (#9576) at NuGet/NuGetGallery","RelatedBody":"Bumps Microsoft.Data.Services.Client from 5.8.4 to 5.8.5.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.Data.Services.Client&package-manager=nuget&previous-version=5.8.4&new-version=5.8.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"31140074135","Type":"IssuesEvent","CreatedAt":"2023-08-15T22:43:05","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8338","RelatedDescription":"Closed issue \"Restore with RestoreLockedMode  and no lock file should error.\" (#8338) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nThe restore with RestoreLockedMode  = true and no lock file does not work or error but a new lock file is created. \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a project with RestoreLockedMode = true and delete the lock file if present.\r\n\r\n2. Build/restore. \r\n\r\nResult: No error and the lock file is created. \r\n\r\n\r\n\r\n"},{"Id":"31137166506","Type":"IssuesEvent","CreatedAt":"2023-08-15T20:01:06","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12815","RelatedDescription":"Opened issue \"Solution PM UI displays a non available package as \"Latest stable\"\" (#12815) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nAny version of VS\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nInstall a package \r\nChange source to one that doesn't have the installed package.\r\nOpen Versions combo box\r\nInstalled Version is displayed as Latest Stable even if we are not sure about that.\r\n\r\n![image](https://github.com/NuGet/Home/assets/43253759/0f0c9c88-e005-4574-8b70-095a33a3af26)\r\n\r\n\r\nThis happens only in the Solution Level PM UI.\n\n### Verbose Logs\n\n_No response_"},{"Id":"31120296312","Type":"IssuesEvent","CreatedAt":"2023-08-15T06:13:34","Actor":"pmeems","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12814","RelatedDescription":"Opened issue \"'staticwebassets.build.json' not found with Pack task for .NET v7.0.400\" (#12814) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe, NuGet SDK\n\n### Product Version\n\n .NET v7.0.400\n\n### Worked before?\n\n.NET v7.0.306\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nI first reported this question at https://github.com/dotnet/sdk/issues/34601 but they say I should resubmit it here.\r\n\r\nWe have a .NET7 solution with Blazor components. We want to create a NuGet package and send it to our private feed in our Azure DevOps.\r\nWe use a YAML pipeline to\r\n\r\n- Restore\r\n- Build\r\n- Test\r\n- Pack\r\n- Publish\r\n- Push to internal feed\r\n\r\nThis has worked for weeks.\r\nWe use an Agent Pool with 8 agents. Most of them have been upgraded to .NET v7.0.400, just one is still .NET v7.0.306\r\n\r\nWhen the pipeline runs on an upgraded agent I get this error at the `pack` step:\r\n`Manifest file at 'obj\\Release\\net7.0\\staticwebassets.build.json' not found.`\r\n\r\nWhen I specifically target the agent with .NET v7.0.306 I have no pack error and everything works as expected.\r\n\r\n### To Reproduce\r\nThis is my YAML-script:\r\n```\r\nsteps:\r\n  - checkout: self\r\n    clean: true\r\n    lfs: true\r\n\r\n  - task: UseDotNet@2\r\n    displayName: Downloading .Net 7 SDK\r\n    inputs:\r\n      packageType: \"sdk\"\r\n      version: \"7.0.306\"  # Newer versions will not work with pack\r\n\r\n  - task: DotNetCoreCLI@2\r\n    displayName: Restore solution\r\n    condition: always()\r\n    inputs:\r\n      command: \"restore\"\r\n      projects: \"$(Build.Repository.LocalPath)/**/*.sln\"\r\n      feedsToUse: 'config'\r\n      nugetConfigPath: 'nuget.config' \r\n\r\n  - task: DotNetCoreCLI@2\r\n    displayName: Build solution\r\n    condition: succeeded()\r\n    inputs:\r\n      command: \"build\"\r\n      projects: \"$(Build.Repository.LocalPath)/**/*.sln\"\r\n      arguments: '/p:Configuration=${{ parameters.BuildConfiguration }} /p:Version=$(Build.BuildNumber) --no-restore'\r\n\r\n  - task: DotNetCoreCLI@2\r\n    displayName: Pack Nuget    \r\n    inputs:\r\n      command: 'pack'\r\n      packagesToPack: '**/Blazor.Components.csproj;!**/*Tests.csproj;!**/*.ComponentsAccessibilityTests.csproj'\r\n      configuration: 'Release'\r\n      packDirectory: '$(Build.ArtifactStagingDirectory)/Nuget'\r\n      nobuild: true\r\n      versioningScheme: 'byBuildNumber'\r\n```\r\n\r\nThis last task fails with the mentioned error about the missing file.\r\n\r\nThe content of the .csproj file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n    <PropertyGroup>\r\n        <TargetFramework>net7.0</TargetFramework>\r\n        <Nullable>enable</Nullable>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n        <PackageId>PenR.Blazor.Components</PackageId>\r\n        <Title>PenR Blazor Components</Title>\r\n        <Product>PenR.Blazor.Components</Product>\r\n        <Copyright>RDW</Copyright>\r\n        <Platforms>AnyCPU;x64;x86</Platforms>\r\n        <PlatformTarget>x64</PlatformTarget>\r\n        <StaticWebAssetsEnabled>true</StaticWebAssetsEnabled>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <SupportedPlatform Include=\"browser\" />\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n        <PackageReference Include=\"Meziantou.Analyzer\" Version=\"2.*\">\r\n            <PrivateAssets>all</PrivateAssets>\r\n            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n        </PackageReference>\r\n        <PackageReference Include=\"Microsoft.AspNetCore.Components.Web\" Version=\"7.*\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAnd the contents of the Directory.Build.props:\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <AnalysisLevel>latest</AnalysisLevel>\r\n    <EnableNETAnalyzers>true</EnableNETAnalyzers>\r\n    <AnalysisMode>AllEnabledByDefault</AnalysisMode>\r\n    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <Authors>We</Authors>\r\n    <Company>Us</Company>\r\n    <PackageProjectUrl></PackageProjectUrl>\r\n    <RepositoryUrl>https://dev.azure.com/.../.../_git/Rdw.Blazor.Components</RepositoryUrl>\r\n    <RepositoryType>git</RepositoryType>\r\n    <PackageIcon>BlazorComponents.png</PackageIcon>\r\n    <PackageReadmeFile>README.md</PackageReadmeFile>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Include=\"BlazorComponents.png\" Pack=\"true\" PackagePath=\"\\\" />\r\n    <None Include=\"..\\..\\README.md\" Pack=\"true\" PackagePath=\"\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n### Further technical details\r\nAll agents are Windows agents, only the .NET7 version differs.\r\nOther pipelines which don't create NuGet packages but deploy webapps to Azure have no issues on any of the agents.\r\n\n\n### Verbose Logs\n\n```shell\n1>Target \"ResolveStaticWebAssetsConfiguration\" in file \"D:\\Data\\a9\\_tool\\dotnet\\sdk\\7.0.400\\Sdks\\Microsoft.NET.Sdk.Razor\\targets\\Microsoft.NET.Sdk.Razor.StaticWebAssets.targets\" from project \"D:\\Data\\a9\\216\\s\\Src\\Components\\Blazor.Components.csproj\" (target \"IncludeStaticWebAssetsPackItems\" depends on it):\r\n       Task \"MakeDir\" skipped, due to false condition; (!Exists('$(_StaticWebAssetsManifestBase)')) was evaluated as (!Exists('obj\\Release\\net7.0\\')).\r\n       Task \"MakeDir\" skipped, due to false condition; (!Exists('$(_StaticWebAssetsIntermediateOutputPath)')) was evaluated as (!Exists('obj\\Release\\net7.0\\staticwebassets\\')).\r\n     1>Done building target \"ResolveStaticWebAssetsConfiguration\" in project \"Blazor.Components.csproj\".\r\n     1>Target \"LoadStaticWebAssetsBuildManifest\" in file \"D:\\Data\\a9\\_tool\\dotnet\\sdk\\7.0.400\\Sdks\\Microsoft.NET.Sdk.Razor\\targets\\Microsoft.NET.Sdk.Razor.StaticWebAssets.targets\" from project \"D:\\Data\\a9\\216\\s\\Src\\Components\\Blazor.Components.csproj\" (target \"IncludeStaticWebAssetsPackItems\" depends on it):\r\n       Using \"ReadStaticWebAssetsManifestFile\" task from assembly \"D:\\Data\\a9\\_tool\\dotnet\\sdk\\7.0.400\\Sdks\\Microsoft.NET.Sdk.Razor\\targets\\..\\tasks\\net7.0\\Microsoft.NET.Sdk.Razor.Tasks.dll\".\r\n       Task \"ReadStaticWebAssetsManifestFile\"\r\n     1>D:\\Data\\a9\\_tool\\dotnet\\sdk\\7.0.400\\Sdks\\Microsoft.NET.Sdk.Razor\\targets\\Microsoft.NET.Sdk.Razor.StaticWebAssets.targets(499,5): error : Manifest file at 'obj\\Release\\net7.0\\staticwebassets.build.json' not found. [D:\\Data\\a9\\216\\s\\Src\\Components\\Blazor.Components.csproj]\r\n       Done executing task \"ReadStaticWebAssetsManifestFile\" -- FAILED.\r\n     1>Done building target \"LoadStaticWebAssetsBuildManifest\" in project \"Blazor.Components.csproj\" -- FAILED.\r\n     1>Done Building Project \"D:\\Data\\a9\\216\\s\\Src\\Components\\Blazor.Components.csproj\" (pack target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"D:\\Data\\a9\\216\\s\\Src\\Components\\Blazor.Components.csproj\" (pack target) (1) ->\r\n       (LoadStaticWebAssetsBuildManifest target) -> \r\n         D:\\Data\\a9\\_tool\\dotnet\\sdk\\7.0.400\\Sdks\\Microsoft.NET.Sdk.Razor\\targets\\Microsoft.NET.Sdk.Razor.StaticWebAssets.targets(499,5): error : Manifest file at 'obj\\Release\\net7.0\\staticwebassets.build.json' not found. [D:\\Data\\a9\\216\\s\\Src\\Components\\Blazor.Components.csproj]\n```\n"},{"Id":"31113396827","Type":"IssuesEvent","CreatedAt":"2023-08-14T20:59:53","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12798","RelatedDescription":"Closed issue \"Symbols package is missing some content when custom nuspec file is used\" (#12798) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS2022, 17.6.5\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI opened https://github.com/dotnet/project-system/issues/9188, but was advised to raise the issue here instead.\r\n\r\n## Visual Studio Version\r\n\r\nVersion 17.6.5\r\n\r\n## Summary\r\n\r\nI am using a custom nuspec file to build NuGet package for my application. When \"IncludeSymbols\" is set to true, one file listed in nuspec file is missing in the symbols package that is produced; the other package is fine.\r\n\r\n## Steps to Reproduce\r\n\r\nThe nuspec file:\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd\">\r\n  <metadata>\r\n    <id>$Id$</id>\r\n    <version>$Version$</version>\r\n    <authors>$Authors$</authors>\r\n    <description>CommandControl command line tools.</description>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"$OutputPath$\\net48\\CSG.Framework.CommandController.exe\" target=\"tools\" />\r\n    <file src=\"$ProjectDirectory$\\..\\..\\..\\Scripts\\ServiceControl.ps1\" target=\"tools\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nSDK csproj file snippet that sets package building properties:\r\n\r\n```\r\n    <NoWarn>NU5111</NoWarn>\r\n    <DebugType>embedded</DebugType>\r\n\r\n    <IsPackable>true</IsPackable>\r\n    <NuspecFile>$(MSBuildProjectName).nuspec</NuspecFile>\r\n    <NuspecBasePath>$(MSBuildProjectDirectory)</NuspecBasePath>\r\n    <NuspecProperties>Id=$(AssemblyName);Version=$(Version);Authors=$(Authors);ProjectDirectory=$(MSBuildProjectDirectory);OutputPath=$(OutputPath)</NuspecProperties>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <IncludeSymbols>true</IncludeSymbols>\r\n```\r\n\r\n## Expected Behavior\r\n\r\nNuGet package's tools folder contains two files.\r\n\r\n## Actual Behavior\r\n\r\nServiceControl.ps1 is missing from the tools folder of the symbols package:\r\n```\r\nListing archive: CSG.Framework.CommandController.23.3.0.symbols.nupkg\r\n\r\n--\r\nPath = CSG.Framework.CommandController.23.3.0.symbols.nupkg\r\nType = zip\r\nPhysical Size = 682463\r\n\r\n   Date      Time    Attr         Size   Compressed  Name\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 15:59:52 .....          525          291  _rels\\.rels\r\n2023-07-26 15:59:52 .....          409          255  CSG.Framework.CommandController.nuspec\r\n2023-07-26 20:59:52 .....      1883648       680504  tools\\CSG.Framework.CommandController.exe\r\n2023-07-26 15:59:52 .....          465          206  [Content_Types].xml\r\n2023-07-26 15:59:52 .....          717          425  package\\services\\metadata\\core-properties\\51518f895ddb457ab0cc0aedc65a7ba6.psmdcp\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 20:59:52            1885764       681681  5 files\r\n```\r\n\r\nThe non-symbols package has the correct content:\r\n```\r\nListing archive: CSG.Framework.CommandController.23.3.0.nupkg\r\n\r\n--\r\nPath = CSG.Framework.CommandController.23.3.0.nupkg\r\nType = zip\r\nPhysical Size = 683522\r\n\r\n   Date      Time    Attr         Size   Compressed  Name\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 15:59:52 .....          525          292  _rels\\.rels\r\n2023-07-26 15:59:52 .....          409          255  CSG.Framework.CommandController.nuspec\r\n2023-07-26 20:59:52 .....      1883648       680504  tools\\CSG.Framework.CommandController.exe\r\n2017-11-07 13:39:06 .....         3922          929  tools\\ServiceControl.ps1\r\n2023-07-26 15:59:52 .....          528          211  [Content_Types].xml\r\n2023-07-26 15:59:52 .....          717          425  package\\services\\metadata\\core-properties\\823d253a9625412ab9f984f4a3efd42c.psmdcp\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 20:59:52            1889749       682616  6 files\r\n```\r\n\r\n## User Impact\r\n\r\nThe symbols package has incorrect content.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31113196858","Type":"IssuesEvent","CreatedAt":"2023-08-14T20:49:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12804","RelatedDescription":"Closed issue \"NuGet restore ignores build folder of consumed nuget package when buildTransitive folder is also present\" (#12804) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nMSBuild version 17.6.3.22601, Visual Studio 2022 Version 17.6.6, nuget.exe 6.0.0.280\n\n### Worked before?\n\nAs far as I know, it has never worked.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n### Issue Description\r\n\r\nWhen building a project which consumes a `MyPackage` nuget package with both `build` and `buildTransitive` folders present, MSBuild does not import the `MyPackage.targets` file from **`build`** folder (or at least its `target`s do not get executed), but imports only the `MyPackage.targets` file from **`buildTransitive`** folder.\r\n\r\n### Steps to Reproduce\r\n\r\nThe **consumer project**'s `Consumer.csproj`:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MyPackage\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyPackage.csproj`:\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <PackageId>MyPackage</PackageId>\r\n    <Version>1.0.0</Version>\r\n    <Authors>your_name</Authors>\r\n    <Company>your_company</Company>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <None Include=\"MyBuild.targets\" Pack=\"true\" PackagePath=\"build/$(PackageId).targets\" />\r\n    <None Include=\"MyBuildTransitive.targets\" Pack=\"true\" PackagePath=\"buildTransitive/$(PackageId).targets\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuild.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuild\">\r\n  <Target Name=\"MyInitBuild\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuild\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuildTransitive.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuildTransitive\">\r\n  <Target Name=\"MyInitBuildTransitive\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuildTransitive\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nNote that `MyBuild.targets`'s target (`MyInitBuild`) and `MyBuildTransitive.targets`'s target (`MyInitBuildTransitive`) have different names, so **there is no target name collision** which could cause that only one of these targets are executed.\r\n\r\n### Expected Behavior\r\n\r\nI expect that both `MyBuild.targets` file and `MyBuildTransitive.targets` file are imported into the consumer project, thus both `MyInitBuild` target and `MyInitBuildTransitive` target are executed, so when building the consumer project the build output has both the `MyInitBuild` message and the `MyInitBuildTransitive` messages (the order does not matter).\r\n\r\nSo the build output should be either:\r\n```\r\nMyInitBuild\r\nMyInitBuildTransitive\r\n```\r\n\r\nor:\r\n```\r\nMyInitBuildTransitive\r\nMyInitBuild\r\n```\r\n\r\n### Actual Behavior\r\n\r\nIt seems that only `MyBuildTransitive.targets` file is imported into the consumer project, or at least only `MyInitBuildTransitive` target is executed, so the build output has only the `MyInitBuildTransitive` message.\r\n\r\n\r\n### Analysis\r\n\r\nThe problem seems to be that **`nuget restore`** creates a **`Consumer.csproj.nuget.g.targets`** in `Consumer` project's `out` folder, which only imports `buildTransitive\\MyPackage.targets`, but does not import `build\\MyPackage.targets`.\r\n\r\nCurrent `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\r\n`Consumer.csproj.nuget.g.targets` should import both `build\\MyPackage.targets` and `buildTransitive\\MyPackage.targets`.\r\n\r\nDesired `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets')\" />\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31113195682","Type":"IssuesEvent","CreatedAt":"2023-08-14T20:49:40","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12804","RelatedDescription":"Reopened issue \"NuGet restore ignores build folder of consumed nuget package when buildTransitive folder is also present\" (#12804) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nMSBuild version 17.6.3.22601, Visual Studio 2022 Version 17.6.6, nuget.exe 6.0.0.280\n\n### Worked before?\n\nAs far as I know, it has never worked.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n### Issue Description\r\n\r\nWhen building a project which consumes a `MyPackage` nuget package with both `build` and `buildTransitive` folders present, MSBuild does not import the `MyPackage.targets` file from **`build`** folder (or at least its `target`s do not get executed), but imports only the `MyPackage.targets` file from **`buildTransitive`** folder.\r\n\r\n### Steps to Reproduce\r\n\r\nThe **consumer project**'s `Consumer.csproj`:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MyPackage\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyPackage.csproj`:\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <PackageId>MyPackage</PackageId>\r\n    <Version>1.0.0</Version>\r\n    <Authors>your_name</Authors>\r\n    <Company>your_company</Company>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <None Include=\"MyBuild.targets\" Pack=\"true\" PackagePath=\"build/$(PackageId).targets\" />\r\n    <None Include=\"MyBuildTransitive.targets\" Pack=\"true\" PackagePath=\"buildTransitive/$(PackageId).targets\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuild.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuild\">\r\n  <Target Name=\"MyInitBuild\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuild\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuildTransitive.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuildTransitive\">\r\n  <Target Name=\"MyInitBuildTransitive\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuildTransitive\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nNote that `MyBuild.targets`'s target (`MyInitBuild`) and `MyBuildTransitive.targets`'s target (`MyInitBuildTransitive`) have different names, so **there is no target name collision** which could cause that only one of these targets are executed.\r\n\r\n### Expected Behavior\r\n\r\nI expect that both `MyBuild.targets` file and `MyBuildTransitive.targets` file are imported into the consumer project, thus both `MyInitBuild` target and `MyInitBuildTransitive` target are executed, so when building the consumer project the build output has both the `MyInitBuild` message and the `MyInitBuildTransitive` messages (the order does not matter).\r\n\r\nSo the build output should be either:\r\n```\r\nMyInitBuild\r\nMyInitBuildTransitive\r\n```\r\n\r\nor:\r\n```\r\nMyInitBuildTransitive\r\nMyInitBuild\r\n```\r\n\r\n### Actual Behavior\r\n\r\nIt seems that only `MyBuildTransitive.targets` file is imported into the consumer project, or at least only `MyInitBuildTransitive` target is executed, so the build output has only the `MyInitBuildTransitive` message.\r\n\r\n\r\n### Analysis\r\n\r\nThe problem seems to be that **`nuget restore`** creates a **`Consumer.csproj.nuget.g.targets`** in `Consumer` project's `out` folder, which only imports `buildTransitive\\MyPackage.targets`, but does not import `build\\MyPackage.targets`.\r\n\r\nCurrent `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\r\n`Consumer.csproj.nuget.g.targets` should import both `build\\MyPackage.targets` and `buildTransitive\\MyPackage.targets`.\r\n\r\nDesired `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets')\" />\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31113193962","Type":"IssuesEvent","CreatedAt":"2023-08-14T20:49:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12804","RelatedDescription":"Closed issue \"NuGet restore ignores build folder of consumed nuget package when buildTransitive folder is also present\" (#12804) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nMSBuild version 17.6.3.22601, Visual Studio 2022 Version 17.6.6, nuget.exe 6.0.0.280\n\n### Worked before?\n\nAs far as I know, it has never worked.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n### Issue Description\r\n\r\nWhen building a project which consumes a `MyPackage` nuget package with both `build` and `buildTransitive` folders present, MSBuild does not import the `MyPackage.targets` file from **`build`** folder (or at least its `target`s do not get executed), but imports only the `MyPackage.targets` file from **`buildTransitive`** folder.\r\n\r\n### Steps to Reproduce\r\n\r\nThe **consumer project**'s `Consumer.csproj`:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MyPackage\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyPackage.csproj`:\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <PackageId>MyPackage</PackageId>\r\n    <Version>1.0.0</Version>\r\n    <Authors>your_name</Authors>\r\n    <Company>your_company</Company>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <None Include=\"MyBuild.targets\" Pack=\"true\" PackagePath=\"build/$(PackageId).targets\" />\r\n    <None Include=\"MyBuildTransitive.targets\" Pack=\"true\" PackagePath=\"buildTransitive/$(PackageId).targets\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuild.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuild\">\r\n  <Target Name=\"MyInitBuild\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuild\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nThe **nuget package**'s `MyBuildTransitive.targets`:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" InitialTargets=\"MyInitBuildTransitive\">\r\n  <Target Name=\"MyInitBuildTransitive\">\r\n    <Message Importance=\"High\" Text=\"MyInitBuildTransitive\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nNote that `MyBuild.targets`'s target (`MyInitBuild`) and `MyBuildTransitive.targets`'s target (`MyInitBuildTransitive`) have different names, so **there is no target name collision** which could cause that only one of these targets are executed.\r\n\r\n### Expected Behavior\r\n\r\nI expect that both `MyBuild.targets` file and `MyBuildTransitive.targets` file are imported into the consumer project, thus both `MyInitBuild` target and `MyInitBuildTransitive` target are executed, so when building the consumer project the build output has both the `MyInitBuild` message and the `MyInitBuildTransitive` messages (the order does not matter).\r\n\r\nSo the build output should be either:\r\n```\r\nMyInitBuild\r\nMyInitBuildTransitive\r\n```\r\n\r\nor:\r\n```\r\nMyInitBuildTransitive\r\nMyInitBuild\r\n```\r\n\r\n### Actual Behavior\r\n\r\nIt seems that only `MyBuildTransitive.targets` file is imported into the consumer project, or at least only `MyInitBuildTransitive` target is executed, so the build output has only the `MyInitBuildTransitive` message.\r\n\r\n\r\n### Analysis\r\n\r\nThe problem seems to be that **`nuget restore`** creates a **`Consumer.csproj.nuget.g.targets`** in `Consumer` project's `out` folder, which only imports `buildTransitive\\MyPackage.targets`, but does not import `build\\MyPackage.targets`.\r\n\r\nCurrent `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\r\n`Consumer.csproj.nuget.g.targets` should import both `build\\MyPackage.targets` and `buildTransitive\\MyPackage.targets`.\r\n\r\nDesired `Consumer.csproj.nuget.g.targets`:\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\build\\MyPackage.targets')\" />\r\n    <Import Project=\"$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets\" Condition=\"Exists('$(NuGetPackageRoot)mypackage\\1.0.0\\buildTransitive\\MyPackage.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31109412483","Type":"IssuesEvent","CreatedAt":"2023-08-14T17:49:27","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12813","RelatedDescription":"Opened issue \"dotnet nuget trust command tests failed\" (#12813) at NuGet/Home","RelatedBody":"20+ dotnet integration tests (dotnet trust command) start to fail on Windows/Linux/MacOS when we start to test with the latest .NET SDK(8.0.100-preview.7.23376.3). \r\n\r\nExample: DotnetTrust_CertificateFingerPrintAction_Succeeds in build [6.8.0.364](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8240672&view=ms.vss-test-web.build-test-results-tab&runId=82284695&paneView=history&resultId=102258)\r\n```\r\nExpected value to be 0 because D:\\a_work\\1\\s.test\\work\\23334cfd\\3657e4ce\\dotnet.exe nuget trust certificate MyCompanyCert ED91436531A963204E1A356042EB72C066263A487DB4D952FE1A841A684A12D0 --allow-untrusted-root  --algorithm SHA256 --configfile D:\\a_work\\1\\s.test\\work\\ade0f261\\70ac90c5\\NuGet.Config should have succeeded but returned exit code 1 after 0.2s with the following output:\r\nDescription:\r\n\r\n\r\nUsage:\r\ndotnet nuget trust [<command>] [options]\r\n\r\n\r\nArguments:\r\n<author|certificate|list|remove|repository|source|sync>\r\n\r\n\r\nOptions:\r\n--algorithm <algorithm>\r\n--allow-untrusted-root\r\n--owners <owners>\r\n--configfile <configfile>\r\n-v, --verbosity <LEVEL>    Set the MSBuild verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n-?, -h, --help             Show command line help.\r\n\r\n\r\nUnrecognized command or argument 'MyCompanyCert'.\r\nUnrecognized command or argument 'ED91436531A963204E1A356042EB72C066263A487DB4D952FE1A841A684A12D0'.\r\n\r\n\r\n, but found 1 (difference of 1).\r\n```\r\n\r\nWe need to workaround this by testing with another sdk version."},{"Id":"31109320558","Type":"IssuesEvent","CreatedAt":"2023-08-14T17:45:06","Actor":"IanKemp","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12812","RelatedDescription":"Opened issue \"Add new PackageReference options to discriminate between compiled and documentation files \" (#12812) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nWe have a package consumed internally by our organisation that exposes some functionality that includes utility methods. Recently we have discovered a third-party package that implements some of these utilities in a better way than ours, as well as offering some others we were thinking about adding, so we want to wrap and bundle that package with ours, and simply delegate our methods to call into that package.\r\n\r\nHowever, we **do not** want consumers of our internal package to be able to access the methods in the third-party package, because some of the methods it provides are not relevant or could cause incorrect behaviour if called in isolation. Thus we have set that package's reference to be `PrivateAssets=\"compile\"` in our `.csproj`.\r\n\r\nFor the new methods we were going to add, that already exist in the third-party package, we've done this:\r\n\r\n```csharp\r\n<inheritdoc cref=\"ThirdPartyPackageNamespace.ThirdPartyPackageClass.DoSomething(OtherBclType, AThirdBclType)\" />\r\npublic static SomeBclType DoSomething(OtherBclType foo, AThirdBclType bar)\r\n    => ThirdPartyPackageNamespace.ThirdPartyPackageClass.DoSomething(foo, bar);\r\n```\r\n\r\nHowever, due to the fact that package documentation is contained in the `lib` folder next to its DLL, and that we've set `PrivateAssets=\"compile\"`, _the third-party package's documentation isn't included when our package is built_. In other words, the `<inheritdoc>` elements have no effect and consumers of our package see no docs.\r\n\r\nWhat is needed are two new options for `PrivateAssets`:\r\n\r\n* `compiledOnly` - applies to only DLLs in `lib` and its subdirectories\r\n* `documentationOnly` - applies to only documentation files in `lib` and its subdirectories\r\n\r\nIn our case we would then use `PrivateAssets=\"compiledOnly\"`. Further, `compile` would be reworked to effectively be the same as `compiledOnly;documentationOnly`.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"31086830527","Type":"IssuesEvent","CreatedAt":"2023-08-13T18:55:54","Actor":"rambotech","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12811","RelatedDescription":"Opened issue \"NuGet Package not being built in Visual Studio 2022 or on Github actions\" (#12811) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nmsbuild 17.7.2.37605\n\n### Worked before?\n\nunknown\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nTo make things simple to reproduce, clone the master branch from this repository which is having the problem:  https://github.com/rambotech/BOG.Framework\r\n\r\nThe Framework project has the <GeneratePackageOnBuild>true</GeneratePackageOnBuild> node in the project file.  The project also has a Nuspec file for the package.  Visual Studio 2022 will build the project with no errors, and previously the package file would appear as BOG.Framework.*.nupkg in bin/release.  Note: This is a .NET Framework 4.8.1 project, previously targeting 4.7.2 ... but neither target created the nupkg file in Visual Studio 2022.\r\n\r\nThe project also has Actions in the Github repo, which are looking for output in Framework/bin/release, but find none.  Locally, I get no package looking for *.nupkg (dir {repo_root}\\*.nupkg /s /b) after building in 2022.\r\n\r\nFor comparison, I have another project on GitHub which targets .NET 7, but the 2 projects generating nuget packages target .NET Standard 2.1, have the same GeneratePackageOnBuild node in their projects, and do generate their nuget packages in the bin/release folders.   See: https://github.com/rambotech/BOG.DropZone\r\n\r\nI've exhausted my options, so... help, please.\n\n### Verbose Logs\n\n```shell\nlogs can be obtained locally from the source code.\n```\n"},{"Id":"31071010569","Type":"IssuesEvent","CreatedAt":"2023-08-12T00:34:52","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12806","RelatedDescription":"Closed issue \"Can't add New Scaffold Identity\" (#12806) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nC:\\Users\\Nguyen Tuan Anh>dotnet --info .NET SDK:  Version:   8.0.100-preview.7.23376.3  Commit:    daebeea8ea  Runtime Environment:  OS Name:     Windows  OS Version:  10.0.19045  OS Platform: Windows  RID:         win10-x64  Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100-preview.7.23376.3\\  .NET workloads installed: There are no installed workloads to display.  Host:   Version:      8.0.0-preview.7.23375.6   Architecture: x64   Commit:       65b696cf5e   RID:          win-x64  .NET SDKs installed:   7.0.305 [C:\\Program Files\\dotnet\\sdk]   8.0.100-preview.6.23330.14 [C:\\Program Files\\dotnet\\sdk]   8.0.100-preview.7.23376.3 [C:\\Program Files\\dotnet\\sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0-preview.6.23329.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0-preview.7.23375.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0-preview.6.23329.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0-preview.7.23375.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]   Microsoft.WindowsDesktop.App 6.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 7.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.0-preview.6.23329.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]   Microsoft.WindowsDesktop.App 8.0.0-preview.7.23376.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]  Other architectures found:   x86   [C:\\Program Files (x86)\\dotnet]     registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]  Environment variables:   Not set  global.json file:   Not found  Learn more:   https://aka.ms/dotnet/info  Download .NET:   https://aka.ms/dotnet/download  C:\\Users\\Nguyen Tuan Anh>\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI have try to create new WebApp MVC.\r\nThen I Add Scaffold Item-> Add Identity.\r\nBut I failed.\r\n\r\nI Have try:\r\n- Add Package Microsoft.VisualStudio.Web.CodeGeneration.Design on Manage Nuget Package \r\nAnd I found\r\nMicrosoft.VisualStudio.Web.CodeGeneration.Design Version 8.0.0-preview.6.23360.4 \r\nBut Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore\" Version=\"8.0.0-preview.7.23375.9\r\nAnd I see the Error:\r\n![image](https://github.com/NuGet/Home/assets/18616693/4398613f-c8bc-46b9-b105-c3d35b542f26)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31070518184","Type":"PullRequestEvent","CreatedAt":"2023-08-11T23:34:10","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12810","RelatedDescription":"Opened pull request \"Spec for Package Source Mapping Package Management Actions in the PM UI\" (#12810) at NuGet/Home","RelatedBody":"Package Source Mapping Package Management Actions in the PM UI ([shortcut to rendered spec](https://github.com/NuGet/Home/blob/dev-donnie-msft-specSourceMappingActionSpec/proposed/2023/package-source-mapping-actions-PMUI.md))\r\n\r\nSpec for: https://github.com/NuGet/Home/issues/11366\r\nImplementation PR: https://github.com/NuGet/NuGet.Client/pull/5355"},{"Id":"31070504399","Type":"PullRequestEvent","CreatedAt":"2023-08-11T23:32:26","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12616","RelatedDescription":"Closed pull request \"[Draft] Spec for Package Source Mapping Actions in PM UI\" (#12616) at NuGet/Home","RelatedBody":"[Draft] Package Source Mapping Package Management Actions in the PM UI ([shortcut to rendered spec](https://github.com/NuGet/Home/blob/dev-donnie-msft-specSourceMappingActionSpec/proposed/2023/package-source-mapping-actions-PMUI.md))\r\n\r\nSpec for: https://github.com/NuGet/Home/issues/11366\r\n  - Marked Draft as there are questions about how we should proceed \r\n  - Various edge cases are unclear"},{"Id":"31069494786","Type":"IssuesEvent","CreatedAt":"2023-08-11T21:57:47","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12786","RelatedDescription":"Closed issue \"Opt-out of \"HTTP warning/error\" : add an allowInsecureConnections property in NuGet.Config\" (#12786) at NuGet/Home","RelatedBody":"We need to add an `allowInsecureConnections` property into `packageSources` section in NuGet.Config files, as below:\r\n```\r\n<!-- Allows insecure connections on a specific http source -->\r\n<packageSources>\r\n    <add key=\"Contoso\" value=\"http://contoso.com/packages/\" allowInsecureConnections=\"true\" />\r\n</packageSources>\r\n```\r\nSpec: https://github.com/NuGet/Home/blob/dev/proposed/2023/InsecureConnectionsDisableCertificateValidation.md#package-source-nuget-config\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-16T03:30:20.6816297Z","RunDurationInMilliseconds":1047}