{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21944920948","Type":"PullRequestEvent","CreatedAt":"2022-05-23T22:44:57","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9123","RelatedDescription":"Opened pull request \"[TFM Badges] Added + sign for badges.\" (#9123) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n\r\n* TODO\r\n\r\n### Addresses\r\nhttps://github.com/NuGet/NuGetGallery/issues/9044"},{"Id":"21906363699","Type":"IssuesEvent","CreatedAt":"2022-05-20T18:41:27","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9115","RelatedDescription":"Closed issue \"Multiple certificates in your server nodes, one untrusted?\" (#9115) at NuGet/NuGetGallery","RelatedBody":"Hello,\r\n\r\nFirst of all, love nuget. \r\nSecond, \r\n\r\nI'm having trouble accessing nuget via Visual Studio (and also via Chrome). \r\nSometimes it works, sometimes it doesn't.\r\nI'm accessing [v3/index.json](https://api.nuget.org/v3/index.json) to be precise.\r\n\r\n\r\nIs it possible you have two (multiple) server nodes, where one is using server certificate which is created by untrusted signer?\r\nWhenever I get response from server, where certificate path is \"*.nuget.org -> Microsoft Azure TLS Issuing CA 05 -> DigiCert Global Root G2\", everything is working just fine, but if I get response from other server, I get \"Untrusted issuer error\".\r\n\r\nSeems like you've replaced certificates on 27.4.2022, maybe you forgot to do it for one of the nodes?\r\n\r\nOr maybe there is problem with my organization's network or local machine ...\r\n\r\nBest regards,\r\nMatt\r\n"},{"Id":"21885254363","Type":"IssuesEvent","CreatedAt":"2022-05-19T17:57:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5102","RelatedDescription":"Closed issue \"Move to a new version of anglicangeek.markdownmailer\" (#5102) at NuGet/NuGetGallery","RelatedBody":"Gallery references the old unlisted version from 2011. There is a newer version (which is not unlisted) from 2013. We should use that one: https://www.nuget.org/packages/MarkdownMailer/"},{"Id":"21871935626","Type":"IssuesEvent","CreatedAt":"2022-05-19T06:32:37","Actor":"AbhitejJohn","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9122","RelatedDescription":"Opened issue \"[Feature]: Mapping type names to nuget packages to improve discoverability\" (#9122) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI find myself trying to determine the right nuget package to pull in for a type of interest. This isn't trivial the moment and is dependent on the fact that the author of the type has relevant documentation to point its consumers to the right nuget package which isn't always straightforward.\n\n### The Elevator Pitch\n\nMost times we start off with an API/interface of interest by looking at docs or searching for other references of it. It ought to be easy for consumers to go from there to a nuget package they could consume in their solutions. At the moment this isn't as simple as searching for the type name in nuget/a private feed and the UX showing up a list of packages that contain the type being searched for. This both improves discoverability and ease of mapping any API to a nuget package as long as it has been indexed. \r\n\r\nIt would be great if this experience was built into both the web client and other desktop clients as well.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"22011157345","Type":"IssuesEvent","CreatedAt":"2022-05-26T21:17:32","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11837","RelatedDescription":"Closed issue \"[Feature]: Allow specifying a package source for a PackageReference in the csproj\" (#11837) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nSay your company has a nuget package on their private nuget repository called `VeryGood.Package`, and an unrelated package also exists by the same name on nuget.org. This is not a problem when working on the project locally in visual studio, because the Nuget Package Manager tab will show both when you search and you can just click the one provided by your company.\r\n\r\nHowever, when building the project via the dotnet CLI, this creates a problem. If the csproj contains the following package reference\r\n```yml\r\n<PackageReference Include=\"VeryGood.Package\" Version=\"1.1.0\" />\r\n```\r\nthis is ambiguous between the one on nuget.org and the private repository. This is problematic for automated builds in Azure Devops for an example.\r\n\r\nI propose a `Source` option be added to `PackageReference` to determine where the package should come from.\r\n\r\nExample PackageReference:\r\n```yml\r\n<PackageReference Include=\"VeryGood.Package\" Version=\"1.1.0\" Source=\"PrivateNuget\"/>\r\n```\r\n\r\nExample nuget.config:\r\n```yml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"PrivateNuget\" value=\"https://pkgs.dev.azure.com/TheVeryGoodCompany/_packaging/TheVeryGoodCompanyNuget/nuget/v3/index.json\" />\r\n  </packageSources>\r\n</configuration>\r\n```\n\n### Additional Context and Details\n\n_No response_"},{"Id":"22008813533","Type":"IssuesEvent","CreatedAt":"2022-05-26T18:59:06","Actor":"GNUGradyn","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11837","RelatedDescription":"Closed issue \"[Feature]: Allow specifying a package source for a PackageReference in the csproj\" (#11837) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nSay your company has a nuget package on their private nuget repository called `VeryGood.Package`, and an unrelated package also exists by the same name on nuget.org. This is not a problem when working on the project locally in visual studio, because the Nuget Package Manager tab will show both when you search and you can just click the one provided by your company.\r\n\r\nHowever, when building the project via the dotnet CLI, this creates a problem. If the csproj contains the following package reference\r\n```yml\r\n<PackageReference Include=\"VeryGood.Package\" Version=\"1.1.0\" />\r\n```\r\nthis is ambiguous between the one on nuget.org and the private repository. This is problematic for automated builds in Azure Devops for an example.\r\n\r\nI propose a `Source` option be added to `PackageReference` to determine where the package should come from.\r\n\r\nExample PackageReference:\r\n```yml\r\n<PackageReference Include=\"VeryGood.Package\" Version=\"1.1.0\" Source=\"PrivateNuget\"/>\r\n```\r\n\r\nExample nuget.config:\r\n```yml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"PrivateNuget\" value=\"https://pkgs.dev.azure.com/TheVeryGoodCompany/_packaging/TheVeryGoodCompanyNuget/nuget/v3/index.json\" />\r\n  </packageSources>\r\n</configuration>\r\n```\n\n### Additional Context and Details\n\n_No response_"},{"Id":"22008632705","Type":"IssuesEvent","CreatedAt":"2022-05-26T18:47:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11792","RelatedDescription":"Closed issue \"[Bug]: `dotnet add \"x.csproj\" package y` adds NuGet package instead of updating existing `<PackageReference>`\" (#11792) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n6.0.202\r\n\r\n### Worked before?\r\n\r\nDon't know\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nMoved from https://github.com/dotnet/sdk/issues/25209\r\n\r\n### Describe the bug\r\n`dotnet add \"your.csproj\" package SimpleInjector.Packaging` command does not update `<PackageReference><Version></Version></PackageReference>` template:\r\n\r\n![image](https://user-images.githubusercontent.com/905878/166697188-755190a6-a5eb-4675-861f-7d278c8dab57.png)\r\n\r\nBut `dotnet remove \"your.csproj\" package SimpleInjector.Packaging` works with both templates:\r\n\r\n![image](https://user-images.githubusercontent.com/905878/166697574-2f548167-c48b-44ef-9887-76b38fd5c4fa.png)\r\n\r\nIt also doesn't update NuGet packages for \"new\" template. See https://github.com/dotnet/sdk/issues/25209#issuecomment-1117613201\r\n![image](https://user-images.githubusercontent.com/905878/166819341-65dc60f0-4a10-4a28-9866-60409650af98.png)\r\n\r\n### To Reproduce\r\n\r\n1. Your `csproj` file must contain this:\r\n```\r\n<PackageReference Include=\"SimpleInjector.Packaging\">\r\n  <Version>4.10.2</Version>\r\n</PackageReference>\r\n```\r\n2. Run `dotnet add \"your.csproj\" package SimpleInjector.Packaging`\r\n\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\n### Further technical details\r\n- Include the output of `dotnet --info`:\r\n```\r\nZestaw .NET SDK (odzwierciedlenie dowolnego pliku global.json):\r\n Version:   6.0.202\r\n Commit:    f8a55617d2\r\n\r\nSrodowisko uruchomieniowe:\r\n OS Name:     Windows\r\n OS Version:  10.0.19043\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.202\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.4\r\n  Commit:  be98e88c76\r\n```\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version: **CLI**\r\n\r\n### Verbose Logs\r\n\r\nThere is no `--verbosity` option for `dotnet add package`...\r\n\r\nHere is standard output:\r\n\r\nRunning command first time (with deleted `bin` and `obj` folders):\r\n```shell\r\ndotnet add \"bbb.csproj\" package SimpleInjector.Packaging\r\n  Trwa okreslanie projektów do przywrócenia...\r\n  Writing C:\\Users\\Adam\\AppData\\Local\\Temp\\tmp8AB8.tmp\r\ninfo : Dodawanie elementu PackageReference dla pakietu ,SimpleInjector.Packaging\" do projektu ,bbb.csproj\".\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/index.json\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/page/1.4.2.12140/3.1.2.json\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/page/3.1.3/4.8.0-alpha1.json\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/page/4.8.0-alpha2/5.0.0.json\r\ninfo : Trwa przywracanie pakietów dla elementu C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\bbb.csproj...\r\ninfo : Pakiet ,SimpleInjector.Packaging\" jest zgodny ze wszystkimi strukturami okreslonymi w projekcie ,bbb.csproj\".\r\ninfo : Element PackageReference dla pakietu ,SimpleInjector.Packaging\" w wersji ,5.0.0\" zostal dodany do pliku ,C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\bbb.csproj\".\r\ninfo : Generowanie pliku programu MSBuild C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\obj\\bbb.csproj.nuget.g.props.\r\ninfo : Generowanie pliku programu MSBuild C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\obj\\bbb.csproj.nuget.g.targets.\r\ninfo : Zapisywanie pliku zasobów na dysk. Sciezka: C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\obj\\project.assets.json\r\nlog  : Przywrócono element C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\bbb.csproj (w 314 ms).\r\n```\r\n\r\nRunning second time:\r\n```shell\r\ndotnet add \"bbb.csproj\" package SimpleInjector.Packaging\r\n  Trwa okreslanie projektów do przywrócenia...\r\n  Writing C:\\Users\\Adam\\AppData\\Local\\Temp\\tmpBD1E.tmp\r\ninfo : Dodawanie elementu PackageReference dla pakietu ,SimpleInjector.Packaging\" do projektu ,bbb.csproj\".\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/index.json\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/page/1.4.2.12140/3.1.2.json\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/page/3.1.3/4.8.0-alpha1.json\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/simpleinjector.packaging/page/4.8.0-alpha2/5.0.0.json\r\ninfo : Trwa przywracanie pakietów dla elementu C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\bbb.csproj...\r\ninfo : Pakiet ,SimpleInjector.Packaging\" jest zgodny ze wszystkimi strukturami okreslonymi w projekcie ,bbb.csproj\".\r\ninfo : Element PackageReference dla pakietu ,SimpleInjector.Packaging\" w wersji ,5.0.0\" zostal dodany do pliku ,C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\bbb.csproj\".\r\ninfo : Plik zasobów nie ulegl zmianie. Zapisywanie pliku zasobów jest pomijane. Sciezka: C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\obj\\project.assets.json\r\nlog  : Przywrócono element C:\\xxx\\yyy\\Source\\Client\\Client-Addons\\bbb\\bbb.csproj (w 133 ms).\r\n```"},{"Id":"22008572435","Type":"IssuesEvent","CreatedAt":"2022-05-26T18:43:33","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11804","RelatedDescription":"Closed issue \"[Bug]: NOTICE.TXT includes Lucene references\" (#11804) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\ndotnet --info .NET SDK (reflecting any global.json):  Version:   6.0.104  Commit:    915d644e45\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nHi,\r\n\r\nI'm writing here as I'm packaging dotnet suite for Ubuntu from source build, and we are finding some 3rd party software issues, one of them related to the Nuget.client as you can read here https://github.com/dotnet/source-build/issues/2147#issuecomment-1121310464.\r\n\r\nThe file https://github.com/NuGet/NuGet.Client/blob/0471d9e44848c4d00e37f2f7d4e9a1b69eb0b213/src/NuGet.Clients/NuGet.VisualStudio.Client/NOTICES.txt is propagated to the dotnet suite tarball source (it was built using MSBuild) through the processes carried out by the installer and the source build repos (it creates a /src/nuget-client.* folder), but looking at the software build and also the source code, the references to Lucene are no longer present (src/Lucene.Net/\\*) ... could it be not up-to-date? Could you check it, please?\r\n\r\nThanks in advance. Kind regards,\r\n\r\nMiriam\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"22008135574","Type":"PullRequestEvent","CreatedAt":"2022-05-26T18:15:59","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11838","RelatedDescription":"Opened pull request \"Package Status Indicators in Visual Studio.\" (#11838) at NuGet/Home","RelatedBody":"Introduction to an experience in Visual Studio in which a developer can view the current package statuses in the solution explorer.\r\n\r\nThis proposal introduces a concept of package status indicators in Visual Studio.\r\n\r\n[Rendered Spec]()\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"22006998435","Type":"IssuesEvent","CreatedAt":"2022-05-26T17:05:25","Actor":"GNUGradyn","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11837","RelatedDescription":"Opened issue \"[Feature]: Allow specifying a package source for a PackageReference in the csproj\" (#11837) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nSay your company has a nuget package on their private nuget repository called `VeryGood.Package`, and an unrelated package also exists by the same name on nuget.org. This is not a problem when working on the project locally in visual studio, because the Nuget Package Manager tab will show both when you search and you can just click the one provided by your company.\r\n\r\nHowever, when building the project via the dotnet CLI, this creates a problem. If the csproj contains the following package reference\r\n```yml\r\n<PackageReference Include=\"VeryGood.Package\" Version=\"1.1.0\" />\r\n```\r\nthis is ambiguous between the one on nuget.org and the private repository. This is problematic for automated builds in Azure Devops for an example.\r\n\r\nI propose a `Source` option be added to `PackageReference` to determine where the package should come from.\r\n\r\nExample PackageReference:\r\n```yml\r\n<PackageReference Include=\"VeryGood.Package\" Version=\"1.1.0\" Source=\"PrivateNuget\"/>\r\n```\r\n\r\nExample nuget.config:\r\n```yml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"PrivateNuget\" value=\"https://pkgs.dev.azure.com/TheVeryGoodCompany/_packaging/TheVeryGoodCompanyNuget/nuget/v3/index.json\" />\r\n  </packageSources>\r\n</configuration>\r\n```\n\n### Additional Context and Details\n\n_No response_"},{"Id":"22006615235","Type":"IssuesEvent","CreatedAt":"2022-05-26T16:41:57","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8416","RelatedDescription":"Closed issue \"Remove net40 support from NuGet.Framework\" (#8416) at NuGet/Home","RelatedBody":"NuGet/NuGet.Client#587 added `net40` as a TFM to `NuGet.Framework`\r\n\r\n> This is to support using NuGet 3.x inside of NuGet 2.x (NuGet.Core.dll), which targets net40-client\r\n\r\nWe no longer support NuGet 2.x, so this can be removed.\r\n\r\nto decide: remove in 5.x, or wait for 6.0"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":249,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-05-27T03:30:23.1646736Z","RunDurationInMilliseconds":1428}