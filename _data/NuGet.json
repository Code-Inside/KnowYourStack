{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23492843512","Type":"PullRequestEvent","CreatedAt":"2022-08-17T20:38:06","Actor":"aseemsahoo","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9198","RelatedDescription":"Opened pull request \"Bumped NuGet packages in NuGetGallery.FunctionalTests\" (#9198) at NuGet/NuGetGallery","RelatedBody":"The versions of the NuGet packages in `NuGetGallery.FunctionalTests` solution have been updated."},{"Id":"23491388537","Type":"IssuesEvent","CreatedAt":"2022-08-17T19:06:56","Actor":"bradleypearce","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9197","RelatedDescription":"Opened issue \"[Bug]: Unable to browse or restore packages via Nuget \" (#9197) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23480386881","Type":"IssuesEvent","CreatedAt":"2022-08-17T10:01:37","Actor":"apxltd","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9196","RelatedDescription":"Opened issue \"[NuGet.org Bug]: totalDownloads > 2.2b can crash clients assuming int32\" (#9196) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nA handful of \"really popular\" packages seem to have surpassed the 2.2b threshold:\r\n* Microsoft.NETCore.Platforms\r\n* Microsoft.Extensions.Primitives\r\n* Microsoft.Extensions.DependencyInjection.Abstractions\r\n\r\nAs a result, clients that process results from the [Search resource](https://docs.microsoft.com/en-us/nuget/api/search-query-service-resource) will be unable to query NuGet.org if they assume that the documented `integer` that `totalDownloads` uses is a 32-bit integer.\r\n\r\nUnfortunately, older versions of ProGet are one such client :(\r\n\r\nThis is causing a lot of ProGet users a lot of headaches / outages, especially since they can't quickly upgrade. It'd be really nice if this could be addressed on the back-end some how. Especially for users who can't easily upgrade.\r\n\r\nFigure this is a long shot, but if it's relatively easy... my suggestion:\r\n* `totalDownloads` is the total downloads, up to 2147483647 (`Int32.MaxValue`)\r\n* `totalDownloadsLong` is the total downloads, up to `UInt64.MaxValue`\r\n\r\nThis would allow existing clients to work indefinitely while allowing the few packages that go past 2.2b to continue showing their stats.\n\n### Repro Steps\n\nPerform a search for any of the popular packages mentioned:\r\n* Microsoft.NETCore.Platforms\r\n* Microsoft.Extensions.Primitives\r\n* Microsoft.Extensions.DependencyInjection.Abstractions\n\n### Expected Behavior\n\n`totalDownloads` returns 2147483647\r\n`totalDownloadsLong` returns the downloads up to  `UInt64.MaxValue`\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23477200245","Type":"IssuesEvent","CreatedAt":"2022-08-17T07:21:37","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9194","RelatedDescription":"Closed issue \"GitHubVulnerabilities2Db throwing disposed exceptions on HttpClient\" (#9194) at NuGet/NuGetGallery","RelatedBody":"We're seeing these exceptions in telemetry and they're blocking updates to vulnerability data."},{"Id":"23475107348","Type":"PullRequestEvent","CreatedAt":"2022-08-17T04:43:18","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9195","RelatedDescription":"Merged pull request \"Manage disposal of httpclient directly - autofac disposing early\" (#9195) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/9194\r\n\r\nIf we set a registration to `ExternallyOwned` we control its life cycle--an early disposal was breaking this service: https://autofac.readthedocs.io/en/latest/lifetime/disposal.html"},{"Id":"23474977021","Type":"PullRequestEvent","CreatedAt":"2022-08-17T04:30:04","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9195","RelatedDescription":"Opened pull request \"Manage disposal of httpclient directly - autofac disposing early\" (#9195) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/9194\r\n\r\nIf we set a registration to `ExternallyOwned` we control its life cycle--an early disposal was breaking this service: https://autofac.readthedocs.io/en/latest/lifetime/disposal.html"},{"Id":"23474473002","Type":"IssuesEvent","CreatedAt":"2022-08-17T03:36:51","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9194","RelatedDescription":"Opened issue \"GitHubVulnerabilities2Db throwing disposed exceptions on HttpClient\" (#9194) at NuGet/NuGetGallery","RelatedBody":"We're seeing these exceptions in telemetry and they're blocking updates to vulnerability data."},{"Id":"23469643808","Type":"PullRequestEvent","CreatedAt":"2022-08-16T20:22:08","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9192","RelatedDescription":"Merged pull request \"[ReleasePrep] RI of dev to main NuGetGallery\" (#9192) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23469432214","Type":"PullRequestEvent","CreatedAt":"2022-08-16T20:09:08","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9193","RelatedDescription":"Opened pull request \"Add section link support for READMEs\" (#9193) at NuGet/NuGetGallery","RelatedBody":"Fixes the issue where internal section links in a README do not link to the specified section, but instead take a user back to the top.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8833 "},{"Id":"23468763956","Type":"PullRequestEvent","CreatedAt":"2022-08-16T19:28:09","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9192","RelatedDescription":"Opened pull request \"[ReleasePrep] RI of dev to main NuGetGallery\" (#9192) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23468647846","Type":"PullRequestEvent","CreatedAt":"2022-08-16T19:21:11","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9191","RelatedDescription":"Merged pull request \"Bundle script for syntaxhighlight.js\" (#9191) at NuGet/NuGetGallery","RelatedBody":"syntaxhighlight.js was added by changes https://github.com/NuGet/NuGetGallery/issues/8632\r\n\r\nNeed update the functional test\r\n\r\nfunctional test: https://nuget.visualstudio.com/NuGetBuild/_build?definitionId=94&_a=summary"},{"Id":"23468196807","Type":"PullRequestEvent","CreatedAt":"2022-08-16T18:54:46","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9191","RelatedDescription":"Opened pull request \"Bundle script for syntaxhighlight.js\" (#9191) at NuGet/NuGetGallery","RelatedBody":"syntaxhighlight.js was added by changes https://github.com/NuGet/NuGetGallery/issues/8632\r\n\r\nNeed update the functional test"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23495619079","Type":"IssuesEvent","CreatedAt":"2022-08-18T00:47:55","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12035","RelatedDescription":"Opened issue \"[Bug]:  `--help` doesn't show help for `dotnet nuget add source`\" (#12035) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 7 Preview 7 SDK\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nExecute:  `dotnet nuget add source --help`\r\n\r\nExpected result:  help tailored to `dotnet nuget add source`\r\n\r\nActual result:  help tailored to `dotnet nuget`\r\n\r\nObservation:  the output says, \"`Use \"dotnet nuget [command] --help\" for more information about a command.`\"\n\n### Verbose Logs\n\n```shell\nNuGet Command Line 6.3.0.128\r\n\r\nUsage: dotnet nuget [options] [command]\r\n\r\nOptions:\r\n  -h|--help  Show help information\r\n  --version  Show version information\r\n\r\nCommands:\r\n  add      Add a NuGet source.\r\n  delete   Deletes a package from the server.\r\n  disable  Disable a NuGet source.\r\n  enable   Enable a NuGet source.\r\n  list     List configured NuGet sources.\r\n  locals   Clears or lists local NuGet resources such as http requests cache, packages folder, plugin operations cache  or machine-wide global packages folder.\r\n  push     Pushes a package to the server and publishes it.\r\n  remove   Remove a NuGet source.\r\n  sign     Signs NuGet package(s) at <package-paths> with the specified certificate.\r\n  trust    Manage the trusted signers.\r\n  update   Update a NuGet source.\r\n  verify   Verifies a signed NuGet package.\r\n\r\nUse \"dotnet nuget [command] --help\" for more information about a command.\n```\n"},{"Id":"23495576161","Type":"IssuesEvent","CreatedAt":"2022-08-18T00:42:44","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12017","RelatedDescription":"Closed issue \"[Bug]: Author primary signing certificate not trusted when installing package through an Azure DevOps feed\" (#12017) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.400\n\n### Worked before?\n\n6.0.302\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n# Reproduction steps\r\n1. Run an interactive container using image `mcr.microsoft.com/dotnet/sdk:6.0-alpine` or use the command `docker run -it --entrypoint /bin/sh mcr.microsoft.com/dotnet/sdk:6.0-alpine`\r\n1. Add an Azure DevOps feed that has nuget.org as a upstream source\r\n1. Remove the default nuget.org feed using `dotnet nuget remove source nuget.org`\r\n1. Create a console app using `dotnet new console`\r\n1. Install the package `NServiceBus.Extensions.Hosting` version 1.1.0 by using `dotnet add package NServiceBus.Extensions.Hosting --version 1.1.0`\r\n\r\n# Result\r\nInstalling the package logs the warning `warn : NU3018: Package 'NServiceBus.Extensions.Hosting 1.1.0' from source 'https://pkgs.dev.azure.com/rr-wfm/Platform/_packaging/nuget_test_feed/nuget/v3/index.json': The author primary signature's signing certificate is not trusted by the trust provider.`\r\n\r\nThe logs containing this error message can be found here: [Logs installing package using Azure DevOps feed.txt](https://github.com/NuGet/Home/files/9307034/Logs.installing.package.using.Azure.DevOps.feed.txt)\r\n\r\n# Expected result\r\nI would not expect this error message form occuring as installing the same package directly from nuget.org does not log this error message. See: [Logs installing package using nuget.org.txt](https://github.com/NuGet/Home/files/9307035/Logs.installing.package.using.nuget.org.txt).\r\n\r\nAlso comparing the package from both sources using the nuget package explorer does not reveal any differences.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"23495520499","Type":"IssuesEvent","CreatedAt":"2022-08-18T00:36:12","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12034","RelatedDescription":"Opened issue \"[Bug]:  warning for untrusted author-signing certificate when installing package from non-NuGet.org package source\" (#12034) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 6.0.400 SDK\n\n### Worked before?\n\n.NET 6.0.300 SDK \n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n## Repro steps\r\n\r\nOn Ubuntu 22.04 LTS:\r\n\r\n1. Execute in a shell window:\r\n\r\n    ```bash\r\n    curl -sSL https://dot.net/v1/dotnet-install.sh -o ./dotnet-install.sh\r\n    chmod +x ./dotnet-install.sh\r\n    mkdir ./dotnet\r\n    ./dotnet-install.sh --install-dir ./dotnet --channel 6.0 --version latest --quality ga --no-path\r\n    export DOTNET_NUGET_SIGNATURE_VERIFICATION=true\r\n    export DOTNET_MULTILEVEL_LOOKUP=0\r\n    mkdir ./test\r\n    pushd ./test\r\n    ../dotnet/dotnet new console\r\n    rm -r -f ./obj\r\n    ../dotnet/dotnet nuget locals --clear all\r\n    ../dotnet/dotnet add package NServiceBus.Extensions.Hosting --version 1.1.0\r\n    ```\r\n\r\n    This will install NServiceBus.Extensions.Hosting 1.1.0 from <https://nuget.org>.\r\n\r\n2. Verify that the previous step succeeded and that there were no warnings or errors.\r\n3. Create an Azure DevOps artifacts feed with <https://nuget.org> as an upstream source.\r\n4. Create a Personal Access Token (PAT) for the new feed.\r\n5. Where `<URL>` is the feed URL and `<PAT>` is the PAT, create a NuGet.config file in the ./test directory with the following content:\r\n\r\n    ```XML\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n    <packageSources>\r\n        <clear />\r\n        <add key=\"MyFeed\" value=\"<URL>\" />\r\n    </packageSources>\r\n    <packageSourceCredentials>\r\n        <MyFeed>\r\n        <add key=\"Username\" value=\"<PAT>\" />\r\n        <add key=\"ClearTextPassword\" value=\"something\" />\r\n        </MyFeed>\r\n    </packageSourceCredentials>\r\n    </configuration>\r\n    ```\r\n\r\n6. Execute:\r\n\r\n    ```shell\r\n    ../dotnet/dotnet remove package NServiceBus.Extensions.Hosting\r\n    rm -r -f ./obj\r\n    ../dotnet/dotnet nuget locals --clear all\r\n    ../dotnet/dotnet add package NServiceBus.Extensions.Hosting --version 1.1.0\r\n    ```\r\n\r\n7. Where `<URL>` is the feed URL, verify the previous step succeeded with the following warning:\r\n\r\n    ```text\r\n    warn : NU3018: Package 'NServiceBus.Extensions.Hosting 1.1.0' from source '<URL>': The author primary signature's signing certificate is not trusted by the trust provider.\r\n    ```\r\n\r\n## Context\r\nCrucial to the repro is that the author-signing certificate chains to a root certificate that is not currently in the .NET SDK fallback certificate bundle.  This issue is covered by https://github.com/NuGet/Home/issues/12033.\r\n\r\nHowever, the bug here is that the NuGet client policy is different when installing a package from NuGet.org versus another package source.  In both cases, the author-signing certificate is untrusted; however:\r\n\r\n* when installing from NuGet.org, the untrusted error for the author-signing certificate is ignored because NuGet.org's repository countersignature is trusted and acts as a fallback\r\n* when installing from another package source, the untrusted error for the author-signing certificate is not ignored\r\n\r\nIn both cases, I think there is diagnostic value in always reporting that the author-signing certificate is untrusted, but I don't see a reason why 2nd case above can't also use a trusted repository countersignature (if present) and downgrade the warning to informational or verbose/debug verbosity.\r\n\r\nNote that this behavior is limited to signature verification during restore operations.  `dotnet nuget verify` behavior should probably remain as it is.\n\n### Verbose Logs\n\n_No response_"},{"Id":"23494729584","Type":"IssuesEvent","CreatedAt":"2022-08-17T23:07:52","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12027","RelatedDescription":"Closed issue \"[Bug]: Package signature validation fails on Linux due to missing 'thawte_Primary_Root_CA' in codesignctl.pem\" (#12027) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nsdk:6.0.400\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nDockerfile\r\n\r\n```\r\nFROM mcr.microsoft.com/dotnet/sdk:6.0.400\r\nADD package.nupkg .\r\n\r\n# the line below fixes the issue\r\n# RUN curl https://www.thawte.com/roots/thawte_Primary_Root_CA.pem >> /usr/share/dotnet/sdk/6.0.400/trustedroots/codesignctl.pem\r\n\r\nRUN dotnet nuget verify --all -v d package.nupkg\r\n```\r\n\r\n[package.nupkg.zip](https://github.com/NuGet/Home/files/9349031/package.nupkg.zip)\r\n\r\n```\r\ndocker build .\r\n```\r\n\r\nLog:\r\n```\r\n#6 [3/3] RUN dotnet nuget verify --all -v d package.nupkg\r\n#6 sha256:6a29851b2c18885d4e3ae65a1695c2e38aa9d82b5df9acdd8c61b2d8717e5908\r\n#6 0.642 X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/6.0.400/trustedroots/codesignctl.pem'.\r\n#6 1.766\r\n#6 1.766 Verifying DevExtreme.AspNet.Core.22.1.4\r\n#6 1.766 /package.nupkg\r\n#6 1.766 Signature Hash Algorithm: SHA256\r\n#6 1.766\r\n#6 1.766 Signature type: Author\r\n#6 1.766 Verifying the author primary signature with certificate:\r\n#6 1.766   Subject Name: CN=Developer Express Incorporated, O=Developer Express Incorporated, L=Glendale, S=California, C=US\r\n#6 1.766   SHA1 hash: A7710850362BC7974A5A0C534649AC574EB878C3\r\n#6 1.766   SHA256 hash: 36BB68F3A2B0E22002107027E70D20BFA2C390EC009D38CE3610B3CC0144A9AF\r\n#6 1.766   Issued by: CN=thawte SHA256 Code Signing CA, O=\"thawte, Inc.\", C=US\r\n#6 1.766   Valid from: 01/15/2020 00:00:00 to 01/20/2023 23:59:59\r\n#6 1.766 trace:       Subject Name: CN=thawte SHA256 Code Signing CA, O=\"thawte, Inc.\", C=US\r\n#6 1.766 trace:       SHA1 hash: D00CFDBF46C98A838BC10DC4E097AE0152C461BC\r\n#6 1.766 trace:       SHA256 hash: C4D18E0A58E4EFFD17ED77C840B613EF15F551076EA92C2B77F6609A6C2557C7\r\n#6 1.766 trace:       Issued by: CN=thawte Primary Root CA, OU=\"(c) 2006 thawte, Inc. - For authorized use only\", OU=Certification Services Division, O=\"thawte, Inc.\", C=US\r\n#6 1.766 trace:       Valid from: 12/10/2013 00:00:00 to 12/09/2023 23:59:59\r\n#6 1.766 trace:             Subject Name: CN=thawte Primary Root CA, OU=\"(c) 2006 thawte, Inc. - For authorized use only\", OU=Certification Services Division, O=\"thawte, Inc.\", C=US\r\n#6 1.766 trace:             SHA1 hash: 91C6D6EE3E8AC86384E548C299295C756C817B81\r\n#6 1.766 trace:             SHA256 hash: 8D722F81A9C113C0791DF136A2966DB26C950A971DB46B4199F4EA54B78BFB9F\r\n#6 1.766 trace:             Issued by: CN=thawte Primary Root CA, OU=\"(c) 2006 thawte, Inc. - For authorized use only\", OU=Certification Services Division, O=\"thawte, Inc.\", C=US\r\n#6 1.766 trace:             Valid from: 11/17/2006 00:00:00 to 07/16/2036 23:59:59\r\n#6 1.766 debug: The author primary signature's certificate chain validation failed with error(s): UntrustedRoot\r\n#6 1.766 Timestamp: 07/22/2022 09:39:53\r\n#6 1.766 Verifying author primary signature's timestamp with timestamping service certificate:\r\n#6 1.766   Subject Name: CN=DigiCert Timestamp 2022 - 2, O=\"DigiCert, Inc.\", C=US\r\n#6 1.766   SHA1 hash: 8508F386515CB3D3077DB6B4B7C07F1B4A5E41DE\r\n#6 1.766   SHA256 hash: 9DA69015C349C6C1897845BA3582AD70C88FA4293BDB6ABE9C2BD2539279E63B\r\n#6 1.766   Issued by: CN=DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA, O=\"DigiCert, Inc.\", C=US\r\n#6 1.766   Valid from: 03/29/2022 00:00:00 to 03/14/2033 23:59:59\r\n#6 1.766 trace:       Subject Name: CN=DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA, O=\"DigiCert, Inc.\", C=US\r\n#6 1.766 trace:       SHA1 hash: B6C8AF834D4E53B673C76872AA8C950C7C54DF5F\r\n#6 1.766 trace:       SHA256 hash: 281734D4592D1291D27190709CB510B07E22C405D5E0D6119B70E73589F98ACF\r\n#6 1.766 trace:       Issued by: CN=DigiCert Trusted Root G4, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n#6 1.766 trace:       Valid from: 03/23/2022 00:00:00 to 03/22/2037 23:59:59\r\n#6 1.766 trace:             Subject Name: CN=DigiCert Trusted Root G4, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n#6 1.766 trace:             SHA1 hash: DDFB16CD4931C973A2037D3FC83A4D7D775D05E4\r\n#6 1.766 trace:             SHA256 hash: 552F7BDCF1A7AF9E6CE672017F4F12ABF77240C78E761AC203D1D9D20AC89988\r\n#6 1.766 trace:             Issued by: CN=DigiCert Trusted Root G4, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n#6 1.766 trace:             Valid from: 08/01/2013 12:00:00 to 01/15/2038 12:00:00\r\n#6 1.767\r\n#6 1.767 Finished with 1 errors and 0 warnings.\r\n#6 1.767 error: NU3018: The author primary signature's signing certificate is not trusted by the trust provider.\r\n#6 1.767\r\n#6 1.767 Package signature validation failed.\r\n```\r\n\r\nI found that codesignctl.pem contains 2 thawte certs:\r\n- CN=thawte Primary Root CA - G2, OU=(c) **2007** thawte, Inc. - For authorized use only\r\n- CN=thawte Primary Root CA - G3, OU=(c) **2008** thawte, Inc. - For authorized use only\r\n\r\nHowever, the particular package requires a different root to validate successfully:\r\n- CN=thawte Primary Root CA, OU=(c) **2006** thawte, Inc. - For authorized use only\n\n### Verbose Logs\n\n_No response_"},{"Id":"23494592300","Type":"IssuesEvent","CreatedAt":"2022-08-17T22:54:09","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12033","RelatedDescription":"Opened issue \"Signing:  use separate fallback certificate bundles for code signing and timestamping\" (#12033) at NuGet/Home","RelatedBody":"NuGet signed package verification on Linux and macOS uses the [fallback certificate bundle that ships in the .NET SDK](https://github.com/dotnet/sdk/pull/25687).  Some recent issues have pointed out that this certificate bundle lacks some root certificates and results in \"untrusted root\" warnings/errors during signed package verification.\r\n\r\nA goal of enabling signed package verification on non-Windows platforms is that trust decisions will always be correct.  (This has never been a problem on Windows.)  Whatever trust anchors we use must be valid for CS and TS.  Actually, it's a bit more nuanced in that whatever set of trust anchors we use for purpose _X_ must be valid for purpose _X_.  The set of trust anchors valid for CS and the set of trust anchors valid for TS intersect but do not necessarily overlap.  Using a trust anchor that is only valid for TS (or TLS, for that matter) to verify a CS certificate would be incorrect.\r\n\r\nThe certificate bundle in the .NET SDK is a subset of the [Windows CTL that is produced by the Microsoft Trusted Root Program](https://ccadb-public.secure.force.com/microsoft/IncludedCACertificateReportForMSFT).  While the certificate bundle contains root certificates that are valid for CS and TS, it only contains root certificates which are valid for _both_ CS and TS.  The bundle does not contain root certificates which are valid for one purpose one but not the other.\r\n\r\nWe have a plan (no ETA yet) to have separate fallback certificate bundles for CS and TS.  Each bundle will contain the complete set of root certificates for that purpose from the Windows CTL.\r\n\r\nThis change will require modifications to both dotnet/sdk and NuGet/NuGet.Client.\r\n\r\nRelated:\r\n\r\n* [Re-enabling signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md)\r\n* [Re-enabling Cross-Platform NuGet Signed Package Verification Technical Specification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification-technical.md)\r\n\r\nCC @richlander, @aortiz-msft"},{"Id":"23492260839","Type":"IssuesEvent","CreatedAt":"2022-08-17T20:01:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11993","RelatedDescription":"Closed issue \"[DCR]: nuget downloading transitive dependencies already in the .net SDK\" (#11993) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nProblem: Nuget downloads transitive dependencies that are part of the .net SDK. No need to download them.\r\n\r\nIf I create a new .net 6 Azure Function in Visual Studio 2022, and say `dotnet restore -v n`, I see that NuGet downloads packages that are baked into the .net SDK--they won't ever be used. Examples:\r\n\r\n```\r\nInstalled Microsoft.AspNetCore.Http 2.1.0 from https://api.nuget.org/v3/index.json with content hash eAPryjDRH41EYY2sOMHCu+tHXLI6PUN1AsOPKst6GbiIoMi8wJCiPcE4h9418tKje1oUzmMc2Iz8fFPPVamfaw==.\r\nInstalled System.Net.Http 4.3.0 from https://api.nuget.org/v3/index.json with content hash sYg+FtILtRQuYWSIAuNOELwVuVsxVyJGWQyOnlAzhV4xvhyFnON1bAzYYC+jjRW8JREM45R0R5Dgi8MTC5sEwA==.\r\nInstalled System.Net.Sockets 4.3.0 from https://api.nuget.org/v3/index.json with content hash m6icV6TqQOAdgt5N/9I5KNpjom/5NFtkmGseEH+AK/hny8XrytLH3+b5M8zL/Ycg3fhIocFpUMyl/wpFnVRvdw==.\r\n```\r\n\r\nFrom nuget.org this is not too much of a problem, but when we have a self-hosted repository that disallows certain versions--like System.Net.Sockets 4.3.0 due to [a vulnerability](https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2019-1301)--dotnet restore gives a 404 and errors out. Our app won't ever use that package though. No need to error on failing to download it.\n\n### Desired Behavior\n\nDesired behavior is that it doesn't download these transitive dependencies that won't ever be used. Or, if taking the runtime into context is out-of-scope for nuget, a configuration or option to say 'if you can't download a package, just keep going' would be excellent.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":49,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2022-08-18T03:30:26.4611865Z","RunDurationInMilliseconds":1316}