{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"19072426105","Type":"IssuesEvent","CreatedAt":"2021-11-27T05:47:11","Actor":"nfMalde","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8894","RelatedDescription":"Opened issue \"[Feature]:  Syntax Highlighting for code example ins Readme.md\" (#8894) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nThe code examples on .nuget have no syntax highlighting. In some case this might be confusing for users.\r\n\n\n### The Elevator Pitch\n\nAdd Syntax Highlighting for code examples at readme.md.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"19023914763","Type":"PullRequestEvent","CreatedAt":"2021-11-23T23:28:05","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8893","RelatedDescription":"Merged pull request \"[Gallery] Merge from dev to main for Roslyn Analyzer\" (#8893) at NuGet/NuGetGallery","RelatedBody":"There is no need for a deployment."},{"Id":"19023654796","Type":"PullRequestEvent","CreatedAt":"2021-11-23T23:01:08","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8893","RelatedDescription":"Opened pull request \"[Gallery] Merge from dev to main for Roslyn Analyzer\" (#8893) at NuGet/NuGetGallery","RelatedBody":"There is no need for a deployment."},{"Id":"19023626903","Type":"PullRequestEvent","CreatedAt":"2021-11-23T22:58:22","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8891","RelatedDescription":"Merged pull request \"[Gallery] Configure local build.ps1 for Roslyn Analyzer\" (#8891) at NuGet/NuGetGallery","RelatedBody":"This is for the package build pipeline.\r\n\r\nTest in both local build and build pipeline.\r\n"},{"Id":"19023055454","Type":"PullRequestEvent","CreatedAt":"2021-11-23T22:04:24","Actor":"JakubHaladej","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8892","RelatedDescription":"Opened pull request \"Allow user selection in install command\" (#8892) at NuGet/NuGetGallery","RelatedBody":"https://github.com/NuGet/NuGetGallery/issues/8886 Prevent autoselection in command box so user can select parts he wants."},{"Id":"19021051400","Type":"PullRequestEvent","CreatedAt":"2021-11-23T19:27:16","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8891","RelatedDescription":"Opened pull request \"[Gallery] Configure local build.ps1 for Roslyn Analyzer\" (#8891) at NuGet/NuGetGallery","RelatedBody":"This is for the package build pipeline.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"19068418494","Type":"IssuesEvent","CreatedAt":"2021-11-26T17:03:15","Actor":"bitbonk","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11415","RelatedDescription":"Opened issue \"[Bug]: NU\" (#11415) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 3.1.415\n\n### Worked before?\n\n.NET SDK 3.1.116\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWe have a `MyProject.RuntimeOnlyDeps.nuspec` file inside a `MyProject.RuntimeOnlyDeps` folder with a `MyProject.RuntimeOnlyDeps.csproj` that targets  `netcoreapp3.1` and that is needed to deploy some assemblies to the build output that need to be loaded by the app but should never be added as reference to the consumer of our nuget packages.\r\n\r\n`MyProject.RuntimeOnlyDeps.nuspec` has the following content.\r\n\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>MyProject.RuntimeOnlyDeps.nuspec</id>\r\n    <version>1.2.3456</version>\r\n    ...\r\n  </metadata>\r\n  <files>\r\n    <file src=\"_._\" target=\"ref\\netcoreapp3.1\" />\r\n    <file src=\"bin\\Release\\netcoreapp3.1\\Telerik*.dll\" target=\"lib\\netcoreapp3.1\"/>\r\n  </files>\r\n</package>\r\n```\r\n\r\nWhen we pack using `dotnet pack MyProject.RuntimeOnlyDeps.csproj` with SDK 3.1.116 or SDK 3.1.415 (no difference here) we get the following errors:\r\n\r\n> error NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below: \r\n> error NU5128: - Add a dependency group for .NETCoreApp3.1 to the nuspec [c:\\build\\_work\\342\\s\\src\\MyProject.RuntimeOnlyDeps\\MyProject.RuntimeOnlyDeps.csproj]\r\n\r\nCan this error be solved? If so, how?\r\n\r\nFurthermore, on the Azure Devops Server build pipeline we have `WarningsAsErros` enabled. There with SDK 3.1.116 the build did not break despite the aforementioned errors. with SDK 3.1.415 however, the build suddenly breaks. Why this change in behavior?  \r\n \n\n### Verbose Logs\n\n_No response_"},{"Id":"19044968103","Type":"IssuesEvent","CreatedAt":"2021-11-25T06:08:55","Actor":"MGBtrust","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11414","RelatedDescription":"Closed issue \"MGBTRUST NuGet\" (#11414) at NuGet/Home","RelatedBody":"*"},{"Id":"19044966634","Type":"IssuesEvent","CreatedAt":"2021-11-25T06:08:46","Actor":"MGBtrust","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11414","RelatedDescription":"Opened issue \"MGBTRUST NuGet\" (#11414) at NuGet/Home","RelatedBody":"*"},{"Id":"19042128320","Type":"IssuesEvent","CreatedAt":"2021-11-24T23:56:27","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11090","RelatedDescription":"Closed issue \"Reduce UI thread switching when determining solution folder and if solution is open\" (#11090) at NuGet/Home","RelatedBody":"NuGet's Visual Studio extension has a class named `VsSolutionManager`, which provides some APIs to the rest of our code. Two of these APIs, `SolutionDirectory` and `IsSolutionOpenAsync` switch to the UI thread.\r\n\r\nIn at least one of the code paths, `IsSolutionOpenAsync` is called from a background thread, therefore switches to the UI thread, and returns it's value. This causes the caller to schedule its continuation on the background thread, but it then immediately calls another API that switches to the UI thread again.  This adds latency to the customer experience. While switching to the UI thread in the caller will remove the bouncing between threads, code running on the UI thread prevents other code from using the UI thread until our code finishes running. Therefore removing the need for the UI thread is preferable.\r\n\r\nSolutionDirectory can be obtained once, and cached, eliminating the need to switch to the UI thread every time the directory is needed.\r\n\r\nThis class already listens to solution events, so IsSolutionOpenAsync can cache the last known state change."},{"Id":"19041393207","Type":"IssuesEvent","CreatedAt":"2021-11-24T22:23:48","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11409","RelatedDescription":"Closed issue \"Reduce heap allocations in ResolverUtility.FindLibraryByVersionAsync\" (#11409) at NuGet/Home","RelatedBody":"@kartheekp-ms commented on [Tue Nov 23 2021](https://github.com/NuGet/Client.Engineering/issues/1314)\n\nWhile working on https://github.com/nuget/client.engineering/issues/1057 issue, I noticed that `ResolverUtility.FindLibraryByVersionAsync` method https://github.com/NuGet/NuGet.Client/blob/a8b6b1fb3a1bccd207a83612cd0f5e1f4ff1d0b8/src/NuGet.Core/NuGet.DependencyResolver.Core/ResolverUtility.cs#L363 has following warnings reported by the `PerformanceSensitive` analyzers.\r\n\r\nSeverity | Code | Description | Project | File | Line | Suppression State\r\n-- | -- | -- | -- | -- | -- | --\r\nWarning | HAA0302 | The compiler will emit a class that will hold this as a field to allow   capturing of this closure | NuGet.DependencyResolver.Core (net472) | ~\\NuGet.Client-W1\\src\\NuGet.Core\\NuGet.DependencyResolver.Core\\ResolverUtility.cs | 365 | Active\r\nWarning | HAA0301 | Heap allocation of closure Captures:   libraryRange,framework,cacheContext,logger,token | NuGet.DependencyResolver.Core (net472) | ~\\NuGet.Client-W1\\src\\NuGet.Core\\NuGet.DependencyResolver.Core\\ResolverUtility.cs | 373 | Active\r\nWarning | HAA0302 | The compiler will emit a class that will hold this as a field to allow   capturing of this closure | NuGet.DependencyResolver.Core (net472) | ~\\NuGet.Client-W1\\src\\NuGet.Core\\NuGet.DependencyResolver.Core\\ResolverUtility.cs | 423 | Active\r\n\r\nThis method has ~880 MB allocations during solution restore for OrchardCore solution https://github.com/OrchardCMS/OrchardCore/tree/75923732c36d2785cb869affb805f0ff19d1847c\r\n\r\n![image](https://user-images.githubusercontent.com/52756182/143098452-39101c02-b521-4410-89a1-e4c76b4eeed3.png)\n\n"},{"Id":"19039254142","Type":"IssuesEvent","CreatedAt":"2021-11-24T19:08:56","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11413","RelatedDescription":"Opened issue \"[Bug]: Package Source Mapping matches found should not be logged for projects!\" (#11413) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\n6.0\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nSay you have a NuGet.Config setup as following, with source mapping enabled: \r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <config>\r\n    <add key=\"globalPackagesFolder\" value=\"packages\" />\r\n  </config>\r\n  <packageSources>\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n    <add key=\"nuget\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"dotnet-core\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\r\n  </packageSources>\r\n  <packageSourceMapping>\r\n    <packageSource key=\"nuget\">\r\n      <package pattern=\"*\" />\r\n    </packageSource>\r\n    <packageSource key=\"dotnet-core\">\r\n      <package pattern=\"Contoso.*\" />\r\n    </packageSource>\r\n  </packageSourceMapping>\r\n</configuration>\r\n\r\n```\r\n\r\n\r\nand you have a project called `Contoso.Application`, referencing `Contoso.Lib1` (project as well). \r\n\r\nThe logs would display.\r\n\r\n```console\r\nPackage source mapping matches found for package ID 'Contoso.Application' are: 'nuget,dotnet-core'.\r\n         Package source mapping matches found for package ID 'Contoso.Lib1' are: 'nuget,dotnet-core'.\r\n         Package source mapping matches found for package ID 'Contoso.Lib1' are: 'nuget,dotnet-core'.\r\n         Package source mapping matches found for package ID 'Newtonsoft.Json' are: 'nuget'.\r\n         Package source mapping matches found for package ID 'Newtonsoft.Json' are: 'nuget'.\r\n```\r\n\r\nwhich is misleading. \r\n\r\n\r\n\r\n[PackageSourceMappingPlayground.zip](https://github.com/NuGet/Home/files/7598161/PackageSourceMappingPlayground.zip)\r\n\r\nOriginally reported in https://github.com/NuGet/Home/issues/11406 by @cheesi. \n\n### Verbose Logs\n\n```shell\nUsing \"RestoreTask\" task from assembly \"C:\\Program Files\\dotnet\\sdk\\6.0.100\\NuGet.Build.Tasks.dll\".\r\n       Task \"RestoreTask\"\r\n         (in) RestoreGraphItems Count '10'\r\n         (in) RestoreDisableParallel 'False'\r\n         (in) RestoreNoCache 'False'\r\n         (in) RestoreIgnoreFailedSources 'False'\r\n         (in) RestoreRecursive 'True'\r\n         (in) RestoreForce 'False'\r\n         (in) HideWarningsAndErrors 'False'\r\n         (in) RestoreForceEvaluate 'False'\r\n         (in) RestorePackagesConfig 'False'\r\n         Running restore with 8 concurrent jobs.\r\n         Reading project file C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\Contoso.Application.csproj.\r\n         Reading project file C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\Contoso.Lib1.csproj.\r\n         The restore inputs for 'Contoso.Application' have changed. Continuing restore.\r\n         The restore inputs for 'Contoso.Lib1' have changed. Continuing restore.\r\n         Restoring packages for C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\Contoso.Lib1.csproj...\r\n         Restoring packages for C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\Contoso.Application.csproj...\r\n         Restoring packages for .NETCoreApp,Version=v6.0...\r\n         Restoring packages for .NETCoreApp,Version=v6.0...\r\n         Package source mapping matches found for package ID 'Contoso.Application' are: 'nuget,dotnet-core'.\r\n         Package source mapping matches found for package ID 'Contoso.Lib1' are: 'nuget,dotnet-core'.\r\n         Package source mapping matches found for package ID 'Contoso.Lib1' are: 'nuget,dotnet-core'.\r\n         Package source mapping matches found for package ID 'Newtonsoft.Json' are: 'nuget'.\r\n         Package source mapping matches found for package ID 'Newtonsoft.Json' are: 'nuget'.\r\n           GET https://api.nuget.org/v3-flatcontainer/newtonsoft.json/index.json\r\n           OK https://api.nuget.org/v3-flatcontainer/newtonsoft.json/index.json 174ms\r\n           GET https://api.nuget.org/v3-flatcontainer/newtonsoft.json/13.0.1/newtonsoft.json.13.0.1.nupkg\r\n           OK https://api.nuget.org/v3-flatcontainer/newtonsoft.json/13.0.1/newtonsoft.json.13.0.1.nupkg 10ms\r\n         Resolving conflicts for net6.0...\r\n         Resolving conflicts for net6.0...\r\n         Acquiring lock for the installation of Newtonsoft.Json 13.0.1\r\n         Acquiring lock for the installation of Newtonsoft.Json 13.0.1\r\n         Acquired lock for the installation of Newtonsoft.Json 13.0.1\r\n         PackageSignatureVerificationLog: PackageIdentity: Newtonsoft.Json.13.0.1 Source: https://api.nuget.org/v3/index.json PackageSignatureValidity: True\r\n         Installed Newtonsoft.Json 13.0.1 from https://api.nuget.org/v3/index.json with content hash ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==.\r\n         Lock not required - Package already installed Newtonsoft.Json 13.0.1\r\n         Checking compatibility of packages on net6.0.\r\n         Checking compatibility of packages on net6.0.\r\n         Checking compatibility for Contoso.Lib1 1.0.0 with net6.0.\r\n         Checking compatibility for Contoso.Application 1.0.0 with net6.0.\r\n         Checking compatibility for Newtonsoft.Json 13.0.1 with net6.0.\r\n         Checking compatibility for Contoso.Lib1 1.0.0 with net6.0.\r\n         Checking compatibility for Newtonsoft.Json 13.0.1 with net6.0.\r\n         All packages and projects are compatible with net6.0.\r\n         All packages and projects are compatible with net6.0.\r\n         Committing restore...\r\n         Committing restore...\r\n         Generating MSBuild file C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\obj\\Contoso.Application.csproj.nuget.g.props.\r\n         Generating MSBuild file C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\obj\\Contoso.Lib1.csproj.nuget.g.props.\r\n         Writing assets file to disk. Path: C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\obj\\project.assets.json\r\n         Writing assets file to disk. Path: C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\obj\\project.assets.json\r\n         Writing cache file to disk. Path: C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\obj\\project.nuget.cache\r\n         Writing cache file to disk. Path: C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\obj\\project.nuget.cache\r\n         Persisting dg to C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\obj\\Contoso.Application.csproj.nuget.dgspec.json\r\n         Persisting dg to C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\obj\\Contoso.Lib1.csproj.nuget.dgspec.json\r\n         Restored C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\Contoso.Application.csproj (in 1.31 sec).\r\n         Restored C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\Contoso.Lib1.csproj (in 1.31 sec).\r\n\r\n         NuGet Config files used:\r\n             C:\\Code\\Temp\\PackageSourceMappingPlayground\\NuGet.Config\r\n             C:\\Code\\NuGet.Config\r\n             C:\\Users\\Roki2\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n\r\n         Feeds used:\r\n             https://api.nuget.org/v3/index.json\r\n             https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\r\n\r\n         Installed:\r\n             1 package(s) to C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\Contoso.Application.csproj\r\n             1 package(s) to C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Lib1\\Contoso.Lib1.csproj\r\n       Done executing task \"RestoreTask\".\r\n     1>Done building target \"Restore\" in project \"Contoso.Application.csproj\".\r\n     1>Done Building Project \"C:\\Code\\Temp\\PackageSourceMappingPlayground\\Contoso.Application\\Contoso.Application.csproj\" (Restore target(s)).\n```\n"},{"Id":"19036883963","Type":"IssuesEvent","CreatedAt":"2021-11-24T16:22:34","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11412","RelatedDescription":"Opened issue \"[DCR]: Deprecate VS Extensibility APIs that \" (#11412) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nSome VS extensibility APIs use `System.Version` as a package identifier. This doesn't support pre-release (SemVer) formatting, hence these APIs are unusable with prerelease packages. Extension authors may be confused, particularly if they don't check `Version.TryParse`'s return value.\n\n### Desired Behavior\n\nMark affected APIs with `ObsoleteAttribute`, so extension authors are made aware they should use a different API where version is a string instead.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1410695861508526080","CreatedAt":"2021-07-01T20:24:37+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠ \nHave you recently experienced issues interacting with https://t.co/KVB7werYQh's Search API?… https://t.co/3eM1gicePx","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2021-11-28T05:30:30.8004579Z","RunDurationInMilliseconds":1434}