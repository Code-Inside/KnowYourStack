{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23829850915","Type":"IssuesEvent","CreatedAt":"2022-09-05T19:05:10","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9220","RelatedDescription":"Opened issue \"[Self-hosted Bug]: Running Gallery locally taints localhost with HSTS header which breaks authentication in other apps\" (#9220) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nGallery unconditionally uses HSTS header, so when running locally, browser you open it with receives instruction to always use HTTPS for localhost. Unfortunately, browsers seem to associate that \"always use HTTPS for localhost\" with just a hostname, not with \"hostname/port\" combination.\r\n\r\nThis breaks the authentication in apps that do a browser hop through localhost for it. For example Azure storage explorer: you try to authenticate using Azure account in it, you get directed to a browser, which happily replaces `http` with `https` although the request is done on some random port and then fails to negotiate TLS session, because whatever listens for it does not expect that negotiation.\n\n### Repro Steps\n\n1. Run Gallery once and access it with a default browser.\r\n2. Open Azure storage explorer and try to authenticate using Azure account.\r\n\r\nObserve the \"The connection for this site is not secure. localhost sent an invalid response.\" or similar response.\n\n### Expected Behavior\n\nAuthentication from other apps should not break.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23824106706","Type":"IssuesEvent","CreatedAt":"2022-09-05T13:36:42","Actor":"maksperovpm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9219","RelatedDescription":"Opened issue \"Grpc.Net.Common .NETStandard is missing \"Grpc.Net.Compression.DeflateCompressionProvider\"\" (#9219) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nI'm using a host application which targets .NET 6.0 with GRPC service developed under windows which references \"Grpc.Net.Common\". under windows all works great but when the solution is built and packages restore under a debian machine (docker), it restores this library as .NETStandard v2.0 which is not the same one which is restored on my machine (mine is .NETCoreApp v6.0).\r\nwhen i started the service under debian i got the following exception:\r\n\r\n`---> System.TypeLoadException: Could not load type 'Grpc.Net.Compression.DeflateCompressionProvider' from assembly 'Grpc.Net.Common, Version=2.0.0.0, Culture=neutral, PublicKeyToken=d754f35622e28bad'.`\r\n\r\nwhen i opened the Grpc.Net.Common under dotPeek from the docker (.NETStandard v2.0) i can see that Grpc.Net.Compression.DeflateCompressionProvider doesn't exist there. it DOES exist on the .NETCoreApp v6.0 version which was restored on my windows machine.\r\nwhy is this class missing in the .NETStandard v2.0 version?\r\n\r\nin this image, the package that is being restored is the .NETStandard one - i'm not sure why\r\nhttps://pasteboard.co/PaeZqwwMYcc5.jpg\r\n\r\nOn the debian env we ARE using .NET 6 - the same solution is being restored & compiled there\r\nWe restore our project based on mcr.microsoft.com/dotnet/sdk:6.0-bullseye-slim docker container, with this command:\r\n\r\n`RUN nuget restore ./PATH_TO_SOLUTION_FILE`\r\n\r\nthe \"nuget\" package we are using was installed from Mono repository because the native nuget from debian 11 was causing us issues.\r\n\n\n### Repro Steps\n\nIn this image `mcr.microsoft.com/dotnet/sdk:6.0-bullseye-slim` install cross-platform NuGet from Mono-Project repository and try to restore a project that uses package `<PackageReference Include=\"Grpc.Net.Common\" Version=\"2.41.0\" />`\n\n### Expected Behavior\n\nRestore .NET 6 version of Grpc.Net.Common.\n\n### Screenshots\n\nhttps://pasteboard.co/PaeZqwwMYcc5.jpg\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23822127499","Type":"IssuesEvent","CreatedAt":"2022-09-05T12:12:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9218","RelatedDescription":"Opened issue \"[Incident]: api.nuget.org is failing for some requests \" (#9218) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWhile restoring packages from https://api.nuget.org/v3/index.json, you may encounter request timeouts or errors. This is an active incident that the NuGet.org team is investigating.\n\n### Repro Steps\n\nTBD\n\n### Expected Behavior\n\nTBD\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23797670970","Type":"IssuesEvent","CreatedAt":"2022-09-02T22:16:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8726","RelatedDescription":"Closed issue \"[README]: Support strikethroughs \" (#8726) at NuGet/NuGetGallery","RelatedBody":"[GitHub flavored markdown](https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown) supports \"strikethroughs\": `~~foo~~` becomes ~~foo~~\r\n\r\nThe following popular C# GitHub projects use strikethroughs in their READMEs:\r\n\r\nGitHub project | NuGet README preview | Stars\r\n-- | -- | --\r\n[dotnet/reactive](https://www.github.com/dotnet/reactive#readme) | [Preview](https://dev.nugettest.org/packages/loic.dotnet.reactive?preview=1#show-readme-container) | 5033\r\n[Live-Charts/Live-Charts](https://www.github.com/Live-Charts/Live-Charts#readme) | [Preview](https://dev.nugettest.org/packages/loic.Live-Charts.Live-Charts?preview=1#show-readme-container) | 4931\r\n[randyrants/sharpkeys](https://www.github.com/randyrants/sharpkeys#readme) | [Preview](https://dev.nugettest.org/packages/loic.randyrants.sharpkeys?preview=1#show-readme-container) | 4053\r\n[SteamTools-Team/SteamTools](https://www.github.com/SteamTools-Team/SteamTools#readme) | [Preview](https://dev.nugettest.org/packages/loic.SteamTools-Team.SteamTools?preview=1#show-readme-container) | 3196\r\n[morelinq/MoreLINQ](https://www.github.com/morelinq/MoreLINQ#readme) | [Preview](https://dev.nugettest.org/packages/loic.morelinq.MoreLINQ?preview=1#show-readme-container) | 2683\r\n[hanmin0822/MisakaTranslator](https://www.github.com/hanmin0822/MisakaTranslator#readme) | [Preview](https://dev.nugettest.org/packages/loic.hanmin0822.MisakaTranslator?preview=1#show-readme-container) | 1793\r\n[ModernFlyouts-Community/ModernFlyouts](https://www.github.com/ModernFlyouts-Community/ModernFlyouts#readme) | [Preview](https://dev.nugettest.org/packages/loic.ModernFlyouts-Community.ModernFlyouts?preview=1#show-readme-container) | 1678\r\n[leiurayer/downkyi](https://www.github.com/leiurayer/downkyi#readme) | [Preview](https://dev.nugettest.org/packages/loic.leiurayer.downkyi?preview=1#show-readme-container) | 1530\r\n[SlightlyMad/VolumetricLights](https://www.github.com/SlightlyMad/VolumetricLights#readme) | [Preview](https://dev.nugettest.org/packages/loic.SlightlyMad.VolumetricLights?preview=1#show-readme-container) | 1517\r\n[Accelerider/Accelerider.Windows](https://www.github.com/Accelerider/Accelerider.Windows#readme) | [Preview](https://dev.nugettest.org/packages/loic.Accelerider.Accelerider.Windows?preview=1#show-readme-container) | 1385\r\n[TASVideos/BizHawk](https://www.github.com/TASVideos/BizHawk#readme) | [Preview](https://dev.nugettest.org/packages/loic.TASVideos.BizHawk?preview=1#show-readme-container) | 1209\r\n[ardalis/ApiEndpoints](https://www.github.com/ardalis/ApiEndpoints#readme) | [Preview](https://dev.nugettest.org/packages/loic.ardalis.ApiEndpoints?preview=1#show-readme-container) | 1204\r\n[vkhorikov/CSharpFunctionalExtensions](https://www.github.com/vkhorikov/CSharpFunctionalExtensions#readme) | [Preview](https://dev.nugettest.org/packages/loic.vkhorikov.CSharpFunctionalExtensions?preview=1#show-readme-container) | 1198\r\n[JavScraper/Emby.Plugins.JavScraper](https://www.github.com/JavScraper/Emby.Plugins.JavScraper#readme) | [Preview](https://dev.nugettest.org/packages/loic.JavScraper.Emby.Plugins.JavScraper?preview=1#show-readme-container) | 1163\r\n "},{"Id":"23793857954","Type":"IssuesEvent","CreatedAt":"2022-09-02T17:12:28","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9201","RelatedDescription":"Reopened issue \"[NuGet.org Bug]: Please fully qualify NuGet\\Install-Package on the installer tab\" (#9201) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nAs a PowerShell Developer, I am excited to see a PowerShell install command on each package. \r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185921310-15f20721-1336-4260-9378-82fd2b81c34d.png)\r\n\r\nBut it always fails because `-Version` does not exist in my `Install-Package` command. Only `-RequiredVersion` exists.\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185921499-5c820107-ed23-485f-aba7-c602fb488a3c.png)\r\n\r\nAfter talking to others who figured this out, I now understand that there are two distinct `Install-Package` commands with incompatible parameters.\n\n### Repro Steps\n\n1. Open up a Windows PowerShell console, not a VS Developer console. \r\n2. Run `Install-Package Microsoft.Playwright -Version 1.25.0`\r\n3. This uses `Install-Package` from Microsoft's `PackageManagement` module\r\n4. Fail\n\n### Expected Behavior\n\nWhatever is provided on NuGet.org should work.\r\n\r\nConsidering the naming convention is problematic, please fully qualify the command on the website so that end-users have a hint that there are two commands from Microsoft with the same name that are different.\r\n\r\n```\r\nNuGet\\Install-Package Microsoft.Playwright -Version 1.25.0\r\n```\r\n\r\nAlternatively, please rename your command to `Install-NuGetPackage` for better alignment and clarity.\r\n\r\nThe \"Package Manager Console\" is also confusing to people who aren't intimately familiar with Visual Studio. Perhaps add a PowerShell tab with the proper syntax right after the Cake tab.\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185923725-e2141b12-98dc-4e35-929e-0ea4fb58807f.png)\r\n\r\nIn that tab would be\r\n```\r\nPackageManagement\\Install-Package Microsoft.Playwright -RequiredVersion 1.25.0\r\n```\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23793845063","Type":"IssuesEvent","CreatedAt":"2022-09-02T17:11:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7447","RelatedDescription":"Reopened issue \"Deleting an org doesn't warn that you cannot recreate one with the same name\" (#7447) at NuGet/NuGetGallery","RelatedBody":"There have been cases where users have deleted an org only to find out that they cannot recreate it, similar to deleting user accounts. We should clarify this as part of the delete org workflow.\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/62957041-deb3ee00-bda8-11e9-8ada-485ce78716f2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/62958176-073ce780-bdab-11e9-9875-1caab4e097ed.png)\r\n\r\nThis is just suggested text. We should make it crisper when we pick this up.\r\n"},{"Id":"23793698244","Type":"IssuesEvent","CreatedAt":"2022-09-02T17:01:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9149","RelatedDescription":"Closed issue \"[Feature]: Move Search Service from .NET Core 3.1 to .NET 6\" (#9149) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\n.NET Core 3.1 is EOL on December 13, 2022.\r\nhttps://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core\r\n\r\nWe should move the Search Service to .NET 6 before that time.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"23776122569","Type":"IssuesEvent","CreatedAt":"2022-09-01T21:07:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7447","RelatedDescription":"Closed issue \"Deleting an org doesn't warn that you cannot recreate one with the same name\" (#7447) at NuGet/NuGetGallery","RelatedBody":"There have been cases where users have deleted an org only to find out that they cannot recreate it, similar to deleting user accounts. We should clarify this as part of the delete org workflow.\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/62957041-deb3ee00-bda8-11e9-8ada-485ce78716f2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/62958176-073ce780-bdab-11e9-9875-1caab4e097ed.png)\r\n\r\nThis is just suggested text. We should make it crisper when we pick this up.\r\n"},{"Id":"23776122462","Type":"IssuesEvent","CreatedAt":"2022-09-01T21:07:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9201","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Please fully qualify NuGet\\Install-Package on the installer tab\" (#9201) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nAs a PowerShell Developer, I am excited to see a PowerShell install command on each package. \r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185921310-15f20721-1336-4260-9378-82fd2b81c34d.png)\r\n\r\nBut it always fails because `-Version` does not exist in my `Install-Package` command. Only `-RequiredVersion` exists.\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185921499-5c820107-ed23-485f-aba7-c602fb488a3c.png)\r\n\r\nAfter talking to others who figured this out, I now understand that there are two distinct `Install-Package` commands with incompatible parameters.\n\n### Repro Steps\n\n1. Open up a Windows PowerShell console, not a VS Developer console. \r\n2. Run `Install-Package Microsoft.Playwright -Version 1.25.0`\r\n3. This uses `Install-Package` from Microsoft's `PackageManagement` module\r\n4. Fail\n\n### Expected Behavior\n\nWhatever is provided on NuGet.org should work.\r\n\r\nConsidering the naming convention is problematic, please fully qualify the command on the website so that end-users have a hint that there are two commands from Microsoft with the same name that are different.\r\n\r\n```\r\nNuGet\\Install-Package Microsoft.Playwright -Version 1.25.0\r\n```\r\n\r\nAlternatively, please rename your command to `Install-NuGetPackage` for better alignment and clarity.\r\n\r\nThe \"Package Manager Console\" is also confusing to people who aren't intimately familiar with Visual Studio. Perhaps add a PowerShell tab with the proper syntax right after the Cake tab.\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185923725-e2141b12-98dc-4e35-929e-0ea4fb58807f.png)\r\n\r\nIn that tab would be\r\n```\r\nPackageManagement\\Install-Package Microsoft.Playwright -RequiredVersion 1.25.0\r\n```\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23776121765","Type":"PullRequestEvent","CreatedAt":"2022-09-01T21:07:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9210","RelatedDescription":"Merged pull request \"Merge branch \"dev\" into main\" (#9210) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23774891051","Type":"PullRequestEvent","CreatedAt":"2022-09-01T19:54:18","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9181","RelatedDescription":"Merged pull request \"[A11y][ScreenReader] Prevent Screen Reader from reading non-header elements\" (#9181) at NuGet/NuGetGallery","RelatedBody":"Prevent the 'Prefix Reserved' element on a package page from being read when using the 'H' option in the screen reader by setting the element's `aria-hidden` attribute to `true`.\r\n\r\nCurrent Behavior:\r\n![nvda text original](https://user-images.githubusercontent.com/25823466/181644313-8fffa215-639e-4259-a230-88d89bc0686f.jpg)\r\n\r\nNew Behavior:\r\n![nvda text edited](https://user-images.githubusercontent.com/25823466/181644345-d90c0f02-1423-47ca-b6c7-b358c192b887.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9173"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23830434440","Type":"IssuesEvent","CreatedAt":"2022-09-05T19:58:27","Actor":"ramonsmits","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12082","RelatedDescription":"Opened issue \"[Bug]: VersionRange not behaving as in csproj\" (#12082) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuGet.Versioning 6.3.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nThe following code does output `True` which seems incorrect AFAIK prereleases should not match if the max version is not inclusive:\r\n\r\n```c#\r\nvar range = VersionRange.Parse(\"[1.0.0, 2.0.0)\");\r\nvar version = NuGetVersion.Parse(\"2.0.0-alpha.1\")\r\nConsole.WriteLine(range.Satisfies(version));\r\n```\r\n\r\nI can workaround this by doing:\r\n\r\n```c#\r\nvar comparer = new VersionComparer(VersionComparison.Version);\r\nvar isMatch = r.Satisfies(v) && (!comparer.Equals(r.MaxVersion, v) || r.IsMaxInclusive);\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"23816371217","Type":"IssuesEvent","CreatedAt":"2022-09-05T07:11:21","Actor":"msedi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12081","RelatedDescription":"Opened issue \"Slow installation of msbuild task deliver by nuget\" (#12081) at NuGet/Home","RelatedBody":"### Discussed in https://github.com/NuGet/Home/discussions/12079\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **msedi** September  4, 2022</sup>\r\nI'm creating an msbuild task which we deliver as a nuget package. Everything works fine so far, the task does what it should but a problem is the installation of the nuget package. It takes around 5 minutes to install the nuget package and there is not real log to identify the source of the lag.\r\n\r\nDuring development I simply increase the version number to show a new package version. Afterwards I go to a demo project that contains the nuget package. I then simply update the nuget package in my demo project to the latest version, and this is what I get:\r\n\r\n```\r\nRestoring NuGet packages...\r\nRunning restore with 32 concurrent jobs.\r\nReading project file D:\\GIT\\IPIPE\\Libraries\\Managed\\siemens.CUDA\\siemens.CUDA.csproj.\r\nThe restore inputs for 'siemens.CUDA' have changed. Continuing restore.\r\nRestoring packages for D:\\GIT\\IPIPE\\Libraries\\Managed\\siemens.CUDA\\siemens.CUDA.csproj...\r\nRestoring packages for .NETCoreApp,Version=v6.0...\r\nResolving conflicts for net6.0...\r\nScanning packages for runtime.json files...\r\nRestoring packages for net6.0/win-x64...\r\nResolving conflicts for net6.0/win-x64...\r\n```\r\n\r\nAfter around 5 minutes I get this output\r\n\r\n```\r\nFeeds used:\r\n    https://api.nuget.org/v3/index.jsonC:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n    D:\\GIT\\IPIPE\\_Build\\Release\\Assemblies\\ipipe.Cuda.Design\r\n    Restored D:\\GIT\\IPIPE\\Libraries\\Managed\\siemens.CUDA\\siemens.CUDA.csproj (in 4,54 min).\r\nNuGet package restore finished.\r\nTime Elapsed: 00:04:32.6545900\r\n```\r\n\r\nThe problem is that I do not see who is wasting time. Is there anything I can do to get more logging?\r\n\r\n\r\n</div>"},{"Id":"23813650521","Type":"IssuesEvent","CreatedAt":"2022-09-05T02:46:58","Actor":"Bosch-Eli-Black","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12080","RelatedDescription":"Opened issue \"[Bug]: Broken link in msftbot\" (#12080) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/a\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n`msftbot` just posted a message at https://github.com/NuGet/Home/issues/9803#issuecomment-1235816557 that says this:\r\n\r\n> Issue is missing Type label, remember to add a [Type label](https://github.com/NuGet/Client.Engineering/blob/main/designs/nuget-issues-approach.md#issue-type)\r\n\r\nThe \"Type label\" link 404's.\n\n### Verbose Logs\n\n_No response_"},{"Id":"23807070705","Type":"IssuesEvent","CreatedAt":"2022-09-04T07:38:53","Actor":"Edrisym","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12077","RelatedDescription":"Opened issue \"[Bug]: Console wont open and it turns purple and VS crashes\" (#12077) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\n17.3.3\n\n### Worked before?\n\nbefore 17.3.3\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHi \r\n\r\nI am using a MacBook Pro M1 2020 and 2022 visual studio \r\n\r\nI used to use the package manager console for adding migration for my application\r\nand after I upgraded VS and the extension I wasn't able to open the Nuget Package manager console \r\nsomehow when I click, it turns purple, and VS crashes \r\nI'm desperate please help me solve this I don't know what is wrong with it\r\n\r\n![Screen Shot 2022-08-15 at 16 41 49](https://user-images.githubusercontent.com/101327489/188302781-ba86bf70-13b9-4f4c-8335-d6d6c3073a06.png)\r\n\r\nand this error comes up \r\n\r\n![Screen Shot 2022-08-15 at 16 14 27](https://user-images.githubusercontent.com/101327489/188302710-50838e0c-f9da-4024-8dfb-b2c98249c84c.png)\r\n\n\n### Verbose Logs\n\n```shell\nNuget Package Manager Console\n```\n"},{"Id":"23796436921","Type":"PullRequestEvent","CreatedAt":"2022-09-02T20:19:49","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11833","RelatedDescription":"Merged pull request \"Update Search by TFM for 2022\" (#11833) at NuGet/Home","RelatedBody":"Added an alternate design for search by TFM to scale for 2022. Also moved folders given it was reviewed and accepted. Feel free to comment / review again if we should consider new directions and get more design iterations in.\r\n\r\n[Rendered](https://github.com/NuGet/Home/blob/6066ff496bb0bf2676860d5ff2d7c4011562375e/accepted/2022/TargetFrameworkAndPlatformsFilters.md)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2022-09-06T03:30:27.5387128Z","RunDurationInMilliseconds":1374}