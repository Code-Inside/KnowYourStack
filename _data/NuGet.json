{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27721431154","Type":"PullRequestEvent","CreatedAt":"2023-03-14T20:58:54","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9429","RelatedDescription":"Opened pull request \"[A11y] Search page a11y fixes for tags and framework filter buttons\" (#9429) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9402, https://github.com/NuGet/NuGetGallery/issues/9412 and https://github.com/NuGet/NuGetGallery/issues/9413\r\n\r\nThis PR fixes 3 a11y issues:\r\n\r\n1. The tags in search results sometimes appeared on the same line as the other package metadata (version, last created, etc.) and sometimes appeared on the next line. We wanted to make this consistent and always have the 'tags' on the next line, but adding a `<br>` element in the middle of a list led to this a11y issue:\r\n    ![image](https://user-images.githubusercontent.com/82980589/225134180-860cebea-4b3e-46a4-bb2d-9eece8107921.png)\r\n\r\n    I've now removed the `<br>` element and fixed this with some css:\r\n    ![image](https://user-images.githubusercontent.com/82980589/225132168-62bffd76-acd6-4460-8b58-a549e1a4ee0f.png)\r\n2. The chevrons that expanded/collapsed the TFM sections in the Filters panel did not indicate their expanded/collapsed state. The screen reader should be able to read their state. The 'aria-expanded' can be used to fix this.\r\n3. These chevrons also all had the same 'aria-label': \"shows and hides TFM filters\". I've now made each button's label relevant to its specific frameworks: eg. \"shows and hides TFM filters for .NET Standard\"."},{"Id":"27710646653","Type":"IssuesEvent","CreatedAt":"2023-03-14T14:03:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9354","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Information on the `Script & Interactive` usage tab isn't quite accurate \" (#9354) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe `Script & Interactive` tab shows informational text that could use an update. \r\n\r\n> #r directive can be used in F# Interactive, C# scripting and .NET Interactive. Copy this into the interactive tool or source code of the script to reference the package. \r\n\r\nI'd suggest two changes:\r\n\r\n* The NuGet support for `#r` is not present in C# scripting. \r\n* The VS Code extension for .NET Interactive is now called [Polyglot Notebooks](https://devblogs.microsoft.com/dotnet/dotnet-interactive-notebooks-is-now-polyglot-notebooks/). (.NET Interactive is also available in other places, so this name change doesn't apply universally.) Mentioning .NET Interactive **_and_** Polyglot Notebooks might be helpful.\r\n\r\n\n\n### Repro Steps\n\n1. Open a package URL, e.g.  https://www.nuget.org/packages/Apache.Arrow/\r\n2. Click the `Script & Interactive` tab\n\n### Expected Behavior\n\nThe wording could be more accurate.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/547415/214192932-b1fa8a27-ce95-4d75-a11e-21e17274383c.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27687663501","Type":"PullRequestEvent","CreatedAt":"2023-03-13T18:13:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9425","RelatedDescription":"Merged pull request \"add domain avatars.githubusercontent.com\" (#9425) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9330"},{"Id":"27620881159","Type":"PullRequestEvent","CreatedAt":"2023-03-10T00:01:00","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9408","RelatedDescription":"Merged pull request \"[2FA] Update link msa/aad account page with legacy password account information.\" (#9408) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n* Updated wording of the \"Link Microsoft Account\" page to include Legacy Account information.\r\n* Legacy account page: This page will show when users have password account and are not part of the exception list.\r\n* Link Microsoft account page: After a user with a legacy account issue sends a SR to us, we will verify the request and ownership. Once we approve it using our processes, the user will see this page and will be able to link their MSA if they know their password, otherwise they will be able to use the **Forgot your password?** link.\r\n\r\n### Screenshot\r\n#### Legacy account page\r\n![Legacy Account](https://user-images.githubusercontent.com/17834924/223597221-14a360b6-7ddc-48d3-97ac-7b8398fe6788.png)\r\n\r\n#### Link MSA account page\r\n![Linking account](https://user-images.githubusercontent.com/17834924/223597400-5abed200-6841-4bfb-9ee2-9c3fa30e1a78.png)\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4617"},{"Id":"27615325462","Type":"IssuesEvent","CreatedAt":"2023-03-09T18:53:10","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9428","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Status page should show the time zone of a timestamp.\" (#9428) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nStatus page shows the timeline, but it is not clear about the time zone. It is better that a timestamp is marked with the time zone.\n\n### Repro Steps\n\n1. On this URL: https://status.nuget.org/\r\n2. The time zone used in history is unclear.\n\n### Expected Behavior\n\nStatus page lists the time zone of a timestamp.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/41028779/224125738-6ee7add3-bedb-4642-856d-502dca48bc72.png)\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27555018628","Type":"IssuesEvent","CreatedAt":"2023-03-07T17:17:08","Actor":"JanKrivanek","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9427","RelatedDescription":"Opened issue \"[NuGet.org Bug]: top 100 Community packages include MSFT packages\" (#9427) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nsome Microsoft packages (specifically Xamarin ones) showing up on the galley as community ones:\r\n\r\n<img width=\"578\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3809076/223497680-553458e3-64f9-42ba-9dc9-280373df9a9c.png\">\r\n...\r\n<img width=\"515\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3809076/223497749-64c1eb84-bb70-4344-9aa7-630bd1bebcd7.png\">\r\n\r\n\r\nThose are not showing up when querying the `ddteldata` DS excluding the MSFT packages ([internal][query as link](https://dataexplorer.azure.com/clusters/ddteldata/databases/ClientToolsInsights?query=H4sIAAAAAAAAA23NMQvCQAyG4V3wP4TSoQURHRy7uQhaHdwl9tL22iOBXOAo+OOlUAXB9eN9+Gp/w2bEjo6SOAi6uF69wPlonhuDsyTSk9vAXQzDTzOIZ6g//JqYNIIw5IFa2y4Qqgpy9V3/XWaaelICFisW1mN8IE9FdvGNSpTWsrKcS1FHCs/pz7/hSLA/7N5FCuTRwgAAAA==)): \r\n\r\n```\r\nNiPackageDownloads\r\n| distinct LowerId, TotalDownloads\r\n| join NiPackageOwners on $left.LowerId == $right.LowerId\r\n| where not(Owners has_any(\"Microsoft\"))\r\n| order by TotalDownloads| take 150\r\n```\n\n### Repro Steps\n\n1. Visit https://www.nuget.org/stats/packages\r\n2. do not check 'Show all packages' checkbox\r\n3. search for 'microsoft'\n\n### Expected Behavior\n\nMicrosoft packages are not part of the community overview\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27553470634","Type":"IssuesEvent","CreatedAt":"2023-03-07T16:20:47","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9426","RelatedDescription":"Opened issue \"Revoke button besides delete button for api keys\" (#9426) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nHi.\r\nI would be nice if there's `Revoke` button next to `Delete` so I don't have to delete the key after finish uploading the package.\r\nThat way I keep packaging globing pattern for next time. If I delete it, then I have to use my memory muscle to figure out correct pattern each time.\r\n![image](https://user-images.githubusercontent.com/8766776/223483195-2d359990-dfe7-4873-bb43-09df3f654f62.png)\r\n\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27535928743","Type":"PullRequestEvent","CreatedAt":"2023-03-07T03:26:55","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9425","RelatedDescription":"Opened pull request \"add domain avatars.githubusercontent.com\" (#9425) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9330"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27725289903","Type":"IssuesEvent","CreatedAt":"2023-03-15T01:21:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5267","RelatedDescription":"Closed issue \"Nuget push fails with timeout for some packages - fixed in netcore CLI 2.0\" (#5267) at NuGet/Home","RelatedBody":"_From @rudolfdobias on May 22, 2017 23:16_\n\nHello, hope this is the right place where to put this issue..:\r\nHave an package (https://www.nuget.org/packages/Firefly.net/1.2.1-alpha1) and it cannot be pushed to the nuget.org by any way from the command line.\r\n\r\n## Steps to reproduce\r\n\r\n```\r\ndotnet nuget push -k xxx-s https://www.nuget.org/api/v2/package ..path to the/Firefly.net.1.2.1-alpha1.nupkg'\r\n```\r\n\r\n - Tried desktop OSX / Ubuntu / Docker on Ubuntu - same behavior.\r\n - Tried myget, it does not work too.\r\n - Tried raise the timeout - nope\r\n - Tried to create new blank project and push it - it works.\r\n - (The package has about 40kbites)\r\n\r\n## Expected  behavior\r\n\r\n(package successfuly pushed)\r\n\r\n## Actual behavior\r\n\r\n```\r\ninfo : Pushing Firefly.net.1.2.1-alpha1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo : An error was encountered when fetching 'PUT https://www.nuget.org/api/v2/package/'. The request will now be retried.\r\ninfo : An error occurred while sending the request.\r\ninfo :   Failure when receiving data from the peer\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nTesting on OSX:\r\n```\r\n.NET Command Line Tools (2.0.0-preview1-005977)\r\n\r\nProduct Information:\r\n Version:            2.0.0-preview1-005977\r\n Commit SHA-1 hash:  414cab8a0b\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0-preview1-005977/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002111-00\r\n  Build    : 1ff021936263d492539399688f46fd3827169983\r\n```\r\n\r\nTesting on ubuntu:\r\n\r\n```\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  14.04\r\n OS Platform: Linux\r\n RID:         ubuntu.14.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/1.0.4\r\n```\r\n\r\nThanks\r\n\r\n\n\n_Copied from original issue: dotnet/cli#6666_"},{"Id":"27723194433","Type":"IssuesEvent","CreatedAt":"2023-03-14T22:40:46","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12481","RelatedDescription":"Closed issue \"VS crashed when installing a package with “package config” format in C# Class Library (.NET Framework) project \" (#12481) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.6.0.44\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a C# Class Library (.NET Framework) project in VS.  \r\n\r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.  \r\n\r\n3. Click settings button (top-right of right panel), check \"Allow format selection on first package install\" in \"General\" tab and click “OK” button.  \r\n\r\n4. Go to \"Browse\" tab, select a package (for example \"Newtonsoft.Json\") and click install button. \r\n\r\n5. Check \"packages.config\" in \"Choose NuGet Package Manager Format\", click “OK” button and click “OK” button in the \"Preview Changes\" window. \r\n\r\n#### Expected:    \r\n\r\nThe package should be installed successfully. \r\n\r\n#### Actual:    \r\n\r\nVS crashed when installing a package with “package config” format as below screenshot:  \r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/84695155/224635331-5e98a8aa-c3e0-48bb-9088-b978387a855a.png)\r\n#### Notes: \r\n\r\n1.It doesn’t repro on VS Main\\33508.150 + NuGet Client Dev\\6.6.0.43 \r\n\r\n2.It still reproes when using PMC install package. \r\n\r\n3.The repro rate is 100%. \r\n\r\n4.Added dump file to this path(\\\\\\mlangfs1\\public\\v-cicili\\Bug0313).\r\n\r\n### Verbose Logs:\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.AccessViolationException\r\n   at VSLangProj157.References3.AddFiles(System.Array, System.Array ByRef)\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem+<>c__DisplayClass76_0+<<AddReferenceAsync>b__0>d.MoveNext()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at Microsoft.VisualStudio.Threading.JoinableTaskFactory+SingleExecuteProtector.TryExecute()\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\r\n```\r\n"},{"Id":"27721702650","Type":"IssuesEvent","CreatedAt":"2023-03-14T21:12:16","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11748","RelatedDescription":"Closed issue \"[Bug]: Unexpected NU1008 errors\" (#11748) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\nVS Internal Previews\r\n\r\n### Worked before?\r\n\r\n17.2 Preview 3\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Workaround\r\nRestore from the command-line before building in Visual Studio\r\n\r\n### Repro Steps & Context\r\n\r\n1. Install internal preview of VS\r\n2. Clone our repo (not public, so can't link - I can provide directly if needed - but it is a solution with 5 SDK-style .NET Framework projects)\r\n3. Open the project in VS\r\n4. Build\r\n\r\nExpected: Builds fine\r\n\r\nActual:\r\n\r\nOne project shows the error\r\n\r\n> NU1008: Projects that use central package version management should not define the version on the PackageReference items, but on the PackageVersion items: `<long list of all packages the project references>`\r\n\r\nWe do use CPVM, but we have NO PackageReferences that specify the version - they're only specified on the PackageVersion items.\r\n\r\nLooking at the package.assets file for the project in question is a little interesting. The project is correctly listed as `\"centralPackageVersionsManagementEnabled\": true`, but in the project/frameworks/net472/dependencies section, all of the dependencies look like this:\r\n\r\n```\r\n\"IsExternalInit\": {\r\n  \"suppressParent\": \"All\",\r\n  \"target\": \"Package\",\r\n  \"version\": \"(, )\"\r\n},\r\n```\r\n\r\nnote the empty version. \r\n\r\nOpening the exact same source from the same location on disk on the same machine with 17.2 Preview 3 and building works fine.\r\nBuilding with msbuild /r (using the version of msbuild that ships with the internal preview of VS) also works fine.\r\n\r\nAt one point in testing this, one of the other 4 projects in the solution showed the same error as well. While trying to debug and cleaning the project, wiping bin/obj, etc, the error on that project went away, leaving just this one doing it consistently.\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27721695044","Type":"IssuesEvent","CreatedAt":"2023-03-14T21:11:52","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12480","RelatedDescription":"Closed issue \"[Bug]: CPM fails with NU1008 but none of the package references contain an explicit version\" (#12480) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS 17.6 P1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nhttps://github.com/MartinZikmund/uno-11641-repro\r\n\r\nBuilding in Visual Studio shows:\r\n\r\n```\r\nProjects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items:\r\n Microsoft.Windows.SDK.BuildTools;Uno.Core.Extensions.Logging.Singleton;Microsoft.WindowsAppSDK;Uno.WinUI;Microsoft.Extensions.Logging.Console.\r\n```\r\n\r\nHowever, none of the `PackageReference`s contain an explicit version.\r\n\r\ncc @MartinZikmund\n\n### Verbose Logs\n\n_No response_"},{"Id":"27720771737","Type":"IssuesEvent","CreatedAt":"2023-03-14T20:25:58","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12368","RelatedDescription":"Reopened issue \"GlobalPackageReference is not working for legacy-style csproj projects\" (#12368) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nVS 17.4.4\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a solution with both a SDK-style csproj file and a legacy-style csproj file (e.g. .NET Framework project).\r\n2. Add a NuGet package to both.\r\n3. Enable Central Package Management per [documentation](https://learn.microsoft.com/en-us/nuget/consume-packages/Central-Package-Management#).\r\n4. Note that Central Package Management works fine for both project types.\r\n5. Add a Global Package Reference (per [documentation](https://learn.microsoft.com/en-us/nuget/consume-packages/Central-Package-Management#global-package-references)) to the `Directory.Packages.props` file, e.g. [PolySharp](https://www.nuget.org/packages/PolySharp/).\r\n6. Note that the global package reference works in the SDK-style project but is **not** working in the legacy-style project.\r\n\r\n`<PackageReference>` and the base feature of Central Package Management both work with legacy-style csproj files, so why doesn't `<GlobalPackageReference>` work too?\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27719808540","Type":"IssuesEvent","CreatedAt":"2023-03-14T19:39:43","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12372","RelatedDescription":"Closed issue \"Static graph-based restore should always log an error on failure\" (#12372) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nWhen static graph-based restore runs, the restore is run in a different process.  The logic in this process has a few spots where something can go wrong and the EXE will not log an error.  In rare cases, no error is logged and restore appears to succeed.\n\n### Desired Behavior\n\nAll places in the EXE's code where something can go wrong should log an error and the RestoreTaskEx should consider looking at the exit code in case its non-zero instead of only determining success/failure based on if any errors were logged.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":23,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-03-15T03:30:26.2791873Z","RunDurationInMilliseconds":1428}