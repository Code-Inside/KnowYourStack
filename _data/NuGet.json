{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12363401279","Type":"PullRequestEvent","CreatedAt":"2020-05-18T04:14:12","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7993","RelatedDescription":"Merged pull request \"Append FAQ address to AAD unmanaged tenant authentication error\" (#7993) at NuGet/NuGetGallery","RelatedBody":"Appending a FAQ link to the AAD authentication error when user account is in an unmanaged tenant state. Also added aka.ms to support this.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7544\r\n\r\nResultant error message on page (this change adds the last sentence):\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/81895786-6eb3ec00-95f6-11ea-800f-ae59d949c427.png)"},{"Id":"12354577304","Type":"IssuesEvent","CreatedAt":"2020-05-16T08:28:27","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7996","RelatedDescription":"Opened issue \"API key generation should highlight 'owner' selection\" (#7996) at NuGet/NuGetGallery","RelatedBody":"We have seen many support requests where authors were not able to push packages using API keys as those API keys were not scoped to the right owner. This happens when there are one or more orgs, the author belong to and want to publish the package against an organization account.\r\n\r\nWe would need to highlight the owner selection when there are ore than one owner to select from.\r\n\r\nMy recommendation is to make it an explicit selection without defaulting to the current owner. This way the author will be aware of the accounts options they want to select."},{"Id":"12353124620","Type":"IssuesEvent","CreatedAt":"2020-05-16T00:04:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7995","RelatedDescription":"Opened issue \"Two concurrent pushes of a new ID can fail incorrectly with 409\" (#7995) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nPush the same new, package ID concurrently with different versions (no duplicate versions). You will sometimes see HTTP 409. On the second attempt of the failed package, there is no error.\r\n\r\nTwo actors creating a `PackageRegistration` row at the same time with the same ID collide. Subsequent pushes see the `PackageRegistration` already exists and have no problem.\r\n\r\n### Expected behavior\r\n\r\nNo HTTP 409 should be returned.\r\n\r\n### Additional context\r\n\r\nThe error is:\r\n\r\n```\r\nCannot insert duplicate key row in object 'dbo.PackageRegistrations' with unique index 'IX_PackageRegistration_Id'. The duplicate key value is (0, Microsoft.NETCore.Jit).\r\nThe statement has been terminated.\r\n```\r\n\r\nIt occurs on this line:\r\nhttps://github.com/NuGet/NuGetGallery/blob/b1e426282fca0db14deca54e95cffc5c2eb4cd4c/src/NuGetGallery/Services/PackageUploadService.cs#L976\r\n\r\nThe code is expecting this to only occur for `Package` rows, but it can happen for `PackageRegistration` too."},{"Id":"12351439094","Type":"IssuesEvent","CreatedAt":"2020-05-15T19:50:58","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7981","RelatedDescription":"Closed issue \"[2020-05-11] Deployment\" (#7981) at NuGet/NuGetGallery","RelatedBody":"### CopyAzureContainer\r\n\r\n**Note:** this job is not shut down during deployment and therefore can fail. Before deploying to the environment, remote into the VM and stop the process before deploying.\r\n\r\nMerge: (not done)\r\n\r\nChanges:\r\n- Config: stop backing up reg4: https://github.com/NuGet/Engineering/issues/3164\r\n- Make CopyAzureContainer into a JsonConfigurationJob: https://github.com/NuGet/NuGet.Jobs/pull/885\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n### StatusAggregator\r\n\r\nMerge: (not done)\r\n\r\nChanges:\r\n- Make StatusAggregator into a JsonConfigurationJob: https://github.com/NuGet/NuGet.Jobs/pull/886\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n### Monitoring.PackageLag\r\n\r\nMerge: (not done)\r\n\r\nChanges:\r\n- Make PackageLagMonitoring into a JsonConfigurationJob: https://github.com/NuGet/NuGet.Jobs/pull/887\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n### Validation.Orchestrator\r\n\r\nMerge: (not done)\r\n\r\nChanges:\r\n- Make orchestrator into a JsonConfigurationJob: https://github.com/NuGet/NuGet.Jobs/pull/888\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n\r\n### Validation.SymbolsOrchestrator\r\n\r\nMerge: (not done)\r\n\r\nChanges:\r\n- Make orchestrator into a JsonConfigurationJob: https://github.com/NuGet/NuGet.Jobs/pull/888\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n### Gallery\r\n\r\nMerge: not needed\r\n\r\nChanges:\r\n- Configuration update for the app service to work around service restart after VIP swap.\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n### ScanAndSign job\r\n\r\nMerge: not needed\r\n\r\nEnvironments:\r\n- [x] DEV\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n\r\n### Integrations\r\n- [x] NuGet.Jobs FI: https://github.com/NuGet/NuGet.Jobs/pull/891\r\n- [x] NuGet.Jobs RI: https://github.com/NuGet/NuGet.Jobs/pull/892\r\n- [x] NuGetGallery RI: https://github.com/NuGet/NuGetGallery/pull/7991"},{"Id":"12351278992","Type":"PullRequestEvent","CreatedAt":"2020-05-15T19:31:45","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7991","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.05.12]RI of dev into master\" (#7991) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12341889732","Type":"PullRequestEvent","CreatedAt":"2020-05-14T23:05:41","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7994","RelatedDescription":"Closed pull request \"Update versions in readme\" (#7994) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12332132074","Type":"PullRequestEvent","CreatedAt":"2020-05-14T05:55:24","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7994","RelatedDescription":"Opened pull request \"Update versions in readme\" (#7994) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12363622953","Type":"IssuesEvent","CreatedAt":"2020-05-18T04:57:24","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8934","RelatedDescription":"Closed issue \" Broken test in SignatureTrustAndValidityVerificationProviderTests(functional test)\" (#8934) at NuGet/Home","RelatedBody":"In SignatureTrustAndValidityVerificationProviderTests(functional test), \r\nthere're 19 tests failed on Mac , 15 on Linux, 1 on Windows(netcore)\r\nThe list is :\r\nOn Mac:\r\n```\r\n1.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync   \r\n2.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOnlineRevocationMode_WarnsAsync   \r\n3..GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOfflineRevocationMode_WarnsAsync    \r\n4.GetTrustResultAsync_WithTrustedButExpiredPrimaryAndTimestampCertificates_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WarnsAsync    \r\n5.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync    \r\n6.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync   \r\n7.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync    \r\n8.GetTrustResultAsync_WithUnavailableRevocationInformationInVerify_WarnsAsync   \r\n9.GetTrustResultAsync_WithTimestampChainingToUntrustedRoot_NotAllowIgnoreTimestamp_FailAsync    \r\n10.GetTrustResultAsync_WithUnavailableRevocationInformationInRequireMode_WarnsAsync     \r\n11.AuthorPrimarySignatures.GetTrustResultAsync_WithRevokedTimestampCertificate_ReturnsStatusAsync(allowIgnoreTimestamp: False, expectedStatus: Disallowed)\r\n12.AuthorPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: True)\r\n13.AuthorPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: False)\r\n14.RepositoryPrimarySignatures.GetTrustResultAsync_WithRevokedTimestampCertificate_ReturnsStatusAsync(allowIgnoreTimestamp: False, expectedStatus: Disallowed)\r\n15.RepositoryPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: False) \r\n16.RepositoryPrimarySignatures.GetTrustResultAsync_WithRevokedPrimaryCertificate_ReturnsSuspectAsync(allowEverything: True)\r\n17.RepositoryCountersignatures.VerifyAsync_WithRevokedTimestampCertificate_ReturnsStatusAsync(allowIgnoreTimestamp: False, expectedStatus: Disallowed)\r\n18.RepositoryCountersignatures.VerifyAsync_WithRevokedCountersignatureCertificate_ReturnsSuspectAsync(allowEverything: True)   \r\n19.RepositoryCountersignatures.VerifyAsync_WithRevokedCountersignatureCertificate_ReturnsSuspectAsync(allowEverything: False)\r\n```\r\n\r\nOn Linux:\r\n```\r\n1.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync\r\n2.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOnlineRevocationMode_WarnsAsync \r\n3.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowIllegal_WarnsAsync\r\n4.GetTrustResultAsync_WithUnavailableRevocationInformationInAcceptMode_DoesNotWarnAsync\r\n5.GetTrustResultAsync_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WithOfflineRevocationMode_WarnsAsync \r\n6.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_InAllowedUntrustedRootList_AllowUntrustedFalse_SucceedsAsync\r\n7.GetTrustResultAsync_WithTrustedButExpiredPrimaryAndTimestampCertificates_WithUnavailableRevocationInformationAndAllowUnknownRevocation_WarnsAsync\r\n8.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync \r\n9.GetTrustResultAsync_WithSignedAndCountersignedPackage_SucceedsAsync\r\n10.GetTrustResultAsync_PrimarySignatureWithUntrustedRoot_EmptyAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync\r\n11.GetTrustResultAsync_RepositoryCountersignatureWithUntrustedRoot_NotInAllowedUntrustedRootList_AllowUntrustedFalse_ErrorAsync\r\n12.GetTrustResultAsync_WithUnavailableRevocationInformationInVerify_WarnsAsync\r\n13.GetTrustResultAsync_WithSignedTimestampedCountersignedAndCountersignatureTimestampedPackage_SucceedsAsync\r\n14.GetTrustResultAsync_WithTimestampChainingToUntrustedRoot_NotAllowIgnoreTimestamp_FailAsync\r\n15.GetTrustResultAsync_WithUnavailableRevocationInformationInRequireMode_WarnsAsync\r\n```\r\n\r\nOn Windows(netcore):\r\n`RepositoryCountersignatures.VerifyAsync_WithRevokedCountersignatureCertificate_ReturnsSuspectAsync`"},{"Id":"12357880520","Type":"IssuesEvent","CreatedAt":"2020-05-17T01:23:09","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9573","RelatedDescription":"Opened issue \"Remove the workaround of defining constant NET5_0\" (#9573) at NuGet/Home","RelatedBody":"When fixing warnings raised by code analysis, we need to add preprocessor for new overload methods which only exist in .NET5.0 (or later).  \r\n.NET will define constant NET5_0 in PR https://github.com/dotnet/sdk/pull/11635. So when it merges, we should remove the workaround of defining constant NET5_0 from xplat feature branch."},{"Id":"12353010613","Type":"IssuesEvent","CreatedAt":"2020-05-15T23:36:35","Actor":"birgithi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9572","RelatedDescription":"Opened issue \"Search and recommender query should run in parallel\" (#9572) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nVS Package Manager\r\n\r\nNuGet version (x.x.x.xxx):\r\nPR 3299\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nThe package search and package recommender are currently not running in parallel. We should update this so that they are parallel. \r\nLocation: src/NuGet.Clients/NuGet.PackageManagement.UI/PackageItemLoader.cs line 205\r\n\r\n"},{"Id":"12351300897","Type":"IssuesEvent","CreatedAt":"2020-05-15T19:34:29","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9571","RelatedDescription":"Opened issue \"CLI experience for nuget.config\" (#9571) at NuGet/Home","RelatedBody":""},{"Id":"12349857164","Type":"IssuesEvent","CreatedAt":"2020-05-15T16:43:21","Actor":"mirkomuggli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9570","RelatedDescription":"Opened issue \"Move ToolWindow creation to AsyncPackage APIs\" (#9570) at NuGet/Home","RelatedBody":"Calls to uiShell.CreateToolWindow (in Nuget Codespaces) should be replaced with their appropriate counterparts in AsyncPackage, documented here: [https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualstudio.shell.asyncpackage?view=visualstudiosdk-2019](https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualstudio.shell.asyncpackage?view=visualstudiosdk-2019)"},{"Id":"12345521026","Type":"IssuesEvent","CreatedAt":"2020-05-15T09:05:56","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8609","RelatedDescription":"Closed issue \"[Test Failure] Install a package with PMC makes .Net Core “Default Project” is empty after setting package format is “Package Reference”\" (#8609) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.4 29318.156\r\nOS Version: Windows-10-Enterprise-19H1-04-05-2019.\r\n## Detailed repro steps \r\n1. Create a Console App (.Net Project) and set package format is “Package Reference” in setting General.\r\n2. File >New Project>ASP.NETCore WebApplication (.NetCore)>1.0/1.1/2.0 no authentication.\r\n3. Wait for the project restore completely.\r\n4. Tools - NuGet Package Manager - Package Manager Console.\r\n5. Run this: Install-Package Microsoft.EntityFrameworkCore.Tools -version 2.2.0.\r\n## Expected\r\n“Default Project” should show the project name correctly.\r\n## Actual\r\n “Default Project” is empty as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/65236023-48db5380-db0a-11e9-95cb-bc2af38c1c95.png)\r\n## Note\r\nThe issue only repro on .Net Core projects.\r\n\r\n"},{"Id":"12342188408","Type":"IssuesEvent","CreatedAt":"2020-05-14T23:59:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4350","RelatedDescription":"Closed issue \"Consider merging VSIX assemblies via ILMerge, like NuGet.exe\" (#4350) at NuGet/Home","RelatedBody":""},{"Id":"12342028730","Type":"IssuesEvent","CreatedAt":"2020-05-14T23:29:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7943","RelatedDescription":"Closed issue \"Perf:  sprint work\" (#7943) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"},{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-18T05:30:38.8462949Z","RunDurationInMilliseconds":1915}