{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23534404389","Type":"PullRequestEvent","CreatedAt":"2022-08-19T18:51:37","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9199","RelatedDescription":"Merged pull request \"[Hotfix] Set download count to Int32.MaxValue for V2 feed packages exceeding this threshold\" (#9199) at NuGet/NuGetGallery","RelatedBody":"The Hijacked v2 endpoints return the download counts as is, however, few old package download clients suffer from Integer overflow during the deserialization of the package metadata due to the use of `Int32` for the `DownloadCount` field.\r\n\r\nThis is now a noticeable issue due to multiple packages exceeding this threshold (`Newtonsoft.Json`, `Microsoft.Extensions.DependencyInjection.Abstractions` etc.)\r\n\r\nAs a workaround, we can set this field to the max allowed value on the v2 returned response."},{"Id":"23519741205","Type":"PullRequestEvent","CreatedAt":"2022-08-19T03:41:30","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9199","RelatedDescription":"Opened pull request \"[Hotfix] Set download count to Int32.MaxValue for packages exceeding this threshold\" (#9199) at NuGet/NuGetGallery","RelatedBody":"The Hijacked v2 endpoints return the download counts as is, however, few old package download clients suffer from Integer overflow during the deserialization of the package metadata due to the use of `Int32` for the `DownloadCount` field.\r\n\r\nThis is now a noticeable issue due to multiple packages exceeding this threshold (`Newtonsoft.Json`, `Microsoft.Extensions.DependencyInjection.Abstractions` etc.)\r\n\r\nAs a workaround, we can set this field to the max allowed value on the v2 returned response."},{"Id":"23517802601","Type":"PullRequestEvent","CreatedAt":"2022-08-19T00:14:00","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9190","RelatedDescription":"Merged pull request \"[A11y] Read warning when tabbing to Paket CLI tab\" (#9190) at NuGet/NuGetGallery","RelatedBody":"Added `role = alert` to the warning below the Paket CLI command so that the screen reader will read the warning out to the user without having to tab to the warning element itself. \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9172"},{"Id":"23517230667","Type":"IssuesEvent","CreatedAt":"2022-08-18T23:11:36","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8864","RelatedDescription":"Closed issue \"Prototype adding asset frameworks from the catalog in Catalog2AzureSearch\" (#8864) at NuGet/NuGetGallery","RelatedBody":"- [x] Make changes to NuGetGallery.Services and use the GetSuportedFrameworks method from PackageService\n- [x] Feed asset frameworks to the search index\n- [x] Test changes on dev data"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23534165087","Type":"IssuesEvent","CreatedAt":"2022-08-19T18:34:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12031","RelatedDescription":"Closed issue \"[Bug]: Nuget restores Windows assembly on some Linux distros (SqlClient)\" (#12031) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK (reflecting any global.json):  Version:   6.0.105\n\n### Worked before?\n\nWorked on NET5\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nThe SqlClient team has directed me here, this is related to the bug: https://github.com/dotnet/SqlClient/issues/1643\r\n\r\nFor a NET6 app that uses SqlClient (both `System.Data.SqlClient` and `Microsoft.Data.SqlClient` packages) Nuget restores the windows versions instead of linux one, which results in error `System.Data.SqlClient is not supported on this platform`\r\n\r\nSteps to repro:\r\n\r\n1. Create a trivial .net6 app that references SqlClient nuget and calls `var x = new SqlConnection()`.\r\n2. Install the app on AlmaLinux 8 (available form from Windows store for WSL), run the app via `dotnet MyProject.dll`\r\n3. The app tries to use Windows assemblies, not the linux one.\r\n\r\nThe MS team was able to repro this. See https://github.com/dotnet/SqlClient/issues/1643 for more details and STR.\r\n\r\nP.S. The same error is thrown in Red Hat Linux at one of our client's\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"23534111313","Type":"IssuesEvent","CreatedAt":"2022-08-19T18:30:39","Actor":"AnilReddyKandula","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12046","RelatedDescription":"Opened issue \"System.Data.HashFunction.**** is giving Nuget Warning: NU3005\" (#12046) at NuGet/Home","RelatedBody":"Whenever we try to import the following nugets, it was resulting in nuget warning. \r\nError: ##[error]The nuget command failed with exit code(1) and error(NU3005: Package 'System.Data.HashFunction.Interfaces 2.0.0' from source '---: The package signature file entry is invalid. The central directory header field 'compression method' has an invalid value (8).\r\n\r\nNugets: \r\n<PackageReference Include=\"System.Data.HashFunction.Core\" Version=\"$(SystemDataHashFunction)\" NoWarn=\"NU3005\" />\r\n<PackageReference Include=\"System.Data.HashFunction.xxHash\" Version=\"$(SystemDataHashFunction)\" NoWarn=\"NU3005\" />\r\n<PackageReference Include=\"System.Data.HashFunction.Interfaces\" Version=\"$(SystemDataHashFunction)\" NoWarn=\"NU3005\" />\r\n\r\nSo these nuget warnings had to be suppressed manually.\r\n\r\n"},{"Id":"23524699076","Type":"IssuesEvent","CreatedAt":"2022-08-19T09:39:36","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12045","RelatedDescription":"Opened issue \"[Bug]: Other versions lost after typing a version in the custom version drop-down box \" (#12045) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet Client Dev\\6.4.0.50\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n## Installations: \r\n\r\n1. Install VS Main\\32818.807 from: [Pipelines - Run main-32818.307 (visualstudio.com)](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=6579652&view=ms.vss-build-web.run-extensions-tab) \r\n2. Install NuGet Client Dev\\6.4.0.50 from: [Pipelines - Run 6.4.0.50 artifacts (visualstudio.com)](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=6579079&view=artifacts&pathAsName=false&type=publishedArtifacts) \r\n## Repro Steps: \r\n1. Create a C# Console App (.Net core) project.    \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.    \r\n3. Click settings button (top-right of right panel), check \"Allow format selection on first package install\" in General tab and click OK.                                          \r\n4. Go to \"Browse\" tab and click a package (for example \"Newtonsoft.Json\").   \r\n5. Click the \"Version\" drop-down box in the right panel, and type a version \"12.0.1\" which already exist in the list.   \r\n6. Click the down arrow button to open the version drop-down list. \r\n## Expected: \r\nAll the versions should show in the custom version drop-down box. \r\n## Actual: \r\nOther versions lost after typing a version in the custom version drop-down box as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/185591129-492e1bdb-8399-4db6-8a39-efa39d9ef84d.png)\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"23516901699","Type":"IssuesEvent","CreatedAt":"2022-08-18T22:38:57","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12044","RelatedDescription":"Opened issue \"VSSolutionManager.EnsureInitializeAsync should not subscribe to SolutionEvents multiple times when the project initialization fails\" (#12044) at NuGet/Home","RelatedBody":"Say you have a large solution with many projects and EnsureInitializeAsync runs. \r\nWe get through the `InitializeAsync` part which adds listeners to the solution events and later we fail by throwing in EnsureNuGetAndVsProjectAdapterCacheAsync. \r\n\r\nWe can do one of the following: \r\n\r\n- We already differentiate between cache initialization and overall initializaiton. It'd be cheap to just set initialize even if the cache initialization fails, but obviously let the cache initialization fail. \r\n- Introduce another init concept, potentially one that unsubscribes when cache initialization fails inside of EnsureInitializeAsync\r\n\r\nI am leaning toward the first approach, but this requires more thought."},{"Id":"23516520847","Type":"IssuesEvent","CreatedAt":"2022-08-18T22:05:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8028","RelatedDescription":"Closed issue \"Icon Technical Specification\" (#8028) at NuGet/Home","RelatedBody":"* Address all feedback and provide a more final version\r\n* Publish the spec"},{"Id":"23516472172","Type":"IssuesEvent","CreatedAt":"2022-08-18T22:01:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3299","RelatedDescription":"Closed issue \"Improve logging when Default project Initialization fails\" (#3299) at NuGet/Home","RelatedBody":"This is related to https://github.com/NuGet/Home/issues/1215\nWhen Default Project returns null, We have no idea what happens and error message \"configuration is invalid\" is incorrect. Need to improve logging for this case, When default project return null, we should provide all projects in DTEProjectCache, projectSafeName for default project.\n"},{"Id":"23516457844","Type":"IssuesEvent","CreatedAt":"2022-08-18T22:00:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6786","RelatedDescription":"Closed issue \"add more data point for error/warning\" (#6786) at NuGet/Home","RelatedBody":""},{"Id":"23516212846","Type":"IssuesEvent","CreatedAt":"2022-08-18T21:42:28","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12043","RelatedDescription":"Closed issue \"[DCR]:  Disable signed package verification by default on Linux in .NET 7 SDK\" (#12043) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nStarting with .NET 7 RC1 SDK, NuGet signed package verification during restore operations was [enabled by default on Linux](https://github.com/NuGet/NuGet.Client/pull/4727).\n\n### Desired Behavior\n\nUntil https://github.com/NuGet/Home/issues/12033 is resolved, we need to disable signature verification by default.\n\n### Additional Context\n\n_No response_"},{"Id":"23514917189","Type":"IssuesEvent","CreatedAt":"2022-08-18T20:16:05","Actor":"julealgon","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12042","RelatedDescription":"Closed issue \"[Bug]: NU1504:DuplicatePackageItem firing incorrectly in some situations\" (#12042) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n6.3.0.128\n\n### Worked before?\n\nVisual Studio 17.2.X (introduced with the 17.3 update)\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nAfter updating to VS 17.3, we started getting NU1504 in our builds, which caused the builds to fail since we have `TreatWarningsAsErrors` enabled in the solution.\r\n\r\nThe problem appears to be related to a conditional `ItemGroup` inclusion that is based on project name. For some reason, _some_ configurations of `Directory.Build.props` + `.csproj` files are failing the duplicate package check even though the merged project does NOT have duplicate packages.\r\n\r\nThis is a simplified version of our `Directory.Build.props`:\r\n```xml\r\n<Project>\r\n\r\n  <PropertyGroup>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n\r\n    <IsUnitTestProject>false</IsUnitTestProject>\r\n    <IsUnitTestProject>$(MSBuildProjectName.EndsWith('.UnitTests'))</IsUnitTestProject>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\"$(IsUnitTestProject)\">\r\n    <Using Include=\"FluentAssertions\" />\r\n    <Using Include=\"FluentAssertions.Execution\" />\r\n    <Using Include=\"NSubstitute\" />\r\n    <Using Include=\"Xunit\" />\r\n\r\n    <PackageReference Include=\"FluentAssertions\" Version=\"6.7.0\" />\r\n    <PackageReference Include=\"FluentAssertions.Analyzers\" Version=\"0.17.2\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.2.0\" />\r\n    <PackageReference Include=\"NSubstitute\" Version=\"4.4.0\" />\r\n    <PackageReference Include=\"NSubstitute.Analyzers.CSharp\" Version=\"1.0.15\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"coverlet.collector\" Version=\"3.1.2\">\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.5\">\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd this is one of the projects that were triggering the warning:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FluentAssertions\" Version=\"6.7.0\" />\r\n    <PackageReference Include=\"FluentAssertions.Analyzers\" Version=\"0.17.2\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"MediatR\" Version=\"10.0.1\" />\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.2.0\" />\r\n    <PackageReference Include=\"NSubstitute\" Version=\"4.4.0\" />\r\n    <PackageReference Include=\"NSubstitute.Analyzers.CSharp\" Version=\"1.0.15\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"xunit.core\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.5\">\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nNote how `Directory.Build.props` defines some \"common packages for unit testing projects\", and tests projects ending with `UnitTests` to include those or not.\r\n\r\nThe projects where we are seeing the warning contain a sizeable subset of the same packages/versions defined in `Directory.Build.props`, but they _do not match the 'UnitTests' criteria_.\r\n\r\nI had a hard time trying to reproduce this exact problem on a blank solution but eventually it did happen. However, after removing and re-adding configurations and nodes in either the project or the directory.build.props file, I was able to make it stop raising the warning, even though the exact same setup was firing the warning before. Thus this problem appears intermittent, maybe because it depends on some sort of scanning order that is undefined (like reflection is, for example).\r\n\r\nI currently don't have a minimal sample solution that repros this, but I'll try to create one again that consistently raises the warning.\r\n\r\nAs a workaround, we have now added the `DisableCheckingDuplicateNuGetItems` flag to our `Directory.Build.props` file to stop raising this.\n\n### Verbose Logs\n\n```shell\nError NU1504: Duplicate 'PackageReference' items found. Remove the duplicate items or use the Update functionality to ensure a consistent restore behavior. The duplicate 'PackageReference' items are: FluentAssertions 6.6.0, FluentAssertions 6.6.0; FluentAssertions.Analyzers 0.17.2, FluentAssertions.Analyzers 0.17.2; Microsoft.NET.Test.Sdk 17.1.0, Microsoft.NET.Test.Sdk 17.1.0; xunit.runner.visualstudio 2.4.3, xunit.runner.visualstudio 2.4.3\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":49,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2022-08-20T03:30:25.9571356Z","RunDurationInMilliseconds":1382}