{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23728686745","Type":"IssuesEvent","CreatedAt":"2022-08-30T22:29:51","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9171","RelatedDescription":"Closed issue \"[A11y][ScreenReader]NVDA is announcing as the Upload package heading twice\" (#9171) at NuGet/NuGetGallery","RelatedBody":"Original: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1554248\r\n\r\nRepro Steps:\r\nHit https://www.nuget.org and press Enter key.\r\nNavigate to \"Sign in\" control and hit Enter key.\r\nNavigate to \"Sign in with Microsoft\" control and hit Enter key.\r\nSelect “Upload Package” from the Profile Dropdown and hit Enter key.\r\nVerify that whether the Upload package heading is announcing as two times or not.\r\n\r\nActual Result:\r\nNVDA is announcing as the Upload package heading as twice when the NVDA focus receives.\r\n\r\nExpected result:\r\nNVDA should be announce the Upload package as once when the NVDA focus should receive.\r\n\r\nUser Impact:\r\nScreen Reader Users may be get confused when the screen reader should announce twice the heading when the focus receives.\r\n\r\nNotes:\r\nUnsure why this is happening. It is likely taht the focused element has content, and that a child element also has the content, and both are being read out. I believe this is a way to mark some information as ignore to screenreaders. Assuming this is the case, marking the child information as do not read should fix this."},{"Id":"23705331492","Type":"PullRequestEvent","CreatedAt":"2022-08-30T00:05:59","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9217","RelatedDescription":"Opened pull request \"Add api.reuse.software to image allowlist\" (#9217) at NuGet/NuGetGallery","RelatedBody":"After evaluation of api.resue.software, we decide to include this domain to our allowlist\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9200"},{"Id":"23703291453","Type":"IssuesEvent","CreatedAt":"2022-08-29T21:15:28","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9140","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Connection resets and invalid JSON returned from api.nuget.org\" (#9140) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nCan't restore packages from Nuget API V3, getting the following error message:\r\n```\r\nFailed to download package 'Microsoft.AspNetCore.Http.2.2.2' from 'https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.http/2.2.2/microsoft.aspnetcore.http.2.2.2.nupkg'.\r\n  Unable to read data from the transport connection: Connection reset by peer.\r\n    Connection reset by peer\r\n```\r\n\r\n```\r\nRetrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/system.buffers/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/system.buffers/index.json'.\r\n  An error occurred while sending the request.\r\n    Unable to read data from the transport connection: Connection reset by peer.\r\n    Connection reset by peer\r\n  Failed to download package 'System.Text.Json.4.6.0' from 'https://api.nuget.org/v3-flatcontainer/system.text.json/4.6.0/system.text.json.4.6.0.nupkg'.\r\n  An error occurred while sending the request.\r\n    Unable to read data from the transport connection: Connection reset by peer.\r\n    Connection reset by peer\r\n```\n\n### Repro Steps\n\nRestore Nuget packages from Nuget API V3\n\n### Expected Behavior\n\nNuget packages restored.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23703171513","Type":"IssuesEvent","CreatedAt":"2022-08-29T21:07:55","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9216","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#9216) at NuGet/NuGetGallery","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at www.nuget.org:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n \r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at www.nuget.org or have any questions, do reach out to us at support@nuget.org or by commenting under this issue. We will be closely monitoring our communication channels to assess any unexpected impact.\r\n"},{"Id":"23701684866","Type":"PullRequestEvent","CreatedAt":"2022-08-29T19:38:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9214","RelatedDescription":"Merged pull request \"Update ServerCommon 2.105.0\" (#9214) at NuGet/NuGetGallery","RelatedBody":"This resolves a Dependabot alert about Microsoft.Owin 4.1.0\r\nPrune unnecessary dependencies in NuGetGallery csproj files\r\nDelete unused sidecar files for NuGetGallery.csproj"},{"Id":"23701207369","Type":"IssuesEvent","CreatedAt":"2022-08-29T19:10:47","Actor":"baronfel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9215","RelatedDescription":"Opened issue \"[Feature]: Add F# support to the new Syntax Highlighting feature\" (#9215) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nThe new README syntax highlighting is great, but a .NET Language isn't supported for it: F#. I'd really like for all of my F# sample code to be highlighted just like other languages.\r\n\r\n\n\n### The Elevator Pitch\n\nThat's because the F# syntax isn't bundled with the dfeault bundle of highlight.js. It should be very easy to add the necessary CDN extension for F# (https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/languages/fsharp.min.js), and I think all .NET languages should enjoy first-class support on NuGet.org.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"23698058396","Type":"PullRequestEvent","CreatedAt":"2022-08-29T16:17:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9214","RelatedDescription":"Opened pull request \"Update ServerCommon 2.105.0\" (#9214) at NuGet/NuGetGallery","RelatedBody":"This resolves a Dependabot alert about Microsoft.Owin 4.1.0\r\nPrune unnecessary dependencies in NuGetGallery csproj files\r\nDelete unused sidecar files for NuGetGallery.csproj"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23730177691","Type":"IssuesEvent","CreatedAt":"2022-08-31T00:31:57","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10978","RelatedDescription":"Closed issue \"[Bug Bash]The new designs of hovered-on menu between VS and NuGet are inconsistent\" (#10978) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Main\\31429.199\r\nNuGet Version: Dev\\6.0.0.133\r\nOS Version: Windows-10-Enterprise-21H1\r\n\r\n## Repro steps\r\n1. Launch VS and create a solution [e.g. C# Console App (.NET Framework 4.8)].\r\n2. Open the PM UI.\r\n3. Check the new design of hovered-on menu from dropdown list of PM UI.\r\n\r\n## Expected\r\nThe new design of hovered-on menu between VS and NuGet Client should be consistent.\r\n\r\n## Actual\r\nThe new design of hovered-on menu between VS and NuGet Client are inconsistent as below screenshot. The VS hovered-on menu has a rectangle, but NuGet Client hovered-on menu doesn’t.\r\n![image](https://user-images.githubusercontent.com/20632625/123937908-3c677880-d9c9-11eb-86d2-07f3088eb277.png)\r\n\r\n## Note:\r\nIt is not a regression since it started to repro from the new VS design merged."},{"Id":"23729260363","Type":"IssuesEvent","CreatedAt":"2022-08-30T23:13:46","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12065","RelatedDescription":"Opened issue \"A `VsDialogWindow` wrapping `DialogWindow` is an old workaround that can be removed\" (#12065) at NuGet/Home","RelatedBody":"The purpose of our [VsDialogWindow.cs](https://github.com/NuGet/NuGet.Client/blob/fdac4de76fc80791476ca9e737f35daf2a6640c3/src/NuGet.Clients/NuGet.PackageManagement.UI/VsDialogWindow.cs) appears to be that, in the past, the VS platform assembly name was revved for each product iteration, meaning our XAML code needed a wrapper to target the correct assembly without specifying the version# in XAML. \r\nThe version is no longer being revved for `Microsoft.VisualStudio.Shell.15.0.dll`, so I believe this can be removed entirely. We also have other direct XAML references to this assembly already (eg, [InfiniteScrollList.xaml](https://github.com/NuGet/NuGet.Client/blob/fdac4de76fc80791476ca9e737f35daf2a6640c3/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/InfiniteScrollList.xaml#L10)).\r\n\r\nI found a comment here that makes me more confident that this is safe to remove:\r\n\r\n>     /// <summary>\r\n>     /// Works around an issue w/ DialogWindow and targetting multiple versions of VS.\r\n>     /// \r\n>     /// Because the Microsoft.VisualStudio.Shell.version.0 assembly changes names\r\n>     /// we cannot refer to both v10 and v11 versions from within the same XAML file.\r\n>     /// Instead we use this subclass defined in our assembly.\r\n>     /// </summary>\r\nhttps://github.com/microsoft/PTVS/blob/bcdfec4f211488e373fa253583fefe3dbb320c87/Common/Product/SharedProject/DialogWindowVersioningWorkaround.cs#L20-L26"},{"Id":"23723785868","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:36:21","Actor":"lostmsu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12064","RelatedDescription":"Opened issue \"[Bug]: Specifying `RuntimeIdentifier` flattens package contents in output directory\" (#12064) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 6.0.400\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Create a console .csproj\r\n2. Add the following reference:\r\n```xml\r\n<PackageReference Include=\"LostTech.TensorBoard.Python.runtime.win-x64\" Version=\"2.10.0-CI-2022-08-28-15\" />\r\n```\r\n3. Add\r\n```xml\r\n<RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n<Platforms>x64</Platforms>\r\n```\r\n\r\n**Expected**: output directory should contain a subdirectory named `native` from the package with the contents of the package content tree structure preserved.\r\n\r\n**Actual**: output directory get all the files from `runtimes\\win-x64\\native` directory of the package, without any directory structure (e.g. files are directly in the output directory, relative paths are not preserved).\n\n### Verbose Logs\n\n_No response_"},{"Id":"23721924943","Type":"IssuesEvent","CreatedAt":"2022-08-30T16:00:45","Actor":"mmitche","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12063","RelatedDescription":"Opened issue \"Source-build behavior control update\" (#12063) at NuGet/Home","RelatedBody":"### Description\r\n\r\n**This issue is dependent on https://github.com/dotnet/source-build/issues/2974 and is a placeholder for .NET 8 required work in product repositories.**\r\n\r\nInstructions for implementation will be updated once https://github.com/dotnet/source-build/issues/2974 but will likely be a mechanical shift of properties in this repo. In a general sense, this is scaffolding work for expanding the set of source-built platforms beyond Linux."},{"Id":"23705567003","Type":"IssuesEvent","CreatedAt":"2022-08-30T00:29:26","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12062","RelatedDescription":"Opened issue \"[Bug]: \" (#12062) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 17.3\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Configure a private Azure DevOps feed in NuGet.Config file.\r\n2. Open Visual Studio and navigate to PM UI\r\n3. VS credential provider is invoked for credentials.\r\n4. Imagine there are stale accounts in the VS keychain.\r\n5. Package source returns 401 response because the credentials are stale. VS displays an error message in `View -> Output` window and adds an error entry in the error list window.\r\n6. User then sign in into Visual Studio using Account Settings window which should fix stale credentials issue.\r\n7. Navigate to browse tab again.\r\n\r\n**Actual:**\r\nCredential provider is not invoked during step 7. Hence VS continues to display an error message in `View -> Output` window and adds an error entry in the error list window saying unable to access a source.\r\n\r\n**Expected:**\r\nCredential provider should be invoked in step 7 so that NuGet can obtain the latest valid credentials to access the package source.\r\n\r\nContext - NuGet starts a new activity id for every operation such as browsing packages, installing packages. Hence, I assume activity id to be different for every activity. AFAIK ActivityCorrelationId.StartNew() [Search · ActivityCorrelationId (github.com)](https://github.com/NuGet/NuGet.Client/search?q=ActivityCorrelationId) is invoked before every NuGet operation. Hence credential provider should be invoked every time as long as activity id is different. Please note that I am going through this code path for the first time, hence I may have missed a scenario.\n\n### Verbose Logs\n\n_No response_"},{"Id":"23701790133","Type":"IssuesEvent","CreatedAt":"2022-08-29T19:45:01","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11981","RelatedDescription":"Closed issue \"[Bug]: NU1604 when using CPM with analyser packages\" (#11981) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet 6.0.302, msbuild 16.5.0.26101, nuget 6.2.1.7, linux, vscode\r\n\r\n### Worked before?\r\n\r\nno\r\n\r\n### Impact\r\n\r\nOther\r\n\r\n### Repro Steps & Context\r\n\r\nI'm using the new \"Central Package Managment\" feature. It doesn't work for analyser (and similar) packages.\r\n\r\nFor example, I want to use the [`AsyncFixer`](https://www.nuget.org/packages/AsyncFixer#package-reference) package.\r\n\r\nIt is installed in `MyProject.csproj` like this:\r\n````xml\r\n<PackageReference Include=\"AsyncFixer\" Version=\"1.6.0\">\r\n  <PrivateAssets>all</PrivateAssets>\r\n  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n</PackageReference>\r\n````\r\nBut since I'm using CPM, I remove the `Version` property (and add it to `Directory.Packages.props` instead).\r\n\r\nWhen I run `dotnet restore`, I get this:\r\n> /home/username/MyProject/MyProject.csproj : **warning NU1604**: Project dependency AsyncFixer does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results.\r\n\r\nI don't have that problem for normal packages, only ones with `PrivateAssets` and `IncludeAssets`.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":124,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-08-31T03:30:26.0231744Z","RunDurationInMilliseconds":1340}