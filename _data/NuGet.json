{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20553623653","Type":"PullRequestEvent","CreatedAt":"2022-03-03T02:32:08","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9032","RelatedDescription":"Opened pull request \"[A11y] Improved contrast of focus outline on elements in the header and footer\" (#9032) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8986\r\n\r\n**Problem:**\r\n\r\nOn NuGet.org, when navigating a page using the keyboard (tab key), elements in the navbar and footer were given a black outline, which had a low contrast ratio with the blue background.\r\n\r\n**Previous version**\r\n\r\nHeader:\r\n![Old, navbar](https://user-images.githubusercontent.com/82980589/156483103-fe4370dc-5fe4-4831-98d3-021b07b662c9.gif)\r\n\r\n![image](https://user-images.githubusercontent.com/82980589/156484206-fe49f7da-b4fd-4357-80cf-e54c7938a768.png)\r\n\r\nFooter:\r\n![Old, footer](https://user-images.githubusercontent.com/82980589/156483117-b58d29a4-3015-41ad-8776-b8653664a170.gif)\r\n\r\n![image](https://user-images.githubusercontent.com/82980589/156484502-a82b2f10-314e-44bb-83d8-6a1729bff731.png)\r\n\r\n\r\n**Fix:**\r\n\r\nTo fix this, I changed the focus outline to white.\r\n\r\nAfter making the changes:\r\n\r\n**New version**\r\n\r\nHeader:\r\n![New, navbar](https://user-images.githubusercontent.com/82980589/156483142-a30f06a0-3546-46ff-ad99-344078424a75.gif)\r\n\r\n![image](https://user-images.githubusercontent.com/82980589/156484341-f4a1c557-20ae-4694-a01f-0fbd15280108.png)\r\n\r\nFooter:\r\n![New, footer](https://user-images.githubusercontent.com/82980589/156483149-334513ef-d62b-41e0-9f22-b14705087769.gif)\r\n\r\n![image](https://user-images.githubusercontent.com/82980589/156484588-832ae602-3076-453a-ab99-84bdd6395e0d.png)\r\n\r\n"},{"Id":"20551958620","Type":"PullRequestEvent","CreatedAt":"2022-03-02T23:42:55","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9031","RelatedDescription":"Opened pull request \"[A11y] Improved contrast of buttons when in tab focus mode\" (#9031) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8987\r\n\r\n_Note:_ One of the original problems called out in the [a11y bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468969) was related to the contrast between the search sign and the white background (the search bar), but it looks like the wrong background color was selected in their tests, and I could not reproduce it while using Accessibility Insights myself.\r\n\r\nTheir screenshot:\r\n![image](https://user-images.githubusercontent.com/82980589/156466090-cabbae21-3474-4382-9b91-70ce1e361529.png)\r\n\r\nWhen I looked into it:\r\n![image](https://user-images.githubusercontent.com/82980589/156466171-7a646b39-2aaa-4df6-858b-51dfdd718cff.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156466221-101580df-46a3-48dd-97c0-9094232b070e.png)\r\n\r\nHowever, there were other accessibility concerns because of contrast ratios here, which I've tried to fix.\r\n\r\n**Problem:**\r\n\r\nOn NuGet.org, when navigating a page using the keyboard (tab key), buttons would get a black outline and would darken their original color. This reduced the contrast on certain buttons like the Search button in the navbar and the Send button on the Forgot Password page (with respect to the tab focus outline, and in some cases other surrounding colors in the backdrop)\r\n\r\nPrevious version (Search):\r\n![image](https://user-images.githubusercontent.com/82980589/156465861-8d6a6f5b-8c57-4e9b-a04f-a5e70423711e.png)  ![image](https://user-images.githubusercontent.com/82980589/156465819-ba78de01-95db-45b2-ad33-3695d7d4ec73.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156466569-eaa0edd7-b433-46ee-a4c4-87caebb4e750.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156466794-53da64c6-2e60-4606-9185-9ea618f481fd.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156466843-1b0c24c6-3c01-4830-9822-cc4fcd4062a6.png)\r\n\r\nPrevious version (Send button on Forgot Password page):\r\n![image](https://user-images.githubusercontent.com/82980589/156466878-e3117931-bbdc-4b48-aaab-4c07a48c8d5c.png)  ![image](https://user-images.githubusercontent.com/82980589/156466899-2153e3df-db8d-4ca3-8d4e-2180da88f0ca.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156467095-ba51a40e-43d0-41a3-b432-cbd10a1c4a2f.png)\r\n\r\n\r\n**Fix:**\r\n\r\nTo fix this, I removed the darkening effect when in tab focus. The outline still highlights the element distinctly, and has higher contrast ratios with the original button colors.\r\n\r\nAfter making the changes:\r\n\r\nNew version (Search):\r\n![image](https://user-images.githubusercontent.com/82980589/156467350-cc85c145-b985-4ea8-acd1-d4d39a3847f2.png)  ![image](https://user-images.githubusercontent.com/82980589/156467326-941db588-4a2c-48d6-b921-dcd144bcebdb.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156467504-192a9457-91fd-4793-8567-2c3a5ac11ed8.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156467415-553609ce-c31e-4539-a39e-f6a332eb99fc.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156467585-2883143f-3042-41b4-ad09-6a73d111906e.png)\r\n\r\nNew version (Send button on Forgot Password page):\r\n![image](https://user-images.githubusercontent.com/82980589/156467839-bd4da740-22a2-4877-801a-82ff3b031fd5.png)  ![image](https://user-images.githubusercontent.com/82980589/156467862-9c7b2088-8d7f-47f0-9a41-fb5d5184537a.png)\r\n![image](https://user-images.githubusercontent.com/82980589/156467986-bd161f70-f13e-4afe-8cf8-25b483dcb74b.png)"},{"Id":"20551018512","Type":"IssuesEvent","CreatedAt":"2022-03-02T22:20:38","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8897","RelatedDescription":"Closed issue \"Re-add a11y support for vulnerable/deprecated bangs and prefix checkmarks to package details page\" (#8897) at NuGet/NuGetGallery","RelatedBody":"These were reverted when the v2 page was created."},{"Id":"20551006110","Type":"IssuesEvent","CreatedAt":"2022-03-02T22:19:42","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8899","RelatedDescription":"Closed issue \"Add additional text to use of online safety categories in report package form\" (#8899) at NuGet/NuGetGallery","RelatedBody":"Add this text above the details box when a safety category is chosen:\r\n\r\nPlease also describe where in the package the problem was found. \r\n\r\nBe sure to include:\r\n-\tWhether the problem is in graphics, video, readme, scripts, libraries, nuspec, other metadata, other file(s).\r\n-\tThe exact names of the offending file(s).\r\n\r\n\r\n/cc @jcjiang "},{"Id":"20541557335","Type":"IssuesEvent","CreatedAt":"2022-03-02T13:23:46","Actor":"SabotageAndi","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9030","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Frameworks not displayed for SpecFlow NuGet package\" (#9030) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe Framework tab of our main NuGet packages is empty.\n\n### Repro Steps\n\nLook at package pages of\r\n- https://www.nuget.org/packages/SpecFlow/\r\n- https://www.nuget.org/packages/SpecFlow.NUnit/\r\n- https://www.nuget.org/packages/SpecFlow.MsTest/\r\n- https://www.nuget.org/packages/SpecFlow.xUnit/\r\n\r\nSwitch to `Frameworks` Tab\r\n\r\nNothing is displayed\n\n### Expected Behavior\n\nSupported Frameworks are displayed.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/859801/156369568-14ebcd37-a66d-43b7-96ed-c93c186a0708.png)\r\n\n\n### Additional Context and logs\n\nOur NuGet packages are doing more than your standard NuGet Packages, so perhaps something of this breaks the detection."},{"Id":"20528889233","Type":"PullRequestEvent","CreatedAt":"2022-03-02T01:15:46","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9027","RelatedDescription":"Merged pull request \"[ReleasePrep] RI dev to main\" (#9027) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20528128767","Type":"IssuesEvent","CreatedAt":"2022-03-02T00:18:57","Actor":"SerratedSharp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9029","RelatedDescription":"Opened issue \"[Feature]: Deep link Release Notes and show in Package Manager\" (#9029) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nRelease Notes seems like a good place to put important information about changes in the current release but this isn't very visible.  It doesn't appear when the package is selected in the VS Package Explorer, and I can't deeplink to it.\r\n\r\nThere's already a hash link for the tab, but it doesn't activate the tab: https://www.nuget.org/packages/SerratedSharp.SerratedJQ.Lite#releasenotes-tab \n\n### The Elevator Pitch\n\nIn documentation I find myself putting things like \"For current compatibility information visit *Nuget link* and click the right Release Notes tab\" which has unnecessary exposition rather than what would be more straightforward \"For current compatibility information see *Nuget link*\". \r\n\r\nTo accomplish this, make the hash link deep link directly to Release Notes tab, so that we can link directly to the tab from other places:\r\nhttps://www.nuget.org/packages/SerratedSharp.SerratedJQ.Lite#releasenotes-tab\r\n\r\nAlso consider showing the Release Notes as a section in the VS Package Manager when the package is selected.  I.e. in the panel where Description, Version, License, etc. is shown.\r\n\r\nTypically Release Notes would contain information about breaking changes which would warrant it being much more visible.\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20525586393","Type":"PullRequestEvent","CreatedAt":"2022-03-01T21:11:15","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9028","RelatedDescription":"Opened pull request \"[A11y]Fix Graph on stats for narrow screen.\" (#9028) at NuGet/NuGetGallery","RelatedBody":"Disables removing the chart when screen in very narrow.\r\nMoves the title out of the chart itself since chart no longer is removed. This also improves readability of the title.\r\n\r\nOld:\r\n![image](https://user-images.githubusercontent.com/11051729/156249413-1d900878-47a2-4563-b016-5f58f0084f83.png)\r\n\r\nNew:\r\n![image](https://user-images.githubusercontent.com/11051729/156249472-eaa234e4-b7c6-4ad2-9ee3-6d218f8f10bc.png)\r\n\r\nNote difference in displayed data comes from dev vs public."},{"Id":"20524188336","Type":"IssuesEvent","CreatedAt":"2022-03-01T19:36:28","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8980","RelatedDescription":"Closed issue \"Help Us Improve Our Open Source Repositories!\" (#8980) at NuGet/NuGetGallery","RelatedBody":"We'd love to hear from those of you who participate often in our open source project and let us know how we're doing as maintainers.\r\n\r\nWhether you've been involved for awhile now or you're relatively new to open source, please let us know about your experience by [taking a survey that will take a couple minutes](https://www.surveymonkey.com/r/8QTQTGJ?Source=NugetGallery).\r\n\r\nThank you kindly!\r\n"},{"Id":"20509880163","Type":"IssuesEvent","CreatedAt":"2022-03-01T04:30:49","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9025","RelatedDescription":"Closed issue \"Why this package has not been indexed yet in 2 hours ago? \" (#9025) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nother\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n![image](https://user-images.githubusercontent.com/14214176/155704759-fe6e1831-9db5-4cc2-9cf9-1d276b2a693a.png)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"20507730711","Type":"PullRequestEvent","CreatedAt":"2022-03-01T00:51:32","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9024","RelatedDescription":"Merged pull request \"Improve inclusiveness of language used in code\" (#9024) at NuGet/NuGetGallery","RelatedBody":"Improve inclusiveness of language used in code"},{"Id":"20507392167","Type":"PullRequestEvent","CreatedAt":"2022-03-01T00:17:52","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9026","RelatedDescription":"Merged pull request \"[ReleasePrep] FI main to dev\" (#9026) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20552407278","Type":"IssuesEvent","CreatedAt":"2022-03-03T00:25:58","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11620","RelatedDescription":"Closed issue \"[Bug]:Version combo box is not editable in C# Console Application (.NET Framework) – PackageReference project\" (#11620) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nPM UI\r\n\r\n### Product Version\r\n\r\nNuGet Client dev-martinrrm-fix-versions-combobox\\6.2.0.452\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Repro Steps & Context\r\n\r\n## Repro steps\r\n1. Create a new C# Console Application (.net framework) project.\r\n2. Right-click the project and select ‘Manage NuGet Packages…’ menu item in Solution Explorer.\r\n3. Click settings button, check ‘Allow format selection on first package install’ in General tab, select 'PackageReference' in the ‘Default package management format’ combo box and click OK.\r\n4. Go to ‘Browse’ tab, click some packages (e.g.Newtonsoft.Json) and start typing a version in the version list.\r\n\r\n## Expected\r\nVersion combo box is editable in C# Console Application (.NET Framework) – PackageReference project.\r\n\r\n## Actual\r\nVersion combo box is not editable in C# Console Application (.NET Framework) – PackageReference project as below screenshot.\r\n![Record](https://user-images.githubusercontent.com/40230425/155710346-21813537-bb48-4376-88c6-79cd2e52b5b7.gif)\r\n## Note\r\n1. The issue does not repro on C# Console App (.NET Core) project.\r\n2. It is a regression bug, start to repro from dev-martinrrm-fix-versions-combobox\\6.2.0.452.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20552030897","Type":"IssuesEvent","CreatedAt":"2022-03-02T23:50:07","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11639","RelatedDescription":"Opened issue \"[Bug]: NU1004 in Visual Studio, but not command line (lock files in locked mode)\" (#11639) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nVS16.11\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nAn internal customer reported this to me in a huge, extremely complex, closed source repo. Given the complexity, I'm not 100% sure how to reproduce it, but the outcome is that in Visual Studio, project-system was sending NuGet a nomination where the project had two ProjectReferences to the same project. One had path `..\\some\\reference.csproj`, whereas the other had path `d:\\path\\to\\some\\reference.csproj`. I guess this is why project-system failed to de-duplicate before sending to NuGet.\r\n\r\nIf the Directory.Build.props (or in this case some organization mandated SDK/build system) uses `<RestoreLockedMode>true`, then VS will fail with [NU1004](https://docs.microsoft.com/nuget/reference/errors-and-warnings/nu1004). The error message is super difficult to understand/determine what the difference is, but if you spend enough time, you can figure out that some of project references are duplicated. Figuring out why the project references are duplicated is even more difficult, and maybe is not possible by customers, even with a binlog. I had to debug NuGet's VS extension to figure it out.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20547010825","Type":"IssuesEvent","CreatedAt":"2022-03-02T17:52:22","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11638","RelatedDescription":"Opened issue \"Nuget Package Manager Hang VS for 10-30 sec and show Version combo over the desktop / never close\" (#11638) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Nuget-Package-Manager-Hang-VS-for-10-30-/1665959)._\n\n---\n[severity:It's more difficult to complete my work] [regression]\n```\ngit clone https://github.com/discord-csharp/CSharpRepl\ncd CSharpRepl\nstart ./CSharpRepl.sln\n```\n\nRight click project `CSharpRepl` => `manage nuget packages`\non the top right part chagne the combo to `dotnet-tool` feed\nselect the nuget `Microsoft.CodeAnalysis.CSharp.Scripting`\nthen try to open the `Version` combo:\n\n* Will hang VS \n* will pop the combo top left of the screen \n* will keep combo open even after closing UI\n\n\n![image.png](https://aka.ms/dc/image?name=Bfc1fe75a16e54c4c908f68c376658e48637805593316389182_20220216-020115-image.png&tid=fc1fe75a16e54c4c908f68c376658e48637805593316389182)\n\n![image.png](https://aka.ms/dc/image?name=Baaf6625aafc94e83b8b779be643dc7be637805593309514083_20220216-020151-image.png&tid=aaf6625aafc94e83b8b779be643dc7be637805593309514083)\n\n![image.png](https://aka.ms/dc/image?name=B2129adef72674b46a0bce18f9b8a1e68637805596661539253_20220216-020742-image.png&tid=2129adef72674b46a0bce18f9b8a1e68637805596661539253)\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/15/2022, 10:31 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 2/17/2022, 07:35 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"20541690175","Type":"IssuesEvent","CreatedAt":"2022-03-02T13:30:33","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11637","RelatedDescription":"Opened issue \"[Bug]: updating package source URL in Tools | Options UI with illegal path character crashes Visual Studio\" (#11637) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nMicrosoft Visual Studio Enterprise 2022 (64-bit) - Int Preview Version 17.2.0 Preview 2.0 [32301.631.main]\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Launch VS.\r\n2. Navigate on the main menu to Tools | \"NuGet Package Manager\" | \"Package Manager Settings\".\r\n3. In the subsequent Options dialog, navigate in the left-hand tree pane to \"NuGet Package Manager\" | \"Package Manager\" | \"Package Sources\".\r\n4. Click the '+' button at the top of the dialog to create a new package source.\r\n5. In the Source textbox add a `'` character anywhere.\r\n6. Click Update.\r\n\r\nExpected result:  A modal dialog will pop up and tell me that the value is invalid.\r\n\r\nActual result:  Visual Studio crashes.\r\n\r\nNote:  although this repro may seem contrived, I hit it when I copied and pasted a package source URL and accidentally included a leading `'`:\r\n```\r\n'https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\r\n```\n\n### Verbose Logs\n\n```shell\nMicrosoft.VisualStudio.Composition.CompositionFailedException: Expected 1 export(s) with contract name \"System.IServiceProvider\" but found 0 after applying applicable constraints.\r\n>\tMicrosoft.VisualStudio.Composition.dll!Microsoft.VisualStudio.Composition.ExportProvider.GetExports(Microsoft.VisualStudio.Composition.ImportDefinition importDefinition)\tUnknown\r\n \tMicrosoft.VisualStudio.Composition.dll!Microsoft.VisualStudio.Composition.ExportProvider.GetExports<System.IServiceProvider, System.Collections.Generic.IDictionary<string, object>>(string contractName, Microsoft.VisualStudio.Composition.ImportCardinality cardinality)\tUnknown\r\n \tMicrosoft.VisualStudio.Composition.dll!Microsoft.VisualStudio.Composition.ExportProvider.GetExport<System.IServiceProvider, System.Collections.Generic.IDictionary<string, object>>(string contractName)\tUnknown\r\n \tMicrosoft.VisualStudio.Composition.dll!Microsoft.VisualStudio.Composition.ExportProvider.GetExportedValue<System.IServiceProvider>()\tUnknown\r\n \tMicrosoft.VisualStudio.ComponentModelHost.Implementation.dll!Microsoft.VisualStudio.ComponentModelHost.ComponentModel.GetService<System.IServiceProvider>()\tUnknown\r\n \tNuGet.VisualStudio.Common.dll!NuGet.VisualStudio.ServiceLocator.GetComponentModelServiceAsync<System.IServiceProvider>()\tUnknown\r\n \tNuGet.VisualStudio.Common.dll!NuGet.VisualStudio.ServiceLocator.GetInstanceAsync<System.IServiceProvider>()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.ExecuteJob<System.IServiceProvider>(System.Func<System.Threading.Tasks.Task> asyncMethod, Microsoft.VisualStudio.Threading.JoinableTask job)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.RunAsync<System.IServiceProvider>(System.Func<System.Threading.Tasks.Task<System.IServiceProvider>> asyncMethod, bool synchronouslyBlocking, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run<System.IServiceProvider>(System.Func<System.Threading.Tasks.Task<System.IServiceProvider>> asyncMethod, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tNuGet.VisualStudio.Common.dll!NuGet.VisualStudio.ServiceLocator.GetInstance<System.IServiceProvider>()\tUnknown\r\n \tNuGet.VisualStudio.Common.dll!NuGet.VisualStudio.MessageHelper.ShowWarningMessage(string message, string title)\tUnknown\r\n \tNuGet.PackageManagement.UI.dll!NuGet.Options.PackageSourcesOptionsControl.TryUpdateSource()\tUnknown\r\n \tNuGet.PackageManagement.UI.dll!NuGet.Options.PackageSourcesOptionsControl.OnUpdateButtonClick(object sender, System.EventArgs e)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.OnClick(System.EventArgs e)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Button.OnClick(System.EventArgs e)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Button.WndProc(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DebuggableCallback(System.IntPtr hWnd, int msg, System.IntPtr wparam, System.IntPtr lparam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.SendMessage(int msg, System.IntPtr wparam, System.IntPtr lparam)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.ReflectMessageInternal(System.IntPtr hWnd, ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.WmCommand(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.WndProc(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DebuggableCallback(System.IntPtr hWnd, int msg, System.IntPtr wparam, System.IntPtr lparam)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DefWndProc(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.WmMouseUp(ref System.Windows.Forms.Message m, System.Windows.Forms.MouseButtons button, int clicks)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.WndProc(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ButtonBase.WndProc(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Button.WndProc(ref System.Windows.Forms.Message m)\tUnknown\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DebuggableCallback(System.IntPtr hWnd, int msg, System.IntPtr wparam, System.IntPtr lparam)\tUnknown\r\n```\n```\n"},{"Id":"20541327303","Type":"IssuesEvent","CreatedAt":"2022-03-02T13:11:50","Actor":"tonyhallett","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11636","RelatedDescription":"Opened issue \"[Bug]: Visual Studio Nuget Package Manager UI does not open if other extension is enabled\" (#11636) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio: 2022 Enterprise / Possibly Professional/Communiy - multiple versions\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nI am a contributor to a Visual Studio extension [Fine Code Coverage](https://github.com/FortuneN/FineCodeCoverage) that is built for Visual Studio 2019 and Visual Studio 2022.\r\n\r\nUsers of the 2022 extension are [reporting](https://github.com/FortuneN/FineCodeCoverage/issues/213) the following behaviour.\r\n\r\nFCC ( Fine Code Coverage ) and (NPMUI) Nuget Package Management UI working together no problem.\r\nFor no known reason this changes\r\nWith FCC enabled NPMUI no longer works.\r\nDisable FCC and NPMUI works.\r\n\r\nThe logs provided by the 3 users of FCC that have reported the issue are consistent in the error.\r\n\r\n> Here are the log entries from ActivityLog that are written when I try to open the NuGet Package Manager:\r\n\r\n```\r\n  <entry>\r\n    <record>790</record>\r\n    <time>2021/11/22 08:40:51.160</time>\r\n    <type>Error</type>\r\n    <source>NuGetPackage.ShowManageLibraryPackageForSolutionDialog</source>\r\n    <description>XamlParseException - Provide value on &apos;System.Windows.Markup.StaticExtension&apos; threw an exception.</description>\r\n  </entry>\r\n  <entry>\r\n    <record>791</record>\r\n    <time>2021/11/22 08:41:20.206</time>\r\n    <type>Error</type>\r\n    <source>NuGetPackage.ShowManageLibraryPackageForSolutionDialog</source>\r\n    <description>Exception - The component &apos;NuGet.PackageManagement.UI.PackageManagerControl&apos; does not have a resource identified by the URI &apos;/NuGet.PackageManagement.UI;component/xamls/packagemanagercontrol.xaml&apos;.</description>\r\n  </entry>\r\n```\r\n\r\n> I see this error when running VS in log mode, not sure if that means anything.\r\n```\r\n2149 2022/03/01 21:39:52.229 Error NuGetPackage.ShowManageLibraryPackageDialog Exception - The component 'NuGet.PackageManagement.UI.PackageManagerControl' does not have a resource identified by the URI '/NuGet.PackageManagement.UI;component/xamls/packagemanagercontrol.xaml'.\r\n```\r\n\r\nComparing the two VS activity logs generated in each case, I can see the following in the log with FCC enabled that doesn't appear in with it disabled:\r\n```\r\n<entry> <record>2052</record> <time>2022/03/01 22:38:01.536</time> <type>Error</type> <source>NuGetPackage.ShowManageLibraryPackageDialog</source> <description>XamlParseException - Provide value on &apos;System.Windows.Markup.StaticExtension&apos; threw an exception.</description> </entry>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"20536612033","Type":"IssuesEvent","CreatedAt":"2022-03-02T09:09:26","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11635","RelatedDescription":"Opened issue \"[Bug]: The deleted packages.lock.json file still shows as before in the Solution Explorer window when “RestorePackagesWithLockFile” is not enabled\" (#11635) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nRelease-5.11.x\\5.11.1.17\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n### Details about Problem\r\nVS Version: D16.11\\32228.343\r\nNuGet Version: Release-5.11.x\\5.11.1.17\r\nOS Version: Windows-11-Enterprise-21H2\r\n\r\n### Repro steps\r\n1. Create a project [e.g. Class Library (.NET Framework)] and generate a lock file “packages.lock.json” alongside the csproj file. \r\n2. Install a PackageReference package into the project (to generate some content into the lock file). \r\n3. Run restore. \r\n4. Delete the lock file and run restore again. \r\n5. Check the lock file should not be regenerate.\r\n\r\n### Expected\r\nThe deleted packages.lock.json file should show as a deleted file or removed (that's what we do for .NET Core projects) in the Solution Explorer window. Below is what we show on 17.2 Preview 2 (Main\\32228.143).\r\n![image](https://user-images.githubusercontent.com/20632625/156330129-ad2a9715-2cc2-4e85-9898-5ec8c4f0110e.png)\r\n\r\n### Actual\r\nThe deleted packages.lock.json file still shows as before in the Solution Explorer window as below.\r\n![image](https://user-images.githubusercontent.com/20632625/156330313-bcd9ef97-06ac-4d0f-955e-2980b74aecf0.png)\r\n\r\n### Notes:\r\n1.It is not a regression. We just think it should be fix on VS 16.11.\r\n2.It doesn't repro on 17.2 Preview 2 (Main\\32228.143).\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":172,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-03-03T03:30:23.2070294Z","RunDurationInMilliseconds":1512}