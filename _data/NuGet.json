{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34946834155","Type":"PullRequestEvent","CreatedAt":"2024-01-19T01:13:26","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9782","RelatedDescription":"Opened pull request \"[Search-by-TFM] New Framework Filter Options UI\" (#9782) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5171\r\n\r\nThis change adds 2 new framework filter options to the search page:\r\n\r\n- **Include Computed Frameworks**\r\n     Checkbox that sets a boolean `true`/`false` value (default is `true`). When this is set to `false`, we filter packages only by their asset frameworks, and only show asset framework badges. When this is set to `true`, we filter packages by asset frameworks + computed frameworks, and we show both types of badges as well.\r\n- **Framework Filter Mode**\r\n     Toggle that chooses between `All` and `Any` (default is `All`). This affects cases when multiple framework or TFM filters are selected. When this is set to `All`, we will show packages matching **all** the framework and TFM filters. If it is set to `Any`, we will show packages matching **any one of** the selected filters.\r\n\r\nThe changes are behind a feature flag.\r\n\r\nI ran Accessibility FastPass, and it didn't throw up any issues. I also checked color contrast for the new UI elements.\r\n\r\n**NOTE:** I made an additional bug fix for the TFM badges in this PR. The TFM badges link to the frameworks tab on the package details page, but we weren't providing a package version, so the links sometimes took us to the wrong version's page. I've now fixed that.\r\n\r\n### Screenshots\r\n\r\n**TODO**\r\n\r\n<details><summary>You can now enter a list of packages you want to transfer popularity from, and a list of packages you want to transfer to. </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/4c162811-b05c-4460-9517-9351f5f52ae8)\r\n</details> \r\n\r\n<details><summary>It then validates your input. </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/265a5abb-3199-4e48-9005-ea26e7e660df)\r\n</details> \r\n\r\n<details><summary>Submitting your changes updates the DB with new entries in the PackageRenames table.</summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/adcaf6c3-35ff-4788-95a3-75e84a443df2)\r\n\r\nYou can see the new Serilog (Key = 11) --> Moq (Key = 9) entry\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/6a315e46-0686-4776-be62-56fefa752dee)\r\n</details> \r\n\r\n<details><summary>Error Handling</summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/5d5dc90a-b10f-4884-80f0-a51795ef7a83)\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/dea204c9-20bc-44c1-8691-7438c1c4418a)\r\n</details> \r\n\r\n<details><summary>Checking for existing popularity transfers</summary>\r\n\r\n**NOTE:** Our current playbook asks us to delete any existing popularity transfers for the 'From' packages, so the popularity transfer operation deletes previous entries from the DB. Let me know if this doesn't sound right, or we want to give the DRIs more information/options on what to do with existing popularity transfers. Currently, we just show a warning when we validate the input, and then if a user submits the changes, then we remove all previous entries.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/c9130282-d647-40e1-93fd-20139771e7c7)\r\n\r\nWe also show a warning if one of the 'To' packages has existing renames, as this would result in a transitive popularity transfer relationship (a -> b -> c). The DRI can then look at the table in the DB to see if they still want to proceed.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/a126aa44-0d18-46dc-bfea-70de63af78fb)\r\n\r\n</details> \r\n\r\n<details><summary>Multiple packages at once</summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/fd73204e-b628-4dc3-a0c0-59a8cfc0f51b)\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/48ceb4d5-6c8a-4965-b010-aa0b95111466)\r\n</details> \r\n\r\n\r\n"},{"Id":"34916529820","Type":"PullRequestEvent","CreatedAt":"2024-01-18T04:36:22","Actor":"v-ayushchat","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9774","RelatedDescription":"Merged pull request \"[ReleasePrep][2024.01.09]RI of dev into main for NuGetGallery\" (#9774) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"34874229177","Type":"PullRequestEvent","CreatedAt":"2024-01-16T20:17:17","Actor":"dependabot[bot]","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9781","RelatedDescription":"Opened pull request \"Bump System.Data.SqlClient from 4.8.5 to 4.8.6 in /src/NuGet.Services.Entities\" (#9781) at NuGet/NuGetGallery","RelatedBody":"Bumps [System.Data.SqlClient](https://github.com/dotnet/corefx) from 4.8.5 to 4.8.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/corefx/releases\">System.Data.SqlClient's releases</a>.</em></p>\n<blockquote>\n<h2>.NET Core 2.1.0 RC1</h2>\n<ul>\n<li><a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1.md\">Release Notes</a></li>\n<li><a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1-known-issues.md\">Known Issues</a></li>\n<li><a href=\"https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.1.0-rc1-download.md\">Download and Install</a></li>\n</ul>\n<h2>Repos</h2>\n<ul>\n<li><a href=\"https://github.com/dotnet/coreclr/releases/tag/v2.1-rc1\">CoreCLR</a></li>\n<li><a href=\"https://github.com/dotnet/corefx/releases/tag/v2.1-rc1\">CoreFX</a></li>\n<li><a href=\"https://github.com/dotnet/core-setup/releases/tag/v2.1-rc1\">Core-Setup</a></li>\n<li><a href=\"https://github.com/dotnet/cli/releases/tag/v2.1.300-rc1-008673\">CLI</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/corefx/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=System.Data.SqlClient&package-manager=nuget&previous-version=4.8.5&new-version=4.8.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"},{"Id":"34873453757","Type":"IssuesEvent","CreatedAt":"2024-01-16T19:45:57","Actor":"bradwilson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9780","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Package counter-signature uses incorrect time (time zone bug?)\" (#9780) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nWhile [investigating some packaging related issues](https://github.com/xunit/visualstudio.xunit/issues/399#issuecomment-1894364237), I discovered that NuGet has what appears to be a time zone related bug with the counter-signing process. The updated signature appears to be in the past.\r\n\r\nHere is the date/time of the .signature.p7s file in a NuGet package that I uploaded:\r\n\r\n```\r\n2023-12-22 23:30:14   11832   .signature.p7s\r\n```\r\n\r\nAnd here is the date/time of the .signature.p7s file in the version NuGet offers for download:\r\n\r\n```\r\n2023-12-22 15:38:00   23226   .signature.p7s\r\n```\r\n\r\nI'm not aware of any impact this has other than correctness (i.e., I am unaware of this causing any problems with the NuGet client), thus I marked the Impact as \"Other\".\n\n### Repro Steps\n\n1. Create a NuGet package that is signed\r\n2. Upload it to NuGet\r\n3. Download the resulting package from NuGet\r\n4. Compare the signed times\r\n\r\nFor my package in question, here are my two versions:\r\n\r\n* CI: https://github.com/xunit/visualstudio.xunit/actions/runs/7304662352/artifacts/1132054904 (it's embedded inside the ZIP file)\r\n* NuGet: https://www.nuget.org/api/v2/package/xunit.runner.visualstudio/2.5.6\n\n### Expected Behavior\n\nDate/time should be correct.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34873208159","Type":"IssuesEvent","CreatedAt":"2024-01-16T19:35:39","Actor":"bradwilson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9780","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Package counter-signature uses incorrect time (time zone bug?)\" (#9780) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nWhile [investigating some packaging related issues](https://github.com/xunit/visualstudio.xunit/issues/399#issuecomment-1894364237), I discovered that NuGet has what appears to be a time zone related bug with the counter-signing process. The updated signature appears to be in the past.\r\n\r\nHere is the date/time of the .signature.p7s file in a NuGet package that I uploaded:\r\n\r\n```\r\n2023-12-22 23:30:14   11832   .signature.p7s\r\n```\r\n\r\nAnd here is the date/time of the .signature.p7s file in the version NuGet offers for download:\r\n\r\n```\r\n2023-12-22 15:38:00   23226   .signature.p7s\r\n```\r\n\r\nI'm not aware of any impact this has other than correctness (i.e., I am unaware of this causing any problems with the NuGet client), thus I marked the Impact as \"Other\".\n\n### Repro Steps\n\n1. Create a NuGet package that is signed\r\n2. Upload it to NuGet\r\n3. Download the resulting package from NuGet\r\n4. Compare the signed times\r\n\r\nFor my package in question, here are my two versions:\r\n\r\n* CI: https://github.com/xunit/visualstudio.xunit/actions/runs/7304662352/artifacts/1132054904 (it's embedded inside the ZIP file)\r\n* NuGet: https://www.nuget.org/api/v2/package/xunit.runner.visualstudio/2.5.6\n\n### Expected Behavior\n\nDate/time should be correct.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34871775751","Type":"IssuesEvent","CreatedAt":"2024-01-16T18:53:09","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9779","RelatedDescription":"Opened issue \"[Feature]: Support RSS feed at the status page.\" (#9779) at NuGet/NuGetGallery","RelatedBody":"It will help if NuGet.org provides RSS feed at https://status.nuget.org/, so customers can subscribe to the feed and know the status update in time."},{"Id":"34870980980","Type":"IssuesEvent","CreatedAt":"2024-01-16T18:04:02","Actor":"beeme1mr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9778","RelatedDescription":"Opened issue \"[Feature]: All images from bestpractices.dev\" (#9778) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nOpenSSF is a way to show that a repo is following open source best practices. It's used by many open source projects including those owned by the CNCF and Linux Foundation.\r\n\r\nhttps://www.bestpractices.dev/en\n\n### Additional Context and Details\n\n_No response_"},{"Id":"34836184000","Type":"IssuesEvent","CreatedAt":"2024-01-15T15:44:19","Actor":"dbuenor","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9777","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Unable to upload package\" (#9777) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nHi, i'm trying to upload package using \"Upload\" button at https://www.nuget.org/packages/upload, but i'm receiving \"The package ID 'PackageName' is not available.\".\r\nI checked package name and is \"supposed\" to be not registered previously but is not letting me register anyways. Is a modification/version for an existing library registered previously on NuGet, but prefix is not registered (it hasn't have blue check)\r\n\r\nCan you help me to check if is registered or not?\r\n\r\nMy library name was: \"EasyNetQ.Legacy.NetStandard\"\r\n\r\nand former/based library is \"EasyNetQ\" (https://www.nuget.org/packages/EasyNetQ/8.0.0-beta95)\n\n### Repro Steps\n\nTry to upload new package called \"EasyNetQ.Legacy.NetStandard\"\n\n### Expected Behavior\n\nI expect nuget to let me upload my new package because is supposed to be \"free\".\n\n### Screenshots\n\n![Capture](https://github.com/NuGet/NuGetGallery/assets/16104257/fd5176ba-2f08-4c3a-b19c-f09a3915712b)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34766390886","Type":"IssuesEvent","CreatedAt":"2024-01-12T02:54:00","Actor":"hach-que","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9776","RelatedDescription":"Opened issue \"[Feature]: Provide an API reference explorer for packages using the generated .xml files inside a package\" (#9776) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nHaving README.md files within packages is great, and helps provide an introduction on how to use a package. But for more complex packages, and packages where they're already extensively documented through the `/// <summary>` syntax in C#, it'd be great if NuGet could provide an \"Explore API\" or \"API Reference\" tab which lists all of the types and methods along with their summaries and parameters, based on all of the `.xml` files within the package. This would mean that package developers don't have to duplicate reference material into the README.md, when it's already present in the package.\r\n\r\nAn extra bonus would be some sort of link syntax in the `README.md` that can link to types and methods in the API Reference tab, like `[ISomeInterface](#api-explorer-ISomeInterface)`.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"34752483933","Type":"IssuesEvent","CreatedAt":"2024-01-11T15:42:54","Actor":"omer-agranov","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9775","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Face 504/502 errors while Restore Packages on AWS eu-centasl-1 region\" (#9775) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nwhile using dotnet cli restore we started to get 502 and 504 errors from Nuget \r\n\r\nfor test we run curl with this url: https://api.nuget.org/v3-flatcontainer/awssdk.core/index.json\r\n\r\nwe run it from a machines in aws eu-central-1a and eu-cenbtral-1b and fails most of the times (not always)\r\non eu-central-1c it worked every time we run the command\r\n\r\nwhen we test it using curl command and it fails, instead of results we get the following message:\r\n\r\n\r\n`<body>\r\n    <div id='content'>\r\n        <div id='message'>\r\n            <h2>Our services aren't available right now</h2>\r\n            <p>We're working to restore all services as soon as possible. Please check back soon.</p>\r\n        </div>\r\n        <div id='errorref'>\r\n            <span>20240111T122751Z-dp7f50w70h3shb2hut61khm0p400000003e000000000x5q3            </span>\r\n        </div>\r\n    </div>\r\n</body>`\r\n\r\n\r\n\r\n\r\n### Repro Steps\r\n\r\ncurl https://api.nuget.org/v3-flatcontainer/awssdk.core/index.json from AWS in regions eu-central-1a and eu-central-1b\r\n\r\nrepeat the same for region eu-centeral-1c and it works\r\n\r\n### Expected Behavior\r\n\r\nshould work on every region\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34946786118","Type":"IssuesEvent","CreatedAt":"2024-01-19T01:10:11","Actor":"jaz2038","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13171","RelatedDescription":"Opened issue \"NuGet Package can't find \"latest\" version of Azure.AI.OpenAI\" (#13171) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.net SDK 7.0.* and .net SDK 8.0.*\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nSince 1.0.0-beta.12 is the latest version of Azure.AI.OpenAI, I would expect nothing to come back from :\r\n\r\ndotnet list package --outdated\r\n\r\nfor this package.\r\n\r\nActual behavior:\r\n\r\nProject `xxx` has the following updates to its packages\r\n   [net7.0]: \r\n   Top-level Package      Requested      Resolved       Latest                  \r\n   > Azure.AI.OpenAI      1.0.0-beta.12   1.0.0-beta.12   Not found at the sources\r\n\r\nReproduction Steps:\r\n\r\non macOS (I'm running 14.2.1) create a sample project with the Azure.AI.OpenAI project reference above:\r\n\r\nand then run:\r\n\r\ndotnet list package --outdated\r\n\r\nEnvironment\r\n\r\nall MacOS command line, tried with 7.x .net sdk's, most recently tried with latest 8.x .net sdk:\r\n\r\ndotnet --info\r\n.NET SDK:\r\nVersion: 8.0.100-rc.2.23502.2\r\nCommit: 0abacfc2b6\r\n\r\nRuntime Environment:\r\nOS Name: Mac OS X\r\nOS Version: 14.1\r\nOS Platform: Darwin\r\nRID: osx-arm64\r\nBase Path: /usr/local/share/dotnet/sdk/8.0.100-rc.2.23502.2/\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\nVersion: 8.0.0-rc.2.23479.6\r\nArchitecture: arm64\r\nCommit: 0b25e38ad3\r\n\r\n.NET SDKs installed:\r\n7.0.100-rc.2.22477.23 [/usr/local/share/dotnet/sdk]\r\n7.0.100 [/usr/local/share/dotnet/sdk]\r\n7.0.101 [/usr/local/share/dotnet/sdk]\r\n7.0.102 [/usr/local/share/dotnet/sdk]\r\n7.0.200 [/usr/local/share/dotnet/sdk]\r\n7.0.201 [/usr/local/share/dotnet/sdk]\r\n7.0.202 [/usr/local/share/dotnet/sdk]\r\n7.0.203 [/usr/local/share/dotnet/sdk]\r\n7.0.302 [/usr/local/share/dotnet/sdk]\r\n7.0.304 [/usr/local/share/dotnet/sdk]\r\n7.0.305 [/usr/local/share/dotnet/sdk]\r\n7.0.306 [/usr/local/share/dotnet/sdk]\r\n7.0.400 [/usr/local/share/dotnet/sdk]\r\n7.0.401 [/usr/local/share/dotnet/sdk]\r\n7.0.402 [/usr/local/share/dotnet/sdk]\r\n7.0.403 [/usr/local/share/dotnet/sdk]\r\n8.0.100-rc.2.23502.2 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.App 7.0.0-rc.2.22476.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.10 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 8.0.0-rc.2.23480.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 7.0.0-rc.2.22472.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.8 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.10 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 8.0.0-rc.2.23479.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nOther architectures found:\r\nx64 [/usr/local/share/dotnet/x64]\r\nregistered at [/etc/dotnet/install_location_x64]\r\n\r\nEnvironment variables:\r\nNot set\r\n\r\nglobal.json file:\r\nNot found\r\n\r\nLearn more:\r\nhttps://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\nhttps://aka.ms/dotnet/download\r\n\r\nNOTE: dotnet team punted the issue from their repo and determined it was a nuget issue - seems macOS specific: https://github.com/dotnet/sdk/issues/36637\n\n### Verbose Logs\n\n_No response_"},{"Id":"34946625355","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:59:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13170","RelatedDescription":"Opened issue \"packages.config lock files properties are not considered in Visual Studio\" (#13170) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.8\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n* In packages.config lock file restore, it is expected that the properties are considered, but unfortunately there's bugs in there: \r\n\r\nThe properties in question are: \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/1870d8c7b326de0ae23a0ebb15a147ce718de2fc/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreJob.cs#L722-L725\r\n\r\n\r\n- NuGetLockFilePath - Not preloaded, thus never read from the project file. Normally they're preloaded here: https://github.com/NuGet/NuGet.Client/blob/1870d8c7b326de0ae23a0ebb15a147ce718de2fc/src/NuGet.Core/NuGet.PackageManagement/Projects/MSBuildNuGetProject.cs#L106-L109\r\n- RestorePackagesWithLockFile - Not preloaded, thus never read from the project file. Normally they're preloaded here: https://github.com/NuGet/NuGet.Client/blob/1870d8c7b326de0ae23a0ebb15a147ce718de2fc/src/NuGet.Core/NuGet.PackageManagement/Projects/MSBuildNuGetProject.cs#L106-L109\r\n- TargetFramework - Works correctly\r\n- LockedMode -  Not preloaded, thus never read from the project file. Normally they're preloaded here: https://github.com/NuGet/NuGet.Client/blob/1870d8c7b326de0ae23a0ebb15a147ce718de2fc/src/NuGet.Core/NuGet.PackageManagement/Projects/MSBuildNuGetProject.cs#L106-L109. Notable that this is also the wrong property. The property name is RestoreLockedMode. https://github.com/NuGet/NuGet.Client/blob/1870d8c7b326de0ae23a0ebb15a147ce718de2fc/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets\n\n### Verbose Logs\n\n_No response_"},{"Id":"34946542802","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:52","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9687","RelatedDescription":"Closed issue \"NuGet.exe cred providers should run well when CannotShowDialog is true\" (#9687) at NuGet/Home","RelatedBody":"```\r\nif ($env:NUGET_CANNOT_SHOW_DIALOG == \"true\" || $env:CODESPACES == \"true\")\r\n   create PluginCredentialProvider with canShowDialog: false\r\n```\r\n\r\nAlthough our CLIs have interactive switches, sometimes we want an authprovider to be interactive, but not to show a dialog for collection of credentials."},{"Id":"34946541944","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:49","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10144","RelatedDescription":"Closed issue \"[Nexus] Packages.Config projects don't work in Codespaces yet (C++ and more) - investigate\" (#10144) at NuGet/Home","RelatedBody":"From: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1192931\r\n\r\nFrom C++ team: Currently and for 16.9 both CMake and vcxproj for console/library applications are supported in Windows Codespaces"},{"Id":"34946541060","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:45","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10227","RelatedDescription":"Closed issue \"Error List:  spec migratation from ITableManager API's to new Nexus service\" (#10227) at NuGet/Home","RelatedBody":"In order to fix https://github.com/NuGet/Home/issues/10140, NuGet needs to migrate from older ITableManager API's to a newer Nexus-ready service.\r\n\r\nThis is a prerequisite for https://github.com/NuGet/Home/issues/10140."},{"Id":"34946539964","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:41","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10538","RelatedDescription":"Closed issue \"Codespaces - Allow format selection on first package install option in VS\" (#10538) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 16.10.P1\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n- Connected to a repo using Codespaces\r\n- Navigate to Tools -> Options -> NuGet Package Manager -> General\r\n- Do we need `Allow format selection on first package install option` and `Default package management format` options, if only sdk style projects are supported?\r\n![image](https://user-images.githubusercontent.com/52756182/106956804-fcd38380-66eb-11eb-8760-2e411e478b75.png)\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"34946538982","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:37","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10539","RelatedDescription":"Closed issue \"Downgrading then Updating to the original Package Version fails in CodeSpaces\" (#10539) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 16.9 preview 4\r\n\r\nWorked before? If so, with which NuGet version: Standalone VS\r\n\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\nSeems like an assets file/timing bug with CodeSpace server...\r\n\r\n1. Open PMUI for your .NET Core project.\r\n2. Install a package (I used Castle.Core) to latest.\r\n3. Downgrade the package.\r\n4. Immediately Upgrade the package to latest again.\r\n5. Observe a Restore error claiming the assets file did not change.\r\nStandalone VS does not have this problem.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/106956904-4b414c00-6705-11eb-8db6-84403980ad30.png)\r\n\r\n6. After some time (seconds? minutes?), press Update and it works as expected.\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"34946537917","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:32","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10544","RelatedDescription":"Closed issue \"Manage NuGet Packages should not be shown for Unloaded Projects in CodeSpaces\" (#10544) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version:  16.9p4\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n1. Open a solution in CodeSpaces.\r\n2. Unload a project.\r\n3. Right click the project in Solution Explorer\r\n4. Observe \"Manage NuGet Packages\" is shown. It shouldn't be shown, as it doesn't work, and is not shown in Standalone.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/106965281-631ecd00-6711-11eb-8c61-dd6a46909314.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"34946536971","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10545","RelatedDescription":"Closed issue \"Error List is not cleared of package install errors in CodeSpaces after doing another install / uninstall action\" (#10545) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 16.10 Preview 1\r\n\r\nWorked before? If so, with which NuGet version: In local scenarios it works\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Open PMUI\r\n2. Click on Browse Tab\r\n3. Search for System.Linq.Expressions and install version 4.0.0\r\n4. Search for Moq install version 4.16.0\r\n5. An expected error will occur and be shown in the Error List: \"Detected package downgrade: System.Linq.Expressions from 4.3.0 to 4.0.0. Reference the package directly from the project to select a different version.\"\r\n6. Now, uninstall System.Linq.Expressions or do any other install / uninstall action that does not result in an error.\r\n\r\nExpected:\r\nThe error messages should be cleared from the Error List.\r\n\r\nActual:\r\nThe error messages from the failed operation of trying to install Moq after installing an older version of System.Linq.Expressions than what Moq requires persist in the Error List and in every action taken, they show up again which creates confusion, giving the impression that the errors occurred again.\r\n\r\nThis works in a non-Codespaces scenario\r\n\r\n![image](https://user-images.githubusercontent.com/10777837/106968652-1f6e9800-66fe-11eb-9648-45150ab7a813.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n\r\n"},{"Id":"34946535944","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:23","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10547","RelatedDescription":"Closed issue \"Transitive NuGet packages are not being shown in Solution Explorer when connect to a VS CodeSpace\" (#10547) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version:  16.9 preview 4\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n**Visual Studio Version**: **16.9.0 Preview 4.0 [31004.17.d16.9]**\r\n\r\n**Summary**:\r\n\r\nFiled a Project System bug (https://github.com/dotnet/project-system/issues/6922) which was closed as it is blocked by an API that is not yet supported in CodeSpaces: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1135451\r\nTransitive NuGet packages are not being shown in Solution Explorer when connect to a VS CodeSpace.\r\n\r\nChecked `project.assets.json` and found the dependency was written as expected:\r\n> \"MicroBuild.Plugins.SwixBuild/1.0.147\": {\r\n>         \"type\": \"package\",\r\n>         \"dependencies\": {\r\n>           \"MicroBuild.Core.Sentinel\": \"1.0.0\"\r\n>         },\r\n>         \"compile\": {\r\n>           \"lib/net461/_._\": {}\r\n>         },\r\n>         \"runtime\": {\r\n>           \"lib/net461/_._\": {}\r\n>         },\r\n>         \"build\": {\r\n>           \"build/_._\": {}\r\n>         }\r\n>       },\r\n> \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Connect VS to a local CodeSpace server.\r\n\r\n2. Open a project with NuGet packages containing transitive dependencies. Eg, `Microsoft.VisualStudio.ProjectSystem.Managed`.\r\n\r\n3. Observe that Package nodes cannot be expanded to see their transitive packages.\r\n\r\n**Expected Behavior**:\r\n![image](https://user-images.githubusercontent.com/49205731/106971111-3b813200-671c-11eb-9689-c9e5992491d5.png)\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/49205731/106971138-489e2100-671c-11eb-8655-90c5bc2b06e1.png)\r\n\r\n\r\n**User Impact**:\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"34946534627","Type":"IssuesEvent","CreatedAt":"2024-01-19T00:53:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10550","RelatedDescription":"Closed issue \"Clear All NuGet Cache(s) cannot find the NuGetScratch folder in CodeSpaces\" (#10550) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n \r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: 16.9p4\r\n\r\nWorked before? If so, with which NuGet version: Standalone\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n1. Open a Solution and perform actions to populate NuGet cache.\r\n2. Open PMUI, open `Settings -> General`, and press `Clear All NuGet Cache(s)`.\r\n3. Observe an error about a `NuGetScratch` folder not existing.\r\n![image](https://user-images.githubusercontent.com/49205731/107082274-f283b900-67c1-11eb-90d1-b7eea453f417.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-19T03:30:19.4419038Z","RunDurationInMilliseconds":1098}