{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12409138299","Type":"PullRequestEvent","CreatedAt":"2020-05-22T01:59:04","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8009","RelatedDescription":"Opened pull request \"Fixed casing of header on NuGet.org to comply with Windows/VS standards.\" (#8009) at NuGet/NuGetGallery","RelatedBody":"\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8008"},{"Id":"12409133950","Type":"IssuesEvent","CreatedAt":"2020-05-22T01:58:11","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8008","RelatedDescription":"Opened issue \"Fixed casing of header on NuGet.org to comply with Windows/VS standards.\" (#8008) at NuGet/NuGetGallery","RelatedBody":"Fixed casing of header on NuGet.org to comply with Windows/VS standards."},{"Id":"12408995298","Type":"PullRequestEvent","CreatedAt":"2020-05-22T01:30:08","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8007","RelatedDescription":"Closed pull request \"Fix NuGet.org headers (remove title-casing) to be consistent with Windows/VS standards\" (#8007) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12408928636","Type":"PullRequestEvent","CreatedAt":"2020-05-22T01:16:11","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8007","RelatedDescription":"Opened pull request \"Fix NuGet.org headers (remove title-casing) to be consistent with Windows/VS standards\" (#8007) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12408690100","Type":"IssuesEvent","CreatedAt":"2020-05-22T00:26:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8006","RelatedDescription":"Opened issue \"Document search service\" (#8006) at NuGet/NuGetGallery","RelatedBody":"The goal is a document (ideally Markdown README by the project) that explains in detail how someone can start the service and run it for development purposes."},{"Id":"12408470186","Type":"IssuesEvent","CreatedAt":"2020-05-21T23:44:24","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8005","RelatedDescription":"Opened issue \"Document search jobs \" (#8005) at NuGet/NuGetGallery","RelatedBody":"`db2auxiliarysearch`, `auxiliary2azuresearch`, `catalog2azuresearch`"},{"Id":"12408168950","Type":"IssuesEvent","CreatedAt":"2020-05-21T22:49:43","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3626","RelatedDescription":"Closed issue \"[Statistics] Reduce DB size by removing unused data - Platform dimension \" (#3626) at NuGet/NuGetGallery","RelatedBody":"This data is not used in any functionality today. We only track it because we have the data available at w3c-log parsing time. *It is questionable in terms of cost-effectiveness.*\r\n\r\nWe could still store it elsewhere (e.g. in Azure table storage). Or we could reconsider storing this data when revisiting the design of the NuGet statistics feature.\r\n\r\n> **Note**\r\n> \r\n> Even when we no longer import these datapoints into the stats database, we still have all the data in the w3c-logs we upload to blob storage.\r\n\r\n### Impact on database\r\n\r\nA database size reduction could be achieved totalling **5,172.03 MB** (or 5.05 GB)!\r\n\r\nRemoving these indices will also improve performance of insert/delete operations against the `[dbo].[Fact_Download]` and `[dbo].[Fact_Dist_Download]` tables.\r\n\r\nIn addition, we generate less churn on the data by avoiding clean-up operations.\r\n\r\nThe following database objects would become obsolete:\r\n\r\n* Table `[dbo].[Dimension_Platform]` (size = 0.39 MB)\r\n* Table column `[dbo].[Fact_Download].[Dimension_Platform_Id]` (size = 2,585.75 MB)\r\n* Table column `[dbo].[Fact_Dist_Download].[Dimension_Platform_Id]` (size = 2,585.75 MB)\r\n* Stored procedure `[dbo].[EnsurePlatformDimensionExists]`\r\n* Stored procedure `[dbo].[CleanupPlatformDimension]`\r\n* SQL Type `[dbo].[PlatformDimensionTableType]`\r\n* Clustered index `[dbo].[Dimension_Platform].[PK_Dimension_Platform]` (size = 56 KB)\r\n* Non-clustered index `[dbo].[Dimension_Platform].[IX_Dimension_Platform_UniqueIndex]` (size = 88 KB)\r\n\r\n### Impact on jobs\r\n\r\nThe `Stats.ImportAzureCdnStatistics` job would no longer need to store the Platform dimension data, which would improve import speed, throughput, and overall performance of the job.\r\n\r\nWe could:\r\n\r\n* avoid the need to check whether an Platform already exists, and if not, create it during import;\r\n* avoid the need to retain already imported Platform dimensions into in-memory cache;\r\n* reduce complexity of import by no more linking Platform dimension identifiers to the download facts."},{"Id":"12407022851","Type":"IssuesEvent","CreatedAt":"2020-05-21T20:16:07","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7900","RelatedDescription":"Closed issue \"[Package Renames] Add new schema\" (#7900) at NuGet/NuGetGallery","RelatedBody":"Add the `PackageRenames` table to the database:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nKey | Int | Primary key   (autogenerated by DB)\r\nFromPackageRegistrationKey | int | The package that   was renamed. There is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nToPackageRegistrationKey | int | The replacement   package. here is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nTransferPopularity | bool | True if the   \"from\" package's popularity should be transferred to the   replacement package.     This column is indexed.\r\n\r\nWe will also add the following column to `PackageRegistrations` table:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nRenamedMessage | String,   nvarchar(max), nullable | The custom message   for renamed packages\r\n\r\n\r\n"},{"Id":"12399120211","Type":"PullRequestEvent","CreatedAt":"2020-05-21T04:07:05","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8004","RelatedDescription":"Opened pull request \"UI fix for long username in profile page and display package(#7809)\" (#8004) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Fix the long username in profile page with newline if there is not enough space\r\n![newline](https://user-images.githubusercontent.com/64443925/82522150-64558e80-9add-11ea-88c1-e61d56d4cbb9.PNG)\r\n\r\n* Fix the long username in display package, use ... if context has overflow, show full username when hover it\r\n![fix1](https://user-images.githubusercontent.com/64443925/82522279-c7dfbc00-9add-11ea-810e-9b3cb3c056e0.PNG)\r\n\r\n\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"12397900373","Type":"IssuesEvent","CreatedAt":"2020-05-21T00:06:49","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7966","RelatedDescription":"Closed issue \"[Package Renames] Monitor search's feature flag staleness\" (#7966) at NuGet/NuGetGallery","RelatedBody":"The package renames feature uses feature flags in the search jobs. The jobs' feature flag staleness should be monitored. This work is blocked until the search jobs have been deployed.\r\n\r\nPart of https://github.com/NuGet/NuGetGallery/issues/7896\r\n\r\nSearch's feature flag staleness monitoring should mirror validation's feature flag staleness monitoring:\r\n\r\n* [Validation feature flag metric](https://jarvis-west.dc.ad.msft.net/?page=settings&mode=mdm&tab=metrics&account=NuGetService&namespace=NuGetProdValidationAIImport&metric=FeatureFlagStalenessSeconds)\r\n* [Validation feature flag monitor](https://jarvis-west.dc.ad.msft.net/?page=settings&mode=mdm&tab=monitors&account=NuGetService&namespace=NuGetProdValidationAIImport&metric=FeatureFlagStalenessSeconds&monitor=FeatureFlagStaleness)"},{"Id":"12397681607","Type":"PullRequestEvent","CreatedAt":"2020-05-20T23:25:39","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8003","RelatedDescription":"Opened pull request \"[A11y]Fix input group read out from table to nothing.\" (#8003) at NuGet/NuGetGallery","RelatedBody":"Updates some css so the input row on upload page doesn't get read out as a table."},{"Id":"12396893991","Type":"IssuesEvent","CreatedAt":"2020-05-20T21:26:32","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8002","RelatedDescription":"Opened issue \"Add banner to announce TLS 1.2 enforcement\" (#8002) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12407627549","Type":"IssuesEvent","CreatedAt":"2020-05-21T21:28:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9595","RelatedDescription":"Opened issue \"Leak: PartCreationPolicy(CreationPolicy.NonShared) NuGet.SolutionRestoreManager.RestoreOperationLogger\" (#9595) at NuGet/Home","RelatedBody":"I loaded/unloaded a solution 777 times and  see almost 777 instances of “NuGet.SolutionRestoreManager.RestoreOperationLogger”\n\nSee: \n[1008657](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1008657)"},{"Id":"12406989355","Type":"IssuesEvent","CreatedAt":"2020-05-21T20:12:12","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9594","RelatedDescription":"Opened issue \"Allow logging ETW events without logging VS telemetry events.\" (#9594) at NuGet/Home","RelatedBody":""},{"Id":"12406965198","Type":"IssuesEvent","CreatedAt":"2020-05-21T20:09:13","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9593","RelatedDescription":"Opened issue \"Log IntervalTrackers as ETW events\" (#9593) at NuGet/Home","RelatedBody":""},{"Id":"12406820443","Type":"IssuesEvent","CreatedAt":"2020-05-21T19:52:02","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9579","RelatedDescription":"Closed issue \"Inconsistent Circular Reference\" (#9579) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWe're publishing .NET reference at [Microsoft docs](https://docs.microsoft.com/dotnet/api/), and a new package release (Microsoft.Bot.Builder.AI.Luis) is causing some issues with a circular dependency. The dependency graph doesn't seem to indicate that there's actually a circular dependency, at least with the individual project's package ... the dependency seems to occur with nuget's own packages: Nuget.Packaging/Nuget.Packaging.Core\r\n\r\nMore details below in the repro section.\r\n\r\n**NuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):**\r\nnuget.exe \r\n\r\n**NuGet version (x.x.x.xxx):**\r\nnuget v4.7.0.5148\r\n\r\n**OS version (i.e. win10 v1607 (14393.321)):**\r\nWin10 v2004 (19041.264) ... but this was also replicated on our CI agents, which would be running a different version of windows.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFor some examples:\r\n\r\nIf we run:\r\n\r\n    PS > & nuget.exe install Microsoft.Bot.Builder.AI.Luis -Version 4.9.1 -OutputDirectory \"c:\\temp\\nuget\" -Framework netstandard2.0\r\n\r\nWe get the following error\r\n\r\n```\r\nAttempting to gather dependency information for package 'Microsoft.Bot.Builder.AI.Luis.4.9.1' with respect to project 'c:\\temp\\nuget', targeting '.NETStandard,Version=v2.0'\r\nGathering dependency information took 2.82 sec\r\nAttempting to resolve dependencies for package 'Microsoft.Bot.Builder.AI.Luis.4.9.1' with DependencyBehavior 'Lowest'\r\nCircular dependency detected 'Microsoft.Bot.Builder.AI.Luis 4.9.1 => Microsoft.Bot.Builder.Dialogs.Declarative 4.9.1 => NuGet.Client 4.2.0 => NuGet.Packaging 4.7.0 => NuGet.Packaging.Core 5.0.0 => NuGet.Packaging 4.7.0'.\r\n```\r\n\r\nSo it seems to indicate that there's an issue with Nuget.Packaging 4.7.0, however if I install that directly, it works just fine:\r\n\r\n    PS > & nuget.exe install Nuget.Packaging -Version 4.7.0 -OutputDirectory \"c:\\temp\\nuget\" -Framework netstandard2.0\r\n\r\nSame with Nuget.Client ... it installs with no issues:\r\n\r\n    PS > & nuget.exe install Nuget.Client -Version 4.2.0 -OutputDirectory \"c:\\temp\\nuget\" -Framework netstandard2.0\r\n\r\nHere's where it gets a bit stranger ... if I install NuGet.Packaging.Core 5.0.0, it has a reference to Nuget.Packaging, but v5.0.0 (as opposed to the v4.7.0 that it shows in the circular dependency error). And if we install Nuget.Packaging 4.7.0, it instead installs Nuget.Packaging.Core 4.7.0!\r\n\r\nSo at this point, we're not sure if there's an issue in the way the actual project we're trying to deploy reference for is configured (Microsoft.Bot.Builder.AI.Luis), or if there's some bug in either the nuget packages or nuget itself :| any help would be greatly appreciated\r\n\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n[log.txt](https://github.com/NuGet/Home/files/4650755/log.txt)\r\n"},{"Id":"12406551319","Type":"IssuesEvent","CreatedAt":"2020-05-21T19:20:57","Actor":"linvi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9592","RelatedDescription":"Opened issue \"Nuget FrameworkReference not mactching schema\" (#9592) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe:\r\n\r\nNuGet version `5.5.0.6382` and `5.5.1.6542`:\r\n\r\ndotnet.exe --version (if appropriate): 3.1.201\r\n\r\nVS version (if appropriate): -\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): MacOS 10.15.4\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Add a `FrameworkReference` to a nuspec as per the [documentation](https://github.com/NuGet/Home/wiki/%5BSpec%5D-FrameworkReference-in-NuGet#frameworkreference-in-the-package)\r\n\r\n2. Run a `nuget pack`\r\n3. An error happens\r\n\r\n``` log\r\nAttempting to build package from 'xxx.nuspec'.\r\nThe element 'group' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'dependency' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'frameworkReference' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'dependency' element.\r\n```\r\n\r\nHere is the nuspec I use:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n    <metadata>\r\n        <id>somepackage</id>\r\n        <version>5.0.0-alpha-6</version>\r\n        <title>SomePacakge</title>\r\n        <authors>Linvi</authors>\r\n        <owners>Linvi</owners>        \r\n       <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n        <description>\r\n            Some description\r\n        </description>\r\n        <summary>Some summary</summary>\r\n        <releaseNotes>https://github.com/linvi/</releaseNotes>\r\n        <copyright>Some copyright</copyright>\r\n        <language>en-US</language>\r\n        <tags></tags>\r\n        <dependencies>\r\n            <group targetFramework=\"netstandard2.0\">\r\n                <dependency id=\"TweetinviAPI\" version=\"5.0.0-alpha-6\" />\r\n                <dependency id=\"Microsoft.AspNetCore.WebUtilities\" version=\"2.2.0\" />\r\n                <dependency id=\"System.Net.Http\" version=\"4.3.4\" />\r\n            </group>\r\n            <group targetFramework=\"netcoreapp2.1\">\r\n                <dependency id=\"TweetinviAPI\" version=\"5.0.0-alpha-6\" />\r\n                <dependency id=\"Microsoft.AspNetCore.Http\" version=\"2.1\" />\r\n                <dependency id=\"Microsoft.AspNetCore.Http.Abstractions\" version=\"2.1\" />\r\n                <dependency id=\"Microsoft.Extensions.Options\" version=\"2.1\" />\r\n            </group>\r\n            <group targetFramework=\"netcoreapp3.1\">\r\n                <dependency id=\"TweetinviAPI\" version=\"5.0.0-alpha-6\" />\r\n            </group>\r\n        </dependencies>\r\n        <frameworkReferences>\r\n            <group targetFramework=\"netcoreapp3.1\">\r\n                <dependency name=\"Microsoft.WindowsDesktop.App\"/>\r\n            </group>\r\n        </frameworkReferences>\r\n    </metadata>\r\n</package>\r\n```\r\n\r\nIssue comes from the `frameworkReference` section.\r\n\r\n### Verbose Logs\r\n\r\n``` log\r\nNuGet Version: 5.5.0.6382\r\nAttempting to build package from 'SomePackage.nuspec'.\r\nThe element 'group' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'dependency' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'frameworkReference' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'dependency' element.\r\nSystem.InvalidOperationException: The element 'group' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'dependency' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'frameworkReference' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'dependency' element.\r\n  at NuGet.Packaging.Manifest+<>c.<ValidateManifestSchema>b__20_0 (System.Object sender, System.Xml.Schema.ValidationEventArgs e) [0x0003b] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidationCallback (System.Object sender, System.Xml.Schema.ValidationEventArgs e) [0x00008] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.SendValidationEvent (System.Xml.Schema.ValidationEventHandler eventHandler, System.Object sender, System.Xml.Schema.XmlSchemaValidationException e, System.Xml.Schema.XmlSeverityType severity) [0x0000c] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.ElementValidationError (System.Xml.XmlQualifiedName name, System.Xml.Schema.ValidationState context, System.Xml.Schema.ValidationEventHandler eventHandler, System.Object sender, System.String sourceUri, System.Int32 lineNo, System.Int32 linePos, System.Xml.Schema.XmlSchemaSet schemaSet) [0x00195] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.ValidateElementContext (System.Xml.XmlQualifiedName elementName, System.Boolean& invalidElementInContext) [0x001b7] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.ValidateElement (System.String localName, System.String namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, System.String xsiType, System.String xsiNil, System.String xsiSchemaLocation, System.String xsiNoNamespaceSchemaLocation) [0x00044] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x0004b] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.Validate (System.Xml.Linq.XObject source, System.Xml.Schema.XmlSchemaObject partialValidationType, System.Boolean addSchemaInfo) [0x0012e] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.Extensions.Validate (System.Xml.Linq.XDocument source, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Boolean addSchemaInfo) [0x00023] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.Extensions.Validate (System.Xml.Linq.XDocument source, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler) [0x00000] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at NuGet.Packaging.Manifest.ValidateManifestSchema (System.Xml.Linq.XDocument document, System.String schemaNamespace) [0x00007] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.Manifest.ReadFrom (System.IO.Stream stream, System.Func`2[T,TResult] propertyProvider, System.Boolean validateSchema) [0x00097] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.PackageBuilder.ReadManifest (System.IO.Stream stream, System.String basePath, System.Func`2[T,TResult] propertyProvider) [0x00000] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.PackageBuilder..ctor (System.String path, System.String basePath, System.Func`2[T,TResult] propertyProvider, System.Boolean includeEmptyDirectories, System.Boolean deterministic) [0x00043] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.PackageBuilder..ctor (System.String path, System.Func`2[T,TResult] propertyProvider, System.Boolean includeEmptyDirectories, System.Boolean deterministic) [0x00008] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.CreatePackageBuilderFromNuspec (System.String path) [0x0010f] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.BuildFromNuspec (System.String path) [0x00000] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.BuildPackage (System.String path) [0x00016] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.BuildPackage () [0x00021] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.PackCommand.ExecuteCommand () [0x0026f] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.Command.ExecuteCommandAsync () [0x00000] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.Command.Execute () [0x000dd] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x001c1] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0\r\n```\r\n"},{"Id":"12405823974","Type":"IssuesEvent","CreatedAt":"2020-05-21T17:59:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9591","RelatedDescription":"Opened issue \"OutputConsoleLogger should not call affinitized methods in MEF constructors\" (#9591) at NuGet/Home","RelatedBody":"We should avoid affinitized methods in MEF https://github.com/NuGet/NuGet.Client/blob/85211a7bbf93939d713f52522d897fece2bec9d9/src/NuGet.Clients/NuGet.VisualStudio.Common/OutputConsoleLogger.cs#L61-L71\r\n\r\nSee: https://github.com/NuGet/NuGet.Client/pull/2540\r\n\r\nThe problem here is that we attach listeners in the initialization. . "},{"Id":"12404945084","Type":"IssuesEvent","CreatedAt":"2020-05-21T16:23:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9590","RelatedDescription":"Opened issue \"NuGet restore should log redirects\" (#9590) at NuGet/Home","RelatedBody":"To aid HTTP request error debugging, particularly for teams implementing the NuGet servers, it would be helpful to log the URL that generated the error, when the original request results in an HTTP redirect.\r\n\r\nCurrently:\r\n\r\n```\r\nUnauthorized https://api.server.test/v3/package/package_id/package_id.1.2.3.nupkg 0ms\r\n```\r\n\r\nProposed:\r\n```\r\nUnauthorized https://api.server.test/v3/package/package_id/package_id.1.2.3.nupkg -> https://blobs.server.test/package_id/package_id.1.2.3.nupkg 0ms\r\n```\r\n\r\nNotes:\r\n\r\nThis longer log line should not happen unless the final response URL is different to the original requested URL. This means that HTTP responses where there is no redirect should remain the same as today's log output.\r\n\r\nNuGet should remove secrets from the URL, where possible. If the URL contains HTTP Basic auth, in the form of `https://user:pass@server.test/`, the `user:pass` should be stripped from the log. Also consider masking query parameters (not removing, because it's important when debugging to know the parameter was there or not), such as `sig(nature)?$|tok(en)?$|ticket$|auth`"},{"Id":"12404822047","Type":"IssuesEvent","CreatedAt":"2020-05-21T16:10:57","Actor":"mirkomuggli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9586","RelatedDescription":"Closed issue \"PMUI tab title shows full project path in Codespaces\" (#9586) at NuGet/Home","RelatedBody":"## Details about Problem\n\nIn Codespaces, PMUI tab title shows whole project path instead of just the project name.\n\n\n## Detailed repro steps so we can see the same problem\n\n1. Run PMUI in Codespaces using dev-feature-OE.PMUI branch\n\n2. Open the PMUI tab from a project context menu\n\n3. See the tab title\n\n## Actual\nTab title shows: \"Nuget: [full project path]\"\n\n## Expected\nTab title shows: \"Nuget: [project name]\""},{"Id":"12404046940","Type":"IssuesEvent","CreatedAt":"2020-05-21T14:54:24","Actor":"dansiegel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9589","RelatedDescription":"Opened issue \"NuGet Authentication issues\" (#9589) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nI'm currently working on a private feed for my NuGet Sponsors. The feed is based on BaGet but adds some custom Authentication Handlers to support basic auth using their GitHub login and a generated token from the portal.\r\n\r\nSince it appears that the NuGet Client will always attempt an unauthenticated call first, unsuccessful calls get two response headers added:\r\n\r\n- `Www-Authenticate` -> `Basic`\r\n- `X-NuGet-Warning` -> Failed Reason\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. When connecting to the Package Source in Visual Studio, I get a prompt for a username and password and it seems to work.\r\n\r\n2. When I attempt to push to the package (from the CLI or Azure Pipelines) I get the error `ERROR: This version of nuget.exe does not support updating packages to package source`\r\n\r\n## Other suggested things\r\n\r\nAny suggestions on how to properly manage this would be greatly appreciated.\r\n\r\n### Verbose Logs\r\n\r\n[build-log](https://github.com/NuGet/Home/files/4662980/nugetpush.txt)\r\n\r\n\r\n"},{"Id":"12401526787","Type":"IssuesEvent","CreatedAt":"2020-05-21T10:02:50","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9588","RelatedDescription":"Opened issue \"[Test Failure] ‘An error occur while attempting to open NuGet’ appeared after reopening the solution in the Experimental instance\" (#9588) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.6.0.6489\r\nVS Version: D16.6\\29924.181\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Open Experimental VS Int Preview.\r\n2. Create a SDK project [e.g. Console App (.NET Core 3.1)].\r\n3. Open the solution/project PM UI.\r\n4. Close VS with the PM UI left open.\r\n5. Reopen Experimental VS and the same Solution.\r\n## Expected\r\n‘An error occur while attempting to open NuGet’ appeared as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/82548009-3596f100-9b8d-11ea-82fa-3b25df5394b7.png)\r\n## Note\r\n1. Not repro on 16.5 GA (D16.5\\29905.175)- implicit NuGet 5.5.0.6473.\r\n2. Not repro on 16.6 Preview5 (D16.6\\30028.174) – implicit NuGet 5.6.0.6591.\r\n3. Not repro on 16.7 Preview1 (D16.7\\30114.128) – implicit NuGet 5.7.0.6592."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"},{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-22T05:30:38.1871152Z","RunDurationInMilliseconds":2083}