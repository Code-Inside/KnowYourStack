{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34836184000","Type":"IssuesEvent","CreatedAt":"2024-01-15T15:44:19","Actor":"dbuenor","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9777","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Unable to upload package\" (#9777) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nHi, i'm trying to upload package using \"Upload\" button at https://www.nuget.org/packages/upload, but i'm receiving \"The package ID 'PackageName' is not available.\".\r\nI checked package name and is \"supposed\" to be not registered previously but is not letting me register anyways. Is a modification/version for an existing library registered previously on NuGet, but prefix is not registered (it hasn't have blue check)\r\n\r\nCan you help me to check if is registered or not?\r\n\r\nMy library name was: \"EasyNetQ.Legacy.NetStandard\"\r\n\r\nand former/based library is \"EasyNetQ\" (https://www.nuget.org/packages/EasyNetQ/8.0.0-beta95)\n\n### Repro Steps\n\nTry to upload new package called \"EasyNetQ.Legacy.NetStandard\"\n\n### Expected Behavior\n\nI expect nuget to let me upload my new package because is supposed to be \"free\".\n\n### Screenshots\n\n![Capture](https://github.com/NuGet/NuGetGallery/assets/16104257/fd5176ba-2f08-4c3a-b19c-f09a3915712b)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34766390886","Type":"IssuesEvent","CreatedAt":"2024-01-12T02:54:00","Actor":"hach-que","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9776","RelatedDescription":"Opened issue \"[Feature]: Provide an API reference explorer for packages using the generated .xml files inside a package\" (#9776) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nHaving README.md files within packages is great, and helps provide an introduction on how to use a package. But for more complex packages, and packages where they're already extensively documented through the `/// <summary>` syntax in C#, it'd be great if NuGet could provide an \"Explore API\" or \"API Reference\" tab which lists all of the types and methods along with their summaries and parameters, based on all of the `.xml` files within the package. This would mean that package developers don't have to duplicate reference material into the README.md, when it's already present in the package.\r\n\r\nAn extra bonus would be some sort of link syntax in the `README.md` that can link to types and methods in the API Reference tab, like `[ISomeInterface](#api-explorer-ISomeInterface)`.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"34752483933","Type":"IssuesEvent","CreatedAt":"2024-01-11T15:42:54","Actor":"omer-agranov","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9775","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Face 504/502 errors while Restore Packages on AWS eu-centasl-1 region\" (#9775) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nwhile using dotnet cli restore we started to get 502 and 504 errors from Nuget \r\n\r\nfor test we run curl with this url: https://api.nuget.org/v3-flatcontainer/awssdk.core/index.json\r\n\r\nwe run it from a machines in aws eu-central-1a and eu-cenbtral-1b and fails most of the times (not always)\r\non eu-central-1c it worked every time we run the command\r\n\r\nwhen we test it using curl command and it fails, instead of results we get the following message:\r\n\r\n\r\n`<body>\r\n    <div id='content'>\r\n        <div id='message'>\r\n            <h2>Our services aren't available right now</h2>\r\n            <p>We're working to restore all services as soon as possible. Please check back soon.</p>\r\n        </div>\r\n        <div id='errorref'>\r\n            <span>20240111T122751Z-dp7f50w70h3shb2hut61khm0p400000003e000000000x5q3            </span>\r\n        </div>\r\n    </div>\r\n</body>`\r\n\r\n\r\n\r\n\r\n### Repro Steps\r\n\r\ncurl https://api.nuget.org/v3-flatcontainer/awssdk.core/index.json from AWS in regions eu-central-1a and eu-central-1b\r\n\r\nrepeat the same for region eu-centeral-1c and it works\r\n\r\n### Expected Behavior\r\n\r\nshould work on every region\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"34746564707","Type":"IssuesEvent","CreatedAt":"2024-01-11T12:35:20","Actor":"omer-agranov","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9775","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Face with 504/502 error while Restore Packages on AWS eu-centasl-1 region\" (#9775) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nwhile using dotnet cli restore we started to get 502 and 504 errors from Nuget \r\n\r\nfor test we run curl with this url: https://api.nuget.org/v3-flatcontainer/awssdk.core/index.json\r\n\r\nwe run it from a machines in aws eu-central-1a and eu-cenbtral-1b and fails most of the times (not always)\r\non eu-central-1c it worked every time we run the command\r\n\r\nwhen we test it using curl command and it fails, instead of results we get the following message:\r\n\r\n<body>\r\n    <div id='content'>\r\n        <div id='message'>\r\n            <h2>Our services aren't available right now</h2>\r\n            <p>We're working to restore all services as soon as possible. Please check back soon.</p>\r\n        </div>\r\n        <div id='errorref'>\r\n            <span>20240111T122751Z-dp7f50w70h3shb2hut61khm0p400000003e000000000x5q3            </span>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n\r\n\n\n### Repro Steps\n\ncurl https://api.nuget.org/v3-flatcontainer/awssdk.core/index.json from AWS in regions eu-central-1a and eu-central-1b\r\n\r\nrepeat the same for region eu-centeral-1c and it works\n\n### Expected Behavior\n\nshould work on every region\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34845228092","Type":"PullRequestEvent","CreatedAt":"2024-01-15T23:44:15","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/pull/12918","RelatedDescription":null,"RelatedBody":"[rendered spec](https://github.com/NuGet/Home/blob/zivkan-vulnerabilitySource-spec/proposed/2023/NuGetAudit-without-nuget.org-as-packageSource.md)"},{"Id":"34824769428","Type":"IssuesEvent","CreatedAt":"2024-01-15T09:11:46","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13159","RelatedDescription":"Opened issue \"[Dotnet Package Search] The search result of dotnet package search command with option [--format table --source \"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\"] is incorrect\" (#13159) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 9.0.100-alpha.1.24062.11\n\n### Worked before?\n\nIt’s not a regression issue since it is a new feature.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:  \r\n1.Patch the latest .NET SDK version ([9.0.100-alpha.1.24062.11](https://github.com/dotnet/installer?tab=readme-ov-file#use-dotnet---help-to-see-available-commands-or-visit-httpsakamsdotnet-cli)) with NuGet Client [Pipelines - Run 6.9.0.86 artifacts (visualstudio.com)](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8897544&view=artifacts&pathAsName=false&type=publishedArtifacts). \r\n   1.1 Download the [Entropy](https://github.com/NuGet/Entropy.git) to the desktop of test machine.\r\n   1.2 Download and extract the NuGet Client build “[6.9.0.86](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8897544&view=artifacts&pathAsName=false&type=publishedArtifacts)->nupkgs - NonRTM” (named to “nupkgs”) to the desktop of test machine.\r\n   1.3 Update the $SDKChannel = \"LTS\" and $SDKVersion = \"9.0.100-alpha.1.24062.11\" in the “patchOnWindows.ps1” file of the downloaded “Entropy\\SDKPatchTool”.\r\n   1.4 Modify the $patchSDKFolder = \"C:\\Users\\[UserName]\\Desktop\\PatchedSDK\" and $nupkgsPath = \"C:\\Users\\v-luzh\\Desktop\\nupkgs\" (the path of downloaded nupkgs in step 1.2) in the “patchOnWindows.ps1” file of the downloaded “Entropy\\SDKPatchTool”.\r\n2. After patching finished, go to the patchedSDK folder and execute the command` .\\dotnet package search CSharp --format table --source \"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\" `in powershell.\r\n\r\n#### Expected Results:  \r\nThe result should be “No results found.” (as the result of similar command` .\\dotnet package search CSharp --exact-match --format table --source \"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\"` below).\r\n![image](https://github.com/NuGet/Home/assets/20632625/a4c3f6a5-8ac1-4fa2-81db-8ae84efde114)\r\n\r\n#### Actual Results:\r\nThe result is “warn: the path for the selected source could not be resolved” instead as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/9aad1580-c25a-42bd-ba05-c0415d2f6c21)\r\n\r\n#### Note:\r\nRepro rate: 100%\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"34824637783","Type":"IssuesEvent","CreatedAt":"2024-01-15T09:06:59","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13158","RelatedDescription":"Opened issue \"[Dotnet Package Search] The search result of the package should be “version” instead of “latestVersion” when executing command “dotnet package search <Package Name> --exact-match --format json”\" (#13158) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 9.0.100-alpha.1.24062.11\n\n### Worked before?\n\nIt’s not a regression issue since it is a new feature.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:  \r\n1.Patch the latest .NET SDK version ([9.0.100-alpha.1.24062.11](https://github.com/dotnet/installer?tab=readme-ov-file#use-dotnet---help-to-see-available-commands-or-visit-httpsakamsdotnet-cli)) with NuGet Client [Pipelines - Run 6.9.0.86 artifacts (visualstudio.com)](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8897544&view=artifacts&pathAsName=false&type=publishedArtifacts). \r\n   1.1 Download the [Entropy](https://github.com/NuGet/Entropy.git) to the desktop of test machine.\r\n   1.2 Download and extract the NuGet Client build “[6.9.0.86](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8897544&view=artifacts&pathAsName=false&type=publishedArtifacts)->nupkgs - NonRTM” (named to “nupkgs”) to the desktop of test machine.\r\n   1.3 Update the $SDKChannel = \"LTS\" and $SDKVersion = \"9.0.100-alpha.1.24062.11\" in the “patchOnWindows.ps1” file of the downloaded “Entropy\\SDKPatchTool”.\r\n   1.4 Modify the $patchSDKFolder = \"C:\\Users\\[UserName]\\Desktop\\PatchedSDK\" and $nupkgsPath = \"C:\\Users\\v-luzh\\Desktop\\nupkgs\" (the path of downloaded nupkgs in step 1.2) in the “patchOnWindows.ps1” file of the downloaded “Entropy\\SDKPatchTool”.\r\n2. After patching finished, go to the patchedSDK folder and execute the command .\\dotnet package search NUnit --exact-match --format json in powershell.\r\n\r\n#### Expected Results:  \r\nThe search result of the package should be “version” instead of “latestVersion” since one package only has one latest version. Like the result of the searching the same package with “--format table” by default as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/dd4211bb-ffc6-4b55-9111-8caaf9d1086b)\r\n\r\n#### Actual Results:\r\nThe search result of the package shows a lot of “latestVersion” which does not make sense as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/20632625/913aea90-1fdc-4063-88b7-cc8d48b36cf9)\r\n\r\n#### Note:\r\nRepro rate: 100%\n\n### Verbose Logs\n\n_No response_"},{"Id":"34816053252","Type":"PullRequestEvent","CreatedAt":"2024-01-15T00:00:31","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13024","RelatedDescription":"Closed pull request \"Technical explanation for `disableTLSCertificateValidation`\" (#13024) at NuGet/Home","RelatedBody":"Expands technical explanation for implementing a `disableTLSCertificateValidation` option which allows disabling TLS certificate validation."},{"Id":"34809352091","Type":"IssuesEvent","CreatedAt":"2024-01-14T11:27:11","Actor":"NRPhantom","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13157","RelatedDescription":"Opened issue \"I need help with Unity problem\" (#13157) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Other/NA\n\n### Product Version\n\n0.01\n\n### Worked before?\n\nno very old\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nYo Guys i have this problem and i need anyone to help me with this:\r\n![Untitl12314ed](https://github.com/NuGet/Home/assets/121626775/0752f61c-2e23-46c8-91ac-d64799017444)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"34803231370","Type":"IssuesEvent","CreatedAt":"2024-01-13T20:03:04","Actor":"JustinGrote","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13156","RelatedDescription":"Opened issue \"NuGetVersion produces incorrect System.Version if repeated zeroes are used\" (#13156) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuget.Versioning 6.8.0\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nUsing PowerShell but relevant in C# as well:\r\n```powershell\r\n([NuGet.Versioning.NuGetVersion]'1.2.0.1').IsLegacyVersion\r\nTrue #Correct\r\n\r\n([NuGet.Versioning.NuGetVersion]'1.2.0.0').IsLegacyVersion\r\nFalse #Should Be True\r\n\r\n([NuGet.Versioning.NuGetVersion]'1.2.0').Version.Revision\r\n0 #Should be -1\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"34796483801","Type":"PullRequestEvent","CreatedAt":"2024-01-13T06:00:32","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12918","RelatedDescription":"Closed pull request \"Spec: NuGetAudit without nuget.org as a package source\" (#12918) at NuGet/Home","RelatedBody":"[rendered spec](https://github.com/NuGet/Home/blob/zivkan-vulnerabilitySource-spec/proposed/2023/NuGetAudit-without-nuget.org-as-packageSource.md)"},{"Id":"34795058900","Type":"IssuesEvent","CreatedAt":"2024-01-13T02:38:42","Actor":"ztl8702","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13155","RelatedDescription":"Opened issue \"Wrong order of arguments in logs for centralized package version (string `Info_AddPkgCPM`)\" (#13155) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe\n\n### Product Version\n\nNuGet Command Line 6.8.0.122 (via dotnet CLI)\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nThe string template `Info_AddPkgCPM` in https://github.com/dotnet/dotnet/blob/002d01eeae9f40bc6d021971cac07501928de3fc/src/nuget-client/src/NuGet.Core/NuGet.CommandLine.XPlat/Strings.resx#L764-L767\r\n\r\nRenders to:\r\n```\r\ninfo : PackageReference for package 'NAudio' added to '/some-project/src/Directory.Packages.props' and PackageVersion added to central package management file '/some-project/src/Web/UiComponents/Zezo.UiComponents.csproj'.\r\n```\r\n\r\nshouldn't it instead be:\r\nRenders to:\r\n```\r\ninfo : PackageReference for package 'NAudio' added to '/some-project/src/Web/UiComponents/Zezo.UiComponents.csproj'  and PackageVersion added to central package management file '/some-project/src/Directory.Packages.props'.\r\n```\r\n\r\nThe arguments `{1}` and `{2}` should be swapped. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"34794183637","Type":"PullRequestEvent","CreatedAt":"2024-01-13T00:56:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13154","RelatedDescription":"Opened pull request \"Vulnerability checking in PC restore\" (#13154) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/12307"},{"Id":"34793849980","Type":"IssuesEvent","CreatedAt":"2024-01-13T00:26:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12501","RelatedDescription":"Reopened issue \"Swap authors for owners in Visual Studio Package Manager UI\" (#12501) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\r\n\r\nVisual Studio Package Management UI\r\n\r\n### The Elevator Pitch\r\n\r\nCurrently in the Visual Studio Package Manager UI, we show the `authors` field which is a comma delimited list that is commonly used to help a developer know who \"authored\" the package.\r\n\r\nThis concept is a bit outdated as NuGet.org provides a `owners` field in the search service that provides an **up-to-date maintainer list that can be used as a primary and if a server doesn't provide it, can fallback on `authors`**. This is not to be confused with the local [`owners` nuspec field](https://learn.microsoft.com/en-us/nuget/reference/nuspec#owners).\r\n\r\nhttps://learn.microsoft.com/en-us/nuget/api/search-query-service-resource#search-result\r\n\r\nSome further details as pointed out by @zivkan might be that we would only display owners for sources that support it and are fetched from the remote and ignore some nuspec metadata in the global packages folder. \r\n\r\nThis will help reduce confusion of a field that is commonly used to impersonate notable entities or have changed in ownership in the years since it was published where the original author is still listed.\r\n\r\n![MicrosoftTeams-image (3)](https://user-images.githubusercontent.com/1288848/226624059-925af6f6-1422-4b4e-a070-7bb8283163fe.png)\r\n\r\nRelated: https://github.com/NuGet/Home/issues/10260\r\n\r\n### Additional Context and Details\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-16T03:30:18.907109Z","RunDurationInMilliseconds":983}