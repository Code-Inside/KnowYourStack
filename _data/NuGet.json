{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20008578486","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:33:43","Actor":"chlafreniere","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8971","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Downloads for Latest Version of Package Incorrectly Shows as 0\" (#8971) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nMy team owns https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions.Sql/ and recently pushed a new version of this package to NuGet.org.\r\n\r\nSince then, download numbers on NuGet have stayed at 0 on this latest version (0.1.207-preview), but we know that customers are using this, as we have signals from elsewhere (even including GitHub issues) that show folks are trying this out.\r\n\r\nThis makes it harder for us to assess usage for this package, and we like to report on package download numbers.\n\n### Repro Steps\n\n1. On https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions.Sql/\r\n2. Downloads show as 0 for 0.1.207-preview\n\n### Expected Behavior\n\nDownloads do not show as 0.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/40371649/151888859-c8fa89df-33a2-47e9-9b1f-3a937b1d7cad.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20008516792","Type":"PullRequestEvent","CreatedAt":"2022-02-01T01:27:16","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8974","RelatedDescription":"Merged pull request \"Use table-responsive for sample glob descriptions.\" (#8974) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8919\r\nThis was being caused by a table in the API keys page being wider than the page when zoomed in.\r\nThis behaviour could also be replicated by making the window very narrow.\r\nUpdate this table to use BootStrap's table-responsive, which causes the table content to correctly collapse with page width."},{"Id":"20008363809","Type":"PullRequestEvent","CreatedAt":"2022-02-01T01:10:50","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8977","RelatedDescription":"Opened pull request \"Remove the original package details page\" (#8977) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8975"},{"Id":"20008225721","Type":"PullRequestEvent","CreatedAt":"2022-02-01T01:01:00","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8972","RelatedDescription":"Merged pull request \"[A11y]Update statistics chart to resize correctly.\" (#8972) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8920\r\nTurns out this was actually caused by a bug where the data being sent in on resize was actually a null object, which broke the graph for the rest of the session.\r\nThis update passes in the object that is attached to the window on page load instead and should prevent the graph data being lost."},{"Id":"20008013235","Type":"PullRequestEvent","CreatedAt":"2022-02-01T00:43:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8976","RelatedDescription":"Opened pull request \"Update to latest SharpZipLib to resolve CG alert\" (#8976) at NuGet/NuGetGallery","RelatedBody":"Verified locally. SharpZipLib is a dependency of the local, Lucene-based search indexing."},{"Id":"20007944847","Type":"IssuesEvent","CreatedAt":"2022-02-01T00:36:19","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8975","RelatedDescription":"Opened issue \"Remove original package details page\" (#8975) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nCurrently Gallery has two versions of the package details page due to a recent redesign. We maintain both versions currently.\n\n### The Elevator Pitch\n\n Now that we've shipped the redesign, we should drop the previous version.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20007890029","Type":"PullRequestEvent","CreatedAt":"2022-02-01T00:30:50","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8973","RelatedDescription":"Merged pull request \"Resolve Dependabot warnings about Bootstrap dependencies\" (#8973) at NuGet/NuGetGallery","RelatedBody":"This resolves the pending Dependabot alerts shown on GitHub.\r\n\r\nI made this against `main` so we can see the fix immediately. No runtime change verified by running `grunt`."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20008732877","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:52:22","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11439","RelatedDescription":"Closed issue \"dotnet list package outdated doesn't suggest stable version\" (#11439) at NuGet/Home","RelatedBody":"Create simple console app then add Serilog  2.10.0-dev-01245.\nWhen you do `dotnet list package outdated`, it should suggest \"2.10\" stable according to VS.\n\n```\n   [netcoreapp3.1]:\n   Top-level Package         Requested             Resolved              Latest\n   > Serilog                 2.10.0-dev-01245      2.10.0-dev-01245      2.11.0-dev-01377\n```\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/f683c112-174e-4c65-b7ad-3e11d344a561)\n\nOutput for `dotnet list package outdated --include-prerelease` is fine.\n\n```\n   [netcoreapp3.1]:\n   Top-level Package         Requested             Resolved              Latest\n   > Serilog                 2.10.0-dev-01245      2.10.0-dev-01245      2.11.0-dev-01377\n```"},{"Id":"20008715526","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:50:15","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11537","RelatedDescription":"Closed issue \"[Bug]: Versions dropdown default selection should be LatestStable on Updates tab in PM UI\" (#11537) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nDev\\6.2.0.29\r\n\r\n### Worked before?\r\n\r\nDev\\6.2.0.28\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a C# Console App (.NET Core) project.\r\n2. Open PM UI of the project by right-clicking the project->Manage NuGet Packages… in Solution Explorer.\r\n3. Install a package (e.g. “Newtonsoft.Json”), not the latest one (e.g. “11.0.1”).\r\n4. Click the “Updates” Tab.\r\n\r\n## Expected:\r\nThe Latest Stable version should show in the \"Version\" dropdown box as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/151691090-06362ca4-a956-468d-849c-56fecea85188.png)\r\n\r\n## Actual:\r\nThe version shows in the \"Version\" dropdown box as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/151691096-d816ab5f-d075-4a9b-8972-aa7daf820e30.png)\r\n\r\n## Notes:\r\n1. The issue also reproes on C# Console App (.NET Framework) project with the Packages.Config format.\r\n2. The issue starts to repro from NuGet Client Dev\\6.2.0.29, it doesn't repro on NuGet Client Dev\\6.2.0.28.\r\n3. The issue still repro after pressing the \"Refresh\" button.\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20008715497","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:50:15","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11424","RelatedDescription":"Closed issue \"[Bug]: The “Install” button is still clickable after typing an invalid version of the package \" (#11424) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.1.066\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Create a new Console App (.Net Core) project.\r\n2. Right-click the project and open Manage NuGet Packages in Solution Explorer.\r\n3. Search a package (Microsoft.NET.Test.Sdk) in PM UI.\r\n4. Type an invalid version of the package in the right panel.\r\n\r\n## Expected\r\nThe “Install” button is non-clickable.\r\n\r\n## Actual\r\nThe “Install” button is still clickable after typing an invalid version of the package as below screenshot.\r\n \r\n![image](https://user-images.githubusercontent.com/40230425/144211986-d87b70ac-b587-4c52-9a31-0cd51c9d3b1b.png)\r\n\r\n## Note\r\nThe issue doesn't repro on Dev\\6.1.0.64.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20008715496","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:50:15","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11425","RelatedDescription":"Closed issue \"[Bug]: The status of installed package with “PackagesReference” format is incorrect in “Installed”/“Updates” Tab\" (#11425) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.1.0.66\n\n### Worked before?\n\nDev\\6.1.0.64\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Create a C# Console App (.NET Framework) project.\r\n2. Open PM UI of the project by right-clicking the project->Manage NuGet Packages… in Solution Explorer.\r\n3. Install a package (e.g. “Newtonsoft.Json”), not the latest one (e.g. “11.0.1”) with “PackagesReference” format. \r\n4. Click the “Installed”/“Updates” Tab.\r\n\r\n## Expected: \r\nThe status of installed package with “PackagesReference” format is correct in “Installed”/“Updates” Tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/144213716-96f5c80b-6f89-4534-b2a9-948a22221b07.png)\r\n\r\n## Actual: \r\nThe status of installed package with “PackagesReference” format is incorrect in “Installed”/“Updates” Tab as below screenshot.\r\n \r\n![image](https://user-images.githubusercontent.com/71433406/144213745-9da8b0a1-8e8b-45da-9ce1-4d1125f9288d.png)\r\n\r\n## Notes:\r\n1. The issue doesn't repro on NuGet Client Dev\\6.1.0.64.\r\n2. The issue doesn’t repro with the Packages.Config format. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"20008715468","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:50:15","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11423","RelatedDescription":"Closed issue \"[Bug]: The “Update” button is still clickable after installing a package with latest version in PM UI\" (#11423) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.1.0.66\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Create a new Console App (.Net Core) project.\r\n2. Right-click the project and open Manage NuGet Packages in Solution Explorer.\r\n3. Install a package (e.g. Newtonsoft.Json) with the latest version into the project.\r\n4. Observe the information of the package in the right panel.\r\n## Expected\r\nThe “Update” button is non-clickable.\r\n\r\n## Actual\r\nThe “Update” button is still clickable after installing a package with latest version in PM UI as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/144207529-76426ab2-2f34-48fb-943a-9ca0a438c98b.png)\r\n\r\n## Note\r\n1. The issue doesn't repro on NuGet Client Dev\\6.1.0.64.\r\n2. The issue doesn't  repro on  switching from \"Installed\" tab to \"Browse\" tab.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20008516778","Type":"IssuesEvent","CreatedAt":"2022-02-01T01:27:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11536","RelatedDescription":"Closed issue \"[Bug]: Package unusable after pack\" (#11536) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n6.0.100\r\n\r\n### Worked before?\r\n\r\nN/A\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nI'm in the process of configuring builds for an open source project which can be found here: https://github.com/atrauzzi/protoculture-dotnet-postgres\r\n\r\nPart of how this project works is that it **embeds** various versions of postgres as static dependencies.  Those dependencies are to be included in the package and copied to the build output folder of any consuming projects.\r\n\r\nIf you look at [my `.csproj` file](https://github.com/atrauzzi/protoculture-dotnet-postgres/blob/main/Protoculture.Postgres.Embedded/Protoculture.Postgres.Embedded.csproj#L27-L34), you can see that I'm telling it to recursively grab a directory and eventually include it in the nuget package.\r\n\r\nYou can see in [the build](https://github.com/atrauzzi/protoculture-dotnet-postgres/runs/4994959039), packaging seems to succeed, but when I go to upload to the GitHub package repository as a test, I get the error:\r\n\r\n```\r\nwarn : nupkg malformed - failed to extract metadata from upload. Are you sure this is a nupkg file?\r\n```\r\n\r\nNot helpful, but I tried out some nupkg validators and I end up getting the following:\r\n\r\n```\r\nCould not load file or assembly '/tmp/Protoculture.Postgres.Embedded.0.1.1-pre/contentFiles/postgres/windows/x86_64/lib/_int.dll'. The module was expected to contain an assembly manifest.\r\n```\r\n\r\nI definitely am copying `dll` files to that path in the package, but they are dependencies of the applications I'm embedding.  They do not in any way participate directly with my own application code.\r\n\r\nAs best as I can tell -- and the documentation for this kind of stuff is really spotty -- I can't seem to find a way to tell nuget/nupkg to not try to do anything with those files.  Thus it's preventing the package from working anywhere.\r\n\r\n### Verbose Logs\r\n\r\nYou can see all configuration and attempted builds over at the project.\r\n\r\n---\r\n\r\nFeel free to also check out [my twitter thread](https://twitter.com/alextrauzzi/status/1487828270779224064) as I start asking around about this issue."},{"Id":"20007508126","Type":"IssuesEvent","CreatedAt":"2022-01-31T23:55:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11531","RelatedDescription":"Closed issue \"[Bug]: [Bug Bash] The “PackageReference” package icon colors in Solution Explorer window are inconsistent between .NET SDK based project and .NET Framework project\" (#11531) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.2.0.26\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n### Details about Problem\r\nNuGet version: NuGet Client Dev\\6.2.0.26\r\nVS Version: Main\\32127.271\r\nOS: Windows-11-Enterprise-21H2\r\n### Detailed repro steps\r\n1. Launch VS and click “Create a new project” button in the G2C dialog.\r\n2. Create a C# ASP.NET Core Web App (.NET Core 6.0) project and a C# Console Application (.NET Framework 4.8) project separately in two VS instances.\r\n3. Open the PM UI of every project and go to “Browse” tab.\r\n4. Select a package and install it into each project with “PackageReference” format.\r\n5. Go to the Solution Explorer window and observe the installed package icon.\r\n### Expected\r\nThe “PackageReference” package icon color in Solution Explorer window should be consistent.\r\n### Actual\r\nThe “PackageReference” package icon colors in Solution Explorer window are inconsistent as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/151561512-7d1b9d35-69aa-45ee-be44-12cdb3997402.png)\r\n### Notes\r\nIt’s not a regression.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20007379230","Type":"IssuesEvent","CreatedAt":"2022-01-31T23:41:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11515","RelatedDescription":"Closed issue \"[Bug]: Toolbox Item Population problem from Referenced NuGet package (WPF, .NET, VS Professional 2017 Version 15.6.6)\" (#11515) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe, Visual Studio Package Management UI\n\n### Product Version\n\nNuGet Package Manager 4.6.0, .NET Framework 4.6.1, Visual Studio Professional 2017 Version 15.6.6\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nToolbox Item Population problem from Referenced NuGet package (WPF, .NET, VS Professional 2017 Version 15.6.6)\r\n\r\nLinks used/information read in order to try and solve the issue:\r\nhttps://docs.microsoft.com/en-us/nuget/guides/create-ui-controls\r\nhttps://github.com/microsoft/xaml-designer-extensibility/blob/main/documents/toolbox-population.md\r\n\r\nVersions:\r\nNuGet Package Manager 4.6.0\r\n.NET Framework 4.6.1\r\nVisual Studio Professional 2017 Version 15.6.6\r\n\r\nProblem:\r\nAfter adding a VisualStudioToolsManifest.xml file to our NuGet package (containing a .dll with WPF User Controls) in the hopes of automatically upon installation of NuGet package populate the “XAML Designer/WPF” Toolbox with the items specified in the manifest-file – it does not. The Group/Tab is created upon installation of NuGet package, but it is empty (no items).\r\n\r\nIf we, instead of installing the NuGet package, copy the project containing the WPF User Controls into the solution and add a reference to it (Project -> Add -> Reference… -> Projects -> Check the checkbox for the project containing the WPF User Controls). The group AND the items appear. However, this functionality is exactly what we want when installing the NuGet package, and what we believed the VisualStudioToolsManifest.xml would help us with.\r\n\r\nAlso, if we go to the Toolbox, right click -> Choose Items -> Browse -> Navigate to the .dll that is installed with the NuGet package -> OK, the items are added to the Toolbox. Which should mean that there is nothing wrong with the .dll itself.\r\n\r\nThe NuGet package works in all other senses when installing (the custom controllers are shown in the XAML Designer view and the app compiles/runs with the custom controllers as expected).\r\n\r\nThe VisualStudioToolsManifest.xml looks like:\r\n```\r\n<FileList>\r\n  <File Reference = \"NameOfDLLFile.dll\">\r\n    <ContainsControls>True</ContainsControls>\r\n    <ToolboxItems UIFramework=\"WPF\" VSCategory=\"GenericGroup\" BlendCategory=\"GenericGroup\">\r\n      <Item Type=\"Namespace.Namespace.NameOfControl\" />\r\n      <!—More Items-->\r\n    </ToolboxItems>\r\n  </File>\r\n</FileList>\r\n```\r\n\r\n**To summarize:** The “GenericGroup” is created as a group/tab in the Toolbox, but it is empty.\r\n\n\n### Verbose Logs\n\n```shell\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-10003-57093-AA542\r\nApplication Insights Tools for Visual Studio Package   8.11.10402.2\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nCommand1 Extension   1.0\r\nCommon Azure Tools   1.10\r\nDotfuscator Community Edition   5.32.1.6167-6ce295ebd\r\nIncrediBuild Build Acceleration   1.5.0.2\r\nJavaScript Language Service   2.0\r\nMicrosoft JVM Debugger   1.0\r\nMicrosoft MI-Based Debugger   1.0\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual Studio VC Package   1.0\r\n\r\nNuGet Package Manager   4.6.0\r\n\r\nProjectServicesPackage Extension   1.0\r\nSyntax Visualizer   1.0\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nWiX Toolset Visual Studio Extension   1.0.0.4\n```\n"},{"Id":"20007334686","Type":"IssuesEvent","CreatedAt":"2022-01-31T23:37:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11294","RelatedDescription":"Closed issue \"[Bug]: nuget packages don't download from .targets files when RestoreUseStaticGraphEvaluation is enabled \" (#11294) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet --info (Version:   5.0.401)\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nCreate a targetfilename.targets file:\r\n\\<Project>\r\n  \\<ItemGroup>\r\n    \\<PackageReference Include=\"any package here\" Version=\"add version here\" >\r\n      \\<PrivateAssets>all\\</PrivateAssets>\r\n    \\</PackageReference>\r\n  \\</ItemGroup>\r\n\\</Project>\r\n\r\nIn Directory.Build.props, add:\r\n  \\<Import Project=\"\\<path>/targetfilename.targets\" />\r\n\r\n  \\<PropertyGroup>\r\n    \\<RestoreUseStaticGraphEvaluation Condition=\" '$(RestoreUseStaticGraphEvaluation)' == '' \">true </RestoreUseStaticGraphEvaluation>\r\n  \\</PropertyGroup>\r\n\r\nRun \"dotnet restore\" and the package will not download. Works with msbuild /restore.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20007301557","Type":"IssuesEvent","CreatedAt":"2022-01-31T23:34:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11303","RelatedDescription":"Closed issue \"[Bug]: LocalV3FindPackageByIdResource.GetAllVersionsAsync does not return any versions when local feed contains the package.\" (#11303) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet API nuget packages\r\n\r\n### Product Version\r\n\r\nI use the latest nuget v3 api packages in my own program (referenced to version `*-*`)\r\n\r\n### Worked before?\r\n\r\nI know what it worked on Windows with Nuget.Client, but since I need it to work xplat it will not work with the v3 apis.\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nI would take a look at the code file in action that I encounter the issue at. That is the only file that uses types from the nuget api packages. https://github.com/Elskom/installer/blob/main/src/NuGetHelper.cs\r\n\r\nThis should hopefully allow to help reproduce this. Basically I want that same code to be anle to process all sources even local ones that they added using `dotnet nuget add source`.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nI am not sure logs are possible in this case, perhaps this is an api bug.\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2022-02-01T03:30:27.1013521Z","RunDurationInMilliseconds":1504}