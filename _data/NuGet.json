{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"NuGet 5.9 is a great release that brings a refined experience to everything package management. We’ve added a bunch of exciting quality of life improvements while also bringing you a more performant...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21407745990","Type":"PullRequestEvent","CreatedAt":"2022-04-21T23:56:04","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9106","RelatedDescription":"Opened pull request \"Fix org profile to show correct MFA status for site admins\" (#9106) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21401270628","Type":"IssuesEvent","CreatedAt":"2022-04-21T16:01:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9105","RelatedDescription":"Closed issue \"[NuGet.org Bug]: flatcontainer api always returns BlobNotFound despite package name used to get the list of all versions listed being on nuget.org.\" (#9105) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Describe the bug\r\n\r\nLet's say for example you use this to query the API's manually using HttpClient: ``https://api.nuget.org/v3-flatcontainer/{packageName}/index.json``\r\n\r\nTry with the following values: ``Elskom.SDK``, ``Elskom.Sdk.App``, and ``Elskom.Sdk.App.Ref``.\r\n\r\n### Repro Steps\r\n\r\nSteps to reproduce:\r\n1. I also verified on my code that ``packageName`` never ends with an ``.``.\r\n2. Attempt to try the above values directly in browser.\r\n3. Notice that all 3 packages returns 404 or ``BlobNotFound``. Also when you visit ``https://api.nuget.org/v3-flatcontainer/`` it also returns ``BlobNotFound``.\r\n4. Type in the package names into nuget.org and notice that they are found, but not with api.nuger.org's flatcontainer.\r\n\r\n### Expected Behavior\r\n\r\nFor it to always return the json response which contains all of the versions of the packages that are listed on nuget.org.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/15173749/164376687-ee9ccbf1-dbce-44c4-bf08-26745ea3b5d8.png)\r\n![image](https://user-images.githubusercontent.com/15173749/164376729-0361413d-f825-434c-9bd7-da0900261e19.png)\r\n![image](https://user-images.githubusercontent.com/15173749/164376760-15a2452c-bfda-4028-a0e0-cccd15e6f7d4.png)\r\n![image](https://user-images.githubusercontent.com/15173749/164376877-0e565ea6-ec66-4ada-8551-3a3d6adbc471.png)\r\n![image](https://user-images.githubusercontent.com/15173749/164376920-cfa5d01d-156d-4797-9949-61d9b556b342.png)\r\n![image](https://user-images.githubusercontent.com/15173749/164376939-8fb88c93-5abf-4003-a285-0a680e6d581c.png)\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21409379841","Type":"IssuesEvent","CreatedAt":"2022-04-22T02:59:36","Actor":"Varorbc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11768","RelatedDescription":"Opened issue \"[Bug]: NU1604\tProject dependency Newtonsoft.Json does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results.\" (#11768) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.2.0 Preview 4.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n```\r\nDirectory.Packages.props\r\n\r\n<Project>\r\n\t\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\r\n  </ItemGroup>\r\n\t\r\n</Project>\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n  \t<PackageReference Include=\"Newtonsoft.Json\" />\r\n  </ItemGroup>\r\n\t\r\n</Project>\r\n\r\n\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21407661111","Type":"IssuesEvent","CreatedAt":"2022-04-21T23:45:17","Actor":"smaglio81","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11767","RelatedDescription":"Opened issue \"[Bug]: dotnet SDK 6.0.202 - Detected package downgrade during dotnet restore\" (#11767) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.202\n\n### Worked before?\n\n6.0.102\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nI originally posted this issue in the `dotnet\\sdk` github:\r\n\r\n  * [https://github.com/dotnet/sdk/issues/24931](https://github.com/dotnet/sdk/issues/24931)\r\n\r\n\r\n----------------\r\n\r\n### Describe the bug\r\n\r\nAfter updating to `dotnet sdk 6.0.202`, a `dotnet restore` step in one of our AzureDevOps builds started erroring with the message:\r\n\r\n`error NU1605: Detected package downgrade: Ucsb.Sa.Enterprise.AspNetCore.Mvc.Hosting from 5.0.66833 to 5.0.65698. Reference the package directly from the project to select a different version.  [D:\\TFS\\2\\_work\\10\\s\\Ucsb.Sa.GradDiv.CampusContacts.Web.sln]\r\n`\r\n\r\nWe used a `global.json` file to repoint the build to use `dotnet sdk 6.0.102` (last known good sdk at the time of this writing), and that got the build into a working state.\r\n\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"6.0.102\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n### To Reproduce\r\nI'm not really sure how to reproduce this issue. It's only occurring on our build servers; which are on premise VMs (Windows 2016, info below). When attempting to reproduce this issue on our local machines (Windows 10/21H2) with `dotnet sdk 6.0.202` using Visual Studio 2022, we don't receive any errors.\r\n\r\n\r\n### Exceptions (if any)\r\n`dotnet sdk 6.0.202` build error:\r\n![image](https://user-images.githubusercontent.com/169953/164111559-474d998a-cfb9-4650-8306-6a359c0d2c6d.png)\r\n![image](https://user-images.githubusercontent.com/169953/164111571-a8e18724-42f6-4e6a-80b4-18f4ff5cbef4.png)\r\n\r\n\r\n`dotnet sdk 6.0.102` success:\r\n![image](https://user-images.githubusercontent.com/169953/164111604-506412d2-843e-4cc2-80c1-2fbbef5a18c6.png)\r\n\r\n\r\n\r\n### Further technical details\r\n`dotnet --info`:\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.202\r\n Commit:    f8a55617d2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.202\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.4\r\n  Commit:  be98e88c76\r\n\r\n.NET SDKs installed:\r\n  2.1.515 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.109 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.205 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.102 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n**On Premise Build Servers:**\r\n\r\n* Windows 2016, Version 1607 (OS Build 14393.5006)\r\n* SDK Installers\r\n  * All downloaded from the version specific release notes under (https://github.com/dotnet/core/blob/master/release-notes)[https://github.com/dotnet/core/blob/master/release-notes]\r\n  * The installers are the `SDK Installer` `x64` download.\r\n* AzureDevOps Agent Version 2.196.2\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"21405979919","Type":"IssuesEvent","CreatedAt":"2022-04-21T21:07:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11742","RelatedDescription":"Closed issue \"Move all projects in release-5.11.x to Lang Version 8.0\" (#11742) at NuGet/Home","RelatedBody":"This would allow us to use the new using syntax and make it easier to cherry-pick things into older branches. \r\n\r\nSee: https://github.com/NuGet/NuGet.Client/pull/4023/files"},{"Id":"21405723394","Type":"IssuesEvent","CreatedAt":"2022-04-21T20:48:37","Actor":"papeh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11766","RelatedDescription":"Opened issue \"[DCR]: Include caught exceptions as inner exceptions when rethrowing (in MsBuildUtility)\" (#11766) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\nWhen MsBuildUtility catches certain exceptions, it throws different exceptions, including only the outermost one or two messages from caught exception.\n\n### Desired Behavior\n\nWhen catching an exception and throwing a different one, the original exception should be included as an inner exception so that all original call stacks and messages are preserved, to make debugging more efficient.\n\n### Additional Context\n\nI found these two exceptions (https://github.com/NuGet/NuGet.Client/pull/4588/) when addressing #8373."},{"Id":"21405549571","Type":"IssuesEvent","CreatedAt":"2022-04-21T20:36:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11765","RelatedDescription":"Opened issue \"Update SPDX licenses to bb0099c\" (#11765) at NuGet/Home","RelatedBody":""},{"Id":"21403934279","Type":"IssuesEvent","CreatedAt":"2022-04-21T18:44:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11759","RelatedDescription":"Closed issue \"[Feature]: Retain Command History After Closing and Opening Visual Studio\" (#11759) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Manager Console\n\n### The Elevator Pitch\n\nPackage Manager Console does retain command history in a temporary manner but in between closing and opening of Visual Studio that history is gone. \r\n\r\nPlease can the command history be retained after closing and opening of Visual Studio.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"21403838020","Type":"IssuesEvent","CreatedAt":"2022-04-21T18:38:11","Actor":"papeh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11764","RelatedDescription":"Opened issue \"\"Illegal characters in path\" (Solution Directory)\" (#11764) at NuGet/Home","RelatedBody":"Attempting a `nuget install` with an incorrect solution directory gives the cryptic error \"Illegal characters in path.\" The first assumption is that there is a problem with the PATH environment variable, but [the line in question](https://github.com/NuGet/NuGet.Client/blob/f7208c454ebf18fc37b15fda3438d6a5ece6cdd7/src/NuGet.Clients/NuGet.CommandLine/Commands/InstallCommand.cs#L115) combines the Solution Directory with \".nuget\". This clue seems to indicate illegal characters in the solution directory, but the solutionDirectory specified on my command line is legal.\r\n\r\nThe real problem is that the solution is at `C:\\repos\\repo\\src\\Solution.sln`, but the specified solution directory is `C:\\repos\\repo\\build\\`. This is a legal path, so I assume that some other code has changed the path from the command line to something illegal, but the message doesn't give much help:\r\n```\r\nC:\\repos\\repo\\build>\"C:\\repos\\repo\\build\\/nuget.exe\" install BuildTasks -verbosity detail -excludeVersion -version 2.3.1 -solutionDirectory \"C:\\repos\\repo\\build\\\"\r\nNuGet Version: 6.1.0.106\r\nIllegal characters in path.\r\nSystem.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at NuGet.CommandLine.InstallCommand.CalculateEffectiveSettings()\r\n   at NuGet.CommandLine.InstallCommand.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n\r\n_Originally posted by @papeh in https://github.com/NuGet/Home/issues/8373#issuecomment-1104447279_\r\n\r\n@chris1248 also suggests an improved message in https://github.com/NuGet/Home/issues/8373#issuecomment-656985569\r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/4586 improves the message."},{"Id":"21401303450","Type":"IssuesEvent","CreatedAt":"2022-04-21T16:03:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/2345","RelatedDescription":"Closed issue \"NuGet.Commands embedded copy of FileSystemGlobbing is now public\" (#2345) at NuGet/Home","RelatedBody":"Because `preprocess` code is not available in RC2, the code that \"internalizes\" the copy of FileSystemGlobbing that NuGet.Commands embeds isn't in effect. As a result, the classes are public and conflict with the real FileSystemGlobbing. I've worked around it in CLI, but it should be fixed.\n\n/cc @emgarten @yishaigalatzer @davidfowl \n"},{"Id":"21399428392","Type":"IssuesEvent","CreatedAt":"2022-04-21T14:33:37","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11504","RelatedDescription":"Closed issue \"[Epic]: Central Package Management Improvements for 17.2\" (#11504) at NuGet/Home","RelatedBody":"# Features\r\n\r\n- [x] https://github.com/NuGet/Home/issues/11516\r\n- [x] https://github.com/NuGet/Home/issues/10389\r\n- [x] https://github.com/NuGet/Home/issues/11505\r\n\r\n# Issues ([Query](https://github.com/NuGet/Home/issues?q=is%3Aopen+label%3AArea%3ARestoreCPM+-label%3AEpic+-label%3AEpic+-label%3AType%3AFeature))\r\n- [x] https://github.com/NuGet/Home/issues/10327\r\n- [x] https://github.com/NuGet/Home/issues/10074\r\n- [x] https://github.com/NuGet/Home/issues/11696\r\n\r\n# Pull Requests\r\n\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/4426\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/4025\r\n- [x] https://github.com/dotnet/project-system/pull/7985\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/4505\r\n- [x] https://github.com/NuGet/docs.microsoft.com-nuget/pull/2692\r\n- [x] https://github.com/dotnet/project-system/pull/8028\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/4523\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/4533\r\n\r\n# Documentation\r\n- [x] https://github.com/NuGet/docs.microsoft.com-nuget/issues/2674"},{"Id":"21399093845","Type":"IssuesEvent","CreatedAt":"2022-04-21T14:18:28","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11763","RelatedDescription":"Opened issue \"No Nuget package creation in Release mode for a .Net Framework project (Visual studio 2022)\" (#11763) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#7557**\r\n- Please respond to @rainersigwald.\r\n\r\n---\r\n\r\n_From @rainersigwald on Thursday, April 21, 2022 2:17:48 PM_\r\n\r\n### Discussed in https://github.com/dotnet/msbuild/discussions/7555\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **lgsndbox** April 21, 2022</sup>\r\nHello,\r\n\r\nWith Visual Studio 2022, I'm trying to automate the building of a Nuget package for a .Net Framework library using MSBuild.\r\nI've followed instructions at https://docs.microsoft.com/en-us/nuget/create-packages/creating-a-package-msbuild\r\nI understand that a .Net Framework project is a non-SDK-Style project, and I added the necessary `PackageOutputPath` and the `<PackageReference Include=\"NuGet.Build.Tasks.Pack\" Version=\"x.x.x\"/>`.\r\n\r\nI'm also using `<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`.\r\n\r\nMy problem is the following:\r\nThe Nuget Package is created when I'm on Debug, but not when I'm on Release.\r\n\r\nMy question is:\r\nHow to have it built on Release?\r\n\r\nFor reference here is an expurged version of my .csproj file\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n  <PropertyGroup>\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{[...]]}</ProjectGuid>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n    <RootNamespace>[...]</RootNamespace>\r\n    <AssemblyName>[...]</AssemblyName>\r\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\r\n    <FileAlignment>512</FileAlignment>\r\n    <Deterministic>true</Deterministic>\r\n    <PackageId>$(AssemblyName)</PackageId>\r\n    <Version>[...]</Version>\r\n    <Authors>[...]</Authors>\r\n    <Company>[...]</Company>\r\n\t  <Title>[...]</Title>\r\n    <Description>[...]</Description>\r\n    <PackageOutputPath>bin\\Package\\</PackageOutputPath>\r\n\t  <PackageTags>[...]</PackageTags>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <NuGetPackageImportStamp>\r\n    </NuGetPackageImportStamp>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\Debug\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n    <CodeAnalysisRuleSet>[...]</CodeAnalysisRuleSet>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n\t<CodeAnalysisRuleSet>[...]</CodeAnalysisRuleSet>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference [...]/>\r\n    [...]\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile [...]/>\r\n    [...]\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None [...]>\r\n      [...]\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Analyzer Include=\"..\\packages\\StyleCop.Analyzers.1.1.118\\analyzers\\dotnet\\cs\\StyleCop.Analyzers.CodeFixes.dll\" />\r\n    <Analyzer Include=\"..\\packages\\StyleCop.Analyzers.1.1.118\\analyzers\\dotnet\\cs\\StyleCop.Analyzers.dll\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <!-- ... -->\r\n    <PackageReference Include=\"NuGet.Build.Tasks.Pack\" Version=\"6.1.0\" />\r\n    <!-- ... -->\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n  <Import Project=\"..\\packages\\NuGet.Build.Tasks.Pack.6.1.0\\build\\NuGet.Build.Tasks.Pack.targets\" Condition=\"Exists('..\\packages\\NuGet.Build.Tasks.Pack.6.1.0\\build\\NuGet.Build.Tasks.Pack.targets')\" />\r\n  <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\r\n    <PropertyGroup>\r\n      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\r\n    </PropertyGroup>\r\n    <Error Condition=\"!Exists('..\\packages\\NuGet.Build.Tasks.Pack.6.1.0\\build\\NuGet.Build.Tasks.Pack.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', '..\\packages\\NuGet.Build.Tasks.Pack.6.1.0\\build\\NuGet.Build.Tasks.Pack.targets'))\" />\r\n  </Target>\r\n  <Target Name=\"PublishNugetPackage\" AfterTargets=\"PostBuildEvent\" Condition=\"'$(Configuration)'=='Release'\">\r\n    <Message Importance=\"High\" Text=\"Publishing Nuget Package [...]...\" />\r\n    <Exec Command=\"PowerShell -ExecutionPolicy Bypass -File publish-nuget-[...].ps1\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nI've tried to change the line\r\n`<Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>`\r\nto\r\n`<Configuration Condition=\" '$(Configuration)' == '' \">Release</Configuration>`\r\n\r\nBut to no avail. I must say that I don't understand the purpose of this line anyway.\r\nIt says that if the property `Configuration ` is not defined, define it to `Debug`, but I fail to understand why this has to be done.\r\n[EDIT] I have found the answer to that part here: https://stackoverflow.com/questions/33744624/set-a-default-build-configuration-for-project\r\n\r\nThanks for any input.\r\n</div>"},{"Id":"21399016841","Type":"IssuesEvent","CreatedAt":"2022-04-21T14:14:56","Actor":"Balkoth","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11762","RelatedDescription":"Opened issue \"[Bug]: ASP.NET Core hosted in IIS using NuGet.Protocol does not work\" (#11762) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuget.Protocol 6.1.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n- Create ASP.NET Core Project\r\n- Add Nuget.Protocol reference\r\n- Try querying information using the api\r\n\r\n-> Application crashes\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":246,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-04-22T03:30:23.6778269Z","RunDurationInMilliseconds":1334}