{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41462229512","Type":"PullRequestEvent","CreatedAt":"2024-08-29T16:21:39","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10163","RelatedDescription":"Merged pull request \"Allow if conflict with package from same owner\" (#10163) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5583\r\n\r\nMy [previous PR](https://github.com/NuGet/NuGetGallery/commit/ca170345892cddb68c83be446c39e2b138190660), I inadvertently made typosquatting check too strict, this change would allow if they're from same owners by keeping both original and normalized values in cache. It would add few mb memory, but not big deal, main concern was CPU time previously."},{"Id":"41450905064","Type":"PullRequestEvent","CreatedAt":"2024-08-29T11:09:19","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10165","RelatedDescription":"Opened pull request \"Dg accountdeletermsi\" (#10165) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5586\r\n\r\n(Not seeing any reason for the `AccountDeleteConfiguration` delta here in the GitHub view of the diff). Due to complications in the base class DI implementation (see https://github.com/NuGet/Engineering/issues/5606), I've opted for the simple approach of implementing MSI auth via the `UsingMsi` method."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41473085737","Type":"IssuesEvent","CreatedAt":"2024-08-30T00:12:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/13650","RelatedDescription":"Reopened issue \"[Cross-platform Dotnet NuGet Sign] Adding trust for a certificate leads to an error SYSLIB5007 for .NET SDK 9.0.1xx\" (#13650) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 9.0.100.preview.7.24374.16\r\n\r\n### Worked before?\r\n\r\nIt doesn’t repro on .NET SDK 8.0.4xx.\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n**Repro Steps:**    \r\n\r\n1. [Patched dotnet SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703) with ‘-SDKChannel 9.0.1xx’.\r\n2. Add net9.0 into the <TargetFrameworks> into both ‘MakeTestCert.csproj’ and ‘TrustTestCert.csproj’ file. \r\n3.  Go to the patchedSDK folder and create a new test certificate:  \r\n  On Windows:  `.\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net9.0 --password password `\r\n  On Linux/macOS: ` ./dotnet run --project ./Entropy/MakeTestCert/MakeTestCert.csproj --framework net9.0 --password password `\r\n\r\n  5. Where <CertificateFilePath> is the file path to the created certificate (in step1) .cer or .pem file and <VersionedSdkDirectoryPath> is the directory path for the patched versioned .NET SDK directory (e.g.:  ./patchedSDK/sdk/9.0.100.xxx), add try to trust for the certificate:\r\nOn Windows:  `.\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net9.0 -- add -c <CertificateFilePath>`\r\n    On Linux/macOS: ` ./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net9.0 -- add -c <CertificateFilePath> -vsd <VersionedSdkDirectoryPath>`\r\n\r\n**Expected:**      \r\n    The certificate should be trusted successfully. \r\n\r\n**Actual:**\r\nAn error SYSLIB5007 displays as below: \r\n![image](https://github.com/user-attachments/assets/949e635c-f475-4ebc-9754-7b617320c964)\r\n\r\n**Notes:**  \r\n  1. It also reproes on MacOS and Linux platforms. \r\n  2. It only reproes on .NET SDK 9.0.1xx, doesn’t repro on .NET SDK 8.0.4xx. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"41470625230","Type":"IssuesEvent","CreatedAt":"2024-08-29T21:44:04","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13752","RelatedDescription":"Opened issue \"Report real transitive reference versions in `dotnet nuget why`, not final resolved versions\" (#13752) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nI just tried to use `dotnet nuget why` to figure out why a specific package was resolved to a higher version than the one I (the owner of one of the directly referenced packages) expected. However, the version of the package I was looking at was listed as the final resolved version for every leaf.\r\n\r\n```sh-session\r\n❯ dotnet nuget why . System.Text.Json\r\nProject 'Microsoft.NET.Sdk' has the following dependency graph(s) for 'System.Text.Json':\r\n\r\n  [net472]\r\n   │\r\n   ├─ Microsoft.Build (v17.8.3)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   ├─ Microsoft.Deployment.DotNet.Releases (v2.0.0-preview.1.24406.1)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   ├─ Microsoft.Extensions.DependencyModel (v9.0.0-rc.2.24427.10)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   ├─ Microsoft.NET.HostModel (v9.0.0-rc.2.24427.10)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   ├─ NuGet.ProjectModel (v6.12.0-preview.1.85)\r\n   │  └─ NuGet.DependencyResolver.Core (v6.12.0-preview.1.85)\r\n   │     └─ NuGet.Protocol (v6.12.0-preview.1.85)\r\n   │        └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n\r\n  [net9.0]\r\n   │\r\n   ├─ Microsoft.Deployment.DotNet.Releases (v2.0.0-preview.1.24406.1)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   ├─ Microsoft.NET.HostModel (v9.0.0-rc.2.24427.10)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n```\n\n### Desired Behavior\n\nI expected something like this (reconstructed from `project.assets.json` info):\r\n\r\n```sh-session\r\n❯ S:\\sdk\\.dotnet\\dotnet.exe nuget why . System.Text.Json\r\nProject 'Microsoft.NET.Sdk' has the following dependency graph(s) for 'System.Text.Json':\r\n\r\n  [net472]\r\n   │\r\n   ├─ Microsoft.Build (v17.8.3)\r\n   │  └─ System.Text.Json (v7.0.3)\r\n   ├─ Microsoft.Deployment.DotNet.Releases (v2.0.0-preview.1.24406.1)\r\n   │  └─ System.Text.Json (v8.0.3)\r\n   ├─ Microsoft.Extensions.DependencyModel (v9.0.0-rc.2.24427.10)\r\n   │  └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n   ├─ Microsoft.NET.HostModel (v9.0.0-rc.2.24427.10)\r\n   │  └─ System.Text.Json (v8.0.0)\r\n   ├─ NuGet.ProjectModel (v6.12.0-preview.1.85)\r\n   │  └─ NuGet.DependencyResolver.Core (v6.12.0-preview.1.85)\r\n   │     └─ NuGet.Protocol (v6.12.0-preview.1.85)\r\n   │        └─ System.Text.Json (v8.0.4)\r\n   └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n\r\n  [net9.0]\r\n   │\r\n   ├─ Microsoft.Deployment.DotNet.Releases (v2.0.0-preview.1.24406.1)\r\n   │  └─ System.Text.Json (v8.0.3)\r\n   ├─ Microsoft.NET.HostModel (v9.0.0-rc.2.24427.10)\r\n   │  └─ System.Text.Json (v8.0.0)\r\n   └─ System.Text.Json (v9.0.0-rc.2.24427.10)\r\n```\n\n### Additional Context\n\nI think this'd help answer the question \"why is this package referenced at this version\"--currently `dotnet nuget why` helps figure out where it came from transitively but not the versioning."},{"Id":"41467608431","Type":"IssuesEvent","CreatedAt":"2024-08-29T19:35:42","Actor":"halter73","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13751","RelatedDescription":"Closed issue \"NuGet client (via dotnet SDK) incorrectly warns about vulnerable NuGet packages hoisted by the shared runtime\" (#13751) at NuGet/Home","RelatedBody":"I originally filed this issue against the dotnet SDK https://github.com/dotnet/sdk/issues/43063, but the bot asked me to post this here. I'm not sure how much visibility NuGet has into what packages are hoisted by the shared runtime, but the issue is as follows:\r\n\r\n### Describe the bug\r\n\r\nIf you add a PackageReference to a project pointing to a vulnerable package version, `dotnet` commands like `restore`, `build`, `run`, and `list package --vulnerable --include-transitive` will report inaccurate vulnerability warnings for packages that are hoisted to a newer, non-vulnerable version by the shared runtime.\r\n\r\nIn my repro project at https://github.com/halter73/NuGetVulnerabilityFalsePositive, I demonstrate this with a direct PackageReference to System.Text.Json 8.0.3, but the problem persists for transitive references which is harder to work around.\r\n\r\nIn the case of transitive dependencies, you cannot avoid the issue by simply removing the PackageReference. Instead, developers are forced to directly reference the packages that are falsely reported as vulnerable to get rid of warnings. This is demonstrated by https://github.com/dotnet/aspnetcore/pull/57560 which tries to update the ASP.NET Core project templates so they do not produce NuGet vulnerability warnings. We would rather not be forced to reference packages that are part of the shared runtime.\r\n\r\n### To Reproduce\r\n\r\n- Clone the https://github.com/halter73/NuGetVulnerabilityFalsePositive repo\r\n- Run `dotnet build`\r\n\r\n### Exceptions (if any)\r\n\r\n```\r\nPS C:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive> dotnet run\r\nC:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive.csproj : wa\r\nrning NU1903: Package 'System.Text.Json' 8.0.3 has a known high severity vulnerability, https://github.com/advisories/G\r\nHSA-hh2w-p6rv-4g7w\r\nC:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive.csproj : wa\r\nrning NU1903: Package 'System.Text.Json' 8.0.3 has a known high severity vulnerability, https://github.com/advisories/G\r\nHSA-hh2w-p6rv-4g7w\r\n\r\n{\"systemTextJsonPath\":\"C:\\\\Program Files\\\\dotnet\\\\shared\\\\Microsoft.NETCore.App\\\\8.0.8\\\\System.Text.Json.dll\"}\r\n```\r\n\r\n### Further technical details\r\n\r\n<details><summary>dotnet --info (expand for details)</summary>\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.401\r\n Commit:            811edcc344\r\n Workload version:  8.0.400-manifests.dd15fcf9\r\n MSBuild version:   17.11.4+37eb419ad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22631\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.401\\\r\n\r\n.NET workloads installed:\r\nConfigured to use loose manifests when installing new manifests.\r\n [wasm-tools]\r\n   Installation Source: VS 17.12.35214.114\r\n   Manifest Version:    8.0.8/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.workload.mono.toolchain.current\\8.0.8\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [aspire]\r\n   Installation Source: VS 17.12.35227.331\r\n   Manifest Version:    8.1.0/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.1.0\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\nHost:\r\n  Version:      9.0.0-preview.7.24405.7\r\n  Architecture: x64\r\n  Commit:       static\r\n\r\n.NET SDKs installed:\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.304 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.401 [C:\\Program Files\\dotnet\\sdk]\r\n  9.0.100-preview.7.24407.12 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 9.0.0-preview.7.24406.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 9.0.0-preview.7.24405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-preview.7.24405.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  C:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\global.json\r\n```\r\n</details>\r\n\r\nVS Version: 17.12.0 Preview 2.0 [35227.331.main]\r\n\r\n![VS Vulnerability Warning](https://github.com/user-attachments/assets/4ee3f9b9-be1a-4e10-92bc-6c10d695e388)\r\n\r\n@Tragetaschen commented on the original issue pointing out the following.\r\n\r\n> I can see a myriad of warnings in our codebase, but not with `8.0.401`, only with the preview bits. Basically everywhere\r\n> \r\n> ```\r\n>     …csproj : warning NU1903: Package 'System.Formats.Asn1' 8.0.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-447r-wph3-92pm\r\n>     …csproj : warning NU1903: Package 'System.Text.Json' 8.0.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-hh2w-p6rv-4g7w\r\n> ```\r\n> \r\n> Those packages are not referenced explicitly and we are building for 8.0.8.\r\n> \r\n> ```\r\n> .NET SDK:\r\n>  Version:           9.0.100-preview.7.24407.12\r\n>  Commit:            d672b8a045\r\n>  Workload version:  9.0.100-manifests.baed1e37\r\n>  MSBuild version:   17.12.0-preview-24374-02+48e81c6f1\r\n> ```\r\n> \r\n> Neither `8.0.401` nor `9.0.100-…` show a vulnerability when running `dotnet list package --include-transitive --vulnerable`\r\n\r\nAs you can see from my repro above, this bug does present itself even with 8.0.401 SDK specified in the global.json. The host version is 9.0.100-preview.7.24407.12, so that might have something to do with it.\r\n\r\nI almost pointed to https://github.com/dotnet/runtime/pull/106172 being related, because that is proximate cause for the System.Text.Json warning to show up in the RC1 ASP.NET Core project templates but not the preview7 one, but RC1 hasn't been released yet unless you're using https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json as a package feed. So, I think this regression probably does have something to do with the host version.\r\n"},{"Id":"41467430635","Type":"IssuesEvent","CreatedAt":"2024-08-29T19:29:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13751","RelatedDescription":"Closed issue \"NuGet client (via dotnet SDK) incorrectly warns about vulnerable NuGet packages hoisted by the shared runtime\" (#13751) at NuGet/Home","RelatedBody":"I originally filed this issue against the dotnet SDK https://github.com/dotnet/sdk/issues/43063, but the bot asked me to post this here. I'm not sure how much visibility NuGet has into what packages are hoisted by the shared runtime, but the issue is as follows:\r\n\r\n### Describe the bug\r\n\r\nIf you add a PackageReference to a project pointing to a vulnerable package version, `dotnet` commands like `restore`, `build`, `run`, and `list package --vulnerable --include-transitive` will report inaccurate vulnerability warnings for packages that are hoisted to a newer, non-vulnerable version by the shared runtime.\r\n\r\nIn my repro project at https://github.com/halter73/NuGetVulnerabilityFalsePositive, I demonstrate this with a direct PackageReference to System.Text.Json 8.0.3, but the problem persists for transitive references which is harder to work around.\r\n\r\nIn the case of transitive dependencies, you cannot avoid the issue by simply removing the PackageReference. Instead, developers are forced to directly reference the packages that are falsely reported as vulnerable to get rid of warnings. This is demonstrated by https://github.com/dotnet/aspnetcore/pull/57560 which tries to update the ASP.NET Core project templates so they do not produce NuGet vulnerability warnings. We would rather not be forced to reference packages that are part of the shared runtime.\r\n\r\n### To Reproduce\r\n\r\n- Clone the https://github.com/halter73/NuGetVulnerabilityFalsePositive repo\r\n- Run `dotnet build`\r\n\r\n### Exceptions (if any)\r\n\r\n```\r\nPS C:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive> dotnet run\r\nC:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive.csproj : wa\r\nrning NU1903: Package 'System.Text.Json' 8.0.3 has a known high severity vulnerability, https://github.com/advisories/G\r\nHSA-hh2w-p6rv-4g7w\r\nC:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive.csproj : wa\r\nrning NU1903: Package 'System.Text.Json' 8.0.3 has a known high severity vulnerability, https://github.com/advisories/G\r\nHSA-hh2w-p6rv-4g7w\r\n\r\n{\"systemTextJsonPath\":\"C:\\\\Program Files\\\\dotnet\\\\shared\\\\Microsoft.NETCore.App\\\\8.0.8\\\\System.Text.Json.dll\"}\r\n```\r\n\r\n### Further technical details\r\n\r\n<details><summary>dotnet --info (expand for details)</summary>\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.401\r\n Commit:            811edcc344\r\n Workload version:  8.0.400-manifests.dd15fcf9\r\n MSBuild version:   17.11.4+37eb419ad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22631\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.401\\\r\n\r\n.NET workloads installed:\r\nConfigured to use loose manifests when installing new manifests.\r\n [wasm-tools]\r\n   Installation Source: VS 17.12.35214.114\r\n   Manifest Version:    8.0.8/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.workload.mono.toolchain.current\\8.0.8\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [aspire]\r\n   Installation Source: VS 17.12.35227.331\r\n   Manifest Version:    8.1.0/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.1.0\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\nHost:\r\n  Version:      9.0.0-preview.7.24405.7\r\n  Architecture: x64\r\n  Commit:       static\r\n\r\n.NET SDKs installed:\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.304 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.401 [C:\\Program Files\\dotnet\\sdk]\r\n  9.0.100-preview.7.24407.12 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 9.0.0-preview.7.24406.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 9.0.0-preview.7.24405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-preview.7.24405.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  C:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\global.json\r\n```\r\n</details>\r\n\r\nVS Version: 17.12.0 Preview 2.0 [35227.331.main]\r\n\r\n![VS Vulnerability Warning](https://github.com/user-attachments/assets/4ee3f9b9-be1a-4e10-92bc-6c10d695e388)\r\n\r\n@Tragetaschen commented on the original issue pointing out the following.\r\n\r\n> I can see a myriad of warnings in our codebase, but not with `8.0.401`, only with the preview bits. Basically everywhere\r\n> \r\n> ```\r\n>     …csproj : warning NU1903: Package 'System.Formats.Asn1' 8.0.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-447r-wph3-92pm\r\n>     …csproj : warning NU1903: Package 'System.Text.Json' 8.0.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-hh2w-p6rv-4g7w\r\n> ```\r\n> \r\n> Those packages are not referenced explicitly and we are building for 8.0.8.\r\n> \r\n> ```\r\n> .NET SDK:\r\n>  Version:           9.0.100-preview.7.24407.12\r\n>  Commit:            d672b8a045\r\n>  Workload version:  9.0.100-manifests.baed1e37\r\n>  MSBuild version:   17.12.0-preview-24374-02+48e81c6f1\r\n> ```\r\n> \r\n> Neither `8.0.401` nor `9.0.100-…` show a vulnerability when running `dotnet list package --include-transitive --vulnerable`\r\n\r\nAs you can see from my repro above, this bug does present itself even with 8.0.401 SDK specified in the global.json. The host version is 9.0.100-preview.7.24407.12, so that might have something to do with it.\r\n\r\nI almost pointed to https://github.com/dotnet/runtime/pull/106172 being related, because that is proximate cause for the System.Text.Json warning to show up in the RC1 ASP.NET Core project templates but not the preview7 one, but RC1 hasn't been released yet unless you're using https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json as a package feed. So, I think this regression probably does have something to do with the host version.\r\n"},{"Id":"41464472064","Type":"IssuesEvent","CreatedAt":"2024-08-29T17:39:33","Actor":"halter73","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13751","RelatedDescription":"Opened issue \"NuGet client (via dotnet SDK) incorrectly warns about vulnerable NuGet packages hoisted by the shared runtime\" (#13751) at NuGet/Home","RelatedBody":"I originally filed this issue against the dotnet SDK https://github.com/dotnet/sdk/issues/43063, but the bot asked me to post this here. I'm not sure how much visibility NuGet has into what packages are hoisted by the shared runtime, but the issue is as follows:\r\n\r\n### Describe the bug\r\n\r\nIf you add a PackageReference to a project pointing to a vulnerable package version, `dotnet` commands like `restore`, `build`, `run`, and `list package --vulnerable --include-transitive` will report inaccurate vulnerability warnings for packages that are hoisted to a newer, non-vulnerable version by the shared runtime.\r\n\r\nIn my repro project at https://github.com/halter73/NuGetVulnerabilityFalsePositive, I demonstrate this with a direct PackageReference to System.Text.Json 8.0.3, but the problem persists for transitive references which is harder to work around.\r\n\r\nIn the case of transitive dependencies, you cannot avoid the issue by simply removing the PackageReference. Instead, developers are forced to directly reference the packages that are falsely reported as vulnerable to get rid of warnings. This is demonstrated by https://github.com/dotnet/aspnetcore/pull/57560 which tries to update the ASP.NET Core project templates so they do not produce NuGet vulnerability warnings. We would rather not be forced to reference packages that are part of the shared runtime.\r\n\r\n### To Reproduce\r\n\r\n- Clone the https://github.com/halter73/NuGetVulnerabilityFalsePositive repo\r\n- Run `dotnet build`\r\n\r\n### Exceptions (if any)\r\n\r\n```\r\nPS C:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive> dotnet run\r\nC:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive.csproj : wa\r\nrning NU1903: Package 'System.Text.Json' 8.0.3 has a known high severity vulnerability, https://github.com/advisories/G\r\nHSA-hh2w-p6rv-4g7w\r\nC:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive\\NuGetVulnerabilityFalsePositive.csproj : wa\r\nrning NU1903: Package 'System.Text.Json' 8.0.3 has a known high severity vulnerability, https://github.com/advisories/G\r\nHSA-hh2w-p6rv-4g7w\r\n\r\n{\"systemTextJsonPath\":\"C:\\\\Program Files\\\\dotnet\\\\shared\\\\Microsoft.NETCore.App\\\\8.0.8\\\\System.Text.Json.dll\"}\r\n```\r\n\r\n### Further technical details\r\n\r\n<details><summary>dotnet --info (expand for details)</summary>\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.401\r\n Commit:            811edcc344\r\n Workload version:  8.0.400-manifests.dd15fcf9\r\n MSBuild version:   17.11.4+37eb419ad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22631\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.401\\\r\n\r\n.NET workloads installed:\r\nConfigured to use loose manifests when installing new manifests.\r\n [wasm-tools]\r\n   Installation Source: VS 17.12.35214.114\r\n   Manifest Version:    8.0.8/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.workload.mono.toolchain.current\\8.0.8\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [aspire]\r\n   Installation Source: VS 17.12.35227.331\r\n   Manifest Version:    8.1.0/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.1.0\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\nHost:\r\n  Version:      9.0.0-preview.7.24405.7\r\n  Architecture: x64\r\n  Commit:       static\r\n\r\n.NET SDKs installed:\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.304 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.401 [C:\\Program Files\\dotnet\\sdk]\r\n  9.0.100-preview.7.24407.12 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 9.0.0-preview.7.24406.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 9.0.0-preview.7.24405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-preview.7.24405.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  C:\\dev\\temp\\NuGetVulnerabilityFalsePositive\\global.json\r\n```\r\n</details>\r\n\r\nVS Version: 17.12.0 Preview 2.0 [35227.331.main]\r\n\r\n![VS Vulnerability Warning](https://github.com/user-attachments/assets/4ee3f9b9-be1a-4e10-92bc-6c10d695e388)\r\n\r\n@Tragetaschen commented on the original issue pointing out the following.\r\n\r\n> I can see a myriad of warnings in our codebase, but not with `8.0.401`, only with the preview bits. Basically everywhere\r\n> \r\n> ```\r\n>     …csproj : warning NU1903: Package 'System.Formats.Asn1' 8.0.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-447r-wph3-92pm\r\n>     …csproj : warning NU1903: Package 'System.Text.Json' 8.0.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-hh2w-p6rv-4g7w\r\n> ```\r\n> \r\n> Those packages are not referenced explicitly and we are building for 8.0.8.\r\n> \r\n> ```\r\n> .NET SDK:\r\n>  Version:           9.0.100-preview.7.24407.12\r\n>  Commit:            d672b8a045\r\n>  Workload version:  9.0.100-manifests.baed1e37\r\n>  MSBuild version:   17.12.0-preview-24374-02+48e81c6f1\r\n> ```\r\n> \r\n> Neither `8.0.401` nor `9.0.100-…` show a vulnerability when running `dotnet list package --include-transitive --vulnerable`\r\n\r\nAs you can see from my repro above, this bug does present itself even with 8.0.401 SDK specified in the global.json. The host version is 9.0.100-preview.7.24407.12, so that might have something to do with it.\r\n\r\nI almost pointed to https://github.com/dotnet/runtime/pull/106172 being related, because that is proximate cause for the System.Text.Json warning to show up in the RC1 ASP.NET Core project templates but not the preview7 one, but RC1 hasn't been released yet unless you're using https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json as a package feed. So, I think this regression probably does have something to do with the host version.\r\n"},{"Id":"41437077478","Type":"IssuesEvent","CreatedAt":"2024-08-29T01:38:19","Actor":"jsquire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13750","RelatedDescription":"Opened issue \"NuGet Error: Unable to parse version value '2.0.0-beta.3' from 'packages.config\" (#13750) at NuGet/Home","RelatedBody":"# Issue Transfer\r\n\r\nThis issue has been transferred from the Azure SDK for .NET repository, [#45718](https://github.com/Azure/azure-sdk-for-net/issues/45718).\r\n\r\n### Please be aware that @limdv is the author of the original issue and include them for any questions or replies.\r\n\r\n## Details\r\n\r\nHello,\r\n\r\nAfter I installed Azure.AI.OpenAI 2.0.0-beta.3 I receive the following build errors. Anyone else seen and been able to resolve this issue. I can't seem to find any information regarding this error and it may not be specific to this package. It seems to be any package with 4 segments in the version. Any idea how to fix this?\r\n\r\n>C:\\Projects\\SMTMVC\\.nuget\\nuget.targets(92,9): error : Unable to parse version value '2.0.0-beta.3' from 'packages.config'.\r\n3>C:\\Projects\\SMTMVC\\.nuget\\nuget.targets(92,9): error MSB3073: The command \"\"C:\\Projects\\SMTMVC\\.nuget\\NuGet.exe\" install \"C:\\Projects\\SMTMVC\\SMTMVC\\packages.config\" -source \"\"  -NonInteractive -RequireConsent -solutionDir \"C:\\Projects\\SMTMVC\\ \"\" exited with code 1.\r\n\r\n### Environment\r\n\r\nMVC project targeting the .NET Framework 4.8 in Visual Studio 2022 (Version 17.11.0), Nuget Package Manager (Version 6.11.0)."},{"Id":"41433937808","Type":"IssuesEvent","CreatedAt":"2024-08-28T22:16:42","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13749","RelatedDescription":"Opened issue \"Navigation telemetry for hyperlinks: License, ReportAbuse, Readme, ProjectUrl\" (#13749) at NuGet/Home","RelatedBody":"Enable the navigation telemetry in the Details Pane for existing hyperlinks:\r\n1. License\r\n2. ReportAbuse\r\n3. Readme\r\n4. ProjectUrl\r\n\r\nWhile adding Owner Profile telemetry in https://github.com/NuGet/Home/issues/13738, I found that these were not emitting events as they were not setup correctly, and I decided to quickly enable them. It may be interesting to know which hyperlinks are used most commonly."},{"Id":"41433392744","Type":"IssuesEvent","CreatedAt":"2024-08-28T21:48:44","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12530","RelatedDescription":"Closed issue \"When a source isn't accessible, service index cannot be read issues suppress the internal message making it difficult to understand the root cause\" (#12530) at NuGet/Home","RelatedBody":"Create a project with the following content. \r\n\r\nRestore it.\r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n    <RestoreSources>https://api.nuget.org/v3/indexss.json</RestoreSources>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"nuget.common\" version=\"6.6.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n> C:\\Code\\ServiceIndex\\ServiceIndex.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/indexss.json.\r\n\r\nThe error message on detailed verbosity is not any better. It's very apparent here that some exceptions are being swallowed.\r\n"},{"Id":"41424975549","Type":"IssuesEvent","CreatedAt":"2024-08-28T16:30:39","Actor":"Scal-Human","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13748","RelatedDescription":"Opened issue \"NU1503 Warning documentation is lacking information\" (#13748) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\ndotnet 8.0.304, MSBuild 17.10.4.21802\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n- Create a Sdk from scratch that do not import a standard one (my example is an ePub generation based on markdown files)\r\n- Define all targets that are supposed to exist (Clean, Restore, Build, VSTest,  Publish, Pack ...)\r\n- Build a solution containing one of such project that uses this Sdk\r\n- You get a warning\r\n```\r\n... warning NU1503: Skipping restore for project '....epubproj'. The project file may be invalid or missing targets required for restore.\r\n``` \r\n- Go to the doc about [NU1503](https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu1503)\r\n\r\nNeither the warning message nor the documentation page indicate which targets are expected to exist.\r\nA search gave [this StackOverflow page](https://stackoverflow.com/questions/59785046/skipping-restore-for-project-setupwix-wixproj-the-project-file-may-be-invalid) in which it is said that both **Restore** and **_IsProjectRestoreSupported** must exist.\r\nThe is of course the missing bit.\r\nThe propsed answer of m0sa is correct and should be part of the documentation.\r\n```html\r\n <!-- prevents NU1503 -->\r\n  <Target Name=\"_IsProjectRestoreSupported\"\r\n          Returns=\"@(_ValidProjectsForRestore)\">\r\n    <ItemGroup>\r\n      <_ValidProjectsForRestore Include=\"$(MSBuildProjectFullPath)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n  <Target Name=\"Restore\">\r\n    ...\r\n  </Target>\r\n``` \n\n### Verbose Logs\n\n```shell\nThis is a doc problem, so no log.\n```\n"},{"Id":"41421700688","Type":"IssuesEvent","CreatedAt":"2024-08-28T14:54:36","Actor":"askovpen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13747","RelatedDescription":"Closed issue \"Wrong version in API V3\" (#13747) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nOther/NA\r\n\r\n### Product Version\r\n\r\napi v3\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nOther\r\n\r\n### Repro Steps & Context\r\n\r\n[https://api.nuget.org/v3-flatcontainer/sqlkata/index.json](https://api.nuget.org/v3-flatcontainer/sqlkata/index.json)\r\n```\r\n{\r\n    \"versions\": [\r\n        \"1.0.0-beta-1\",\r\n        \"1.0.0-beta-2\",\r\n        \"1.0.0-beta-3\",\r\n        \"1.0.0-beta-31\",\r\n        \"1.0.0-beta-32\",\r\n        \"1.0.0-beta-34\",\r\n        \"1.0.0-beta-341\",\r\n        \"1.0.0-beta-342\",\r\n        \"1.0.0-beta-343\",\r\n        \"1.0.0-beta-344\",\r\n        \"1.0.0-beta-345\",\r\n        \"1.0.0-beta-35\",\r\n        \"1.0.0-beta-351\",\r\n        \"1.0.0-beta-352\",\r\n        \"1.0.0-beta-353\",\r\n        \"1.0.0-beta-354\",\r\n        \"1.0.0-beta-355\",\r\n        \"1.0.0-beta-357\",\r\n        \"1.0.0-beta-405\",\r\n        \"1.0.0-beta-408\",\r\n        \"1.0.0-beta-409\",\r\n        \"1.0.0-beta-411\",\r\n        \"1.0.0-beta-441\",\r\n        \"1.0.0-beta-450\",\r\n        \"1.0.0-beta-454\",\r\n        \"1.0.0-beta-458\",\r\n        \"1.0.0-beta-484\",\r\n        \"1.0.0-beta-553\",\r\n        \"1.0.0\",\r\n        \"1.0.1\",\r\n        \"1.0.3\",\r\n        \"1.0.4\",\r\n        \"1.1.0\",\r\n        \"1.1.2\",\r\n        \"1.1.3\",\r\n        \"1.1.4\",\r\n        \"1.1.5\",\r\n        \"1.1.6\",\r\n        \"1.1.7\",\r\n        \"1.1.8-ci-709\",\r\n        \"1.1.8-ci-712\",\r\n        \"1.1.8-ci-768\",\r\n        \"2.0.2-ci-771\",\r\n        \"2.1.0-ci-786\",\r\n        \"2.1.0\",\r\n        \"2.2.0-ci-788\",\r\n        \"2.2.0\",\r\n        \"2.3.2\",\r\n        \"2.3.3\",\r\n        \"2.3.4\",\r\n        \"2.3.7\",\r\n        \"2.3.8\",\r\n        \"2.3.9\",\r\n        \"2.4.0\",\r\n        \"3.0.0-beta\",\r\n        \"3.2.3\"\r\n    ]\r\n}\r\n```\r\n\r\nbut latest version of [SqlKata](https://www.nuget.org/packages/SqlKata/) - 2.4.0 (stable) and 3.0.0-beta\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-30T03:30:18.6331798Z","RunDurationInMilliseconds":961}