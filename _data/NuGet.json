{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13108777695","Type":"PullRequestEvent","CreatedAt":"2020-08-04T17:27:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8134","RelatedDescription":"Merged pull request \"Add note on functional tests' requirements\" (#8134) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13102829409","Type":"PullRequestEvent","CreatedAt":"2020-08-04T07:29:11","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8139","RelatedDescription":"Opened pull request \"Unbreak GitHubVulnerabilities2Db dependency injection\" (#8139) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8138\r\n\r\nIf the ContentObjectService parameter becomes optional in the PackageService constructor, dependency injection in GitHubVulnerabilities2Db won't inflate the type (which is what caused the failure--no DI registration). Inflating the type properly wouldn't be the right fix here as its dependencies aren't lightweight and it's unused in this utility. So we need an optional parameter and failsafes for nulls in PackageService.\r\n\r\nSome formatting fixes resulted from a copy/paste operation. Why not."},{"Id":"13102407715","Type":"IssuesEvent","CreatedAt":"2020-08-04T06:38:31","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8138","RelatedDescription":"Opened issue \"Dependency Injection broken on GitHubVulnerabilities2Db\" (#8138) at NuGet/NuGetGallery","RelatedBody":"This change: https://github.com/NuGet/NuGetGallery/pull/8112, specifically [here](https://github.com/NuGet/NuGetGallery/pull/8112/files#diff-b744cb446049fcb4c87628c3d31a964fR39) has introduced a new parameter into the PackageService constructor, breaking dependency injection in GitHubVulnerabilities2Db.\r\n\r\nSalient part of exception:\r\nNone of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\\r\\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor \r\n'Void .ctor(\r\nNuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], \r\nNuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], \r\nNuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], \r\nNuGetGallery.Auditing.IAuditingService, \r\nNuGetGallery.ITelemetryService, \r\nNuGetGallery.Security.ISecurityPolicyService, \r\nNuGetGallery.IEntitiesContext, \r\nNuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.)\"}\r\n\r\nFull trace:\r\nJob Failed to Run: Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = AdvisoryCollector (ReflectionActivator), Services = [GitHubVulnerabilities2Db.Collector.IAdvisoryCollector], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = AdvisoryIngestor (ReflectionActivator), Services = [GitHubVulnerabilities2Db.Ingest.IAdvisoryIngestor], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageVulnerabilityService (ReflectionActivator), Services = [NuGetGallery.IPackageVulnerabilityService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = AdvisoryIngestor (ReflectionActivator), Services = [GitHubVulnerabilities2Db.Ingest.IAdvisoryIngestor], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageVulnerabilityService (ReflectionActivator), Services = [NuGetGallery.IPackageVulnerabilityService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageVulnerabilityService (ReflectionActivator), Services = [NuGetGallery.IPackageVulnerabilityService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageUpdateService (ReflectionActivator), Services = [NuGetGallery.IPackageUpdateService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: An error occurred during the activation of a particular registration. See the inner exception for details. Registration: Activator = PackageService (ReflectionActivator), Services = [NuGetGallery.IPackageService], Lifetime = Autofac.Core.Lifetime.CurrentScopeLifetime, Sharing = None, Ownership = OwnedByLifetimeScope ---> None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'. (See inner exception for details.) ---> Autofac.Core.DependencyResolutionException: None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'NuGetGallery.PackageService' can be invoked with the available services and parameters:\r\nCannot resolve parameter 'NuGetGallery.IContentObjectService contentObjectService' of constructor 'Void .ctor(NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.PackageRegistration], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Package], NuGetGallery.IEntityRepository`1[NuGet.Services.Entities.Certificate], NuGetGallery.Auditing.IAuditingService, NuGetGallery.ITelemetryService, NuGetGallery.Security.ISecurityPolicyService, NuGetGallery.IEntitiesContext, NuGetGallery.IContentObjectService)'.\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.GetValidConstructorBindings(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 160\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.InstanceLookup.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 168\r\n   at Autofac.Core.Activators.Reflection.AutowiringParameter.<>c__DisplayClass0_0.<CanSupplyValue>b__0() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\AutowiringParameter.cs:line 57\r\n   at Autofac.Core.Activators.Reflection.ConstructorParameterBinding.Instantiate() in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ConstructorParameterBinding.cs:line 116\r\n   at Autofac.Core.Activators.Reflection.ReflectionActivator.ActivateInstance(IComponentContext context, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Activators\\Reflection\\ReflectionActivator.cs:line 120\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 115\r\n   --- End of inner exception stack trace ---\r\n   at Autofac.Core.Resolving.InstanceLookup.Activate(IEnumerable`1 parameters, Object& decoratorTarget) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 133\r\n   at Autofac.Core.Resolving.InstanceLookup.Execute() in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\InstanceLookup.cs:line 82\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 130\r\n   at Autofac.Core.Resolving.ResolveOperation.Execute(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Resolving\\ResolveOperation.cs:line 92\r\n   at Autofac.Core.Lifetime.LifetimeScope.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Lifetime\\LifetimeScope.cs:line 276\r\n   at Autofac.Core.Container.ResolveComponent(IComponentRegistration registration, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\Core\\Container.cs:line 170\r\n   at Autofac.ResolutionExtensions.TryResolveService(IComponentContext context, Service service, IEnumerable`1 parameters, Object& instance) in C:\\projects\\autofac\\src\\Autofac\\ResolutionExtensions.cs:line 1041\r\n   at Autofac.ResolutionExtensions.ResolveService(IComponentContext context, Service service, IEnumerable`1 parameters) in C:\\projects\\autofac\\src\\Autofac\\ResolutionExtensions.cs:line 871\r\n   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetRequiredService(Type serviceType) in C:\\projects\\autofac-extensions-dependencyinjection\\src\\Autofac.Extensions.DependencyInjection\\AutofacServiceProvider.cs:line 71\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at GitHubVulnerabilities2Db.Job.<Run>d__1.MoveNext() in C:\\Repos\\NuGetGallery\\src\\GitHubVulnerabilities2Db\\Job.cs:line 34\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.JobRunner.<JobLoop>d__14.MoveNext() in E:\\A\\_work\\4806\\s\\src\\NuGet.Jobs.Common\\JobRunner.cs:line 263"},{"Id":"13091956421","Type":"PullRequestEvent","CreatedAt":"2020-08-03T07:40:37","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7706","RelatedDescription":"Merged pull request \"Add command to compare PackageVulnerabilities to GitHub API\" (#7706) at NuGet/NuGetGallery","RelatedBody":"https://github.com/nuget/nugetgallery/issues/7685"},{"Id":"13090162851","Type":"IssuesEvent","CreatedAt":"2020-08-03T02:21:23","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8116","RelatedDescription":"Closed issue \"Take gitHubDatabaseKey out of vulnerability category entries\" (#8116) at NuGet/NuGetGallery","RelatedBody":"No need to reflow after this change. This value isn't being propagated to metadata, and won't be documented, so it can just be the format for future catalog updates."},{"Id":"13089010351","Type":"IssuesEvent","CreatedAt":"2020-08-02T20:25:08","Actor":"xsavron","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8137","RelatedDescription":"Closed issue \"Problem , nuget spec doesn't detected csproj\" (#8137) at NuGet/NuGetGallery","RelatedBody":"Hello! I ran into a problem  nuget spec doesn't detected .csproj .\r\n\r\nthat's my .csproj file\r\n\r\n`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <PackageId>Test_Nuget</PackageId>\r\n    <Version>1.0.0.1</Version>\r\n    <Authors>name</Authors>\r\n    <Company>company</Company>\r\n    <IsWebBootstrapper>false</IsWebBootstrapper>\r\n    <PublishUrl>publish\\</PublishUrl>\r\n    <Install>true</Install>\r\n    <InstallFrom>Disk</InstallFrom>\r\n    <UpdateEnabled>false</UpdateEnabled>\r\n    <UpdateMode>Foreground</UpdateMode>\r\n    <UpdateInterval>7</UpdateInterval>\r\n    <UpdateIntervalUnits>Days</UpdateIntervalUnits>\r\n    <UpdatePeriodically>false</UpdatePeriodically>\r\n    <UpdateRequired>false</UpdateRequired>\r\n    <MapFileExtensions>true</MapFileExtensions>\r\n    <ApplicationRevision>0</ApplicationRevision>\r\n    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>\r\n    <UseApplicationTrust>false</UseApplicationTrust>\r\n    <BootstrapperEnabled>true</BootstrapperEnabled>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <StartupObject>\r\n    </StartupObject>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n  <PropertyGroup>\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{D93AC967-6EFD-4C44-9959-1701ABE13D17}</ProjectGuid>\r\n    <OutputType>Exe</OutputType>\r\n    <RootNamespace>ConsoleApp4</RootNamespace>\r\n    <AssemblyName>ConsoleApp4</AssemblyName>\r\n    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>\r\n    <FileAlignment>512</FileAlignment>\r\n    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>\r\n    <Deterministic>true</Deterministic>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\Debug\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Core\" />\r\n    <Reference Include=\"System.Xml.Linq\" />\r\n    <Reference Include=\"System.Data.DataSetExtensions\" />\r\n    <Reference Include=\"Microsoft.CSharp\" />\r\n    <Reference Include=\"System.Data\" />\r\n    <Reference Include=\"System.Net.Http\" />\r\n    <Reference Include=\"System.Xml\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.cs\" />\r\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"App.config\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <BootstrapperPackage Include=\".NETFramework,Version=v4.6\">\r\n      <Visible>False</Visible>\r\n      <ProductName>Microsoft .NET Framework 4.6 %28x86 and x64%29</ProductName>\r\n      <Install>true</Install>\r\n    </BootstrapperPackage>\r\n    <BootstrapperPackage Include=\"Microsoft.Net.Framework.3.5.SP1\">\r\n      <Visible>False</Visible>\r\n      <ProductName>.NET Framework 3.5 SP1</ProductName>\r\n      <Install>false</Install>\r\n    </BootstrapperPackage>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>`\r\n\r\nafter spec i have create .nupkg but it's empty\r\n\r\n`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <owners>$author$</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\r\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\r\n    <description>$description$</description>\r\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\r\n    <copyright>Copyright 2020</copyright>\r\n    <tags>Tag1 Tag2</tags>\r\n  </metadata>\r\n</package>`\r\n\r\nwhat am I doing wrong or what might be the problem?"},{"Id":"13078776090","Type":"IssuesEvent","CreatedAt":"2020-08-01T00:40:26","Actor":"xsavron","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8137","RelatedDescription":"Opened issue \"Problem\" (#8137) at NuGet/NuGetGallery","RelatedBody":"Hello! I ran into a problem  nuget spec doesn't detected .csproj .\r\n\r\nthat's my .csproj file\r\n\r\n`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <PackageId>Test_Nuget</PackageId>\r\n    <Version>1.0.0.1</Version>\r\n    <Authors>name</Authors>\r\n    <Company>company</Company>\r\n    <IsWebBootstrapper>false</IsWebBootstrapper>\r\n    <PublishUrl>publish\\</PublishUrl>\r\n    <Install>true</Install>\r\n    <InstallFrom>Disk</InstallFrom>\r\n    <UpdateEnabled>false</UpdateEnabled>\r\n    <UpdateMode>Foreground</UpdateMode>\r\n    <UpdateInterval>7</UpdateInterval>\r\n    <UpdateIntervalUnits>Days</UpdateIntervalUnits>\r\n    <UpdatePeriodically>false</UpdatePeriodically>\r\n    <UpdateRequired>false</UpdateRequired>\r\n    <MapFileExtensions>true</MapFileExtensions>\r\n    <ApplicationRevision>0</ApplicationRevision>\r\n    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>\r\n    <UseApplicationTrust>false</UseApplicationTrust>\r\n    <BootstrapperEnabled>true</BootstrapperEnabled>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <StartupObject>\r\n    </StartupObject>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n  <PropertyGroup>\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{D93AC967-6EFD-4C44-9959-1701ABE13D17}</ProjectGuid>\r\n    <OutputType>Exe</OutputType>\r\n    <RootNamespace>ConsoleApp4</RootNamespace>\r\n    <AssemblyName>ConsoleApp4</AssemblyName>\r\n    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>\r\n    <FileAlignment>512</FileAlignment>\r\n    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>\r\n    <Deterministic>true</Deterministic>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\Debug\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Core\" />\r\n    <Reference Include=\"System.Xml.Linq\" />\r\n    <Reference Include=\"System.Data.DataSetExtensions\" />\r\n    <Reference Include=\"Microsoft.CSharp\" />\r\n    <Reference Include=\"System.Data\" />\r\n    <Reference Include=\"System.Net.Http\" />\r\n    <Reference Include=\"System.Xml\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.cs\" />\r\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"App.config\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <BootstrapperPackage Include=\".NETFramework,Version=v4.6\">\r\n      <Visible>False</Visible>\r\n      <ProductName>Microsoft .NET Framework 4.6 %28x86 and x64%29</ProductName>\r\n      <Install>true</Install>\r\n    </BootstrapperPackage>\r\n    <BootstrapperPackage Include=\"Microsoft.Net.Framework.3.5.SP1\">\r\n      <Visible>False</Visible>\r\n      <ProductName>.NET Framework 3.5 SP1</ProductName>\r\n      <Install>false</Install>\r\n    </BootstrapperPackage>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>`\r\n\r\nafter spec i have create .nupkg but it's empty\r\n\r\n`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <owners>$author$</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\r\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\r\n    <description>$description$</description>\r\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\r\n    <copyright>Copyright 2020</copyright>\r\n    <tags>Tag1 Tag2</tags>\r\n  </metadata>\r\n</package>`\r\n\r\nwhat am I doing wrong or what might be the problem?"},{"Id":"13078227977","Type":"IssuesEvent","CreatedAt":"2020-07-31T22:54:36","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8136","RelatedDescription":"Opened issue \"Breadcrumb link to package details from Report Abuse page doesn't for packages with additional build metadata in version string\" (#8136) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n**Applies to packages with additional metadata in their version string.**\r\n\r\nAfter clicking on \"Report\" link on package details page, breadcrumb to get back to the package details page doesn't work if the package version string has additional build metadata. This is likely because the additional build metadata is appended to the URL when it shouldn't be.\r\n\r\nExample of version string with additional build metadata:\r\n![image](https://user-images.githubusercontent.com/15097183/89084748-dcde9400-d345-11ea-9f24-fb3e1dad28e2.png)\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to https://www.nuget.org/packages/NuGet.Packaging/5.6.0/ReportAbuse\r\n2. Click breadcrumb back to the package details page in the top left corner\r\n![image](https://user-images.githubusercontent.com/15097183/89083260-4f9b3f80-d345-11ea-8a96-95bb030f8667.png)\r\n\r\n3. Get Error 404\r\n4. See that it works if you remove the additional build metadata from the URL\r\n\r\nURL with metadata (wrong): https://www.nuget.org/packages/NuGet.Packaging/5.6.0%2b636570e68732c1f718ede9ca07802d7b1cc69aa0\r\n\r\nCorrect URL: https://www.nuget.org/packages/NuGet.Packaging/5.6.0\r\n\r\n### Expected behavior\r\nBreadcrumb link back to package details page should work.\r\n\r\n### GIF of bug repro with NuGet.Packaging\r\n![Link back from Report page doesn't work with package versions with build metadata](https://user-images.githubusercontent.com/15097183/89083178-fe8b4b80-d344-11ea-9390-c97dedb8883a.gif)\r\n\r\n### Additional context\r\nAdditional examples for repro:\r\n- https://www.nuget.org/packages/Lib.Build/5.0.0-preview.2.1%2b5cb4e1e\r\n- https://www.nuget.org/packages/ConfigHandler/1.2.1%2b42c1ae0"},{"Id":"13076271729","Type":"IssuesEvent","CreatedAt":"2020-07-31T18:39:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8078","RelatedDescription":"Closed issue \"[Dependents] Investigate query performance issue\" (#8078) at NuGet/NuGetGallery","RelatedBody":"We shipped the package dependents feature to PROD but noticed high query times. After some conversations with the SQL Server team this is related to the query plan that is being selected via parameter sniffing.\r\n\r\nWe got into a situation in PROD where there are at least two wildly different query plans that are appropriate for their respective parameter values. For example, the query plan of sniffed from Newtonsoft.Json looks totally different from BaseTestPackage. The performance when the query plans get mixed up is unacceptable. For example, using a BaseTestPackage parameter value for the Newtonsoft.Json query plan results in a query that takes longer than 30 seconds.\r\n\r\nSome options:\r\n\r\n1. Use `OPTION ( OPTIMIZE FOR UNKNOWN )` - this will cause very depended upon packages like Newtonsoft.Json to take 1-3 seconds per query. Maybe this okay with caching.\r\n1. Use `OPTION ( RECOMPILE )` and allow every parameter value and query execution to evaluate its own query plan.\r\n1. Investigate other options with the SQL Server team (perhaps there are new options coming out or we are missing something)\r\n\r\nMy vote is to try option 2 in PROD and verify DB and App Service resource utilization is nominal.\r\n\r\nThere are extensions to Entity Framework that allow you to put `OPTION ( ... )` in then generated SQL:\r\nhttps://stackoverflow.com/a/40387038\r\nhttps://stackoverflow.com/a/10918838\r\n\r\nQuery plans:  [query-plans.zip](https://github.com/NuGet/NuGetGallery/files/4854625/query-plans.zip)\r\n\r\n## Top 5 query\r\n\r\n**Optimal for small packages:**\r\n![image](https://user-images.githubusercontent.com/94054/86181226-79f9a300-bae2-11ea-97c0-3f90caace6b6.png)\r\n\r\n**Optimal for Newtonsoft.Json:**\r\n![image](https://user-images.githubusercontent.com/94054/86181273-909ffa00-bae2-11ea-95aa-0cfdcd4541a6.png)\r\n\r\n## Total count query\r\n\r\n**Optimal for small packages:**\r\n![image](https://user-images.githubusercontent.com/94054/86181343-b0372280-bae2-11ea-9d8c-c370446af731.png)\r\n\r\n**Optimal for Newtonsoft.Json:**\r\n![image](https://user-images.githubusercontent.com/94054/86181363-b9c08a80-bae2-11ea-9e36-cd70f3596c70.png)\r\n\r\n"},{"Id":"13076037733","Type":"IssuesEvent","CreatedAt":"2020-07-31T18:12:49","Actor":"vsfeedback","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8135","RelatedDescription":"Opened issue \"Marketplace data improvement for publishers\" (#8135) at NuGet/NuGetGallery","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/566663/marketplace-data-improvement-for-publishers.html)._\n\n---\n<p>Hello </p> <p>Is it possible to get historical data displayed for publishers - from the time the extension was published. Currently it is limited to past 180 days window, which is very limiting. Can you expand that to as much as possible. </p><p></p><p>I am primarily interested in two improvements</p><p>  \n</p><p>1. Extending the current report window (180 days). Idealy this window would be 1 year +... if not, since the very first day extension was introduced on the marketplace.</p> <p>  \n</p><p>2. Ability to filter by geography - per country and continent... when this info is known. I am OK with having a pool of people who are also 'unknown' if geo info is not available. </p><p>Thanks</p>\n\n---\n### Original Comments\n\n#### Jane Wu [MSFT] on 5/14/2019, 01:52 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>\n#### Mads Kristensen [MSFT] on 6/10/2019, 11:20 AM: \n\n<p>Your suggestion has been queued up for prioritization.  Feature suggestions are prioritized based on the value to our broader developer community and the product roadmap. We may not be able to pursue this one immediately, but we will continue to monitor it up to 90 days for community input</p>\n\n#### Stefan Stefanov on 7/2/2019, 10:50 AM: \n\n<p>I also believe this would be very beneficial, as the current date is not enough to make any conclusions.</p>\n\n#### Gabriel Torok on 12/2/2019, 06:10 AM: \n\n<p>Likewise, this would be helpful for us as well.</p>\n\n#### Katie DeSantis on 12/2/2019, 06:32 AM: \n\n<p>We too would benefit from this information</p>\n\n#### Dan Wright on 12/2/2019, 08:44 AM: \n\n<p>This would be really beneficial for us too. </p><p>Thanks. </p>\n\n#### andre rolle on 12/2/2019, 03:35 PM: \n\n<p>Yes we definitely need this information to help improve our capabilities in improving how we create and published our application in visual studios marketplace.</p>\n\n#### andre rolle on 12/2/2019, 03:49 PM: \n\n<p>The management of Microsoft would change there mind in extending the 90 days to at least 1 year if possible. We as developers and others who interact with creating and publishing an application or software to visual studios marketplace. Really need this information to improve everything we do to make our app 100% functional an smooth going.</p>\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13112228031","Type":"IssuesEvent","CreatedAt":"2020-08-05T01:31:58","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9807","RelatedDescription":"Closed issue \"Spike: Explore speeding up nupkg extraction using mmap/CreateFileMapping\" (#9807) at NuGet/Home","RelatedBody":"I was playing around with tarball extraction in Rust, trying to speed it up, when someone suggested using [`mmap`](https://en.wikipedia.org/wiki/Mmap) for the destination files before writing to them (Windows version is [`CreateFileMapping`](https://docs.microsoft.com/en-us/windows/win32/memory/creating-a-file-mapping-object)). This resulted in a 4-5x speedup of a 7.5mb tarball containing 65k files -- going from 17-22s extraction times to a mere 3.5-4.5s.\r\n\r\nI believe it's worth exploring doing this ourselves for .nupkg extraction during Restore -- it's unclear whether the extraction benefit is mainly for many small files, or whether fewer large files can still take advantage of this, but it's worth a shot anyway, for that kind of improvement!"},{"Id":"13112094697","Type":"IssuesEvent","CreatedAt":"2020-08-05T01:05:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8024","RelatedDescription":"Closed issue \"Clearly defined review process\" (#8024) at NuGet/Home","RelatedBody":"Discussed during our retrospective. \r\nClearer problem statements, internal/external review process.\r\n\r\n//cc @NuGet/nuget-client @anangaur @rrelyea "},{"Id":"13112037958","Type":"IssuesEvent","CreatedAt":"2020-08-05T00:55:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9874","RelatedDescription":"Closed issue \" Read the runtime identifier graph through the TargetFrameworkInformation item, improve the test coverage of dotnet tool scenarios.\" (#9874) at NuGet/Home","RelatedBody":""},{"Id":"13111455551","Type":"IssuesEvent","CreatedAt":"2020-08-04T23:04:35","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9860","RelatedDescription":"Closed issue \"[Test Failure] VS gave a wrong constraint warning when there are no package constraint in the packages.config file after updating packages \" (#9860) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6753\r\nVS Version: Master\\30328.112\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tOpen VS, click “Create a new project” button and search template “ASP.NET Web Site (Razor v3)” in the filter.\r\n2.\tCreate the project, open the PM UI of the project and go to the “Updates” tab.\r\n3.\tCheck “select all packages” and click “Update” button.\r\n4.\tBuild the project.\r\n## Expected\r\nThere is no warning.\r\n## Actual\r\nThere is a wrong constraint warning since there are no package constraint in the packages.config file as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/88785603-feb00d80-d1c3-11ea-8100-f983c7f91f5b.png)\r\n## Note\r\n1.\tIt didn’t repro on D16.7\\30323.103 with Implicit NuGet Client Release-5.7.x\\5.7.0.6726.\r\n2.     It started to repro from NuGet Client build Dev\\5.8.0.6741.\r\n\r\n"},{"Id":"13110496398","Type":"IssuesEvent","CreatedAt":"2020-08-04T20:47:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9874","RelatedDescription":"Opened issue \" Read the runtime identifier graph through the TargetFrameworkInformation item, improve the test coverage of dotnet tool scenarios.\" (#9874) at NuGet/Home","RelatedBody":""},{"Id":"13107949516","Type":"IssuesEvent","CreatedAt":"2020-08-04T16:01:28","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9784","RelatedDescription":"Closed issue \"Undelete NuGet.Frameworks.NuGetFramework.NuGetFramework(string frameworkIdentifier, System.Version frameworkVersion, string frameworkProfile) -> void\" (#9784) at NuGet/Home","RelatedBody":"I was rebasing my old [PublicAPIAnalyzer branch](https://github.com/NuGet/NuGet.Client/pull/3425), and discovered that:\r\n\r\n> C:\\git\\NuGet.Client\\src\\NuGet.Core\\NuGet.Frameworks\\PublicApi\\netstandard2.0\\PublicAPI.Shipped.txt(191,1,191,141): error RS0017: Symbol 'NuGet.Frameworks.NuGetFramework.NuGetFramework(string frameworkIdentifier, System.Version frameworkVersion, string frameworkProfile) -> void' is part of the declared API, but is either not public or could not be found\r\n\r\nThis was accidentally deleted as part of https://github.com/NuGet/NuGet.Client/pull/3479\r\n\r\nWe need to bring it back so as not to break assemblies/projects using `NuGet.Frameworks` as an SDK."},{"Id":"13107273330","Type":"IssuesEvent","CreatedAt":"2020-08-04T15:02:02","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9020","RelatedDescription":"Reopened issue \"restore: Received an unexpected EOF or 0 bytes from the transport stream\" (#9020) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nproduct used (mcr.microsoft.com/dotnet/core/sdk:3.1-buster):\r\n\r\ndotnet.exe --version:\r\n```\r\n   docker run --rm mcr.microsoft.com/dotnet/core/sdk:3.1-buster dotnet --version\r\n   3.1.100\r\n```\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n```   \r\n   docker-desktop on windows 10 \r\n   OS Name:                   Microsoft Windows 10 Pro Insider Preview\r\n   OS Version:                10.0.19536 N/A Build 19536\r\n\r\n```\r\n## Detailed repro steps so we can see the same problem\r\n\r\nrestore a project from a solution with a big number of nuget packages and projects (>50 project), no issues for smaller solutions.\r\n\r\n## Other suggested things\r\nthis works with `--disable-parallel` flag but it takes >20min to complete \r\n\r\n### Logs\r\n[normal verbosity -v:n](https://gist.github.com/obeyda/8eb5e5df3b432ac4537cc3401159a2bc)\r\n[diag verbosity -v:d](https://gist.github.com/obeyda/38e44ce028c200d64854531cfad2495f)\r\n"},{"Id":"13104815442","Type":"IssuesEvent","CreatedAt":"2020-08-04T10:59:51","Actor":"captmomo","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9743","RelatedDescription":"Closed issue \"NuGet appending extra '.' to feedurl -- in azure artifacts scenario.\" (#9743) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nusing  dotnet test, when the project builds and restores packages, Nuget adds an extra '.' to the feed url:\r\n{\"count\":1,\"value\":{\"Message\":\"No HTTP resource was found that matches the request URI 'https://pkgs.dev.azure.com/_packaging/MicroserviceAPIHelper/nuget/v3/index.json.'.\"}}\r\n\r\nWorked before? If so, with which NuGet version:\r\nYes, I'm using the same YAML for different projects. Only this one fails.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\nC:\\Program Files\\dotnet\\sdk\\3.1.102\\NuGet.targets(123,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/ArcstonePteLtd/DEVELOPMENT/_packaging/MicroserviceAPIHelper/nuget/v3/index.json. [C:\\Users\\Administrator\\Desktop\\AgentPool DEVOPS\\_work\\22\\s\\OrchardCore.EventTask.sln]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.102\\NuGet.targets(123,5): error :   Response status code does not indicate success: 404 (Not Found - VS800075: The project with id 'vstfs:///Classification/TeamProject/4b99b311-777c-40ba-aa84-7a45b64d3b89' does not exist, or you do not have permission to access it. (DevOps Activity ID: B59435BA-FE3D-4DDC-B501-D43DE75886E0)). [C:\\Users\\Administrator\\Desktop\\AgentPool DEVOPS\\_work\\22\\s\\OrchardCore.EventTask.sln]\r\n\r\n\r\nI've tried the following:\r\n>Hi, I missed to clear this out.\r\nThere is an option \"Limit job authorization scope to current project\" in\r\n\"Project Settings\" > Pipelines > Settings.\r\nThis option was enabled by default, if it's disabled, It will work.\r\n\r\nAnd also adding the Build Service as a contributor to the feed.\r\n"},{"Id":"13104704599","Type":"IssuesEvent","CreatedAt":"2020-08-04T10:46:42","Actor":"v-nancyj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9873","RelatedDescription":"Opened issue \"[Test Failure] Error NETSDK1005 occurred when running command ‘msbuild /t:build /restore’ in VS Builds Tools \" (#9873) at NuGet/Home","RelatedBody":"## Details about Problem\r\n**VS BuildTools Version:** Master\\30403.137 \r\n**NuGet Build Tools SKU Version:** Dev\\5.8.0.6761\r\n\r\n## Installation steps: \r\n1. OS: Windows-10-Enterprise-RS5.\r\n2. Install VS BuildTools Master\\30403.137 from: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3943992&view=ms.vss-build-web.run-extensions-tab\r\n3. Install NuGet Build Tools SKU vsix:\r\n<1>. \tGet the Build Tools vsix from: `\\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\Dev\\5.8.0.6761\\artifacts\\VS15\\Microsoft.VisualStudio.NuGet.BuildTools.vsix` \r\n<2>. \tExtract the vsix locally.\r\n<3>. \tDelete the content of `C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet`\r\n<4>. \tGo to the extracted folder and copy the contents of the folder: `Contents\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\`\r\n<5>. \tCopy those files to `C:\\Program Files (x86)\\ Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet`\r\n\r\n## Repro steps: \r\n1. Create a Console App (.NET Core) project with **Target Framework is net5.0** **(Create the project in VS Master\\30403.137 in this case)**.\r\n2. Install some package to the project.\r\n3. Open VS BuildTools and cd to the project path.\r\n4. Run `msbuild /t:restore`.\r\n5. Run `msbuild /t:build /restore`.\r\n\r\n## Expected:\r\nAll of these should succeed without any error.\r\n\r\n## Actual:\r\nError NETSDK1005 occurred when running command `msbuild /t:build /restore` as below screenshot.\r\n![0804](https://user-images.githubusercontent.com/20632775/89284964-213d9d00-d682-11ea-9827-22272141beae.png)\r\n\r\n## Error Message:\r\n```\r\n\"C:\\Test\\ConsoleNetCore\\ConsoleNetCore\\ConsoleNetCore.csproj\" (build target) (1:7) ->\r\n(ResolvePackageAssets target) ->\r\n  C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.7.20366.6\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResol\r\nution.targets(241,5): error NETSDK1005: Assets file 'C:\\Test\\ConsoleNetCore\\ConsoleNetCore\\obj\\project.assets.json' doe\r\nsn't have a target for '.NETCoreApp,Version=v5.0'. Ensure that restore has run and that you have included 'net5.0' in t\r\nhe TargetFrameworks for your project. [C:\\Test\\ConsoleNetCore\\ConsoleNetCore\\ConsoleNetCore.csproj]\r\n```\r\n## Notes: \r\n1. The issue doesn’t repro on .NET Framework and .NET Standard project.\r\n2. The issue doesn’t repro when using a .NET Core project with Target Framework is **net3.1**.\r\n3. The issue doesn’t repro on VS Build Tools Master\\30328.112 + NuGet Build Tools Vsix Dev\\5.8.0.6753.\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2020-08-05T05:30:42.949616Z","RunDurationInMilliseconds":1789}