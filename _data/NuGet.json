{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12525077869","Type":"PullRequestEvent","CreatedAt":"2020-06-04T01:32:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8023","RelatedDescription":"Merged pull request \"[Hotfix] Black Lives Matter\" (#8023) at NuGet/NuGetGallery","RelatedBody":"Full width:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/83702238-f4590500-a5c0-11ea-9b1d-c3cdecbe91a1.png)\r\n\r\nSmall window:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/83702289-24080d00-a5c1-11ea-9abc-36a7b7b42eb2.png)\r\n"},{"Id":"12524792457","Type":"PullRequestEvent","CreatedAt":"2020-06-04T00:38:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8023","RelatedDescription":"Opened pull request \"Black Lives Matter\" (#8023) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/83702238-f4590500-a5c0-11ea-9b1d-c3cdecbe91a1.png)\r\n"},{"Id":"12519977385","Type":"IssuesEvent","CreatedAt":"2020-06-03T15:11:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8022","RelatedDescription":"Opened issue \"Detect disconnected client when package upload fails and return 4XX\" (#8022) at NuGet/NuGetGallery","RelatedBody":"### Bug description\r\n\r\nWhen the client disconnects during package push (perhaps Ctrl + C on nuget.exe) we get an exception and return 500. Even though the client has disconnected, this gets recorded as a 500, affecting SLO/success metrics.\r\n\r\n### Reproduction steps\r\n\r\n1. Run latest gallery locally.\r\n1. Push a very large package to your local gallery.\r\n1. While gallery is reading the upload, terminate the upload on the client side.\r\n\r\n### Expected behavior\r\n\r\nA 400-level status code should be recorded since the client caused the error.\r\n\r\n### Actual behavior\r\n\r\nA `PackagePushFailure` metric is recorded and HTTP 500 is returned.\r\n\r\nFor recent instances in PROD (500 such requests in past 7 days) look for problem ID: `System.Runtime.InteropServices.COMException at NuGetGallery.ApiController.ReadPackageFromRequest`.\r\n\r\nThis 500 shows up in our failure reporting even though it was not a failure witnessed by the user and is not caused by our app or our dependencies.\r\n\r\n### Additional context\r\n\r\nIt seems like we can detect this case with `Response.IsClientConnected`.\r\nhttps://stackoverflow.com/a/12386676"},{"Id":"12510493125","Type":"IssuesEvent","CreatedAt":"2020-06-02T18:45:40","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7922","RelatedDescription":"Closed issue \"Packages with duplicate entries in zip files are not blocked\" (#7922) at NuGet/NuGetGallery","RelatedBody":"This created several issues: \r\nhttps://github.com/NuGet/NuGetGallery/issues/7921\r\nhttps://github.com/NuGet/NuGetGallery/issues/7744"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12525113340","Type":"IssuesEvent","CreatedAt":"2020-06-04T01:39:01","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9645","RelatedDescription":"Opened issue \"Missing file global.json entry in NuGet.sln file\" (#9645) at NuGet/Home","RelatedBody":"global.json file shown on attached image doesn't exist on `src\\NuGet.Core\\global.json` path.\nMaybe be better to remove this entry from solution file.\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/497cfa30-99f7-4451-aee7-611a2573d480)"},{"Id":"12522595220","Type":"IssuesEvent","CreatedAt":"2020-06-03T19:28:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9644","RelatedDescription":"Closed issue \"Make noop restore faster - speed up evaluations by calling MSBuild Static Graph apis (dotnet.exe)\" (#9644) at NuGet/Home","RelatedBody":"Dup of https://github.com/NuGet/Home/issues/8791, for release notes purposes. \r\n\r\nWhile the msbuild side was added earlier, the dotnet.exe side was added in 3.1.400, 5.7. \r\n\r\nCreating this issue with the right metadata and release. "},{"Id":"12522587739","Type":"IssuesEvent","CreatedAt":"2020-06-03T19:27:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9644","RelatedDescription":"Opened issue \"Make noop restore faster - speed up evaluations by calling MSBuild Static Graph apis (dotnet.exe)\" (#9644) at NuGet/Home","RelatedBody":"Dup of https://github.com/NuGet/Home/issues/8791, for release notes purposes. \r\n\r\nWhile the msbuild side was added earlier, the dotnet.exe side was added in 3.1.400, 5.7. \r\n\r\nCreating this issue with the right metadata and release. "},{"Id":"12518875287","Type":"IssuesEvent","CreatedAt":"2020-06-03T13:38:01","Actor":"pfeigl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9643","RelatedDescription":"Opened issue \"ContentFiles from Link'ed Files not in correct folder\" (#9643) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nmsbuild / VS\r\n\r\nNuGet version (x.x.x.xxx): 5.6.0.5\r\n\r\ndotnet.exe --version (if appropriate): 3.1.300\r\n\r\nVS version (if appropriate): 16.6.1\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version: no\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nWhen adding contentFiles into a nuget package via the <Content> node inside a CSPROJ file, the correct subfolder is not taken into consideration and the file is put into the `contentFiles\\{lang}\\{arch}\\` root folder.\r\nThis only happens for elements with a `<Link>`'ed reference. Local files are put into the respective folders correctly.\r\n\r\nThis is how my csproj looks like\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Remove=\"SubFolder\\LocalFile.txt\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Content Include=\"..\\LinkedFile.txt\" Link=\"SubFolder\\LinkedFile.txt\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Content Include=\"SubFolder\\LocalFile.txt\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nThis is how it looks in VisualStudio\r\n![image](https://user-images.githubusercontent.com/237891/83642729-81935e00-a5af-11ea-87b3-a0177d7c35d9.png)\r\n\r\nAnd this is how it looks like in the final nuget package\r\n![image](https://user-images.githubusercontent.com/237891/83642795-940d9780-a5af-11ea-91bc-92709d647dfe.png)\r\n\r\nMy understanding is, that this is a bug and that the folder structure created via the csrpoj file should be the same within `contentFiles`, no matter whether it's a linked or local file.\r\n\r\n...\r\n\r\n\r\n### Sample Project\r\n[ContentFilesFromLinksMissingFolder.zip](https://github.com/NuGet/Home/files/4723641/ContentFilesFromLinksMissingFolder.zip)\r\n\r\n\r\n"},{"Id":"12517426378","Type":"IssuesEvent","CreatedAt":"2020-06-03T11:07:48","Actor":"DhanvannthVP","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9642","RelatedDescription":"Opened issue \" error CS0234: The type or namespace name 'Practices' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?) \" (#9642) at NuGet/Home","RelatedBody":"i am new to nuget. i am downloading the packages from packages.config. \r\n\r\nusing IBM.Data.DB2; could see  in .csfile.\r\n\r\nMentioned in packages.config to pull it from artifactory\r\n  <package id=\"IBM.Data.DB2\" version=\"10.0.5.5\" targetFramework=\"net451\" />\r\n\r\n error CS0234: The type or namespace name 'Practices' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?) \r\nIt s downloading but am getting same error CS0234. please help me what is the error..\r\n\r\nEven  IBM.Data.DB2.dll in artifactory. how to find the target framework and mention in packages.config\r\n\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"12516754691","Type":"IssuesEvent","CreatedAt":"2020-06-03T09:55:22","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9641","RelatedDescription":"Opened issue \"[Bug Bash][Test Failure] Error “Collection was modified; enumeration operation may not execute.” occurred when first updating package in PMC for the solution included multiple projects\" (#9641) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.7.0.6632\r\nVS Version: Master\\30202.132\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tCreate a solution with multiple projects included.\r\n2.\tInstall a package (not the latest version) with PackageReference format into every project.\r\n3.\tOpen PMC and execute command “Update-package [PackageID]”.\r\n## Expected\r\nThe package updated successfully without any error.\r\n## Actual\r\nError “Collection was modified; enumeration operation may not execute.” occurred when first updating the package as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/83622972-4c910680-a5c3-11ea-844d-2f95e6876efe.png)\r\n## Note\r\n1.\tThe error doesn’t repro and the package can be updated successfully when executing the same command for the second time.\r\n2.\tIt only repro on the solution with multiple projects, doesn’t repro on single project.\r\n3.\tIt only repro with PackageReference format, doesn’t repro on Packages.config format.\r\n4.\tIt irepro on 16.6 Preview2 – D16.6\\29924.181 (implicit NuGet Client 5.6.0.6489).\r\n\r\n"},{"Id":"12515319042","Type":"IssuesEvent","CreatedAt":"2020-06-03T07:27:02","Actor":"Adebeer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9640","RelatedDescription":"Opened issue \"Azure DevOps msbuild pipeline only works with Nuget 4.7 restore, not 5.x\" (#9640) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nUpgraded nuget packages in Service fabric solution containing mix of .net core 3.1 and .net 4.7.2 projects. \r\nOn Azure DevOps MS Build for sln fails with misleading `Error NETSDK1004: Assets file 'D:\\a\\1\\s\\Src\\myproj\\obj\\project.assets.json' not found` when using Nuget 5.x, however works fine with Nuget 4.7. \r\nMy other Service fabric solutions consisting of pure .net standard/core projects work fine on 5.x.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nIn Azure DevOps build pipeline, using \r\nNuGet 5.x via tool installer (v.0.169.1 task) - which installed 5.6.0, \r\nfollowed by \"Nuget restore\" (v2.169.1 task) - nuget.exe version 5.6.0.6.591. \r\nfollowed by \"dotnet restore\" (v.2.169.1 task)\r\nMSBuild version 16.6.0.22303\r\nNote: above works if I change installer to use Nuget v4.7\r\n\r\n\r\nVS version (if appropriate): 2017\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Azure pipelines - windows-2019 hosted agent\r\n\r\nWorked before? If so, with which NuGet version:\r\nAlways worked with 4.7, but after spending (many hours) upgrading nuget packages and converting to newer PackageReference - it made sense to use 5.x as I do in my other newer SF projects. It's only after reverting back to nuget 4.7 that it worked.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nLikely can reproduce this issue by creating a blank/default Service Fabric solution containing 1 .net core 3.1. stateless service, 1 .net 4.7.2 ASP.NET web api stateless service and one .net 4.7.1 class library in one project.\r\n\r\n## Other suggested things\r\n\r\nI did extensive googling - some people seem to suggested:\r\n- deleting obj directories before build (which seems silly/hack - apart from local machine, didn't bother doing this on Azure DevOps), \r\n- making sure runtimeidentifier is defined in csproj files (which it was, although msbuild complained about a win-x64 identifier, whereas all my other/this project use win7-x64 - ended up being misleading error)\r\n- making sure PlatformTarget is x64\r\n- doing /restore flags instead with msbuild...which is deprecated (so I didn't bother)\r\n\r\nAside: Other unhelpful things I noticed as part of converting to new packagereference format:\r\n- If your project doesn't have any nuget packages, there is no csproj file change - this causes the project to revert back to package.json approach once you add a nuget package. I ended up adding a redundant nuget package to all these projects. \r\nOn a positive note: for newer/.net core/standard projects, PackageReference is so much cleaner, thank you - and seems to do away with crazy app.config assembly overrides (hence the reason I upgraded to newer packagereference)\r\n\r\n\r\n### Verbose Logs\r\n\r\nThis is error I get as part of buidling solution file:\r\n\r\n```\r\nBuilding the projects in this solution one at a time. To enable parallel build, please add the \"-m\" switch.\r\nBuild started 6/2/2020 6:21:29 AM.\r\n##[debug]Processed: ##vso[task.logdetail id=ea7f895b-dd05-4964-82a4-7edb722e4c2f;parentid=59292472-c9ee-4885-81dc-277963dfcaea;name=Als.Gel.Next.sln;type=Build;starttime=2020-06-02T06:21:30.0533577Z;state=InProgress;]\r\nProject \"D:\\a\\1\\s\\Src\\Als.Gel.Next.sln\" on node 1 (default targets).\r\nValidateSolutionConfiguration:\r\n  Building solution configuration \"Release|x64\".\r\n##[debug]Processed: ##vso[task.logdetail id=8ba3c694-6460-4bc2-9359-81205e989a18;parentid=ea7f895b-dd05-4964-82a4-7edb722e4c2f;name=Als.Gel.Next.WebApi\\Als.Gel.Next.WebApi.csproj.metaproj;type=Build;starttime=2020-06-02T06:21:30.1626837Z;state=InProgress;]\r\n##[debug]Processed: ##vso[task.logdetail id=1b820730-e6ed-4027-9326-ee142998d8b6;parentid=8ba3c694-6460-4bc2-9359-81205e989a18;name=Bootstrapper\\Bootstrapper.csproj;type=Build;starttime=2020-06-02T06:21:30.5077450Z;state=InProgress;]\r\nProject \"D:\\a\\1\\s\\Src\\Als.Gel.Next.sln\" (1) is building \"D:\\a\\1\\s\\Src\\Als.Gel.Next.WebApi\\Als.Gel.Next.WebApi.csproj.metaproj\" (2) on node 1 (default targets).\r\nProject \"D:\\a\\1\\s\\Src\\Als.Gel.Next.WebApi\\Als.Gel.Next.WebApi.csproj.metaproj\" (2) is building \"D:\\a\\1\\s\\Src\\Bootstrapper\\Bootstrapper.csproj\" (3) on node 1 (default targets).\r\nPrepareForBuild:\r\n  Creating directory \"bin\\x64\\Release\\netcoreapp3.1\\win7-x64\\\".\r\n  Creating directory \"obj\\x64\\Release\\netcoreapp3.1\\win7-x64\\\".\r\n##[error]C:\\Program Files\\dotnet\\sdk\\3.1.300\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): Error NETSDK1004: Assets file 'D:\\a\\1\\s\\Src\\Bootstrapper\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file.\r\n##[debug]Processed: ##vso[task.logissue type=Error;sourcepath=C:\\Program Files\\dotnet\\sdk\\3.1.300\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets;linenumber=234;columnnumber=5;code=NETSDK1004;]Assets file 'D:\\a\\1\\s\\Src\\Bootstrapper\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file.\r\nC:\\Program Files\\dotnet\\sdk\\3.1.300\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): error NETSDK1004: Assets file 'D:\\a\\1\\s\\Src\\Bootstrapper\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file. [D:\\a\\1\\s\\Src\\Bootstrapper\\Bootstrapper.csproj]\r\n##[debug]Processed: ##vso[task.logdetail id=1b820730-e6ed-4027-9326-ee142998d8b6;parentid=8ba3c694-6460-4bc2-9359-81205e989a18;type=Build;result=Failed;finishtime=2020-06-02T06:21:31.4171330Z;progress=100;state=Completed;parentid=8ba3c694-6460-4bc2-9359-81205e989a18;name=;]\r\nDone Building Project \"D:\\a\\1\\s\\Src\\Bootstrapper\\Bootstrapper.csproj\" (default targets) -- FAILED.\r\n##[debug]Processed: ##vso[task.logdetail id=8ba3c694-6460-4bc2-9359-81205e989a18;parentid=ea7f895b-dd05-4964-82a4-7edb722e4c2f;type=Build;result=Failed;finishtime=2020-06-02T06:21:31.4344155Z;progress=100;state=Completed;parentid=ea7f895b-dd05-4964-82a4-7edb722e4c2f;name=;]\r\nDone Building Project \"D:\\a\\1\\s\\Src\\Als.Gel.Next.WebApi\\Als.Gel.Next.WebApi.csproj.metaproj\" (default targets) -- FAILED.\r\n##[debug]Processed: ##vso[task.logdetail id=ea7f895b-dd05-4964-82a4-7edb722e4c2f;parentid=59292472-c9ee-4885-81dc-277963dfcaea;type=Build;result=Failed;finishtime=2020-06-02T06:21:31.4344155Z;progress=100;state=Completed;parentid=59292472-c9ee-4885-81dc-277963dfcaea;name=;]\r\nDone Building Project \"D:\\a\\1\\s\\Src\\Als.Gel.Next.sln\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n```\r\n[gel.next.azuredevopsLogFile.txt.zip](https://github.com/NuGet/Home/files/4721606/gel.next.azuredevopsLogFile.txt.zip)\r\n\r\n\r\n"},{"Id":"12513592770","Type":"IssuesEvent","CreatedAt":"2020-06-03T02:27:21","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9639","RelatedDescription":"Opened issue \"Rename NonVisualStateHiddenBooleanToVisibilityConverter to ?\" (#9639) at NuGet/Home","RelatedBody":"My recent PR introduced a way to make the BooleanToVisibility converter have a `Hidden` state when the visibility is false (the default behavior is `Collapsed`).\r\n\r\nAfter a PR review, it was suggested my naming of this property `HiddenWhenFalse` was confusing when considering the `Inverted` property. The suggestion was to name it `NonVisualState` [code](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Converters/BooleanToVisibilityConverter.cs#L21).\r\n\r\nI named the converter in a way that seems clear, but is not concise: `NonVisualStateHiddenBooleanToVisibilityConverter` [code](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/PackageItemControl.xaml#L89).\r\n\r\nFurther feedback recommended this be renamed.\r\nhttps://github.com/NuGet/NuGet.Client/pull/3410#discussion_r434266139. What suggestions do we have for this naming?"},{"Id":"12513422426","Type":"IssuesEvent","CreatedAt":"2020-06-03T01:57:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9559","RelatedDescription":"Closed issue \"[Bug Bash][Test Failure] The “Browse” tab is not aligned left with search box\" (#9559) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Master\\30112.146\r\nOS Version: Windows-10-Enterprise-RS5.\r\nNuGet Version: Dev\\5.7.0.6611\r\n## Installiation\r\nInstall VS: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3723092&view=ms.vss-build-web.run-extensions-tab\r\n## Repro steps\r\n1.  Launch Visual Studio 2019 preview.\r\n2. Click “Create a New Project” button and create a new Console App (.Net Core) project.\r\n3. Observe the position of “Browse” tab. \r\n## Expected\r\nThe “Browse” tab should be aligned left with search box.\r\n## Actual\r\nThe “Browse” tab is not be aligned left with search box.\r\n![NotLeftAligned](https://user-images.githubusercontent.com/40230425/81796716-68633880-9540-11ea-99e5-a04c4b4a292d.png)\r\n"},{"Id":"12511578906","Type":"PullRequestEvent","CreatedAt":"2020-06-02T20:50:42","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9638","RelatedDescription":"Opened pull request \"draft of remote auth spec\" (#9638) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-04T05:30:40.8744189Z","RunDurationInMilliseconds":2667}