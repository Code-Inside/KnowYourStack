{"Data":{"Blog":{"FeedItems":[{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13164807062","Type":"PullRequestEvent","CreatedAt":"2020-08-11T04:52:55","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8143","RelatedDescription":null,"RelatedBody":"Summary of the changes:\r\n\r\n* UI to display preview of readme content\r\n* Disable documentation section at manage package page when embeddedReadme feature is enabled \r\n\r\n- EmbeddedReadme flag feature enable\r\n\r\n    - 1. Uploading packages with embedded readme\r\n ![NuGet Gallery _ Upload Package (1)](https://user-images.githubusercontent.com/64443925/89562077-48a18080-d7ce-11ea-8a00-c293efe111b2.gif)\r\n     - 2. Uploading packages without embedded readme\r\n![withoutReadme](https://user-images.githubusercontent.com/64443925/89575076-0eda7500-d7e2-11ea-8ed1-bcd77b6837d4.PNG)\r\n    - 3 Manage packages page(hide documentation section): \r\n     \r\n![docudisable](https://user-images.githubusercontent.com/64443925/89590775-810c8300-d7fd-11ea-9a04-3eb5e3d8f31c.PNG)\r\n\r\n\r\n\r\n\r\n- EmbeddedReadme flag feature disable:\r\n\r\n    - 1. Uploading packages with embedded readme: \r\n![readme](https://user-images.githubusercontent.com/64443925/89574159-8b6c5400-d7e0-11ea-8a32-1b37488d46f3.PNG)\r\n\r\n    - 2.  Uploading packages without embedded readme:\r\n![legacyreadme](https://user-images.githubusercontent.com/64443925/89574386-e900a080-d7e0-11ea-9aa7-0347fb6aa177.PNG)\r\n\r\n\r\n\r\n\r\nAddresses :https://github.com/NuGet/Engineering/issues/3267\r\n                  https://github.com/nuget/engineering/issues/3307\r\n"},{"Id":"13164806082","Type":"PullRequestEvent","CreatedAt":"2020-08-11T04:52:43","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8143","RelatedDescription":"Closed pull request \"Preview readme when uploading packages\" (#8143) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes:\r\n\r\n* UI to display preview of readme content\r\n* Disable documentation section at manage package page when embeddedReadme feature is enabled \r\n\r\n- EmbeddedReadme flag feature enable\r\n\r\n    - 1. Uploading packages with embedded readme\r\n ![NuGet Gallery _ Upload Package (1)](https://user-images.githubusercontent.com/64443925/89562077-48a18080-d7ce-11ea-8a00-c293efe111b2.gif)\r\n     - 2. Uploading packages without embedded readme\r\n![withoutReadme](https://user-images.githubusercontent.com/64443925/89575076-0eda7500-d7e2-11ea-8ed1-bcd77b6837d4.PNG)\r\n    - 3 Manage packages page(hide documentation section): \r\n     \r\n![docudisable](https://user-images.githubusercontent.com/64443925/89590775-810c8300-d7fd-11ea-9a04-3eb5e3d8f31c.PNG)\r\n\r\n\r\n\r\n\r\n- EmbeddedReadme flag feature disable:\r\n\r\n    - 1. Uploading packages with embedded readme: \r\n![readme](https://user-images.githubusercontent.com/64443925/89574159-8b6c5400-d7e0-11ea-8a32-1b37488d46f3.PNG)\r\n\r\n    - 2.  Uploading packages without embedded readme:\r\n![legacyreadme](https://user-images.githubusercontent.com/64443925/89574386-e900a080-d7e0-11ea-9aa7-0347fb6aa177.PNG)\r\n\r\n\r\n\r\n\r\nAddresses :https://github.com/NuGet/Engineering/issues/3267\r\n                  https://github.com/nuget/engineering/issues/3307\r\n"},{"Id":"13164435845","Type":"PullRequestEvent","CreatedAt":"2020-08-11T03:37:58","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8151","RelatedDescription":"Opened pull request \"added support for display markdown licence files as HTML, fixes #7975\" (#8151) at NuGet/NuGetGallery","RelatedBody":"This adds support for displaying markdown files as HTML. A few notes:\r\n\r\n* The ReadmeService.GetReadMeHtml should probably be refactored to factor out the MD -> HTML conversion. I have run out of time to do this\r\n\r\n* The `CommonMark` library has a weird bug that if a string begins with a BOM, it doesn't convert the first line properly. As a result I stripped it out and then it works ok. It looks like the version of CommonMark used is old, and the package is also depreciated, but I don't have time to fix this either.\r\n\r\n* Arguably there could also be another test added for converting licence MD files to HTML, I also haven't done this \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7975"},{"Id":"13162834613","Type":"PullRequestEvent","CreatedAt":"2020-08-10T22:33:57","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8119","RelatedDescription":"Merged pull request \"Add feature flag enable embedded readme file \" (#8119) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* add feature flag to enable embedded readme file during development\r\n\r\nAddresses https://github.com/nuget/engineering/issues/2342"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13163343297","Type":"IssuesEvent","CreatedAt":"2020-08-11T00:06:20","Actor":"nullableobj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9876","RelatedDescription":"Closed issue \"Restore.csproj failed to build while running dotnet tool install dotnet-ef\" (#9876) at NuGet/Home","RelatedBody":"I had ef 3.0.0 and advised to update to 3.1.0. Direct update failed so I uninstalled ef from dotnet tool and tried to reinstall it again. I got error while building a restore project in path like this: [/var/folders/gt/9l4q1djd12d__wt0cxkqyrc80000gn/T/gkjf01jk.whw/restore.csproj]\r\nI passed verbosity option for detailed (--v d) with install command and it seems there is exception at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\nI am not sure this is an actual bug or this is a problem with my environment. I am running on macos 10.15.6 and dotnet 3.1.302. This is happened also if I downgrade to dotnet 3.1.100.\r\n<img width=\"987\" alt=\"89300923-df502f00-d660-11ea-9185-802f753ab76f\" src=\"https://user-images.githubusercontent.com/20289652/89434174-24489400-d73b-11ea-9b8d-0c571d41cb99.png\">\r\n<img width=\"1421\" alt=\"89300937-e414e300-d660-11ea-90c5-4d8471e0855d\" src=\"https://user-images.githubusercontent.com/20289652/89434193-290d4800-d73b-11ea-92db-4ee819e55587.png\">\r\n<img width=\"1421\" alt=\"Screen Shot 2020-08-05 at 13 46 52\" src=\"https://user-images.githubusercontent.com/20289652/89434195-2a3e7500-d73b-11ea-9342-d699a5b25776.png\">\r\n\r\n\r\n"},{"Id":"13163170432","Type":"IssuesEvent","CreatedAt":"2020-08-10T23:33:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9895","RelatedDescription":"Opened issue \"NuGet should use TargetFrameworkMoniker & TargetPlatformMoniker to infer the frameworks instead of using the individual TFI, TFV, TPI, TPV properties\" (#9895) at NuGet/Home","RelatedBody":""},{"Id":"13163162009","Type":"IssuesEvent","CreatedAt":"2020-08-10T23:31:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9894","RelatedDescription":"Opened issue \"Update GetReferenceNearestTargetFrameworkTask  to support target frameworks with platforms (such as .NET 5-windows)\" (#9894) at NuGet/Home","RelatedBody":""},{"Id":"13162878880","Type":"IssuesEvent","CreatedAt":"2020-08-10T22:41:30","Actor":"pranavkm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9893","RelatedDescription":"Opened issue \"[SSL/Transport Error] Unable to restore master branch with 5.0.100-rc.1.20379.10\" (#9893) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/aspnetcore#24722**\r\n- Please respond to @tebeco.\r\n\r\n---\r\n\r\n_From @tebeco on Sunday, August 9, 2020 6:51:32 PM_\r\n\r\nHello everyone ;)\r\n\r\n### Describe the bug\r\nAs I am trying to restore the repository I'm hit by\r\n\r\n```\r\nC:\\dev\\github\\tebeco\\aspnetcore\\.dotnet\\sdk\\5.0.100-rc.1.20379.10\\NuGet.targets(128,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\nC:\\dev\\github\\tebeco\\aspnetcore\\.dotnet\\sdk\\5.0.100-rc.1.20379.10\\NuGet.targets(128,5): error :   The SSL connection could not be established, see inner exception.\r\nC:\\dev\\github\\tebeco\\aspnetcore\\.dotnet\\sdk\\5.0.100-rc.1.20379.10\\NuGet.targets(128,5): error :    Received an unexpected EOF or 0 bytes from the transport stream.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/2266487/89739398-a4933000-da80-11ea-8fb8-a45c1d7923f1.png)\r\n\r\nIt's the second day in a row it happens, and only at the end of the say, not sure if it's related to an outage or a cache somewhere, or ISP ...\r\nThe workaround described bellow only worked for less than 24h I would say, and worked again today\r\n\r\n### To Reproduce\r\nFollow the docs :\r\nhttps://github.com/dotnet/aspnetcore/blob/master/docs/BuildFromSource.md\r\n```\r\n> mkdir temp1234\r\n> cd temp1234\r\n> git clone --recursive https://github.com/dotnet/aspnetcore\r\n> cd aspnetcore\r\n\r\n> ./eng/scripts/InstallVisualStudio.ps1 -Channel Preview\r\n> npm i -g yarn\r\n> ./restore.cmd\r\nfails\r\n```\r\nI've just update Windows Insider Dev channel, and I hope there's nothing broken about Certificate :D\r\nHello everyone ;)\r\n\r\n### Describe the bug\r\nAs I am trying to restore the repository I'm hit by\r\n\r\n```\r\nC:\\dev\\github\\tebeco\\aspnetcore\\.dotnet\\sdk\\5.0.100-rc.1.20379.10\\NuGet.targets(128,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\nC:\\dev\\github\\tebeco\\aspnetcore\\.dotnet\\sdk\\5.0.100-rc.1.20379.10\\NuGet.targets(128,5): error :   The SSL connection could not be established, see inner exception.\r\nC:\\dev\\github\\tebeco\\aspnetcore\\.dotnet\\sdk\\5.0.100-rc.1.20379.10\\NuGet.targets(128,5): error :    Received an unexpected EOF or 0 bytes from the transport stream.\r\n```\r\n\r\n### To Reproduce\r\nFollow the docs :\r\nhttps://github.com/dotnet/aspnetcore/blob/master/docs/BuildFromSource.md\r\n```\r\n> mkdir temp1234\r\n> cd temp1234\r\n> git clone --recursive https://github.com/dotnet/aspnetcore\r\n> cd aspnetcore\r\n\r\n> ./eng/scripts/InstallVisualStudio.ps1 -Channel Preview\r\n> npm i -g yarn\r\n> ./restore.cmd\r\nfails\r\n```\r\nI've just update Windows Insider Dev channel, and I hope there's nothing broken about Certificate :D\r\n\r\n### More digging\r\nIt seems to fail on `dotnet tool restore` (At first)\r\nYesterday I had the exact same issue\r\n* ran `dotnet tool restore`  => takes VERY LONG TIME => same error\r\n* deleted `global.json` => `dotnet tool restore` => went weird because `dotnet/arcade`\r\n* `dotnet nuget locals --clear all` => same issue\r\n\r\n### Workaround\r\nEditing `global.json` to use `preview7` (because, well I also use `preview7` on side project)\r\nFrom:\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"5.0.100-rc.1.20379.10\"\r\n  },\r\n  \"tools\": {\r\n    \"dotnet\": \"5.0.100-rc.1.20379.10\",\r\n...\r\n```\r\nTo preview7\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"5.0.100-preview.7.20366.6\"\r\n  },\r\n  \"tools\": {\r\n    \"dotnet\": \"5.0.100-preview.7.20366.6\",\r\n```\r\n\r\nAt that time `restore.cmd` works and if I `git checkout global.json` and re-run `restore.cmd` it works again.\r\nI don't get it\r\n\r\n### Further technical details\r\n- ASP.NET Core version\r\n  `master` (commit `983e7ed635f4d128edce4191b51869bd7be8aced`)\r\n\r\n- Include the output of `dotnet --info`\r\n![image](https://user-images.githubusercontent.com/2266487/89739414-d3a9a180-da80-11ea-8d67-4474d1dc68db.png)\r\n\r\n### Further technical details\r\n- ASP.NET Core version\r\n  `master` (commit `983e7ed635f4d128edce4191b51869bd7be8aced`)\r\n\r\n- Include the output of `dotnet --info`\r\n\r\n"},{"Id":"13162540265","Type":"IssuesEvent","CreatedAt":"2020-08-10T21:50:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9892","RelatedDescription":"Opened issue \"PackCommand_PackProject_AddsProjectRefsAsPackageRefs is failing on latest dev\" (#9892) at NuGet/Home","RelatedBody":"See https://github.com/NuGet/NuGet.Client/commit/1756c520d5bdd9d540b1b9accf6c88a2339759cf#commitcomment-41350318"},{"Id":"13162533976","Type":"IssuesEvent","CreatedAt":"2020-08-10T21:49:59","Actor":"thesushil","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9891","RelatedDescription":"Opened issue \"Feature request - Option to update user cache automatically after successful pack\" (#9891) at NuGet/Home","RelatedBody":"NuGet product used: NuGet.exe | VS UI\r\nNuGet version 5.6.0.6591\r\nVS version 16.6.3\r\nOS version Windows Server 2019\r\n\r\n1. Setup 2 solutions each with a project so that one project has a package reference to the other. Project A depends on Project B via nuget package reference. Set GeneratePackageOnBuild to true in Project B.\r\n\r\n2. Make changes to project B and build it. \r\nThen go back to Project A and rebuild it. The previous change in project B is not reflected in project A.\r\n\r\nExpectation: The change in project B should reflect in project A so I can test it and finally check in.\r\n\r\nSuggested feature:\r\nWhen the nupkg is generated for project B after successful build, it should (optionally) update the nuget user cache as well, overwriting if the same version already exists.\r\n\r\nLocal package source option doesn't work either as it would require increasing version every time project B is changed. If version is not increased it would use the older code of the same version from the nuget cache. After the successful testing, I would normally check in and the package version would be increased.\r\n\r\nKeeping both projects in the same solution is also not a good idea, as that would mean all the projects referencing project B should be in the same solution as B which defeats the purpose of nuget reference.\r\n\r\nWorkaround:\r\nWe ended up implementing a custom target that deletes the package in the nuget cache and updates it with the newly built pack. It would nice to have this feature built in."},{"Id":"13162097874","Type":"IssuesEvent","CreatedAt":"2020-08-10T20:52:42","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9889","RelatedDescription":"Closed issue \"GeneratePathProperty should automatically populate package path variables for package dependencies transitively\" (#9889) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): **msbuild16 using PackageReference in csproj**\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate): **msbuild16**\r\n\r\nVS version (if appropriate): \r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version: **No, didn't work**\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nWhen GeneratePathProperty is specified in a PackageReference, please populate package path variables for that package's dependencies transitively. We have run into issues where props/targets files associated with the package in the PackageReference need path variables for package dependencies and they are not populated correctly.\r\n\r\nSetup:\r\n- Nuget Package A that depends on Nuget Package B\r\n- A targets file in Package A needs package path variable for Package B\r\n- Application XYZ has PackageReference (with GeneratePathProperty=\"true\") to Package A and uses the above targets file from Package A to build\r\n- Package path variable for Package B is not populated and build fails\r\n\r\n@rainersigwald \r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13162079902","Type":"IssuesEvent","CreatedAt":"2020-08-10T20:50:27","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9888","RelatedDescription":"Closed issue \"NuGet Package Update Automation\" (#9888) at NuGet/Home","RelatedBody":"I am facing an issue with automating NuGet package update operations.  These commands had leveraged the NuGet.Core library for automating the process of applying NuGet updates to project files, but that library looks to have long since been deprecated.  \r\n\r\nThere is an issue with upgrading netstandard2.0 packages within a project (TargetFrameworkVersion 4.7.2). The debug message flow from PackageManager is:\r\n\r\n-----------------------------------------------\r\n> Looking for updates for 'MYPACKAGE'...\r\n\r\n> Updating 'MYPACKAGE' from version 'x.y.z' to 'a.b.c' in project 'MYPROJECT'.\r\n\r\n> Removing 'MYPACKAGE x.y.z' from MYPROJECT.\r\n\r\n> Added file 'packages.config'.\r\n> Successfully removed 'MYPACKAGE x.y.z' from MYPROJECT.\r\n\r\n> Adding 'MYPACKAGE a.b.c' to MYPROJECT.\r\n-----------------------------------------------\r\nAt which point a \"MYPROJECT does not reference 'MYPACKAGE'\" error is thrown.\r\n\r\n\r\nThe project is still using packages.config file to manage its NuGet package references.  NuGet packages are used to split and package code from various modules which are consumed by an application project.  An automated process in Azure DevOps pipelines is used to update those packages and push out to a CI environment for testing.\r\n\r\n\r\nI have looked at the following scenarios unsuccessfully on how to upgrade our process to support newer netstandard2.0 packages:\r\n\r\n-----------------------------------------------\r\n01: Update NuGet.Core version\r\n-> Library is deprecated, no newer version to upgrade to\r\n\r\n02: NuGet.exe version update (to version 5.6.0)\r\n-> NuGet version update has no effect on underlying NuGet.Core code\r\n\r\n03: Leverage built-in NuGet supported tasks within Azure DevOps\r\n-> NuGet.exe CLI does not support our necessary functions\r\n    -> .csproj file is not updated with assembly references\r\n    -> Files contained within NuGet packages are not updated/extracted as anticipated\r\n\r\n04: Leverage commands supported by Visual Studio NuGet Package Manager Console\r\n-> Commands can only be run within Visual Studio (no support for automation from command line)\r\n\r\n-----------------------------------------------\r\n\r\n\r\nWhat options does NuGet currently support for updating/managing package installations in automated fashion (such as from a CLI)?\r\nIs there an option that has feature parity with the Visual Studio Package Manager Console?\r\n\r\nAre there any libraries that have superseded NuGet.Core for programmatically updating NuGet packages? \r\nIs there a recommended migration path (with accompanying documentation)?\r\n\r\n"},{"Id":"13162054531","Type":"IssuesEvent","CreatedAt":"2020-08-10T20:47:12","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9885","RelatedDescription":"Closed issue \"suggest idea: add source of packages \"cached packages\" for vs2017/19\" (#9885) at NuGet/Home","RelatedBody":"suggest idea: add source of packages \"cached packages\" for vs2017/19\r\nI think this will be helpful?"},{"Id":"13161956867","Type":"IssuesEvent","CreatedAt":"2020-08-10T20:35:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9857","RelatedDescription":"Closed issue \"Cleaning up old binding redirects\" (#9857) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1092773/cleaning-up-old-binding-redirects.html)._\n\n---\nOver time the config files of my solution got a lot of obsolete binding redirects. To clean them up I had to manually remove the existing redirects and then run on the nuget powershell the command Add-BindingRedirect\n\nwanting to automate the process for all my projects in the solution, I found the code here very helpful\nhttps://martowen.com/2018/09/12/refreshing-net-assembly-binding-redirects-in-a-visual-studio-solution/\n\nPlease add to the nuget powershell a command like Remove-BindingRedirect in the URL above so this can be done within VS built-in commands and not rely on 3rd party code\n\nAnother option would be to enhance the Add-BindingRedirect command with a parameter that will instruct it to remove all existing redirects before executing\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/27/2020, 11:52 PM: \n\nThank you for taking the time to provide your suggestion.&nbsp; We will do some preliminary checks to make sure we can proceed further.&nbsp; We'll provide an update once the issue has been triaged by the product team."},{"Id":"13161831427","Type":"IssuesEvent","CreatedAt":"2020-08-10T20:19:57","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9855","RelatedDescription":"Closed issue \"Publish nuget package directly to nuget repository\" (#9855) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/801900/publish-nuget-package-directly-to-nuget-repository.html)._\n\n---\nIt would be very useful to be able to publish directly to a private nuget repository!\nInstead I have to build and execute a command manually everytime!\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/1/2019, 00:21 AM: \n\nThank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.\n#### Feedback Bot on 1/21/2020, 04:51 PM: \n\n<p>Your suggestion has been queued up for prioritization. Feature suggestions are prioritized based on the value to our broader developer community and the product roadmap. We may not be able to pursue this one immediately, but we will continue to monitor it up to 90 days for community input</p>\n\n#### Richard Ashdown on 4/28/2020, 08:17 AM: \n\n<p>I would also like to publish directly from Visual Studio to a private repository (currently using a third party add-on).</p><p>I am also looking at migrating to Azure Artifacts so would like to publish directly from VS to my Artifact feed(s).</p>\n"},{"Id":"13160420480","Type":"IssuesEvent","CreatedAt":"2020-08-10T17:33:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9756","RelatedDescription":"Closed issue \"With multi targeted projects, NuGet should read the target framework related information from the inner build. \" (#9756) at NuGet/Home","RelatedBody":"Currently in command line scenarios NuGet reads the target framework information in the outer build. \r\nThat is incorrect because the the contract is that we should depend on on TargetFrameworkIdentifier and the like properties. \r\nWe do that here: https://github.com/NuGet/NuGet.Client/blob/bd482514a87a0085f8eb8603842ee1cb3ca5f277/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets#L500-L526\r\n\r\nThis task is a blocker for https://github.com/NuGet/Home/issues/5154. \r\n\r\nAn incomplete list of things that need done are:\r\n\r\n* In command line scenarios, read the framework in the inner build (this should allow us to read OS Version for example). \r\n* In VS scenarios, modify the VSSOlutionREstoreService to read the information from the properties back instead of the TargetFrameworks value. \r\n* Reflect all of the changes in the assets file (not sure if we'll need any). \r\n\r\n- [ ] Commandline restore (nuget.exe, msbuild.exe dotnet.exe).\r\n- [ ] Commandline Static Graph restore.\r\n- [ ] VS restore"},{"Id":"13159817499","Type":"IssuesEvent","CreatedAt":"2020-08-10T16:28:23","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9890","RelatedDescription":"Opened issue \"Adding a link to View READMEs from the PM UI\" (#9890) at NuGet/Home","RelatedBody":"Adding a hyperlink that allows users to view the README file for a package while using the PM UI."},{"Id":"13159777341","Type":"IssuesEvent","CreatedAt":"2020-08-10T16:24:13","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9848","RelatedDescription":"Closed issue \"Modifying VS Project Properties Page for Readme Support\" (#9848) at NuGet/Home","RelatedBody":"Add the ability to include a Readme file and property to a project through the Project Properties page."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2020-08-11T05:30:39.1892226Z","RunDurationInMilliseconds":1836}