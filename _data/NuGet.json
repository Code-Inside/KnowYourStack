{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41773498280","Type":"PullRequestEvent","CreatedAt":"2024-09-10T02:43:16","Actor":"v-manil2","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10176","RelatedDescription":"Opened pull request \"[ReleasePrep][2024.09.10]RI of dev into main\" (#10176) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"41758342706","Type":"PullRequestEvent","CreatedAt":"2024-09-09T15:52:37","Actor":"clairernovotny","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10175","RelatedDescription":"Merged pull request \"Add statistics python project to build pipeline\" (#10175) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"41705326363","Type":"PullRequestEvent","CreatedAt":"2024-09-06T20:27:56","Actor":"clairernovotny","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10175","RelatedDescription":"Opened pull request \"Add statistics python project to build pipeline\" (#10175) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41767662500","Type":"IssuesEvent","CreatedAt":"2024-09-09T21:11:07","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13694","RelatedDescription":"Closed issue \"Default tab selection on Manage NuGet Packages\" (#13694) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nDefault tab selection is \"Installed\" while there are Browse, Installed and Updates tabs on fresh created empty project.\r\n![Screenshot 2024-08-12 141420](https://github.com/user-attachments/assets/bd417e4c-99c6-4455-acd5-429d96a347fa)\r\n\n\n### Desired Behavior\n\nDefault tab should be selected \"Browse\" instead of Installed on fresh created empty project.\r\n\n\n### Additional Context\n\nThousands of users use NuGet. A few seconds of UI improvements may result saving time, energy thus leads greener world."},{"Id":"41765696839","Type":"IssuesEvent","CreatedAt":"2024-09-09T20:00:34","Actor":"baronfel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13776","RelatedDescription":"Opened issue \"Walk TFMs in parallel when collecting pack outputs\" (#13776) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nToday, the `_WalkEachTargetPerFramework` target uses a large number of `MSBuild` Tasks in single-item batches to collect outputs to put into the final package. Each Task invocation incurs some overhead, and each Task invocation must be built sequentially. This results in relatively long and straight units of work. This looks like this:\r\n\r\n![image](https://github.com/user-attachments/assets/d5bd9c0c-7abc-4cbe-af90-5ffb1344fa71)\r\n\n\n### Desired Behavior\n\n`_WalkEachTargetPerFramework` should issue batches of parallel work to the `MSBuild` Task invocations so that the engine can schedule the parallel work items more efficiently. This should result in increased performance with no change to functionality. That would look like this:\r\n\r\n![image](https://github.com/user-attachments/assets/b09279a8-d185-401d-bbb0-5fc00a2c855b)\r\n\n\n### Additional Context\n\n_No response_"},{"Id":"41760167865","Type":"IssuesEvent","CreatedAt":"2024-09-09T16:49:30","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13632","RelatedDescription":"Closed issue \"`dotnet list package` does not work if project is using central package management system, after upgrading to `.NET 8.0`\" (#13632) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n8.0.x\r\n\r\n### Worked before?\r\n\r\n7.0.x\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a project that is managing package versions centrally.\r\n2. Run `dotnet restore`\r\n3. Run `dotnet build`\r\n4. Run `dotnet list package --vulnerable` using any `.NET 8.0` SDK (in the example, `8.0.303` was used).\r\n\r\n**Expected behavior:** The command must complete and list any vulnerable package.\r\n**Actual behavior:** The command fails as it cannot read the package references.\r\n\r\n---\r\nSince upgrading to `.NET 8.0`, the NuGet command to list packages (with any combination, but particularly with `--vulnerable`), is failing to complete when ran against a project which is using `Directory.Package.props` for managing its dependencies centrally.\r\n\r\nThe command mentions that it is unable to read the package references from the project, like the picture below:\r\n\r\n![net8](https://github.com/user-attachments/assets/40d8c793-b17d-4be1-a99c-f26046b80473)\r\n\r\n\r\nQuite literally the same project and command, when ran using the `.NET 7.0` SDK, is completing without any issues:\r\n\r\n![net7 0](https://github.com/user-attachments/assets/164aa4f2-abcc-43ce-b852-eaff059338a4)\r\n\r\nThis does not have to do with the .NET the project targets, as in both examples above the project has been built for `.NET 7.0`, but the command to view the vulnerable packages has been ran using a different SDK vesion (`7.0.316` and `8.0.303`).\r\n\r\nAlso, it seems that the issue is not re-creatable when the central package management is disabled and versions are mentioned in the `.csproj` files.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nUnable to read a package reference from the project `PATH_TO_CSPROJ_FILE`. Please make sure that your project file and project.assets.json file are in sync by running restore.\r\n```\r\n"},{"Id":"41708825132","Type":"IssuesEvent","CreatedAt":"2024-09-07T00:25:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13775","RelatedDescription":"Opened issue \"Do not force \" (#13775) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n8.0.400\n\n### Worked before?\n\n8.0.300\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nhttps://learn.microsoft.com/en-us/dotnet/core/porting/versioning-sdk-msbuild-vs#targeting-and-support-rules\r\n\r\n.NET documents 8.0.400 as having a minimum VS version of 17.8. However, because NuGet compiles against a higher version of MSBuild, it doesn't work.\r\n\r\nNuGet that ships in the 8.0.400 SDK needs to respect the .NET SDK's minimum VS version number.\n\n### Verbose Logs\n\n_No response_"},{"Id":"41708493741","Type":"IssuesEvent","CreatedAt":"2024-09-06T23:51:41","Actor":"AndriySvyryd","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13774","RelatedDescription":"Opened issue \"Feature Request: Add \"Support end date\" metadata\" (#13774) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### The Elevator Pitch\n\nPackages that follow a set release lifecycle would expose this information. Then when building a package that claims to be supported longer than some of its transient dependencies NuGet would show a warning. This would help to proactively identify dependencies that would be deprecated before the using package.\n\n### Additional Context and Details\n\nAn extra feature would be to allow extending the \"Support end date\" without releasing a new package version or reuploading it."},{"Id":"41708003455","Type":"IssuesEvent","CreatedAt":"2024-09-06T23:05:44","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13773","RelatedDescription":"Opened issue \"Saving PackageManagementFormat throws Nullable object must have a value.\" (#13773) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nany\n\n### Worked before?\n\nno\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nWhen calling `ApplyChanges` on `PackageManagementFormat` settings , if the nullable property `_showDialogValue` is not set, the attempt to save settings to disk will fail.\r\n\r\n1. Create a PackageManagementFormat\r\n2. Do not call a `get` method for `Enabled` property\r\n3. Call `ApplyChanges` and observe the InvalidOperationException\n\n### Verbose Logs\n\n_No response_"},{"Id":"41704806953","Type":"IssuesEvent","CreatedAt":"2024-09-06T20:04:17","Actor":"dfederm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13772","RelatedDescription":"Opened issue \"\"Sequence contains no matching element\" when using a bad TF\" (#13772) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild version 17.9.8+b34f75857 for .NET Framework\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nError:\r\n```\r\n...\\Current\\bin\\NuGet.targets(169,5): error : Sequence contains no matching element [<repo>\\dirs.proj]\r\n```\r\n\r\nThis happened when accidentally using:\r\n\r\n```xml\r\n    <TargetFramework>net8.0;net472</TargetFramework>\r\n```\r\n\r\nThis is clearly a user error, but the error message could be more helpful. At the very least it should point to the problematic project instead of the root project for the restore.\r\n\r\nI can only get this specific error to repro under certain conditions which I'm not able to fully understand. eg it manifests this way when restoring from the root. When restoring the project directly I helpfully get:\r\n\r\n>NETSDK1046: The TargetFramework value 'net8.0;net472' is not valid. To multi-target, use the 'TargetFrameworks' property instead.\r\n\r\nI would guess it maybe only manifests when a projects depends on the problematic project? Not super sure though.\r\n\r\nAttaching a debugger shows that the exception is thrown here:\r\n![image](https://github.com/user-attachments/assets/c2ac4873-f741-471c-98b0-7f84aa1489af)\r\n\r\nAnd the stack in case it's helpful:\r\n![image](https://github.com/user-attachments/assets/98b1ea4d-417e-4238-a07d-731a4e7a8ece)\r\n\r\nI can provide more specific details (specific internal repo and commit) offline if desired.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-09-10T03:30:24.7759317Z","RunDurationInMilliseconds":882}