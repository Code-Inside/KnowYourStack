{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12471358447","Type":"PullRequestEvent","CreatedAt":"2020-05-29T01:45:15","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8015","RelatedDescription":"Opened pull request \"Fix for statistics not refreshing\" (#8015) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/3201."},{"Id":"12460154020","Type":"IssuesEvent","CreatedAt":"2020-05-28T03:25:35","Actor":"agoling","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8014","RelatedDescription":"Opened issue \"Contact support out-of-service\" (#8014) at NuGet/NuGetGallery","RelatedBody":"### “Contact support” out-of-service，Wrong report from https://www.nuget.org/\r\n\r\n### Describe the bug\r\n“Contact support” out-of-service，Wrong report from https://www.nuget.org/ ，Please see the picture\r\n![image](https://user-images.githubusercontent.com/37896493/83095304-98c8dc00-a0d5-11ea-892a-415ec8ee667c.png)\r\n\r\n"},{"Id":"12457446474","Type":"IssuesEvent","CreatedAt":"2020-05-27T20:18:37","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7905","RelatedDescription":"Closed issue \"[Package Renames] Monitor the popularity transfer freshness\" (#7905) at NuGet/NuGetGallery","RelatedBody":"Monitoring changes: https://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGetMonitoring/pullrequest/1449?_a=overview\r\n\r\nGeneva Monitor: https://jarvis-west.dc.ad.msft.net/?page=settings&mode=mdm&tab=monitors&account=NuGetService&namespace=NuGetMonitoring&metric=AzureSearchService.AuxiliaryFileAgeSeconds&monitor=Azure%20Search%20Auxiliary%20File%20Age"},{"Id":"12456246140","Type":"PullRequestEvent","CreatedAt":"2020-05-27T18:07:15","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8012","RelatedDescription":"Merged pull request \"Banner about the upcoming TLS 1.2 enforcement\" (#8012) at NuGet/NuGetGallery","RelatedBody":"\r\n![image](https://user-images.githubusercontent.com/102933/82963916-e8de5c00-9f78-11ea-96d4-e02015d61a5d.png)\r\n\r\nAdded variable with the background color and put it in all places the verbatim value was used."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12472056936","Type":"IssuesEvent","CreatedAt":"2020-05-29T04:06:29","Actor":"efunkenbusch","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9624","RelatedDescription":"Opened issue \"Suggestion: Add nuget.client packages to Winget repo\" (#9624) at NuGet/Home","RelatedBody":"Since Winget is new and all that gooey goodness, you should add the Nuget.client packages so they can be easily installed."},{"Id":"12471859910","Type":"IssuesEvent","CreatedAt":"2020-05-29T03:25:09","Actor":"efunkenbusch","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9623","RelatedDescription":"Opened issue \"NU1004 when restoring a solution that has mixed Legacy and netstandard2 projects from cmd line with LockedMode\" (#9623) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n\r\nNuGet product used: nuget.client\r\n\r\nNuGet version Several, but exists in prod 5.4, 5.5, 5.5.1 and 5.6 as well as 5.7 preview 1\r\n\r\nVS version: 2019 16.7 Preview 1\r\n\r\nOS version: Windows 10 19635.1\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new dotnet core library (default is fine)\r\n2. Add anew .net 4.7.2 library (with packages.config)\r\n3. Add some legacy framework librarys to th e.net 4.7.2 library (i chose Google.Apis)\r\n4. Add a project reference from .net core library to legacy framework library (no actual code reference needed)\r\n5. install nuget.exe (i used chocolatey, installed prod 5.6.0)\r\n6. open a command prompt, navigate to your solution foldeer\r\n7. type \"nuget.exe restore <your project>.sln -UseLockFile\" (succeeds)\r\n8. type \"nuget.exe restore <your project>.sln -LockedMode (fails, with NU1004\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n`\r\nC:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1>nuget restore ClassLibrary1.sln -LockedMode -verbosity detailed\r\nNuGet Version: 5.4.0.6315\r\nMSBuild auto-detection: using msbuild version '16.7.0.22806' from 'C:\\PROGRA~2\\MICROS~1\\2019\\Preview\\MSBuild\\Current\\Bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\PROGRA~2\\MICROS~1\\2019\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe \"C:\\Users\\ErikFunkenbusch\\AppData\\Local\\Temp\\NuGetScratch\\aegggkrs.jgg.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\ErikFunkenbusch\\AppData\\Local\\Temp\\NuGetScratch\\pirmklvn.dnv.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\ProgramData\\chocolatey\\lib\\NuGet.CommandLine\\tools\\nuget.exe\" /p:RestoreSolutionDirectory=\"C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\\\\" /p:SolutionDir=\"C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\\\\" /p:SolutionName=\"ClassLibrary1\" /p:RestoreLockedMode=\"True\"\r\n\r\nAll packages listed in packages.config are already installed.\r\nRunning restore with 16 concurrent jobs.\r\nReading project file C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\ClassLibrary1.csproj.\r\nThe restore inputs for 'ClassLibrary1' have changed. Continuing restore.\r\nPersisting no-op dg to C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\obj\\ClassLibrary1.csproj.nuget.dgspec.json\r\nNU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Disable the RestoreLockedMode MSBuild property or pass an explicit --force-evaluate option to run restore to update the lock file.\r\nCommitting restore...\r\nAssets file has not changed. Skipping assets file writing. Path: C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\obj\\project.assets.json\r\nWriting cache file to disk. Path: C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\obj\\ClassLibrary1.csproj.nuget.cache\r\nWriting packages lock file at disk. Path: C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\packages.lock.json\r\nRestore failed in 83.46 ms for C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\ClassLibrary1.csproj.\r\n\r\nNuGet Config files used:\r\n    C:\\Users\\ErikFunkenbusch\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n\r\n`\r\n\r\nFeeds used:\r\n    C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n    https://api.nuget.org/v3/index.json\r\n\r\n### Sample Project\r\n\r\n[ClassLibrary1.zip](https://github.com/NuGet/Home/files/4699515/ClassLibrary1.zip)\r\n\r\n\r\n"},{"Id":"12471830462","Type":"IssuesEvent","CreatedAt":"2020-05-29T03:19:20","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9580","RelatedDescription":"Closed issue \"Populate Solution Explorer package/project transitive dependencies from assets file\" (#9580) at NuGet/Home","RelatedBody":"[Copied from https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1107557]\r\nFor .NET Project System projects (eg. SDK style projects) where the Dependencies node exists, transitive dependencies of package and project references will no longer be populated using data from design time builds. Instead, this data will be lazily acquired from the assets file directly.\r\n\r\nThis code was originally going to exist in the Project System repo, but it requires logic from NuGet which is not consumable within VS due to problems with binding redirects.\r\n"},{"Id":"12471428645","Type":"IssuesEvent","CreatedAt":"2020-05-29T01:59:36","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9622","RelatedDescription":"Opened issue \"Dependencies tree Apex tests\" (#9622) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392\r\n\r\nInvestigate incorporating Dependencies tree Apex tests for Solution Explorer.\r\n\r\nThe .NET Project System has some tests that may help here.\r\n\r\nhttps://github.com/dotnet/project-system/blob/e3944ffa90462ea031e4754303ff554fe8f794f9/tests/Microsoft.VisualStudio.ProjectSystem.IntegrationTests/DependencyNodeIntegrationTests.cs"},{"Id":"12471415401","Type":"IssuesEvent","CreatedAt":"2020-05-29T01:56:52","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9621","RelatedDescription":"Opened issue \"Dependencies tree unit tests\" (#9621) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392\r\n\r\nTracking adding more tests to the code in NuGet.Client for populating transitive dependencies in Solution Explorer."},{"Id":"12469321849","Type":"IssuesEvent","CreatedAt":"2020-05-28T20:31:35","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9340","RelatedDescription":"Closed issue \"Add an information message on restore to inform the CPVM users that the feature is in preview. \" (#9340) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nThis is a new feature request. \r\nAdd an information message on restore to inform the CPVM users that the feature is in preview. "},{"Id":"12469074578","Type":"IssuesEvent","CreatedAt":"2020-05-28T20:03:12","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9605","RelatedDescription":"Closed issue \"Add net5.0 TFM for NuGet.Build.Tasks.Console and NuGet.Packaging.Core\" (#9605) at NuGet/Home","RelatedBody":"The code map changed a little bit after we adding netstandard2.1(now net5.0) to NuGet.Packaging related projects.\r\nWe need to  add net5.0 TFM for NuGet.Build.Tasks.Console and NuGet.Packaging.Core"},{"Id":"12459825541","Type":"IssuesEvent","CreatedAt":"2020-05-28T02:24:07","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9620","RelatedDescription":"Opened issue \"Convert Microsoft.VisualStudio.ProjectSystem.Managed from PackageDownload to PackageReference\" (#9620) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392/files#r428498657\r\n\r\n`Microsoft.VisualStudio.ProjectSystem` uses `PackageDownload` to reference `Microsoft.VisualStudio.ProjectSystem.Interop` directly with `EmbedInteropTypes` set to `true`.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/34ceb7d3d5a70ba4b1ecf196e5902dcc9ffed05d/test/NuGet.Clients.Tests/NuGet.PackageManagement.VisualStudio.Test/NuGet.PackageManagement.VisualStudio.Test.csproj#L62-L65\r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/3392/ copied this pattern for the .NET Project System packages, however this isn't necessary for `Microsoft.VisualStudio.ProjectSystem.Managed` and `Microsoft.VisualStudio.ProjectSystem.Managed.VS`.\r\n\r\nConverting these to `PackageReference` triggers a package downgrade error on `Microsoft.CodeAnalysis.FxCopAnalyzers`.\r\n\r\nUpgrading `Microsoft.CodeAnalysis.FxCopAnalyzers` that to `3.0.0` triggers 90 new errors, many of which look like they're worth a proper review."},{"Id":"12459216353","Type":"IssuesEvent","CreatedAt":"2020-05-28T00:28:16","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9619","RelatedDescription":"Opened issue \"Replace BrowseObjectBase with LocalizableProperties once updated shell package available\" (#9619) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392#discussion_r431179016\r\n\r\nOnce the new package is available, this class can be removed."},{"Id":"12459130727","Type":"IssuesEvent","CreatedAt":"2020-05-28T00:12:21","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9618","RelatedDescription":"Opened issue \"Show framework references of packages and projects\" (#9618) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/3392/files/a462d871eebed985c3a3fe7fd145d75f7d30267e#r430954927\r\n\r\n@nkolev92 wrote:\r\n\r\n> We are missing the Framework References here, should we add them?\r\n>\r\n> Specifically I am referring to shared frameworks in the .NET Core world."},{"Id":"12459127666","Type":"IssuesEvent","CreatedAt":"2020-05-28T00:11:48","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9617","RelatedDescription":"Opened issue \"Show properties of Compile Time Assembly items in their browse object\" (#9617) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392/files/a462d871eebed985c3a3fe7fd145d75f7d30267e#r430954182\r\n\r\nThe browse object for a package's compile time assemblies currently only shows the path. The lock file defines a set of properties which could be included."},{"Id":"12459118858","Type":"IssuesEvent","CreatedAt":"2020-05-28T00:10:12","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9616","RelatedDescription":"Opened issue \"Show more information for a dependency's browse object in the dependencies tree\" (#9616) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392/files/a462d871eebed985c3a3fe7fd145d75f7d30267e#r430953620\r\n\r\nWe could show more information in the browse object of transitive dependencies. For example, Include/Exclude values.\r\n\r\nSomeone with a deeper understanding of the domain should review this and see what's missing.\r\n\r\nThe NuGet side of this would apply only to transitive references. The .NET Project System would control the equivalent information for top-level references."},{"Id":"12459116174","Type":"IssuesEvent","CreatedAt":"2020-05-28T00:09:42","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9615","RelatedDescription":"Opened issue \"Filter a package's \"contentFiles\" items by language in dependencies tree \" (#9615) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392/files/a462d871eebed985c3a3fe7fd145d75f7d30267e#r430954182\r\n\r\nThe dependencies tree shows a packages content files as a flat list. It currently shows files across all languages. It would be more correct to filter this list to show only those that match the project's language.\r\n\r\nhttps://github.com/dotnet/NuGet.BuildTasks/blob/5244c490a425353ac12445567d87d674ae118836/src/Microsoft.NuGet.Build.Tasks/ResolveNuGetPackageAssets.cs#L572-L575"},{"Id":"12459113991","Type":"IssuesEvent","CreatedAt":"2020-05-28T00:09:16","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9614","RelatedDescription":"Opened issue \"Show version range on package reference nodes in dependencies tree\" (#9614) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392/files/a462d871eebed985c3a3fe7fd145d75f7d30267e#r431223599\r\n\r\nIt may be useful to show the requested version range on the caption of dependencies tree items that represent package references.\r\n\r\nThe NuGet side of this would apply only to transitive package references. The .NET Project System would control the equivalent information for top-level package references."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-29T05:30:39.1382457Z","RunDurationInMilliseconds":1676}