{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40277737726","Type":"IssuesEvent","CreatedAt":"2024-07-18T22:01:16","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9875","RelatedDescription":"Closed issue \"[UI] Verify that new themes are compatible with old browsers\" (#9875) at NuGet/NuGetGallery","RelatedBody":"Had a talk with Joel about the support of CSS variables and how this could be a concern for old browsers, specially IE. For the moment we decided to continue using CSS variables since it make's the job easier, after merging into DEV we will verify that for IE, the page is usable. "},{"Id":"40272572552","Type":"IssuesEvent","CreatedAt":"2024-07-18T18:24:07","Actor":"ravindra-aditya","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10074","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Interruption in restoring project dependencies\" (#10074) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nConstantly, getting feed interference issues whenever other services are interrupted or not working. \r\n\r\n**Error**: NU1301\tUnable to load the service index for source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json.\t\n\n### Repro Steps\n\n- Create an aspnetcore web api application and try to build, immediately the reported error is getting inferred. \n\n### Expected Behavior\n\nif dotnet or related is having issue, why packages restore is having issue?\n\n### Screenshots\n\n![image](https://github.com/user-attachments/assets/bdde0095-4289-427c-aaed-e6a261b1cc3f)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"40240891893","Type":"IssuesEvent","CreatedAt":"2024-07-17T21:47:13","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9953","RelatedDescription":"Closed issue \"[Feature]: Allow readme images from DeepSource\" (#9953) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\r\n\r\nAllow `readme.md` files to reference images from [Deepsource](https://deepsource.com/).\r\n\r\nDeepSource is a code health platform that helps developers and engineering teams systematically improve code quality and security and save time in code reviews.\r\n\r\nImages (badges) are served from `app.deepsource.com` domain.\r\n\r\nSample markdown:\r\n\r\n[![DeepSource](https://app.deepsource.com/gh/guibranco/CrispyWaffle.svg/?label=active+issues&show_trend=true&token=r3XGa8MQHGZERdIhKB5EZXfL)](https://app.deepsource.com/gh/guibranco/CrispyWaffle/?ref=repository-badge)\r\n\r\n### The Elevator Pitch\r\n\r\nAdd the domain `app.deepsource.com` to the allowed images domains list in readme.md files\r\n\r\n### Additional Context and Details\r\n\r\n_No response_"},{"Id":"40240891729","Type":"PullRequestEvent","CreatedAt":"2024-07-17T21:47:12","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10072","RelatedDescription":"Merged pull request \"Update Trusted-Image-Domains.json\" (#10072) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add the `app.deepsource.com` domain to the trusted image domains list.\r\n\r\nClose #9953 "},{"Id":"40239139865","Type":"IssuesEvent","CreatedAt":"2024-07-17T20:30:32","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9894","RelatedDescription":"Closed issue \"Merge Dark Theme feature into dev branch\" (#9894) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"40239138245","Type":"IssuesEvent","CreatedAt":"2024-07-17T20:30:29","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9893","RelatedDescription":"Closed issue \"[UI] Request an Accessibility testing for Dark theme feature.\" (#9893) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"40205170294","Type":"PullRequestEvent","CreatedAt":"2024-07-16T22:35:05","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10063","RelatedDescription":"Merged pull request \"Bump Azure.Identity from 1.11.3 to 1.11.4 in /src/NuGetGallery.Core\" (#10063) at NuGet/NuGetGallery","RelatedBody":"Bumps Azure.Identity from 1.11.3 to 1.11.4.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Azure.Identity&package-manager=nuget&previous-version=1.11.3&new-version=1.11.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"},{"Id":"40198300054","Type":"IssuesEvent","CreatedAt":"2024-07-16T17:42:39","Actor":"dtivel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10073","RelatedDescription":"Opened issue \"Replace SHA-1 fingerprints with SHA-256 fingerprints\" (#10073) at NuGet/NuGetGallery","RelatedBody":"SHA-1 fingerprints should not be used.  Use SHA-256 fingerprints instead.  This is for SDL compliance.\r\n\r\nFrom https://github.com/search?q=repo%3ANuGet%2FNuGetGallery%20SHA-1&type=code\r\n\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/src/NuGetGallery/Views/Packages/_ValidationIssue.cshtml#L56\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/src/NuGetGallery.Core/Extensions/ValidationIssueExtensions.cs#L55\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/tests/NuGetGallery.Facts/Infrastructure/Mail/MarkdownMessageServiceFacts.cs#L1375\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/tests/NuGetGallery.Facts/Infrastructure/Mail/MarkdownMessageServiceFacts.cs#L2318"},{"Id":"40163256206","Type":"IssuesEvent","CreatedAt":"2024-07-15T18:45:14","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10067","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Alternating table row styling in Dark Mode\" (#10067) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nThe markdown rendering of alternating table row styling doesn't work well in dark mode\r\n\r\nhttps://www.nuget.org/packages/Azure.Identity#credential-classes\r\n\r\n<img width=\"872\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/1288848/726a229d-4736-44d5-9e9d-f9a617f30d4d\">\r\n\n\n### Repro Steps\n\n1. Open https://www.nuget.org/packages/Azure.Identity#credential-classes\r\n2. See the screenshot from above\n\n### Expected Behavior\n\nThe alternate table row styling should work in dark mode.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40277661273","Type":"IssuesEvent","CreatedAt":"2024-07-18T21:57:11","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13640","RelatedDescription":"Opened issue \"[Localization] Revert latest changes from 6.11.x branch \" (#13640) at NuGet/Home","RelatedBody":"Localization team made a huge change in the localization of that branch, since this could be a potential risk a future release, we need to revert them and ask them to stop updating the localization in this branch. "},{"Id":"40259263439","Type":"IssuesEvent","CreatedAt":"2024-07-18T11:39:01","Actor":"StefanOverHaevgRZ","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13639","RelatedDescription":"Opened issue \"Make 'why' command available in NuGet.Commands\" (#13639) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\n`dotnet nuget why` can only be used from the CLI, as the API is internal in `NuGet.CommandLine.XPlat`.\n\n### Desired Behavior\n\n`dotnet nuget why` command should be available as public in `NuGet.Commands`.\n\n### Additional Context\n\nWe want to use the results of the `dotnet nuget why` command in automated reports for our developers.\r\nWe therefore desire to use the NuGet SDK to get the \"why\" data programmatically and make several processes easier."},{"Id":"40254523745","Type":"IssuesEvent","CreatedAt":"2024-07-18T09:09:47","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13638","RelatedDescription":"Opened issue \"[Bug Bash] Punctuation located incorrectly in the bottom-text of the “License Acceptance” dialog \" (#13638) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.12.0.32\n\n### Worked before?\n\nIt is not a regression since it reproes on D16.11\\34601.136 and D17.10\\34904.84. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n**Repro Steps:**    \r\n\r\n1. Create a C# Console App (.NET Framework) project in VS. \r\n2. Right-click the project in “Solution Explorer” window and select \"Manage NuGet Packages…\" menu item to open PM UI. \r\n3. Go to \"Browse\" tab and install a package (for example: Microsoft.EntityFrameworkCore). \r\n4. Click the “Apply\" button in the “Preview Changes” window. \r\n5. Observe the bottom-text in the “License Acceptance” dialog. \r\n\r\n**Expected:**      \r\nThe comma and full-stop should be located outside of the double-quote.\r\n\r\n**Actual:** \r\nThe comma and full-stop were located inside of the double-quote as below: \r\n![image](https://github.com/user-attachments/assets/ee9e9a95-1ed7-4fc7-ac6e-8979e1efdbda)\r\n\r\n\r\nNotes:     \r\n1.Repro rate: 100%. \r\n2.It only reproes on ENU, doesn’t repro on loc languages. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"40250616076","Type":"IssuesEvent","CreatedAt":"2024-07-18T07:05:38","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13538","RelatedDescription":"Closed issue \"Exception when extracting files while executing ProjectRestoreCommand\" (#13538) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet 6.0.423\r\ndotnet 8\r\n\r\n### Worked before?\r\n\r\nNot sure if it worked in dotnet5\r\n\r\n### Impact\r\n\r\nI'm unable to use this version - it fails my github action.\r\n\r\n### Repro Steps & Context\r\n\r\nI get the error if I try to add a nuget using the command\r\n\r\n```\r\ndotnet add ConsoleTest2.csproj package MyImportantPackage --version 1.0.0 --package-directory packages\r\n```\r\n\r\nLooking in the `packages` folder, the unpacked package looks like this:\r\n\r\n```\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          11-06-2024    16:34                lib\r\n-a---          11-06-2024    16:34         149872 25yi3iue.eh1\r\n-a---          07-06-2024    11:04            582 myimportantpackage.nuspec\r\n```\r\n\r\nBut if I use the command\r\n\r\n```\r\nnuget install MyImportantPackage -OutputDirectory packages -DirectDownload -Version 1.0.0\r\n```\r\n\r\nthe package is correct installed and no error reported, and the contents of the installed package in `packages` folder is correct.\r\n\r\nIn both attempts, the nuget package resides in a GitHub package repository.\r\n\r\n### Verbose Logs\r\n\r\n\r\nStack trace: The error is from executing the \r\n\r\n```\r\ndotnet restore MyConsumingSolution.sln --verbosity diagnostic\r\n```\r\n\r\ncommand in a GitHub action flow.\r\n\r\n\r\n```\r\nC:\\Users\\runneradmin\\AppData\\Local\\Microsoft\\dotnet\\sdk\\6.0.423\\NuGet.targets(132,5): error : The archive entry was compressed using an unsupported compression method. [D:\\a\\Visma.Diagnostics\\Visma.Diagnostics\\Visma.Diagnostics.Tracing.sln]\r\n                     System.IO.InvalidDataException: The archive entry was compressed using an unsupported compression method.\r\n                        at System.IO.Compression.Inflater.Inflate(FlushCode flushCode)\r\n                        at System.IO.Compression.Inflater.ReadInflateOutput(Byte* bufPtr, Int32 length, FlushCode flushCode, Int32& bytesRead)\r\n                        at System.IO.Compression.Inflater.InflateVerified(Byte* bufPtr, Int32 length)\r\n                        at System.IO.Compression.DeflateStream.ReadCore(Span`1 buffer)\r\n                        at System.IO.Compression.DeflateStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n                        at System.IO.Stream.CopyTo(Stream destination, Int32 bufferSize)\r\n                        at NuGet.Packaging.StreamExtensions.Testable.MmapCopy(Stream inputStream, String fileFullPath, Int64 size)\r\n                        at NuGet.Packaging.StreamExtensions.Testable.CopyToFile(Stream inputStream, String fileFullPath)\r\n                        at NuGet.Packaging.PackageFileExtractor.ExtractPackageFile(String source, String target, Stream stream)\r\n                        at NuGet.Packaging.PackageArchiveReader.CopyFiles(String destination, IEnumerable`1 packageFiles, ExtractPackageFileDelegate extractFile, ILogger logger, CancellationToken token)\r\n                        at NuGet.Packaging.PackageReaderBase.CopyFilesAsync(String destination, IEnumerable`1 packageFiles, ExtractPackageFileDelegate extractFile, ILogger logger, CancellationToken cancellationToken)\r\n                        at NuGet.Packaging.PackageExtractor.<>c__DisplayClass5_0.<<InstallFromSourceAsync>b__0>d.MoveNext()\r\n                     --- End of stack trace from previous location ---\r\n                        at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n                        at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n                        at NuGet.Packaging.PackageExtractor.InstallFromSourceAsync(PackageIdentity packageIdentity, IPackageDownloader packageDownloader, VersionFolderPathResolver versionFolderPathResolver, PackageExtractionContext packageExtractionContext, CancellationToken token, Guid parentId)\r\n                        at NuGet.Commands.ProjectRestoreCommand.InstallPackageAsync(RemoteMatch installItem, NuGetv3LocalRepository userPackageFolder, PackageExtractionContext packageExtractionContext, CancellationToken token)\r\n                        at NuGet.Commands.ProjectRestoreCommand.<>c__DisplayClass15_1.<<InstallPackagesAsync>b__4>d.MoveNext()\r\n                     --- End of stack trace from previous location ---\r\n                        at NuGet.Commands.ProjectRestoreCommand.InstallPackagesAsync(HashSet`1 uniquePackages, IEnumerable`1 graphs, IList`1 downloadDependencyInformations, NuGetv3LocalRepository userPackageFolder, CancellationToken token)\r\n                        at NuGet.Commands.ProjectRestoreCommand.TryRestoreAsync(LibraryRange projectRange, IEnumerable`1 frameworkRuntimePairs, NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteDependencyWalker remoteWalker, RemoteWalkContext context, Boolean forceRuntimeGraphCreation, CancellationToken token, TelemetryActivity telemetryActivity, String telemetryPrefix)\r\n                        at NuGet.Commands.RestoreCommand.ExecuteRestoreAsync(NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteWalkContext context, CancellationToken token, TelemetryActivity telemetryActivity)\r\n                        at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, IRestoreProgressReporter progressReporter, CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n                        at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreArgs, CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n                        at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\n                        at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log) (TaskId:212)\r\n                   Done executing task \"RestoreTask\" -- FAILED. (TaskId:212)\r\n```\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-19T03:30:19.8065442Z","RunDurationInMilliseconds":1264}