{"Data":{"Blog":{"FeedItems":[{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":33,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"16232219679","Type":"IssuesEvent","CreatedAt":"2021-05-06T19:10:09","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8574","RelatedDescription":"Opened issue \"[MDS] Convert NuGet.Queue.Runner to azure monitoring \" (#8574) at NuGet/NuGetGallery","RelatedBody":"- [ ] blob storage\n- [ ] service bus"},{"Id":"16225533821","Type":"IssuesEvent","CreatedAt":"2021-05-06T12:05:47","Actor":"Abishake968","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8573","RelatedDescription":"Opened issue \"Issues while packing custom nuget package by using nuget exe v5.9.1\" (#8573) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nI created lib folder structure like lib\\net5.0-windows\\AssemlyName.dll and nuspec file parallel to lib folder. We have multiple assemblies in lib folder so, we added \"references\" tag in  nuspec file then try to create a nuget package by using a command \"nuget.exe pack\" with nuget.exe v5.9.1. I faced below two issues.\r\n\r\n![image](https://user-images.githubusercontent.com/36999537/117294632-7e27e700-ae90-11eb-9c99-5c3c995e11ba.png)\r\n\r\n**Nuspec File:**\r\n\r\n![image](https://user-images.githubusercontent.com/36999537/117295135-1756fd80-ae91-11eb-918c-31dd6ddf7f72.png)\r\n\r\n\"Object reference not set to an instance of an object\" issue is occurred.\r\n\r\n\r\nWe have checked the nuspec file and removed \"references\" tag and above issue is not occurred again i tried to pack below issue is occurred.\r\n\r\n\"NU1012: Some included files are included under TFMs which are missing a platform version: net5.0-windows\"\r\nPlease provide the solution for this two issues.\r\n\r\nNote: This issue occurred while we tried latest nuget.exe 5.9.1 version but this worked in nuget.exe 4.9.4\r\n\r\n### To Reproduce\r\n\r\n1. Create a nuspec file with references tag.\r\n2. Create a lib folder with net5.0-windows.\r\n3. Run the command **nuget.exe pack**\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/36999537/117294976-eaa2e600-ae90-11eb-8e70-922d9145e817.png)\r\n\r\n![image](https://user-images.githubusercontent.com/36999537/117295250-3c4b7080-ae91-11eb-86e2-9c2f07499f4f.png)\r\n"},{"Id":"16217756067","Type":"IssuesEvent","CreatedAt":"2021-05-05T22:51:01","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8572","RelatedDescription":"Opened issue \"[MDS] Convert NuGet.QueueSize.Runner to azure monitor\" (#8572) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"16215958010","Type":"PullRequestEvent","CreatedAt":"2021-05-05T19:57:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/4448","RelatedDescription":"Closed pull request \"Update Semver2 package details message (add Paket)\" (#4448) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"16215884836","Type":"PullRequestEvent","CreatedAt":"2021-05-05T19:51:05","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8571","RelatedDescription":"Opened pull request \"Change the link of trusted domains\" (#8571) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8548"},{"Id":"16215098606","Type":"PullRequestEvent","CreatedAt":"2021-05-05T18:45:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8570","RelatedDescription":"Opened pull request \"show some content of readme if is too long\" (#8570) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nwe are using clamp.js to cut off the html element.  Here we are going to increase the number of lines to cut off. \r\n\r\nclamp(): this controls where and when to clamp the text of an element. \r\n\r\nuseNativeClamp (Boolean). Enables or disables using the native -webkit-line-clamp in a supported browser (ie. Webkit). It defaults to true if you're using Webkit, but it can behave wonky sometimes so you can set it to false to use the JavaScript- based solution.\r\n\r\n```\r\n            var height = getMaxHeight(clampValue);\r\n            if (height <= element.clientHeight) {\r\n                clampedText = truncate(getLastChild(element), height);\r\n            }\r\n```\r\n\r\n\r\nbefore: \r\n\r\n\r\n\r\nafter : \r\n![readmeContainer](https://user-images.githubusercontent.com/64443925/117193110-543ec980-ad97-11eb-80ce-3c28b74241c3.PNG)\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8564"},{"Id":"16213280731","Type":"IssuesEvent","CreatedAt":"2021-05-05T16:25:37","Actor":"goswinr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8569","RelatedDescription":"Opened issue \"allow display of <PackageReference Update =     />\" (#8569) at NuGet/NuGetGallery","RelatedBody":"Would it be possible to allow the display of the  `Update` syntax instead of the `Include` syntax for \r\n`<PackageReference ....     />`\r\nCurrently, this is hard coded [here ](https://github.com/NuGet/NuGetGallery/blob/f248171208356b66499810ddd502276784157422/src/NuGetGallery/Views/Packages/DisplayPackage.cshtml#L101) but some packages that are  implicitly referenced in the .NET SDK require the Update syntax to be referenced correctly (and explicitly). See https://github.com/dotnet/fsharp/issues/11527"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"16237775719","Type":"IssuesEvent","CreatedAt":"2021-05-07T04:32:09","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10843","RelatedDescription":"Opened issue \"NuGet GC performance push\" (#10843) at NuGet/Home","RelatedBody":"I started looking into NuGet restore allocations, as they are caused large GC pause times in the wild. I'm looking at a trace of Orchard Core in https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_workitems/edit/1278814.\r\n\r\nMethod|Description|Fix|Percentage %|MB\r\n---|---|---|---|---\r\n`TokenSegment.TryMatch`|Creates lots of `Dictionary<TKey, TValue>`|Can we be more efficient here and share between content items?|16%|550MB\r\n`TokenSegment.TryMatch`|Substrings path many times over|Can we pass though string segment (value, startIndex, length) and operate on that instead of creating in between string?|11.1%|440 MB\r\n`TokenSegment.TryMatch`|Resizes ContentItem.Properties while adding a property|Set a better default capacity|4.1%|185 MB\r\n`TokenSegment.TryMatch`|Concats `_token + \"_raw\"` while adding a property|Do we need \"raw\" properties?|3.5%|157 MB\r\n`FrameworkNameProvider.TryGetPortableProfile`|Very heavy on HashSet allocations||0.5%|11 MB\r\n\r\n\r\n"},{"Id":"16236712385","Type":"PullRequestEvent","CreatedAt":"2021-05-07T02:17:19","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10842","RelatedDescription":"Opened pull request \"Initial draft of technical spec for the Transitive Dependencies feature in the PMUI\" (#10842) at NuGet/Home","RelatedBody":""},{"Id":"16235150692","Type":"IssuesEvent","CreatedAt":"2021-05-06T23:11:33","Actor":"loic-sharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10841","RelatedDescription":"Closed issue \"Add embedded release notes\" (#10841) at NuGet/Home","RelatedBody":"# Background\r\n\r\nThe release notes experience is less than ideal today as the release notes are included in the project file directly. For example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n\r\n    <PackageReleaseNotes>Hello world</PackageIcon>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThis approach has a few flaws:\r\n\r\n* Large release notes will clutter your project file.\r\n* The release notes is not ideal for rich experiences like links, tables, etc...\r\n\r\nSome projects, like Akka.net, circumvent this using build magic: https://github.com/akkadotnet/akka.net/blob/e0f860430e92d9300f9e20f5a4480e67e01cc61a/build.fsx#L180\r\n\r\nSee: https://twitter.com/Aaronontheweb/status/1390392196592017412?s=20\r\n\r\n# Proposal\r\n\r\nRecently, the NuGet client added support for embedding icons, licenses, and READMEs into the package itself: https://github.com/NuGet/Announcements/issues/29. These are separate files are inserted (\"embedded\") into the package itself. In particular, the README supports markdown, which lets authors provide rich content.\r\n\r\nPackage authors should be able to write release notes in a separate file that is then packed into the package. This new embedded release notes should support markdown.\r\n\r\n "},{"Id":"16233775877","Type":"IssuesEvent","CreatedAt":"2021-05-06T21:04:42","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10836","RelatedDescription":"Closed issue \"Mark IVsPackageInstallerServices as deprecated\" (#10836) at NuGet/Home","RelatedBody":"Mark IVsPackageInstallerServices as deprecated and point to the NuGet.VisualStudio.Contracts assembly."},{"Id":"16233724321","Type":"IssuesEvent","CreatedAt":"2021-05-06T21:00:45","Actor":"loic-sharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10841","RelatedDescription":"Opened issue \"Add embedded release notes\" (#10841) at NuGet/Home","RelatedBody":"# Background\r\n\r\nThe release notes experience is less than ideal today as the release notes are included in the project file directly. For example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n\r\n    <PackageReleaseNotes>Hello world</PackageIcon>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThis approach has a few flaws:\r\n\r\n* Large release notes will clutter your project file. \r\n* The release notes is not ideal for rich experiences like links, tables, etc...\r\n\r\nRecently, the NuGet client added support for embedding icons, licenses, and READMEs into the package itself: https://github.com/NuGet/Announcements/issues/29. These are separate files are inserted (\"embedded\") into the package itself. In particular, the README supports markdown, which lets authors provide rich content.\r\n\r\n# Proposal\r\n\r\nPackage authors should be able to write release notes in a separate file that is then packed into the package. This new embedded release notes should support markdown.\r\n\r\n "},{"Id":"16233109358","Type":"IssuesEvent","CreatedAt":"2021-05-06T20:14:26","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6873","RelatedDescription":"Closed issue \"README.md (markdown description) support for NuGet packages\" (#6873) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWhen uploading a package to nuget.org manually via the website, I can set a documentation URL that points to a readme file on github, as shown here: https://www.nuget.org/packages/DotNet.Glob/2.0.2\r\n\r\nHow do I this via a `nuspec` file, as I use CI / CD to publish my packages and so I don't want this to be a manual step. Is there some attribute in the nuspec for this?\r\n\r\nI couldn't see anything obvious here: https://docs.microsoft.com/en-us/nuget/reference/nuspec"},{"Id":"16232331040","Type":"IssuesEvent","CreatedAt":"2021-05-06T19:18:19","Actor":"Ringo-gph","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10840","RelatedDescription":"Opened issue \"NuGet Restore on Windows distro\" (#10840) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): dotnet.exe\r\n\r\nProduct version: 5.0.202\r\n\r\nWorked before? If so, with which NuGet version: Unknown\r\n\r\n## Repro steps and/or sample project\r\n\r\nWe're using GitLab and our CI Pipeline was working before and just started to _randomly_ throw the NU3028 and NU3037 errors on nuget.org packages. Here is the dockerfile of the image we are using to build solutions that contain .NET Framework 4.8 and .NET Core 3.1 projects:\r\n\r\n```\r\nFROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019\r\n\r\nRUN powershell -Command \\\r\n    #\r\n    # Install Chocolatey \r\n    Set-ExecutionPolicy Bypass -Scope Process -Force; \\\r\n    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \\\r\n    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')); \\\r\n    #\r\n    # Install dotnet 5 sdk\r\n    choco install dotnet-5.0-sdk -y; \\\r\n    #\r\n    # Install nuget\r\n    choco install nuget.commandline -y; \\\r\n    #\r\n    # Install nodejs\r\n    choco install nodejs -y; \\\r\n    #\r\n    # Install git\r\n    choco install git -y; \\\r\n    #\r\n    # Refresh env\r\n    refreshenv;\r\n```\r\n\r\n### Verbose Logs\r\n\r\n```\r\n...\r\n$ dotnet --version\r\n5.0.202\r\n$ dotnet restore --packages ${NUGET_PACKAGES_DIRECTORY}\r\n  Determining projects to restore...\r\nC:\\builds\\someprojectlocation\\someproject.csproj : error NU3028: Package 'runtime.native.System 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature's timestamp found a chain building issue: UntrustedRoot: A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider. [C:\\builds\\someprojectlocation\\somesolution.sln]\r\n...\r\n```\r\n"},{"Id":"16232289930","Type":"IssuesEvent","CreatedAt":"2021-05-06T19:15:11","Actor":"loic-sharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/10839","RelatedDescription":"Reopened issue \"Simplify project file formatting for including files in NuGet packages (icon, license, README)\" (#10839) at NuGet/Home","RelatedBody":"We should simplify the process of including files in the nupkg to ideally a single-line experience like most other package metadata.\r\n\r\nOne of the advantages of creating SDK-style projects is the ease of interpreting and editing project files. The majority of package metadata can be specified in a single line while embedded files like icons, license files, and README files will need a line in the `<PropertyGroup>` and `<ItemGroup>`. \r\n\r\nConverting these metadata elements into one-liners will have the following impacts:\r\n* Make the project file look \"cleaner\" and more interpretable.\r\n* Make it easier for beginners to copy and paste elements from tutorials or examples.\r\n* Make it faster and easier to include these critical metadata elements overall."},{"Id":"16232241698","Type":"IssuesEvent","CreatedAt":"2021-05-06T19:11:43","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10839","RelatedDescription":"Closed issue \"Simplify project file formatting for including files in NuGet packages (icon, license, README)\" (#10839) at NuGet/Home","RelatedBody":"We should simplify the process of including files in the nupkg to ideally a single-line experience like most other package metadata.\r\n\r\nOne of the advantages of creating SDK-style projects is the ease of interpreting and editing project files. The majority of package metadata can be specified in a single line while embedded files like icons, license files, and README files will need a line in the `<PropertyGroup>` and `<ItemGroup>`. \r\n\r\nConverting these metadata elements into one-liners will have the following impacts:\r\n* Make the project file look \"cleaner\" and more interpretable.\r\n* Make it easier for beginners to copy and paste elements from tutorials or examples.\r\n* Make it faster and easier to include these critical metadata elements overall."},{"Id":"16232113659","Type":"IssuesEvent","CreatedAt":"2021-05-06T19:02:49","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10822","RelatedDescription":"Closed issue \"nuget.exe ignores inheritance for packageSourceCredentials\" (#10822) at NuGet/Home","RelatedBody":"Is it possible to configure Nuget so the package sources are configured in the nuget.config file in the solution dir, while the credentials for those sources are configured in the nuget.config file located at the user level (`%appdata%\\NuGet\\NuGet.Config`)?\r\n\r\nReading [how settings are applied](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#how-settings-are-applied) for nuget operations, seems like nuget.config has some sort of inheritance. I was trying to use this inheritance to configure nuget for my team in the following way.\r\n\r\n1. Each developer will have a personal set of credentials to the Nuget repository.\r\n\r\n2. Each visual studio solution will contain a `Nuget.config` file in the solution directory.\r\n\r\n    2.1. The `Nuget.config` file will contain two package sources: nuget.org, and a private credential required source.\r\n\r\n3. Each developer will configure the credentials to the private Nuget source within the file located in the user profile (%appdata%\\NuGet\\NuGet.Config). In this way, those credentials are not committed to source control.\r\n\r\nhere are some examples of the `Nuget.config` files I am trying to use:\r\n\r\nSolution level file\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>  \r\n    <packageSources>\r\n        <add key=\"nuget.org\" value=\"https://api.nuget.org/api/v3/index.json\" />\r\n        <add key=\"Private\" value=\"url_for_the_private_feed\" />\r\n    </packageSources>\r\n    <activePackageSource>\r\n        <add key=\"All\" value=\"(Aggregate source)\" />\r\n    </activePackageSource>  \r\n</configuration>\r\n```\r\n\r\nUser level file\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />    \r\n  </packageSources>\r\n  <packageSourceCredentials>\r\n    <Private>\r\n      <add key=\"Username\" value=\"user_name_here\" />\r\n      <add key=\"Password\" value=\"encrypted_password_here\" />\r\n    </Private>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```"},{"Id":"16232098692","Type":"IssuesEvent","CreatedAt":"2021-05-06T19:01:46","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10839","RelatedDescription":"Opened issue \"Simplify project file formatting for including files in NuGet packages (icon, license, README)\" (#10839) at NuGet/Home","RelatedBody":"We should simplify the process of including files in the nupkg to ideally a single-line experience like most other package metadata.\r\n\r\nOne of the advantages of creating SDK-style projects is the ease of interpreting and editing project files. The majority of package metadata can be specified in a single line while embedded files like icons, license files, and README files will need a line in the `<PropertyGroup>` and `<ItemGroup>`. \r\n\r\nConverting these metadata elements into one-liners will have the following impacts:\r\n* Make the project file look \"cleaner\" and more interpretable.\r\n* Make it easier for beginners to copy and paste elements from tutorials or examples.\r\n* Make it faster and easier to include these critical metadata elements overall."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15928910571","Type":"IssuesEvent","CreatedAt":"2021-04-13T21:31:59","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/58","RelatedDescription":"Opened issue \"NuGet repository signature certificate will expire on April 14th, 2021\" (#58) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nAt 5:00AM PST on April 14th, 2021, the [NuGet repository signing certificate will expire](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/). This certificate is used to verify the content integrity of a package and protect against content tampering. When the signing certificate expires, it will fallback to a timestamp for verification.\r\n\r\nFor packages that have not been automatically re-signed by NuGet.org with an updated certificate, you may be affected by [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://github.com/NuGet/Announcements/issues/56). Only a subset of NuGet.org packages have been re-signed with a new certificate since March 15th, 2021.\r\n\r\nGiven that the [NuGet Microsoft author signing certificate has already expired](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/), you may have already ran into this issue if you have a Microsoft author signed package in your environment and may already be aware of this change in behavior & resolved it.\r\n\r\nFor reference of the different types of NuGet signatures:\r\n\r\n- **Author signature.** An author signature guarantees that the package has not been modified since the author signed the package, no matter from which repository or what transport method the package is delivered. Additionally, author-signed packages provide an extra authentication mechanism to the nuget.org publishing pipeline because the signing certificate must be registered ahead of time. \r\n- **Repository signature.** Repository signatures provide an integrity guarantee for all packages in a repository whether they are author signed or not, even if those packages are obtained from a different location than the original repository where they were signed.\r\n\r\n## Symptoms\r\n\r\nYour Linux environment may give you error messages when running `dotnet restore` such as:\r\n\r\n```\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nThis indicates that your environment is affected by an upstream change to [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages and you'll need to update your .NET SDK to resolve it.\r\n\r\n## Solution\r\n\r\nNew .NET builds have been provided with NuGet package verification disabled on Linux and macOS.\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0)\r\n\r\nIt is recommended that you update to these builds as soon as you can to mitigate disruption on Linux environments.\r\n\r\n## Details\r\n\r\nFor more details on this incident, see the following resources:\r\n\r\n- https://github.com/NuGet/Announcements/issues/56\r\n- https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/\r\n- https://github.com/dotnet/announcements/issues/180\r\n\r\nIf you run into this issue after April 14th, 2021, please provide a comment on https://github.com/NuGet/Home/issues/10712"},{"Id":"15789095683","Type":"IssuesEvent","CreatedAt":"2021-04-01T22:00:20","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/57","RelatedDescription":"Opened issue \"NuGet.org temporarily down due to Azure services outage\" (#57) at NuGet/Announcements","RelatedBody":"NuGet.org is being affected by an outage due to issues affecting the Azure Portal and Azure services, but the team is on it. We appreciate your patience and we will keep you updated as soon as we get more information.\r\n\r\nIn the meantime, check https://status2.azure.com/ for Azure updates and find work-arounds in this thread https://github.com/NuGet/NuGetGallery/issues/8480."},{"Id":"15770729318","Type":"IssuesEvent","CreatedAt":"2021-03-31T19:45:05","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/56","RelatedDescription":"Opened issue \"Notice: NuGet Restore Failures on Linux distributions using NSS or Mozilla root CA list\" (#56) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nUsers of .NET 5.0+ will receive error messages when running `dotnet restore` on Linux distros that use [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages maintained by Mozilla's root CA list. The root cause is due to the certificate used for signed NuGet packages recently expiring and as a result the validation for packages uses a timestamp provider chain that has a root certificate that has been [removed by Network Security Services (NSS)](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) which is a popular alternative to [OpenSSL](https://github.com/openssl/openssl).\r\n\r\n- [NuGet Microsoft Author Signing Certificate Update](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/) - Expires January 27th, 2021\r\n- [NuGet.org Repository Signing Certificate Update](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/) - Expires April 14th, 2021\r\n\r\nFor more information, please read the [Distrust of Symantec TLS Certificates](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/) on the Mozilla Security Blog, [Mozilla Root Store Policy](https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/policy/) on Mozilla.org, and [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues) on the Mozilla Wiki Page.\r\n\r\n## Affected Environments\r\n\r\n.NET 5.0+ SDK on Linux distros that use [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). \r\n\r\nAt this time, we are not sure of every distro that may be affected. If you're aware of an affected distro, please let us know!\r\n\r\nBelow is a table that includes .NET support for Linux distros:\r\n\r\n### Linux\r\n\r\nOS                                    | Version               | Affected          |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Alpine Linux][Alpine]                | N/A                 | ❓ |\r\n[CentOS][CentOS]                      | N/A                    | ❓ |\r\n[Debian][Debian]                      | N/A                    | ❓ |\r\n[Fedora][Fedora]                      | N/A                   | ❓ |\r\n[Linux Mint][Linux-Mint]              | N/A                   | ❓ |\r\n[openSUSE][OpenSUSE]                  | N/A                   | ❓ |\r\n[Red Hat Enterprise Linux][RHEL]      | N/A                    | ❓ |\r\n[SUSE Enterprise Linux (SLES)][SLES]  | N/A               | ❓ |\r\n[Ubuntu][Ubuntu]                      | N/A   | ❓ |\r\n\r\n[Alpine]: https://alpinelinux.org/\r\n[CentOS]: https://www.centos.org/\r\n[Debian]: https://www.debian.org/\r\n[Fedora]: https://getfedora.org/\r\n[Linux-Mint]: https://linuxmint.com/\r\n[OpenSUSE]: https://opensuse.org/\r\n[RHEL]: https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\r\n[SLES]: https://www.suse.com/products/server/\r\n[Ubuntu]: https://ubuntu.com/\r\n\r\nAdditionally, here is a table of other Linux variants that may be affected but are not officially supported by .NET.\r\n\r\nOS                                    | Version               | Affected       |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Arch Linux](https://archlinux.org/)                          | 20210328+                 | ✅[Issue](https://github.com/NuGet/Home/issues/10695)             |\r\n[Artix Linux](https://artixlinux.org/)                         | 20201128+                    | ✅[Issue](https://github.com/NuGet/Home/issues/10684)             |\r\n\r\n### Other Linux distros\r\n\r\n- At the time of writing, we believe other distributions will not be affected until a distribution is updated to include [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes).\r\n\r\n## Mitigation\r\n\r\n### .NET Core 3.1\r\n\r\n.NET 5 introduces a signing verification mechanism that promotes warnings to throw an error at `dotnet restore` time. To work around this, you can temporarily target against .NET Core 3.1.\r\n\r\n### Modify CA Certificate Store\r\n\r\nDepending on your Linux distro, you can modify your CA certificate store by taking on an earlier version of your `ca-certificates` package.\r\n\r\nFor reference, the affected version is [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). `nss` includes a hard-coded list of trusted CA certificates and therefore can be modified to include and trust the `Verisign Universal Root Certificate Authority` again.\r\n\r\nMany Linux distros can leverage `dpkg-reconfigure` to check for the entry and enable trust for it. As a manual workaround, you may need to remove a `leading !` from the certificate line & update your CA certificates package.\r\n\r\n**Note:** Doing this is considered a bad security practice & should only be done if you understand the security implications of doing so.\r\n\r\n## Solution\r\n\r\nDue to existing issues with the .NET 5 signing verification feature & fallback of timestamp verification, we have decided to revoke this feature for Unix-based systems within .NET 5 SDK. Therefore your experience of using `dotnet restore` will remain largely the same as it was in .NET Core 3.1. Stay tuned for an updated .NET SDK version that will include this change.\r\n\r\n### Stay updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We will also continue posting updates on [NuGet Status](https://status.nuget.org/) and [@NuGet on Twitter](https://twitter.com/nuget)."},{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1390391828604719106","CreatedAt":"2021-05-06T19:43:38+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nYou can now add a https://t.co/RqASvz95cI file to your NuGet package and have it render… https://t.co/SEMC6TOzgv","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":119,"FavoriteCount":56,"RawContent":null},{"Id":"1385344580128854034","CreatedAt":"2021-04-22T21:27:41+00:00","UserScreenname":"nuget","Text":"🙌Get featured in a NuGet blog 🙌\n\nUsing .NET SDK 5.0.300+, you can add a https://t.co/RqASvz95cI file to your packag… https://t.co/4DZ7Z2spYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":101,"FavoriteCount":42,"RawContent":null},{"Id":"1384935395515936773","CreatedAt":"2021-04-21T18:21:43+00:00","UserScreenname":"nuget","Text":"Thank you @rocklan for your code contributions to NuGet - you're rocking the VS shirt, Microsoft jacket, and guitar… https://t.co/JkUiVYLuMw","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":8,"FavoriteCount":2,"RawContent":null},{"Id":"1379845663807188996","CreatedAt":"2021-04-07T17:16:57+00:00","UserScreenname":"nuget","Text":"🙌New mockup just dropped🙌\n\n@jiachenjiang_  is reading all the feedback and iterating daily 💪\n\nWe want you to be inv… https://t.co/HMOopaJPDN","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1377764630769008640","CreatedAt":"2021-04-01T23:27:40+00:00","UserScreenname":"nuget","Text":"Our monitoring and tests indicate that the incident related to DNS has been mitigated. We are waiting for more info… https://t.co/Oz3vtCPt0K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1377743615422685191","CreatedAt":"2021-04-01T22:04:09+00:00","UserScreenname":"nuget","Text":"Check our announcement here for additional resources as well as a Github thread for us to share work-arounds.… https://t.co/j0UWauYtq3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1377737823994802182","CreatedAt":"2021-04-01T21:41:09+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi is being affected by this outage, but the team is on it. We appreciate your patience and we… https://t.co/ESWjKBbpYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"👏Contributor appreciation time👏\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t… https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-05-07T05:30:31.1370288Z","RunDurationInMilliseconds":1330}