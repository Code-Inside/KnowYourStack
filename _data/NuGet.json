{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39345072036","Type":"PullRequestEvent","CreatedAt":"2024-06-17T01:27:04","Actor":"dependabot[bot]","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10023","RelatedDescription":"Opened pull request \"Bump braces from 3.0.2 to 3.0.3 in /src/Bootstrap\" (#10023) at NuGet/NuGetGallery","RelatedBody":"Bumps [braces](https://github.com/micromatch/braces) from 3.0.2 to 3.0.3.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/micromatch/braces/commit/74b2db2938fad48a2ea54a9c8bf27a37a62c350d\"><code>74b2db2</code></a> 3.0.3</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/88f1429a0f47e1dd3813de35211fc97ffda27f9e\"><code>88f1429</code></a> update eslint. lint, fix unit tests.</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/415d660c3002d1ab7e63dbf490c9851da80596ff\"><code>415d660</code></a> Snyk js braces 6838727 (<a href=\"https://redirect.github.com/micromatch/braces/issues/40\">#40</a>)</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/190510f79db1adf21d92798b0bb6fccc1f72c9d6\"><code>190510f</code></a> fix tests, skip 1 test in test/braces.expand</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/716eb9f12d820b145a831ad678618731927e8856\"><code>716eb9f</code></a> readme bump</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/a5851e57f45c3431a94d83fc565754bc10f5bbc3\"><code>a5851e5</code></a> Merge pull request <a href=\"https://redirect.github.com/micromatch/braces/issues/37\">#37</a> from coderaiser/fix/vulnerability</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/2092bd1fb108d2c59bd62e243b70ad98db961538\"><code>2092bd1</code></a> feature: braces: add maxSymbols (<a href=\"https://github.com/micromatch/braces/issues/\">https://github.com/micromatch/braces/issues/</a>...</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/9f5b4cf47329351bcb64287223ffb6ecc9a5e6d3\"><code>9f5b4cf</code></a> fix: vulnerability (<a href=\"https://security.snyk.io/vuln/SNYK-JS-BRACES-6838727\">https://security.snyk.io/vuln/SNYK-JS-BRACES-6838727</a>)</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/98414f9f1fabe021736e26836d8306d5de747e0d\"><code>98414f9</code></a> remove funding file</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/665ab5d561c017a38ba7aafd92cc6655b91d8c14\"><code>665ab5d</code></a> update keepEscaping doc (<a href=\"https://redirect.github.com/micromatch/braces/issues/27\">#27</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/micromatch/braces/compare/3.0.2...3.0.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=braces&package-manager=npm_and_yarn&previous-version=3.0.2&new-version=3.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"},{"Id":"39297305333","Type":"IssuesEvent","CreatedAt":"2024-06-14T09:27:49","Actor":"cyanial","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10022","RelatedDescription":"Closed issue \"[Feature]: failed to extract some platform-specific .nupkg file\" (#10022) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\r\n\r\n- **What lib**: MongoDB.Libmongocrypt in MongoDB.Driver.\r\nWhen I install MongoDB.Driver, it depends one MongoDB.libmongocrypt. The `MongoDB.libmongocrypt` is platform specific, it has osx/linux/win (dylib, so, dll). \r\n\r\nhttps://www.nuget.org/packages/MongoDB.Libmongocrypt\r\n\r\nWhen NuGetForUnity extract that .nupkg file, it extract two libmongocrypt.dylib on macos, one from `content` and one from `contentFiles`. \r\n\r\nI can manually delete one of these duplicated dylib and it works. \r\n\r\nNow i want to know how to fix this. I've read the code about extracting .nupkg. But i can not know how to fix, or it will cause other lib dont work if i change the code.\r\n\r\n### The Elevator Pitch\r\n\r\nFix duplicated .nupkg extract in some lib (MongoDB.libmongocrypt) . I want to fix this but don't know how to do.\r\n\r\n\r\n### Additional Context and Details\r\n\r\n```\r\nMultiple plugins with the same name 'libmongocrypt' (found at 'Assets/Packages/MongoDB.Libmongocrypt.1.8.2/Sources/libmongocrypt.dylib' and 'Assets/Packages/MongoDB.Libmongocrypt.1.8.2/content/libmongocrypt.dylib'). That means one or more plugins are set to be compatible with Editor. Only one plugin at the time can be used by Editor.\r\n```\r\n\r\n\r\n![截屏2024-06-14 16 53 14](https://github.com/NuGet/NuGetGallery/assets/28806469/8d2e6a01-a79a-4f37-b0c9-7ab02ec5b18a)\r\n"},{"Id":"39295985332","Type":"IssuesEvent","CreatedAt":"2024-06-14T08:45:30","Actor":"cyanial","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10022","RelatedDescription":"Opened issue \"[Feature]: failed to extract some platform-specific .nupkg file\" (#10022) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n- **What lib**: MongoDB.Libmongocrypt in MongoDB.Driver.\r\nWhen I install MongoDB.Driver, it depends one MongoDB.libmongocrypt. The `MongoDB.libmongocrypt` is platform specific, it has osx/linux/win (dylib, so, dll). \r\n\r\nWhen NuGetForUnity extract that .nupkg file, it extract two libmongocrypt.dylib on macos, one from `content` and one from `contentFiles`. \r\n\r\nI can manually delete one of these duplicated dylib and it works. \r\n\r\nNow i want to know how to fix this. I've read the code about extracting .nupkg. But i can not know how to fix, or it will cause other lib dont work if i change the code.\n\n### The Elevator Pitch\n\nFix duplicated .nupkg extract in some lib (MongoDB.libmongocrypt) . I want to fix this but don't know how to do.\r\n\n\n### Additional Context and Details\n\n```\r\nMultiple plugins with the same name 'libmongocrypt' (found at 'Assets/Packages/MongoDB.Libmongocrypt.1.8.2/Sources/libmongocrypt.dylib' and 'Assets/Packages/MongoDB.Libmongocrypt.1.8.2/content/libmongocrypt.dylib'). That means one or more plugins are set to be compatible with Editor. Only one plugin at the time can be used by Editor.\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39346149499","Type":"IssuesEvent","CreatedAt":"2024-06-17T02:41:47","Actor":"jzabroski","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13554","RelatedDescription":"Opened issue \"Force PackageReference to target a specific TFM\" (#13554) at NuGet/Home","RelatedBody":"@zivkan Is there a way to force PackageReference to target a specific TFM?\r\n\r\nIn my case, System.Diagnostics.DiagnosticSource is a messy nuget package that claims to support net462, except .NET Framework 4.6.2 does **not** have the Logger field, so telemetry packages emit a ton of the same repeat message: \"The parameters to the Event method do not match the parameters to the WriteEvent method. This may cause the event to be displayed incorrectly.\"  I'd love to tell my ASP.NET Classic Website that targets net48 to fallback to netstandard2.0 for just this package.\r\n\r\nThe crux of the problem appears to be [`GetReferenceNearestTargetFrameworkTask`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks/GetReferenceNearestTargetFrameworkTask.cs) assumes I want net462 rather than netstandard2.0, but I'm not certain!\r\n\r\nThe following does not seem to work:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <AssemblyTitle>My.Web</AssemblyTitle>\r\n    <TargetFramework>net48</TargetFramework>\r\n    <IsPackable>false</IsPackable>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <AssetTargetFallback>netstandard2.0;$(AssetTargetFallback)</AssetTargetFallback>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Autofac.Mvc5\" Version=\"6.1.0\" />\r\n    <!-- This Autofac.Web package references System.Diagnostics.DiagnosticSource 7.0.2 -->\r\n    <PackageReference Include=\"Autofac.Web\" version=\"7.0.0\" />\r\n    <!--10.x is the last version that supports .NET Framework -->\r\n    <PackageReference Include=\"AutoMapper\" Version=\"[10.1.1,11.0.0)\" />\r\n    <!-- 4.x is the last version that supports .NET Framework -->\r\n    <PackageReference Include=\"AutoMapper.Extensions.ExpressionMapping\" Version=\"[4.1.5,5.0.0)\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.Mvc\" Version=\"5.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n> I think the problem is that .NETCoreApp (.NET Core and .NET 5+) is not directly compatible with .NET Framework. The [.NET SDK defines asset target fallback](https://github.com/dotnet/sdk/blob/e5ead6cdcf50378e109ed03b4507fbd4f6aed55a/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.BeforeCommon.targets#L181). However, since NuGet finds that netstandard2.1 asset, asset target fallback is not used, hence the .NET Framework runtime asset is NOT compatible. Your package needs netstandard2.1 runtime assets.\r\n> \r\n> To see AssetTargetFallback in action, you need a package with only .NET Framework assets, then reference the package from a project targeting .NET Framework. NuGet will raise a warning that the package was used, but might not be fully compatible, because there are bunch of .NET Framework APIs that don't work on .NET (Core), and if the package uses any of those APIs, the app will crash at runtime, which is basically what different TFM versions and TFM compatibility is trying to avoid.\r\n> \r\n> But to reiterate the point, in order to reenforce its understanding, Asset Target Fallback works in two passes. First, NuGet attempts to do asset selection without any asset target fallback. if any assets match, from any asset class (compile, runtime, content files, build) finds a compatible asset, then asset target fallback will NOT be used. Only when NONE of the asset classes find any matches, then NuGet will try asset target fallback.\r\n> \r\n> Therefore, projects that are compatible with .NET Standard 2.1, they will not select .NET Framework assets in a different asset class. This is by design because .NET Framework and .NET Core App are not \"guaranteed\" to be compatible. In fact, there are known API and runtime differences.\r\n> \r\n> _Originally posted by @zivkan in https://github.com/NuGet/Home/issues/12972#issuecomment-1791260350_\r\n            "},{"Id":"39345733417","Type":"IssuesEvent","CreatedAt":"2024-06-17T02:11:09","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13553","RelatedDescription":"Opened issue \"dotnet nuget why shouldn't require project when there is only one in the current directory\" (#13553) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 9 SDK daily preview\n\n### Worked before?\n\nno, new feature\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nWhen the current directory contains only a single project file, commands like `dotnet restore`, `dotnet build`, `dotnet add package`, `dotnet list package`, and so on, all use the project file implicitly.\r\n\r\n`dotnet nuget why` not only doesn't implicitly use the project file, but outputs an error message twice\r\n\r\n```console\r\n> dotnet nuget why Azure.Identity\r\nRequired argument missing for command: 'why'.\r\n\r\nRequired argument missing for command: 'why'.\r\n\r\nDescription:\r\n  Shows the dependency graph for a particular package for a given project or solution.\r\n\r\nUsage:\r\n  nuget why <PROJECT|SOLUTION> <PACKAGE> [options]\r\n\r\nArguments:\r\n  <PROJECT|SOLUTION>  A path to a project, solution file, or directory.\r\n  <PACKAGE>           The package name to lookup in the dependency graph.\r\n\r\nOptions:\r\n  -f, --framework  The target framework(s) for which dependency graphs are shown.\r\n  -?, -h, --help   Show help and usage information\r\n```\r\n\r\nCompare this to `dotnet add package -h` which has:\r\n\r\n```console\r\nUsage:\r\n  dotnet add [<PROJECT>] package <PACKAGE_NAME> [options]\r\n\r\nArguments:\r\n  <PROJECT>       The project file to operate on. If a file is not specified, the command will search the current directory for one. [default:\r\n                  C:\\src\\myrepo\\]\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39345632946","Type":"IssuesEvent","CreatedAt":"2024-06-17T02:05:45","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13552","RelatedDescription":"Opened issue \"dotnet nuget why without any args outputs the same error 4 times\" (#13552) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0 daily build\n\n### Worked before?\n\nno, new feature\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nInstall a .NET 9 SDK that includes `dotnet nuget why`.  Run `dotnet nuget why` without any args, and you'll get the same error 4 times:\r\n\r\n```console\r\nRequired argument missing for command: 'why'.\r\nRequired argument missing for command: 'why'.\r\n\r\nRequired argument missing for command: 'why'.\r\nRequired argument missing for command: 'why'.\r\n\r\nDescription:\r\n  Shows the dependency graph for a particular package for a given project or solution.\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"39329238061","Type":"IssuesEvent","CreatedAt":"2024-06-15T19:19:29","Actor":"jkotas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13551","RelatedDescription":"Opened issue \"\"Static graph-based restore failed with exit code .* but did not log an error.\" failure in dotnet/runtime repo\" (#13551) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n.NET SDK 9.0.100-preview.5.24307.3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis is intermittent build error encountered by dotnet/runtime repo build. https://github.com/dotnet/runtime/issues/103526 is going to have statics on how often it occurs.\n\n### Verbose Logs\n\n```shell\nLog https://dev.azure.com/dnceng-public/public/_build/results?buildId=709057&view=logs&j=bdec34cc-8c67-558e-657b-d36a4105119f&t=a678ac1d-afa2-555a-c9f2-128b541774a9&l=605:\r\n\r\n...\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\shims\\stubs\\System.IO.Packaging.csproj (in 0.8 ms).\r\nFailed to restore D:\\a\\_work\\1\\s\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable.csproj (in 271 ms).\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\shims\\stubs\\System.Diagnostics.PerformanceCounter.csproj (in 0.8 ms).\r\n...\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\sfx-gen.proj (in 0.6 ms).\r\n2D:\\a\\_work\\1\\s\\.dotnet\\sdk\\9.0.100-preview.5.24307.3\\NuGet.RestoreEx.targets(19,5): error : Static graph-based restore failed with exit code '1' but did not log an error. Please file an issue at https://github.com/NuGet/Home. [D:\\a\\_work\\1\\s\\Build.proj]\r\n```\n```\n"},{"Id":"39324734468","Type":"IssuesEvent","CreatedAt":"2024-06-15T12:13:08","Actor":"DmitryLukyanov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13509","RelatedDescription":"Closed issue \"\"Nuget search take\" throws if the value exceeds actual number of nugets in the feed\" (#13509) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Version: 6.9.1.3\r\n\r\n### Worked before?\r\n\r\nyes, checked 1 week ago\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nWhen the take number is bigger than number of packages:\r\n\r\n        PS C:\\> nuget search -take 1335 -Source SourceName\r\n        Error converting value \"file://C:%5CUsers%5CAdministrator%5Cbuildkite-agent%5Cbuilds%5Cpm-build%5Cpostman%5Capp-package-and-deploy/resources/postman-prod.ico\" to type 'System.Uri'. Path 'data[1334].iconUrl', line 1, position 6811849.\r\n          Could not cast or convert from System.String to System.Uri.\r\n\r\nWhen the same or less than number of packages:\r\n        \r\n        PS C:\\> nuget search -take 1334 -Source SourceName\r\n        ====================\r\n        Source: SourceName\r\n        --------------------\r\n        > System.Runtime....\r\n        ...\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nPS C:\\> nuget search -take 1335 -Source SourceName -verbosity detailed\r\nNuGet Version: 6.9.1.3\r\nFound 1 search endpoints.\r\nQuerying\r\nhttps://%address%/api/nuget/v3/nuget/query?q=&skip=0&take=1335&prerelease=false&semVerLevel=2.0.0\r\nError converting value \"file://C:%5CUsers%5CAdministrator%5Cbuildkite-agent%5Cbuilds%5Cpm-build%5Cpostman%5Capp-package-and-deploy/resources/postman-prod.ico\" to type 'System.Uri'. Path 'data[1334].iconUrl', line 1, position 6811730.\r\n  Could not cast or convert from System.String to System.Uri.\r\nNewtonsoft.Json.JsonSerializationException: Error converting value \"file://C:%5CUsers%5CAdministrator%5Cbuildkite-agent%5Cbuilds%5Cpm-build%5Cpostman%5Capp-package-and-deploy/resources/postman-prod.ico\" to type 'System.Uri'. Path 'data[1334].iconUrl', line 1, position 6811730. ---> System.ArgumentException: Could not cast or convert from System.String to System.Uri.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize[T](JsonReader reader)\r\n   at NuGet.Protocol.Converters.V3SearchResultsConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize[T](JsonReader reader)\r\n   at NuGet.Protocol.PackageSearchResourceV3.<ProcessHttpStreamWithoutBufferingAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.PackageSearchResourceV3.<ProcessHttpStreamTakeCountedItemAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass17_0`1.<<ProcessHttpStreamAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__20`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<ProcessHttpStreamAsync>d__17`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.PackageSearchResourceV3.<SearchPage>d__7`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.PackageSearchResourceV3.<Search>d__8`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.PackageSearchResourceV3.<Search>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.PackageSearchResourceV3.<SearchAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.CommandLine.SearchCommand.<ExecuteCommandAsync>d__13.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n"},{"Id":"39321690571","Type":"IssuesEvent","CreatedAt":"2024-06-15T06:32:12","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13396","RelatedDescription":"Closed issue \"Add `--allow-insecure-connections` option to dotnet SDK\" (#13396) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nAdd the option to the following commands\r\n- `dotnet nuget add`\r\n- `dotnet nuget update`\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39317776318","Type":"IssuesEvent","CreatedAt":"2024-06-14T23:02:35","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13547","RelatedDescription":"Closed issue \"'dotnet nuget why' crashes when using --framework option\" (#13547) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.100-preview.6, 8.0.4xx\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n`> dotnet nuget why C:\\path package --framework net6.0`\r\n\r\nThe dotnet SDK fails to parse any provided frameworks options and crashes. There is a problem with the parsing logic on the dotnet SDK side.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39317617399","Type":"IssuesEvent","CreatedAt":"2024-06-14T22:49:19","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13548","RelatedDescription":"Closed issue \"Simplify package source mappings for Microsoft.* packages\" (#13548) at NuGet/Home","RelatedBody":"In https://github.com/NuGet/NuGet.Client/pull/5844 I added a lot of package source mappings to find versions of packages that didn't exist on dotnet-public. However, I want to investigate whether there are simplifications to these mappings."},{"Id":"39313146643","Type":"IssuesEvent","CreatedAt":"2024-06-14T18:46:45","Actor":"Pxtl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13549","RelatedDescription":"Opened issue \"Option to ignore unsupported project types in command-line nuget\" (#13549) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\nA solution file may contain project types that are not supported by nuget.exe.  For example, I'm facing this with a .modelproj - nuget chokes on this file within the solution.\r\n\r\nIf I attempt to nuget restore with msbuild.exe, it properly recognizes that it can't work with that .modelproj and moves on.\r\n\r\nAFAIK this same issue exists in Azure Pipelines nuget restore as well, since I think that uses nuget.exe under the hood.\n\n### Additional Context and Details\n\nThis is mostly a convenience thing.  It'd be nice to be able to just do `nuget restore <solutionfile>` and not have to worry about which containing projects it can handle.\r\n\r\nThis is the error I get:\r\n\r\n```\r\nJun14 14:44:10 C:\\tfs\\<SolutionDir> [main ≡]\r\n> nuget restore .\\<SolutionFile>\r\nMSBuild auto-detection: using msbuild version '17.10.4.21802' from 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\bin'.\r\nC:\\tfs\\<SolutionDir>\\<ProjectName>\\<ProjectName>.modelproj(27,11): error MSB4226: The imported project \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Microsoft\\VisualStudio\\v17.0\\ArchitectureTools\\Microsoft.VisualStudio.TeamArchitect.ModelingProject.targets\" was not found. Also, tried to find \"ArchitectureTools\\Microsoft.VisualStudio.TeamArchitect.ModelingProject.targets\" in the fallback search path(s) for $(VSToolsPath) - \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v17.0\" . These search paths are defined in \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\bin\\msbuild.exe.Config\". Confirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search paths.\r\n\r\nWARNING: Error reading msbuild project information, ensure that your input solution or project file is valid. NETCore and UAP projects will be skipped, only packages.config files will be restored.\r\nAll packages listed in packages.config are already installed.\r\n  CACHE https://api.nuget.org/v3/vulnerabilities/index.json\r\n  CACHE https://api.nuget.org/v3-vulnerabilities/2024.06.14.05.22.49/vulnerability.base.json\r\n  CACHE https://api.nuget.org/v3-vulnerabilities/2024.06.14.05.22.49/2024.06.14.05.22.49/vulnerability.update.json\r\n```\r\n\r\nWhen using msbuild, this is what I get:\r\n\r\n```\r\n& 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe' -t:restore .\\<SolutionFile>\r\nMSBuild version 17.10.4+10fbfbf2e for .NET Framework\r\nBuild started 2024-06-14 2:39:54 PM.\r\n\r\nProject \"C:\\tfs\\<SolutionDirectory>\\<SolutionFile>\" on node 1 (Restore target(s)).\r\nValidateSolutionConfiguration:\r\n  Building solution configuration \"Debug|Mixed Platforms\".\r\nC:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\\<ProjectFile>.modelproj : warning NU1503: Skipping restore for project 'C:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\r\ning\\<ProjectFile>.modelproj'. The project file may be invalid or missing targets required for restore. [C:\\tfs\\<SolutionDirectory>\\<SolutionFile>]\r\n_GetAllRestoreProjectPathItems:\r\n  Determining projects to restore...\r\nRestore:\r\n  X.509 certificate chain validation will use the default trust store selected by .NET for code signing.\r\n  X.509 certificate chain validation will use the default trust store selected by .NET for timestamping.\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\nDone Building Project \"C:\\tfs\\<SolutionDirectory>\\<SolutionFile>\" (Restore target(s)).\r\n\r\n\r\nBuild succeeded.\r\n\r\n\"C:\\tfs\\<SolutionDirectory>\\<SolutionFile>\" (Restore target) (1) ->\r\n(_FilterRestoreGraphProjectInputItems target) ->\r\n  C:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\\<ProjectFile>.modelproj : warning NU1503: Skipping restore for project 'C:\\tfs\\<SolutionDirectory>\\Rome.Mod\r\neling\\<ProjectFile>.modelproj'. The project file may be invalid or missing targets required for restore. [C:\\tfs\\<SolutionDirectory>\\<SolutionFile>]\r\n\r\n    1 Warning(s)\r\n    0 Error(s)\r\n```"},{"Id":"39310795433","Type":"IssuesEvent","CreatedAt":"2024-06-14T17:06:24","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13515","RelatedDescription":"Closed issue \"NuGet IntelliCode Package Suggestions are missing Author in packages list\" (#13515) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.11\n\n### Worked before?\n\nN/A\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nAs part of the new feature for Known Owner rendering in PM UI, https://github.com/NuGet/NuGet.Client/pull/5766, the IntelliSense Suggested packages (indicated with a `*` in the packages list) now attempt to read an `Owner` property from their metadata in order to render Known Owner profile hyperlinks. \r\n\r\nSince author is never shown as the feed supports Known Owner, these suggested packages now always show a blank instead of \"by author\" beside their package ID.\r\n\r\nThe owner metadata is not available from IntelliSense, so there will never be a hyperlink to show.\r\nIn some cases, author is being shown as a hyperlink, which is incorrect. \r\n\r\nI've updated the spec for the feature in https://github.com/NuGet/Home/pull/13514 to clarify that author will be shown for IntelliSense suggested packages\n\n### Verbose Logs\n\n_No response_"},{"Id":"39309191399","Type":"IssuesEvent","CreatedAt":"2024-06-14T16:03:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13548","RelatedDescription":"Opened issue \"Simplify package source mappings for Microsoft.* packages\" (#13548) at NuGet/Home","RelatedBody":"In https://github.com/NuGet/NuGet.Client/pull/5844 I added a lot of package source mappings to find versions of packages that didn't exist on dotnet-public. However, I want to investigate whether there are simplifications to these mappings."},{"Id":"39289900351","Type":"IssuesEvent","CreatedAt":"2024-06-14T04:23:34","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13535","RelatedDescription":"Closed issue \"SignatureUtility.GetCertificates in NuGet.Client can skip calling Dispose on error\" (#13535) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nCommit f7cc7b86152a1af085d394c9cd57baa8142d3044\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nhttps://github.com/NuGet/NuGet.Client/blob/dc2e3b27170c779e3c01a7306504fb83cb4ef147/src/NuGet.Core/NuGet.Packaging/Signing/Utility/SignatureUtility.cs#L555-L566 has this code:\r\n\r\n```csharp\r\n            IX509CertificateChain certificates = GetCertificateChain(\r\n                signerInfo.Certificate,\r\n                signedCms.Certificates,\r\n                certificateType,\r\n                includeChain);\r\n\r\n\r\n            if (certificates == null || certificates.Count == 0)\r\n            {\r\n                throw new SignatureException(errors.ChainBuildingFailed, Strings.CertificateChainBuildFailed);\r\n            }\r\n\r\n\r\n            return certificates;\r\n```\r\n\r\nSince `certificates` is an `IDisposable`, we should call `Dispose()` on it when it's non-null and we still decide to throw an exception.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39285676515","Type":"IssuesEvent","CreatedAt":"2024-06-13T23:30:18","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13547","RelatedDescription":"Opened issue \"'dotnet nuget why' crashes when using --framework option\" (#13547) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.100-preview.6, 8.0.4xx\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n`> dotnet nuget why C:\\path package --framework net6.0`\r\n\r\nThe dotnet SDK fails to parse any provided frameworks options and crashes. There is a problem with the parsing logic on the dotnet SDK side.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39284812934","Type":"IssuesEvent","CreatedAt":"2024-06-13T22:31:47","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13546","RelatedDescription":"Opened issue \"Use `SDKAnalysisLevel` in \"https everywhere: promote from warning to error\"\" (#13546) at NuGet/Home","RelatedBody":"Use https://github.com/NuGet/NuGet.Client/pull/5833, and avoid showing error based on the SDKAnalysisLevel value.\r\nif it is greater than or equal to 9.0.100 > show error message."},{"Id":"39271266642","Type":"IssuesEvent","CreatedAt":"2024-06-13T14:22:53","Actor":"akoeplinger","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13545","RelatedDescription":"Opened issue \"RestoreTask randomly fails after upgrading to latest version\" (#13545) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.11.0-rc.90\n\n### Worked before?\n\nNuGet in dotnet sdk 9.0-preview4\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nSince we updated to a dotnet 9.0-preview6 SDK we started seeing RestoreTask failing randomly in the VMR build: https://github.com/dotnet/sdk/issues/41477#issuecomment-2154989462\r\n\r\nAfter the fix in https://github.com/NuGet/NuGet.Client/pull/5845 we bumped again (i.e. we're now using a very recent nuget.client) we now see these messages\r\n\r\n> D:\\a\\_work\\1\\s\\.dotnet\\sdk\\9.0.100-preview.6.24311.23\\NuGet.targets(170,5): The feed 'dotnet-public [https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json]' lists package 'System.Text.Json.7.0.3' but multiple attempts to download the nupkg have failed. The feed is either invalid or required packages were removed while the current operation was in progress. Verify the package exists on the feed and try again. [D:\\a\\_work\\1\\s\\src\\nuget-client\\build\\restorehelper.targets]\r\n\r\nor\r\n\r\n> D:\\a\\_work\\1\\s\\.dotnet\\sdk\\9.0.100-preview.6.24311.23\\NuGet.targets(170,5): error : The feed 'dotnet-public [https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json]' lists package 'Castle.Core.5.1.1' but multiple attempts to download the nupkg have failed. The feed is either invalid or required packages were removed while the current operation was in progress. Verify the package exists on the feed and try again. [D:\\a\\_work\\1\\s\\src\\efcore\\EFCore.sln]\r\n\r\nI've attached some binlogs: [binlogs.zip](https://github.com/user-attachments/files/15821942/binlogs.zip)\r\n\r\nIt's happening for random packages and given we only started seeing this when bumping the dotnet SDK (and thus nuget) I think it's more likely a nuget back than an issue with the AzDO feed.\r\n\r\nIs there some way we can enable more logging?\r\n\r\n/cc @nkolev92 @kartheekp-ms \r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39257274439","Type":"IssuesEvent","CreatedAt":"2024-06-13T07:40:27","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13543","RelatedDescription":"Opened issue \"[Bug Bash] The searching mode “packageid:[PackageName]” should also be supported in the filter of ‘Installed’/’Updates’/’Consolidate’ tab\" (#13543) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.11.0.96\n\n### Worked before?\n\nIt’s not a regression since it reproes on D16.11\\34601.136 with implicit NuGet Client 5.11.6.4.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1.\tCreate a solution with two C# Console App (.NET 8.0) projects (called Project1 and Project2), right-click the solution in the Solution Explorer window and select the menu item “Manage NuGet Packages for Solution…”..\r\n2.\tGo to ‘Browse’ tab, install the package **‘jQuery 3.5.0’** into **Project1** and install the package **‘jQuery 3.6.0’** into **Project2**.\r\n3.\tIn the right panel, select the ‘3.5.0’ in the drop-down list of ‘Version’ box and click the alternate package link ‘jQuery>=3.5.0.1’.\r\n4.\tDon’t delete the searching string “packageid:[PackageName]” in the filter and click the ‘Installed’/’Updates’/’Consolidate’ tab.\r\n\r\n#### Expected Results:\r\nThe searching mode “packageid:[PackageName]” should also be supported in the filter of ‘Installed’/’Updates’/’Consolidate’ tab. There should be the package ‘jQuery’ listed in ‘Installed’/’Updates’/’Consolidate’ tab in this instance.\r\n\r\n#### Actual Result:\r\nThe searching mode “packageid:[PackageName]” is not supported in the filter of ‘Installed’/’Updates’/’Consolidate’ tab as below screenshot. It doesn’t make sense because the searching mode “packageid:[PackageName]” is supported in ‘Browse’ tab.\r\n![image](https://github.com/NuGet/Home/assets/20632625/0c41df51-5659-4755-b41b-dc223ba2a2ec)\r\n\r\n#### Notes:\r\nRepro Rate: 100%\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-17T03:30:18.48348Z","RunDurationInMilliseconds":942}