{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"NuGet 5.9 is a great release that brings a refined experience to everything package management. We’ve added a bunch of exciting quality of life improvements while also bringing you a more performant...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21279427613","Type":"PullRequestEvent","CreatedAt":"2022-04-13T22:56:31","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9093","RelatedDescription":"Merged pull request \"Update version of moment.js\" (#9093) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/4343"},{"Id":"21277193678","Type":"IssuesEvent","CreatedAt":"2022-04-13T20:01:08","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9037","RelatedDescription":"Closed issue \"[Upload UI]: Improve experience when package has no license \" (#9037) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nThe web UI shows a warning if you upload a package without a license:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/157503952-c57bf021-8f57-44c0-ab07-68c1d5ddd7f6.png)\r\n\r\nToday the `Learn more` links to: https://aka.ms/deprecateLicenseUrl\r\n\r\nThis doc is for packages that provide the legacy URL but isn't ideal for brand new packages.\n\n### The Elevator Pitch\n\nLink to the licensing best practices instead! https://aka.ms/nuget/authoring-best-practices#licensing\n\n### Additional Context and Details\n\n_No response_"},{"Id":"21276854224","Type":"PullRequestEvent","CreatedAt":"2022-04-13T19:38:23","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9094","RelatedDescription":"Opened pull request \"Removing tests that are feature-flag-state-dependent.\" (#9094) at NuGet/NuGetGallery","RelatedBody":"`/packages` request produces 400 for the test only if the code path that analyzes the content of `nugetab` cookie is executed (i.e. A/B testing feature flag is enabled). When it is not, the cookie is completely ignored and tests that involve it fail. We don't need that feature flag dependency in tests that are gateway for the deployment, hence the removal."},{"Id":"21263286018","Type":"PullRequestEvent","CreatedAt":"2022-04-13T07:28:31","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9092","RelatedDescription":"Closed pull request \"Update version of moment.js\" (#9092) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/4343"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21280519046","Type":"IssuesEvent","CreatedAt":"2022-04-14T01:01:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11746","RelatedDescription":"Opened issue \"NuGet Package Manager window causes persistent WPF frame rate spike due to a runaway animation\" (#11746) at NuGet/Home","RelatedBody":"See details in the internal issue, [1496338](https://devdiv.visualstudio.com/DevDiv/_queries/edit/1496338). \r\n\r\nThis is a consequence of a bug in WPF, where an animation does not get stop despite it being not visible."},{"Id":"21279987174","Type":"IssuesEvent","CreatedAt":"2022-04-13T23:59:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11745","RelatedDescription":"Opened issue \"Disable flaky test: PushCommand_PushToServer_WhenPluginReturnsAbort_ThrowsAndDoesNotFallBackToConsoleProvider\" (#11745) at NuGet/Home","RelatedBody":""},{"Id":"21279894295","Type":"IssuesEvent","CreatedAt":"2022-04-13T23:47:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11738","RelatedDescription":"Closed issue \"[Bug]: Cannot compile NuGet.Client due to duplicated PackageReference\" (#11738) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nOther/NA\r\n\r\n### Product Version\r\n\r\nVS Version 17.3.0 Preview 1.0 [32410.47.main], NuGet 6.3.0.10\r\n\r\n### Worked before?\r\n\r\nYes\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\n1. Clone NuGet.Client to dev in commit: e70d3c6167fc1c878acee98050784726152e4a31\r\n1. Open Dev PowerShell for VS 2022 IntPreview\r\n2. Run `cd path\\to\\repo`\r\n3. Run `git clean -xdf; .\\configure.ps1 -Force; .\\build.ps1 -Fast -SkipUnitTest -Binlog`\r\n\r\n### Expected\r\n\r\nCode compiles\r\n\r\n### Actual\r\n\r\n```\r\nC:\\src\\NuGet.Client.pmc\\test\\NuGet.Clients.Tests\\NuGet.PackageManagement.UI.Test\\NuGet.PackageManagement.UI.Test.csproj : error NU1504: Duplicate 'PackageReference' items found. Remove the duplicate items or u\r\n```\r\n\r\n### Verbose Logs\r\n[msbuild.restore.binlog.zip](https://github.com/NuGet/Home/files/8468903/msbuild.restore.binlog.zip)\r\n\r\nAttaching restore binlog"},{"Id":"21279754058","Type":"IssuesEvent","CreatedAt":"2022-04-13T23:31:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11744","RelatedDescription":"Opened issue \"NuGet.Commands.FuncTest.RestoreCommandTests.RestoreCommand_FrameworkImport_WarnOnAsync is flaky\" (#11744) at NuGet/Home","RelatedBody":"It's flaky, likely becausen it depends on NuGet.org.\r\n\r\nIn similar ilk like some recent fixes, we should rewrite this test to work without nuget.org."},{"Id":"21278405601","Type":"IssuesEvent","CreatedAt":"2022-04-13T21:24:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11713","RelatedDescription":"Closed issue \"[Bug]: NuGet package update reformats multi-line \"Exec Command\" string in project files\" (#11713) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 2022 (17.1.3)\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n- Have some kind of multi-line exec command in the project file, e.g.:\r\n\r\n```\r\n\t<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n\t\t<Exec Command=\"\r\n\t\t\t$(NSwagExe_Net60) openapi2csclient ^\r\n\t\t\t    /input:Infrastructure/Clients/Something/something.json ^\r\n\t\t            /output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^\r\n\t\t\t    /classname:SomethingApiClient ^\r\n\t\t\t    /namespace:Something ^\r\n\t\t\t    /GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^\r\n\t\t\t    /JsonLibrary:SystemTextJson ^\r\n\t\t\" />\r\n\t</Target>\r\n```\r\n\r\n- Update a NuGet package via the VS package management UI.\r\n- Observe, that the exec command string gets reformatted into a single-line representation:\r\n\r\n```\r\n<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n    <Exec Command=\"&#xD;&#xA;\t\t\t$(NSwagExe_Net60) openapi2csclient ^&#xD;&#xA;\t\t\t    /input:Infrastructure/Clients/Something/something.json ^&#xD;&#xA;\t\t\t\t/output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^&#xD;&#xA;\t\t\t\t/classname:SomethingApiClient ^&#xD;&#xA;\t\t\t\t/namespace:Something ^&#xD;&#xA;\t\t\t\t/GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^&#xD;&#xA;\t\t\t\t/JsonLibrary:SystemTextJson ^&#xD;&#xA;\t\t\" />\r\n</Target>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21278375255","Type":"IssuesEvent","CreatedAt":"2022-04-13T21:22:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/11713","RelatedDescription":"Reopened issue \"[Bug]: NuGet package update reformats multi-line \"Exec Command\" string in project files\" (#11713) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 2022 (17.1.3)\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n- Have some kind of multi-line exec command in the project file, e.g.:\r\n\r\n```\r\n\t<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n\t\t<Exec Command=\"\r\n\t\t\t$(NSwagExe_Net60) openapi2csclient ^\r\n\t\t\t    /input:Infrastructure/Clients/Something/something.json ^\r\n\t\t            /output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^\r\n\t\t\t    /classname:SomethingApiClient ^\r\n\t\t\t    /namespace:Something ^\r\n\t\t\t    /GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^\r\n\t\t\t    /JsonLibrary:SystemTextJson ^\r\n\t\t\" />\r\n\t</Target>\r\n```\r\n\r\n- Update a NuGet package via the VS package management UI.\r\n- Observe, that the exec command string gets reformatted into a single-line representation:\r\n\r\n```\r\n<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n    <Exec Command=\"&#xD;&#xA;\t\t\t$(NSwagExe_Net60) openapi2csclient ^&#xD;&#xA;\t\t\t    /input:Infrastructure/Clients/Something/something.json ^&#xD;&#xA;\t\t\t\t/output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^&#xD;&#xA;\t\t\t\t/classname:SomethingApiClient ^&#xD;&#xA;\t\t\t\t/namespace:Something ^&#xD;&#xA;\t\t\t\t/GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^&#xD;&#xA;\t\t\t\t/JsonLibrary:SystemTextJson ^&#xD;&#xA;\t\t\" />\r\n</Target>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21278355806","Type":"IssuesEvent","CreatedAt":"2022-04-13T21:21:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11713","RelatedDescription":"Closed issue \"[Bug]: NuGet package update reformats multi-line \"Exec Command\" string in project files\" (#11713) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 2022 (17.1.3)\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n- Have some kind of multi-line exec command in the project file, e.g.:\r\n\r\n```\r\n\t<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n\t\t<Exec Command=\"\r\n\t\t\t$(NSwagExe_Net60) openapi2csclient ^\r\n\t\t\t    /input:Infrastructure/Clients/Something/something.json ^\r\n\t\t            /output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^\r\n\t\t\t    /classname:SomethingApiClient ^\r\n\t\t\t    /namespace:Something ^\r\n\t\t\t    /GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^\r\n\t\t\t    /JsonLibrary:SystemTextJson ^\r\n\t\t\" />\r\n\t</Target>\r\n```\r\n\r\n- Update a NuGet package via the VS package management UI.\r\n- Observe, that the exec command string gets reformatted into a single-line representation:\r\n\r\n```\r\n<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n    <Exec Command=\"&#xD;&#xA;\t\t\t$(NSwagExe_Net60) openapi2csclient ^&#xD;&#xA;\t\t\t    /input:Infrastructure/Clients/Something/something.json ^&#xD;&#xA;\t\t\t\t/output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^&#xD;&#xA;\t\t\t\t/classname:SomethingApiClient ^&#xD;&#xA;\t\t\t\t/namespace:Something ^&#xD;&#xA;\t\t\t\t/GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^&#xD;&#xA;\t\t\t\t/JsonLibrary:SystemTextJson ^&#xD;&#xA;\t\t\" />\r\n</Target>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21278156728","Type":"IssuesEvent","CreatedAt":"2022-04-13T21:06:48","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11743","RelatedDescription":"Opened issue \"[Bug]: The criteria to raise a warning for no symbol api key while pushing symbol packages is incorrect\" (#11743) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe\n\n### Product Version\n\ndotnet nuget push and nuget.exe push\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nIn the existing implementation, code checks for empty or null value for `--api-key` when pushing `symbol packages` to an online feed for e.g., `nuget.org`. If the validation fails, it raises a warning saying `Found symbols package '{0}', but no API key was specified for the symbol server. To save an API Key, run 'NuGet.exe setApiKey [your API key from http://www.NuGet.org]'`\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/2f609f59dee750a4670838701b0de83792ff7402/src/NuGet.Core/NuGet.Protocol/Resources/PackageUpdateResource.cs#L284\r\n\r\nInstead, it should check for empty or null value for `--symbol-api-key` because the logic is trying to push a `symbols package` not a regular `package .nupkg`.\r\n\r\nThe fix for this issue is simply to validate symbol api key and then raise a warning if the value validation fails.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21276611449","Type":"IssuesEvent","CreatedAt":"2022-04-13T19:22:40","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6764","RelatedDescription":"Closed issue \"[PackageReference] Centrally manage NuGet package versions for a solution or a repo\" (#6764) at NuGet/Home","RelatedBody":"PackageReference enhancements are summarized as part of this Epic issue: https://github.com/NuGet/Home/issues/6763 \r\n\r\n* Status: **Incubation**\r\n* Spec: [Centrally manage NuGet package versions for a solution or a repo](https://github.com/NuGet/Home/wiki/Centrally-managing-NuGet-packages)"},{"Id":"21276244921","Type":"IssuesEvent","CreatedAt":"2022-04-13T18:59:02","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11741","RelatedDescription":"Closed issue \"Test:  package signing test classes use separate test fixture instances\" (#11741) at NuGet/Home","RelatedBody":"Package signing tests which use a test fixture like [CertificatesFixture](https://github.com/NuGet/NuGet.Client/blob/dev/test/NuGet.Core.Tests/NuGet.Packaging.Test/SigningTests/CertificatesFixture.cs), to create a bunch of test PKI pull in the fixture using `IClassFixture<CertificatesFixture>`, which creates one instance of the fixture per class test.  Certificate creation is slow, so, in the spirit of making tests faster, we want to reuse test fixtures as much as possible."},{"Id":"21275738907","Type":"IssuesEvent","CreatedAt":"2022-04-13T18:27:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11742","RelatedDescription":"Opened issue \"Move all projects in release-5.11.x to Lang Version 8.0\" (#11742) at NuGet/Home","RelatedBody":"This would allow us to use the new using syntax and make it easier to cherry-pick things into older branches. \r\n\r\nSee: https://github.com/NuGet/NuGet.Client/pull/4023/files"},{"Id":"21275711975","Type":"IssuesEvent","CreatedAt":"2022-04-13T18:25:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11737","RelatedDescription":"Closed issue \"The trailing slash in GeneratePathProperty causes ROBOCOPY failures\" (#11737) at NuGet/Home","RelatedBody":"See https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1496902. \r\n\r\nOrioginal issue is [1522444](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1522444)"},{"Id":"21270861544","Type":"IssuesEvent","CreatedAt":"2022-04-13T14:09:54","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11741","RelatedDescription":"Opened issue \"Test:  package signing test classes use separate test fixture instances\" (#11741) at NuGet/Home","RelatedBody":"Package signing tests which use a test fixture like [CertificatesFixture](https://github.com/NuGet/NuGet.Client/blob/dev/test/NuGet.Core.Tests/NuGet.Packaging.Test/SigningTests/CertificatesFixture.cs), to create a bunch of test PKI pull in the fixture using `IClassFixture<CertificatesFixture>`, which creates one instance of the fixture per class test.  Certificate creation is slow, so, in the spirit of making tests faster, we want to reuse test fixtures as much as possible."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":106,"FavoriteCount":30,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-04-14T03:30:25.3806086Z","RunDurationInMilliseconds":1503}