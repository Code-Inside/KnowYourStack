{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"38110102718","Type":"IssuesEvent","CreatedAt":"2024-05-06T05:17:45","Actor":"egvijayanand","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9940","RelatedDescription":"Opened issue \"[Feature]: It would be great if the Package target version is displayed in the Versions tab\" (#9940) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nDisplaying the package target framework version is useful.\r\n\r\nBut it would be great if the Package target version is also displayed in the Versions tab.\r\n\r\nSo that no need to traverse multiple times to find the target framework of a particular version.\r\n\r\nDisplaying the target framework as an additional column would help to locate it even more quickly.\n\n### The Elevator Pitch\n\nIt helps in finding the appropriate version of the package in a particular target framework version.\r\n\r\nTarget framework versions can be cached in the backend so that they need not be queried again and again.\n\n### Additional Context and Details\n\n![image](https://github.com/NuGet/NuGetGallery/assets/81947404/475ccf5c-048f-4c99-9706-d210fd1d4958)\r\n\r\nA sample versions page, here multiple versions of the package targeting different framework versions, have to traverse each version of the package to find out the exact version of the package to reference.\r\n\r\nDisplaying the target framework as an additional column would help to locate it even quicker."},{"Id":"37941308781","Type":"IssuesEvent","CreatedAt":"2024-04-30T05:19:47","Actor":"v-manil2","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9939","RelatedDescription":"Opened issue \"[Feature]: Need more visibility on why package is taking so long to get indexed to Nuget.org.\" (#9939) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nYour status page is all green. Nothing indicates anything should be delayed. We need more visibility into why a package is taking so long to get indexed. This has happened several times in the past.\r\n\r\nAs Nuget package validation depends on partner service team for validation which takes more time for the package to get validated.\n\n### The Elevator Pitch\n\nIf you can display a message stating, \"Please note that the package has been sent for manual validation, and completion may take some time\" (If possible, please mention the approximate time period required for validation completion). \n\n### Additional Context and Details\n\n_No response_"},{"Id":"37926955044","Type":"PullRequestEvent","CreatedAt":"2024-04-29T18:19:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9938","RelatedDescription":"Merged pull request \"Add relist and deprecate to unlist scope\" (#9938) at NuGet/NuGetGallery","RelatedBody":"The existing unlist API key scope already has the relist and deprecate capabilities. This updates the supporting text used on the API keys page to mention these capabilities.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/8873.\r\n\r\nSummary of changes:\r\n- Add relist to the API key label since it's always been there\r\n- Make wording of package vs. package versions consistent (unlist/relist/deprecate is done at the version level)\r\n- Show deprecate capability on the API key if the user is in the flight\r\n- Delete some unused string in `src/NuGetGallery/Strings.resx`\r\n- Fix web.config indentation for binding redirects\r\n\r\n### Before\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/579b4830-f80d-4426-88e7-fbdb29c82cc8)\r\n\r\n### After\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/10942375-cc71-418b-905c-b88e204b50e2)\r\n"},{"Id":"37926904472","Type":"PullRequestEvent","CreatedAt":"2024-04-29T18:17:25","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9904","RelatedDescription":"Merged pull request \"Fixing JS exceptions on profiles page\" (#9904) at NuGet/NuGetGallery","RelatedBody":"We're seeing some javascript exceptions for the profiles page. We use the same scripts file on the search page and the profiles page, and need to deal with null values properly to avoid exceptions. This should be fixed now."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"38111453716","Type":"IssuesEvent","CreatedAt":"2024-05-06T06:25:26","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13308","RelatedDescription":"Closed issue \"dotnet list <SOLUTION> package --vulnerable/--outdated/--deprecated  fails with Azure Artifacts Credential Provider \" (#13308) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet 8.0.200 (NuGet 6.9.1.3)\r\n\r\n### Worked before?\r\n\r\nDon't know\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nGiven a repository with the following .NET solution:\r\n```\r\n┌─src\r\n├─┬─MyProject1\r\n│ └───MyProject1.csproj\r\n├─┬─MyProject2\r\n│ └───MyProject2.csproj\r\n├─┬─MyProject3\r\n│ └───MyProject3.csproj\r\n├───MySolution.sln\r\n├───nuget.config\r\n\r\n```\r\nAll the 3 projects have NuGet `PackageReference`s from two different NuGet feeds:\r\n* The public NuGet feed (https://api.nuget.org/v3/index.json)\r\n* Our Azure DevOps Artifacts feed (https://pkgs.dev.azure.com/[myorg]/_packaging/[myfeed]/nuget/v3/index.json\r\n\r\nBoth of these feeds are listed in the **nuget.config** file.\r\n\r\nI have installed the [Azure Artifacts Credential Provider](https://github.com/microsoft/artifacts-credprovider) on the current device (tested on both Windows and Linux).\r\n\r\n**I have successfully authenticated and acquired a token for the Azure DevOps feed** by using the `--interactive` option with some dotnet command; f.ex. by having run `dotnet restore --interactive` once from the `src` folder.\r\n```bash\r\n~/repos/myrepo/src> dotnet restore --interactive --no-cache\r\n  Determining projects to restore...\r\n      [CredentialProvider]DeviceFlow: https://pkgs.dev.azure.com/[myorg]/_packaging/[myfeed]/nuget/v3/index.json\r\n      [CredentialProvider]ATTENTION: User interaction required.\r\n\r\n      **********************************************************************\r\n\r\n      To sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code ****** to authenticate.\r\n\r\n      **********************************************************************\r\n\r\n  Restored /home/me/repos/myrepo/MyProject1/MyProject1.csproj (in 36,52 sec).\r\n  Restored /home/me/repos/myrepo/MyProject2/MyProject2.csproj (in 36,6 sec).\r\n  Restored /home/me/repos/myrepo/MyProject3/MyProject3.csproj (in 36,64 sec).\r\n```\r\n\r\nHaving performed the above step, I can now successfully run `dotnet restore` without the `--interactive` option each time, since the acquired token is persisted on the device and can be reused until the token expiry:\r\n```bash\r\n~/repos/myrepo/src> dotnet restore\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n```\r\n\r\nWhen changing `cwd` to one of the project directories, f.ex. src/MyProject1, I can now successfully run the `dotnet list package --vulnerable` command successfully; authentication to the Azure DevOps feed works fine:\r\n```bash\r\n~/repos/myrepo/src/MyProject1> dotnet list package --vulnerable\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   https://pkgs.dev.azure.com/[myorg]/_packaging/[myfeed]/nuget/v3/index.json\r\n\r\nThe given project `MyProject1` has no vulnerable packages given the current sources.\r\n```\r\n\r\nBut if I try to do the same from the solution folder (src):\r\n```bash\r\n~/repos/myrepo/src> dotnet list package --vulnerable\r\n\r\nwarn : The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for `NuGet`\r\nerror: Response status code does not indicate success: 401 (Unauthorized).\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package list [arguments] [options]\r\n\r\nArguments:\r\n  <PROJECT | SOLUTION>  A path to a project, solution file or directory.\r\n  ...\r\n```\r\n\r\nIt looks like the solution file in the current folder is read but authentication to the Azure DevOps feed fails - even if my persisted token should still be valid. \r\n(FYI: If I explicitly pass the SOLUTION file path as argument the same thing happens).\r\n\r\nPlease also see bug #13307 related to unexpected behavior with the `<SOLUTION | PROJECT>` argument.\r\n\r\nPlease figure out why authentication fails when using solution files but works when only using project files.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"38099012561","Type":"IssuesEvent","CreatedAt":"2024-05-05T12:44:16","Actor":"JustinPechstein","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13427","RelatedDescription":"Opened issue \"Reference not working after migrating to PackageReference\" (#13427) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n.NET SDK Version 8.0.204\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHello, \r\nyesterday I restructured my files and projects a bit and since I did this I have this new errormessage \" Must use PackageReference\".\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/dba9adc6-1c98-4250-bfbf-521c0c6b19f7)\r\n\r\nI quickly found out that I have to migrate the packages.config to PackageReferences to solve this problem. \r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/8cd20f39-b214-4543-950d-ec5c0c4d3b8c)\r\n\r\nSo I did the migration as shown (once with every transitive dependencies checked and once with only the Top-level dependencies).\r\n\r\nThis worked completely fine for all the projects, instead of \"Microsoft.Office.Interop.Excel\". After the migration the reference is bugged and the \"new\" behavior is hard to explain. In general the reference exists:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/559c231d-0b98-4853-9de4-0089961d27b1)\r\n\r\nand I can use it in the using section without any problems:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/e460708a-360f-4820-b69c-8c3a951d6279)\r\n\r\nBut, without doing anything I have tons of errors because of whatever reason...\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/4fcc65cd-a5b5-44be-be85-743e84c8f604)\r\n\r\nThere are several datatypes that can be resolved but the properties for \"Rows\" and \"Cells\" are not being found.\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/006ede65-d197-460f-8f52-950207d6957f)\r\n\r\nI am very curious about this, did I miss something, did the migration miss something? Or might this be a problem with that package?\r\n\r\nI am thankful for every helpful response because I cannot carry on right now...\n\n### Verbose Logs\n\n_No response_"},{"Id":"38065470261","Type":"IssuesEvent","CreatedAt":"2024-05-03T14:07:09","Actor":"jhennessey","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13422","RelatedDescription":"Closed issue \"[Feature]: Identify and report the package(s) with a transitive dependency upon a vulnerable package\" (#13422) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nWhen running `dotnet list <project> package --vulnerable --include-transitive` the generated report will include transitive dependencies with detected vulnerabilities. However, the report (text or JSON format) does not include which top-level package(s) depend upon the transitive dependency. Therefore, when automating vulnerability scans, it becomes difficult to know which packages should be reviewed for updates. Including this information in the generated report file would greatly ease the effort required to determine what packages require updates.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"38052922561","Type":"IssuesEvent","CreatedAt":"2024-05-03T07:04:41","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13352","RelatedDescription":"Closed issue \"Crash in CopyNupkgToStreamAsync\" (#13352) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuGet.Protocol 6.9.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nUsing proget as nuget feed , some packages cannot be downloaded\r\nIm able to list the problematic package but download crash  at CopyNupkgToStreamAsync\r\n```\r\nusing NuGet.Common;\r\nusing NuGet.Configuration;\r\nusing NuGet.Packaging;\r\nusing NuGet.Protocol;\r\nusing NuGet.Protocol.Core.Types;\r\nusing NuGet.Versioning;\r\n\r\n\r\nstring url = \"https://myprogetfeed\";\r\nstring username = \"password\";\r\nstring password = \"\";\t\r\nILogger logger = NullLogger.Instance;\r\nCancellationToken cancellationToken = CancellationToken.None;\r\n\r\nSourceCacheContext cache = new SourceCacheContext();\r\n\r\nPackageSource packageSource = new PackageSource(url);\r\npackageSource.Credentials = new PackageSourceCredential(url,username, password, true, null);\r\n\r\nSourceRepository repository = Repository.Factory.GetCoreV3(packageSource);\r\nFindPackageByIdResource resource = await repository.GetResourceAsync<FindPackageByIdResource>();\r\n\r\nstring packageId = \"jQuery.vsdoc\";\r\nNuGetVersion packageVersion = new NuGetVersion(\"1.6\");\r\n\r\nIEnumerable<NuGetVersion> versions = await resource.GetAllVersionsAsync(\r\n\t\tpackageId,\r\n\t\tcache,\r\n\t\tlogger,\r\n\t\tcancellationToken);\r\n\r\nforeach (NuGetVersion version in versions)\r\n{\r\n\tConsole.WriteLine($\"Found version {version}\");\r\n}\r\n\r\nusing MemoryStream packageStream = new MemoryStream();\r\n\r\nawait resource.CopyNupkgToStreamAsync(\r\n\t\tpackageId,\r\n\t\tpackageVersion,\r\n\t\tpackageStream,\r\n\t\tcache,\r\n\t\tlogger,\r\n\t\tcancellationToken);\r\n\r\n\r\nConsole.WriteLine($\"Downloaded package {packageId} {packageVersion}\");\r\n\r\nusing PackageArchiveReader packageReader = new PackageArchiveReader(packageStream);\r\nNuspecReader nuspecReader = await packageReader.GetNuspecReaderAsync(cancellationToken);\r\n```\n\n### Verbose Logs\n\n```shell\nSystem.IO.InvalidDataException: 'Central Directory corrupt.'\r\n\r\n[Exception] System.IO.Compression.dll!System.IO.Compression.ZipArchive.ReadEndOfCentralDirectory() Line 383\r\n\tat System.IO.Compression\\ZipArchive.cs(383)\r\n[Exception] System.IO.Compression.dll!System.IO.Compression.ZipArchive.ZipArchive(System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding) Line 179\r\n\tat System.IO.Compression\\ZipArchive.cs(179)\r\n[Exception] System.IO.Compression.dll!System.IO.Compression.ZipArchive.ZipArchive(System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) Line 105\r\n\tat System.IO.Compression\\ZipArchive.cs(105)\r\n[Exception] NuGet.Packaging.dll!NuGet.Packaging.PackageArchiveReader.PackageArchiveReader(System.IO.Stream stream, bool leaveStreamOpen, NuGet.Frameworks.IFrameworkNameProvider frameworkProvider, NuGet.Frameworks.IFrameworkCompatibilityProvider compatibilityProvider)\r\n[Exception] NuGet.Packaging.dll!NuGet.Packaging.PackageArchiveReader.PackageArchiveReader(System.IO.Stream stream)\r\n[Exception] ConsoleApp1.dll!Program.<Main>$(string[] args) Line 50\r\n\tat C:\\Users\\fbrunetgirard\\source\\repos\\ConsoleApp1\\ConsoleApp1\\Program.cs(50)\r\nSystem.Private.CoreLib.dll!System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() Line 53\r\n\tat /_/src/libraries/System.Private.CoreLib/src/System/Runtime/ExceptionServices/ExceptionDispatchInfo.cs(53)\r\nSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task task) Line 154\r\n\tat /_/src/libraries/System.Private.CoreLib/src/System/Runtime/CompilerServices/TaskAwaiter.cs(154)\r\nSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task, System.Threading.Tasks.ConfigureAwaitOptions options) Line 118\r\n\tat /_/src/libraries/System.Private.CoreLib/src/System/Runtime/CompilerServices/TaskAwaiter.cs(118)\r\n[Waiting on Async Operation, double-click or press enter to view Async Call Stacks]\r\nConsoleApp1.dll!Program.<Main>(string[] args)\n```\n"},{"Id":"38045215876","Type":"IssuesEvent","CreatedAt":"2024-05-02T23:10:55","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13426","RelatedDescription":"Closed issue \"WPF Multiple Projects Incorrect Package Version\" (#13426) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nUsing Directory.Packages.props file, Main Project loads correct versions of the Packages.\r\nAdding a second project, does not load packages - fixed by ensuring <TargetFramework> is the exact same between projects.\r\nWhen the <TargetFramework> is aligned the second project loads the packages but the minimum version.\r\nEntityFramework.Core (1.0.0) but does load Microsoft.EntityFrameworkCore.SqlServer.HierarchyId as (8.0.0)\r\n\r\nDirectory.Build.props\r\n`<Project>\r\n\t<PropertyGroup>\r\n\t\t<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n\t\t<!-- https://learn.microsoft.com/nuget/consume-packages/Central-Package-Management?WT.mc_id=DT-MVP-5003472#transitive-pinning -->\r\n\t\t<!--<CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>-->\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageVersion Include=\"CommunityToolkit.Mvvm\" Version=\"8.2.2\" />\r\n\t\t<PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"8.0.0\" />\r\n\t\t<PackageVersion Include=\"Microsoft.Extensions.Hosting\" Version=\"8.0.0\" />\r\n\t\t<PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.9.0\" />\r\n\t\t<PackageVersion Include=\"Serilog\" Version=\"3.1.1\" />\r\n\t\t<PackageVersion Include=\"Serilog.Sinks.Async\" Version=\"1.5.0\" />\r\n\t\t<PackageVersion Include=\"Serilog.Sinks.Debug\" Version=\"2.0.0\" />\r\n\t\t<PackageVersion Include=\"Serilog.Sinks.File\" Version=\"5.0.0\" />\r\n\t\t<PackageVersion Include=\"System.DirectoryServices.AccountManagement\" Version=\"8.0.0\" />\r\n    \r\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.SqlServer.HierarchyId\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"8.0.0\">\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n`\r\nMain Project csproj\r\n`<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<OutputType>WinExe</OutputType>\r\n\t\t<TargetFramework>net8.0-windows</TargetFramework>\r\n\t\t<LangVersion>12.0</LangVersion>\r\n\t\t<UseWPF>true</UseWPF>\r\n\t\t<StartupObject>DigitalOrebodyRHOKSWPF.App</StartupObject>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"CommunityToolkit.Mvvm\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Hosting\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ApplicationDefinition Remove=\"App.xaml\" />\r\n\t\t<Page Include=\"App.xaml\" />\r\n\t</ItemGroup>\r\n\r\n\t\r\n</Project>`\r\n\r\nSecondary Project csproj\r\n`<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net8.0-windows</TargetFramework>\r\n\t\t<LangVersion>12.0</LangVersion>\r\n\t</PropertyGroup>\r\n\t\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer.HierarchyId\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" />\r\n\t</ItemGroup>\r\n</Project>\r\n`\r\n\r\nThanks in advance.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"38035991814","Type":"IssuesEvent","CreatedAt":"2024-05-02T17:33:44","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13425","RelatedDescription":"Closed issue \"Enable Nullable and throw in KnownOwnerViewModel\" (#13425) at NuGet/Home","RelatedBody":"PR Feedback https://github.com/NuGet/NuGet.Client/pull/5782#discussion_r1585231539\r\nThere is no known VS customer impact, nor is there an SDK consumer impact as this is part of the PM UI in Visual Studio."},{"Id":"38008418192","Type":"IssuesEvent","CreatedAt":"2024-05-02T02:22:47","Actor":"JemQDev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13426","RelatedDescription":"Opened issue \"WPF Multiple Projects Incorrect Package Version\" (#13426) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nUsing Directory.Packages.props file, Main Project loads correct versions of the Packages.\r\nAdding a second project, does not load packages - fixed by ensuring <TargetFramework> is the exact same between projects.\r\nWhen the <TargetFramework> is aligned the second project loads the packages but the minimum version.\r\nEntityFramework.Core (1.0.0) but does load Microsoft.EntityFrameworkCore.SqlServer.HierarchyId as (8.0.0)\r\n\r\nDirectory.Build.props\r\n`<Project>\r\n\t<PropertyGroup>\r\n\t\t<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n\t\t<!-- https://learn.microsoft.com/nuget/consume-packages/Central-Package-Management?WT.mc_id=DT-MVP-5003472#transitive-pinning -->\r\n\t\t<!--<CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>-->\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageVersion Include=\"CommunityToolkit.Mvvm\" Version=\"8.2.2\" />\r\n\t\t<PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"8.0.0\" />\r\n\t\t<PackageVersion Include=\"Microsoft.Extensions.Hosting\" Version=\"8.0.0\" />\r\n\t\t<PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.9.0\" />\r\n\t\t<PackageVersion Include=\"Serilog\" Version=\"3.1.1\" />\r\n\t\t<PackageVersion Include=\"Serilog.Sinks.Async\" Version=\"1.5.0\" />\r\n\t\t<PackageVersion Include=\"Serilog.Sinks.Debug\" Version=\"2.0.0\" />\r\n\t\t<PackageVersion Include=\"Serilog.Sinks.File\" Version=\"5.0.0\" />\r\n\t\t<PackageVersion Include=\"System.DirectoryServices.AccountManagement\" Version=\"8.0.0\" />\r\n    \r\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.SqlServer.HierarchyId\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite\" Version=\"8.0.0\" >\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t\t<PackageVersion Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"8.0.0\">\r\n\t\t\t<PrivateAssets>all</PrivateAssets>\r\n\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageVersion>\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n`\r\nMain Project csproj\r\n`<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<OutputType>WinExe</OutputType>\r\n\t\t<TargetFramework>net8.0-windows</TargetFramework>\r\n\t\t<LangVersion>12.0</LangVersion>\r\n\t\t<UseWPF>true</UseWPF>\r\n\t\t<StartupObject>DigitalOrebodyRHOKSWPF.App</StartupObject>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"CommunityToolkit.Mvvm\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Hosting\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ApplicationDefinition Remove=\"App.xaml\" />\r\n\t\t<Page Include=\"App.xaml\" />\r\n\t</ItemGroup>\r\n\r\n\t\r\n</Project>`\r\n\r\nSecondary Project csproj\r\n`<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net8.0-windows</TargetFramework>\r\n\t\t<LangVersion>12.0</LangVersion>\r\n\t</PropertyGroup>\r\n\t\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer.HierarchyId\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" />\r\n\t</ItemGroup>\r\n</Project>\r\n`\r\n\r\nThanks in advance.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"38001563133","Type":"IssuesEvent","CreatedAt":"2024-05-01T19:59:21","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13425","RelatedDescription":"Opened issue \"Enable Nullable throw in KnownOwnerViewModel\" (#13425) at NuGet/Home","RelatedBody":"PR Feedback https://github.com/NuGet/NuGet.Client/pull/5782#discussion_r1585231539\r\nThere is no known VS customer impact, nor is there an SDK consumer impact as this is part of the PM UI in Visual Studio."},{"Id":"37998637907","Type":"IssuesEvent","CreatedAt":"2024-05-01T18:07:26","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13424","RelatedDescription":"Opened issue \"A tip about package source mapping feature is displayed in VS when the repo has only one package source\" (#13424) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVS Internal preview version\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\n1. Create a sample Console application\r\n2. Add a NuGet.Config file to that has only `nuget.org` as package source to the sample application created above.\r\n```xml\r\n```<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n</configuration>\r\n3. Right click on the sample project and selected `Manage NuGet Packages..`\r\n4. In the browse tab, select any package.\r\n5. In Package details pane on the right side notice the information icon that says `Package source mapping is off`.\r\n\r\nI think it is not required to configure package source mapping when the repo has only feed configured. The [docs](https://learn.microsoft.com/en-us/nuget/consume-packages/package-source-mapping) also suggest that `Package Source Mapping is a tool that can be used to improve your supply chain security, especially if you use a mix of public and private package sources.`\r\n\r\n<img width=\"1235\" alt=\"image\" src=\"https://github.com/NuGet/Home/assets/52756182/29a8eee1-82b6-46f2-93b9-e7e9d9188e00\">\n\n### Verbose Logs\n\n_No response_"},{"Id":"37998628606","Type":"IssuesEvent","CreatedAt":"2024-05-01T18:07:04","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13418","RelatedDescription":"Closed issue \"`PackageSourceProvider.UpdatePackageSource` doesn't respect a value from `AllowInsecureConnection` field\" (#13418) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet SDK\r\n\r\n### Product Version\r\n\r\n6.9.1\r\n\r\n### Worked before?\r\n\r\nNo, this is not a regression\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nHi folks, a `PackageSourceProvider.UpdatePackageSource` method from the `NuGet.Configuration` package doesn't respect the `PackageSource.AllowInsecureConnections` property value.\r\n\r\nThis is due to a missing expression in the `if` statement here:\r\nhttps://github.com/NuGet/NuGet.Client/blob/3ebcf80e47ce6aaca1d017acd8750e27c8208822/src/NuGet.Core/NuGet.Configuration/PackageSource/PackageSourceProvider.cs#L616-L617\r\n\r\nTo reproduce the issue you could use a simple code snippet:\r\n\r\n```csharp\r\nusing NuGet.Configuration;\r\n\r\nvar configContents = \"\"\"\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n        <packageSources>\r\n            <add key=\"default-http\" value=\"http://api.nuget.org/v3/index.json\" />\r\n        </packageSources>\r\n    </configuration>\r\n    \"\"\";\r\n\r\nFile.WriteAllText(Path.Combine(Environment.CurrentDirectory, \"NuGet.Config\"), configContents);\r\n\r\nvar settings = new Settings(Environment.CurrentDirectory);\r\nvar packageSourceProvider = new PackageSourceProvider(settings);\r\n\r\nvar source = packageSourceProvider.GetPackageSourceByName(\"default-http\")!;\r\nsource.AllowInsecureConnections = true;\r\npackageSourceProvider.UpdatePackageSource(source, false, false);\r\n\r\n// Loading brand new Settings instance to ensure we are not checking for cached value\r\nsettings = new Settings(Environment.CurrentDirectory);\r\npackageSourceProvider = new PackageSourceProvider(settings);\r\nsource = packageSourceProvider.GetPackageSourceByName(\"default-http\")!;\r\n\r\nvar value = source.AllowInsecureConnections; // false, should be true\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-05-07T03:30:18.4957028Z","RunDurationInMilliseconds":1049}