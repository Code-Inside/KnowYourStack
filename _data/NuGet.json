{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"44437182116","Type":"PullRequestEvent","CreatedAt":"2024-12-03T20:25:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10285","RelatedDescription":"Merged pull request \"[OIDC 7] DB migration for federated credentials, associate policy with API key\" (#10285) at NuGet/NuGetGallery","RelatedBody":"> [!IMPORTANT]\r\n> This PR contains a DB migration. During deployment, we must execute Entity Framework DB migrations prior to deploying the new code.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10269.\r\n\r\nThis PR introduces database changes to support the OIDC feature. We are adding two new tables and adding a new column to the existing `Credentials` table.\r\n\r\n- **New table:** `FederatedCredentialPolicies` - this stores criteria to evaluate a federated credentials like OIDC JWTs. See [`FederatedCredentialEvaluator`](https://github.com/NuGet/NuGetGallery/blob/4ca98319e435a60807ff8a52735f5da12b68add8/src/NuGetGallery.Services/Authentication/Federated/FederatedCredentialEvaluator.cs) to see how the columns are used.\r\n  - Foreign key links to `Users` via the `CreatedByUserKey` and `PackageOwnerUserKey` columns.\r\n  - There are two 1:N (one to many) relationships from user to federated credential policy, one to track who created the policy (user only) and one to track which package owner.\r\n- **New table:** `FederatedCredentials` - this stored federated credentials that have been used, in order to detect token replay. \r\n  - This table links to the `FederatedCredentialPolicies` table *without a foreign key*. If a policy is deleted, the federated credential record should not be removed, otherwise replay could occur. It is totally possible for a federated credential record to refer to a policy key that no longer exists. I added the column so we have a persistent record of the policy that was used to accept the federated credential. This can be used to correlate with existing records or make sense of audit logs.\r\n  - This table has a unique index on the `Identity` string column so we can detect replay (duplicate `uti` or `jti` JWT claims).\r\n- **New column:** optional `FederatedCredentialPolicyKey` on the `Credentials` table - this allows us to associate a policy with a short-lived API key that was created. In audit logs this will allow us to correlate a federated credential (JWT claims) with an API key that is used for a privileged action. Also, it allows us to delete short-lived API keys if the policy is deleted (manual revocation).\r\n   - This is a new 1:N (one to many) relationship from policy to credential (API key). It is possible for API keys and other credential types to have no related policy. It is possible for a policy to have no related credentials. The application ensures only API keys relate to policies, although the DB schema does allow non-API key credentials to have a policy key (due to our generic `Credentials` table design).\r\n\r\nSQL:\r\n```sql\r\nCREATE TABLE [dbo].[FederatedCredentialPolicies] (\r\n    [Key] [int] NOT NULL IDENTITY,\r\n    [Created] [datetime2](7) NOT NULL,\r\n    [LastMatched] [datetime2](7),\r\n    [TypeKey] [int] NOT NULL,\r\n    [Criteria] [nvarchar](max) NOT NULL,\r\n    [CreatedByUserKey] [int] NOT NULL,\r\n    [PackageOwnerUserKey] [int] NOT NULL,\r\n    CONSTRAINT [PK_dbo.FederatedCredentialPolicies] PRIMARY KEY ([Key])\r\n)\r\nCREATE INDEX [IX_CreatedByUserKey] ON [dbo].[FederatedCredentialPolicies]([CreatedByUserKey])\r\nCREATE INDEX [IX_PackageOwnerUserKey] ON [dbo].[FederatedCredentialPolicies]([PackageOwnerUserKey])\r\nCREATE TABLE [dbo].[FederatedCredentials] (\r\n    [Key] [int] NOT NULL IDENTITY,\r\n    [TypeKey] [int] NOT NULL,\r\n    [FederatedCredentialPolicyKey] [int] NOT NULL,\r\n    [Identity] [nvarchar](64),\r\n    [Created] [datetime2](7) NOT NULL,\r\n    [Expires] [datetime2](7),\r\n    CONSTRAINT [PK_dbo.FederatedCredentials] PRIMARY KEY ([Key])\r\n)\r\nCREATE INDEX [IX_FederatedCredentialPolicyKey] ON [dbo].[FederatedCredentials]([FederatedCredentialPolicyKey])\r\nCREATE UNIQUE INDEX [IX_Identity] ON [dbo].[FederatedCredentials]([Identity])\r\nALTER TABLE [dbo].[Credentials] ADD [FederatedCredentialPolicyKey] [int]\r\nCREATE INDEX [IX_FederatedCredentialPolicyKey] ON [dbo].[Credentials]([FederatedCredentialPolicyKey])\r\nALTER TABLE [dbo].[Credentials] ADD CONSTRAINT [FK_dbo.Credentials_dbo.FederatedCredentialPolicies_FederatedCredentialPolicyKey] FOREIGN KEY ([FederatedCredentialPolicyKey]) REFERENCES [dbo].[FederatedCredentialPolicies] ([Key])\r\nALTER TABLE [dbo].[FederatedCredentialPolicies] ADD CONSTRAINT [FK_dbo.FederatedCredentialPolicies_dbo.Users_CreatedByUserKey] FOREIGN KEY ([CreatedByUserKey]) REFERENCES [dbo].[Users] ([Key])\r\nALTER TABLE [dbo].[FederatedCredentialPolicies] ADD CONSTRAINT [FK_dbo.FederatedCredentialPolicies_dbo.Users_PackageOwnerUserKey] FOREIGN KEY ([PackageOwnerUserKey]) REFERENCES [dbo].[Users] ([Key])\r\n```"},{"Id":"44433952379","Type":"PullRequestEvent","CreatedAt":"2024-12-03T18:26:53","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10240","RelatedDescription":"Closed pull request \"Migrating GitHub indexer\" (#10240) at NuGet/NuGetGallery","RelatedBody":"Merging githubindexer migration. Tested on DEV and INT.\r\n\r\nAddresses https://github.com/orgs/NuGet/projects/21/views/1?filterQuery=milestone%3A%22Sprint+2024-10%22+assignee%3A%40me&pane=issue&itemId=64259347&issue=NuGet%7CEngineering%7C5443"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"44436870122","Type":"IssuesEvent","CreatedAt":"2024-12-03T20:14:43","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13978","RelatedDescription":"Opened issue \"dotnet list package should show RID specific packages\" (#13978) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\n`dotnet list package --vulnerable --include-transitive` does not list some packages that NuGetAudit (restore) does. This is because audit will check all RID graphs, but `dotnet list package` only checks the no-RID graphs.\n\n### Desired Behavior\n\nAny package that NuGetAudit reports as vulnerable during restore should also be discoverable with `dotnet list package`.\r\n\r\nHowever, when a project contains multiple RIDs, and the graphs are the same, it should show 'groups' with the same package list, to avoid long output that is difficult to understand. See `dotnet nuget why` for an example.\n\n### Additional Context\n\nlist package previously did show packages from all the RIDs (although it didn't tell you that it was a RID-specific graph, or what the RID was), but it was removed because it looked like redundant output:\r\n* https://github.com/NuGet/Home/issues/7607\r\n\r\n"},{"Id":"44434851196","Type":"IssuesEvent","CreatedAt":"2024-12-03T18:56:59","Actor":"jwosty","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13977","RelatedDescription":"Opened issue \"Custom Fable TFM\" (#13977) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\nHello NuGet team! I'm representing the Fable project (the popular F#-to-Javascript transpiler), and we want to look into having a custom TFM for fable specifically, so that we can integrate it better into the NuGet/MSBuild ecosystem (similarly to how Tizen, Andriod, iOS, etc works).\n\n### Additional Context and Details\n\nI previously opened a discussion item for this [here](https://github.com/NuGet/Home/discussions/12965). More of the gory details and relevant links are in there. We would really like to have a conversation with someone from the NuGet team about this."},{"Id":"44400377764","Type":"IssuesEvent","CreatedAt":"2024-12-02T23:52:47","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13976","RelatedDescription":"Opened issue \"NuGet Audit Misc fixes\" (#13976) at NuGet/Home","RelatedBody":"Fixe various issues and improvements in the NuGet Audit feature"},{"Id":"44400081090","Type":"IssuesEvent","CreatedAt":"2024-12-02T23:36:07","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13975","RelatedDescription":"Opened issue \"Address comments in `Implement Support for NuGet Authentication Plugins as .NET Tools` PR\" (#13975) at NuGet/Home","RelatedBody":"Address comments that were target for a follow up PR in https://github.com/NuGet/NuGet.Client/pull/6138"},{"Id":"44399859823","Type":"IssuesEvent","CreatedAt":"2024-12-02T23:24:30","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13500","RelatedDescription":"Closed issue \"Mention existence of Central Package Management on page for NU1604\" (#13500) at NuGet/Home","RelatedBody":"This is mainly a documentation request - happy to refile if this needs to be reported somewhere different.\r\n\r\nI am using `dotnet` 6.0.400 on Linux.\r\n\r\n#### Background\r\n\r\nI have a small multi-project solution. All of the projects in this solution use [CPM](https://docs.microsoft.com/en-us/nuget/consume-packages/central-package-management) to manage dependency versions. Since the `dotnet` commands and templates do not use that feature by default, I chose (perhaps poorly) to edit the `Directory.Packages.props` manually through VS Code whenever dependency versions need to change.\r\n\r\n#### This particular issue\r\n\r\nI wrote invalid XML in my `Directory.Packages.props` - specifically, an unclosed tag. This caused subsequent calls to `dotnet restore` to fail. One error message appears for each dependency, in a form like so:\r\n\r\n> MyProject.csproj : warning NU1604: Project dependency Microsoft.EntityFrameworkCore.SqlServer does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results.\r\n\r\nIf `dotnet restore` is called with _detailed_- or _diagnostic_-level verbosity, I note the following in the output:\r\n\r\n> Project \"/path/to/solution/Directory.Packages.props\" was not imported by \"/path/to/dotnet/sdk/6.0.400/NuGet.props\" at (35,3), due to the file being invalid.\r\n\r\n#### My request\r\n\r\nLooking at the official docs for NU1604, I noticed no reference to CPM. Please provide some kind of link, and (if it's not too much trouble) suggest that there might be this kind of situation with a malformed file.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 520cf107-0d2e-f014-1420-a704ab761424\r\n* Version Independent ID: 7f25b7e4-59d1-e79b-469b-950e3281c859\r\n* Content: [NuGet Warning NU1604](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu1604)\r\n* Content Source: [docs/reference/errors-and-warnings/NU1604.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/main/docs/reference/errors-and-warnings/NU1604.md)\r\n* Product: **nuget**\r\n* GitHub Login: @zhili1208\r\n* Microsoft Alias: **lzhi**"},{"Id":"44399859726","Type":"IssuesEvent","CreatedAt":"2024-12-02T23:24:30","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9496","RelatedDescription":"Closed issue \"[CPVM backcompat] Enhance the warning NU1604 documentation.\" (#9496) at NuGet/Home","RelatedBody":"Once a project is opt in CPVM its Version attributes are removed. Old clients will emit an warning in such cases. \r\n\r\nEnhance the NU1604 documentation with reference to this scenario. \r\n"},{"Id":"44399038049","Type":"IssuesEvent","CreatedAt":"2024-12-02T22:45:09","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13814","RelatedDescription":"Closed issue \"Promote NU3043 warning to error in .NET 10\" (#13814) at NuGet/Home","RelatedBody":"Related - https://github.com/NuGet/docs.microsoft.com-nuget/pull/3339\r\n\r\nThis DCR has to be merged into dev after 6.12 branch has been created.\r\n"},{"Id":"44398789791","Type":"IssuesEvent","CreatedAt":"2024-12-02T22:34:04","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13968","RelatedDescription":"Closed issue \"Navigation telemetry for 'Clear All NuGet Storage' Command in VS Settings\" (#13968) at NuGet/Home","RelatedBody":"Enable the navigation telemetry so we can track usage of the 'Clear All NuGet Storage' (`LocalsCommand`) used in VS Settings."},{"Id":"44397675068","Type":"IssuesEvent","CreatedAt":"2024-12-02T21:50:46","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13966","RelatedDescription":"Closed issue \"`dotnet nuget` does not support verbosity\" (#13966) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nUnder `dotnet nuget`, the `--verbosity x` command line flag is unsupported.\n\n### Desired Behavior\n\nIt should be supported, and NuGet should be updated to log more.\n\n### Additional Context\n\nThe lack of verbosity is very unhelpful when trying to diagnose failures such as #13965\r\n\r\n```\r\nSpecify --help for a list of available options and commands.\r\nerror: Unrecognized option '--verbosity'\r\n\r\n\r\nUsage: dotnet nuget push [arguments] [options]\r\n\r\nArguments:\r\n  [root]  Specify the path to the package and your API key to push the package to the server.\r\n\r\nOptions:\r\n  -h|--help                      Show help information\r\n  --force-english-output         Forces the application to run using an invariant, English-based culture.\r\n  -s|--source <source>           Package source (URL, UNC/folder path or package source name) to use. Defaults to DefaultPushSource if specified in NuGet.Config.\r\n  -ss|--symbol-source <source>   Symbol server URL to use.\r\n  -t|--timeout <timeout>         Timeout for pushing to a server in seconds. Defaults to 300 seconds (5 minutes).\r\n  -k|--api-key <apiKey>          The API key for the server.\r\n  -sk|--symbol-api-key <apiKey>  The API key for the symbol server.\r\n  -d|--disable-buffering         Disable buffering when pushing to an HTTP(S) server to decrease memory usage.\r\n  -n|--no-symbols                If a symbols package exists, it will not be pushed to a symbols server.\r\n  --no-service-endpoint          Does not append \"api/v2/package\" to the source URL.\r\n  --interactive                  Allow the command to block and require manual action for operations like authentication.\r\n  --skip-duplicate               If a package and version already exists, skip it and continue with the next package in the push, if any.\r\n```"},{"Id":"44395256880","Type":"IssuesEvent","CreatedAt":"2024-12-02T20:23:41","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13974","RelatedDescription":"Opened issue \"Add indicator for deprecated and vulnerable packages to Package Details tab header.\" (#13974) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-04T03:30:21.5680866Z","RunDurationInMilliseconds":971}