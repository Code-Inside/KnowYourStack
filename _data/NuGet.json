{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31331445765","Type":"PullRequestEvent","CreatedAt":"2023-08-24T00:12:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9605","RelatedDescription":"Merged pull request \"Not tracking package push failures when package is a duplicate.\" (#9605) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4867"},{"Id":"31325325034","Type":"IssuesEvent","CreatedAt":"2023-08-23T18:17:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9634","RelatedDescription":"Opened issue \"[NuGet.org Bug]: V3 monitoring gets stuck on a deletion of a package with SemVer 2 metadata\" (#9634) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nThe package \"MySql.EntityFrameworkCore\" \"6.0.16+MySQL8.1.0\" went through the following steps:\r\n\r\n1. It was uploaded by the author.\r\n2. It failed validation due to an incorrect signing certificate.\r\n3. It was pushed again with a proper signing certificate. This resulted in a delete audit entry for the previous copy of that package, which resulted in a delete catalog leaf item because a delete audit was created. Having a delete audit is reasonable. Having a delete leaf is questionable since the package never existed in the catalog to begin with. It's generally harmless though since it is a delete of a non-existent package.\r\n4. The package was then successfully validated resulting in a PackageDetails catalog leaf.\r\n\r\nThe V3 monitoring job \"monitoringprocessing\" produced an \"unknown\" validation record for the queue message produced by \"db2monitoring\" after it saw the delete leaf created in step 3. The problem is that the record had the version \"6.0.16\" in the blob name. It should have had the lowercase full version \"6.0.16+mysql8.1.0\".\r\n\r\nThe effect of this is that the V3 monitoring was stuck on this \"unknown\" blob indefinitely. Unfortunately, the V3 monitoring pipeline uses the full version for its blob names causing build full version and normalized version differences (i.e. versions with metadata like `1.0.0+foo` or `6.0.16+MySQL8.1.0`) to potentially get stuck.\r\n\r\nThis is the root cause: https://github.com/NuGet/NuGetGallery/issues/9633\n\n### Repro Steps\n\nThis should be do-able on DEV.\r\n\r\nProduce a delete leaf for a package version build metadata. You should be able to soft delete a validating package for this.\r\n\r\nVerify that there is an \"unknown\" blob saved to the V3 monitoring container. The blob should not have build metadata in the name.\r\n\r\nUpload a package with that version containing build metadata (`+foo` in `1.0.0+foo` for example).\r\n\r\nThe \"unknown\" blob should remain stuck there forever.\n\n### Expected Behavior\n\nPackages should not be stuck in V3 monitoring for any reason aside from invalid metadata.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31325091785","Type":"IssuesEvent","CreatedAt":"2023-08-23T18:07:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9633","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Delete catalog leaves use normalized version for \"version\" attribute, not full version\" (#9633) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nCurrently, the `PackageDetails` catalog leaf documents have the full version as their `version` property. This behavior is undocumented (the docs just say \"version\" leaving the full version vs. normalized vs. original, non-normalized version decision undefined). It is implemented here: \r\nhttps://github.com/NuGet/NuGet.Jobs/blob/5e425c7c3dbc8fbfcbafebdc0638babfa449f69f/src/Catalog/xslt/nuspec.xslt#L178-L180\r\n\r\nThe `PackageDelete` catalog leaf document uses normalized version:\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/5e425c7c3dbc8fbfcbafebdc0638babfa449f69f/src/Catalog/DeleteCatalogItem.cs#L22\r\n\r\nThe effect of this is that any catalog reader than needs the full version for it's work will potentially skip or incorrectly process deleted packages where the full version diverges from the normalized version.\n\n### Repro Steps\n\nLook at the delete catalog leaf for this package:\r\nhttps://api.nuget.org/v3/catalog0/data/2023.07.18.13.25.35/mysql.entityframeworkcore.6.0.16.json\r\n\r\nNow look at the details leaf:\r\nhttps://api.nuget.org/v3/catalog0/data/2023.07.18.13.26.57/mysql.entityframeworkcore.6.0.16.json\r\n\r\nThe `version` attribute is different.\n\n### Expected Behavior\n\nWe should consistently put normalized, full, or original version string in given properties.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31299469214","Type":"PullRequestEvent","CreatedAt":"2023-08-22T21:42:17","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9632","RelatedDescription":"Merged pull request \"Added bootstrap file\" (#9632) at NuGet/NuGetGallery","RelatedBody":"I didn't know that I was also supposed to add bootstrap-theme.css with my UI changes. Adding it now."},{"Id":"31298798535","Type":"PullRequestEvent","CreatedAt":"2023-08-22T21:04:21","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9632","RelatedDescription":"Opened pull request \"Added bootstrap file\" (#9632) at NuGet/NuGetGallery","RelatedBody":"I didn't know that I was also supposed to add bootstrap-theme.css with my UI changes. Adding it now."},{"Id":"31298780483","Type":"PullRequestEvent","CreatedAt":"2023-08-22T21:03:25","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9631","RelatedDescription":"Closed pull request \"Add bootstrap file\" (#9631) at NuGet/NuGetGallery","RelatedBody":"I didn't know that I was also supposed to add bootstrap-theme.css with my UI changes. Adding it now."},{"Id":"31298754861","Type":"PullRequestEvent","CreatedAt":"2023-08-22T21:02:09","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9631","RelatedDescription":"Opened pull request \"Add bootstrap file\" (#9631) at NuGet/NuGetGallery","RelatedBody":"I didn't know that I was also supposed to add bootstrap-theme.css with my UI changes. Adding it now."},{"Id":"31267939362","Type":"IssuesEvent","CreatedAt":"2023-08-21T20:37:33","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9467","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Password login flow redirects to wrong sign in page after creating temp password\" (#9467) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nIn the temporary password login flow that we enable for users, once they've created the temporary password, they see this page:\r\n![image](https://user-images.githubusercontent.com/82980589/232170652-461fea99-0bab-419d-bcda-98dfaef4d398.png)\r\n\r\nThe 'Sign in' link here takes you to the default sign in page: https://www.nuget.org/users/account/LogOn\r\n![image](https://user-images.githubusercontent.com/82980589/232170706-a107fb9b-dbf8-4d28-9a4f-d1d406ee4ccb.png)\r\n\r\nInstead, it should send you to the password enabled sign in page here: https://www.nuget.org/users/account/LogOnNuGetAccount\r\n![image](https://user-images.githubusercontent.com/82980589/232170778-3bf994e4-9b9d-4b56-b4f7-eba33dbde997.png)\r\n\r\n\n\n### Repro Steps\n\n1. Enable password login\r\n2. Follow the steps to create a temporary password\r\n3. Click on the 'sign in' link you see on the page once your password has been set\n\n### Expected Behavior\n\nWe should be redirected to the password-enabled sign in page here: https://www.nuget.org/users/account/LogOnNuGetAccount\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31266717750","Type":"PullRequestEvent","CreatedAt":"2023-08-21T19:38:46","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9630","RelatedDescription":"Merged pull request \"Small fix\" (#9630) at NuGet/NuGetGallery","RelatedBody":"Previously I have removed a margin that was not supposed to be removed (upper margin between the filters and the blue thing). It is now fixed.\r\n\r\n<img width=\"236\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/cf245860-3466-4483-b5b1-2d8bfc78c2f9\">\r\n"},{"Id":"31265574132","Type":"PullRequestEvent","CreatedAt":"2023-08-21T18:44:29","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9630","RelatedDescription":"Opened pull request \"Small fix\" (#9630) at NuGet/NuGetGallery","RelatedBody":"Previously I have removed a margin that was not supposed to be removed (upper margin between the filters and the blue thing). It is now fixed.\r\n\r\n<img width=\"236\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/cf245860-3466-4483-b5b1-2d8bfc78c2f9\">\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"31330310569","Type":"IssuesEvent","CreatedAt":"2023-08-23T22:37:21","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12839","RelatedDescription":"Opened issue \"Package Source Mapping utility always appends package ID\" (#12839) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.8\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nThe logic in https://github.com/NuGet/NuGet.Client/blob/a39baac/src/NuGet.Clients/NuGet.PackageManagement.UI/Utility/PackageSourceMappingUtility.cs#L45 always Appends the package ID.\r\nI'm not sure if this causes a problem today, but in a subsequent PR, I want to have an accurate count of newly mapped packages. So, I'd like this to only append package ID if it's not already included.\n\n### Verbose Logs\n\n_No response_"},{"Id":"31326137268","Type":"IssuesEvent","CreatedAt":"2023-08-23T18:55:27","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12186","RelatedDescription":"Closed issue \"Re-enable package signature tests that were disabled for dotnet test work\" (#12186) at NuGet/Home","RelatedBody":"_(Duped from https://github.com/NuGet/Client.Engineering/issues/1484)_\r\n\r\nAs part of https://github.com/NuGet/Client.Engineering/issues/659, I had to disable some package signing tests because they fail intermittently when migrating to dotnet test."},{"Id":"31312487273","Type":"IssuesEvent","CreatedAt":"2023-08-23T10:22:30","Actor":"hercul1017","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12838","RelatedDescription":"Closed issue \"package is not found in the following primary source(s): 'https://api.nuget.org/v3/index.json'\" (#12838) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nvs 2022\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Update a nuget package by using manage nuget packages UI\r\n2. or use package manager console\r\n\r\nboth result in error.\r\n\r\nAlthough the UI finds the version for displaying, but update button is not active and error text displayed. Configuring Nuget does not removes the warning.\r\n\r\n<img width=\"496\" alt=\"error\" src=\"https://github.com/NuGet/Home/assets/43272687/418247fe-348c-4b5e-88e6-19d28a00c68c\">\r\n\n\n### Verbose Logs\n\n```shell\nWe have .net 4.8.1 web solution. Suddenly nuget update stop working. This happens regardless of package, non of them gets updated. Following is result of install-package command.\r\n\r\n\r\nPM> NuGet\\Install-Package Grpc.Core -Version 2.46.6\r\n\r\n\r\nAttempting to gather dependency information for package 'Grpc.Core.2.46.6' with respect to project 'src\\xxx', targeting '.NETFramework,Version=v4.8.1'\r\nNuGet\\Install-Package : Package 'Grpc.Core 2.46.6' is not found in the following primary source(s): 'https://api.nuget.org/v3/index.json,C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\'. Please verify all your online package sources are available (OR) package id, version are specified correctly.\r\nAt line:1 char:1\r\n+ NuGet\\Install-Package Grpc.Core -Version 2.46.6\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nTime Elapsed: 00:00:00.3418690\r\n\r\n\r\nI tried a few of Visual Studio versions all failed to update. Microsoft Visual Studio Community 2022 (64-bit) - Preview Version 17.7.0 Preview 6.0 show \"Requires a package source mapping\" warning although both Nuget and Microsoft Offline Packages configured.\n```\n"},{"Id":"31311553969","Type":"IssuesEvent","CreatedAt":"2023-08-23T09:47:57","Actor":"hercul1017","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12838","RelatedDescription":"Opened issue \"package is not found in the following primary source(s): 'https://api.nuget.org/v3/index.json'\" (#12838) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nvs 2022\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Update a nuget package by using manage nuget packages UI\r\n2. or use package manager console\r\n\r\nboth result in error.\r\n\r\nAlthough the UI finds the version for displaying, but update button is not active and error text displayed. Configuring Nuget does not removes the warning.\r\n\r\n<img width=\"496\" alt=\"error\" src=\"https://github.com/NuGet/Home/assets/43272687/418247fe-348c-4b5e-88e6-19d28a00c68c\">\r\n\n\n### Verbose Logs\n\n```shell\nWe have .net 4.8.1 web solution. Suddenly nuget update stop working. This happens regardless of package, non of them gets updated. Following is result of install-package command.\r\n\r\n\r\nPM> NuGet\\Install-Package Grpc.Core -Version 2.46.6\r\n\r\n\r\nAttempting to gather dependency information for package 'Grpc.Core.2.46.6' with respect to project 'src\\xxx', targeting '.NETFramework,Version=v4.8.1'\r\nNuGet\\Install-Package : Package 'Grpc.Core 2.46.6' is not found in the following primary source(s): 'https://api.nuget.org/v3/index.json,C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\'. Please verify all your online package sources are available (OR) package id, version are specified correctly.\r\nAt line:1 char:1\r\n+ NuGet\\Install-Package Grpc.Core -Version 2.46.6\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nTime Elapsed: 00:00:00.3418690\r\n\r\n\r\nI tried a few of Visual Studio versions all failed to update. Microsoft Visual Studio Community 2022 (64-bit) - Preview Version 17.7.0 Preview 6.0 show \"Requires a package source mapping\" warning although both Nuget and Microsoft Offline Packages configured.\n```\n"},{"Id":"31306800591","Type":"IssuesEvent","CreatedAt":"2023-08-23T06:43:26","Actor":"SeanFarrow","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12837","RelatedDescription":"Opened issue \"The \tpreview changes dialog edit field is not readable within the NuGet client using Access technology\" (#12837) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n6.x\n\n### Worked before?\n\nno\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nAn issue exists where the edit field in the Preview Changes dialog that indicates what actions will be taken by NuGet within a project does not read correctly with both NVDA and JAWS on Windows.\r\n\r\nI would expect this to be navigable like any other standard edit control.\r\n\r\nThe reason this isn't working is that this appears to be a custom control of some form.\r\n\r\nIn order to replicate this, ensure you are running either NVDA or JAWS. Then try updating a package within any project. The actions NuGet will take are visible on the screen but are not readable by access technologies.\r\n\r\nIf someone could point me to where this is in the source code, I'll gladly have a look and see how easy the fix might be.\r\n\n\n### Verbose Logs\n\n```shell\nNo logs needed.\n```\n"},{"Id":"31304235448","Type":"IssuesEvent","CreatedAt":"2023-08-23T03:56:33","Actor":"mitchdenny","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12836","RelatedDescription":"Opened issue \"Support clearing package source mappings for repo-local NuGet.config files\" (#12836) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, dotnet.exe\n\n### The Elevator Pitch\n\nOften you will add package sources and package source mappings to your global ```NuGet.config``` file. But sometimes you work with a repository that has its own package sources which require a different set of mappings. The idea behind this feature request is to allow me to ```<clear />``` the package source mappings in a repo-local ```NuGet.config``` file so that I can override my global defaults.\n\n### Additional Context and Details\n\nI ran into this issue because I was working on a project outside my usual repo and I was testing some new project templates. The project template and the dependencies for the code in the templates were in a different private feed. It worked well when I set up my source mappings in my global ```NuGet.config``` file but when I went back to my usual repo I didn't anticipate that those package source mappings would apply to the repo local version especially since there isn't a ```<clear />``` gesture you can make for package source mappings."},{"Id":"31300841305","Type":"IssuesEvent","CreatedAt":"2023-08-22T23:17:33","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12835","RelatedDescription":"Opened issue \"Vulnerabilities InfoBar link to `NuGet Package Manager` is truncated\" (#12835) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.8\n\n### Worked before?\n\nN/A\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n1. Add a vulnerable package to your solution\r\n2. Open VS and restore packages.\r\n3. Observe the Info Bar showing that vulnerabilities exist, with a link to `NuGet Package Manager`.\r\n4. Shrink the Solution Explorer and observe that the `NuGet Package Manager` link is truncated.\r\n\r\n![image](https://github.com/NuGet/Home/assets/49205731/c1000f64-71e9-43f4-8c6a-f714c0690912)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31300111372","Type":"IssuesEvent","CreatedAt":"2023-08-22T22:22:53","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10383","RelatedDescription":"Closed issue \"Remove \"Checking compatibility...\" log messages from RestoreTask\" (#10383) at NuGet/Home","RelatedBody":"Currently RestoreTask logs a lot of messages that start with Checking compatibility:\r\n\r\n![image](https://user-images.githubusercontent.com/679326/102312508-b2235f80-3f23-11eb-893c-7b20d05a81e3.png)\r\n\r\nThe log output is full of these. I'm questioning the value of having these in the logs since they don't provide much useful information and generate a ton of noise.\r\n\r\nI suggest that we just stop logging this particular message."},{"Id":"31298500620","Type":"IssuesEvent","CreatedAt":"2023-08-22T20:49:13","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12834","RelatedDescription":"Opened issue \"Spec: Integrate the onboarding features of `PackageSourceMapper` into VS\" (#12834) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from NuGet/Client.Engineering#2311**\r\n- Please respond to @donnie-msft.\r\n\r\n---\r\n\r\n_From @donnie-msft on Friday, June 2, 2023 12:08:02 AM_\r\n\r\nThe [PackageSourceMapper](https://github.com/NuGet/PackageSourceMapper/tree/dev/PackageSourceMapper) is a standalone tool to onboard an existing project into Package Source Mapping.\r\nHow might we integrate this into VS?\r\nThere's a relationship between PM UI Actions and this onboarding with https://github.com/NuGet/Home/pull/12616\r\n\r\nIdeas are:\r\n\r\n- Introduce a button to the VS Options page to generate mappings (if source mapping is not yet enabled)\r\n- PM UI Status could have an `Enable` link to do this automatically (if source mapping is not yet enabled)\r\n- Both?\r\n- Neither?/Other? "},{"Id":"31293856823","Type":"PullRequestEvent","CreatedAt":"2023-08-22T17:16:19","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/12735","RelatedDescription":"Merged pull request \"Remove projects from list package command\" (#12735) at NuGet/Home","RelatedBody":"Hello,\r\n\r\nThis proposal aims to remove projects from `list package` command output\r\n\r\n[Rendered Proposal](https://github.com/NuGet/Home/blob/dc1912eceba3914536c276600e36dbcc928f6801/proposed/2023/remove-projects-from-list-package-command.md)\r\n\r\n"},{"Id":"31286559043","Type":"IssuesEvent","CreatedAt":"2023-08-22T13:00:39","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12726","RelatedDescription":"Closed issue \"Nuget restore / Nuget list configured with client-cert keeps prompts for credentials in Mac and Linux Platform\" (#12726) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\n6.6.1.2\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nNuget configured with a client certificate for the private repository, it repeatedly prompts for credentials when nuget restore / nuget list command is executed from Mac or Linux platforms and returns '`401 Missing client certificate!`'  when `-NonInteractive` flag is used / manual user credentials are provided. On the Windows platform, it works fine with the same endpoint, credentials, and configuration.\r\n\r\n**Commands used to configure Nuget:**\r\n\r\n```\r\nnuget client-certs Add -PackageSource artifactory -Path ClientCertificate.pfx -Password CertPwd -StorePasswordInClearText -ForceEnglishOutput\r\n\r\nnuget sources Add -Name artifactory -Source https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote -username ArtifactoryUsername -password ArtifactoryPassword -StorePasswordInClearText -ForceEnglishOutput -NonInteractive -ValidAuthenticationTypes basic\r\n\r\nnuget list JSONTranslator -Source artifactory -Verbosity detailed \r\n```\r\n\r\nWe receive the following credential prompts, and if no user input is provided within a certain timeout period, it fails.\r\n\r\n```\r\nNuGet Version: 6.6.1.2\r\nMSBuild auto-detection: using msbuild version '15.0' from '/usr/lib/mono/msbuild/15.0/bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nUsing credentials from config. UserName: ***\r\nPlease provide credentials for: https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote\r\nUserName: Unable to load the service index for source https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote.\r\n  The HTTP request to 'GET https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote' has timed out after 100000ms.\r\n```\r\n\r\nIf valid user credentials are provided for all attempts it still return 401 error : \r\n\r\n`Mob-OSX-Builder-04:~ mobosxbuilder$ nuget list JSONTranslator -Source EEC-artifactory -Verbosity detailed\r\nNuGet Version: 6.6.1.2\r\nMSBuild auto-detection: using msbuild version '15.0' from '/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/15.0/bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nUsing credentials from config. UserName: damo-artif-svc\r\nPlease provide credentials for: https://artifactory-mtls.xyz.com/artifactory/api/nuget/v3/nuget-remote\r\nUserName: damo-artif-svc\r\nPassword: *************************************************************************\r\nPlease provide credentials for: https://artifactory-mtls.xyz.com/artifactory/api/nuget/v3/nuget-remote\r\nUserName: damo-artif-svc\r\nPassword: *************************************************************************\r\nPlease provide credentials for: https://artifactory-mtls.xyz.com/artifactory/api/nuget/v3/nuget-remote\r\nUserName: damo-artif-svc\r\nPassword: *************************************************************************\r\nUnable to load the service index for source https://artifactory-mtls.xyz.com/artifactory/api/nuget/v3/nuget-remote.\r\n  Response status code does not indicate success: 401 (Missing client certificate!).\r\n`\r\n\r\nWith same config when nuget is configured with `-NonInteractive` flag it results in same \"`401 Missing client certificate!'.`\"\r\n\r\n```\r\nNuGet Version: 6.6.1.2\r\nMSBuild auto-detection: using msbuild version '15.0' from '/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/15.0/bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nUsing credentials from config. UserName: ***\r\nEnhanced retry: HttpRetryHandler is in a state that retry would have been abandoned or not waited if it were not enabled.\r\n  GET https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/$metadata\r\n  Unauthorized https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/$metadata 64ms\r\nEnhanced retry: HttpRetryHandler is in a state that retry would have been abandoned or not waited if it were not enabled.\r\n  GET https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/Search()?$filter=IsLatestVersion&$orderby=Id&searchTerm='JSONTranslator'&targetFramework=''&includePrerelease=false&$skip=0&$top=30&semVerLevel=2.0.0\r\n  Unauthorized https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/Search()?$filter=IsLatestVersion&$orderby=Id&searchTerm='JSONTranslator'&targetFramework=''&includePrerelease=false&$skip=0&$top=30&semVerLevel=2.0.0 63ms\r\nThe V2 feed at 'https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/Search()?$filter=IsLatestVersion&$orderby=Id&searchTerm='JSONTranslator'&targetFramework=''&includePrerelease=false&$skip=0&$top=30&semVerLevel=2.0.0' returned an unexpected status code '401 Missing client certificate!'.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: The V2 feed at 'https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/Search()?$filter=IsLatestVersion&$orderby=Id&searchTerm='JSONTranslator'&targetFramework=''&includePrerelease=false&$skip=0&$top=30&semVerLevel=2.0.0' returned an unexpected status code '401 Missing client certificate!'.\r\n\r\n```\r\nExpected Solution :\r\n\r\nIt is expected to work the same way as on the Windows platform, ensuring that the client certificate, client certificate path, username, and password are all the same.\r\n\r\n```\r\nNuGet Version: 6.6.1.2\r\nEnhanced retry: HttpRetryHandler is in a state that retry would have been abandoned or not waited if it were not enabled.\r\n  GET https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/$metadata\r\n  OK https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/$metadata 76ms\r\nEnhanced retry: HttpRetryHandler is in a state that retry would have been abandoned or not waited if it were not enabled.\r\n  GET https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/Search()?$filter=IsLatestVersion&$orderby=Id&searchTerm='JSONTranslator'&targetFramework=''&includePrerelease=false&$skip=0&$top=30&semVerLevel=2.0.0\r\n  OK https://artifactory-mtls.xyz.com/artifactory/api/nuget/nuget-remote/Search()?$filter=IsLatestVersion&$orderby=Id&searchTerm='JSONTranslator'&targetFramework=''&includePrerelease=false&$skip=0&$top=30&semVerLevel=2.0.0 595ms\r\nJSONTranslator\r\n 3.0.0.1\r\n This is a .Net Core 2 console application that accepts a JSON file, calls the Microsoft Text Translator API in Azure and writes translated files to disk.\r\n License url: https://github.com/swernimo/translator/blob/master/LICENSE\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"31271970128","Type":"IssuesEvent","CreatedAt":"2023-08-22T01:16:32","Actor":"arellegue","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12833","RelatedDescription":"Opened issue \"nuget pack myproject.nuspec -Symbols -properties Configuration=Release does not replace $Configuration$ in the nuspec file when creating the symbols file\" (#12833) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nnuget.exe latest\n\n### Worked before?\n\ndon't know\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nnuget pack myproject.nuspec -Symbols -properties Configuration=Release\r\n\r\nResults in Error NU5018: Invalid assembly reference ....\r\n\r\nHowever, when $Configuration$ is replaced inside myproject.nuspec with $config$ then using the command below:\r\n\r\nnuget pack myproject.nuspec -Symbols -properties config=Release\r\n\r\n...it works.  \r\n\r\nWhy is nuget.exe not replacing $Configuration$ when -Symbols is used?\r\n\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-24T03:30:21.0957249Z","RunDurationInMilliseconds":1067}