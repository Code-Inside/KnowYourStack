{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20445435945","Type":"IssuesEvent","CreatedAt":"2022-02-25T03:00:04","Actor":"jzabroski","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9021","RelatedDescription":"Closed issue \"Erroneous header tag \".NET Framework 0.0\" on some packages\" (#9021) at NuGet/NuGetGallery","RelatedBody":"@joelverhagen Probably a separate issue but this one amusingly says \".NET Framework 0.0\": https://www.nuget.org/packages/Intersoft.Crosslight - if you think I should open a separate ticket, I will.  But I didnt want to split out related things that can be tackled as one.\r\n\r\n![image](https://user-images.githubusercontent.com/447485/155639818-d49a9da4-db43-41cc-aa64-c2202c6b96eb.png)\r\n\r\n_Originally posted by @jzabroski in https://github.com/NuGet/NuGetGallery/issues/9015#issuecomment-1050442742_"},{"Id":"20445425830","Type":"IssuesEvent","CreatedAt":"2022-02-25T02:58:49","Actor":"jzabroski","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9021","RelatedDescription":"Opened issue \"Erroneous header tag \".NET Framework 0.0\" on some packages\" (#9021) at NuGet/NuGetGallery","RelatedBody":"@joelverhagen Probably a separate issue but this one amusingly says \".NET Framework 0.0\": https://www.nuget.org/packages/Intersoft.Crosslight - if you think I should open a separate ticket, I will.  But I didnt want to split out related things that can be tackled as one.\r\n\r\n![image](https://user-images.githubusercontent.com/447485/155639818-d49a9da4-db43-41cc-aa64-c2202c6b96eb.png)\r\n\r\n_Originally posted by @jzabroski in https://github.com/NuGet/NuGetGallery/issues/9015#issuecomment-1050442742_"},{"Id":"20441640727","Type":"PullRequestEvent","CreatedAt":"2022-02-24T21:04:03","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9020","RelatedDescription":"Opened pull request \"[TFM Badges][UI] Add tooltip on badges.\" (#9020) at NuGet/NuGetGallery","RelatedBody":"Since we wanted to improve the experience of users on what badges means, we added tooltip for the badges, this will show one of two messages depending if the badge contains a version or if it's an empty version.\r\n\r\n* When clicking the badge the tooltip will take 2 seconds to hide, it was one second before and it was just to short for users to read it.\r\n* Added role button for better A11y experience.\r\n* Verified that Narrator/NVDA reads the tooltip when traversing the page.\r\n\r\n### Screenshots\r\n#### With version\r\n![Badge with version](https://user-images.githubusercontent.com/17834924/155606204-7ac2ed42-4653-4ed4-a1fa-2bb8e589b3f9.png)\r\n\r\n#### Empty version\r\n![Package with empty version](https://user-images.githubusercontent.com/17834924/155606224-2ecba0bf-82cc-4b9f-b045-f4c82a60d0e0.png)\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4230."},{"Id":"20423858498","Type":"IssuesEvent","CreatedAt":"2022-02-24T00:16:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9019","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Job feature flag refreshers are not stopped in a `finally` block\" (#9019) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nJob feature flag refreshers are not stopped in a `finally` block.\r\n\r\nExample: https://github.com/NuGet/NuGet.Jobs/blob/14d1ab2f5761a2cfab77ce1b9d8d8cf94dc87ed4/src/NuGet.Services.AzureSearch/AzureSearchJob.cs#L37\r\n\r\nThis causes job loop failures (exceptions) to skip this stop step and that background task to continue on forever (until the process is ended). Because we dispose the DI container per job loop (as of https://github.com/NuGet/NuGet.Jobs/pull/1013), this causes these \"leaked\" tasks to log more and more exceptions. The exception message looks like this:\r\n\r\n```\r\nInstances cannot be resolved and nested lifetimes cannot be created from this LifetimeScope as it has already been disposed.\r\n```\r\n\r\n\r\n\r\n\n\n### Repro Steps\n\nIntermittent, e.g. due to a networking issue causing Catalog2AzureSearch to fail.\n\n### Expected Behavior\n\nThe feature flag refresher should be started and stopped per job loop, no matter if the job loop succeeds or fails.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20423650962","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:56:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8983","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Why have download counts not updated?\" (#8983) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n![image](https://user-images.githubusercontent.com/68726706/152710149-915b98a4-58c0-4bfa-aca8-aa2d1c82e724.png)\r\nEPPlus 4 days without download data\n\n### Repro Steps\n\nhttps://www.nuget.org/packages/EPPlus/\n\n### Expected Behavior\n\nnodejs.org every day update data, but nuget org looks like not \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20423645213","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:55:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9012","RelatedDescription":"Closed issue \"[NuGet.org ]:  Why is the download number Always 0\" (#9012) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe download of our latest version 8.0.7 is 0 as:\r\n\r\n![image](https://user-images.githubusercontent.com/9426627/154775237-89ea667d-cf09-4944-9f69-110c0d54a8d8.png)\r\n\r\nWhat's wrong with this version? because all other versions have a download number.\r\n\r\n\r\n\r\n\n\n### Repro Steps\n\nGo to nuget.org, search for microsoft.aspnetcore.odata\n\n### Expected Behavior\n\nShould have the download number.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20423628358","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:54:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9018","RelatedDescription":"Opened issue \"[Service degradation] Package download counts are delayed by several weeks\" (#9018) at NuGet/NuGetGallery","RelatedBody":"As mentioned in NuGet.org's [status page](https://status.nuget.org/):\r\n\r\n> **Package download statistics are delayed. Download logs have been processed up to February 11th, 2022.** Download count statistics are currently being ingested at a reduced rate. This is resulting in download counts on packages not reflecting their latest status. We apologize for the inconvenience and are actively working on a solution.\r\n>\r\n> Our current plan forward is to accelerate our migration to a new statistics pipeline which will help us overcome the scaling issues that we have encountered.\r\n\r\nTo provide a bit more context: our team has been using a SQL-based statistics data warehouse solution which has had more and more scaling issues over the years. We have been working for several months on a new solution based on [Azure Synapse Analytics](https://azure.microsoft.com/en-us/services/synapse-analytics/) which will help us overcome the growing volume of download logs that we process.\r\n\r\nThe download logs are processed in order for use to generate various statistics reports (most notably the total download counts showing in many UI experiences). This new Synapse-based infrastructure will also allow us to more easily add new reports and statistics features in the future as well as keep up with the wonderful growth of the .NET ecosystem.\r\n\r\nThe old pipeline began to fall behind on log ingestion in mid-January before our planned migration to the new pipeline had completed. This was a surprise to us. Fortunately, our new pipeline is not far off from being ready for production usage. There were some remaining steps of hardening the monitoring as well and log reflow edge cases that we wanted complete prior turning off the old pipeline and activating the new one. To avoid investing engineering effort into the older stats pipeline (essentially throwaway work), we chose to focus our efforts on the migration to the new pipeline.\r\n\r\nWe anticipate during the next week or two (week of February 28th or March 6th) to have these final stabilization steps for the new pipeline completed and the reports produced by the new pipeline (i.e. parity with existing behavior on the old pipeline) to be activated on NuGet.org.\r\n\r\nIn the interim, you will continue to see delayed download counts as the old pipeline stoically churns to through a big pile of log files. No download counts have been lost and we anticipate the new pipeline to quickly churn through the backlog of logs at a satisfactory rate.\r\n\r\nWhen the issue is resolved, we will clear the status page and close this issue."},{"Id":"20423229199","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:16:28","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9017","RelatedDescription":"Closed issue \"Dev Secret Expiration Tracker synthetics job uses SharedAccesKeys for service bus\" (#9017) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20423220492","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:15:46","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9017","RelatedDescription":"Opened issue \"Dev Secret Expiration Tracker synthetics job uses SharedAccesKeys for service bus\" (#9017) at NuGet/NuGetGallery","RelatedBody":"With the work done to migrate all service bus jobs to use managed identity we have one Job - Synthetics SecretExpirationTracker-DEV instance that still uses the shared access key. It uses `Dev-ServiceBus-SharedAccessKey-SecretExpiration-Job` secret from the keyvault to fetch the messages about secrets that are going to expire stored in the Dev keyvaults.\n\nThe issue is that the synthetics uses its own managed identity called `msazgs-prd-nugetservice-msi`. \n\n```\n\"managedServiceIdentity\": {\n   \"displayName\": \"msazgs-prd-nugetservice-msi\",\n   \"clientId\": \"d8494ec9-8fb1-49dc-9f62-53500ce33986\",\n   \"objectId\": \"67977922-14dc-4e75-bca0-193e08735c1b\",\n   \"tenantId\": \"33e01921-4d64-4f8c-a055-5bdaffd5e33d\" \n}\n```\n\nThis identity is set in AME tenant and our DEV resources are in CORP tenant. This identity is not discoverable when adding the  Service bus Sender/Receiver roles in portal.\n\nThis managed identity was added for the DEV keyvault using the Azure CLI commands, which specifically allowed adding cross tenant identities. From cursory investigation it doesn't seem to work that way for service bus, we need to investigate and add that managed identity for dev service bus resources. Possibly reach out to the synthetics team to seek solutions.\n\n"},{"Id":"20422449661","Type":"PullRequestEvent","CreatedAt":"2022-02-23T22:14:36","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9016","RelatedDescription":"Merged pull request \"[TFM Display] Display empty version with only the framework name as badge.\" (#9016) at NuGet/NuGetGallery","RelatedBody":"* If a package asset contains an empty version, it won't show 0.0 on the badge component, just the framework name.\r\n\r\n### Screenshots\r\n\r\n#### Before\r\n![Before](https://user-images.githubusercontent.com/17834924/155406512-750e7968-4d91-4bb1-9191-4ba3d88f7036.png)\r\n\r\n#### After\r\n![After](https://user-images.githubusercontent.com/17834924/155406537-e88ed067-a35d-4d4e-914a-6ce6d9ade3af.png)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4259"},{"Id":"20421410934","Type":"PullRequestEvent","CreatedAt":"2022-02-23T21:01:50","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9016","RelatedDescription":"Opened pull request \"[TFM Display] Display empty version with only the framework name as badge.\" (#9016) at NuGet/NuGetGallery","RelatedBody":"* If a package asset contains an empty version, it won't show 0.0 on the badge component, just the framework name.\r\n\r\n### Screenshot\r\n#### Before\r\n![Before](https://user-images.githubusercontent.com/17834924/155406512-750e7968-4d91-4bb1-9191-4ba3d88f7036.png)\r\n\r\n#### After\r\n![After](https://user-images.githubusercontent.com/17834924/155406537-e88ed067-a35d-4d4e-914a-6ce6d9ade3af.png)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4259"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20440617193","Type":"IssuesEvent","CreatedAt":"2022-02-24T19:52:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9599","RelatedDescription":"Closed issue \"Question: Controlling how a package's assets get consumed \" (#9599) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version: 5.5.1.6542\r\n\r\ndotnet.exe --version: 3.1.202\r\n\r\nVS version: 16.5.5\r\n\r\nOS version: win10 v1909\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nI'm trying to author a package to contains somethin in both tools and libs. According to this: https://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files\r\nIf I mark it as a developmentDependency, it prevents the package from being included as a dependency in other packages, which is what I want.\r\nHowever, it also excludes compile-time assets from compilation, which I do not want.\r\nCurrently, when I consume the package I have to add compile; to the IncludeAssets of the PackageReference and then everything works, but this is cumbersome.\r\nIs there a way to author the package so that I can control how the PackageReference gets created? E.g. so that it will add \"compile\" automatically.\r\n\r\nTo give a little more context, the tools are doing some code generation and for it to work the libs needs to be referenced. So I'm looking for something that's both a developmentDependency (Does not allow adding my package as a dependency), but still allows my package to have libs referenced.\r\n\r\n"},{"Id":"20440476081","Type":"IssuesEvent","CreatedAt":"2022-02-24T19:42:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9188","RelatedDescription":"Closed issue \"nuget.exe doesn't support modern cipher suite (windows 7)\" (#9188) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.exe (though confirmed same issue with others)\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.6315\r\n\r\ndotnet.exe --version (if appropriate): 3.1.101\r\n\r\nVS version (if appropriate): 2019 (v16.4.5)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win7 v6.1 (Build 7601: Service Pack 1)\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Set up a nuget repository over which you can control the TLS cipher suite (I'm using jfrog/artifactory running on kubernetes (1.17.2) with nginx-ingress (0.28.0) doing TLS termination. I'm controling the TLS cipher suite with a config map that nginx-ingress is reading, see the [controller.config value](https://github.com/helm/charts/tree/master/stable/nginx-ingress).\r\n\r\n2. Configure the cipher suite to [Mozilla's modern recommendation](https://wiki.mozilla.org/Security/Server_Side_TLS)\r\n\r\nI'm using the defaults from nginx-ingress (0.28.0) installed via helm stable nginx-ingress-1.30.1 chart which I believe are pretty close:\r\n\r\nHexcode  Cipher Suite Name (OpenSSL)\r\n xc030   ECDHE-RSA-AES256-GCM-SHA384\r\n xcca8   ECDHE-RSA-CHACHA20-POLY1305\r\n xc02f   ECDHE-RSA-AES128-GCM-SHA256\r\n\r\nMy set up by default uses TLS1.2 rather than TLS1.3, though I've tried enabling TLS1.3 and it didn't make a difference.\r\n\r\n3. Configure nuget to only use this repo (either modify NuGet.Config by hand, or via VS -> Tools -> NuGet Package Manager -> Package Manager Settings)\r\n\r\n4. Run nuget.exe list:\r\n```\r\n$ nuget.exe list\r\nUnable to load the service index for source https://internal_repo_hostname/api/nuget/nuget-local.\r\n  An error occurred while sending the request.\r\n  The request was aborted: Could not create SSL/TLS secure channel.\r\n```\r\n\r\n5. Adding either of the following (less secure?) ciphers fixes the issue:\r\n\r\nHexcode  Cipher Suite Name (OpenSSL)\r\n xc028   ECDHE-RSA-AES256-SHA384\r\n xc027   ECDHE-RSA-AES128-SHA256    \r\n\r\n```\r\n$ nuget.exe list\r\nInternal.Package1 0.1.0\r\nInternal.Package2 1.0.0\r\nInternal.Package3 1.0.0\r\n```\r\n\r\nBut causes [testssl.sh](https://github.com/drwetter/testssl.sh) to give the following warnings:\r\n\r\n Testing cipher categories\r\n Obsolete: SEED + 128+256 Bit CBC cipher       offered\r\n Testing vulnerabilities\r\n LUCKY13 (CVE-2013-0169), experimental     potentially VULNERABLE, uses cipher block chaining (CBC) ciphers with TLS. Check patches\r\n\r\n## Request\r\nIt would be good if nuget supported one of the ciphers in the modern set.\r\n\r\nIt would also be good if more detail could be added to the SSL/TLS error message to make it clear it's a cipher problem (as opposed to a certificate signing problem, or a protocol version problem).\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n```\r\n$ nuget.exe list -verbosity detailed\r\nNuGet Version: 5.4.0.6315\r\nUnable to load the service index for source https://internal_repo_hostname/api/nuget/nuget-local.\r\n  An error occurred while sending the request.\r\n  The request was aborted: Could not create SSL/TLS secure channel.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source https://internal_repo_hostname/api/nuget/nuget-local. ---> System.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Net.WebException: The request was aborted: Could not create SSL/TLS secure channel.\r\n   at System.Net.HttpWebRequest.EndGetResponse(IAsyncResult asyncResult)\r\n   at System.Net.Http.HttpClientHandler.GetResponseCallback(IAsyncResult ar)\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.ServerWarningLogHandler.<SendAsync>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.StsAuthenticationHandler.<SendAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.<SendAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.TimeoutUtility.<StartWithTimeout>d__0`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.HttpRetryHandler.<SendAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<GetThrottledResponse>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__18`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at ODataServiceDocumentUtils.<CreateODataServiceDocumentResourceV2>d__0.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at ODataServiceDocumentUtils.<CreateODataServiceDocumentResourceV2>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.ODataServiceDocumentResourceV2Provider.<TryCreate>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.V2FeedListResourceProvider.<TryCreate>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Commands.ListCommandRunner.<ExecuteCommand>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.ListCommand.<ExecuteCommandAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\n```"},{"Id":"20439423630","Type":"IssuesEvent","CreatedAt":"2022-02-24T18:31:43","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11605","RelatedDescription":"Closed issue \"[Bug]: Unexpected error “NU3034: This package is signed but not by a trusted signer” shows when verifying with Dotnet Nuget verify Command\" (#11605) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.20.75\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1.  Git clone https://github.com/NuGet/Entropy.git to Windows VM.\r\n2.\tCopy the “SDKPatchTool” folder from https://github.com/NuGet/Entropy.git to the desktop of Mac machine.\r\n3.\tCopy the “Nupkgs” folder of the NuGet build to the desktop of Mac machine.\r\n4.\tGo to the “SDKPatchTool” folder on Mac, and edit the paths in the “patchOnUnix.ps1”.\r\n5.\tOpen a bash on Mac, cd to the “SDKPatchTool” folder path and run “patchOnUnix.ps1” script: ./patchOnUnix.ps1.\r\n6.\tOn Windows VM, create a C# Class Library (.NET 6.0) project and pack it with command dotnet pack.\r\n7.\tOn Windows VM, cd to <path_to_Entropy>\\TestCertGenerator and create a new test certificate: `.\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile` in powershell.\r\n8.\tGo to the PatchSDK path.\r\n9.  Copy the .cer file(should be generated under the same path with .pfx file) and the .pfx file from the above Windows machine to Mac machine.\r\n10. Add the certificate to trusted store:  \r\n`sudo security import <pfxFilePath> -k /Library/Keychains/System.keychain`\r\n`sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain <cerFilePath>`\r\n11.\tRun`./dotnet nuget sign <PackageFilePath> --certificate-path <PfxFilePath> --certificate-password password -v n` on Mac.\r\n12.\tVerify the correct certificate was used with the command `./dotnet nuget verify <PackageFilePath> -v d `on Mac.\r\n## Expected\r\nThere were no other errors except for expected errors/warnings.\r\n\r\n## Actual\r\nUnexpected error “NU3034: This package is signed but not by a trusted signer” shows when verifying (in step10) as below screenshot.\r\n \r\n![image](https://user-images.githubusercontent.com/40230425/154656297-32f16bd6-6965-493a-a83d-364dc920fb8a.png)\r\n\r\n\r\n## Note\r\n1. The issue does not repro on Windows.\r\n2. The issue also repro on Linux.\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20439146733","Type":"IssuesEvent","CreatedAt":"2022-02-24T18:13:56","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11616","RelatedDescription":"Closed issue \"[Bug]: Revert mitigation of missing nuget.org when other tools create nuget.config\" (#11616) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\ndotnet 6.0.200, NuGet 6.1\n\n### Worked before?\n\ndotnet 6.0.100, NuGet 6.0\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nhttps://github.com/NuGet/Home/issues/11387 attempted to mitigate an issue when other tools (primarily Chocolatey and PowerShell's NuGet module) created a user-profile nuget.config file without any nuget.org package source defined.\r\n\r\nThat fix is now causing a lot more customers problems with errors reporting that nuget.config is being used by another process, or nugetorgadd.trk is being used. Note that it's not just other processes using the file, but also codepaths running in parallel trying to create the default config at the same time. While RestoreCommand (I believe) reads the config file before starting parallel tasks, NuGetSDKResolver from msbuild, and `dotnet tool restore` both invoke NuGet in parallel, preventing an easy \"load config single threaded, then do work in parallel\".\r\n\r\nSince Chocolatey stopped writing a user-profile nuget.config on clean machines, the only known issue is Windows PowerShell's NuGet module, but the number of customers were small, much smaller than the number of customers affected by the \"file is being used\" error.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20436577746","Type":"IssuesEvent","CreatedAt":"2022-02-24T15:48:54","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11618","RelatedDescription":"Opened issue \"[Bug]: Private NuGet Feed errors with `dotnet new --update-check`\" (#11618) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.101\n\n### Worked before?\n\nno\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nFeedback ticket: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1460341\r\n\r\nSimilar to https://github.com/NuGet/Home/issues/11169...\r\n>  For some reason nuget makes multiple calls to the credprovider and every next call starting from 2nd passes IsRetry: true as request argument, which invalidates cached token. \r\n\r\nTo reproduce:\r\n1. Clear nuget cache (dotnet nuget locals all -c) and credprovider cache ([clear this folder](https://github.com/microsoft/artifacts-credprovider/blob/master/README.md#session-token-cache-locations))\r\n2. Set nuget.config to use exclusively private feed in ADO\r\n3. dotnet new --uninstall Microsoft.DotNet.Web.Spa.ProjectTemplates (remove template for repro if it's already installed) \r\n4. Run `dotnet new --install Microsoft.DotNet.Web.Spa.ProjectTemplates --interactive`\r\n5. Observe multiple sequential interactive prompts\n\n### Verbose Logs\n\n_No response_"},{"Id":"20426796193","Type":"IssuesEvent","CreatedAt":"2022-02-24T05:27:32","Actor":"xoofx","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11617","RelatedDescription":"Opened issue \"[Feature]: Add msbuild extension point to better support auto-versioning helpers\" (#11617) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe\n\n### The Elevator Pitch\n\nAllow NuGet to provide a msbuild public extension point for calculating proper package id/version that would allow auto-versioning helpers to better integrate with NuGet (e.g [MinVer](https://github.com/adamralph/minver)).\n\n### Additional Context and Details\n\nThe problem is that today, most if not all auto-versioning helpers are unable to insert correctly into NuGet msbuild dependencies. See this issue https://github.com/adamralph/minver/issues/675 for more details.\r\n\r\nProposal is to add a public target e.g `NuGetPrepareForPackageIdAndVersion` that would allow auto-versioning helpers to insert correctly into NuGet, just before `_GetOutputItemsFromPack` where we are actually requiring the `PackageId` / `PackageVersion` to be computed.\r\n\r\n```\r\n  <Target Name=NuGetPrepareForPackageIdAndVersion\"/>\r\n\r\n  <Target Name=\"_GetOutputItemsFromPack\"\r\n          DependsOnTargets=\"_GetAbsoluteOutputPathsForPack;NuGetPrepareForPackageIdAndVersion\"\r\n          Returns=\"@(_OutputPackItems)\">"},{"Id":"20422942976","Type":"PullRequestEvent","CreatedAt":"2022-02-23T22:52:52","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11446","RelatedDescription":"Merged pull request \"Spec for machine readable json output for dotnet list package\" (#11446) at NuGet/Home","RelatedBody":"## Bug\r\n\r\nFixes: https://github.com/NuGet/Home/issues/11449\r\nRelated: https://github.com/NuGet/Home/issues/7752\r\n\r\n## Description\r\n\r\nMany organization are required by [regulation](https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/) to audit packages that they're using in repository. It is difficult to parse the output of dotnet list package.  Without having a good way to parse the output of this command, it makes it difficult to structure the list of packages in a way that can be fed into another auditing system.\r\nIn this spec design proposal, I tried to address `json` output part, for `parsable` format output it needs own spec.\r\nFor this purpose, I added below 2 new options for all `dotnet list package` commands.\r\n\r\n* `--format <FORMAT>`\r\n`<FORMAT>` - Allowed values as part of spec is `json`. Also `text` is acceptable input value too, it'll just output current cli output. (In the future `parseable`, `csv`, `yaml`, `xml` could be candidates.)\r\n\r\n```dotnetcli\r\ndotnet list [<PROJECT>|<SOLUTION>] package [--config <SOURCE>]\r\n    [--deprecated]\r\n    [--framework <FRAMEWORK>] [--highest-minor] [--highest-patch]\r\n    [--include-prerelease] [--include-transitive] [--interactive]\r\n    [--outdated] [--source <SOURCE>] [-v|--verbosity <LEVEL>]\r\n    [--vulnerable]\r\n    [--format <FORMAT>]\r\n\r\ndotnet list package -h|--help\r\n```\r\n\r\n[Rendered view](https://github.com/NuGet/Home/blob/a23955149092f7b94354ced79060b466fb6af5b3/proposed/2021/MachineReadableOutput.md)\r\n\r\nTo do:  \r\n* Rename spec md file to `DotnetListPackageMachineReadableJsonOutput.md`\r\n* Get community input https://twitter.com/nuget/status/1470426335705239557\r\n* Get explicit approval from stake holders\r\n* packages.lock.json format looks very similar what we want, code/schema could be reused.\r\n* Single json schema"},{"Id":"20422942933","Type":"IssuesEvent","CreatedAt":"2022-02-23T22:52:51","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11449","RelatedDescription":"Closed issue \"Create spec for machine readable json output for \"dotnet list package\"\" (#11449) at NuGet/Home","RelatedBody":"Sub issue of https://github.com/NuGet/Home/issues/7752, `json` output spec only.\r\n\r\nMany organizations are required by regulation to audit packages that they're using in a repository.\r\n\r\nCurrently there's no easy way to produce a Software Bill of Material (SBOM) output which can be consumed by another auditing system or kept for records.\r\nTo do:\r\n* Rename spec md file to `DotnetListPackageMachineReadableJsonOutput.md`"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":42,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-02-25T03:30:24.8350519Z","RunDurationInMilliseconds":1453}