{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13364918352","Type":"PullRequestEvent","CreatedAt":"2020-08-31T22:17:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8178","RelatedDescription":"Opened pull request \"Add feature flags to all OData endpoints\" (#8178) at NuGet/NuGetGallery","RelatedBody":"This allows us to individually disable non-hijacked endpoints. These feature flags are enabled by default, which is not following the existing pattern but is desirable in this case. We're turning OFF a feature, not ON which is what feature flags have been used for thus far.  It's easy to achieve this with our framework.\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/2902."},{"Id":"13364787446","Type":"PullRequestEvent","CreatedAt":"2020-08-31T22:00:00","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8159","RelatedDescription":"Merged pull request \"Add instructions for VerifyGitHubVulnerabilities to readme\" (#8159) at NuGet/NuGetGallery","RelatedBody":"Add verifyGitHubVulnerabilities job info to the gallery readme.\r\n\r\nPreview:\r\n![image](https://user-images.githubusercontent.com/14225979/90099637-4b781480-dd7e-11ea-84e0-a4df168dc9bd.png)\r\n"},{"Id":"13362731798","Type":"IssuesEvent","CreatedAt":"2020-08-31T18:18:07","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8177","RelatedDescription":"Opened issue \"Failing to connect to nuget.org: \"The request was aborted: Could not create SSL/TLS secure channel.\"\" (#8177) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nAn attempt to contact nuget.org servers (for package search or restore) from VS or command line results in the following error:\r\n```\r\nAn error occurred while sending the request.\r\nThe request was aborted: Could not create SSL/TLS secure channel.\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13366648563","Type":"IssuesEvent","CreatedAt":"2020-09-01T02:57:26","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9964","RelatedDescription":"Closed issue \"Use HttpRequestMessage.Options instead of Properties on net5.0\" (#9964) at NuGet/Home","RelatedBody":"https://github.com/dotnet/runtime/pull/39182 marked `HttpRequestMessage.Properties` as obsolete. Since we treat warnings as errors, this is causing NuGet.Client to fail to compile on new SDKs."},{"Id":"13366213579","Type":"IssuesEvent","CreatedAt":"2020-09-01T01:47:50","Actor":"shyzus","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9972","RelatedDescription":"Opened issue \"NuGet Invalid Version String\" (#9972) at NuGet/Home","RelatedBody":"# Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.2\r\n\r\ndotnet.exe --version (if appropriate): 3.1.106\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Fedora Silverblue 32\r\n\r\nWorked before? If so, with which NuGet version: N/A\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create toolbox in silverblue with:\r\n`toolbox create --container dotnet-toolbox`\r\n\r\n2. Install required packages: \r\n`sudo dnf install dotnet-sdk-3.1 dotnet-host dotnet dotnet-templates-3.1 dotnet-targeting-pack-3.1 dotnet-apphost-pack-3.1 dotnet-build-reference-packages mono-devel`\r\n\r\n3. Create a new Command Line Application\r\n`mkdir MyConsoleApp`\r\n`cd MyConsoleApp`\r\n`dotnet new console`\r\n\r\n4. Attempt to build\r\n`dotnet build`\r\n\r\n## Other suggested things\r\n\r\nThis can be solved with a hotfix for other Silverblue users by modifying their /etc/os-release file and removing any whitespaces and any parenthesis e.g \"()\".\r\n\r\nHowever I would suggest whatever code is determining whether a version is valid or invalid is updated to permit whitespaces and/or parenthesis. I am not aware of any issues this change would cause and would like to see this change implemented.\r\n\r\n### Logs\r\n\r\n> Microsoft (R) Build Engine version 16.4.0+e901037fe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n>\r\n>/usr/lib64/dotnet/sdk/3.1.106/NuGet.targets(123,5): error : '32 (Container Image)' is not a valid version string. (Parameter 'value') [/var/home/falcon/RiderProjects/consoleapp/consoleapp.csproj]\r\n>\r\n>Build FAILED.\r\n>\r\n>/usr/lib64/dotnet/sdk/3.1.106/NuGet.targets(123,5): error : '32 (Container Image)' is not a valid version string. (Parameter 'value') [/var/home/falcon/RiderProjects/consoleapp/consoleapp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n>\r\n>Time Elapsed 00:00:00.46\r\n\r\n\r\n### Sample Project\r\nSee step 4.\r\n"},{"Id":"13366179386","Type":"IssuesEvent","CreatedAt":"2020-09-01T01:42:05","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9971","RelatedDescription":"Opened issue \"unit test to compare lock file target libraries in project.assets.json file with Dependencies tree\" (#9971) at NuGet/Home","RelatedBody":"This issue has been created to develop a unit test to compare lock file target libraries in `project.assets.json` file with Dependencies tree. Inspired by [this](https://github.com/NuGet/NuGet.Client/pull/3598#discussion_r475776278) code review comment.\r\n"},{"Id":"13365912420","Type":"IssuesEvent","CreatedAt":"2020-09-01T00:59:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9970","RelatedDescription":"Opened issue \"format should be run in build.ps1\" (#9970) at NuGet/Home","RelatedBody":"The problem is simple, I personally sometimes run build.ps1 to ensure that the project is at least buildable before pushing to the CI, but only in 2 weeks I've had cases where my WIP branch does not compile due to formatting changes. \r\n\r\nIn order to improve this I think it'd be worth it to run format locally. "},{"Id":"13365328566","Type":"IssuesEvent","CreatedAt":"2020-08-31T23:18:38","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9969","RelatedDescription":"Opened issue \"Add support for msbuild restore + static graph restore in the perf scripts\" (#9969) at NuGet/Home","RelatedBody":""},{"Id":"13365196720","Type":"IssuesEvent","CreatedAt":"2020-08-31T22:57:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9968","RelatedDescription":"Opened issue \"Performance scripts don't account for restore operation failures\" (#9968) at NuGet/Home","RelatedBody":"Currently the performance scripts will not report in any way, shape or form that an operation failed. \r\nWhile most of our test cases are set-up in a way that doesn't fail, but sitll makes investigations when failures do occur, quite a pain :) "},{"Id":"13364809454","Type":"IssuesEvent","CreatedAt":"2020-08-31T22:02:45","Actor":"loic-sharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9850","RelatedDescription":"Closed issue \"Surface basic vulnerability metadata in PM UI view models\" (#9850) at NuGet/Home","RelatedBody":"Part of the work to display vulnerability information in the package graph on `Installed tab of Package Manager Dialog (PMUI).\r\n\r\nSpec: https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages\r\n\r\n- Ingress registration metadata for vulnerabilities and augment view model metadata\r\n\r\n\r\n"},{"Id":"13364429495","Type":"IssuesEvent","CreatedAt":"2020-08-31T21:16:17","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9966","RelatedDescription":"Closed issue \"nuget.packaging.extraction needs ilmerge to not contain newtonsoft.json\" (#9966) at NuGet/Home","RelatedBody":"VS setup customers of nuget.packaging.extraction.dll have problems due to the fact that ILMerged dll has newtonsoft.json.\r\ntrying to unblock them with newtonsoft.json not in DLL...\r\n\r\nSince dependencies are hidden in this package, it will not properly describe its need for newtonsoft.json right now...so users will need to add a newtonsoft.json package ref too."},{"Id":"13363903690","Type":"IssuesEvent","CreatedAt":"2020-08-31T20:19:38","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7381","RelatedDescription":"Closed issue \"Move Pack warning codes from 51xx to 55xx\" (#7381) at NuGet/Home","RelatedBody":"Per https://github.com/NuGet/NuGet.Client/pull/2450#discussion_r223834237, our pattern normally sohuld be X000-X499 are errors, while X500-X999 are warnings. \r\n\r\nShould we change this in pack retroactively? \r\nWhat do we do about new warnings?\r\n4.9? 5.0?\r\n\r\nRelated.\r\nhttps://github.com/NuGet/NuGet.Client/pull/1690/"},{"Id":"13363870145","Type":"IssuesEvent","CreatedAt":"2020-08-31T20:16:06","Actor":"KevinRansom","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9967","RelatedDescription":"Opened issue \"Invalid restore input. Invalid target framework 'unsupported': BUILDING F# repo using dogfood build of visual studio\" (#9967) at NuGet/Home","RelatedBody":"\r\nWith the dogfood build of visual studio and using the Developer command prompt from that build the F# build fails with the message:\r\n````\r\nBuild FAILED.\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,5): error : Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\Users\\WDAGUtilityAccount\\.nuget\\packag\r\nes\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20407.3\\tools\\Tools.proj. [C:\\Users\\WDAGUtilityAccount\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20407.3\\tools\\Tools.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n````\r\n\r\n\r\nRepro:\r\n1.   Install latest vs dogfood build from here: \r\n      https://aka.ms/vs/dogfood/install\r\n      Select .NetDesktop Framework, Desktop development with C++, Visual Studio extensions workloads to be installed\r\n![image](https://user-images.githubusercontent.com/5175830/91754702-b5fec200-eb7e-11ea-8694-8d401352f4a1.png)\r\n2.  Using vs git clone:  https://github.com/dotnet/fsharp.git\r\n3.  Open a Visual Studio 2019 Developer Command Prompt v16.8.0-pre.3.0\r\n4.  Change directory to the cloned fsharp repo\r\n5.  run the build command\r\neventually observe:\r\n````\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:04:15.35\r\nVisualFSharp.sln:\r\n  Determining projects to restore...\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,5): error : Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\Users\\WDAGUtilityAccount\\.nuget\\packag\r\nes\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20407.3\\tools\\Tools.proj. [C:\\Users\\WDAGUtilityAccount\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20407.3\\tools\\Tools.proj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,5): error : Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\Users\\WDAGUtilityAccount\\.nuget\\packag\r\nes\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20407.3\\tools\\Tools.proj. [C:\\Users\\WDAGUtilityAccount\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20407.3\\tools\\Tools.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.19\r\nBuild failed.\r\n\r\nC:\\Users\\WDAGUtilityAccount\\source\\repos\\fsharp>\r\n````\r\n\r\nIf I copy from an rtm vs install the contents of the directory:   C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\r\n\r\nTo the same place in the preview install and do a build it succeeds\r\n\r\nThis is blocking our ability to use dogfood Visual Studios.  I believe it only showed up this week.\r\n\r\n\r\nThanks\r\n\r\nKevin\r\n"},{"Id":"13363646324","Type":"IssuesEvent","CreatedAt":"2020-08-31T19:52:38","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9966","RelatedDescription":"Opened issue \"nuget.packaging.extraction needs ilmerge to not contain newtonsoft.json\" (#9966) at NuGet/Home","RelatedBody":"VS setup customers of nuget.packaging.extraction.dll have problems due to the fact that ILMerged dll has newtonsoft.json.\r\ntrying to unblock them with newtonsoft.json not in DLL...\r\n\r\nSince dependencies are hidden in this package, it will not properly describe its need for newtonsoft.json right now...so users will need to add a newtonsoft.json package ref too."},{"Id":"13363235301","Type":"IssuesEvent","CreatedAt":"2020-08-31T19:09:08","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9696","RelatedDescription":"Closed issue \"VS 2019 crashes after opening Manage NugetPackages\" (#9696) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1047675/vs-2019-crashes-after-opening-manage-nugetpackages.html)._\n\n---\nHello,\n\nI have issues to edit my Nuget references in several projects.\nEverytime I open Manage NugetPackages the VS 2019 crashes.\n\nI have taken a look into the event viewer and found the following NullReferenceException:\nApplication: devenv.exe Framework Version: v4.0.30319 Description: The process was terminated due to an unhandled exception. Exception Info: System.NullReferenceException at NuGet.PackageManagement.UI.IconUrlToImageCacheConverter.AddToCache(System.Uri, System.Windows.Media.Imaging.BitmapSource) at NuGet.PackageManagement.UI.IconUrlToImageCacheConverter.IconBitmapImage_DownloadOrDecodeFailed(System.Object, System.Windows.Media.ExceptionEventArgs) at NuGet.PackageManagement.UI.IconUrlToImageCacheConverter+<>c__DisplayClass5_0. <Convert>b__1(System.Object, System.Windows.Media.ExceptionEventArgs) at System.Windows.Media.UniqueEventHelper`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]. InvokeEvents(System.Object, System.__Canon) at System.Windows.Media.Imaging.BitmapImage.OnDownloadFailed(System.Object, System.Windows.Media.ExceptionEventArgs) at System.Windows.Media.UniqueEventHelper`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]. InvokeEvents(System.Object, System.__Canon) at System.Windows.Media.Imaging.LateBoundBitmapDecoder.ExceptionCallback(System.Object) at System.Windows.Media.Imaging.LateBoundBitmapDecoder.DownloadCallback(System.Object) at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32) at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate) at System.Windows.Threading.DispatcherOperation.InvokeImpl() at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(System.Object) at MS. Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object) at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean) at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean) at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) at MS. Internal.CulturePreservingExecutionContext.Run(MS. Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object) at System.Windows.Threading.DispatcherOperation.Invoke() at System.Windows.Threading.Dispatcher.ProcessQueue() at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef) at MS. Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef) at MS. Win32.HwndSubclass.DispatcherCallbackOperation(System.Object) at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32) at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate) at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32) at MS. Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\n\nPerhaps this is only a problem within my company with a few projects, but I cannot identify the Nuget package which causes the error. \n\nAnd in my opinion to give the user a NullReferenceException is not the best practice.\n\n---\n### Original Comments\n\n#### pwinkelhane on 5/25/2020, 00:52 AM: \n\nSorry, I forgot to mention that this problem occured after upgrading from VS 16.4.3 to 16.5.4. I tried 16.5.5 and 16.6.0, but the problem still exists.\n#### Fiona Niu[MSFT] on 5/25/2020, 02:26 AM: \n\n<p>Thank you for taking the time to log this issue! Could you please provide more information via the Visual Studio Feedback Tool(Help -&gt; Send Feedback -&gt; Report A Problem) so that we can conduct further research? The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace).<br>\nSince this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool:</p>\n<pre><code>• Open Visual Studio Feedback tool.\n• Click the banner letting you know that you have problems requesting your attention.\n• Click this problem from the list\n• Click &quot;View their request and respond&quot; from the problem details banner\n• Add a comment, in the Attachments/Record: click Start Recording\n• When the Steps Recorder tool appears, perform the steps that reproduce the problem.\n• When you're done, choose the Stop Record button.\n• Wait a few minutes for Visual Studio to collect and package the information that you recorded.\n• Submit. You will be able to see the comment on Developer Community. For security reasons, your files come directly to us and don't appear on Developer Community.\n</code></pre>\n<p>For the full instructions, please see: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info</a> . For information about what data is collected, see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect\">https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect</a><br>\nGet performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### pwinkelhane on 5/25/2020, 02:40 AM: \n\n- Open a solution<br>- Manage Nuget Packages<br>a crash occurs and VS is crashing\n#### pwinkelhane on 5/25/2020, 02:43 AM: \n\nI hope you get all information you need. As I start the recorder the studio crashed as before so I don&#39;t know if you get a useful recording.\n#### Fiona Niu[MSFT] on 5/25/2020, 03:15 AM: \n\n<p>Thanks a lot for providing the information. We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Fernando Aguilar [MSFT] on 6/3/2020, 11:05 AM: \n\n<p>Apologies for the delay.</p>\n<p>By looking at the stack and the repro steps, it seems that there’s a problem on the icons in the packages hosted in the company feed. Are you using <code>&lt;icon/&gt;</code> or <code>&lt;iconUrl/&gt;</code> to put icons in the company packages?</p>\n\n#### Visual Studio Feedback System on 6/5/2020, 07:21 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n#### pwinkelhane on 6/14/2020, 10:55 PM: \n\n<p>Apologies for the delay.</p><p>Thanks for your hint, I know about the circumstance, that there will be issues if you use the obsolete option.</p><p>Can you please tell me which option shall be used. I will update the packages with the wrong option.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"13363057217","Type":"IssuesEvent","CreatedAt":"2020-08-31T18:51:14","Actor":"jmarolf","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9965","RelatedDescription":"Opened issue \"Central package management throws errors about duplicate dictionary keys when attempting to create the lock file\" (#9965) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n<details>\r\n  <summary>Versions</summary>\r\n\r\n- **NuGet version (5.8.0.4):** https://github.com/NuGet/NuGet.Client/commit/3501ddedc274ac10d4b135856b7593a6bb8a72f1\r\n- **dotnet.exe --version:** 5.0.100-rc.1.20427.12\r\n- **Visual Studio Version:** 16.8.0 Preview 2.0\r\n- **OS version:** Windows 10 Version 2004 (OS Build 19041.450)\r\n</details>\r\n\r\n\r\n\r\n**Worked before?** No, I believe this feature has never worked in this scenario.\r\n\r\n**Details:** I attempted to migrate the roslyn repo over to use central package management. I got stuck on a dictionary throwing an exception for having duplicate keys for the nuget package `System.Collections.Immutable`. This appears to be coming from the `NuGet.targets` file. Looking at the binary log of the restore task in MSBuild I do believe nuget is getting duplicate references for `System.Collections.Immutable` in multi-targeted projects but its unclear if that is expected or not.\r\n\r\n![image](https://user-images.githubusercontent.com/9797472/91755315-bfd4f500-eb7f-11ea-99bc-ef8c3de4682a.png)\r\n![image](https://user-images.githubusercontent.com/9797472/91755343-cbc0b700-eb7f-11ea-96bb-5565cf444d7c.png)\r\n\r\nEither way I have reached the end of my diagnostic abilities and would need some help from the nuget team to determine what the expected behavior is here so I could contribute a fix.\r\n\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFrom the command line in the OS of your choice:\r\n\r\n0. have git and the latest .NET 5 preview SDK installed\r\n1. `git clone --single-branch --branch feature/use-central-package-management https://github.com/jmarolf/roslyn.git`\r\n\r\n2. `cd roslyn`\r\n\r\n3. `dotnet restore Roslyn.sln`\r\n\r\n## Expected\r\n\r\nRestore with central packages works\r\n\r\n## Actual\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-rc.1.20427.12\\NuGet.targets(130,5): error : An item with the same key has already been added. Key: (System.Collections.Immutable, 5.0.0-preview.8.20371.14) [C:\\source\\jmarolf\\scratch\\roslyn\\Roslyn.sln]\r\n```\r\n\r\n```\r\n An item with the same key has already been added. \r\n    at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource) \r\n    at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n    at System.Linq.Enumerable.ToDictionary[TSource,TKey,TElement](IEnumerable`1 source, Func`2keySelector, Func`2 elementSelector, IEqualityComparer`1 comparer) \r\n    at NuGet.Commands.LockFileBuilder.CreateLockFile(LockFile previousLockFile, PackageSpec project, IEnumerable`1 targetGraphs, IReadOnlyList`1 localRepositories, RemoteWalkContext context) \r\n    at NuGet.Commands.RestoreCommand.<ExecuteAsync>d__33.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n    at NuGet.Commands.RestoreRunner.<ExecuteAsync>d__7.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n    at NuGet.Commands.RestoreRunner.<ExecuteAndCommitAsync>d__6.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n    at NuGet.Commands.RestoreRunner.<CompleteTaskAsync>d__9.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at NuGet.Commands.RestoreRunner.<RunAsync>d__2.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n    at NuGet.Commands.RestoreRunner.<RunAsync>d__0.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n    at NuGet.Build.Tasks.BuildTasksUtility.<RestoreAsync>d__12.MoveNext() \r\n --- End of stack trace from previous location where exception was thrown --- \r\n    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\n    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\n    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.<RestoreAsync>d__14.MoveNext() \r\n```\r\n\r\n## NOTE\r\n\r\nyou can alternatively do `dotnet restore Roslyn.sln /bl` to get a binary log of the build. \r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-09-01T05:30:40.4666152Z","RunDurationInMilliseconds":1836}