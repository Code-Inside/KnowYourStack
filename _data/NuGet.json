{"Data":{"Blog":{"FeedItems":[{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"32642106316","Type":"IssuesEvent","CreatedAt":"2023-10-18T01:38:28","Actor":"zeed-w-beez","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9707","RelatedDescription":"Closed issue \"[NuGet.org Bug]: IP blocked by globalcdn.nuget.org\" (#9707) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nIt seems that one of our public export IP `216.52.208.43` is blocked and cannot connect to `globalcdn.nuget.org` normally.\r\nI tested other public export IPs and it was normal.\r\n\r\n### Repro Steps\r\n\r\n1. download package <https://www.nuget.org/api/v2/package/coverlet.msbuild/2.6.2>\r\n2. cannot connect to globalcdn.nuget.org\r\n3. finally get a 502 after 60s\r\n\r\n### Expected Behavior\r\n\r\nHope it can be downloaded normally.\r\n\r\nWe are using JFrog Artifactory as an internal NuGet proxy and cache, and it has been working fine for the past few years.\r\nI noticed that `globalcdn.nuget.org` has only been used recently. **Are there some configurations that need to be optimized?**\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n```text\r\ncurl -vv -L \"https://www.nuget.org/api/v2/package/coverlet.msbuild/2.6.2\"\r\n> CONNECT www.nuget.org:443 HTTP/1.1\r\n> Host: www.nuget.org:443\r\n> User-Agent: curl/7.68.0\r\n> Proxy-Connection: Keep-Alive\r\n> \r\n< HTTP/1.0 200 Connection established\r\n< \r\n> GET /api/v2/package/coverlet.msbuild/2.6.2 HTTP/1.1\r\n> Host: www.nuget.org\r\n> User-Agent: curl/7.68.0\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 302 Found\r\n< Cache-Control: private\r\n< Transfer-Encoding: chunked\r\n< Content-Type: text/html; charset=utf-8\r\n< Location: https://globalcdn.nuget.org/packages/coverlet.msbuild.2.6.2.nupkg\r\n< Access-Control-Expose-Headers: Request-Context\r\n< Set-Cookie: ARRAffinity=03653a5ff26f7e0adf0cd33338b896ea4ee4856ba3918ba0940d9b1fda36f29c;Path=/;HttpOnly;Secure;Domain=www.nuget.org\r\n< Set-Cookie: ARRAffinitySameSite=03653a5ff26f7e0adf0cd33338b896ea4ee4856ba3918ba0940d9b1fda36f29c;Path=/;HttpOnly;SameSite=None;Secure;Domain=www.nuget.org\r\n< Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n< Request-Context: appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b\r\n< Content-Security-Policy: frame-ancestors 'none'\r\n< X-Frame-Options: DENY\r\n< X-XSS-Protection: 1; mode=block\r\n< X-Content-Type-Options: nosniff\r\n< Date: Fri, 13 Oct 2023 00:43:32 GMT\r\n< \r\n> CONNECT globalcdn.nuget.org:443 HTTP/1.1\r\n> Host: globalcdn.nuget.org:443\r\n> User-Agent: curl/7.68.0\r\n> Proxy-Connection: Keep-Alive\r\n> \r\n* Received HTTP code 502 from proxy after CONNECT\r\n* CONNECT phase completed!\r\n* Closing connection 1\r\ncurl: (56) Received HTTP code 502 from proxy after CONNECT\r\n```"},{"Id":"32640568448","Type":"PullRequestEvent","CreatedAt":"2023-10-17T23:56:01","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9712","RelatedDescription":"Opened pull request \"[Vulnerabilites]Add IVulnerabilityWriter\" (#9712) at NuGet/NuGetGallery","RelatedBody":"Update the Github Vulnerability interaction library to support IVulnerabilityWriters for writing vulnerabilities.\r\nThis is in preparation for use by the new v3 vulnerability resource updater."},{"Id":"32609903711","Type":"IssuesEvent","CreatedAt":"2023-10-17T02:44:44","Actor":"jpobst","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9711","RelatedDescription":"Opened issue \"[NuGet.org Bug]: `net7.0-android` does not show as a computed compatible framework for a `net6.0-android` package\" (#9711) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe \"Frameworks\" tab for a `net6.0-android` NuGet package does not show `net7.0-android` as a computed compatible framework.  This leads users to believe that our packages our not usable by .NET 7 Android apps.\r\n\r\nExample:\r\nhttps://www.nuget.org/packages/Xamarin.AndroidX.Core#supportedframeworks-body-tab\r\n\r\nNote it is likely caused by the additional Android version in the moniker.  For example, `net7.0-android` shows up as a computed framework for Json.NET:\r\n\r\nhttps://www.nuget.org/packages/Newtonsoft.Json#supportedframeworks-body-tab\r\n\r\nAlso note we only specify `net6.0-android` in our `.csproj` file, the Android version is added automatically by `pack`:\r\n\r\nhttps://github.com/xamarin/AndroidX/blob/main/Directory.Build.props#L9\n\n### Repro Steps\n\nOpen URL: https://www.nuget.org/packages/Xamarin.AndroidX.Core#supportedframeworks-body-tab\n\n### Expected Behavior\n\n`net7.0-android` should be listed as an \"Additional computed target framework(s)\".\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"32608651975","Type":"PullRequestEvent","CreatedAt":"2023-10-17T01:12:43","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9710","RelatedDescription":"Opened pull request \"Fixing popularity transfer download count bug, surfacing additional validation info\" (#9710) at NuGet/NuGetGallery","RelatedBody":"The Popularity Transfer Admin Panel has a bug where it shows version-specific download counts for packages, rather than the package registration's download count, which is what we want (we transfer popularity from one package registration to another). I had to refactor some code to get that data correctly.\r\n\r\nI also added some more validation info to the Admin Panel page, which should save DRIs from having to go look in the SQL DB manually every time: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/2650b9a4-7113-429b-8f71-1dcf02f1f2a6)\r\n"},{"Id":"32606644008","Type":"IssuesEvent","CreatedAt":"2023-10-16T22:44:28","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9709","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Incorrect download number in Most Downloaded Packages page\" (#9709) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nI'm checking the ranking of MimeKit in https://www.nuget.org/stats/packages page. But I notice a weird thing. The downloads in this page is different from the one on [MimeKit homepage]().\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/772561/f89f87c5-477b-4148-8b0c-903226133eda)\r\n\r\nThis is the number on MimeKit homepage\r\n![image](https://github.com/NuGet/NuGetGallery/assets/772561/cc0544a6-136e-4e99-b0dd-917e599fc5ec)\r\n\r\nCan you double check your distinct logic? I'm afraid it's a bug.\r\n\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/stats/packages\r\n2. Pick any package and record the download number\r\n3. Go inside to the package homepage and record the total download number\r\n\n\n### Expected Behavior\n\nThe download number on stats/packages page should be same as the one on package homepage\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"32604255457","Type":"IssuesEvent","CreatedAt":"2023-10-16T20:38:40","Actor":"tonyqus","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9709","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Incorrect download number in Most Downloaded Packages\" (#9709) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nI'm checking the ranking of MimeKit in https://www.nuget.org/stats/packages page. But I notice a weird thing. The downloads in this page is different from the one on [MimeKit homepage]().\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/772561/f89f87c5-477b-4148-8b0c-903226133eda)\r\n\r\nThis is the number on MimeKit homepage\r\n![image](https://github.com/NuGet/NuGetGallery/assets/772561/cc0544a6-136e-4e99-b0dd-917e599fc5ec)\r\n\r\nCan you double check your distinct logic? I'm afraid it's a bug.\r\n\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/stats/packages\r\n2. Pick any package and record the download number\r\n3. Go inside to the package homepage and record the total download number\r\n\n\n### Expected Behavior\n\nThe download number on stats/packages page should be same as the one on package homepage\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"32553910461","Type":"PullRequestEvent","CreatedAt":"2023-10-13T21:16:02","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9657","RelatedDescription":"Merged pull request \"Pull GitHub for vulnerabilites out to library.\" (#9657) at NuGet/NuGetGallery","RelatedBody":"This is pre-requisite change to use this library for the larger coming job to update vulnerabilities files.\r\nWhile the changes is large, the code is largely the same code that was already being used in the GitHubVulnerabilities2Db job."},{"Id":"32531591337","Type":"IssuesEvent","CreatedAt":"2023-10-13T04:09:20","Actor":"WojciechNagorski","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9708","RelatedDescription":"Opened issue \"[NuGet.org Bug]: SSH.NET download count issue\" (#9708) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nTwo days ago I released a new version of SSH.NET, but the download counter still shows **0**:\r\nhttps://www.nuget.org/packages/SSH.NET/2023.0.0\r\nI have downloaded this package many times and updated it in other open source projects.\n\n### Repro Steps\n\nOpen page https://www.nuget.org/packages/SSH.NET/2023.0.0\n\n### Expected Behavior\n\nThe counter should be greater then 0.\n\n### Screenshots\n\n<img width=\"570\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/17333903/39373c55-a4c6-43ab-8e7c-f34e04960b55\">\r\n\n\n### Additional Context and logs\n\nFor instance I've updated this package in the following projects. \r\nhttps://github.com/testcontainers/testcontainers-dotnet/pull/1019\r\nhttps://github.com/mRemoteNG/mRemoteNG/pull/2503\r\nBoth examples build in Github Actions."},{"Id":"32529438442","Type":"IssuesEvent","CreatedAt":"2023-10-13T01:14:39","Actor":"zeed-w-beez","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9707","RelatedDescription":"Opened issue \"[NuGet.org Bug]: IP blocked by globalcdn.nuget.org\" (#9707) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIt seems that one of our public export IP `216.52.208.43` is blocked and cannot connect to `globalcdn.nuget.org` normally.\r\nI tested other public export IPs and it was normal.\n\n### Repro Steps\n\n1. download package <https://www.nuget.org/api/v2/package/coverlet.msbuild/2.6.2>\r\n2. cannot connect to globalcdn.nuget.org\r\n3. finally get a 502 after 60s\n\n### Expected Behavior\n\nHope it can be downloaded normally.\r\n\r\nWe are using JFrog Artifactory as an internal NuGet proxy and cache, and it has been working fine for the past few years.\r\nI noticed that `globalcdn.nuget.org` was only started to be used recently. Are there some configurations that need to be optimized?\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\ncurl -vv -L \"https://www.nuget.org/api/v2/package/coverlet.msbuild/2.6.2\"\r\n> CONNECT www.nuget.org:443 HTTP/1.1\r\n> Host: www.nuget.org:443\r\n> User-Agent: curl/7.68.0\r\n> Proxy-Connection: Keep-Alive\r\n> \r\n< HTTP/1.0 200 Connection established\r\n< \r\n> GET /api/v2/package/coverlet.msbuild/2.6.2 HTTP/1.1\r\n> Host: www.nuget.org\r\n> User-Agent: curl/7.68.0\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 302 Found\r\n< Cache-Control: private\r\n< Transfer-Encoding: chunked\r\n< Content-Type: text/html; charset=utf-8\r\n< Location: https://globalcdn.nuget.org/packages/coverlet.msbuild.2.6.2.nupkg\r\n< Access-Control-Expose-Headers: Request-Context\r\n< Set-Cookie: ARRAffinity=03653a5ff26f7e0adf0cd33338b896ea4ee4856ba3918ba0940d9b1fda36f29c;Path=/;HttpOnly;Secure;Domain=www.nuget.org\r\n< Set-Cookie: ARRAffinitySameSite=03653a5ff26f7e0adf0cd33338b896ea4ee4856ba3918ba0940d9b1fda36f29c;Path=/;HttpOnly;SameSite=None;Secure;Domain=www.nuget.org\r\n< Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n< Request-Context: appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b\r\n< Content-Security-Policy: frame-ancestors 'none'\r\n< X-Frame-Options: DENY\r\n< X-XSS-Protection: 1; mode=block\r\n< X-Content-Type-Options: nosniff\r\n< Date: Fri, 13 Oct 2023 00:43:32 GMT\r\n< \r\n> CONNECT globalcdn.nuget.org:443 HTTP/1.1\r\n> Host: globalcdn.nuget.org:443\r\n> User-Agent: curl/7.68.0\r\n> Proxy-Connection: Keep-Alive\r\n> \r\n* Received HTTP code 502 from proxy after CONNECT\r\n* CONNECT phase completed!\r\n* Closing connection 1\r\ncurl: (56) Received HTTP code 502 from proxy after CONNECT"},{"Id":"32523746906","Type":"IssuesEvent","CreatedAt":"2023-10-12T19:18:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9706","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Advisories removed from GitHub still appear on NuGet.org\" (#9706) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nAt least one security advisory link on NuGet.org is broken. When you click it, GitHub shows a 404.\r\n\r\nhttps://www.nuget.org/packages/bootstrap/4.2.1\r\nlinks to\r\nhttps://github.com/advisories/GHSA-fxwm-579q-49qq\r\n\r\n```kusto\r\nlet advisory = \"GHSA-fxwm-579q-49qq\";\r\nNiCatalogLeafItems\r\n| where Vulnerabilities contains advisory\r\n| summarize min(CommitTimestamp)\r\n```\r\n\r\n|min_CommitTimestamp|\r\n|---|\r\n|2020-07-17 07:21:57.4073455|\r\n\r\nWe first saw this advisory in July of 2020. It's not clear at what time the page began showing 404. Wayback Machine has no index for this.\r\n\r\nWe don't know if this is a GitHub data bug or something else.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Repro Steps\n\nhttps://www.nuget.org/packages/bootstrap/4.2.1\r\nlinks to\r\nhttps://github.com/advisories/GHSA-fxwm-579q-49qq\r\n\r\nThis GitHub URL is 404.\n\n### Expected Behavior\n\nThe link should not be there if the advisory is withdrawn or the link should work.\r\n\r\nThe VerifyGitHubVulnerabilities job should report this as an error since we have an advisory in our DB that doesn't exist on GitHub (anymore?).\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"32638286897","Type":"IssuesEvent","CreatedAt":"2023-10-17T21:31:46","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12947","RelatedDescription":"Opened issue \"Vulnerabilities InfoBar, Filter and Version list improvements\" (#12947) at NuGet/Home","RelatedBody":"This issue is for tracking improvements and bugs related to vulnerabilities feature in Visual Studio and PM UI.\r\n\r\n### Version List:\r\n- [ ] https://github.com/NuGet/Home/issues/12772\r\n- [ ] https://github.com/NuGet/Home/issues/12945\r\n\r\n### Info Bar:\r\n- [ ] https://github.com/NuGet/Home/issues/12891\r\n- [ ] https://github.com/NuGet/Home/issues/12835\r\n- [ ] https://github.com/NuGet/Home/issues/12862\r\n \r\n### Filter:\r\n- [ ] https://github.com/NuGet/Home/issues/12944\r\n\r\n### PM UI:\r\n- [ ] https://github.com/NuGet/Home/issues/12946"},{"Id":"32638237775","Type":"IssuesEvent","CreatedAt":"2023-10-17T21:29:12","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12946","RelatedDescription":"Opened issue \"Fix \"1 vulnerable package versions\" in Installed Tab Warning Tooltip\" (#12946) at NuGet/Home","RelatedBody":"![image](https://github.com/NuGet/Home/assets/43253759/dee69ee7-0f5e-4d9b-a7bd-005ffa42b67e)\r\n"},{"Id":"32638195316","Type":"IssuesEvent","CreatedAt":"2023-10-17T21:27:09","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12945","RelatedDescription":"Opened issue \"Change Version List \"(Vulnerabilities)\" and \"(Deprecation)\" to an icon.\" (#12945) at NuGet/Home","RelatedBody":"We could update the text (\"Vulnerabilities)\" and \"(Deprecation)\" to an icon with tooltip: e.g. \"Package version has known vulnerabilities.\""},{"Id":"32638150240","Type":"IssuesEvent","CreatedAt":"2023-10-17T21:24:52","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12944","RelatedDescription":"Opened issue \"Update wording for Vulnerabilities Filter\" (#12944) at NuGet/Home","RelatedBody":"Try to don't use the word \"Vulnerable\" and more about \"Known\" or \"Published\" vulnerabilities."},{"Id":"32634244117","Type":"IssuesEvent","CreatedAt":"2023-10-17T18:36:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12939","RelatedDescription":"Closed issue \"NullReferenceException in restore when a project with a misconfigured target framework leads to an unrecoverable state in Visual Studio\" (#12939) at NuGet/Home","RelatedBody":"Impact:\r\n* Once you've introduced an issue in the project file, like for example, a bad target framework, you can't get VS to recover without restarting or reloading the solution.\r\n\r\n\r\nWorkarounds: \r\n* None\r\n\r\nSteps:\r\n\r\n1. Open a project file.\r\n1. Change the tfm to a non-existing one, or a bad one. \r\n1. You can't recover anymore without restarting VS.\r\n\r\nAn example of such a broken project is: \r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net6.0;net7.0;net.8.0</TargetFrameworks>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nObserve an NRE in the output window. \r\n\r\nNow, this is fairly benign for the NuGet operation, but it also means that the EndSolutionRestoreJob event might not get fired https://learn.microsoft.com/en-us/nuget/visual-studio-extensibility/nuget-api-in-visual-studio#ivsnugetprojectupdateevents-interface. This can lead to an \"operation lock\" on the CPS side, which means it's unrecoverable within a single VS session.\r\n"},{"Id":"32631144341","Type":"IssuesEvent","CreatedAt":"2023-10-17T16:32:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12943","RelatedDescription":"Opened issue \"Badly specified framework leads to a non coded error in Visual Studio\" (#12943) at NuGet/Home","RelatedBody":"Related to https://github.com/NuGet/Home/issues/12939.\r\n\r\nTake a project like for example: \r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net6.0;net7.0;net.8.0</TargetFrameworks>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThe steps are: \r\n\r\n1. Open a project file.\r\n2. Change the tfm to a non-existing one, or a bad one. \r\n3. Get a non-coded error. \r\n\r\nThis is currently being treated as a badly constructed spec, so an internal NuGet error, but in reality, it's a misconfigured project. \r\nMisconfigured projects should fail in a coded way, https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu1105."},{"Id":"32622547639","Type":"IssuesEvent","CreatedAt":"2023-10-17T12:05:12","Actor":"colejohnson66","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12942","RelatedDescription":"Opened issue \"Allow insecure HTTP connections to `10.0.0.0/8` IP addresses\" (#12942) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nMy company is running a locally managed Gitea instance off a server rack, and is connected to through the (RFC 1918 reserved) `10.0.0.0/8` IP range. On Gitea, we use their built-in support for being a NuGet package repository. This all works great. However, every time the compiler decides to run a \"NuGet restore\" operation, we get an `NU1803` warning about using HTTP sources:\r\n\r\n> 2&gt;project.csproj: Warning NU1803 : You are running the 'restore' operation with an 'HTTP' source, 'http://10.0.0.31/{}/index.json'. Non-HTTPS access will be removed in a future version. Consider migrating to an 'HTTPS' source.\r\n\r\nI understand the reasoning for this: \"use HTTPS everywhere\", but this is not always feasible. And frankly, it's not even *necessary* for intranets, of which `10.0.0.0/8` is part of.\r\n\r\nUsing HTTPS with IP addresses is not well-supported, and many certificate providers won't issue one for you, except in certain circumstances. For example, LetsEncrypt flat out won't issue certificates for IP addresses. Some providers will give you one for publicly accessible IPs, but `10.0.0.0/8` is obviously not.\r\n\r\nTheoretically, we could use a fake subdomain on our real website (such as `git.{}.com`), and modify everyone's `hosts` file to route to our Gitea instance. This would *possibly* allow our wildcard certificate from the website to be used, but it's clunky as it requires work on *every computer*.\n\n### Desired Behavior\n\nAccesses to HTTP NuGet sources are allowed *with no warning*, but only for certain IP ranges. Namely, `10.0.0.0/8`.\n\n### Additional Context\n\n`192.168.0.0/16` could also be included as it's the \"loopback\" address, and, as such, will not even leave the current computer."},{"Id":"32617583435","Type":"IssuesEvent","CreatedAt":"2023-10-17T09:09:50","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12929","RelatedDescription":"Closed issue \"[Localization][CHS] The string “skip applying binding redirects” on Options window is localized incorrectly\" (#12929) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nDev\\6.8.0.122\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Installation:\r\n1.Create a clean VM with loc OS: Windows-11-Enterprise-22H2-ZH-CN\r\n2.Install VS D17.8\\34205.153 from: [Pipelines - Run rel.d17.8-34205.153 (visualstudio.com)](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdevdiv.visualstudio.com%2FDevDiv%2F_build%2Fresults%3FbuildId%3D8497505%26view%3Dresults&data=05%7C01%7Cv-luzh%40microsoft.com%7C9ee80318e2ae49f7d77208dbc6057aa9%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638321499433963834%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=X2sM0FoniQiuAfH%2FKHWyidhtRMGQMnQQ%2BtJ6s3xxFPU%3D&reserved=0) with loc language pack CHS\r\n\r\n#### Repro Steps:\r\n1.Create a C# Console App (.NET Core 8.0) in VS after setting a loc language CHS through menu “Tools->Options->Environment->International Settings->Language”.\r\n2.Right-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n3.Click the settings (gear) button and observe the string “skip applying binding redirects” on Options->NuGet Package Manager->General dialog.\r\n\r\n#### Expected:\r\nThe string “skip applying binding redirects” should be localized as “跳过应用绑定重定向”.\r\n#### Actual:\r\nThe string “skip applying binding redirects” on Options window is localized incorrectly into “跳过应用和绑定重定向” as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ca3a782c-b87b-4ff7-8cb9-6ca25f1bf236)\r\n#### Notes:\r\nIt only reproes on CHS."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-10-18T03:30:21.0571207Z","RunDurationInMilliseconds":1033}