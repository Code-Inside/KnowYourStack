{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23616047200","Type":"IssuesEvent","CreatedAt":"2022-08-24T15:57:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9205","RelatedDescription":"Opened issue \"[Feature]: Support renaming users and organizations on NuGet.org\" (#9205) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nWe've received several support requests on NuGet.org over the years to change a user account or organization username. This is not currently supported with either a tool available to users or to site admins.\r\n\r\nThe workaround is:\r\n\r\n1. Create a new account with the desired username.\r\n2. Add the new account as an owner on packages the old account owns.\r\n3. Accept ownership in the new account and remove the old account from ownership.\r\n4. Optionally, delete the old account.\r\n\r\nThis is workable in most cases but has some problems:\r\n\r\n- It's very painful if the number of accounts is high.\r\n- Other entities like ID prefix reservations or organization memberships are not transferred\r\n- API keys are reset\r\n- You need a second MSA or AAD account for the transition process\r\n\n\n### The Elevator Pitch\n\nWe should provide a tool that allows either users or site admins to perform this operation easily.\r\n\r\nThere are issues to consider with this feature:\r\n\r\n- Username changes break client trust policies that use username\r\n- The old username should be blocked from usage to prevent impersonation attacks\r\n- Could this be used by spammers or other malicious actors to avoid detection?\r\n- Should we allow as many renames as you want? Or should there be some throttling? If we block old usernames this tool could be used to easily eat up a lot of usernames.\n\n### Additional Context and Details\n\nThere is another related request of changing username casing: https://github.com/NuGet/NuGetGallery/issues/5013. This could perhaps be solved at the same time.\r\n\r\nPast requests for a username change on our issue tracker are here:\r\n- https://github.com/NuGet/NuGetGallery/issues/4673\r\n- https://github.com/NuGet/NuGetGallery/issues/1838\r\n- https://github.com/NuGet/NuGetGallery/issues/319"},{"Id":"23598110858","Type":"PullRequestEvent","CreatedAt":"2022-08-23T21:28:06","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9193","RelatedDescription":"Merged pull request \"Add section link support for READMEs\" (#9193) at NuGet/NuGetGallery","RelatedBody":"Fixes the issue where internal section links in a README do not link to the specified section, but instead take a user back to the top.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8833 "},{"Id":"23594241873","Type":"IssuesEvent","CreatedAt":"2022-08-23T17:45:59","Actor":"dorssel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9204","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Broken link \"Read more\" in warning\" (#9204) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nAfter just uploading the snupkg symbol file for my package I got the (correct) message:\r\n\r\n```\r\nThe symbols for this package have not been indexed yet. They are not available for download from the\r\nNuGet.org symbol server. Symbols will be available for download after both validation and indexing are complete.\r\nSymbols validation and indexing may take up to an hour. [Read more](https://aka.ms/NuGetSymbolsPackageValidation).\r\n```\r\n\r\nHowever, the \"Read more\" link does not work and just loads a Bing search page. This is the link URL: https://aka.ms/NuGetSymbolsPackageValidation\n\n### Repro Steps\n\n1. Upload package (nupkg)\r\n2. Upload symbols (snupkg)\r\n3. Click the \"Read more\" link in the warning\n\n### Expected Behavior\n\nSome site explaining the wait should open, instead of a standard Bing search page.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23590997292","Type":"PullRequestEvent","CreatedAt":"2022-08-23T15:10:32","Actor":"aseemsahoo","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9198","RelatedDescription":"Closed pull request \"Bumped NuGet packages in NuGetGallery.FunctionalTests\" (#9198) at NuGet/NuGetGallery","RelatedBody":"The versions of the NuGet packages in `NuGetGallery.FunctionalTests` solution have been updated."},{"Id":"23574850183","Type":"IssuesEvent","CreatedAt":"2022-08-22T23:05:31","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9196","RelatedDescription":"Closed issue \"[NuGet.org Bug]: totalDownloads > 2.2b can crash clients assuming int32\" (#9196) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nA handful of \"really popular\" packages seem to have surpassed the 2.2b threshold:\r\n* Microsoft.NETCore.Platforms\r\n* Microsoft.Extensions.Primitives\r\n* Microsoft.Extensions.DependencyInjection.Abstractions\r\n\r\nAs a result, clients that process results from the [Search resource](https://docs.microsoft.com/en-us/nuget/api/search-query-service-resource) will be unable to query NuGet.org if they assume that the documented `integer` that `totalDownloads` uses is a 32-bit integer.\r\n\r\nUnfortunately, older versions of ProGet are one such client :(\r\n\r\nThis is causing a lot of ProGet users a lot of headaches / outages, especially since they can't quickly upgrade. It'd be really nice if this could be addressed on the back-end some how. Especially for users who can't easily upgrade.\r\n\r\nFigure this is a long shot, but if it's relatively easy... my suggestion:\r\n* `totalDownloads` is the total downloads, up to 2147483647 (`Int32.MaxValue`)\r\n* `totalDownloadsLong` is the total downloads, up to `UInt64.MaxValue`\r\n\r\nThis would allow existing clients to work indefinitely while allowing the few packages that go past 2.2b to continue showing their stats.\n\n### Repro Steps\n\nPerform a search for any of the popular packages mentioned:\r\n* Microsoft.NETCore.Platforms\r\n* Microsoft.Extensions.Primitives\r\n* Microsoft.Extensions.DependencyInjection.Abstractions\n\n### Expected Behavior\n\n`totalDownloads` returns 2147483647\r\n`totalDownloadsLong` returns the downloads up to  `UInt64.MaxValue`\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23572839231","Type":"IssuesEvent","CreatedAt":"2022-08-22T20:40:45","Actor":"dorssel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9204","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Broken link \"Read more\" in warning\" (#9204) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nAfter just uploading the snupkg symbol file for my package I got the (correct) message:\r\n\r\n```\r\nThe symbols for this package have not been indexed yet. They are not available for download from the\r\nNuGet.org symbol server. Symbols will be available for download after both validation and indexing are complete.\r\nSymbols validation and indexing may take up to an hour. [Read more](https://aka.ms/NuGetSymbolsPackageValidation).\r\n```\r\n\r\nHowever, the \"Read more\" link does not work and just loads a Bing search page. This is the link URL: https://aka.ms/NuGetSymbolsPackageValidation\n\n### Repro Steps\n\n1. Upload package (nupkg)\r\n2. Upload symbols (snupkg)\r\n3. Click the \"Read more\" link in the warning\n\n### Expected Behavior\n\nSome site explaining the wait should open, instead of a standard Bing search page.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23617702109","Type":"IssuesEvent","CreatedAt":"2022-08-24T17:22:19","Actor":"Forgind","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12049","RelatedDescription":"Opened issue \"[Bug]: NugetSDKResolver doesn't give detailed error messages when it fails\" (#12049) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe, NuGet.exe, NuGet SDK\n\n### Product Version\n\nAll\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nTry to use the NugetSdkResolver but with a package it can't load. It will fail but not tell you why, making it hard to diagnose the problem.\n\n### Verbose Logs\n\n_No response_"},{"Id":"23610853040","Type":"IssuesEvent","CreatedAt":"2022-08-24T12:18:20","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12041","RelatedDescription":"Closed issue \"[Bug]: [Cross-platform Sign Verify] Package filed to tampered after running command “pwsh -Command Compress-Archive” on Windows\" (#12041) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.100-rc.2.22417.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Repro Steps & Context\r\n\r\n#### Details about Problem\r\n.NET SDK Version: 7.0.100-rc.2.22417.1\r\n\r\n#### Detailed repro steps\r\n1.\tExecute the [Pre-testing steps](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FManual%20tests%2FTest%20Cases&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344A15B-01B1-4828-AF4C-63FE53687F8A%2FPre-testing%20steps%7C6E4370C3-C593-4B99-ABD8-908D0F9E002B%2F%29).\r\n2.\tWhere <CertificateFilePath> is the file path to the long-lived .cer or .pem file and <VersionedSdkDirectoryPath> is the directory path for the versioned .NET SDK directory (e.g.:  ./dotnet/dotnet/sdk/7.0.100), add trust for the certificate: \r\nOn Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath>` \r\n3.\tWhere <PackageId> is the test package ID and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\nOn Windows: ` .\\dotnet\\dotnet nuget sign .\\<PackageId>\\bin\\Debug\\<PackageId>.1.0.0.nupkg --overwrite --certificate-path <PfxFilePath> --timestamper http://timestamp.digicert.com/ `\r\n4.\tVerify that the previous step succeeded with no warnings or errors. \r\n5.\tWhere <PackageId> is the test package ID, modify the signed package.  \r\nOn Windows: ` pwsh -Command Compress-Archive -Path .\\NuGet.config.template -Update -DestinationPath .\\<PackageId>\\bin\\Debug\\<PackageId>.1.0.0.nupkg `\r\n\r\n#### Expected\r\nPackage succeed to tampered after running command “pwsh -Command Compress-Archive” on Windows\r\n\r\n#### Actual\r\nPackage filed to tampered after running command “pwsh -Command Compress-Archive” on Windows as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/185396010-0397192e-e1f0-4ebe-b5d3-1174bc175e2b.png)\r\n"},{"Id":"23602255612","Type":"IssuesEvent","CreatedAt":"2022-08-24T04:00:47","Actor":"manfred-brands","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12047","RelatedDescription":"Opened issue \"[Bug]: Restore corrupts NuGet cache\" (#12047) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 6.0.400\n\n### Worked before?\n\nPre dotnet 5.0.0?\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWe have seen several instances of \"corrupt\" nuget caches, possibly be caused by different parallel dotnet builds requiring different nuget package versions. \r\n\r\nSay one build requires version 1.0.0 and another 2.0.0 of a nuget package.\r\n1.0.0 was previously restored correctly.\r\nWe then build a project requiring version 2.0.0 requiring a fresh restore of a new nuget package.\r\nThat package is restored correctly, but somehow sometimes one of the 2.0.0 dlls, e.g. lib/net48 makes it way to the 1.0.0 lib/net48 nuget folder.\r\nIf these version are not compatible, we get compile errors the next time compiling a project that requires 1.0.0.\r\nIf they are compatible it might work by stealth and nobody will notice.\r\nWe did not see this previously, but now that we strong name our nuget packages, we see unexpected binding redirects.\r\n\r\nWe use central package management\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-08-25T03:30:26.185311Z","RunDurationInMilliseconds":1589}