{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21906363699","Type":"IssuesEvent","CreatedAt":"2022-05-20T18:41:27","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9115","RelatedDescription":"Closed issue \"Multiple certificates in your server nodes, one untrusted?\" (#9115) at NuGet/NuGetGallery","RelatedBody":"Hello,\r\n\r\nFirst of all, love nuget. \r\nSecond, \r\n\r\nI'm having trouble accessing nuget via Visual Studio (and also via Chrome). \r\nSometimes it works, sometimes it doesn't.\r\nI'm accessing [v3/index.json](https://api.nuget.org/v3/index.json) to be precise.\r\n\r\n\r\nIs it possible you have two (multiple) server nodes, where one is using server certificate which is created by untrusted signer?\r\nWhenever I get response from server, where certificate path is \"*.nuget.org -> Microsoft Azure TLS Issuing CA 05 -> DigiCert Global Root G2\", everything is working just fine, but if I get response from other server, I get \"Untrusted issuer error\".\r\n\r\nSeems like you've replaced certificates on 27.4.2022, maybe you forgot to do it for one of the nodes?\r\n\r\nOr maybe there is problem with my organization's network or local machine ...\r\n\r\nBest regards,\r\nMatt\r\n"},{"Id":"21885254363","Type":"IssuesEvent","CreatedAt":"2022-05-19T17:57:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5102","RelatedDescription":"Closed issue \"Move to a new version of anglicangeek.markdownmailer\" (#5102) at NuGet/NuGetGallery","RelatedBody":"Gallery references the old unlisted version from 2011. There is a newer version (which is not unlisted) from 2013. We should use that one: https://www.nuget.org/packages/MarkdownMailer/"},{"Id":"21871935626","Type":"IssuesEvent","CreatedAt":"2022-05-19T06:32:37","Actor":"AbhitejJohn","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9122","RelatedDescription":"Opened issue \"[Feature]: Mapping type names to nuget packages to improve discoverability\" (#9122) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI find myself trying to determine the right nuget package to pull in for a type of interest. This isn't trivial the moment and is dependent on the fact that the author of the type has relevant documentation to point its consumers to the right nuget package which isn't always straightforward.\n\n### The Elevator Pitch\n\nMost times we start off with an API/interface of interest by looking at docs or searching for other references of it. It ought to be easy for consumers to go from there to a nuget package they could consume in their solutions. At the moment this isn't as simple as searching for the type name in nuget/a private feed and the UX showing up a list of packages that contain the type being searched for. This both improves discoverability and ease of mapping any API to a nuget package as long as it has been indexed. \r\n\r\nIt would be great if this experience was built into both the web client and other desktop clients as well.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"21868182442","Type":"PullRequestEvent","CreatedAt":"2022-05-19T01:44:39","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9120","RelatedDescription":"Merged pull request \"Remove unused field from ConfigurationService\" (#9120) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21859000287","Type":"IssuesEvent","CreatedAt":"2022-05-18T16:17:42","Actor":"philipstratford","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9121","RelatedDescription":"Opened issue \"[Bug]: Unable to connect to NuGet - \"...connection forcibly closed by the remote host\"\" (#9121) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21844835609","Type":"PullRequestEvent","CreatedAt":"2022-05-18T02:56:41","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9120","RelatedDescription":"Opened pull request \"Remove unused field from ConfigurationService\" (#9120) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21842533221","Type":"PullRequestEvent","CreatedAt":"2022-05-17T22:56:00","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9119","RelatedDescription":"Merged pull request \"Convert NuGetGallery.Services to SDK-style project\" (#9119) at NuGet/NuGetGallery","RelatedBody":"Addresses in part https://github.com/NuGet/Engineering/issues/4405\r\n\r\nThis change does the following:\r\n- Converts `NuGetGallery.Services` to an SDK-style project.\r\n- Removes dependencies on Azure Cloud type `RoleEnvironment` - every time we were accessing this type, it threw (or `IsAvailable` returned null), which means that the code paths that remain are in fact that only paths that have been executing for some time.\r\n- Removes irrelevant tests, and refactored tests to no longer use a cloud setting property which is redundant per above.\r\n- Removes `AssemblyInfo.cs` as this is no longer part of the pattern, and as a result have moved the `InternalsVisibleTo` attribute into the `csproj`.\r\n\r\nThis change is the foundation for adding a `net6` target.\r\n\r\nTesting: Passes UTs/CI, have deployed to DEV and successfully run numerous scenarios (package views, authentication, uploads, downloads, statistics). Telemetry shows no exceptions."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21889215128","Type":"IssuesEvent","CreatedAt":"2022-05-19T22:22:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11808","RelatedDescription":"Closed issue \"For C++/CLI PackageReference projects, NuGet should ignore the TargetPlatformMoniker\" (#11808) at NuGet/Home","RelatedBody":"Per a recent discussion, for C++/CLI projects NuGet will ignore the TargetPlatformMoniker when evaluating the effective target framework.\r\n\r\nThis will require a change https://github.com/NuGet/Home/pull/10299\r\n\r\ncc @olgaark @dsplaisted @aortiz-msft @lukka\r\n"},{"Id":"21885864324","Type":"IssuesEvent","CreatedAt":"2022-05-19T18:33:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11811","RelatedDescription":"Closed issue \"[Bug]: Can't build anymore with temporarily failing nuget source\" (#11811) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nMicrosoft (R) Build Engine version 17.2.0+41abc5629 for .NET / mcr.microsoft.com/dotnet/sdk:6.0.300\n\n### Worked before?\n\nMicrosoft (R) Build Engine version 17.1.1+a02f73656 for .NET / mcr.microsoft.com/dotnet/sdk:6.0.202\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nIn a nuget.config file we have the following line:\r\n```\r\n<add key=\"localFileSource\" value=\"%TEMP%\\nugetfeed.local\" />\r\n```\r\nWhich means that we have a local folder-based Nuget feed, in a subfolder of the local TEMP-folder.\r\n\r\nWhile building on a machine, where that folder exists - no problems.\r\n\r\nIf that folder is missing, e.g. when building in a docker-environment, that build fails.\r\n> Line in Dockerfile: `RUN dotnet build \"ST.DRT.Booking.API.csproj\" -c Release -o /app/build`\r\n\r\nBUT if we added msbuild property _RestoreIgnoreFailedSources_ in .csproj:\r\n`<RestoreIgnoreFailedSources>true</RestoreIgnoreFailedSources>`\r\nBuild now worked, but generated alot of warnings\r\n\r\nA lot of warnings was reported as an issue in #9765 , and while fixing that probably something fundamentally broke.\r\n**Now, with latest version, I can not find a way to get build to complete when that folder is missing (in Docker environment) - it always fails!**\r\n\r\nWith _RestoreIgnoreFailedSources_ set to _true_ (which worked before): build now throws:\r\n> /src/ST.DRT.Booking.API/ST.DRT.Booking.API.csproj : error NU1801: The local source '/src/%TEMP%\\nugetfeed.local' doesn't exist.\r\n\r\nWith _RestoreIgnoreFailedSources_ missing or set to _false_ (which used to generate NU1801 errors): build now throws\r\n> /src/ST.DRT.Booking.API/ST.DRT.Booking.API.csproj : error NU1301: The local source '/src/%TEMP%\\nugetfeed.local' doesn't exist.\r\n\r\nAnd note, they are both errors, not warnings, so they can not be suppressed.\r\nI'm guessing that while trying to fix the issue above, something got terribly broken, because with latest version build always fails!\n\n### Verbose Logs\n\n_No response_"},{"Id":"21857950794","Type":"IssuesEvent","CreatedAt":"2022-05-18T15:26:20","Actor":"philipstratford","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11824","RelatedDescription":"Opened issue \"[Bug]: \" (#11824) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 17.2.0, NuGet Package Manager 6.2.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nIn Visual Studio 2022 Community Edition running on Windows Server 2012 R2, when I open the NuGet Package Manager UI, the Browse tab, after a few seconds, display \"Error occurred\" and the output window shows the following:\r\n\r\n````\r\n[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  An error occurred while sending the request.\r\n  The underlying connection was closed: An unexpected error occurred on a send.\r\n  Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n  An existing connection was forcibly closed by the remote host\r\n````\r\n\r\nI get the same response if I try to install packages from the CLI. I follow the instructions in [this post](https://github.com/NuGet/Announcements/issues/60) to test connectivity and after running the test I get this response:\r\n![image](https://user-images.githubusercontent.com/7631595/169079772-6a3eac2f-7054-4417-bb07-c4e6c35f7d8f.png)\r\n\r\nPer that same post, I have verified that TLS1.2 is enabled on this machine and (to the best of my ability), that the following cipher suites are enabled on this machine:\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nI suspect you'll be unable to reproduce this issue as it's presumably specific to something in my configuration. I have been using Visual Studio on this machine for several years without this being an issue, but it suddenly started a few days ago. I have uninstalled and reinstalled Visual Studio, and subsequently run a Repair operation on it, both without success.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":249,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-05-22T03:30:24.0089014Z","RunDurationInMilliseconds":1531}