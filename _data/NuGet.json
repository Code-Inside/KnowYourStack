{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13477520258","Type":"PullRequestEvent","CreatedAt":"2020-09-10T16:52:34","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8202","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.09.09]RI of dev into master for NuGetGallery\" (#8202) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13469621992","Type":"IssuesEvent","CreatedAt":"2020-09-10T06:42:19","Actor":"fluffynuts","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8203","RelatedDescription":"Opened issue \"Feature request: surfacing an issues url via nuspec to nuget.org\" (#8203) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nI'm new to maintaining the Apache log4net project and on the mailing list, I've read that issues are being reported via the email address that surfaces on nuget.org. This means that:\r\n- a person has to read that mail\r\n- that person must marshal that mail\r\n- that person is very likely not a log4net developer\r\n- eventually, that mail should end up becoming an issue that is tracked & resolved somewhere.\r\n\r\nIdeally, I'd like people to raise issues via GitHub so that there's an open dialog and it's easy to track instead of via the email route.\r\n\r\n### Describe the solution you'd like\r\nnpmjs.com makes this easy by surfacing an issues url configured via package.json right on the package page. I'd like to propose the same idea for nuspec files: an optional <issuesUrl> tag which, if present, would be surfaced on nuget.org. Yes, a person can eventually get to the issues page via the project page, but a direct link would probably help people to marshal their issues effectively.\r\n\r\nnpmjs.com also surfaces the issue count here -- that's a \"nice to have\", but a direct link to being able to post an issue would be a real win, imo.\r\n\r\nIn this screen snip, I had the cursor hovered over the issue count so that you can see that it's a link with the url shown at the bottom of the Firefox window:\r\n![image](https://user-images.githubusercontent.com/4669340/92690558-7e8fd280-f341-11ea-97e7-ba755542f45a.png)\r\n"},{"Id":"13466141413","Type":"PullRequestEvent","CreatedAt":"2020-09-09T22:14:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8202","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.09.09]RI of dev into master for NuGetGallery\" (#8202) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13434389360","Type":"IssuesEvent","CreatedAt":"2020-09-07T11:17:42","Actor":"Sergio0694","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8201","RelatedDescription":"Opened issue \"Poor/unrelated search results when not using the exact package name\" (#8201) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nSearching for the [`Microsoft.Toolkit.HighPerformance` package](https://www.nuget.org/packages/Microsoft.Toolkit.HighPerformance/) displays unrelated search results. This happens both on nuget.org and when searching through Visual Studio. It's almost impossible to find that package unless you actually know the exact name.\r\n\r\nNot exactly the same, but possibly related to https://github.com/NuGet/NuGetGallery/issues/8130?\r\n\r\n### To Reproduce\r\nHere's some search results I tried:\r\n\r\n⛔ \"microsoft high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381423-1eafe680-f10b-11ea-9c3d-6e11c3a8ce57.png)), the package is nowhere to be found\r\n⛔ \"microsoft highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381483-3a1af180-f10b-11ea-8c25-4a05e83bd5bb.png)), same as above\r\n⛔ \"Microsoft HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381513-4acb6780-f10b-11ea-9a3a-7192e410befe.png)), same\r\n⛔ \"microsoft toolkit high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381544-5a4ab080-f10b-11ea-8a11-24d6600a4e38.png)), same\r\n⛔ \"microsoft toolkit highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381566-68003600-f10b-11ea-8a7d-f5ec4d5dc4bd.png)), same\r\n\r\n✅ \"microsoft.toolkit.highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381616-7e0df680-f10b-11ea-8e86-b99fc8fb4a61.png)), works\r\n✅ \"Microsoft.Toolkit.HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381692-9a119800-f10b-11ea-820b-113cde208b39.png)), works too\r\n\r\n### Expected behavior\r\nThe `Microsoft.Toolkit.HighPerformance` should be the first result for all these various search queries.\r\n\r\n### Screenshots\r\nAttached a screen next to each tested query above.\r\n\r\n### Additional context\r\nIn case it helps, right now we have the following tags in the package:\r\n\r\n> UWP Toolkit Windows core standard unsafe span memory string array stream buffer extensions helpers parallel performance\r\n\r\nThough I'd expect the search results to display that package as first result even just based on the package name, as all those sample queries are an exact match for the package name, once tokenized with the `.` and converted to lowercase.\r\nI wouldn't expect users to search for the package by the exact name (which is also more verbose to type), especially if they just are not aware the package exists at all, so the way the search results are returned right now doesn't help with discoverability.\r\n\r\nThanks! 😊"},{"Id":"13417444076","Type":"IssuesEvent","CreatedAt":"2020-09-04T21:17:34","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8200","RelatedDescription":"Opened issue \"[V3 monitoring] Avoid using obsolete search clients\" (#8200) at NuGet/NuGetGallery","RelatedBody":"The V3 metadata monitoring job uses the obsoleted [`RawSearchResourceV3`](https://github.com/NuGet/NuGet.Client/blob/e97d556a83750bb4f8017e3640bc699d04832657/src/NuGet.Core/NuGet.Protocol/Resources/RawSearchResourceV3.cs#L17-L18) type to monitor specific search instances (see [this](https://github.com/NuGet/NuGet.Jobs/blob/dd26676619c5901c9924fc9b3286ba263c41a446/src/NuGet.Services.Metadata.Catalog.Monitoring/Validation/Test/ValidationContext.cs#L128-L129)). The client team has no immediate plans to delete this type, however, they will delete the `RawSearchResourceV3` if/when they replace Newtonsoft.Json with System.Text.Json.\r\n\r\nWe use the \"raw\" resource as we need to specify the search URLs to monitor. When we rebuild the search index, we need to monitor search URLs that aren't listed in the service index yet. The non-raw resource does not support specifying the search URLs directly."},{"Id":"13416439822","Type":"PullRequestEvent","CreatedAt":"2020-09-04T19:34:31","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8199","RelatedDescription":"Merged pull request \"Don't show missing version warning for absoluteLatest\" (#8199) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8198"},{"Id":"13415912599","Type":"PullRequestEvent","CreatedAt":"2020-09-04T18:39:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8199","RelatedDescription":"Opened pull request \"Don't show missing version warning for absoluteLatest\" (#8199) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8198"},{"Id":"13415144406","Type":"IssuesEvent","CreatedAt":"2020-09-04T17:21:37","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8198","RelatedDescription":"Opened issue \"/absoluteLatest now shows warning of \"version not found\"\" (#8198) at NuGet/NuGetGallery","RelatedBody":"https://www.nuget.org/packages/Microsoft.Extensions.Logging/absoluteLatest\r\n\r\n![image](https://user-images.githubusercontent.com/94054/92268791-e2288480-ee97-11ea-96e9-4beaf22284a9.png)\r\n\r\nFor \"magic\" version strings like this, we should not show the warning. The warning is meant for a version that actually does not exist, like this:\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Logging/5.0.0-zzz\r\n\r\nThis is a regression from https://github.com/NuGet/NuGetGallery/pull/8155\r\n\r\nThis is also affected:\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Logging/latest/prerelease/preview1\r\n\r\nStrangely this is not affected:\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Logging/latest"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13504936885","Type":"IssuesEvent","CreatedAt":"2020-09-13T20:20:49","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10028","RelatedDescription":"Opened issue \"nuget verify -All and -Signatures option has no differences in implementation\" (#10028) at NuGet/Home","RelatedBody":"As per [doc](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify#nuget-verify--all), nuget.exe has two switches, `--all` to perform all the possible verifications on the package(s) and `-Signatures` option to verify signatures based on values passed for `-CertificateFingerprint` option. However, looking at the [implementation](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Commands/VerifyCommand/VerifyCommandRunner.cs#L38), there is no difference in the behavior and by default all the possible verifications on the package are performed."},{"Id":"13504797207","Type":"IssuesEvent","CreatedAt":"2020-09-13T19:42:03","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10027","RelatedDescription":"Closed issue \"Updating nuget to 5.7.0 on Linux completely breaks nuget\" (#10027) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0\r\n\r\ndotnet.exe --version (if appropriate): 3.1.402\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Ubuntu 20.04.1 LTS\r\n\r\nWorked before? If so, with which NuGet version: My Linux distribution contains a `nuget` package but this is at version `2.8.7`. I was running into a dependency issue trying to install a dependency for a PS module I'm working on, and was directed to upgrade to a newer version of NuGet.exe. After upgrading to `5.7.0` (I can't target a specific version to update to with this version of the client, only the latest), I can no longer use the `nuget` command at all, not even to list usage information, instead getting the errors in the attached log.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFrom Ubuntu 20.04.1\r\n\r\n1. `sudo apt install -y nuget`\r\n\r\n2. `nuget --version # Displays 2.8.7`\r\n\r\n3. `sudo nuget update -self # Currently installs 5.0.7`\r\n\r\n4. `nuget --version` # see errors in the attached log\r\n\r\nAfter completing step 3 any `nuget` command barfs up the same stacktrace.\r\n\r\n### Verbose Logs\r\n\r\nCan't provide verbose logs as I don't think any parameters are even being processed at the point of the error. Output in the log is the same regardless of the verbosity specified.\r\n\r\n[nugeterror.log](https://github.com/NuGet/Home/files/5212821/nugeterror.log)\r\n\r\n\r\n"},{"Id":"13499011100","Type":"IssuesEvent","CreatedAt":"2020-09-12T14:42:40","Actor":"bender-the-greatest","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10027","RelatedDescription":"Opened issue \"Updating nuget to 5.0.7 on Linux completely breaks nuget\" (#10027) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0\r\n\r\ndotnet.exe --version (if appropriate): 3.1.402\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Ubuntu 20.04.1 LTS\r\n\r\nWorked before? If so, with which NuGet version: My Linux distribution contains a `nuget` package but this is at version `2.8.7`. I was running into a dependency issue trying to install a dependency for a PS module I'm working on, and was directed to upgrade to a newer version of NuGet.exe. After upgrading to `5.7.0` (I can't target a specific version to update to with this version of the client, only the latest), I can no longer use the `nuget` command at all, not even to list usage information, instead getting the errors in the attached log.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFrom Ubuntu 20.04.1\r\n\r\n1. `sudo apt install -y nuget`\r\n\r\n2. `nuget --version # Displays 2.8.7`\r\n\r\n3. `sudo nuget update -self # Currently installs 5.0.7`\r\n\r\n4. `nuget --version` # see errors in the attached log\r\n\r\nAfter completing step 3 any `nuget` command barfs up the same stacktrace.\r\n\r\n### Verbose Logs\r\n\r\nCan't provide verbose logs as I don't think any parameters are even being processed at the point of the error. Output in the log is the same regardless of the verbosity specified.\r\n\r\n[nugeterror.log](https://github.com/NuGet/Home/files/5212821/nugeterror.log)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-09-14T05:30:38.4069546Z","RunDurationInMilliseconds":1399}