{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29015768386","Type":"IssuesEvent","CreatedAt":"2023-05-12T00:28:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9497","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Can't install package, but .net version is right.\" (#9497) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nI want to install PowerShell package by Microsoft in VSCode, but I'm getting this weird error: \r\n```\r\nerror: NU1202: Package PowerShell 7.3.4 is not compatible with net7.0 (.NETCoreApp,Version=v7.0). Package PowerShell 7.3.4 supports: net7.0 (.NETCoreApp,Version=v7.0) / any\r\nerror: NU1212: Invalid project-package combination for PowerShell 7.3.4. DotnetToolReference project style can only contain references of the DotnetTool type \r\nerror: Package 'PowerShell' is incompatible with 'all' frameworks in project 'd:/Projects/Eva/Source/Eva.csproj'.\r\n```\r\n\r\n### Repro Steps\r\n\r\nSteps to reproduce:\r\n1. Open Nuget Gallery\r\n2. Search for PowerShell package.\r\n3. Try to install package\r\n\r\n### Expected Behavior\r\n\r\nPackage should install fine lol\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"28989299216","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:09:24","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9423","RelatedDescription":"Closed issue \"[A11y][ScreenReader]More Information link on search results page is ambiguous\" (#9423) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745384\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nCheck whether \"More Information\" link is descriptive or not.\r\n\r\nNotes:\r\nIt should be sufficient for us to augment the More Information link to read \"More Information about {PackageId}\""},{"Id":"28989297178","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:09:13","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9422","RelatedDescription":"Closed issue \"[A11y]Screen reader starts over from beginning when applying filters.\" (#9422) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1749979\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nTab till filter present at left side of screen and apply any filter.\r\nObserve that screen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nActual Result:\r\nScreen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nExpected Result:\r\nScreen reader should not announce all the details from the beginning when we apply filter, it should only announce the status message that \"812 packages returned for json\"\r\n\r\nNotes:\r\nUnfortunately, I believe this is relatively nontrivial to fix on our side. From my understanding of this issue and the feature, this is caused by the fact that hitting applying appear to redo the search with filters enabled, causing a page refresh. When the page refreshes, context on keyboard nav etc is lost. In theory, it should be possible to pass context to the next page, but I am unsure that this the right fix long term."},{"Id":"28989295575","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:09:05","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9418","RelatedDescription":"Closed issue \"[A11y][ScreenReader]Package Manager tab on Package details reads as both selected and expanded\" (#9418) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744434\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen Reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"PackageReference\" control and hit enter.\r\nObserve whether screen reader should announce only one state as 'selected' or not.\r\n\r\nActual Result:\r\nScreen reader is announcing two states as 'selected and expanded' for \"package reference\" tab item.\r\n\r\nExpected Result:\r\nScreen reader should announce only one states as 'selected' for \"package reference\" tab item.\r\n\r\nNotes:\r\nThese controls appears to have aria-expanded defined on them for some reason. I am unsure why this is the case, but it seems like removing it will address the issue here. However, I don't know what other issues it might introduce."},{"Id":"28989292924","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:08:52","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9421","RelatedDescription":"Closed issue \"[A11y][ScreenReader]Compatible Framework tab does not convery compatible vs computed additional frameworks\" (#9421) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1746058\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: https://dev.nugettest.org/\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen Reader: JAWS.\r\n\r\nRepro Steps:\r\nHit the URL: https://dev.nugettest.org/\r\n\"NuGet\" screen will open.\r\nTab to search button and press enter.\r\n\"Packages\" screen will open then tab to any package like \"Newtonsoft.Json \" and select it by pressing enter key.\r\n\"Newtonsoft.Json \" package screen will open.\r\nTab to \"Frameworks\" tab and press enter.\r\nObserve whether screen reader is not announcing as a Compatible target framework(s) for dark blue color version.\r\n\r\nActual Result:\r\nScreen reader is not announcing category of framework for version which are differentiated with color. For ex. Compatible target framework(s) for dark blue color version.\r\n\r\nExpected Result:\r\nScreen reader should announce category of framework for version which are differentiated with color.\r\n\r\nNotes:\r\nThe screen reader on this is already fairly verbose. I am unsure how we would do this without making even more verbose. It may be ok to increase the verbosity, but it doesn't feel like a good solution to me."},{"Id":"28961950520","Type":"PullRequestEvent","CreatedAt":"2023-05-10T03:50:38","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9495","RelatedDescription":"Merged pull request \"[ReleasePrep][2023.05.08]RI of dev into main\" (#9495) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29014165267","Type":"IssuesEvent","CreatedAt":"2023-05-11T22:12:30","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12584","RelatedDescription":"Opened issue \"Warn when ProjectReference conditions may lead to missing assets (`DllNotFoundException`: `The specified module could not be found.`)\" (#12584) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nIt's a known problem that `packages.config` does not support transitivity for runtime assembly references. There is nothing in VS to point out that such a `ProjectReference` is in effect.\n\n### Desired Behavior\n\nConsider a UX that can highlight this scenario to customers before they get into trouble. \r\nSome ideas: \r\n1. a warning stating that a project reference uses PR, while your consuming project uses PC, and this can lead to unexpected behavior. \r\n2. Point to a new docs page with an example of a package where this would occur, and how to workaround it via `dotnet publish`, or similar. Also, can link to the PackageReference migrator instructions in case that's an option for the customer.\n\n### Additional Context\n\nAn example package and exception is below. These .SNI assemblies are runtime dependencies, so t\r\nThe SNI has a targets file that is manually copying them to the output directory.\r\n\r\n> System.DllNotFoundException: 'Unable to load DLL 'Microsoft.Data.SqlClient.SNI.x64.dll': The specified module could not be \r\nfound. (Exception from HRESULT: 0x8007007E)'\r\n\r\nExample ticket: https://developercommunity.visualstudio.com/t/DLL-not-found-for-NuGet-package/10338932"},{"Id":"29010812444","Type":"IssuesEvent","CreatedAt":"2023-05-11T19:10:47","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12583","RelatedDescription":"Opened issue \"Support viewing README files in Visual Studio\" (#12583) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nLast December, it was announced that you can edit and render markdown files now in Visual Studio. \r\n\r\nhttps://devblogs.microsoft.com/visualstudio/write-markdown-without-leaving-visual-studio/\r\n\r\nIt is a regular ask from the developer community to be able to read READMEs of packages while they are inside the PM UI whether browsing or getting started with a NuGet package. \r\n\r\nDevelopers should see a README in a tab similar to the [NuGet.org re-designed tabs](https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/):\r\n\r\n![image](https://github.com/NuGet/Home/assets/1288848/e9f08ccb-2f34-4b25-9d8f-a27e439cc304)\r\n\r\nInside of Visual Studio:\r\n\r\n![image](https://github.com/NuGet/Home/assets/1288848/bb080e1d-5a8f-4be7-b116-660fc193a2ff)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29009676589","Type":"IssuesEvent","CreatedAt":"2023-05-11T18:15:44","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12582","RelatedDescription":"Closed issue \"Transitive packages don’t show in the “Installed” tab until setting the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable \" (#12582) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.7.0.38\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:   \r\n1. Create a .NET Core Console App project via VS.   \r\n2. Right-click the project in Solution Explorer and select ‘Manage NuGet Packages…’ menu item to open PM UI.   \r\n3. Click “Browse” tab, search a package (e.g. “Microsoft.EntityFrameworkCore”) that has dependencies, select a package version “6.0.4” in the \"Version\" drop-down list in the right panel and click the “Install” button on the right.   \r\n4. Click “OK” button in the “Preview Changes” dialog and click “I Accept” button in the “License Acceptance” dialog.   \r\n5. Go to “Installed” tab.  \r\n\r\n#### Expected:   \r\nTransitive packages should show in the “Installed” tab. “Transitive packages” label is expanded by default and all the transitive packages showed in the “Transitive packages” list (under the “Top-level packages” list).  \r\n\r\n#### Actual:   \r\nTransitive packages don’t show in the “Installed” tab as below screenshot.  \r\n![image](https://github.com/NuGet/Home/assets/84695155/716abd8c-870a-4ddb-aa28-77cb5f76b186)\r\n#### Notes:  \r\n\r\n1. The repro rate is 80%.   \r\n2. The issue will not repro after setting the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable to 1 and reopen the same solution. \r\n3. it also repro on VS Main\\33710.149 + NuGet Client Dev\\6.7.0.36. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"29006500874","Type":"IssuesEvent","CreatedAt":"2023-05-11T15:56:17","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12534","RelatedDescription":"Closed issue \"NuGet client proxy settings are not behaving as expected\" (#12534) at NuGet/Home","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nDear NuGet.org team,\r\nWe have a problem regarding the use of proxies when using nuget in the Teamcity CI system. If you add the proxy server data to the nuget.config configuration file via the terminal or command line, downloading dependencies will come through the proxy server. But using the same configuration file inside the Teamcity CI system downloading dependencies does not happen through a proxy but directly. Used configuration is below:\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n  <config>\r\n    <add key=\"http_proxy\" value=\"<http://ip_address_of_proxy:port_number>\" />\r\n    <add key=\"https_proxy\" value=\"<http://ip_address_of_proxy:port_number>\" />\r\n  </config>\r\n</configuration>\n\n### Repro Steps\n\n1. Set up proxy server on TeamCity ci agent \r\nteamcity.http.proxyHost=ip_address_of_proxy\r\nteamcity.http.proxyPort=port_number\r\n\r\nteamcity.https.proxyHost=ip_address_of_proxy\r\nteamcity.https.proxyPort=port_number\r\n\r\n\r\nteamcity.http.nonProxyHosts=localhost|<teamcity_server_ip>\r\nteamcity.https.nonProxyHosts=localhost|<teamcity_server_ip>\r\n\r\n2. Set up proxy server for nuget \r\n*) > nuget.exe config -set http_proxy=http://ip_address_of_proxy:port_number\r\n*) > nuget.exe config -set https_proxy=http://ip_address_of_proxy:port_number\r\n\r\n3. Run Build \n\n### Expected Behavior\n\nDownloading all the project dependencies should go through proxy server.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29001764448","Type":"IssuesEvent","CreatedAt":"2023-05-11T13:01:05","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12490","RelatedDescription":"Closed issue \"[Bug Bash][ARM64] The left border of the searched result list doesn’t left-align with the left border of the search box on VS ARM64 \" (#12490) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.6.0.52\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:  \r\n1. Create a new C# console App (.NET Core) project on VS ARM 64. \r\n2. Open the PM UI of the project and go to the “Browse” tab. \r\n3. Search “AutoMapper” package in Browse tab. (The string has been searched before.) \r\n4. Click drop-down and observe the position of the left border of the searched result list. \r\n#### Expected:  \r\nThe left border of the searched result list should be left-align with the left border of the search box.  \r\n#### Actual:  \r\nThe left border of the searched result list doesn’t left-align with the left border of the search box as below screenshot. \r\n![image](https://user-images.githubusercontent.com/40230425/225850718-e26db2c3-cbfe-40e7-af64-0f3324b4bf6a.png)\r\n#### Note: \r\n1.The issue doesn’t repro on VS x64. \r\n2.It’s not a regression since it reproduced on D17.3\\32611.02. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"28995630828","Type":"IssuesEvent","CreatedAt":"2023-05-11T09:05:08","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12582","RelatedDescription":"Opened issue \"Transitive packages don’t show in the “Installed” tab until setting the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable \" (#12582) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.7.0.38\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:   \r\n1. Create a .NET Core Console App project via VS.   \r\n2. Right-click the project in Solution Explorer and select ‘Manage NuGet Packages…’ menu item to open PM UI.   \r\n3. Click “Browse” tab, search a package (e.g. “Microsoft.EntityFrameworkCore”) that has dependencies, select a package version “6.0.4” in the \"Version\" drop-down list in the right panel and click the “Install” button on the right.   \r\n4. Click “OK” button in the “Preview Changes” dialog and click “I Accept” button in the “License Acceptance” dialog.   \r\n5. Go to “Installed” tab.  \r\n\r\n#### Expected:   \r\nTransitive packages should show in the “Installed” tab. “Transitive packages” label is expanded by default and all the transitive packages showed in the “Transitive packages” list (under the “Top-level packages” list).  \r\n\r\n#### Actual:   \r\nTransitive packages don’t show in the “Installed” tab as below screenshot.  \r\n![image](https://github.com/NuGet/Home/assets/84695155/716abd8c-870a-4ddb-aa28-77cb5f76b186)\r\n####  Note:  \r\n\r\n1. The repro rate is 80%.   \r\n2. The issue will not repro after setting the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable to 1 and reopen the same solution. \r\n3. it also repro on VS Main\\33710.149 + NuGet Client Dev\\6.7.0.36. \n\n### Verbose Logs\n\n_No response_"},{"Id":"28991407317","Type":"IssuesEvent","CreatedAt":"2023-05-11T06:02:13","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12514","RelatedDescription":"Closed issue \"NuGet should use HttpClientHandler.PreAuthentication to reduce HTTP 401's\" (#12514) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### Current Behavior\n\nRelated to https://github.com/NuGet/Home/issues/11600, NuGet is currently making an unauthenticated HTTP request to every URL. For private feeds, the server then responds with HTTP 401, and then NuGet (technically HttpClientHandler does it automatically, so it's completely hidden from NuGet) resends with credentials.\r\n\r\nThis means that at least 50% of all HTTP requests NuGet sends to a server results in HTTP 401 responses.\r\n\r\nNote that PreAuthenticate has a limitation/design choice where a \"base\" URL needs to be authenticated first, and then any URL that matches the rough equivilent of `url.StartsWith(baseUrl.SubString(0, baseUrl.IndexOfLast(\"/\"))` will re-use those creds.\r\n\r\nTherefore, enabling PreAuthenticate without any other changes means that it will only work when:\r\n1. NuGet does not use a cached service index\r\n2. The server makes all resources (listed in the service index) start with the same URL that the service index itself is in.\r\n\r\nIn particular, this means that Azure Artifacts' current implementation where customers write a URL with \"friendly\"/alias names in their nuget.config, but then the service index changes parts of the URL to canonical GUIDs, will not meet HttpClientHandler's PreAuthenticate design.\r\n\r\nHowever, other server implementations already meet the second requirement above, so PreAuthenticate, without any other changes to NuGet, will immediately benefit those servers (when NuGet doesn't use a cached service index, which has a different tracking issue).\n\n### Desired Behavior\n\nDramatically reduce the number of HTTP 401's the server has to send back to the client.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-05-12T03:30:23.7378411Z","RunDurationInMilliseconds":1320}