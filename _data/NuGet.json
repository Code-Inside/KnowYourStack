{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27202615079","Type":"IssuesEvent","CreatedAt":"2023-02-20T10:45:54","Actor":"michaelmairegger","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9395","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Filter for net7.0 does not include sub-TFM\" (#9395) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWhen filtering for net7.0 it should include all other TFM like -windows -android, ... too\n\n### Repro Steps\n\n- Search for e.g. Microsoft.Xaml.Behaviors.Wpf\r\n- Set filter to net5.0\r\n- Click apply\r\n- No Results\r\n\r\nNote: Setting the filter to .NET works\n\n### Expected Behavior\n\nPackages that match e.g. net7.0-windows should appear if filtering for net7.0.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27175203758","Type":"PullRequestEvent","CreatedAt":"2023-02-18T00:22:10","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9394","RelatedDescription":"Opened pull request \"Putting back missing word\" (#9394) at NuGet/NuGetGallery","RelatedBody":"A [change](https://github.com/NuGet/NuGetGallery/commit/2e49db62585e14eb2fe65164f88e7f26109077cb) dropped the word \"hosted\" from the upload package page a while ago. Adding it back."},{"Id":"27175101182","Type":"IssuesEvent","CreatedAt":"2023-02-18T00:10:49","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9393","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Large package uploads through the web site fail silently\" (#9393) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nWhen large package is uploaded through the [upload page](https://www.nuget.org/packages/manage/upload) it silently fails. There are errors in JS console in browser dev tools, but the page itself gives no feedback.\n\n### Repro Steps\n\n1. Author a package 300 MB in size\r\n2. Go to https://www.nuget.org/packages/manage/upload\r\n3. Try uploading it\n\n### Expected Behavior\n\nAn error is shown indicating that the package is too large.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/102933/219819504-61f9e0bc-345a-484f-8e13-d6dfa8b7707d.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27164271896","Type":"IssuesEvent","CreatedAt":"2023-02-17T14:18:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9344","RelatedDescription":"Closed issue \"BSD-3-Clause with uncommon placeholders?\" (#9344) at NuGet/NuGetGallery","RelatedBody":"### Discussed in https://github.com/NuGet/Home/discussions/12349\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **wismann** January  7, 2023</sup>\r\nI just checked the NuGet provided BSD-3-Clause license against the version from spdx.org\r\n\r\nhttps://licenses.nuget.org/BSD-3-Clause\r\nhttps://spdx.org/licenses/BSD-3-Clause.html\r\n\r\nNotable differences:\r\n1.\r\nSPDX:\r\n> 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote [...]\r\n\r\nNuGet:\r\n> 3. _____ be used to endorse or promote [...]\r\n\r\nI think the generic wording is common and sufficient. There is no way on earth to fill this blank implicitly.\r\n\r\n2.\r\nSPDX:\r\n> THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" [...]\r\n> IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE [...]\r\n\r\nNuGet:\r\n> THIS SOFTWARE IS PROVIDED BY _____ \"AS IS\" [...]\r\n> IN NO EVENT SHALL _____ BE LIABLE [...]\r\n\r\nI think the generic wording is common and sufficient. No need for placeholders.\r\n\r\n3.\r\nSPDX:\r\n> [...] AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES [...] \r\n\r\nNuGet:\r\n> [...] AND ANY _____ OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES [...]\r\n\r\nThis placeholder does not make any sense to me.\r\n\r\nQuestions:\r\n1. What is the source for the NuGet version of this license?\r\n2. Is it necessary and/or advised to differ with the license text from most other sources?</div>"},{"Id":"27147666484","Type":"IssuesEvent","CreatedAt":"2023-02-16T21:25:36","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9392","RelatedDescription":"Opened issue \"[Search-by-TFM] Users can filter by TFMs not shown in the filtering UI: Make this more obvious/accessible?\" (#9392) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nWith Search-by-TFM on NuGet.org, we chose to display a limited list of supported TFMs in the filtering UI, but it is still possible for users to filter by other TFMs not shown in the UI by editing the URL query parameters directly. \r\n\r\nFor example, someone could search for a package with a `xamarinmac` (Xamarin.Mac) asset target framework by including this TFM in the `tfms` query parameter in the URL:\r\n`https://www.nuget.org/packages?q=&tfms=xamarinmac&prerel=true&sortby=relevance`\r\n\r\n### Solution\r\n* Should we make it clearer to users that it is possible to do this, as it might help a lot more developers take advantage of TFM filtering too?\r\n    - The information tooltip next to the Frameworks filters can point to our [NuGet.org search docs](https://learn.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages), which we can update to explain all this functionality.\r\n* Should we make it easier to filter by other TFMs?\r\n    - A new TFMs text input field in the filters panel?\r\n    - Search syntax, something like `tfm:xamarinmac` (See https://learn.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages#search-syntax)?"},{"Id":"27091746351","Type":"IssuesEvent","CreatedAt":"2023-02-14T21:44:55","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3098","RelatedDescription":"Closed issue \"Package discovery: Show and search by TFM/package-compatibility \" (#3098) at NuGet/NuGetGallery","RelatedBody":"A feature request: I'd like to browse packages compatible with [.NET Core](https://dotnet.github.io/)\r\n\r\nMost the packages on https://www.nuget.org/packages seem not to be, so it would be useful to shortlist those that are\r\n\r\n```\r\n>dotnet restore\r\nPackage Microsoft.Net.Http 2.2.29 is not compatible with netcoreapp1.0 (.NETCoreApp,Version=v1.0). \r\nOne or more packages are incompatible with .NETCoreApp,Version=v1.0.\r\n```\r\n\r\nI want to search nuget.org by target framework.\r\n<!-- Do not remove this section. Triage will add new issues identified as part of this epic into this section. The v-team is responsible for triaging them into their business goals. If they do not fit into a business goals, please remove from this section. -->\r\n# Recently Triaged Issues\r\n\r\nAll issues in this section should be triaged by the v-team into one of their business objectives or features.\r\n\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8863\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8864\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8865\r\n"},{"Id":"27087455264","Type":"PullRequestEvent","CreatedAt":"2023-02-14T18:04:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Merged pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27065220057","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:33:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9388","RelatedDescription":"Merged pull request \"Added null checks to mitigate exceptions on the '/profiles' pages\" (#9388) at NuGet/NuGetGallery","RelatedBody":"The `/profiles` pages use the same js script as the search page, but do not have a `searchForm` element on the page, so we were getting exceptions from the javascript on the `/profiles` pages when we tried to reference the form elements.\r\n\r\nI've now added checks in the script so that we do not reference anything that doesn't exist on the page.\r\n\r\nI also removed a helper method that was not being used by the search page anymore (`AddSortByOption()`)."},{"Id":"27065082044","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:22:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Opened pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27064653171","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:55:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9390","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] 'Template' package type filters combined with Frameworks filters should warn?\" (#9390) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nTemplates do not have a Frameworks tab on the Package Details page. Should we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters? The behaviors across the frameworks tab and frameworks filters should be consistent.\r\n\r\nQ: Are target frameworks expected with template packages? Most template packages in our ecosystem do not have target frameworks, but a handful do.\r\n\r\n### Solution\r\nShould we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters?"},{"Id":"27064452514","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:42:15","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9389","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] Tags sometimes spill over into the next line when there are multiple of them\" (#9389) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIn the search results, when there are very few tags, they appear on the same line as the downloads, last updated date and version, but spill over into the next line when there are multiple tags. This behavior should be consistent. \r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it. \r\n\r\n### Solution\r\nPossible solution: Always show tags on the next line so that it is consistent."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27215373103","Type":"IssuesEvent","CreatedAt":"2023-02-20T21:05:10","Actor":"amastrobera","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12446","RelatedDescription":"Opened issue \"cannot add readme in the .nuspec\" (#12446) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet Version: 5.6.0.6591\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n- Create a project (C# Library for .Net Framework 4.8).\r\n- create a nuspec file, and add the `readme` tag [as described ](https://learn.microsoft.com/en-us/nuget/reference/nuspec)\r\n- type `nuget pack`\r\n\r\n\r\nI described everything in [this issue](https://github.com/amastrobera/geom_sharp/issues/23)\n\n### Verbose Logs\n\n```shell\nAttempting to build package from 'GeomSharp.nuspec'.\r\n\r\nThe element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'readme' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'references, copyright, frameworkReferences, repository, requireLicenseAcceptance, licenseUrl, frameworkAssemblies, iconUrl, packageTypes, title, developmentDependency, description, summary, serviceable, tags, dependencies, contentFiles, language, releaseNotes' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'readme' element.\n```\n"},{"Id":"27203750530","Type":"IssuesEvent","CreatedAt":"2023-02-20T11:32:45","Actor":"sonnemaf","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12445","RelatedDescription":"Opened issue \"Setting EnablePackageVersionOverride to false does not cause an error when VersionOverride is used\" (#12445) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS2022 Preview\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI have set the `EnablePackageVersionOverride` property to `false`. It doesn't generate an error on the `VersionOverride` \r\n\r\nSee this image below. \r\n![image](https://user-images.githubusercontent.com/9335559/220094085-bdb38892-d6c5-4ffb-8516-308c7557cfcb.png)\r\n\r\nThe [docs](https://devblogs.microsoft.com/nuget/introducing-central-package-management/#overriding-package-versions) mention that an error should be generated. This is not the case\r\n![image](https://user-images.githubusercontent.com/9335559/220094670-f4316af0-638c-4845-8f75-c61e1f455776.png)\r\n\r\n# Directory.Packages.props\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <EnablePackageVersionOverride>false</EnablePackageVersionOverride>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"13.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n# ConsoleApp1.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>net6.0</TargetFramework>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<Nullable>enable</Nullable>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Newtonsoft.Json\" VersionOverride=\"13.0.2\" />\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"27199406839","Type":"IssuesEvent","CreatedAt":"2023-02-20T08:38:07","Actor":"Bosch-Eli-Black","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12444","RelatedDescription":"Closed issue \"Automatically use Windows proxy settings\" (#12444) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe\r\n\r\n### Current Behavior\r\n\r\nWhen invoked from the command line via the `dotnet` command, NuGet appears to not respect the Windows system proxy settings.\r\n\r\nFor example, running `dotnet publish` from the command line automatically restores a project's NuGet packages, and the restores happen without respecting the Windows system proxy settings, resulting in errors like `error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.`\r\n\r\n### Desired Behavior\r\n\r\nI'd like to request that NuGet use the system proxy settings by default.\r\n\r\n### Additional Context\r\n\r\n_No response_"},{"Id":"27198008920","Type":"IssuesEvent","CreatedAt":"2023-02-20T07:27:43","Actor":"Bosch-Eli-Black","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12444","RelatedDescription":"Opened issue \"Automatically use Windows proxy settings\" (#12444) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\nWhen invoked from the command line via the `dotnet` command, NuGet appears to not respect the Windows system proxy settings.\r\n\r\nFor example, running `dotnet publish` from the command line automatically restores each projects' NuGet packages, and the restores happen without respecting the Windows system proxy settings, resulting in errors like `error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.`\n\n### Desired Behavior\n\nIt'd be sweet if NuGet used the system proxy settings by default, so that we don't need to manually configure proxy settings 🙂\n\n### Additional Context\n\n_No response_"},{"Id":"27183664330","Type":"IssuesEvent","CreatedAt":"2023-02-18T23:52:35","Actor":"dansiegel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12443","RelatedDescription":"Opened issue \"Central Package Management causes build failure without PackageReference\" (#12443) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet SDK\n\n### Product Version\n\n7.0.200-preview.22628.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWhen using Central Package Management I may have a number of projects within a given solution. Some of those projects may contain Package References which are required because they are core projects without Framework references. When using .NET MAUI the SDK provides Implicitly Defined Package References. This fails when a PackageVersion exists within the Directory.Packages.props even though the Maui project does not include a PackageReference to the package.\r\n\r\nhttps://github.com/dotnet/maui/blob/5b6663d61c922f6c971542e8f8751303a53ed364/src/Workload/Microsoft.Maui.Sdk/Sdk/BundledVersions.in.targets#L63-L81\r\n\r\n```xml\r\n<!-- Directory.Packages.Props -->\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"SomeVersion\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n<!-- Some Services Project -->\r\n<Project Sdk=\"Microsoft.Net.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n<!-- Project Targeting Maui-->\r\n<Project Sdk=\"Microsoft.Net.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net7.0-ios;net7.0-android;net7.0-etc</TargetFrameworks>\r\n    <UseMaui>true</UseMaui>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nIn the scenario shown here... the Services Project would work just fine as expected, however the Maui project wouldn't due to the Implicitly Defined References.\n\n### Verbose Logs\n\n_No response_"},{"Id":"27182051807","Type":"IssuesEvent","CreatedAt":"2023-02-18T19:03:31","Actor":"stgerbb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12442","RelatedDescription":"Opened issue \"dotnet restore nor nuget restore CLI command evalute the Directory.Build.props file\" (#12442) at NuGet/Home","RelatedBody":"### Describe the bug\r\nWhen running the `dotnet restore` or `nuget restore` CLI command then defined properties in the _Directory.Build.props_ file are not evaluated. Only the csproj is taken into account. This causes properties to be duplicated from the _Directory.Build.props_ file to the csproj.\r\n\r\n### To Reproduce\r\n1. Take a .nupkg file and name it the following: _Debug.Test.nupkg_.\r\n2. Place it in a local feed on the PC where Visual Studio can find it.\r\n3. Create a new C# project (i.e. a class library)\r\n4. Create a _Directory.Build.props_ file and place it next to the csproj file.\r\n5. Add the following to the _Directory.Build.props_ file:\r\n```\r\n<PropertyGroup Condition=\"$(Configuration.StartsWith('Debug'))\">\r\n\t<PureConfiguration>Debug</PureConfiguration>\r\n</PropertyGroup>\r\n```\r\n6. Reference the Debug.Test NuGet in the previous created project the following way: \r\n`<PackageReference Include=\"$(PureConfiguration).Test\" Version=\"<TheVersionOfThePackage>\" />`\r\n7. Clear nuget cache\r\n8. Run either `nuget restore NameOfTheProject.csproj` or `dotnet restore NameOfTheProject.csproj` from the command line (i.e. cmd.exe)\r\n\r\n**Expected**: PackageReference should get resolved as _Debug.Test_, because the `$(PureConfiguration)` property is defined in the _Directory.Build.props file_.\r\n\r\n**Result**: PackageReference is resolved as _.Test_, because the `$(PureConfiguration)` property was not found. Causes `dotnet restore` or `nuget restore` to fail to resolve the project.\r\n\r\n**Workaround**: Duplicate the property from the _Directory.Build.props_ file into the csproj.\r\n\r\n### Further technical details\r\ndotnet --info\r\n```\r\n.NET SDK:\r\n Version:   7.0.102\r\n Commit:    4bbdd14480\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.102\\\r\n\r\nHost:\r\n  Version:      7.0.2\r\n  Architecture: x64\r\n  Commit:       d037e070eb\r\n\r\n.NET SDKs installed:\r\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.401 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.403 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.406 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.408 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.102 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  arm64 [C:\\Program Files\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\arm64\\InstallLocation]\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n\r\nRunning Visual Studio 2022 Version 17.4.4\r\nRunning nuget.exe v6.3.1\r\n```"},{"Id":"27175936092","Type":"IssuesEvent","CreatedAt":"2023-02-18T01:57:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12441","RelatedDescription":"Opened issue \"NuGet.Tests.Apex.NetCoreProjectTestCase.UninstallPackageFromNetCoreProjectFromUI and NuGet.Tests.Apex.NetCoreProjectTestCase.UpdatePackageToNetCoreProjectFromUI are flaky\" (#12441) at NuGet/Home","RelatedBody":""},{"Id":"27175896483","Type":"IssuesEvent","CreatedAt":"2023-02-18T01:51:18","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12356","RelatedDescription":"Closed issue \"IVsPackageInstaller2 interface install/update/downgrade/uninstall actions doesn't support batch operation\" (#12356) at NuGet/Home","RelatedBody":"Currently if I want to install/uninstall multiple packages via [IVsPackageInstaller2](https://github.com/NuGet/NuGet.Client/blob/ba3fa10c1ae0fc4b57f4fa01c8fda0abf47f865a/src/NuGet.Clients/NuGet.VisualStudio/Extensibility/IVsPackageInstaller2.cs) from another VS component then we have to sequentially call install/update/downgrade/uninstall operations 1 by 1 for each package inside each project.\r\nIn case we case `n` project and `m` packages in each then it takes `n*m` subsequent calls which is very slow, waste a lot of time with context switching. Also, some cases it simply fails due to NU1605 error because all involving packages need to be updated same time.\r\n\r\nPMUI can already do install/update/downgrade/uninstall actions in batch, ideally, we need something like following:\r\n\r\n```\r\npublic interface IVsPackageInstaller3\r\n{\r\n    // Project level packageIds\r\n    void InstallPackages(List<string> sources, Project project, List<PackageIdentity> packageIds, bool ignoreDependencies);\r\n   // Project level version ranges\r\n    void InstallPackages(List<string> sources, Project project, List<PackageDependency> packageIds, bool ignoreDependencies);\r\n   // Solution level packageIds\r\n    void InstallPackages(List<string> sources, Solution solution,  List<(Project project, List<PackageIdentity>packageIds, bool removeDependencies>));\r\n   // Solution level version ranges\r\n    void InstallPackages(List<string> sources, Solution solution,  List<(Project project, List<PackageDependency>packageIds, bool removeDependencies>));\r\n}\r\n```\r\n\r\n```\r\npublic interface IVsPackageUninstaller\r\n{\r\n    void UninstallPackages(Project project, List<string>packageIds, bool removeDependencies);\r\n    void UninstallPackages(Solution solution, List<(Project project, List<string>packageIds, bool removeDependencies>));\r\n}\r\n```\r\n\r\nOr more generic [ProjectActions](https://github.com/NuGet/NuGet.Client/blob/4a6b7bbad3fb31eb6d8c5a4242649419dedd0f29/src/NuGet.Clients/NuGet.VisualStudio.Internal.Contracts/ProjectAction.cs) would be great like PMUI\r\n```\r\npublic interface IVsPackageActions\r\n{\r\n    // Project level actions\r\n    void ExecuteActions(List<string> sources, Project project, List<ProjectAction> actions);\r\n   // Solution level actions\r\n    void InstallPackages(List<string> sources, Solution solution,  List<ProjectAction> actions);\r\n}\r\n```\r\n\r\nPMUI execution flow: [Start](https://github.com/NuGet/NuGet.Client/blob/4a6b7bbad3fb31eb6d8c5a4242649419dedd0f29/src/NuGet.Clients/NuGet.PackageManagement.UI/Actions/UIActionEngine.cs#L461) On UI -> [Actual Execution](https://github.com/NuGet/NuGet.Client/blob/4a6b7bbad3fb31eb6d8c5a4242649419dedd0f29/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/Services/NuGetProjectManagerService.cs#L353) ->[Project level batch install/update/uninstall action executions](https://github.com/NuGet/NuGet.Client/blob/4a6b7bbad3fb31eb6d8c5a4242649419dedd0f29/src/NuGet.Core/NuGet.PackageManagement/NuGetPackageManager.cs#L2421).\r\n\r\nRelated issue: https://github.com/NuGet/Home/issues/12355"},{"Id":"27169064885","Type":"IssuesEvent","CreatedAt":"2023-02-17T17:40:17","Actor":"NikolaMilosavljevic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12440","RelatedDescription":"Opened issue \"NuGet.Client does not support localization on Linux machines\" (#12440) at NuGet/Home","RelatedBody":"Localization is not source-build compliant - it can not be executed on Linux machines. Linux distro owners has expressed desire to have localized resources of all binaries that ship with .NET SDK. Source-build runs on distro-specific machines and builds .NET SDK completely from sources - it does not consume any prebuilt binaries.\r\n\r\nNuGet.Client repo uses NuGet.Build.Localization submodule for localization. That submodule provides tooling that is Windows and .NET FX specific."},{"Id":"27149145461","Type":"IssuesEvent","CreatedAt":"2023-02-16T22:53:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12227","RelatedDescription":"Closed issue \"dotnet restore fails in Arm-based container on an x64 host machine\" (#12227) at NuGet/Home","RelatedBody":"**Copied from post by @zimbres at https://github.com/dotnet/sdk/issues/28971:**\r\n\r\nWhen try to build arm64 containers using .Net7 results in a error on restore step.\r\n\r\nJust create a new web api for example with .Net7 as target framework and try to build it with buildx. For amd64 build works just fine.\r\n\r\n```\r\nPS C:\\Users\\Marcio\\OneDrive\\Documents\\VSCode\\asp.net\\EspUpdater> docker buildx build --platform linux/arm64 -t zimbres/espupdater -f .\\src\\EspUpdater\\Dockerfile --push . --no-cache\r\n[+] Building 66.2s (12/17)\r\n => [internal] load .dockerignore                                                                                                                                                                                          0.1s\r\n => => transferring context: 382B                                                                                                                                                                                          0.0s\r\n => [internal] load build definition from Dockerfile                                                                                                                                                                       0.1s\r\n => => transferring dockerfile: 622B                                                                                                                                                                                       0.0s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:7.0                                                                                                                                                          2.3s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:7.0                                                                                                                                                       2.0s\r\n => [build 1/7] FROM mcr.microsoft.com/dotnet/sdk:7.0@sha256:39069a126f2e3dd8f3aa72a21688d4de13ba23b051a8c5856be1460f8165c422                                                                                             52.0s\r\n => => resolve mcr.microsoft.com/dotnet/sdk:7.0@sha256:39069a126f2e3dd8f3aa72a21688d4de13ba23b051a8c5856be1460f8165c422                                                                                                    0.0s\r\n => => sha256:d508dcfcdd2e1834750cbcc43a9e0f44625d7cdbb349be5342f069a0a26a9d20 13.42MB / 13.42MB                                                                                                                           8.7s\r\n => => sha256:edd0ccac63956573208572413f089dcc51a922baced37a1c3588d55701aab5c3 150.47MB / 150.47MB                                                                                                                        38.8s\r\n => => sha256:62558e356c6cd900192712f446fefcd8029f9f54b12c87b4b342a392d2e9e9ed 25.39MB / 25.39MB                                                                                                                          11.1s\r\n => => extracting sha256:62558e356c6cd900192712f446fefcd8029f9f54b12c87b4b342a392d2e9e9ed                                                                                                                                  1.7s\r\n => => extracting sha256:edd0ccac63956573208572413f089dcc51a922baced37a1c3588d55701aab5c3                                                                                                                                  3.2s\r\n => => extracting sha256:d508dcfcdd2e1834750cbcc43a9e0f44625d7cdbb349be5342f069a0a26a9d20                                                                                                                                  0.3s\r\n => [internal] load build context                                                                                                                                                                                          0.1s\r\n => => transferring context: 6.72kB                                                                                                                                                                                        0.0s\r\n => [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:7.0@sha256:cc60f5590843f067871d72ffc99d3065f8556624d45465948166b11a08714ddc                                                                                           22.7s\r\n => => resolve mcr.microsoft.com/dotnet/aspnet:7.0@sha256:cc60f5590843f067871d72ffc99d3065f8556624d45465948166b11a08714ddc                                                                                                 0.0s\r\n => => sha256:9855365906865f18e48e4132950bb1f031a37afd9487af259eb8618313aaa672 9.80MB / 9.80MB                                                                                                                             6.2s\r\n => => sha256:e48426b90b5fe27894046a6b96e67e208ec25e2768a1c5bf76d233fa1ec1e7d6 155B / 155B                                                                                                                                 0.3s\r\n => => sha256:eafd3893bf918fb60399acce35d47fc92934372f519a0dc8ea56b7ae552a1524 30.71MB / 30.71MB                                                                                                                          19.1s\r\n => => sha256:dd6189d6fc13cb03db0f4a3d9659b6b6044fd5858019d659001eaf8367584d67 30.06MB / 30.06MB                                                                                                                          19.4s\r\n => => sha256:8487b5d2f3511cc5ae78d3f730d7f7e8f06466f6281464355fd6a464c95cab36 14.92MB / 14.92MB                                                                                                                           9.2s\r\n => => extracting sha256:dd6189d6fc13cb03db0f4a3d9659b6b6044fd5858019d659001eaf8367584d67                                                                                                                                  1.5s\r\n => => extracting sha256:8487b5d2f3511cc5ae78d3f730d7f7e8f06466f6281464355fd6a464c95cab36                                                                                                                                  0.4s\r\n => => extracting sha256:eafd3893bf918fb60399acce35d47fc92934372f519a0dc8ea56b7ae552a1524                                                                                                                                  0.8s\r\n => => extracting sha256:e48426b90b5fe27894046a6b96e67e208ec25e2768a1c5bf76d233fa1ec1e7d6                                                                                                                                  0.0s\r\n => => extracting sha256:9855365906865f18e48e4132950bb1f031a37afd9487af259eb8618313aaa672                                                                                                                                  0.3s\r\n => [base 2/2] WORKDIR /app                                                                                                                                                                                                0.7s\r\n => [final 1/2] WORKDIR /app                                                                                                                                                                                               0.1s\r\n => [build 2/7] WORKDIR /src                                                                                                                                                                                               1.4s\r\n => [build 3/7] COPY [src/EspUpdater/EspUpdater.csproj, src/EspUpdater/]                                                                                                                                                   0.0s\r\n => ERROR [build 4/7] RUN dotnet restore \"src/EspUpdater/EspUpdater.csproj\"                                                                                                                                               10.5s\r\n------\r\n > [build 4/7] RUN dotnet restore \"src/EspUpdater/EspUpdater.csproj\":\r\n#0 10.13 /usr/share/dotnet/sdk/7.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(55,5): error MSB4184: The expression \"[MSBuild]::GetTargetFrameworkVersion(net7.0, 2)\" cannot be evaluated. Exception has been thrown by the target of an invocation. [/src/src/EspUpdater/EspUpdater.csproj]\r\n------\r\nDockerfile:8\r\n--------------------\r\n   6 |     WORKDIR /src\r\n   7 |     COPY [\"src/EspUpdater/EspUpdater.csproj\", \"src/EspUpdater/\"]\r\n   8 | >>> RUN dotnet restore \"src/EspUpdater/EspUpdater.csproj\"\r\n   9 |     COPY . .\r\n  10 |     WORKDIR \"/src/src/EspUpdater\"\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c dotnet restore \\\"src/EspUpdater/EspUpdater.csproj\\\"\" did not complete successfully: exit code: 1\r\n```\r\n\r\n# Docker Version\r\n\r\n```\r\nPS C:\\Users\\Marcio\\OneDrive\\Documents\\VSCode\\asp.net\\EspUpdater> docker version\r\nClient:\r\n Cloud integration: v1.0.29\r\n Version:           20.10.20\r\n API version:       1.41\r\n Go version:        go1.18.7\r\n Git commit:        9fdeb9c\r\n Built:             Tue Oct 18 18:28:44 2022\r\n OS/Arch:           windows/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Desktop 4.13.1 (90346)\r\n Engine:\r\n  Version:          20.10.20\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.18.7\r\n  Git commit:       03df974\r\n  Built:            Tue Oct 18 18:18:35 2022\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.6.8\r\n  GitCommit:        9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6\r\n runc:\r\n  Version:          1.1.4\r\n  GitCommit:        v1.1.4-0-g5fd4c4d\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n# Docker Info\r\n```\r\nPS C:\\Users\\Marcio\\OneDrive\\Documents\\VSCode\\asp.net\\EspUpdater> docker info\r\nClient:\r\n Context:    default\r\n Debug Mode: false\r\n Plugins:\r\n  buildx: Docker Buildx (Docker Inc., v0.9.1)\r\n  compose: Docker Compose (Docker Inc., v2.5.1)\r\n  dev: Docker Dev Environments (Docker Inc., v0.0.3)\r\n  extension: Manages Docker extensions (Docker Inc., v0.2.13)\r\n  sbom: View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)\r\n  scan: Docker Scan (Docker Inc., v0.21.0)\r\n\r\nServer:\r\n Containers: 18\r\n  Running: 4\r\n  Paused: 0\r\n  Stopped: 14\r\n Images: 40\r\n Server Version: 20.10.20\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n  userxattr: false\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Cgroup Version: 1\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: io.containerd.runtime.v1.linux runc io.containerd.runc.v2\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6\r\n runc version: v1.1.4-0-g5fd4c4d\r\n init version: de40ad0\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 5.10.102.1-microsoft-standard-WSL2\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 12\r\n Total Memory: 15.6GiB\r\n Name: docker-desktop\r\n ID: BGP4:KFNX:A6XV:MDJT:AKET:PD7L:O7YG:6SHF:KNRB:EFFD:PD3W:6OC2\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n HTTP Proxy: http.docker.internal:3128\r\n HTTPS Proxy: http.docker.internal:3128\r\n No Proxy: hubproxy.docker.internal\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  hubproxy.docker.internal:5000\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n\r\nWARNING: No blkio throttle.read_bps_device support\r\nWARNING: No blkio throttle.write_bps_device support\r\nWARNING: No blkio throttle.read_iops_device support\r\nWARNING: No blkio throttle.write_iops_device support\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-02-21T03:30:23.3168291Z","RunDurationInMilliseconds":1345}