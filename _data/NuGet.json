{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"26612864060","Type":"IssuesEvent","CreatedAt":"2023-01-24T02:41:12","Actor":"Chanvannak52","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9356","RelatedDescription":"Opened issue \"{\"meetingURL\":\"https://ohsu.webex.com/wbxmjs/joinservice/sites/ohsu/meeting/download/relaunch/null\",\"meetingName\":\"BDMS OHSU Heart transformation consulting # 1/11\",\"meetingSaveTime\":1674527533367}\" (#9356) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"26612657462","Type":"IssuesEvent","CreatedAt":"2023-01-24T02:21:38","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9355","RelatedDescription":"Opened issue \"[NuGet.org Bug]: The rendering of code block in Readme shows the light grey shade. \" (#9355) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe rendering of code block in Readme shows the light grey shade at each line. This looks not pretty and doesn't align with official documents.\n\n### Repro Steps\n\nOpen any package with the code block in Readme: https://www.nuget.org/packages/Newtonsoft.Json\r\n\r\nThere is the light grey shade at each line of the code block:\r\n![image](https://user-images.githubusercontent.com/41028779/214198811-570ada55-fd22-41de-b921-29f6cd16920b.png)\r\n\r\nHaving the similar rendering of code block as official documents will look much better and support package authors to use this feature.\n\n### Expected Behavior\n\nNo shade at each line of the code block in Readme.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26611885187","Type":"IssuesEvent","CreatedAt":"2023-01-24T01:18:08","Actor":"jonsequitur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9354","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Information on the `Script & Interactive` usage tab isn't quite accurate \" (#9354) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe `Script & Interactive` tab shows informational text that could use an update. \r\n\r\n> #r directive can be used in F# Interactive, C# scripting and .NET Interactive. Copy this into the interactive tool or source code of the script to reference the package. \r\n\r\nI'd suggest two changes:\r\n\r\n* The NuGet support for `#r` is not present in C# scripting. \r\n* The VS Code extension for .NET Interactive is now called [Polyglot Notebooks](https://devblogs.microsoft.com/dotnet/dotnet-interactive-notebooks-is-now-polyglot-notebooks/). (.NET Interactive is also available in other places, so this name change doesn't apply universally.) Mentioning .NET Interactive **_and_** Polyglot Notebooks might be helpful.\r\n\r\n\n\n### Repro Steps\n\n1. Open a package URL, e.g.  https://www.nuget.org/packages/Apache.Arrow/\r\n2. Click the `Script & Interactive` tab\n\n### Expected Behavior\n\nThe wording could be more accurate.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/547415/214192932-b1fa8a27-ce95-4d75-a11e-21e17274383c.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26610916562","Type":"IssuesEvent","CreatedAt":"2023-01-24T00:05:52","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9321","RelatedDescription":"Closed issue \"Support .NET Framework 4.8.1 in the compatible framework view\" (#9321) at NuGet/NuGetGallery","RelatedBody":"Hi there,\r\n\r\nCould you please add .NET Framework 4.8.1 to the compatible framework view? See the example:\r\n![image](https://user-images.githubusercontent.com/2767027/205999717-d7ab07b1-4ca8-46c6-8c1f-0b33dce396fc.png)\r\n\r\n"},{"Id":"26609128984","Type":"PullRequestEvent","CreatedAt":"2023-01-23T22:04:53","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9342","RelatedDescription":"Merged pull request \"Search-by-TFM Frontend changes\" (#9342) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4579\r\n\r\nThis work covers all the frontend changes required to enable Search-by-TFM on NuGet.org:\r\n\r\n- Moves all Search Filters to the left of the search results (not a collapsible section anymore)\r\n- Separates 'Sort By', places it in the top right\r\n- Unifies the search bar, the search filters panel and the 'Sort by' dropdown into one form (which fixes this search filters bug: https://github.com/NuGet/NuGetGallery/issues/8660)\r\n- Implements checkbox selection logic, where Framework generation checkboxes and TFM checkboxes depend on each other's state\r\n- Constructs query parameters with the selected filters\r\n- A11y FastPass doesn't flag any issues\r\n\r\nPreviously,\r\n![image](https://user-images.githubusercontent.com/82980589/211931784-7e5b3c9a-e626-49b5-98a3-91f1357a9208.png)\r\n![image](https://user-images.githubusercontent.com/82980589/211931848-f96bb54f-6500-48c9-8377-37b267bd584a.png)\r\n\r\nAfter the changes,\r\n![image](https://user-images.githubusercontent.com/82980589/212203218-90205f24-a211-414c-9a41-a4fc8696f195.png)\r\n\r\n![image](https://user-images.githubusercontent.com/82980589/211052110-a4e4dc38-893a-4bbd-9d7d-5a3665683a9f.png)\r\n![image](https://user-images.githubusercontent.com/82980589/211041395-7aafbdd6-6897-4cf9-b1e8-3f1217b6f16d.png)\r\n\r\n**UPDATE:**\r\n\r\n* Added a tooltip next to the Framework filter that tells users that this filters package search results based on the target frameworks specified in the package contents.\r\n![image](https://user-images.githubusercontent.com/82980589/212203467-4f293349-797c-4b53-84d8-2cac1014c22e.png)\r\n* Put the Framework filters behind a feature flight. While the feature flight is only available to site admins, regular users will still see the bulk of the UI changes, but will not see the Framework filters themselves. i.e. They will see the filters panel on the left side of the page, the 'Sort by' dropdown in the top-right, etc.\r\n![image](https://user-images.githubusercontent.com/82980589/212203742-95525832-d4e7-48f3-86bb-672141b395e6.png)\r\n* TFMs are also now in descending order so users see more recent TFMs first\r\n![image](https://user-images.githubusercontent.com/82980589/212208715-9af283b7-889b-46fd-94b8-53077ada5359.png)\r\n"},{"Id":"26569088956","Type":"IssuesEvent","CreatedAt":"2023-01-21T00:18:06","Actor":"tonyqus","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9353","RelatedDescription":"Opened issue \"[Feature]: Advanced statistics for each package release\" (#9353) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n#2656 Investigate additional dimension for stats warehouse: location\r\n\n\n### The Elevator Pitch\n\nI'm a nuget package owner for many years.  I usually wanna know more about each release/version in order to understand the market better.  I usually reply on https://www.nuget.org/stats/packages/NPOI?groupby=Version. But frankly speaking, this is not enough.\r\n\r\nI also tried nugettrend.com but eventally I figure out that their data is not so good (daily based). Moreover, they stopped the development for a few years. They just implemented one chart (monthly total download comparsion between different projects).  I guess it's just a showcase project. \r\n\r\nI'd like to have the following statistics to have a deeper analysis of my package\r\n- A weekly(or daily) chart (within last 6 week) for single release so that I can analyze the download growth for each version. \r\n-  .NET version analysis for each release so that it's easy for maintainers to judge which .NET version they should support in the next release. (Question: Does nuget client collect .NET version data on client side? I mean which .NET version does the current project use?)\r\n- Geo based analysis (country based) (Question: Does nuget client collect country data?)\n\n### Additional Context and Details\n\n_No response_"},{"Id":"26564150142","Type":"IssuesEvent","CreatedAt":"2023-01-20T18:27:41","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8984","RelatedDescription":"Closed issue \"Plan for NuGet in 2022\" (#8984) at NuGet/NuGetGallery","RelatedBody":"Today we are excited to share with you the plan for NuGet and NuGet.org. This issue contains summary of the plan for the year and acts as a place for you to leave feedback.\r\n\r\nThis plan is a collection of input from many stakeholders and outlines where we intend to invest our time in NuGet and NuGet.org.\r\n\r\n> **IMPORTANT**\r\n> This plan is not a commitment; it will evolve as we continue to learn throughout the release. Some things that are not currently planned for NuGet may get pulled in. Some things currently planned may even be pushed out.\r\n\r\n# General information\r\n\r\nNuGet has a major release following [NuGet 6.0](https://docs.microsoft.com/nuget/release-notes/nuget-6.0) and is currently scheduled for release in November 2022 at the same time as .NET 7.\r\n\r\nNuGet will align with the [.NET support policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core) and will therefore **not** be a long-term support (LTS) release.\r\n\r\nNuGet.org does not currently follow any specific schedule and releases features & bug fixes regularly throughout the year.\r\n\r\n### Breaking changes\r\n\r\nNuGet may contain a small number of breaking changes as we continue to evolve NuGet with the .NET platform. Our goal is to minimize breaking changes as much as possible to keep you productive when upgrading.\r\n\r\n## Themes\r\n\r\nThe large investments in NuGet are the following themes:\r\n\r\n### Highly Requested Features\r\n\r\nAs always, a major input into our planning process comes from [votes (👍) for features on GitHub](https://github.com/NuGet/Home/blob/dev/CONTRIBUTING.md#before-submitting-an-issue).\r\n\r\nThese features are areas we are actively engaged in with regards to designing, implementing, and polishing the respective experiences for.\r\n\r\n#### NuGet Tooling\r\n\r\n- https://github.com/NuGet/Home/issues/6764\r\n- https://github.com/NuGet/Home/issues/11752\r\n- https://github.com/NuGet/Home/issues/10730\r\n- https://github.com/NuGet/Home/issues/7752\r\n- https://github.com/NuGet/Home/issues/4103\r\n- https://github.com/NuGet/Home/issues/8087\r\n- https://github.com/NuGet/Home/issues/5887\r\n- https://github.com/NuGet/Home/issues/1851\r\n- https://github.com/NuGet/Home/issues/11262\r\n\r\n#### NuGet Gallery\r\n\r\n- https://github.com/NuGet/NuGetGallery/issues/3098\r\n- https://github.com/NuGet/NuGetGallery/issues/4843\r\n- https://github.com/NuGet/NuGetGallery/issues/8964\r\n\r\n### .NET Platforms and Ecosystem\r\n\r\nMuch of the work planned for NuGet involves improving the package management experience for .NET across different platforms and ecosystem. This involves work in NuGet to ensure a great experience across .NET technologies.\r\n\r\n- https://github.com/NuGet/Home/issues/5926\r\n- https://github.com/NuGet/Home/issues/9667\r\n- https://github.com/NuGet/Home/issues/10800\r\n- https://github.com/NuGet/Home/issues/10430\r\n- https://github.com/NuGet/Home/issues/10872\r\n\r\n### Migrating to .NET\r\n\r\nNuGet has always [supported many scenarios for package management](https://docs.microsoft.com/en-us/nuget/consume-packages/migrate-packages-config-to-package-reference). In our continued efforts to help you migrate to the latest version of .NET, we will be working on improvements to the [Upgrade Assistant](https://github.com/dotnet/upgrade-assistant) and core package management experiences to help you migrate your project to use the latest version of NuGet.\r\n\r\n## Performance\r\n\r\nWith each [new release of NuGet & Visual Studio comes a plethora of performance improvements](https://devblogs.microsoft.com/visualstudio/performance-improvements-in-nuget/) when restoring NuGet packages, managing project dependencies, and browsing for the next great package to include in your solution. We will continue to invest time to improve your experiences every .NET & Visual Studio release.\r\n\r\n# Feedback\r\n\r\nYour feedback is important to us. The best way to indicate the importance of an issue is to vote (👍) for that [issue on GitHub](https://github.com/NuGet/Home/issues) and [Visual Studio Developer Community](https://developercommunity.visualstudio.com/). We use this data to help us with our regular planning so we can work on the things that matter most to you.\r\n\r\nPlease **comment on this issue** if you believe we are missing something that is critical for NuGet, or are focusing on the wrong areas. Give us a little bit of context as to why you believe so and feel free to upvote each other's comments to help us make changes to our future plans.\r\n\r\nHuge thanks to @ajcvickers and the Entity Framework Core team for a wonderful format and forum to discuss product plans in OSS. 🎉"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"26606465845","Type":"IssuesEvent","CreatedAt":"2023-01-23T19:47:20","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12271","RelatedDescription":"Closed issue \"VS Options - Package Source Mapping should ordered after Package Sources\" (#12271) at NuGet/Home","RelatedBody":"Since Package Sources are generally added first and are used more frequently, let's move Package Source Mapping below that in the VS Options.\r\n![image](https://user-images.githubusercontent.com/49205731/203648691-03974eed-e290-425f-8631-294acaab2455.png)\r\n"},{"Id":"26604549838","Type":"IssuesEvent","CreatedAt":"2023-01-23T18:13:17","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12366","RelatedDescription":"Closed issue \"After using the DeleteWorksheet method of SpreadsheetLight to delete the excel sheet, error will be prompted when opening the file\" (#12366) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nSpreadsheetLight  3.4.11\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nerror: 削除された機能: /xl/workbook.xml パーツ内の名前付き範囲 (ブック)\r\nIf move the sheet of the deleted object to the last position in the template, it seems that no error will occur。\r\nMaybe the order in the source code is reversed。\r\nwbp.DeletePart(sRelId);\r\nslwb.Sheets.RemoveAt(i);\n\n### Verbose Logs\n\n_No response_"},{"Id":"26601627422","Type":"IssuesEvent","CreatedAt":"2023-01-23T16:09:14","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12373","RelatedDescription":"Closed issue \"Static graph-based restore crashes on systems with alternate console encodings\" (#12373) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, MSBuild.exe\r\n\r\n### Product Version\r\n\r\nVisual Studio 17.5 and above\r\n\r\n### Worked before?\r\n\r\nYes, Visual Studio 17.4\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nIn Windows Region settings, enable \"Use Unicode UTF-8 for worldwide language support\"\r\n\r\n![image](https://user-images.githubusercontent.com/17556515/213275269-9fd1c932-a002-4da7-9dd1-786230fb913e.png)\r\n\r\nThis seems to make Console.StandardInput have a 3-byte preamble, causing the logic that read the static graph restore arguments to not work correctly.\r\n\r\nReported by @vlada-shubina\r\n\r\nCaused by https://github.com/NuGet/NuGet.Client/pull/4772\r\n\r\n### Workaround\r\nDisable the Windows Region setting and reboot.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"26580094722","Type":"IssuesEvent","CreatedAt":"2023-01-22T10:42:30","Actor":"svick","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12380","RelatedDescription":"Opened issue \"Incorrectly appending dot to a package name should produce better error message\" (#12380) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 8.0.100-alpha.1.22567.28\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nWhen you try to `dotnet add package` using the wrong name of a package, you get a relatively reasonable error message:\r\n\r\n```\r\n> dotnet add package Newtonsoft.Json/\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\Svick\\AppData\\Local\\Temp\\tmp4frdea.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package 'Newtonsoft.Json/' into project 'C:\\code\\tmp\\hwapp\\hwapp.csproj'.\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json 928ms\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json 1053ms\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json 311ms\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json 745ms\r\nerror: There are no versions available for the package 'Newtonsoft.Json/'.\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\r\n(This could be improved, see https://github.com/NuGet/Home/issues/12379, but that's not what this issue is about.)\r\n\r\nBut when the wrong name is because of adding `.` to the package name (e.g. because of copy-pasting from the end of a sentence), the error is:\r\n\r\n```\r\n> dotnet add package Newtonsoft.Json.\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\Svick\\AppData\\Local\\Temp\\tmpnapwll.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package 'Newtonsoft.Json.' into project 'C:\\code\\tmp\\hwapp\\hwapp.csproj'.\r\ninfo :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json./index.json\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json./index.json\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json./index.json 181ms\r\ninfo : Restoring packages for C:\\code\\tmp\\hwapp\\hwapp.csproj...\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json\r\ninfo :   CACHE https://api.nuget.org/v3-flatcontainer/newtonsoft.json./index.json\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/newtonsoft.json./13.0.2/newtonsoft.json..13.0.2.nupkg\r\ninfo :   NotFound https://api.nuget.org/v3-flatcontainer/newtonsoft.json./13.0.2/newtonsoft.json..13.0.2.nupkg 719ms\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/newtonsoft.json./index.json\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json 993ms\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json 319ms\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json 261ms\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/newtonsoft.json./index.json 592ms\r\ninfo :   CACHE https://api.nuget.org/v3-flatcontainer/newtonsoft.json./index.json\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/newtonsoft.json./index.json\r\ninfo :   CACHE https://api.nuget.org/v3-flatcontainer/newtonsoft.json./index.json\r\ninfo : Package 'Newtonsoft.Json.' is compatible with all the specified frameworks in project 'C:\\code\\tmp\\hwapp\\hwapp.csproj'.\r\nerror: Value cannot be null. (Parameter 'version')\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\r\nNothing in the output indicates what the error actually is. That should be changed.\n\n### Verbose Logs\n\n_No response_"},{"Id":"26580062514","Type":"IssuesEvent","CreatedAt":"2023-01-22T10:36:58","Actor":"svick","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12379","RelatedDescription":"Opened issue \"Improve the UX of dotnet add package\" (#12379) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nCurrently, when you try to `dotnet add package` using an incorrect package name, you get an output like this:\r\n\r\n```\r\n> dotnet add package Newtonsoft.Json/\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\Svick\\AppData\\Local\\Temp\\tmp4frdea.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package 'Newtonsoft.Json/' into project 'C:\\code\\tmp\\hwapp\\hwapp.csproj'.\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json 928ms\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json 1053ms\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json 311ms\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json 745ms\r\n> dotnet add package Newtonsoft.Json/\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\Svick\\AppData\\Local\\Temp\\tmp4frdea.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package 'Newtonsoft.Json/' into project 'C:\\code\\tmp\\hwapp\\hwapp.csproj'.\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json 928ms\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json 1053ms\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json\r\ninfo :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/newtonsoft.json//index.json 311ms\r\ninfo :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/registrations2-semver2/newtonsoft.json//index.json 745ms\r\nerror: There are no versions available for the package 'Newtonsoft.Json/'.\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed. 'Newtonsoft.Json/'.\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\r\nMy issues with this are:\r\n\r\n1. It's almost 30 lines of output, most of them fairly long, but only one of them is the actual error message I want to see. Specifically:\r\n\r\n    1. The `info` messages are not going to be useful most of the time. `dotnet build` defaults the minimal verbosity, and allows the user to see more information when useful. `dotnet add package` should do the same.\r\n    2. The Usage section can be useful when the user makes a mistake in the usage of the command. But when the mistake is in the name of the package, it just adds noise.\r\n2. The error message is unclear. It says that \"there are no versions available for the package\", when the actual error is that the package does not exist. (Bonus points if the message corrected the spelling of the package name.)\r\n3. The `info:` formatting doesn't follow the color-coded unprefixed formatting of `dotnet build`.\n\n### Desired Behavior\n\nIdeally, the output should look something like this:\r\n\r\n```\r\n> dotnet add package Newtonsoft.Json/\r\nThe package 'Newtonsoft.Json/' does not exist. Did you mean 'Newtonsoft.Json'?\r\n```\n\n### Additional Context\n\n_No response_"},{"Id":"26564257255","Type":"IssuesEvent","CreatedAt":"2023-01-20T18:33:56","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11379","RelatedDescription":"Closed issue \"Design Package Source mapping experiences for dotnet package  \" (#11379) at NuGet/Home","RelatedBody":"Child of https://github.com/NuGet/Home/issues/10730\r\n\r\nThis covers the package source mapping commands for the dotnet add package command (or maybe even, dotnet update package)."},{"Id":"26564029417","Type":"IssuesEvent","CreatedAt":"2023-01-20T18:20:52","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11571","RelatedDescription":"Closed issue \"Plan for NuGet in 2022\" (#11571) at NuGet/Home","RelatedBody":"Today we are excited to share with you the plan for NuGet and NuGet.org. This issue contains summary of the plan for the year and acts as a place for you to leave feedback.\r\n\r\nThis plan is a collection of input from many stakeholders and outlines where we intend to invest our time in NuGet and NuGet.org.\r\n\r\n> **IMPORTANT**\r\n> This plan is not a commitment; it will evolve as we continue to learn throughout the release. Some things that are not currently planned for NuGet may get pulled in. Some things currently planned may even be pushed out.\r\n\r\n# General information\r\n\r\nNuGet has a major release following [NuGet 6.0](https://docs.microsoft.com/nuget/release-notes/nuget-6.0) and is currently scheduled for release in November 2022 at the same time as .NET 7.\r\n\r\nNuGet will align with the [.NET support policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core) and will therefore **not** be a long-term support (LTS) release.\r\n\r\nNuGet.org does not currently follow any specific schedule and releases features & bug fixes regularly throughout the year.\r\n\r\n### Breaking changes\r\n\r\nNuGet may contain a small number of breaking changes as we continue to evolve NuGet with the .NET platform. Our goal is to minimize breaking changes as much as possible to keep you productive when upgrading.\r\n\r\n## Themes\r\n\r\nThe large investments in NuGet are the following themes:\r\n\r\n### Highly Requested Features\r\n\r\nAs always, a major input into our planning process comes from [votes (👍) for features on GitHub](https://github.com/NuGet/Home/blob/dev/CONTRIBUTING.md#before-submitting-an-issue).\r\n\r\nThese features are areas we are actively engaged in with regards to designing, implementing, and polishing the respective experiences for.\r\n\r\n#### NuGet Tooling\r\n\r\n- https://github.com/NuGet/Home/issues/6764\r\n- https://github.com/NuGet/Home/issues/11752\r\n- https://github.com/NuGet/Home/issues/10730\r\n- https://github.com/NuGet/Home/issues/7752\r\n- https://github.com/NuGet/Home/issues/4103\r\n- https://github.com/NuGet/Home/issues/8087\r\n- https://github.com/NuGet/Home/issues/5887\r\n- https://github.com/NuGet/Home/issues/1851\r\n- https://github.com/NuGet/Home/issues/11262\r\n\r\n#### NuGet Gallery\r\n\r\n- https://github.com/NuGet/NuGetGallery/issues/3098\r\n- https://github.com/NuGet/NuGetGallery/issues/4843\r\n- https://github.com/NuGet/NuGetGallery/issues/8964\r\n\r\n### .NET Platforms and Ecosystem\r\n\r\nMuch of the work planned for NuGet involves improving the package management experience for .NET across different platforms and ecosystem. This involves work in NuGet to ensure a great experience across .NET technologies.\r\n\r\n- https://github.com/NuGet/Home/issues/5926\r\n- https://github.com/NuGet/Home/issues/9667\r\n- https://github.com/NuGet/Home/issues/10800\r\n- https://github.com/NuGet/Home/issues/10430\r\n- https://github.com/NuGet/Home/issues/10872\r\n\r\n### Migrating to .NET\r\n\r\nNuGet has always [supported many scenarios for package management](https://docs.microsoft.com/en-us/nuget/consume-packages/migrate-packages-config-to-package-reference). In our continued efforts to help you migrate to the latest version of .NET, we will be working on improvements to the [Upgrade Assistant](https://github.com/dotnet/upgrade-assistant) and core package management experiences to help you migrate your project to use the latest version of NuGet.\r\n\r\n## Performance\r\n\r\nWith each [new release of NuGet & Visual Studio comes a plethora of performance improvements](https://devblogs.microsoft.com/visualstudio/performance-improvements-in-nuget/) when restoring NuGet packages, managing project dependencies, and browsing for the next great package to include in your solution. We will continue to invest time to improve your experiences every .NET & Visual Studio release.\r\n\r\n# Feedback\r\n\r\nYour feedback is important to us. The best way to indicate the importance of an issue is to vote (👍) for that [issue on GitHub](https://github.com/NuGet/Home/issues) and [Visual Studio Developer Community](https://developercommunity.visualstudio.com/). We use this data to help us with our regular planning so we can work on the things that matter most to you.\r\n\r\nPlease **comment on this issue** if you believe we are missing something that is critical for NuGet, or are focusing on the wrong areas. Give us a little bit of context as to why you believe so and feel free to upvote each other's comments to help us make changes to our future plans.\r\n\r\nHuge thanks to @ajcvickers and the Entity Framework Core team for a wonderful format and forum to discuss product plans in OSS. 🎉"},{"Id":"26559602109","Type":"IssuesEvent","CreatedAt":"2023-01-20T14:51:23","Actor":"MgSam","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12378","RelatedDescription":"Opened issue \"API Key should work for all requests\" (#12378) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nThe API Key appears to only work for pushes to NuGet. If you have a private authenticated NuGet feed, it requires a username and password to do anything else, like `nuget list`, for example. This is definitely not a best practice from a security perspective and is extremely confusing from a user perspective. All interactions with NuGet should be able to work based on an API key.\n\n### Additional Context and Details\n\nMy particular use case is that I need a tool to list NuGet packages. I have an API Key for this but only after a lot of research discovered it won't work for doing a simple `nuget list`. Hardcoding a username and password into the tool is definitely a worst practice, but I don't see any alternative with the current NuGet API."},{"Id":"26552835375","Type":"IssuesEvent","CreatedAt":"2023-01-20T09:26:36","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12377","RelatedDescription":"Opened issue \".NET Framework (non-SDK) projects don't load IsImplicityDefined metadata on PackageReferences\" (#12377) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nall?\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nHave a non-SDK style project, and a PackageReference item with `IsDefinedImplicitly=\"true\"`. For example:\r\n\r\n```xml\r\n<PackageReference Include=\"NuGet.Versioning\" Version=\"6.4.0\" IsDefinedImplicitly=\"true\" />\r\n```\r\n\r\nThen, open the Package Manager UI, go to the installed tab, and try to change the package version.  If you do this with an SDK style project, you'll see the version selection is disabled, with the top entry saying \"Disabled by project\".  When you try this with a non-SDK style project, it lets you change the version, and when the PackageReference comes from a read-only file (for example, a targets file in the Visual Studio install directory), trying to install the package fails.\n\n### Verbose Logs\n\n_No response_"},{"Id":"26552512725","Type":"IssuesEvent","CreatedAt":"2023-01-20T09:10:42","Actor":"tbolon","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12376","RelatedDescription":"Opened issue \"Frequent error on sln restore: System.InvalidOperationException: Collection was modified; enumeration operation may not execute\" (#12376) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild version 17.5.0-preview-23053-01+ac0911a00 for .NET Framework ; VS 17.5 preview 3\n\n### Worked before?\n\nNot sure, I rearely use the command-line to restore\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nWe have a solution with ~80 projets. We use a custom nuget.config which adds two packages sources (devops and devexpress).\r\n\r\nWhen using msbuild /t:Restore xxx.sln, I often receive this error. I have to run multiple retries for the restore to succeed.\r\n\r\nIf I try to build the sln using `msbuild xxx.sln` before, I found that the error occurs less often.\n\n### Verbose Logs\n\n```shell\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(132,5)\r\n: error : Collection was modified; enumeration operation may not execute. [C:\\code\\team\\Travel\\Goyave.sln]\r\n  System.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n     at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)\r\n     at System.Collections.Generic.Dictionary`2.Enumerator.MoveNext()\r\n     at NuGet.Configuration.UnknownItem.Merge(UnknownItem item)\r\n     at NuGet.Configuration.VirtualSettingSection.Merge(SettingSection other)\r\n     at NuGet.Configuration.NuGetConfiguration.MergeSectionsInto(Dictionary`2 sectionsContainer)\r\n     at NuGet.Configuration.Settings..ctor(IList`1 settingsFiles)\r\n     at NuGet.Configuration.Settings.LoadSettingsForSpecificConfigs(String root, String configFileName, List`1 validSet\r\n  tingFiles, IMachineWideSettings machineWideSettings, Boolean loadUserWideSettings, Boolean useTestingGlobalPath, Sett\r\n  ingsLoadingContext settingsLoadingContext)\r\n     at NuGet.Configuration.Settings.LoadSettingsGivenSettingsFiles(List`1 settings)\r\n     at NuGet.Configuration.Settings.LoadImmutableSettingsGivenConfigPaths(IList`1 configFilePaths, SettingsLoadingCont\r\n  ext settingsLoadingContext)\r\n     at NuGet.Commands.DependencyGraphSpecRequestProvider.Create(String projectNameToRestore, ExternalProjectReference\r\n  project, HashSet`1 projectReferenceClosure, RestoreArgs restoreArgs, DependencyGraphSpec projectDgSpec, SettingsLoadi\r\n  ngContext settingsLoadingContext)\r\n     at NuGet.Commands.DependencyGraphSpecRequestProvider.<>c__DisplayClass6_0.<GetRequestsFromItems>b__2(String projec\r\n  tNameToRestore)\r\n     at System.Threading.Tasks.Parallel.<>c__DisplayClass17_0`1.<ForWorker>b__1()\r\n     at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\r\n     at System.Threading.Tasks.Task.<>c__DisplayClass176_0.<ExecuteSelfReplicating>b__0(Object <p0>)\n```\n"},{"Id":"26543361851","Type":"IssuesEvent","CreatedAt":"2023-01-19T21:19:30","Actor":"mathieubourgeois","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12375","RelatedDescription":"Opened issue \"Restoring sln file restores project with improper configuration/platform pairs\" (#12375) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild version \"17.4.1+9a89d02ff\"\n\n### Worked before?\n\nUnsure\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI am trying to port a solution to .Net 6. In the process, I've noticed a weird issue with the restore. In VS, everything works fine. However, when building from MSBuild, I am getting extra assemblies copied to my output folder which shouldn't be there based on the configuration.\r\n\r\nAfter analysis of the binlog, I've narrowed it down to the combination of NuGet and a project with a conditional `ProjectReference`. Under some `Configuration` values, I have a reference to the project or not. However, when building with the `Configuration` that shouldn't have this project referred, it still gets copied (along with its dependencies) to the output. The reason seems to be from the fact that I am restoring a solution file. More specifically, I have :\r\n\r\n- Sln file\r\n  - Solution Configuration|Platform pairs : `Debug|x64` and `Release|x64`\r\n- Multiple csproj, each with their own set of Configuration|Platform pair, which don't necessarily match\r\n\r\nWhen looking at the evaluation of the restore project in the binlog, it becomes pretty clear what the source of the problem is : when doing the restoring evaluation in the csproj, `Configuration` and `Platform` end up being those of the solution, and not those of the actual project being restored. This is why the unreferenced project ends up copied, because NuGet evaluated it in a Configuration|Platform pair where the `ProjectReference` is actually used.\r\n\r\nI narrowed down the actual source of the issue, which is the `_LoadRestoreGraphEntryPoints`, more specifically, the `GetRestoreSolutionProjectsTask` task inside the target. The `RestoreGraphProjectInputItems` items generated are of the following fashion :\r\n\r\n```\r\n<RestoreGraphProjectInputItems Include=\"Path/to/the/file.csproj\" >\r\n  <AdditionalProperties>Configuration=Release; Platform=x64</AdditionalProperties>\r\n  <Platform>AnyCPU</Platform>\r\n  <Configuration>RedactedProjectConfiguration</Configuration>\r\n  <ToolsVersion>Current</ToolsVersion>\r\n  <SkipNonexistentProjects>Build</SkipNonexistentProjects>\r\n</RestoreGraphProjectInputItems>\r\n```\r\n\r\nAnd that's where the problem becomes (relatively) clear. The `AdditionalProperties` are passed straight to the restore MSBuild tasks, and they contain the solution configuration/platform pairs, which override the whole thing and cause the issue. The reason why I'm suggesting this is a problem coming from `GetRestoreSolutionProjectsTask` is because this task takes into input `ProjectReference` from the solution, which, in this case, can be of the `.metaproj` variety. This task then removes the .metaproj and considers it as a valid restore input. Which is fair, except for the fact that the csproj and its metaproj file are actually different : specifically, a metaproj file seems to be a wrapper on top of the csproj, and works based on Solution-level logic (i.e. Solution-level configuration and platform), while the csproj is actually based on that csproj' configuration and platform. When going from a metaproj back to a csproj, we are forgetting to go back from the solution configuration/platform to the csproj configuration/platform.\r\n\r\nI have a solution to circumvent the issue, though it is not exactly long-term proof : we can add the following `after.$(SolutionName).sln.targets` file next to the solution, with the following content :\r\n\r\n```\r\n<Project>\r\n  <Target Name=\"_PatchNugetSolutionProjectReferences\" DependsOnTargets=\"_LoadRestoreGraphEntryPoints\" BeforeTargets=\"_FilterRestoreGraphProjectInputItems\" Returns=\"@(RestoreGraphProjectInputItems)\">\r\n    <ItemGroup>\r\n      <RestoreGraphProjectInputItems Update=\"$(RestoreGraphProjectInput)\">\r\n        <AdditionalProperties>Configuration=%(RestoreGraphProjectInputItems.Configuration); Platform=%(RestoreGraphProjectInputItems.Platform)</AdditionalProperties>\r\n      </RestoreGraphProjectInputItems>\r\n    </ItemGroup>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nWith this, I'm doing (essentially) what I'm saying is missing, i.e. regenerate the `AdditionalProperties` for the projects based on the actual `Configuration`/`Platform` pair that's provided and that the csproj will run on normally. It's not exactly perfect (this relies on the fact that `AdditionalProperties` only contains Configuration and Platform, and that the `Configuration` and `Platform` metadata attributes are indeed the csproj-level Configuration and Platform.\r\n\r\nThis solution seems to be sufficient on my end to circumvent the issue, but I think a proper fix would make more sense. I'm willing to give it a try if that can help, however I am unsure if what I'm proposing, even if cleaned up, is sufficient. A cleaner version of what I did would be to parse and rewrite the `AdditionalProperties` in `GetRestoreSolutionProjectsTask` to only modify `Configuration` and `Platform`. However, we'd still rely on the (maybe correct, but I'm not sure) assumption that the `Configuration` and `Platform` metadata are the actual csproj-level properties.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-01-24T03:30:24.6432757Z","RunDurationInMilliseconds":1535}