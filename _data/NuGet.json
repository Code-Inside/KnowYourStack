{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"NuGet 5.9 is a great release that brings a refined experience to everything package management. We’ve added a bunch of exciting quality of life improvements while also bringing you a more performant...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Today, we are announcing the public availability of NuGet’s vulnerability features that you can use to ensure your projects are vulnerability free and if not, to take action to securing your software...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21236235036","Type":"PullRequestEvent","CreatedAt":"2022-04-12T03:22:35","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9090","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.04.11] RI dev to main\" (#9090) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21234008592","Type":"PullRequestEvent","CreatedAt":"2022-04-12T00:28:34","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9089","RelatedDescription":"Merged pull request \"Make sure account and package links on the support requests page use the same host\" (#9089) at NuGet/NuGetGallery","RelatedBody":"Admin-only instance in support requests links accounts and packages to the originating host (www.nuget.org) which creates complications for processing support requests.\r\nThis change replaces absolute URLs with relative ones that works around the issue."},{"Id":"21232752815","Type":"PullRequestEvent","CreatedAt":"2022-04-11T22:31:37","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9089","RelatedDescription":"Opened pull request \"Make sure account and package links on the support requests page use the same host\" (#9089) at NuGet/NuGetGallery","RelatedBody":"Admin-only instance in support requests links accounts and packages to the originating host (www.nuget.org) which creates complications for processing support requests.\r\nThis change replaces absolute URLs with relative ones that works around the issue."},{"Id":"21232186331","Type":"PullRequestEvent","CreatedAt":"2022-04-11T21:52:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9087","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.04.08] RI dev to main\" (#9087) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21195176867","Type":"IssuesEvent","CreatedAt":"2022-04-08T23:05:53","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9088","RelatedDescription":"Opened issue \"[Deployment] 2022.04.08\" (#9088) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n## Changes\r\n\r\nhttps://github.com/NuGet/NuGetGallery/pull/9082\r\nhttps://github.com/NuGet/NuGetGallery/pull/9083 (https://github.com/NuGet/NuGetGallery/issues/8505)\r\nhttps://github.com/NuGet/NuGetGallery/pull/9038 (https://github.com/NuGet/NuGetGallery/issues/9037)\r\nhttps://github.com/NuGet/NuGetGallery/pull/9086\r\n\r\n## Progress\r\n\r\n* [ ] Merge PR (nothing to merge for FI): https://github.com/NuGet/NuGetGallery/pull/9087\r\n* [ ] Build: TBD\r\n* [ ] Release: TBD\r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"21195123159","Type":"PullRequestEvent","CreatedAt":"2022-04-08T22:59:23","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9087","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.04.08] RI dev to main\" (#9087) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21195103515","Type":"PullRequestEvent","CreatedAt":"2022-04-08T22:56:46","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9086","RelatedDescription":"Merged pull request \"SQL connection creation duration tracking\" (#9086) at NuGet/NuGetGallery","RelatedBody":"Added a client-side aggregated metric for SQL connection creation duration.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21235052230","Type":"IssuesEvent","CreatedAt":"2022-04-12T01:56:00","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11738","RelatedDescription":"Opened issue \"[Bug]: Cannot compile NuGet.Client due to duplicated PackageReference\" (#11738) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS Version 17.3.0 Preview 1.0 [32410.47.main], NuGet 6.3.0.10\n\n### Worked before?\n\nYes\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Clone NuGet.Client to dev in commit: e70d3c6167fc1c878acee98050784726152e4a31\r\n1. Open Dev PowerShell for VS 2022 IntPreview\r\n2. Run `cd path\\to\\repo`\r\n3. Run `git clean -xdf; .\\configure.ps1 -Force; .\\build.ps1 -Fast -SkipUnitTest -Binlog`\r\n\r\n### Expected\r\n\r\nCode compiles\r\n\r\n### Actual\r\n\r\n```\r\nC:\\src\\NuGet.Client.pmc\\test\\NuGet.Clients.Tests\\NuGet.PackageManagement.UI.Test\\NuGet.PackageManagement.UI.Test.csproj : error NU1504: Duplicate 'PackageReference' items found. Remove the duplicate items or u\r\n```\n\n### Verbose Logs\n\n```shell\nAttaching binlog\n```\n"},{"Id":"21233947875","Type":"IssuesEvent","CreatedAt":"2022-04-12T00:22:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11737","RelatedDescription":"Opened issue \"The trailing slash in GeneratePathProperty causes ROBOCOPY failures\" (#11737) at NuGet/Home","RelatedBody":"See https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1496902. \r\n\r\nOrioginal issue is [1522444](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1522444)"},{"Id":"21208242488","Type":"PullRequestEvent","CreatedAt":"2022-04-10T13:53:51","Actor":"Sjenica1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11736","RelatedDescription":"Opened pull request \"Create Sjenica1\" (#11736) at NuGet/Home","RelatedBody":"Authorized mit meine Account Sjenica1 github.com reufrujevic750@gmail.com"},{"Id":"21203968608","Type":"IssuesEvent","CreatedAt":"2022-04-09T22:27:57","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11721","RelatedDescription":"Closed issue \"[Bug]: TargetFrameworks netstandard2.0 does not set TargetFramework for inner build\" (#11721) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMicrosoft (R) Build Engine version 17.1.0+ae57d105c for .NET Framework\n\n### Worked before?\n\nYes, but not sure what broke it\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n I run msbuild l10n.proj /t:ReportVariables /verbosity:detailed with l10n.proj having these contents:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NuGet.CommandLine\" Version=\"6.1.0\" GeneratePathProperty=\"true\" />\r\n  </ItemGroup>\r\n  <Target Name=\"ReportVariables\" DependsOnTargets=\"restore\">\r\n\t<Message Text=\"TargetFramework=$(TargetFramework)\" />\r\n\t<Message Text=\"TargetFrameworks=$(TargetFrameworks)\" />\r\n\t<Message Text=\"ExcludeRestorePackageImports=$(ExcludeRestorePackageImports)\" />\r\n\t<Message Text=\"PkgNuGet_CommandLine=$(PkgNuGet_CommandLine)\" />\r\n  </Target>\r\n</Project>\r\n```\r\nAnd get this [output](https://github.com/NuGet/Home/files/8443894/verbose.output.txt)\r\nHere is the generated [l10n.proj.nuget.g.props](https://github.com/NuGet/Home/files/8443875/l10n.proj.nuget.g.props.txt) file.\r\nIt looks like it is generating that file correctly for TargetFramework netstandard2.0.\r\n\r\nNote that while TargetFramework is set properly during the parts of the build that happen during the restore, it is not set at the end when building the **ReportVariables** target. Therefore, the PkgNuGet_CommandLine variable is also not set.\r\nThe above is a stripped-down sample project file. The original is [here](https://github.com/sillsdev/libpalaso/blob/master/l10n/l10n.proj).\r\nI tried it on my current laptop and my old one (where it used to work, but possibly with an older tool set), which has VS 2019 (msbuild engine version 16.11.0+0538acc04). The only significant change to the project file itself was a few days ago, in an attempt to fix problem: \"The target \"GetVersion\" does not exist in the project\". Looking at the generated l10n.proj.nuget.g.props file created with that version, it was apparently targeting net461 instead of netstandard2.0, so my guess is that the newer tool sets stopped paying attention to TargetFramework, in favor of TargetFrameworks. It seems that changing TargetFramework to TargetFrameworks and moving from the deprecated GitVersionTask to GitVersion.MsBuild worked for the developer who did it, but it is still not working for me.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21203212587","Type":"IssuesEvent","CreatedAt":"2022-04-09T19:46:33","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11693","RelatedDescription":"Closed issue \"PRI error on building NuGet package\" (#11693) at NuGet/Home","RelatedBody":"### Impact\r\n\r\nOther\r\n\r\n### Describe the bug\r\n\r\nFacing PRI error when building the NuGet package. It is because changes in the dependent library#1 will not be updated into library#2.\r\n\r\nProject structure\r\n\r\nApp1\r\n\r\n- library#1\r\n- library#2 (using library#1)\r\n\r\nI'm referring to the latest library package whenever I'm opening App1. Here I'm facing an error in the below scenario.\r\n\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\nScenario | library#1 | library#2(Depends on library#1) | Comments\r\n-- | -- | -- | --\r\nChanges in library#1 cs file | library#1– version2 | library#2– version1library#1 – version1 | Working fine\r\nChanges in library#1 XAML file | library#1 – version2 | library#2– version1library#1 – version1 | It shows PRI error\r\nChanges in library#1 XAML file with the same version | library#1 – version1 | library#2– version1library#1 – version1 | Working fine but changes are not reflected\r\nNo changes in library#1 but changes in version | library#1 – version2 | library#2– version1library#1 – version1 | Working fine\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\nWe have the scenario \"If there is one change in library#1, then we need to repack multiple libraries like library#2. Otherwise it shows PRI error\". Is that any other way to resolve this issue?\r\n\r\n\r\n\r\n**Sample and package:** [pri error.zip](https://github.com/NuGet/NuGetGallery/files/8347630/pri.error.zip)\r\n\r\n### Repro Steps\r\n\r\n1. Open the provided sample\r\n2. Install the package provided\r\n3. Build the sample then it shows PRI error \r\n\r\n### Expected Behavior\r\n\r\n- It should not show a PRI error.\r\n- For changes in one library, we should not repack multiple libraries.\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"21202889702","Type":"IssuesEvent","CreatedAt":"2022-04-09T18:44:46","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11735","RelatedDescription":"Closed issue \"[Bug]: Install-Package using package consumer-provided casing not package owner-provided casing\" (#11735) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\n17.1.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a new .NET 6 project\r\n2. Open PMC\r\n1. Type `install-package system.linq.async`\r\n1. Wait for command to complete\r\n1. Open .csproj\r\n\r\nThe package ID casing is not the original from NuGet.org. Instead, it's casing that was provided in the command line.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"system.linq.async\" Version=\"6.0.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Verbose Logs\r\n\r\n```\r\nPM> install-package system.linq.async\r\nRestoring packages for C:\\Users\\jver\\Desktop\\VmDeploy\\VmDeploy\\VmDeploy.csproj...\r\nInstalling NuGet package system.linq.async 6.0.1.\r\nWriting assets file to disk. Path: C:\\Users\\jver\\Desktop\\VmDeploy\\VmDeploy\\obj\\project.assets.json\r\nRestored C:\\Users\\jver\\Desktop\\VmDeploy\\VmDeploy\\VmDeploy.csproj (in 30 ms).\r\nSuccessfully uninstalled 'Microsoft.Bcl.AsyncInterfaces 1.1.1' from VmDeploy\r\nSuccessfully installed 'Microsoft.Bcl.AsyncInterfaces 6.0.0' to VmDeploy\r\nSuccessfully installed 'System.Linq.Async 6.0.1' to VmDeploy\r\nExecuting nuget actions took 174 ms\r\nTime Elapsed: 00:00:00.3298956\r\n```\r\n"},{"Id":"21202875919","Type":"IssuesEvent","CreatedAt":"2022-04-09T18:42:03","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11735","RelatedDescription":"Opened issue \"[Bug]: Install-Package\" (#11735) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\n17.1.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Create a new .NET 6 project\r\n2. Open PMC\r\n1. Type `install-package system.linq.async`\r\n1. Wait for command to complete\r\n1. Open .csproj\r\n\r\nThe package ID casing is not the original from NuGet.org. Instead, it's casing that was provided in the command line.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"system.linq.async\" Version=\"6.0.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\n\n### Verbose Logs\n\n```shell\nPM> install-package system.linq.async\r\nRestoring packages for C:\\Users\\jver\\Desktop\\VmDeploy\\VmDeploy\\VmDeploy.csproj...\r\nInstalling NuGet package system.linq.async 6.0.1.\r\nWriting assets file to disk. Path: C:\\Users\\jver\\Desktop\\VmDeploy\\VmDeploy\\obj\\project.assets.json\r\nRestored C:\\Users\\jver\\Desktop\\VmDeploy\\VmDeploy\\VmDeploy.csproj (in 30 ms).\r\nSuccessfully uninstalled 'Microsoft.Bcl.AsyncInterfaces 1.1.1' from VmDeploy\r\nSuccessfully installed 'Microsoft.Bcl.AsyncInterfaces 6.0.0' to VmDeploy\r\nSuccessfully installed 'System.Linq.Async 6.0.1' to VmDeploy\r\nExecuting nuget actions took 174 ms\r\nTime Elapsed: 00:00:00.3298956\r\n```\n```\n"},{"Id":"21202814465","Type":"IssuesEvent","CreatedAt":"2022-04-09T18:30:40","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11734","RelatedDescription":"Opened issue \"[Bug]: PM UI version list only shows a single latest version\" (#11734) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.2.0 Preview 3.0 [32407.349.d17.2] \n\n### Worked before?\n\nYes, works in 17.1.1 and 17.3.0 preview 1.0\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Open PM UI for a .net project\r\n1. Switch to Browse tab\r\n1. Ensure NuGet.org is the selected source\r\n1. Search for `azure.resourcemanager`\r\n1. Observe the version list menu\r\n\r\n![image](https://user-images.githubusercontent.com/94054/162587120-48259e2f-33a6-46fa-95eb-473e7556afc9.png)\r\n\r\nIt should show many versions, not just one.\r\n\r\nI was unable to use \"Report an issue\" in VS because that option made VS lock up. I'm not sure how to report that.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":172,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-04-12T03:30:25.512649Z","RunDurationInMilliseconds":1433}