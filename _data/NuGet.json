{"Data":{"Blog":{"FeedItems":[{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15660988577","Type":"IssuesEvent","CreatedAt":"2021-03-23T20:20:11","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8455","RelatedDescription":"Closed issue \"[Feature Request] Private feeds on nuget.org locked by an ApiKey\" (#8455) at NuGet/NuGetGallery","RelatedBody":"Current NuGet gallery is for public consumption - it's like a single, PUBLIC feed. \r\n\r\nWould love to have a the ability to create private feeds, locked by api keys (which already exist).\r\n\r\nCurrently we could:\r\n- Use one of the -other- nuget server implementations that exist but this means we need to manage them (which most people don't need to want to manage anything, these days)\r\n- Use a commercial product. This is good for businesses that making a profit/want extra security+complience/advanced features/etc ... but there's still a section of the community that don't need all of that and/or don't make money (but still would like private feeds).\r\n\r\nSo it would be really awesome if this could be a feature that could be considered.\r\n\r\n\r\n(This idea was raised in #8314 )"},{"Id":"15646284391","Type":"PullRequestEvent","CreatedAt":"2021-03-23T00:32:29","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8447","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.03.09] RI of dev into master \" (#8447) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"15646233832","Type":"IssuesEvent","CreatedAt":"2021-03-23T00:26:08","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8463","RelatedDescription":"Opened issue \"[2021-03-22] Deployment\" (#8463) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\nChanges:\r\n\r\nworkaround for narrator announce the status changes of copy button (#8423)\r\n\r\n[SAS Token] Create get only uri methods for files. (#8424)\r\n\r\nImplementation of Cake tab with instructions for NuGet packages (#8434)\r\n\r\nUpdating the client libraries to 5.9 (#8442)\r\n\r\nImage allowlist (#8406)\r\n\r\nNew TFM logic for package ingestion (#8432)\r\n\r\nBugfix upload page & remove dev.azure from allowlist (#8449)\r\n\r\nAdd Cake dotnet tool directive instructions (#8440)\r\n\r\nAdd feature flag for new TFM heuristics (#8448)\r\n\r\nUse new TFM logic for package ingestion in backfill command (#8431)\r\n\r\nAdd IsVulnerable to Manage Packages view model (#8435)\r\n\r\nExtend vulnerabilities verification to metadata (#8412)\r\n\r\nAdd vulnerable warnings to Manage Packages page (#8436)\r\n\r\nAdd Knapcode.MiniZip to 3rd party signing (#8450)\r\n\r\nGive the manage packages page its own pva flag (perf concerns) (#8451)\r\n\r\nSymbols perf improvement (#8446)\r\n\r\nMerge pull request #8454 from NuGet/master\r\n\r\nProgress:\r\n* [ ] Merge RI: https://github.com/NuGet/NuGetGallery/pull/8447\r\n* [ ] Build: \r\n* [ ] Release: \r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"15645313365","Type":"IssuesEvent","CreatedAt":"2021-03-22T22:31:32","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8462","RelatedDescription":"Opened issue \"[Online safety] spec changes to contacts form\" (#8462) at NuGet/NuGetGallery","RelatedBody":"Create the facility in our contact form for customers to report safety concerns according to the categories and data we require. See the Microsoft Online Safety Policy."},{"Id":"15640750934","Type":"IssuesEvent","CreatedAt":"2021-03-22T16:36:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5222","RelatedDescription":"Closed issue \"Historical package download counts data\" (#5222) at NuGet/NuGetGallery","RelatedBody":"As far as I can tell, there's no way to get historical statistics data outside of the \"last six weeks\".\r\n\r\nFor example, if I wanted to track the downloads of a package every day, I currently need to constantly monitor the stats page and save the values somewhere, or I need to give up and just look at the last six weeks as a whole.\r\n\r\nAnother example is that we wanted to know how many downloads NuGet.org had at the end of 2017, but since we didn't spend NYE refreshing the Gallery's statistics, we aren't sure the exact number.\r\n\r\nWe should show the daily values for at least the last couple weeks.\r\n\r\nAnother thing to note is that the statistics job doesn't save snapshots of these reports, so we don't even have internal copies of the past data."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15664836406","Type":"IssuesEvent","CreatedAt":"2021-03-24T04:18:49","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10684","RelatedDescription":"Opened issue \"NU3028, NU3037 when trying to restore a project\" (#10684) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#16482**\r\n- Please respond to @IdkGoodName.\r\n\r\n---\r\n\r\n_From @IdkGoodName on Tuesday, March 23, 2021 5:00:59 PM_\r\n\r\nI seem to have issues trying to restore a C# or F# project. I get tons of NuGet signature errors and I don't know what it is caused by. I tried completely reinstalling .NET, but it doesn't seem to work.\r\n\r\n# Errors\r\n\r\nThis is what I get when trying to build C# console project:\r\n```\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\nC# library project:\r\n```\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Tasks.Extensions 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Runtime.CompilerServices.Unsafe 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Runtime.CompilerServices.Unsafe 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Runtime.CompilerServices.Unsafe 4.5.2' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Tasks.Extensions 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.2' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nF# console project:\r\n```\r\n/.../ProjectName.fsproj : error NU3028: Package 'FSharp.Core 5.0.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.fsproj : error NU3037: Package 'FSharp.Core 5.0.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.fsproj : error NU3028: Package 'FSharp.Core 5.0.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\n# Info\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.201\r\n Commit:    a09bd5c86c\r\n\r\nRuntime Environment:\r\n OS Name:     artix\r\n OS Version:  20201128\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.201/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.4\r\n  Commit:  f27d337295\r\n\r\n.NET SDKs installed:\r\n  5.0.201 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```"},{"Id":"15662690747","Type":"IssuesEvent","CreatedAt":"2021-03-23T23:08:19","Actor":"aaronla-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10683","RelatedDescription":"Opened issue \"Feature request: support subject+issuer trust instead of by cert thumbprint\" (#10683) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nPresently, nuget only supports whitelisting nuget package authors by the SHA256 hash of their signing cert. This can be a problem when certificates are rotated, where the signing identity has not changed, but the thumbprint of the certificate does change. This problem is thoroughly documented in the blog post [The Microsoft author signing certificate will be updated as soon as November 1st, 2020](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/).\r\n\r\nRequesting an option to provide a certificate identity, in the form of a common name or dns name, as well as the identity of the issuer cert (both identities must match), in leiu of a cert thumbprint.\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15662523976","Type":"IssuesEvent","CreatedAt":"2021-03-23T22:47:48","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10682","RelatedDescription":"Opened issue \"Add:  fails on unsigned package under \"require\" client policy without a clear indication of why\" (#10682) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):  NuGet.exe\r\n\r\nProduct version:  5.9.0.7134\r\n\r\nWorked before? If so, with which NuGet version:  No\r\n\r\n## Repro steps and/or sample project\r\n1.  Create a test directory.\r\n2.  In the test directory create a NuGet.config file with the following content:\r\n```XML\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <config>\r\n    <add key=\"signatureValidationMode\" value=\"require\" />\r\n  </config>\r\n</configuration>\r\n```\r\n3.  Download [System.Memory 4.5.4](https://www.nuget.org/api/v2/package/System.Memory/4.5.4) into the test directory.\r\n4.  Download [NuGet.exe 5.9.0](https://dist.nuget.org/win-x86-commandline/v5.9.0/nuget.exe) into the test directory.\r\n5.  Open a command prompt, path to the test directory and execute:\r\n```Shell\r\nC:\\Test>nuget.exe add System.Memory.4.5.4.nupkg -Source .\\packages\r\n```\r\n**Expected result:**\r\nAn error indicating that signatureValidationMode is set to require, so packages are allowed only if signed by trusted signers; however, this package is unsigned.\r\n\r\n**Actual result:**\r\n```Shell\r\nNU3000:\r\n```\r\nNote:  This is similar to https://github.com/NuGet/Home/issues/6903 but for the `add` command instead of `install`.\r\n\r\n### Verbose Logs\r\n```\r\nNuGet Version: 5.9.0.7134\r\nAcquiring lock for the installation of System.Memory 4.5.4\r\nAcquired lock for the installation of System.Memory 4.5.4\r\nPackageSignatureVerificationLog: PackageIdentity: System.Memory.4.5.4 Source:  PackageSignatureValidity: False\r\nNU3000:\r\nNuGet.Packaging.Signing.SignatureException\r\n   at NuGet.Packaging.PackageExtractor.<VerifyPackageSignatureAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Packaging.PackageExtractor.<>c__DisplayClass5_0.<<InstallFromSourceAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__4`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__4`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Packaging.PackageExtractor.<InstallFromSourceAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.OfflineFeedUtility.<AddPackageToSource>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.AddCommand.<ExecuteCommandAsync>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n"},{"Id":"15660508590","Type":"IssuesEvent","CreatedAt":"2021-03-23T19:46:54","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10430","RelatedDescription":"Closed issue \"Nuget restore/package download C# API\" (#10430) at NuGet/Home","RelatedBody":"This was raised during development of dotnet tools. The decision was \"try to use a temp project and restore the package for now\". However, after using this mechanism for 2 years. We still wish to have a C\\# API to do restore, especially considering we would reuse the dotnet tool install component to install dotnet SDK workloads. Dotnet SDK workloads installation experience needs to be bulletproof or the user will be blocked using Xamarin.\r\n\r\n## Issues for existing temp project approach\r\n\r\n1.  Multiple IO operation and process hops caused unreliability and they are very hard to reproduce and resolve. First a file needs to be written to the disk. And a restore in a separate process need to write more files. The following 2 issues are likely caused by race conditions. However, I cannot reproduce them. The cleanup of the temporary files is also tricky.\r\n\r\n    a.  [.NET 5: Unable to install some .NET tools (dotnet tool install) · Issue \\#14547 · dotnet/sdk (github.com)](https://github.com/dotnet/sdk/issues/14547)\r\n\r\n    b.  [Failed to install tool package \\... · Issue \\#11459 · dotnet/sdk (github.com)](https://github.com/dotnet/sdk/issues/11459)\r\n\r\n2.  Hard-to-act-on error messages. Because the communication between SDK and nuget restore is via the command line. When error happens, SDK can only redirect the output of nuget and SDK cannot give a more specific guidance for the user to act on. That results the long list of \"probably this happened.\" <https://docs.microsoft.com/en-us/dotnet/core/tools/troubleshoot-usage-issues#executable-file-not-found>\r\n\r\n3.  Environment leak in. Because there is an explicit msbuild run. Environment variables get leaked in. There is no good way to prevent them.\r\n\r\n    a.  [\\`dotnet tool install \\...\\` fails if environment variable RESTOREPROJECTS is set · Issue \\#10798 · dotnet/sdk (github.com)](https://github.com/dotnet/sdk/issues/10798)\r\n\r\n4.  Escape unescaped madness. Because the communication is done via the command line. SDK need to carefully escape/unescape characters. It is not trivial and error prone.\r\n\r\n## Requirement\r\n\r\nIt should be a replacement for the [temp project](https://github.com/dotnet/sdk/blob/b91b88aec2684e3d2988df8d838d3aa3c6240a35/src/Cli/dotnet/ToolPackage/ToolPackageInstaller.cs#L179). It should select correct TFM and generate asset.json. However, if we can get an API that can simply download package to a specific location, that would fit net6.0 requirement. But it won't help us making tools experience better.\r\n"},{"Id":"15658065567","Type":"IssuesEvent","CreatedAt":"2021-03-23T17:11:53","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10681","RelatedDescription":"Opened issue \"INuGetProjectService.GetInstalledPackagesAsync throws before receiving CPS project system nomination\" (#10681) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 16.9\r\n\r\nWorked before? If so, with which NuGet version: new API in 16.8\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\nIn VS 16.8, we introduced a new API `INuGetProjectService.GetInstalledPackagesAsync`, an async way to get installed packages for a project.  The API's contract explicitly says that a result with a suitable status will be returned. However, if this project is queried before we receive nomination info, then the API is throwing an exception.\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15657508123","Type":"IssuesEvent","CreatedAt":"2021-03-23T16:43:50","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10680","RelatedDescription":"Closed issue \"RestoreNetCore_WithCustomAliases_WritesConditionWithCorrectAlias test started failing due to unsupported platforms on net5\" (#10680) at NuGet/Home","RelatedBody":"`RestoreNetCore_WithCustomAliases_WritesConditionWithCorrectAlias` started failing on CI with the below error message.\r\n\r\n`C:\\Program Files\\dotnet\\sdk\\5.0.201\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(109,5): error NETSDK1139: The target platform identifier android was not recognized. `\r\n[C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\proj\\proj.csproj]\\r\\n\\n\\nNuGet Version: 5.10.0.7339\\r\\nRestoring NuGet packages for solution C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\solution.sln.\\r\\nMSBuild auto-detection: using msbuild version '16.9.0.11203' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\\r\\nMSBuild P2P timeout [ms]: 120000\\r\\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\AzDevOps\\AppData\\Local\\Temp\\1\\NuGetScratch\\rvk3acx2.lwl.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\AzDevOps\\AppData\\Local\\Temp\\1\\NuGetScratch\\vc4lc0od.kv2.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\a\\5\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\bin\\release\\net472\\NuGet\\NuGet.exe\" /p:RestoreSolutionDirectory=\"C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\\\\" /p:SolutionDir=\"C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\\\\" /p:SolutionName=\"solution\"\\r\\nNuGet.CommandLine.ExitCodeException: Exception of type 'NuGet.CommandLine.ExitCodeException' was thrown.\\r\\n   at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext()\\r\\n\\r\\nExpected: True\\r\\nActual:   False\r\n\r\nAs per https://github.com/NuGet/Home/issues/10195#issuecomment-717611985 comment it looks like `net5.0-windows is the only supported platform specific TFM in net5.0.`\r\n\r\nSimilar issue fixed here - https://github.com/xamarin/xamarin-android/pull/5007"},{"Id":"15656970736","Type":"IssuesEvent","CreatedAt":"2021-03-23T16:10:47","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10654","RelatedDescription":"Closed issue \"Vs2019 v16.9.0: Switching tabs in NuGet Package Manager from \"Updates\" to \"Installed\" doesn't update the frame.\" (#10654) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: 16.9 GA (VS Community D16.9\\31025.194) and Main\\31110.293 + NuGet Client Dev\\5.10.0.7160, \r\n\r\nWorked before? If so, with which NuGet version: 16.8\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\nhttps://dev.azure.com/devdiv/DevDiv/_workitems/edit/1288980\r\n\r\n> When I open the NuGet package manager for my project, I see the “Installed” tab.\r\n> Now when I switch tabs to “Updates”, wait until it displays “No packages found” and then switch back to “Installed”, the pane is not updated correctly.\r\n> This doesn’t happen if I switch between “Browse” and “Installed”. It also doesn’t happen if I switch back from “Update” to “Installed” before the latter finished loading.\r\n\r\n•\tClick “Installed” Tab -> Click “Updates” Tab -> Click “Installed” Tab --- Repro\r\n\r\nIn one word, the refresh in “Installed” tab only doesn’t work when switching to “Installed” tab from “Updates” Tab whose previous tab must be “Installed”.\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15656043630","Type":"IssuesEvent","CreatedAt":"2021-03-23T15:15:11","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10680","RelatedDescription":"Opened issue \"RestoreNetCore_WithCustomAliases_WritesConditionWithCorrectAlias test started failing due to unsupported platforms on net5\" (#10680) at NuGet/Home","RelatedBody":"`RestoreNetCore_WithCustomAliases_WritesConditionWithCorrectAlias` started failing on CI with the below error message.\r\n\r\n`C:\\Program Files\\dotnet\\sdk\\5.0.201\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(109,5): error NETSDK1139: The target platform identifier android was not recognized. `\r\n[C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\proj\\proj.csproj]\\r\\n\\n\\nNuGet Version: 5.10.0.7339\\r\\nRestoring NuGet packages for solution C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\solution.sln.\\r\\nMSBuild auto-detection: using msbuild version '16.9.0.11203' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\\r\\nMSBuild P2P timeout [ms]: 120000\\r\\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\AzDevOps\\AppData\\Local\\Temp\\1\\NuGetScratch\\rvk3acx2.lwl.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\AzDevOps\\AppData\\Local\\Temp\\1\\NuGetScratch\\vc4lc0od.kv2.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\a\\5\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\bin\\release\\net472\\NuGet\\NuGet.exe\" /p:RestoreSolutionDirectory=\"C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\\\\" /p:SolutionDir=\"C:\\a\\5\\s\\.test\\work\\138cbb27\\22e1160c\\solution\\\\\" /p:SolutionName=\"solution\"\\r\\nNuGet.CommandLine.ExitCodeException: Exception of type 'NuGet.CommandLine.ExitCodeException' was thrown.\\r\\n   at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext()\\r\\n\\r\\nExpected: True\\r\\nActual:   False\r\n\r\nAs per https://github.com/NuGet/Home/issues/10195#issuecomment-717611985 comment it looks like `net5.0-windows is the only supported platform specific TFM in net5.0.`\r\n\r\nSimilar issue fixed here - https://github.com/xamarin/xamarin-android/pull/5007"},{"Id":"15651421653","Type":"IssuesEvent","CreatedAt":"2021-03-23T10:10:18","Actor":"tmds","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10679","RelatedDescription":"Opened issue \"NuGetScratch lock files are not cleaned up\" (#10679) at NuGet/Home","RelatedBody":"NuGetScratch lock files are not removed when the `dotnet` command that created them exited.\r\n\r\nFor example:\r\n```sh\r\n$ dotnet --version\r\n5.0.102\r\n$ tree NuGetScratch\r\nNuGetScratch [error opening dir]\r\n\r\n0 directories, 0 files\r\n$ dotnet new console -o console\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on console/console.csproj...\r\n  Determining projects to restore...\r\n  Restored /tmp/console/console.csproj (in 126 ms).\r\nRestore succeeded.\r\n\r\n$ tree NuGetScratch\r\nNuGetScratch\r\n└── lock\r\n    ├── 60b0ce340dbeb990efe4eb3dc37072e604096ae1\r\n    ├── 7d89499164269649a3ec6f9c8b4f921bf93d8c0a\r\n    └── 9bcf2ad385812bad4415e1035a0688c2be3aa708\r\n\r\n1 directory, 3 files\r\n\r\n```"},{"Id":"15647181430","Type":"IssuesEvent","CreatedAt":"2021-03-23T02:40:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10678","RelatedDescription":"Opened issue \"NuGet should not eagerly start restore when there are pending design time builds\" (#10678) at NuGet/Home","RelatedBody":"A couple of real time scenarios here: \r\n\r\n* A user edited a common file such as `Directory.Build.Props`\r\n* Git operations such as branch switch.\r\n\r\nNuGet has an easy tell about when to restore on solution load (wait for all the projects to be ready), during branch switching, that's not obvious because most of the projects are already ready.\r\n\r\nThis issue is blocked on [1283992](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1283992)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":86,"FavoriteCount":37,"RawContent":null},{"Id":"1366458126141120525","CreatedAt":"2021-03-01T18:39:39+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nLate last year we launched a https://t.co/F9kiKfvqkS survey to ask customers about their… https://t.co/mgpdDNj3is","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1366422928519233536","CreatedAt":"2021-03-01T16:19:47+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nIf you have a moment, please take some time to leave us feedback! We really appreciate it ♥ https://t.co/we1sP6mT8q","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":3,"RawContent":null},{"Id":"1365020887758614529","CreatedAt":"2021-02-25T19:28:35+00:00","UserScreenname":"nuget","Text":"🔐 https://t.co/F9kiKfvqkS security update 🔐\n\nThe https://t.co/F9kiKfvqkS repository signing certification will be u… https://t.co/jur1vcuf0B","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"1362857576422137856","CreatedAt":"2021-02-19T20:12:21+00:00","UserScreenname":"nuget","Text":"🙌 New doc just dropped! 🙌\n\nCheck out our latest recommendations to help secure your software supply chain, for pack… https://t.co/odu3ygBOvR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1355252975678189569","CreatedAt":"2021-01-29T20:34:23+00:00","UserScreenname":"nuget","Text":"For users affected by the Debian 10 Buster CA Certificate issue, we now have a documented mitigation available.\n\nPl… https://t.co/VhGXtYI6aj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2021-03-24T05:30:33.1712483Z","RunDurationInMilliseconds":1711}