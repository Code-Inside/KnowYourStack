{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24375253109","Type":"IssuesEvent","CreatedAt":"2022-10-03T23:54:33","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8654","RelatedDescription":"Closed issue \"Replace DMCA reason with link to official Microsoft DMCA portal on 'Report Abuse' page\" (#8654) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nRight now, the 'Report Abuse' page shows the following when users choose to report a DMCA violation. \r\n![image](https://user-images.githubusercontent.com/23298667/123144183-4230ed00-d410-11eb-821f-7eb714350151.png)\r\n\r\nThere are several issues with this form:\r\n- No information about the six elements of a DMCA report needed to act, resulting in additional communication between the user and our team to act\r\n- Single text box for input, resulting in difficult to parse information\r\n- Reports come to our team in email, which can be lost in inboxes\r\n- Users must submit a separate form for each package being reported\r\n- There is a separate, Microsoft-wide DMCA portal that accepts DMCA violations related to NuGet. As a result, the team is receiving DMCA requests from two different sources, leading to confusion\r\n\r\n### Describe the solution you'd like\r\nAfter conversation with CELA and DMCA agent, we got permission to link to the [Microsoft DMCA portal](https://msrc.microsoft.com/report/infringement) from NuGet.org. In other words, users will be redirected to the overall Microsoft DMCA portal to submit their report.\r\n\r\n![image](https://user-images.githubusercontent.com/23298667/123150737-8ecbf680-d417-11eb-89a7-0a0386734580.png)\r\n\r\nUpon clicking on the hyperlink, the user is taken to \r\n![image](https://user-images.githubusercontent.com/23298667/123150797-9e4b3f80-d417-11eb-887b-718313c1144a.png)\r\n\r\nNote the detailed information fields below.\r\n\r\n![image](https://user-images.githubusercontent.com/23298667/123150854-b02ce280-d417-11eb-8792-b1f47a69575a.png)\r\n\r\nThere are several benefits to this:\r\n- All DMCA reports will go through the Microsoft portal, instead of some through the portal and some through email\r\n- Users have more guidance on what information they need to provide within the report, resulting in comprehensive reports that do not require follow-up communications from our team to get needed details\r\n- The official Microsoft DMCA form has a better schema for the report data coming in because it has individual fields for each element of a DMCA complaint. This allows us to better query the data if needed (i.e. checking if a package author has been reported many times for violating DMCA.) \r\n- DMCA reports that go through the Microsoft portal are stored in ServiceNow, which our team can connect to in order to track the status of reports and ensure none are overlooked\r\n\r\n### Additional context\r\nRelated to https://github.com/NuGet/NuGetGallery/issues/6364\r\n\r\nNote that the official Microsoft DMCA portal actually starts here: ![image](https://user-images.githubusercontent.com/23298667/123145534-c8016800-d411-11eb-9848-f6a38979566f.png)\r\nTo get to the form linked above, users have to click on 'Services' and again afterwards to reach the actual form. To reduce friction for users, we will link to the actual form directly. "},{"Id":"24374788572","Type":"IssuesEvent","CreatedAt":"2022-10-03T23:14:18","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9269","RelatedDescription":"Opened issue \"[A11y]Syntax highlighting in Read Mes does not have sufficient contrast.\" (#9269) at NuGet/NuGetGallery","RelatedBody":"Environment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org/packages/AutoMapper/\r\nWindows version: Windows 10\r\nChromiumEdge Version: 105.0.1343.42 (Official Build) (64-bit)\r\n\r\nChecking the URL above, the syntax highlighting in the readme does not meet sufficient contrast requirements."},{"Id":"24372050115","Type":"PullRequestEvent","CreatedAt":"2022-10-03T20:13:25","Actor":"ianrathbone","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9268","RelatedDescription":"Opened pull request \"Add instructions to install MSBuildSdk packages\" (#9268) at NuGet/NuGetGallery","RelatedBody":"- Added \"IsMSBuildSdkPackageType\" to determine whether a package is of type MSBuildSdk.\r\n- DisplayPackage view modified to show specific instructions for SDK types in project files as per #8800 \r\n\r\nLet me know what you think, I've tested this on a few different packages of different types "},{"Id":"24371389775","Type":"PullRequestEvent","CreatedAt":"2022-10-03T19:37:35","Actor":"toseni","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9266","RelatedDescription":"Closed pull request \"update Download table heading\" (#9266) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"24371368107","Type":"PullRequestEvent","CreatedAt":"2022-10-03T19:36:24","Actor":"toseni","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9267","RelatedDescription":"Opened pull request \"update correct place\" (#9267) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"24370985970","Type":"PullRequestEvent","CreatedAt":"2022-10-03T19:16:07","Actor":"toseni","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9266","RelatedDescription":"Opened pull request \"update Download table heading\" (#9266) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"24369688453","Type":"IssuesEvent","CreatedAt":"2022-10-03T18:08:32","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9218","RelatedDescription":"Closed issue \"[Mitigated incident] api.nuget.org is failing for some requests \" (#9218) at NuGet/NuGetGallery","RelatedBody":"## Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Current status: mitigated as of 2022-09-07 4:32 PM UTC\r\n\r\n## Problem description\r\n\r\nWhile restoring packages from https://api.nuget.org/v3/index.json, you may encounter request timeouts or errors. This is an active incident that the NuGet.org team is investigating.\r\n\r\nIf you are facing an issue, please post a comment here with your approximate geographic location (country) and the specific error you are encountering.\r\n\r\n## Timeline (UTC) - 2022-09-05\r\n\r\n11:11 AM - first indication of failure from Application Insights availability web tests\r\n11:47 AM - Severity 2 incident raised, on-call engineering called\r\n12:08 PM - primary CDN in US and EU failed over to secondary CDN\r\n12:09 PM - monitoring indicates that the mitigation is successful, expecting no more user impact\r\n12:14 PM - status page manually updated: https://status.nuget.org/\r\n12:18 PM - tweet sent out: https://twitter.com/nuget/status/1566762590335893505\r\n\r\n## Timeline (UTC) - 2022-09-07\r\n\r\n4:14 PM - first indication of failure from Application Insights availability web tests\r\n4:19 PM - Severity 2 incident raised, on-call engineering called\r\n4:28 PM - primary CDN in US and EU failed over to secondary CDN\r\n4:32 PM - last indication of failure from monitoring"},{"Id":"24340184491","Type":"IssuesEvent","CreatedAt":"2022-10-01T15:58:43","Actor":"KennethDotNet","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9265","RelatedDescription":"Opened issue \"[Feature]: Sign up / pay for licences when using opensource projects in medium to big enterprise companies\" (#9265) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI work for a small company and sometimes we come over projects (like dueende and epplus and more) where I would like to pay licences directly to the OSS when downloading the nuget package.  In azure devops we could ha a licence collection for the company.  Microsoft/Nuget could bill the company over the azure bill (even taking a handling fee, which we would gladly pay for making it easy for both the company and the oss project). \n\n### The Elevator Pitch\n\nIf nuget worked like an app store it would greatly help OSS projects to collect licences fees from companies. Nuget would enable OSS project to actually make a living of their passion.  Companies needs to support OSS by paying licences when having the revenue to do so. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"24333194873","Type":"IssuesEvent","CreatedAt":"2022-09-30T21:46:54","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9264","RelatedDescription":"Opened issue \"[Feature]Front Page announcement tools\" (#9264) at NuGet/NuGetGallery","RelatedBody":"Let's create an admin tool to enable dynamically updating the Front page without having to redeploy the entire service."},{"Id":"24330387501","Type":"IssuesEvent","CreatedAt":"2022-09-30T18:49:11","Actor":"taori","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9262","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Prerelease sorting works in an unexpected way.\" (#9262) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nImagine we have 2 packages \r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha9\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha11\r\n\r\n9 is considered most recent \r\n\r\nI am willing to contribute a fix btw.\r\n\r\nThis also affects the integration within VS Nuget - providing the wrong packages.\r\n\n\n### Repro Steps\n\nSee description\n\n### Expected Behavior\n\nwith these urls:\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/latest\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/latest/prerelease\r\n\r\ni would expect alpha 11 to be the latest package (assuming there are no release packages) for all 3 of those urls.\r\n\r\nIdeally each sequence of numerics, alphabet and non alphanumerics creates a pattern group resulting in a sorting schema of \r\n\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-beta4.1\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-beta1.5\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.1-alpha1.5\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.13\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.12\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7.4\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-beta7\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha11\r\nhttps://www.nuget.org/packages/Amusoft.Toolkit.Http/1.0.0-alpha9\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24330256073","Type":"PullRequestEvent","CreatedAt":"2022-09-30T18:41:29","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9261","RelatedDescription":"Merged pull request \"Refactored PackageService code for use by Search-by-TFM\" (#9261) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4577\r\n\r\nWe need to reuse some asset framework logic from PackageService in NuGet.Jobs' Catalog2AzureSearch for Search-by-TFM, and moving this logic to NuGetGallery.Core would allow us to reuse this code with minimal changes.\r\n\r\nThis change:\r\n* Creates the AssetFrameworkHelper, which now holds the asset framework logic in its GetAssetFrameworks method\r\n* Redirects the previous GetSupportedFrameworks method in PackageService (NuGetGallery.Services) to this logic\r\n\r\nAll previous tests passed after this change."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24376003715","Type":"IssuesEvent","CreatedAt":"2022-10-04T00:59:23","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12047","RelatedDescription":"Closed issue \"[Bug]: Restore corrupts NuGet cache\" (#12047) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 6.0.400\n\n### Worked before?\n\nPre dotnet 5.0.0?\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWe have seen several instances of \"corrupt\" nuget caches, possibly be caused by different parallel dotnet builds requiring different nuget package versions. \r\n\r\nSay one build requires version 1.0.0 and another 2.0.0 of a nuget package.\r\n1.0.0 was previously restored correctly.\r\nWe then build a project requiring version 2.0.0 requiring a fresh restore of a new nuget package.\r\nThat package is restored correctly, but somehow sometimes one of the 2.0.0 dlls, e.g. lib/net48 makes it way to the 1.0.0 lib/net48 nuget folder.\r\nIf these version are not compatible, we get compile errors the next time compiling a project that requires 1.0.0.\r\nIf they are compatible it might work by stealth and nobody will notice.\r\nWe did not see this previously, but now that we strong name our nuget packages, we see unexpected binding redirects.\r\n\r\nWe use central package management\n\n### Verbose Logs\n\n_No response_"},{"Id":"24374563562","Type":"IssuesEvent","CreatedAt":"2022-10-03T22:57:03","Actor":"DJackman123","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12125","RelatedDescription":"Opened issue \"[CPM]: Transitive pinning feature should allow for pinning a minimum version\" (#12125) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe\n\n### The Elevator Pitch\n\nInstead of pinning only a specific version of a transitive dependency, we would like to pin a minimum version (or version range) for the package.  That way if a particular dependency tree used a higher version that the pinned version no error would occur, making it easier to maintain the pinned version.\n\n### Additional Context and Details\n\nOne of the uses for transitive pinning in Central Package Management will be for avoiding vulnerable versions of packages.  For example, we recently had to update dependencies for Newtonsoft.Json because versions prior to 13.0.1 had a vulnerability.  Using transitive pinning to pin version 13.0.1 for all projects is a great way to make sure none of them pick up a vulnerable version in their respective dependency trees.\r\nHowever, in the future, when one of our dependencies uses version 13.0.2, the project with that dependency will now get a package downgrade error (NU1109).  Now I have to maintain the pinned version along with my direct dependencies even though none of my projects directly depend on it.  I would prefer to have a way to pin a minimum version (or version range) instead of a specific version of a transitive package.  In other words, a way to tell CPM that Newtonsoft.Json needs to be >= 13.0.1 instead of strictly equal to 13.0.1."},{"Id":"24372040974","Type":"IssuesEvent","CreatedAt":"2022-10-03T20:12:57","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11006","RelatedDescription":"Closed issue \"Prototype producer-side package shading in NuGet\" (#11006) at NuGet/Home","RelatedBody":""},{"Id":"24371605528","Type":"IssuesEvent","CreatedAt":"2022-10-03T19:49:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8428","RelatedDescription":"Closed issue \"Perf:  reduce memory allocations in NuGet.ContentModel.Infrastructure\" (#8428) at NuGet/Home","RelatedBody":"Internal bug [958532](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/958532)."},{"Id":"24369473662","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:57:10","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12104","RelatedDescription":"Closed issue \"Fix E2E BuildIntegratedLockFileIsCreatedOnBuild\" (#12104) at NuGet/Home","RelatedBody":"`BuildIntegratedLockFileIsCreatedOnBuild` end to end is consistently failing on both PR build and official builds.\r\n\r\nI can't figure out why at the moment, so due to time constraints I'm skipping the test. Some investigation should be done to determine if there is a product bug here or not.\r\n\r\nCI log prints `Test timed out after 600 seconds` and has no stack trace.\r\n\r\n**EDIT**: \r\nAfter further investigation by running tests locally I got error `Test-BuildIntegratedLegacyCleanDeleteCacheFile. Exception message: Exception calling \"CleanSolution\" with \"0\" argument(s): \"Cannot perform this action, a Build, Debug, Deploy, Run, or Clean action is in progress.\"`.  When I ran the same tests locally again 17.4, tests failed because of `Build must be stopped before the solution can be closed` error.\r\n\r\n@dominoFire was able to reproduce this issue on CI machine.\r\n\r\n<img width=\"1017\" alt=\"image\" src=\"https://user-images.githubusercontent.com/52756182/192383744-fdcb2091-d94c-4f4c-8f09-32f5959dae74.png\">\r\n\r\nWhen I executed end to end tests locally on VS 2022 d17.3 all the tests passed. \r\n\r\nThis issue was already reported to developer community https://developercommunity.visualstudio.com/t/VS2022-always-in-build-never-finish-/10119082. I noticed that NuGet end to end tests are encountering `Build must be stopped before the solution can be closed` error even for non-SDK style projects. Hence created https://developercommunity.visualstudio.com/t/VS-2022-174-preview-versions-throws-a/10157815 feedback ticket for the partner team."},{"Id":"24368932339","Type":"PullRequestEvent","CreatedAt":"2022-10-03T17:28:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12124","RelatedDescription":"Opened pull request \"Design for allowing restore of multiple equivalent frameworks\" (#12124) at NuGet/Home","RelatedBody":"cc @dsplaisted"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":126,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-10-04T03:30:25.1537801Z","RunDurationInMilliseconds":1358}