{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41036997715","Type":"PullRequestEvent","CreatedAt":"2024-08-14T22:24:29","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10130","RelatedDescription":"Opened pull request \"Move to 5.0.0-*, put all dependency packages in NuGet.Server.Common.sln \" (#10130) at NuGet/NuGetGallery","RelatedBody":"Currently we have a mix of package versions and assemblies for our OSS. Also, we have a mix of release builds the produce dependency packages. This PR simplifies the situation and moves our versions forward so it's clear at a glance you're looking at \"a repo merged\" state.\r\n\r\nSummary of changes:\r\n- Add all shared projects (projects that produce dependency packages) into NuGet.Server.Common.sln\r\n- Update all assembly versions to be `5.0.0` (compiles to `5.0.0.0`)\r\n- Update all package versions to be `5.0.0-*` to match.\r\n- Add some validations to `build.ps1` so we don't shoot ourselves in the foot\r\n  - Assembly info is not set more than once per project\r\n  - Produce all dependency .nupkgs in the common build\r\n- Move some logic into `build.shared.ps1` which we will reduce duplication with our internal build (build_Ev2.ps1)\r\n- Remove AccountDeleter job nuspec pack since this must be produced in our internal web app release, which has shims\r\n- Delete unused .nuspec and .ps1"},{"Id":"41036795258","Type":"PullRequestEvent","CreatedAt":"2024-08-14T22:13:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10129","RelatedDescription":"Opened pull request \"First ResolveUri in NuGet.Services.Storage\" (#10129) at NuGet/NuGetGallery","RelatedBody":"This fixes the following jobs on the new storage SDK.\r\n\r\n`ResolveUri` was not working since the container URL lost it's trailing `/`, leading to `new Uri(base, blob)` behavior changing. The cursor URL was resolving to the root of the blob storage account, not in the storage container. \r\n\r\n`GitHubVulnerabilities2Db` and `GitHubVulnernabilities2v3` were impacted.\r\n\r\nSummary of changes:\r\n- Fix `Storage.ResolveUri` to be tolerant of trailing and leading `/`. This fixes the GitHubVulnerabilities job cursors.\r\n- Fix `DateTimeOffset.MinValue` comparison.\r\n  - On a UTC machine `DateTimeOffset.MinValue == DateTime.MinValue` (our VMs). Locally this is not true. This makes local debugging harder."},{"Id":"41017099250","Type":"IssuesEvent","CreatedAt":"2024-08-14T11:11:10","Actor":"Kesavaraman123","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10128","RelatedDescription":"Opened issue \"Latest NuGet Version not displaying correctly in Visual Studio Code\" (#10128) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nHi Team,\r\n\r\nIn Visual Studio Code, our Syncfusion NuGet packages are not displaying the correct latest version number. For example, the latest version of the **Syncfusion.Blazor** (https://www.nuget.org/packages/Syncfusion.Blazor/26.2.9) NuGet package is **26.2.9**, but it is incorrectly showing **18.1.0.42** as the latest version in Visual Studio Code.\r\n\r\nWe discovered that when retrieving the version list using the **NuGet Extension** in Visual Studio Code (via NuGet API - https://api.nuget.org/v3-flatcontainer/syncfusion.blazor/index.json), the versions are fetched in the wrong order, leading to the incorrect version (18.1.0.42) being marked as the latest. This issue is affecting various Syncfusion NuGet packages, each showing different incorrect versions as the latest. Could you please investigate and resolve this issue as soon as possible?\r\n![image](https://github.com/user-attachments/assets/c33a8964-8618-4807-9603-aeb2a8051aa9)\r\n\r\n \r\nRegards,\r\nV. Kesavaraman\r\n\n\n### Repro Steps\n\n1. Open Visual Studio Code\r\n2. Open Blazor Project\r\n3. Install Syncfusion.Blazor NuGet package\r\n4. Try to update **Syncfusion.Blazor** NuGet package.\r\n5. 18.1.0.42 is showing as latest version but actual latest version is 26.2.9\r\n![image](https://github.com/user-attachments/assets/6cc8806c-4988-4659-bb21-dc5d2eb953de)\r\n\n\n### Expected Behavior\n\nFor  **Syncfusion.Blazor** NuGet package 26.2.9 version has to be shown as latest version.\r\n![image](https://github.com/user-attachments/assets/549023e9-c1b5-413d-92f2-f6e4afc4a37b)\r\n\n\n### Screenshots\n\n![image](https://github.com/user-attachments/assets/57db89bc-c7ff-4ff6-a6ea-a134d063e3a1)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"41001066464","Type":"PullRequestEvent","CreatedAt":"2024-08-13T22:43:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10123","RelatedDescription":"Merged pull request \"Fix Monitoring2Monitoring blob name generation, handle size mismatch when checking if blobs are synchronized\" (#10123) at NuGet/NuGetGallery","RelatedBody":"This PR fix two bugs I've found in `dev` based on SDK move (1 and 2, below), and one pre-existing bug found due to blob corruption in DEV (3, below)\r\n\r\nSummary of changes:\r\n1. Scrub blob URL in logging, so we don't log SAS (query string)\r\n2. Handle mismatch of scheme between base URL (http) and blob item from list blobs (https)\r\n   - This difference was leading to a substring being off by 1 (\"http\" is shorter than \"https\")\r\n   - It would be a much larger change to make it so we never use \"http\" in memory, this behavior pre-existed in the SDK move ([example](https://github.com/NuGet/NuGet.Jobs/blob/5b34c8e8ab48516f289db7d37a67c48f62f4667f/src/Catalog/Persistence/AzureStorage.cs#L148-L157))\r\n3. When blob sizes are different, do not consider them synchronized.\r\n   - In DEV, there were some old blobs that had matching SHA-512 metadata but they were actually different. This was causing `catalog2dnx` to no-op. This can be easily avoided by also checking the file size. Of course this doesn't fix all problems if the SHA-512 is different, but it's an easy, safe improvement.\r\n\r\n"},{"Id":"41000795200","Type":"IssuesEvent","CreatedAt":"2024-08-13T22:27:54","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10127","RelatedDescription":"Opened issue \"[Feature]: Automatically mark packages as deprecated once their repository is archived\" (#10127) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nOnce a repository is archived, the related packages should be marked as deprecated automatically since there is no support, a high change for vulnerabilities and other issues. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"41000518556","Type":"IssuesEvent","CreatedAt":"2024-08-13T22:13:32","Actor":"michael-hawker","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10126","RelatedDescription":"Opened issue \"[Feature]: API Key Multiple Glob Patterns\" (#10126) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nRelated #8223\n\n### The Elevator Pitch\n\nAm a GitHub organization with multiple packages coming from a variety of teams. Some packages still get updates but don't use a common naming pattern across all the packages we push.\r\n\r\nI want a single token that I can provide to our GitHub organization secrets to allow pushing these existing packages, but still prevent other packages that don't conform to our convention.\r\n\r\nIt'd be nice if I could provide a semi-colon delineated list, or provide multiple entries to the glob matching pattern to allow.\r\n\r\nEven better if I could configure them for existing packages or new packages as part of the same token.\n\n### Additional Context and Details\n\nOtherwise, I have to create multiple tokens and then provide different tokens to different projects instead of being able to have a central token which I can renew periodically to manage our organization."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41038151415","Type":"IssuesEvent","CreatedAt":"2024-08-15T00:19:17","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13709","RelatedDescription":"Opened issue \"update dotnet nuget why docs for optional path argument\" (#13709) at NuGet/Home","RelatedBody":""},{"Id":"41038007414","Type":"IssuesEvent","CreatedAt":"2024-08-15T00:13:05","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13623","RelatedDescription":"Closed issue \"Update dotnet nuget why docs with assets file info\" (#13623) at NuGet/Home","RelatedBody":"When this is complete:\r\n* https://github.com/NuGet/Home/issues/13576\r\n\r\nWe need to update the docs for dotnet nuget why so that we can explain that non-sdk projects can restore with `msbuild -t:restore`, then use `msbuild path\\to\\project.csproj -getProperty:ProjectAssetsFile`, and then pass that assets file path to `dotnet nuget why`."},{"Id":"41035807225","Type":"IssuesEvent","CreatedAt":"2024-08-14T21:22:42","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13656","RelatedDescription":"Closed issue \"Publishing to BAR/Maestro will no longer support tokens\" (#13656) at NuGet/Home","RelatedBody":"I noticed that you're still using `$(MaestroAccessToken)` when publishing internal builds in https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/build/publish.proj#L71.\r\n\r\nThis token is getting deprecated in favour of using a secretless auth via a service connection.\r\nYou will need to change how you do this or your internal builds will soon break.\r\nThe change is not complicated and goes as follows:\r\n\r\nIf your pipeline has something like this:\r\n```yaml\r\n- task: CmdLine@2\r\n  displayName: \"Publish to the .NET Core build asset registry (BAR)\"\r\n  inputs:\r\n    script: dotnet msbuild $(Build.Repository.LocalPath)\\build\\publish.proj /t:PublishToBuildAssetRegistry /property:NuGetClientNupkgsDirectoryPath=$(Build.Repository.LocalPath)\\artifacts\\$(NupkgOutputDir) /property:BUILD_BUILDNUMBER=$(Build.BuildNumber) /property:BUILD_SOURCEBRANCH=$(Build.SourceBranchName) /property:BUILD_SOURCEVERSION=$(Build.SourceVersion) /property:BUILD_REPOSITORY_URI=$(Build.Repository.Uri) /property:BUILD_REPOSITORY_NAME=$(Build.Repository.Name) /property:ArtifactsLogDir=$(Build.Repository.LocalPath)\\artifacts\\manifests\\ /property:MaestroApiEndpoint=$(MaestroApiEndpoint) /property:MaestroAccessToken=$(MaestroAccessToken) /binarylogger:$(Build.StagingDirectory)\\binlog\\21.PublishToBuildAssetRegistry.binlog\r\n    workingDirectory: cli\r\n    failOnStderr: true\r\n  env:\r\n    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true\r\n    DOTNET_MULTILEVEL_LOOKUP: true\r\n  condition: \"and(succeeded(),eq(variables['PublishArtifactsToDotNetBuildAssetRegistry'], 'true'), eq(variables['BuildRTM'], 'false'))\"\r\n```\r\n\r\nit will need to change to something like this:\r\n\r\n```yaml\r\n- task: AzureCLI@2\r\n  displayName: \"Publish to the .NET Core build asset registry (BAR)\"\r\n  inputs:\r\n    azureSubscription: \"Darc: Maestro Production\"\r\n    scriptType: ps\r\n    scriptLocation: inlineScript\r\n    inlineScript: |\r\n      dotnet msbuild $(Build.Repository.LocalPath)\\build\\publish.proj /t:PublishToBuildAssetRegistry /property:NuGetClientNupkgsDirectoryPath=$(Build.Repository.LocalPath)\\artifacts\\$(NupkgOutputDir) /property:BUILD_BUILDNUMBER=$(Build.BuildNumber) /property:BUILD_SOURCEBRANCH=$(Build.SourceBranchName) /property:BUILD_SOURCEVERSION=$(Build.SourceVersion) /property:BUILD_REPOSITORY_URI=$(Build.Repository.Uri) /property:BUILD_REPOSITORY_NAME=$(Build.Repository.Name) /property:ArtifactsLogDir=$(Build.Repository.LocalPath)\\artifacts\\manifests\\ /binarylogger:$(Build.StagingDirectory)\\binlog\\21.PublishToBuildAssetRegistry.binlog\r\n    workingDirectory: cli\r\n    failOnStderr: true\r\n  env:\r\n    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true\r\n    DOTNET_MULTILEVEL_LOOKUP: true\r\n  condition: \"and(succeeded(),eq(variables['PublishArtifactsToDotNetBuildAssetRegistry'], 'true'), eq(variables['BuildRTM'], 'false'))\"\r\n```\r\n\r\nThe differences between the snippets above are:\r\n-\tAzureCLI@2 task is used\r\n-\tThe “Darc: Maestro Production” service connection is used.\r\nYour pipeline will need to be approved to use this connection (reach out to First Responders).\r\n-\tThe $(MaestroAccessToken) secret is removed\r\n"},{"Id":"41034155485","Type":"IssuesEvent","CreatedAt":"2024-08-14T20:14:32","Actor":"DanTravison","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13708","RelatedDescription":"Opened issue \"dotnet restore should report security vulnerabilities for shared assembly projects.\" (#13708) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nWhen a shared assembly has a vulnerability in one of its dependencies, it should be identified explicitly.  Instead, the vulnerability is reported through the containing application with a link to the vulnerability.  \r\n\r\nThe problem is the suggested fix leads the dev to fix the application with a PackageReference/explicit version instead of addressing the issue directly in the shared assembly and obfuscates the fact that other uses of hte shared assembly have the same vulnerability.\n\n### Additional Context and Details\n\nI encountered the System.Private.Uri security vulnerability today after upgrading my VS installation when building a 'test application' for testing some Maui-base shared assemblies.  \r\n\r\nAt first, I thought his was an issue with the VS upgrade, since I had been building the shared assemblies and all dependent applications over the previous few days without any issues.\r\n\r\nNext, I thought there was an issue with the test application itself, so I added the PackageReference to it.\r\n\r\nI then started running dotnet resolve against the dependent applications and started seeing the same issue for a number of the applications.\r\n\r\nAfter researching the issue, I found this thread (https://github.com/dotnet/sdk/issues/42651) and the suggestion to searching project.assets.json and found numerous applications had the same issue and eventually determined that the root cause was in one of my shared assemblies.\r\n\r\nIf dotnet resolve had identified the shared assembly in addition to, or instead of, the various application projects, it would have been much quicker to find the root cause.  As it stands, I could have easily fixed on application only to discover it in others later. "},{"Id":"41032491708","Type":"IssuesEvent","CreatedAt":"2024-08-14T19:09:43","Actor":"maddymontaquila","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13707","RelatedDescription":"Opened issue \"NuGet Search box in VS Win is teeny tiny on higher resolution devices\" (#13707) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVS 17.11, .NET 8\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nIn the modern VS UI, I right clicked on my Aspire project and clicked \"Add Aspire package\" which opens up the NuGet UI and searches for things with owner:Aspire and tags: whatever. But the search box is too smol and I cannot see anything, nor can I resize it!\r\n\r\n![image](https://github.com/user-attachments/assets/5e314267-d8f6-4cb9-a6f4-e42f08de5be7)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41031670098","Type":"IssuesEvent","CreatedAt":"2024-08-14T18:38:30","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13706","RelatedDescription":"Opened issue \"Vulnerabilities filter is not showing vulnerable packages in Solution PM UI\" (#13706) at NuGet/Home","RelatedBody":"Currently, the filter is looking at the latest installed package to determine the filtering, if the user has a lower deprecated version of the package in another project we won't show it when the filter is on.\r\n\r\n![image](https://github.com/user-attachments/assets/13f986ab-a403-4a03-aad3-67449dbf7b56)\r\n"},{"Id":"41019190121","Type":"IssuesEvent","CreatedAt":"2024-08-14T12:18:28","Actor":"Kesavaraman123","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13704","RelatedDescription":"Opened issue \"Latest NuGet Version not displaying correctly in Visual Studio Code\" (#13704) at NuGet/Home","RelatedBody":"### Impact\r\n\r\nOther\r\n\r\n### Describe the bug\r\n\r\nHi Team,\r\n\r\nIn Visual Studio Code, our Syncfusion NuGet packages are not displaying the correct latest version number. For example, the latest version of the **Syncfusion.Blazor** (https://www.nuget.org/packages/Syncfusion.Blazor/26.2.9) NuGet package is **26.2.9**, but it is incorrectly showing **18.1.0.42** as the latest version in Visual Studio Code.\r\n\r\nWe discovered that when retrieving the version list using the **NuGet Extension** in Visual Studio Code (via NuGet API - https://api.nuget.org/v3-flatcontainer/syncfusion.blazor/index.json), the versions are fetched in the wrong order, leading to the incorrect version (18.1.0.42) being marked as the latest. This issue is affecting various Syncfusion NuGet packages, each showing different incorrect versions as the latest. Could you please investigate and resolve this issue as soon as possible?\r\n![image](https://github.com/user-attachments/assets/c33a8964-8618-4807-9603-aeb2a8051aa9)\r\n\r\n \r\nRegards,\r\nV. Kesavaraman\r\n\r\n\r\n### Repro Steps\r\n\r\n1. Open Visual Studio Code\r\n2. Open Blazor Project\r\n3. Install Syncfusion.Blazor NuGet package in Lower version (eg; 25.1.35)\r\n4. Try to update **Syncfusion.Blazor** NuGet package to latest version.\r\n5. 18.1.0.42 is showing as latest version but actual latest version is 26.2.9\r\n![image](https://github.com/user-attachments/assets/6cc8806c-4988-4659-bb21-dc5d2eb953de)\r\n\r\n\r\n### Expected Behavior\r\n\r\nFor  **Syncfusion.Blazor** NuGet package 26.2.9 version has to be shown as latest version.\r\n![image](https://github.com/user-attachments/assets/549023e9-c1b5-413d-92f2-f6e4afc4a37b)\r\n\r\n\r\n### Screenshots\r\n\r\n![image](https://github.com/user-attachments/assets/57db89bc-c7ff-4ff6-a6ea-a134d063e3a1)\r\n\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"41013177394","Type":"IssuesEvent","CreatedAt":"2024-08-14T09:06:31","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13660","RelatedDescription":"Closed issue \"NuGet cache clearing fails after clicking the button “Clear All NuGet Storage” in “Options->NuGet Package Manager ->General” window for SDK project \" (#13660) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.12.0.36\n\n### Worked before?\n\nIt’s a regression since it doesn’t repro before .NET MAUI (.NET 9 Preview) is involved to the VS Workloads.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps:    \r\n\r\n1. Create a C# Console App (.NET 8.0) project in VS and open the PM UI or PMC window. \r\n\r\n2. Install several packages (e.g. Newtonsoft.Json and log4net) through PM UI. \r\n\r\n3. Click the settings button (gear button) on PM UI or PMC window. \r\n\r\n4. Click the “NuGet Package Manager->General” in the opened “Options” window. \r\n\r\n5. Click the button “Clear All NuGet Storage” and check the message. \r\n\r\n#### Expected:    \r\n\r\nThe message should show correctly like “NuGet storage cleared at [Time]” \r\n\r\n\r\n#### Actual: \r\n\r\nNuGet cache clearing fails as below: \r\n![Unbenannt_0730](https://github.com/user-attachments/assets/c1308af7-b037-4c25-a488-36673300c8d6)\r\n#### Notes:     \r\n\r\n1. The repro rate is 100%. \r\n2. It blocked installing all packages after clicking the “Clear All NuGet Storage” button. \r\n3. It only reproes after installing the “.NET MAUI (.NET 9 Preview)” workload from .NET Multi-platform App UI development in VS installer, doesn’t repro if you didn’t install that workload. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41009934589","Type":"IssuesEvent","CreatedAt":"2024-08-14T07:22:33","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13586","RelatedDescription":"Closed issue \"Wrong documentation in Create UWP package (C#)\" (#13586) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n[Link here](https://learn.microsoft.com/en-us/nuget/guides/create-uwp-packages-cs)\r\n\r\nObviously, you are not packaging any `dll` files in the `nuspec` file\r\n![image](https://github.com/NuGet/docs.microsoft.com-nuget/assets/42881734/c404a1cc-de30-4542-a4b6-a3f7d97a44bd)\r\n\r\nBut in the result screenshot, there are `dll` files out of nowhere\r\n![image](https://github.com/NuGet/docs.microsoft.com-nuget/assets/42881734/dbef26a7-ef5b-4a27-95f2-accdd7834a82)\r\n\r\nI get redirected by [this](https://github.com/NuGet/docs.microsoft.com-nuget/issues/3310)\n\n### Verbose Logs\n\n_No response_"},{"Id":"41001100796","Type":"IssuesEvent","CreatedAt":"2024-08-13T22:45:10","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13621","RelatedDescription":"Closed issue \"Add docs for NU1508\" (#13621) at NuGet/Home","RelatedBody":"Duplicate NuGetAuditSupress items, for https://github.com/NuGet/Home/issues/13620"},{"Id":"40997460668","Type":"IssuesEvent","CreatedAt":"2024-08-13T19:59:08","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13703","RelatedDescription":"Opened issue \"dotnet list package should warn when restore is not current\" (#13703) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\n`dotnet list package` gets \"actual\" package usage from NuGet's assets file, which is created on restore.  Which means that if a customer restores a project, then edits the project to change a package version, or add/remove a package reference, then runs `dotnet list package` without restoring, it will show incorrect information, and the customer will not know why.\r\n\r\n`dotnet list package` should show a message when the project restore isn't up-to-date\n\n### Additional Context and Details\n\n`dotnet list package` already loads the project file via MSBuild APIs (hence why it only works with SDK style projects that the `dotnet` CLI can build/evaluate), meaning we already have the data to do a restore no-op check."},{"Id":"40991791004","Type":"IssuesEvent","CreatedAt":"2024-08-13T16:29:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13700","RelatedDescription":"Closed issue \"Add property for toggling the to the previous NuGet resolver: RestoreUseLegacyDependencyResolver  \" (#13700) at NuGet/Home","RelatedBody":""},{"Id":"40982908087","Type":"PullRequestEvent","CreatedAt":"2024-08-13T12:18:42","Actor":"NeuroXiq","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13702","RelatedDescription":"Opened pull request \"Create dndocs-api-explorer.md\" (#13702) at NuGet/Home","RelatedBody":"Propose DNDocs API Explorer."},{"Id":"40979603200","Type":"IssuesEvent","CreatedAt":"2024-08-13T10:31:12","Actor":"Lofter1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13683","RelatedDescription":"Closed issue \"NU3037 and NU3028 when installing packages\" (#13683) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\ndotnet 8.0.303, dotnet nuget 6.10.0.97, VS 17.10.5\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nMakes it hard to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nHappens for Visual Studio 2022 (fresh reinstall) and the dotnet tools that shipped with it (dotnet nuget). Doesn't happen for all packages, but for every project I create regardless of template with the same packages.\r\n\r\n### Packages I tested that it happens to:\r\n- Microsoft.EntityFrameworkCore.SqlServer\r\n- Microsoft.EntityFrameworkCore.Design\r\n\r\n### Packages I tested it doesn't happen for:\r\n- Microsoft.EntityFrameworkCore\r\n- Microsoft.AspNetCore.Authentication.JwtBearer\r\n\r\n\r\n### Steps I already took to try to fix this:\r\n- Check if System Time is correct (forced a synchronization)\r\n- Reinstalled Visual Studio\r\n- Check if a corporate firewall is the problem (co-worker can install packages fine within the same network)\r\n- Verify all nupkg files in `~/.nuget` and inside the `C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages` folder (reduced the numbers of errors)\r\n- Use dotnet 7 instead of 8 and use the appropriate package version\r\n- Delete folders like `~/.nuget` and delete NuGet cache\r\n- Update Windows\r\n- `<add key=\"signatureValidationMode\" value=\"accept\"/>`\r\n- Waiting a day\r\n\r\n\r\nPossibly interesting addition: for the Microsoft.EntityFrameworkCore.Design package, an installation through the dotnet CLI adds the package, but builds afterwards will fail with the same error as during the installation attempt through the VS NuGet UI\r\n\r\n### Verbose Logs\r\n\r\n\r\nVS 2022 NuGet UI Output for Microsoft.EntityFrameworkCore.SqlServer (similar output for Microsoft.EntityFrameworkCore.Design) (Shortened)\r\n\r\n```shell\r\nPakete für \"<path to>.csproj\" werden wiederhergestellt...\r\n  [...]\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 23:54:33\r\n\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 18.12.2018 01:10:38\r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 22:58:10\r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256-Hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 02.01.2017 01:00:00 bis 02.04.2028 01:59:59\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.05.2018 22:37:18\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft, RoslynTeam\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 18.12.2018 00:57:03\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:53\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:33\r\n\r\n[...]\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: azure-sdk, dotnetframework, Microsoft\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.04.2021 19:59:36\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.04.2020 01:49:51\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 12.05.2020 16:57:09\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.01.2022 18:20:31\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: Microsoft, nugetsqltools\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 29.01.2022 01:50:56\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:54\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:27\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 26.08.2022 00:27:56\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.09.2022 15:45:35\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:33:51\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 22:58:38\r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256-Hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 02.01.2017 01:00:00 bis 02.04.2028 01:59:59\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:53\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:12\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:55\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:06\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:58:00\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: aspnet, dotnetframework, Microsoft\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:41:17\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.11.2019 10:52:53\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 03.12.2019 17:42:05\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 19.02.2020 19:10:28\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.04.2020 01:49:53\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 12.05.2020 16:57:01\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 19.02.2020 19:10:28\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 24.03.2020 18:10:21\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 24.03.2020 18:10:23\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.07.2022 05:13:05\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: AzureAD, Microsoft\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.07.2022 06:09:30\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:41:20\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n[...]\r\n\r\n```\r\n"},{"Id":"40964172384","Type":"IssuesEvent","CreatedAt":"2024-08-12T22:20:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13701","RelatedDescription":"Opened issue \"Document: RestoreUseLegacyDependencyResolver \" (#13701) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/5964"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-15T03:30:19.0730033Z","RunDurationInMilliseconds":820}