{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35535658663","Type":"IssuesEvent","CreatedAt":"2024-02-09T02:59:26","Actor":"d1820","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9799","RelatedDescription":"Opened issue \"[Feature]: Adding https://raw.githubusercontent.com/ to Trusted Domain\" (#9799) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nImages hosted in a repo that can be served up in the readme should be allowed to be trusted esp since github.com is already a trusted domain\n\n### The Elevator Pitch\n\nIf github.com is already on the list adding the ability to serve raw image content from a subdomain of theirs should be allowed as well\n\n### Additional Context and Details\n\nCan view Example here: https://www.nuget.org/packages/DanTurco.GoogleMapExport2KML/\r\n\r\nreferences images like \r\nhttps://raw.githubusercontent.com/d1820/GoogleMapExport2KML/ac9c689f9df0b1c023bd574eb1ac3d2677a4cb3b/GifInstructions/typical.gif"},{"Id":"35534816109","Type":"IssuesEvent","CreatedAt":"2024-02-09T01:52:40","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9798","RelatedDescription":"Closed issue \"New Issue Title\" (#9798) at NuGet/NuGetGallery","RelatedBody":"Description of the issue..."},{"Id":"35534803994","Type":"IssuesEvent","CreatedAt":"2024-02-09T01:51:58","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9798","RelatedDescription":"Opened issue \"New Issue Title\" (#9798) at NuGet/NuGetGallery","RelatedBody":"Description of the issue..."},{"Id":"35465257941","Type":"PullRequestEvent","CreatedAt":"2024-02-07T02:33:44","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9782","RelatedDescription":"Merged pull request \"[Search-by-TFM] New Framework Filter Options UI\" (#9782) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5171\r\n\r\nThis change adds 2 new framework filter options to the search page:\r\n\r\n- **Include Computed Frameworks**\r\n     Checkbox that sets a boolean `true`/`false` value (default is `true`). When this is set to `false`, we filter packages only by their asset frameworks, and only show asset framework badges. When this is set to `true`, we filter packages by asset frameworks + computed frameworks, and we show both types of badges as well.\r\n- **Framework Filter Mode**\r\n     Toggle that chooses between `All` and `Any` (default is `All`). This affects cases when multiple framework or TFM filters are selected. When this is set to `All`, we will show packages matching **all** the framework and TFM filters. If it is set to `Any`, we will show packages matching **any one of** the selected filters.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/f7fb58e7-95f8-4200-aaa4-40af73fff1bf)\r\n\r\nThe changes are behind a feature flag.\r\n\r\nI ran Accessibility FastPass, and it didn't throw up any issues. I also checked color contrast for the new UI elements.\r\n\r\n**NOTE:** I made an additional bug fix for the TFM badges in this PR. The TFM badges link to the frameworks tab on the package details page, but we weren't providing a package version, so the links sometimes took us to the wrong version's page. I've now fixed that.\r\n\r\n### Screenshots/Demos\r\n\r\n<details><summary>Before vs. after </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/06799f14-fbce-43d9-80ca-10ba068d0ce2)\r\nvs. (see top of the Frameworks filter section on the left)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9350ef7d-ed72-45c7-b519-adfb90d8b237)\r\n</details> \r\n\r\n<details><summary>Include computed frameworks demo </summary>\r\n\r\nhttps://github.com/NuGet/NuGetGallery/assets/82980589/285752c9-eb6a-4609-ba9e-e225bbd18039\r\n</details> \r\n\r\n<details><summary>Framework filter mode demo </summary>\r\n\r\nhttps://github.com/NuGet/NuGetGallery/assets/82980589/08d0f892-ae5b-42f7-8917-92a9024bc0bb\r\n\r\nInfo tooltip:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/d6841353-af3a-4c72-9c42-81d0dede62b6)\r\n</details> \r\n\r\n<details><summary>Narrow/mobile screens </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/aface9ca-e8c7-4348-a42d-5a7eb093de8a)\r\n</details> \r\n\r\n"},{"Id":"35454732605","Type":"PullRequestEvent","CreatedAt":"2024-02-06T18:10:23","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9797","RelatedDescription":"Opened pull request \"Update Microsoft.IdentityModel.JsonWebTokens fix vulnerability.\" (#9797) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/5237"},{"Id":"35430123879","Type":"PullRequestEvent","CreatedAt":"2024-02-06T03:51:32","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9796","RelatedDescription":"Merged pull request \"TFM Badges: Fixed focus underline and outline + Added missing tooltip\" (#9796) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9795\r\n\r\nThis fixes:\r\n\r\n1. The TFM badges were showing a trailing underline when someone hovered over it. This has now been removed.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9b788d50-d795-4e9a-aa92-8c0fb52e890c)\r\n\r\n2. When someone brought tab focus to the badges, it showed an outline, but the outline was distorted because the child elements (`<span>`) had different dimensions to the parent (`<a>`). This has been fixed.\r\n\r\n    Previously,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/4710f491-e1ea-4479-bbb3-eee727eab101)\r\n    Now,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/82d68881-5e99-4d8d-a591-80501c56be90)\r\n\r\n3. The TFM badges are supposed to have a tooltip when you hover over them (See the package display page: https://www.nuget.org/packages/Newtonsoft.Json). This tooltip was missing on the search page, but it's been added now.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/c05796ce-b498-4159-bcde-887584f63806)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35561550571","Type":"IssuesEvent","CreatedAt":"2024-02-09T22:11:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13233","RelatedDescription":"Opened issue \"Consolidate packages.config restore implementations by minimizing discrepancies\" (#13233) at NuGet/Home","RelatedBody":"Unfortunately we have 3 different implementations of packages.config restore.\r\nA lot of that is due to the difference in reading the packages and part of it is not wanting to make public APIs for PC restore.\r\n\r\nThose 3 implementations are:\r\n\r\nnuget.exe restore\r\nmsbuild.exe /t:restore\r\nVS restore\r\nThere's a bunch of differences in how the PackageRestoreManager gets called. It's made my work for PC restore vulnerability checking challenging, because the calls are not unified."},{"Id":"35560299806","Type":"IssuesEvent","CreatedAt":"2024-02-09T21:04:55","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13225","RelatedDescription":"Closed issue \"CI:  update .NET 8 SDK version\" (#13225) at NuGet/Home","RelatedBody":"[build/DotNetSdkVersions.txt](https://github.com/NuGet/NuGet.Client/blob/f45ff31d06d8254f7a5df017f1a4c54ce706b575/build/DotNetSdkVersions.txt#L2) references a prerelease version of .NET 8 SDK.  .NET 8 SDK GA'd long ago.  We should update the version."},{"Id":"35559647031","Type":"IssuesEvent","CreatedAt":"2024-02-09T20:31:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13149","RelatedDescription":"Closed issue \"The test scripts don't test against the appropriate versions correctly\" (#13149) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.405\r\n\r\n### Worked before?\r\n\r\nWorked well in .NET SDK Version: 7.0.404\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:  \r\n1.\tPatch dotnet sdk (please refer to [Install and patch the dotnet with the nupkgs](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=NavigationUrl))\r\n2.\tCreate a Powershell script named \"Test.ps1\" with below contents. **Please change the value of $patchSDKCommand to the path of patched SDK in the first line of the script below.**\r\n```\r\n\"Getting latest .NET Core CLI\"  \r\n# Pls change the value of below $patchSDKCommand to the patched SDK.  \r\n$patchSDKCommand = \"C:\\Users\\v-luzh\\Desktop\\PatchedSDK\\dotnet.exe\"    \r\n\"Testing the following version of the .NET Core CLI/SDK\"  \r\n& $patchSDKCommand --version  \r\n\"Creating test package projects\"  \r\n& $patchSDKCommand new classlib -n  MyLib  \r\n& $patchSDKCommand new classlib -n MyDep  \r\n& $patchSDKCommand add MyLib/MyLib.csproj reference MyDep/MyDep.csproj  \r\n& $patchSDKCommand new sln -n test  \r\n& $patchSDKCommand sln add MyLib/MyLib.csproj  \r\n& $patchSDKCommand sln add MyDep/MyDep.csproj  \r\n& $patchSDKCommand build  \r\n\"Creating packages\"  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.0.1  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.0.2  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.0.3-beta  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.1.0  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.2.0-beta  \r\n& $patchSDKCommand msbuild /t:pack /p:version=2.0.0  \r\n& $patchSDKCommand msbuild /t:pack /p:version=3.0.0-beta  \r\n\"Creating nuget.config\"  \r\nNew-Item .\\localSource\\ -ItemType Directory | Out-Null  \r\n& $patchSDKCommand new nugetconfig  \r\n$xml = [xml](Get-Content .\\nuget.config)   \r\n$sources = $xml.SelectSingleNode('/configuration/packageSources')  \r\n$sources.RemoveAll()  \r\n$source = $xml.CreateElement('add')  \r\n$source.SetAttribute('key', 'localSource') | Out-Null  \r\n$source.SetAttribute('value', 'localSource') | Out-Null  \r\n$sources.AppendChild($source)  \r\n$source = $xml.CreateElement('add')  \r\nif (Test-Path .\\cli\\sdk\\NuGetFallbackFolder) {  \r\n       $source.SetAttribute('key', 'dotnetFallbackFolder') | Out-Null  \r\n       $source.SetAttribute('value', 'cli/sdk/NuGetFallbackFolder') | Out-Null  \r\n       $sources.AppendChild($source)  \r\n}  \r\n$config = $xml.CreateElement('config')  \r\n$xml.DocumentElement.AppendChild($config) | Out-Null  \r\n$globalPackagesFolder = $xml.CreateElement('add')  \r\n$globalPackagesFolder.SetAttribute('key', 'globalPackagesFolder')  \r\n$globalPackagesFolder.SetAttribute('value', 'globalPackages')  \r\n$config.AppendChild($globalPackagesFolder) | Out-Null  \r\n$xml.Save((Join-Path (Get-Location) nuget.config))  \r\nCopy-Item *\\bin\\Debug\\*.nupkg .\\localSource\\ | Out-Null  \r\n\"Creating test program\"  \r\n& $patchSDKCommand new console -n MyProg  \r\n& $patchSDKCommand add MyProg\\MyProg.csproj package MyLib -v 1.0.0  \r\n& $patchSDKCommand restore MyProg\\MyProg.csproj  \r\n& $patchSDKCommand new console -n deprecationTest  \r\n& $patchSDKCommand add .\\deprecationTest\\deprecationTest.csproj package NuGet.Core -v 2.14.0  \r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-patch  \r\n\"latest version of MyLib and MyDep above should be 1.0.2\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-patch --include-prerelease  \r\n\"latest version of MyLib and MyDep above should be 1.0.3-beta\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-minor  \r\n\"latest version of MyLib and MyDep above should be 1.1.0\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-minor --include-prerelease  \r\n\"latest version of MyLib and MyDep above should be 1.2.0-beta\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive  \r\n\"latest version of MyLib and MyDep above should be 2.0.0\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --include-prerelease  \r\n\"latest version of MyLib and MyDep above should be 3.0.0-beta\"  \r\nPause  \r\n\r\n& $patchSDKCommand list .\\deprecationTest\\deprecationTest.csproj package --deprecated  \r\n\"the deprecated package version of deprecationTest above should be 2.14.0\"  \r\nPause  \r\n\r\n\"testing complete with the following version of the .NET Core CLI/SDK\"  \r\n& $patchSDKCommand --version  \r\n& $patchSDKCommand new classlib -n MultiTargetTest \r\n$xml=@' \r\n<Project Sdk=\"Microsoft.NET.Sdk\">  \r\n    <PropertyGroup>  \r\n      <TargetFrameworks>netstandard1.3;netstandard2.0</TargetFrameworks>  \r\n   </PropertyGroup>  \r\n   <ItemGroup>  \r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.1\" />  \r\n   </ItemGroup>  \r\n   <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard1.3'\">  \r\n     <PackageReference Include=\"Moq\" Version=\"4.10.0\" />  \r\n   </ItemGroup>  \r\n   <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">  \r\n     <PackageReference Include=\"xunit\" Version=\"2.4.0\" />  \r\n   </ItemGroup>  \r\n</Project>  \r\n'@  \r\n\r\nOut-File -FilePath .\\MultiTargetTest\\MultiTargetTest.csproj -InputObject $xml \r\n& $patchSDKCommand restore MultiTargetTest\\MultiTargetTest.csproj  \r\n& $patchSDKCommand list MultiTargetTest\\MultiTargetTest.csproj package  \r\n\"The output above should have two target frameworks, netstandard1.3 and netstandard2.0\"  \r\n\"Moq should be listed under netstandard1.3, but not netstandard2.0\"  \r\n\"xunit should be listed under netstandard2.0, but not netstandard1.3\"  \r\n\"Newtonsoft.Json should be listed under both\" \r\nPause \r\n```\r\n3.\tOpen a powershell command window\r\n3.1. Open Task Manager.\r\n3.2. Navigate on the main menu to File | “Run new task.”\r\n3.3. In the Open textbox type:\r\n  Powershell -ExecutionPolicy Bypass\r\n3.4. Enable the option “Create this task with administrative privileges.” And click the OK button.\r\n4.\tCd to the path of \"Test.ps1\" (you created in step2) and run the script.\r\n\r\n#### Expected Results:  \r\nNo error occurs and the script is executed successfully.\r\n#### Actual Results:\r\nUnhandled exception was thrown (as highlighted log below) and the script was failed to execute as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/270ce09c-13aa-4472-9534-9e224de91f8e)\r\n#### Note:\r\nRepro rate: 100%.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\n#### Note:\r\nThe output log:\r\n\r\nPS C:\\Users\\v-luzh\\Desktop\\Entropy-main\\Entropy-main\\SDKPatchTool> cd C:\\Users\\v-luzh\\Desktop\\DotnetList\r\nPS C:\\Users\\v-luzh\\Desktop\\DotnetList> .\\Test.ps1\r\nGetting latest .NET Core CLI\r\nTesting the following version of the .NET Core CLI/SDK\r\n7.0.405\r\nCreating test package projects\r\n\r\nWelcome to .NET 7.0!\r\n---------------------\r\nSDK Version: 7.0.405\r\n\r\nTelemetry\r\n---------\r\nThe .NET tools collect usage data in order to help us improve your experience. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\n----------------\r\nInstalled an ASP.NET Core HTTPS development certificate.\r\nTo trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only).\r\nLearn about HTTPS: https://aka.ms/dotnet-https\r\n----------------\r\nWrite your first app: https://aka.ms/dotnet-hello-world\r\nFind out what's new: https://aka.ms/dotnet-whats-new\r\nExplore documentation: https://aka.ms/dotnet-docs\r\nReport issues and find source on GitHub: https://github.com/dotnet/core\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli\r\n--------------------------------------------------------------------------------------\r\nThe template \"Class Library\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\MyLib.csproj:\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\MyLib.csproj (in 221 ms).\r\nRestore succeeded.\r\n\r\n\r\nThe template \"Class Library\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\MyDep.csproj:\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\MyDep.csproj (in 175 ms).\r\nRestore succeeded.\r\n\r\n\r\nReference `..\\MyDep\\MyDep.csproj` added to the project.\r\nThe template \"Solution File\" was created successfully.\r\n\r\nProject `MyLib\\MyLib.csproj` added to the solution.\r\nProject `MyDep\\MyDep.csproj` added to the solution.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\MyLib.csproj (in 281 ms).\r\n  1 of 2 projects are up-to-date for restore.\r\nUnhandled exception. Unhandled exception. Unhandled exception. Unhandled exception. Unhandled exception. System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nSystem.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nSystem.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nUnhandled exception. System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)Unhandled exception. System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\n\r\nUnhandled exception.\r\nSystem.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)Unhandled exception.Unhandled exception.\r\n System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nSystem.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nSystem.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:28.01\r\nCreating packages\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.1.0.1 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.1.0.1.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.1.0.1 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.1.0.1.nupkg'.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.1.0.2 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.1.0.2.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.1.0.2 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.1.0.2.nupkg'.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.1.0.3-beta is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn\r\n   why package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.1.0.3-beta.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.1.0.3-beta is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn\r\n   why package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.1.0.3-beta.nupkg'.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.1.1.0 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.1.1.0.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.1.1.0 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.1.1.0.nupkg'.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.1.2.0-beta is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn\r\n   why package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.1.2.0-beta.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.1.2.0-beta is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn\r\n   why package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.1.2.0-beta.nupkg'.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.2.0.0 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.2.0.0.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.2.0.0 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why\r\n  package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.2.0.0.nupkg'.\r\nMSBuild version 17.7.4+3ebbd7c49 for .NET\r\n  MyDep -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\net7.0\\MyDep.dll\r\n  The package MyDep.3.0.0-beta is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn\r\n   why package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyDep\\bin\\Debug\\MyDep.3.0.0-beta.nupkg'.\r\n  MyLib -> C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\net7.0\\MyLib.dll\r\n  The package MyLib.3.0.0-beta is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn\r\n   why package readmes are important.\r\n  Successfully created package 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyLib\\bin\\Debug\\MyLib.3.0.0-beta.nupkg'.\r\nCreating nuget.config\r\nThe template \"NuGet Config\" was created successfully.\r\n\r\n\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyProg\\MyProg.csproj:\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyProg\\MyProg.csproj (in 230 ms).\r\nRestore succeeded.\r\n\r\n\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\v-luzh\\AppData\\Local\\Temp\\tmpE686.tmp\r\nUnhandled exception. System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj:\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj (in 233 ms).\r\nRestore succeeded.\r\n\r\n\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\v-luzh\\AppData\\Local\\Temp\\tmp6D0.tmp\r\nUnhandled exception. System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nUnhandled exception. System.TypeLoadException: Could not load type 'System.CommandLine.CliCommand' from assembly 'System.CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n   at NuGet.CommandLine.XPlat.Program.Main(String[] args)\r\nkey         value\r\n---         -----\r\nlocalSource localSource\r\nCreating test program\r\nlatest version of MyLib and MyDep above should be 1.0.2\r\nPress Enter to continue...:\r\n```\r\n"},{"Id":"35558707204","Type":"IssuesEvent","CreatedAt":"2024-02-09T19:47:23","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13223","RelatedDescription":"Closed issue \"Unroll LINQ usage to trim some allocations in AddMSBuildAssets\" (#13223) at NuGet/Home","RelatedBody":""},{"Id":"35558431178","Type":"IssuesEvent","CreatedAt":"2024-02-09T19:34:48","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13232","RelatedDescription":"Opened issue \"`dotnet list package` command options should support shorter names. For example, -f for --framework. Have to specify the long name every time.\" (#13232) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nTracking https://github.com/dotnet/sdk/issues/37385\n\n### Additional Context and Details\n\n_No response_"},{"Id":"35558254154","Type":"IssuesEvent","CreatedAt":"2024-02-09T19:26:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9933","RelatedDescription":"Closed issue \"Command “dotnet restore -f --use-lock-file” created a lock file for every project when the solution have project reference \" (#9933) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6783\r\nVS Version: Master\\30423.24\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Create a solution with two projects [e.g. C# Class Library (.NET Core 5.0)] called “CL1” and “CL2” in VS.\r\n2. Make the project graph structure: CL1 -> CL2 and **close the solution/VS**.\r\n3. Open “Developer Command Prompt”, cd to CL1 project path and input command “dotnet restore -f --use-lock-file”.\r\n4. Open the solution and check the Solution Explorer.\r\n## Expected Result\r\nThere is only one lock file created under project CL1.\r\n## Actual Result\r\nCommand “dotnet restore -f --use-lock-file” created a lock file for every project as below.\r\n![image](https://user-images.githubusercontent.com/20632625/91064083-63467700-e661-11ea-8dba-4f5a4aac928b.png)\r\n## Note\r\nIt is a legacy issue, the key point to repro is closing solution/VS in step2.\r\n\r\n\r\n\r\n"},{"Id":"35557996509","Type":"IssuesEvent","CreatedAt":"2024-02-09T19:15:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13231","RelatedDescription":"Opened issue \"Strategy for which test cases are run in a daily pipeline, vs which tests are part of the PR gates\" (#13231) at NuGet/Home","RelatedBody":"apex tests should test as much as possible, but they're in the end relatively slow. \r\nWe need to be selective about which tests are party of the PR gates, and which are part of the daily test pipeline.\r\n\r\n\r\nWe need a doc write-up here. The requirements shouldn't be strict here. \r\nIt's meant to keep us fast & agile, but still have a really thorough test coverage."},{"Id":"35557750926","Type":"IssuesEvent","CreatedAt":"2024-02-09T19:04:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13230","RelatedDescription":"Opened issue \"Analyze End To End tests, compare whether they're being tested in existing Apex tests\" (#13230) at NuGet/Home","RelatedBody":"This issue is in a way, a prerequisite for https://github.com/NuGet/Client.Engineering/issues/2085. \r\n\r\nThe goal here is to ensure which end to end tests have apex equivalents. \r\n\r\nFor all tests that have Apex equivalent that are *stable*, remove them. "},{"Id":"35557680678","Type":"IssuesEvent","CreatedAt":"2024-02-09T19:01:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13229","RelatedDescription":"Opened issue \"Analyze vendor reported issues by priority and close ones that are unlikely to be addressed\" (#13229) at NuGet/Home","RelatedBody":"The vendors are tracking about 126 open issues.\r\n\r\nThe issues reported by them are issues that they're constantly retriaging. \r\n\r\nThis causes strain because they need to spend a lot of time ensuring this issues are up to date. \r\n \r\nThe goal here is: \r\n\r\n- Ensure the priority for all issues is current.\r\n- Look for potential duplicates\r\n- Identify simple to fix issues, and just fix them. \r\n- Identify low priority issues and consider closing them.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-10T03:30:18.332865Z","RunDurationInMilliseconds":1129}