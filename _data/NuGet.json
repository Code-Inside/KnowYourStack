{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14785097232","Type":"PullRequestEvent","CreatedAt":"2021-01-12T01:52:40","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8371","RelatedDescription":"Merged pull request \"Optimize the push package API\" (#8371) at NuGet/NuGetGallery","RelatedBody":"## Background\r\n\r\nPreviously, the functional tests on PROD failed repeatedly:\r\n\r\n* https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=77508&view=results\r\n* https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=77522&view=results\r\n* https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=77526&view=results\r\n\r\nThe functional tests push many packages in parallel, which caused an expensive SQL query to time out.\r\n\r\n## Fix\r\n\r\nThis improves the push package API performance by avoiding a costly SQL query on the \"hot\" path.\r\n\r\n<details>\r\n<summary>Verification...</summary>\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4362696&view=results\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=923920\r\n\r\nTest plan:\r\n* [x] Upload package\r\n* [x] Reupload package that previously failed validation\r\n* [x] Reupload package that previously passed validation \r\n\r\n</details>\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8368"},{"Id":"14782736616","Type":"IssuesEvent","CreatedAt":"2021-01-11T20:51:21","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8374","RelatedDescription":"Opened issue \"Licenses.nuget.org fails to display 0BSD license text\" (#8374) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nnuget.org [accepts](https://www.nuget.org/packages/Andrei.0bsd/0.2.10) packages with `0BSD` license, but the license [link](https://licenses.nuget.org/0BSD) on package details page shows\r\n\r\n> We have no information regarding the '0BSD' license.\r\n\r\n### Expected behavior\r\n0BSD license text is displayed. (need also to double check if there are similar issues with other licenses).\r\n\r\nRelated to https://github.com/NuGet/docs.microsoft.com-nuget/issues/2274"},{"Id":"14772704767","Type":"PullRequestEvent","CreatedAt":"2021-01-11T05:24:57","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7832","RelatedDescription":"Closed pull request \"Add FuGet link\" (#7832) at NuGet/NuGetGallery","RelatedBody":"FuGet is a NuGet package browser combined with an API browser. It's a really useful tool for .Net developers and it would be good to expose it directly from the package page. It enables developers to inspect content of NuGet packages, the API of packages, and even API diffs between different versions of the package. Here's example page - https://www.fuget.org/packages/FSharp.Core \r\n\r\nThe PR adds link to FuGet page for the current package in the Info section of the page. "},{"Id":"14771897189","Type":"IssuesEvent","CreatedAt":"2021-01-11T02:34:54","Actor":"augustoproiete","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8373","RelatedDescription":"Opened issue \"Add instructions to install .NET Tools as local\" (#8373) at NuGet/NuGetGallery","RelatedBody":"The current NuGet Gallery UI for .NET Tools shows instructions on how to install them as global tools, but doesn't have instructions for installing as a local tool.\r\n\r\n![image](https://user-images.githubusercontent.com/177608/104142779-5d90ca00-5393-11eb-8113-10cf8bb1fa47.png)\r\n\r\n---\r\n\r\n### Proposed UI\r\n\r\nI suggest adding a new tab for instructions on how to install it as a local tool, including creating the tool manifest, as that's currently required.\r\n\r\n![2021-01-10_22-26-15 (1)](https://user-images.githubusercontent.com/177608/104142789-67b2c880-5393-11eb-9c55-bfd58d8526bd.gif)\r\n\r\n- Rename the existing \".NET CLI\" tab to \".NET CLI (Global)\"\r\n- Update the info text at the bottom to `This package contains a .NET Tool you can call from the shell/command line.`\r\n- Add new tab \".NET CLI (Local)\" with the following instructions:\r\n```powershell\r\n> dotnet new tool-manifest\r\n> dotnet tool install --local <ToolName> --version <ToolVersion>\r\n```"},{"Id":"14764907875","Type":"IssuesEvent","CreatedAt":"2021-01-09T16:36:31","Actor":"carlreinke","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8372","RelatedDescription":"Opened issue \"Inline code block in documentation is HTML-entity-encoded twice\" (#8372) at NuGet/NuGetGallery","RelatedBody":"Input:\r\n```\r\nUsage: `SlnSort [options] <sln>`\r\n```\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/11667451/104103122-9890e180-525d-11eb-8031-2102ade45a09.png)\r\n\r\nPreviously reported in #4946, which was apparently closed without being fixed."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14785002610","Type":"IssuesEvent","CreatedAt":"2021-01-12T01:37:48","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9010","RelatedDescription":"Reopened issue \"Signing: Design dotnet package signing commands\" (#9010) at NuGet/Home","RelatedBody":"Write up an RFC describing the commands and options and get it reviewed before implementing the actual commands."},{"Id":"14784482633","Type":"IssuesEvent","CreatedAt":"2021-01-12T00:18:20","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10429","RelatedDescription":"Closed issue \"Package source path completely ignored in latest NuGet Package Manager versions\" (#10429) at NuGet/Home","RelatedBody":"\r\nHi there, \r\nVS2019 and also the latest V2017 updates for Windows with the new versions of NuGet Package Manager version having an issue with downloading location. \r\n\r\nI specified package source path to \r\nE:\\Nuget but still NuGet package manager save packages to \r\nC:\\Users\\{UserName}\\.nuget\\packages\r\nC:\\Microsoft\\Xamarin\\NuGet\r\nC:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\r\nC:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\r\n\r\nHow can I specify just one path, JUST ONE to store all NuGet packages there?\r\nOr, at least change the default \"C:\\Users\\{UserName}\\.nuget\\packages\" path to my own path? \r\n"},{"Id":"14784351649","Type":"IssuesEvent","CreatedAt":"2021-01-11T23:59:21","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10421","RelatedDescription":"Closed issue \"Referencing DeepSpeech.0.9.3 NuGet Package in netcoreapp3.1 results in CS0246 'DeepSpeechClient' could not be found\" (#10421) at NuGet/Home","RelatedBody":"Hi\r\n\r\nIt is unclear if this is an authoring issue with the package or there is an underlying NuGet PackageReference Issue. I have opened an issue with the DeepSpeech team here: https://github.com/mozilla/DeepSpeech/issues/3483 there is a significant amount of chatter on this issue which might be related: https://github.com/mozilla/DeepSpeech/pull/3373 they are expressing concerns about how to best distribute cross platform, can someone from the NuGet team address some of those concerns?\r\n\r\nI am attempting to use Mozilla’s DeepSpeech API via their prebuilt package available at https://www.nuget.org/packages/DeepSpeech in a .NET Core Project (specifically a netcoreapp3.1) however I am getting errors indicating that it cannot find DeepSpeechClient which would indicate something is not right with the Package Restore.\r\n\r\nSpecifically the error is\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0246\tThe type or namespace name 'DeepSpeechClient' could not be found (are you missing a using directive or an assembly reference?)\tPackageRefIssue\tC:\\GitHub\\DeepSpeech093NetCorePackageRefIssue\\PackageRefIssue\\Program.cs\t1\tActive\r\n```\r\n\r\n* If this is a package authoring error can you please describe what went wrong? Their NuSpec can be found here: https://github.com/mozilla/DeepSpeech/tree/master/native_client/dotnet/nupkg \r\n* If this is a NuGet Package bug I am committed to assisting in tracking it down.\r\n\r\nI have created this public repository that shows the issue: https://github.com/aolszowka/DeepSpeech093NetCorePackageRefIssue/tree/main \r\n\r\nThis fails on my local machine which is running Visual Studio 2019 Enterprise 16.8.3 on Windows 10.\r\n\r\nThis issue can be hacked around by adding an AssemblyReference to DeepSpeechClient from the NuGet “GAC”. I have demonstrated this fix here: https://github.com/aolszowka/DeepSpeech093NetCorePackageRefIssue/tree/Workaround-Using-Assembly-Path however this is less than ideal as you are not leveraging the package manager.\r\n\r\nTo me this indicates an issue with the package manager and not a .NET Core limitation.\r\n\r\nThe expectation is that you should be able to clone the above project (on the main branch) and be able to build without issue.\r\n\r\nThank you\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-12T05:30:38.1170776Z","RunDurationInMilliseconds":1815}