{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35429443279","Type":"PullRequestEvent","CreatedAt":"2024-02-06T03:09:03","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9796","RelatedDescription":"Opened pull request \"TFM Badges: Fixed focus underline and outline + Added the missing tooltip\" (#9796) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9795\r\n\r\nThis fixes:\r\n\r\n1. The TFM badges were showing a trailing underline when someone hovered over it. This has now been removed.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9b788d50-d795-4e9a-aa92-8c0fb52e890c)\r\n\r\n2. When someone brought tab focus to the badges, it showed an outline, but the outline was distorted because the child elements (`<span>`) had different dimensions to the parent (`<a>`). This has been fixed.\r\n\r\n    Previously,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/4710f491-e1ea-4479-bbb3-eee727eab101)\r\n    Now,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/82d68881-5e99-4d8d-a591-80501c56be90)\r\n\r\n3. The TFM badges are supposed to have a tooltip when you hover over them (See the package display page: https://www.nuget.org/packages/Newtonsoft.Json). This tooltip was missing on the search page, but it's been added now.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/c05796ce-b498-4159-bcde-887584f63806)\r\n"},{"Id":"35421027909","Type":"IssuesEvent","CreatedAt":"2024-02-05T20:02:34","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9693","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Obsolete URLs for image hosting (documentation)\" (#9693) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nOther\r\n\r\n### Describe the bug\r\n\r\nOn the [official website](https://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges), about how to package a library, in the \"Allowed domains for images and badges\" section, the following suggested links no longer exist:\r\n\r\n- https://api.bintray.com/ (410 - gone)\r\n- https://api.codeclimate.com/ (blank page)\r\n- api.dependabot.com (404 - Not Found)\r\n- https://api.travis-ci.org/ (`{}`)\r\n- <s>avatars</s>.githubusercontent.com (redirect to github.com)\r\n- https://badges.gitter.im/ (403 - Forbidden)\r\n- bettercodehub.com (Retired)\r\n- camo.githubusercontent.com (404 - Not Found)\r\n- https://cdn.syncfusion.com/ (Access Denied)\r\n- opencollective.com (???)\r\n- raw.github.com (redirect to github.com)\r\n- raw.githubusercontent.com (redirect to github.com)\r\n- user-images.githubusercontent.com (Access Denied)\r\n\r\n### Repro Steps\r\n\r\nJust access these links.\r\n\r\n### Expected Behavior\r\n\r\nUpdate documentation and remove the obsolete links\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"35415616158","Type":"IssuesEvent","CreatedAt":"2024-02-05T16:56:00","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9795","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Target framework badges have trailing whitespace \" (#9795) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe search page's target framework badges have trailing whitespace. Hovering over a target framework badge shows an underline.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/737941/b8b1a2ab-19f8-46a4-8484-46da354b8790)\r\n\n\n### Repro Steps\n\n1. Acquire tissues\r\n2. Navigate to https://www.nuget.org/packages\r\n3. Move the mouse to hover over a target framework badge\r\n4. Witness horrifying underline\r\n5. Use tissues to wipe tears\n\n### Expected Behavior\n\nHovering over a target framework badge should not show a trailing underline\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35348019997","Type":"IssuesEvent","CreatedAt":"2024-02-02T12:43:45","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9794","RelatedDescription":"Opened issue \"[Feature]: Change Target Framework Badges to be Latest instead of Lowest.\" (#9794) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nWhen we started this work for Framework badges we had a decision to make of whether to do something familiar for package users in terms of providing them the lowest framework asset in the package or the highest.\r\n\r\nWe initially went with the lowest framework asset as that was the common practice with .NET & NuGet and would adjust based on feedback.\r\n\r\nNow with further feedback, I believe we should re-consider this to be the latest asset to show how up-to-date the package actually is as it may make more sense long term for a consumer to see a package continues to provide support for the latest version of .NET.\r\n\r\n**TL;DR - Display the latest TFM included rather than the lowest.**\r\n\r\nRelated and can be ignored if we do this work instead: https://github.com/NuGet/NuGetGallery/issues/9044\n\n### Additional Context and Details\n\n_No response_"},{"Id":"35306083087","Type":"IssuesEvent","CreatedAt":"2024-02-01T09:26:21","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9793","RelatedDescription":"Opened issue \"Parameterize Framework Badges front end code using helpers\" (#9793) at NuGet/NuGetGallery","RelatedBody":"We can use a helper method to make the code in https://github.com/NuGet/NuGetGallery/blob/main/src/NuGetGallery/Views/Packages/_SupportedFrameworksBadges.cshtml more concise."},{"Id":"35278731677","Type":"IssuesEvent","CreatedAt":"2024-01-31T14:07:59","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9792","RelatedDescription":"Opened issue \"Make DateTime ISO 8601 throughout NuGet.org\" (#9792) at NuGet/NuGetGallery","RelatedBody":"\r\n<img width=\"1872\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/1288848/c06ad27e-ddc0-495e-8b19-32e05e89c89c\">\r\n\r\n\r\nhttps://github.com/NuGet/NuGetGallery/blob/7f55d930b98e3fcd0d901bb897819d96a9ebedb8/src/NuGetGallery.Services/Extensions/DateTimeExtensions.cs#L21C9-L24C10\r\n\r\n->\r\n\r\n```\r\npublic static string ToNuGetShortDateString(this DateTime self)\r\n{\r\n    return self.ToString(\"yyyy-MM-dd\");\r\n}\r\n```\r\n\r\nOr similar?"},{"Id":"35262820182","Type":"IssuesEvent","CreatedAt":"2024-01-31T03:46:01","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9791","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9791) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nStatistics on the search page don't match statistics on the package details page.\n\n### Repro Steps\n\nSearch for Fabulous Scheduler on NuGet.org and view the results: https://www.nuget.org/packages?q=fabulous+scheduler\r\nClick on the FabulousScheduler link on the results page and view the stats on the package details page: https://www.nuget.org/packages/FabulousScheduler\r\n\r\nThey don't match.\n\n### Expected Behavior\n\nBoth screen show the same download count.\n\n### Screenshots\n\nSearch results:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/14225979/b4367bef-acd3-48a0-9c9b-d7ff714aeb7e)\r\n\r\nPackage details:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/14225979/08dccb02-94a8-4f06-963d-cc593b4b31f0)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35224619781","Type":"IssuesEvent","CreatedAt":"2024-01-30T02:00:57","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9790","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Search filters panel blinks when we click 'Apply'\" (#9790) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe checkboxes for the framework generations and TFMs blink when the search page is loaded with filter parameters. \r\n\r\nThe likely cause for it how we initialize checobox states on the page. JavaScript code reads the search page URL and uses it to set the state of the checkboxes on the page. This happens after page load, which is why we see the blinking.\n\n### Repro Steps\n\n1. Select a framework generation or TFM filter checkbox, say `.NET`\r\n2. Click on `Apply`\r\n3. The `.NET` checkbox will blink after the page loads\n\n### Expected Behavior\n\nThe checkbox states should be set in the `.cshtml` itself so that we don't need to run any JavaScript.\r\n\r\nWe can modify the `FrameworkFilterGroup` objects in the view model to have a checkbox state enum with `Checked/Unchecked/Indeterminate` values.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\nSee https://github.com/NuGet/NuGetGallery/pull/9782#issuecomment-1907354318"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35396506094","Type":"IssuesEvent","CreatedAt":"2024-02-05T06:37:39","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13063","RelatedDescription":"Closed issue \"PM UI Scrolling no longer loads additional packages.\" (#13063) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\n17.8.34309.116\r\n\r\n### Worked before?\r\n\r\n17.7.7\r\n\r\n### Impact\r\n\r\nIt’s more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nReported from [DevCom Feedback](https://developercommunity.visualstudio.com/t/Problem-with-NuGet-Package-Manager-UI-af/10530864)\r\n1. Open the PM UI. \r\n2. Scroll down to the bottom of the list.\r\n\r\nExpected: More packages are loaded\r\nActual: The end of the list is reached and no new items are loaded. Sometimes the list will load one additional page and then stop loading more. \r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"35394448529","Type":"IssuesEvent","CreatedAt":"2024-02-05T04:37:04","Actor":"shivinsky","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13218","RelatedDescription":"Opened issue \"`dotnet list package` fails when `Directory.Packages.props` imports a parent file on .NET 8\" (#13218) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n8.0.101\n\n### Worked before?\n\n7.0.405\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n**Project**:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net472</TargetFramework>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n**Directory.Packages.props**:\r\n```xml\r\n<Project>\r\n  <Import Project=\"Packages.props\" />\r\n</Project>\r\n```\r\n\r\n**Packages.props**:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"13.0.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n---\r\n\r\nThe following command runs successfully on .NET 7, but fails on .NET 8:\r\n`dotnet restore; dotnet list package`\r\n\r\n**.NET 7**:\r\n```\r\nProject has the following package references\r\n   [net472]:\r\n   Top-level Package      Requested   Resolved\r\n   > Newtonsoft.Json                  13.0.3\r\n```\r\n\r\n**.NET 8**:\r\n```\r\nUnable to read a package reference from the project. Please make sure that your project file and project.assets.json file are in sync by running restore.\r\n```\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-06T03:30:17.8756862Z","RunDurationInMilliseconds":1200}