{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39939288788","Type":"IssuesEvent","CreatedAt":"2024-07-08T04:25:31","Actor":"bradwilson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10058","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Uploaded certificate is not properly validating package upload\" (#10058) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nI have recently updated my code signing certificate used for the [xunit organization](https://www.nuget.org/organization/xunit). When uploading packages signed with the new certificate, it was failing validation.\r\n\r\nSo I extracted the certificate from the signed NuGet package to create the required DER encoded CER file. I verified that the SHA1 matches what the failure e-mail shows. (BTW, it's SUPER annoying that you show the SHA256 of a certificate on the organization edit page, but the SHA1 of the certificate when it fails to sign properly. Please pick one thing and use it everywhere!)\r\n\r\nAccording to PowerShell, these are the SHA1 and SHA256 hashes for the .cer file:\r\n\r\n```\r\nAlgorithm   Hash                                                               Path\r\n---------   ----                                                               ----\r\nSHA1        E49A663526BCC40878466BE4F49F9833B3302C0A                           xunit.cer\r\nSHA256      0D7662406AABB78B853A1901343BF9F7757492B785402172C5962D8204408161   xunit.cer\r\n```\r\n\r\nThis is what the e-mail told me:\r\n\r\n`The package was signed, but the signing certificate (SHA-1 thumbprint e49a663526bcc40878466be4f49f9833b3302c0a) is not associated with your account.`\r\n\r\nAnd this is what the organization shows for the uploaded certificate (the old one is still there):\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/16944/99a7755c-c3de-419e-9a7a-b9982f6369c5)\r\n\r\nI have tried uploading packages several times and it still continues to fail, despite the certificate being there. I uploaded it about 3pm Pacific time but it still fails even now at 9pm Pacific time (I thought maybe it needed some time to work itself through the system).\r\n\r\nAt this point I believe there is something broken in the process and I need help figuring out what the broken piece is. If necessary, I can provide both a signed NuGet package that I'm trying to upload, as well as the .CER file that I extracted from the signed package.\n\n### Repro Steps\n\n1. Get the package that's signed with my key (you don't have that yet)\r\n2. Try to upload it\r\n3. Fail\n\n### Expected Behavior\n\nI can upload the package(s).\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"39855960634","Type":"PullRequestEvent","CreatedAt":"2024-07-04T00:56:47","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10057","RelatedDescription":"Merged pull request \"Explicitly triggering release pipelines\" (#10057) at NuGet/NuGetGallery","RelatedBody":"Existing trigger pipeline does not pass through triggering pipeline properly, so instead I wrote a script that just starts target pipelines explicitly using AzDO REST API.\r\n\r\nHad to add a parameter to this pipeline that contains information about target pipelines because only parameters support complex values (arrays, objects)."},{"Id":"39855793223","Type":"PullRequestEvent","CreatedAt":"2024-07-04T00:43:56","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10057","RelatedDescription":"Opened pull request \"Explicitly triggering release pipelines\" (#10057) at NuGet/NuGetGallery","RelatedBody":"Existing trigger pipeline does not pass through triggering pipeline properly, so instead I wrote a script that just starts target pipelines explicitly using AzDO REST API.\r\n\r\nHad to add a parameter to this pipeline that contains information about target pipelines because only parameters support complex values (arrays, objects)."},{"Id":"39853442437","Type":"PullRequestEvent","CreatedAt":"2024-07-03T21:50:13","Actor":"NeuroXiq","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10056","RelatedDescription":"Opened pull request \"[Feature]: DNDocs #10055\" (#10056) at NuGet/NuGetGallery","RelatedBody":"Created a link to DNDocs in similar way like FuGet does.\r\nCreated Unit Tests \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"39853231162","Type":"IssuesEvent","CreatedAt":"2024-07-03T21:37:56","Actor":"NeuroXiq","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10055","RelatedDescription":"Opened issue \"[Feature]: DNDocs\" (#10055) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nhttps://github.com/NuGet/NuGetGallery/issues/6946\r\nhttps://github.com/NuGet/NuGetGallery/issues/9776\n\n### The Elevator Pitch\n\n## Short description\r\nLooking on github.com repositories and nuget.org packages I noticed that lots of them does not\r\nhave documentation online. If I want to see classes, methods etc. I need to open source code \r\nand look in the C# code about implemented feature. This is cumbersome.\r\n\r\nI created DNDocs to host API Explorer exactly for this problem:\r\nhttps://dndocs.com/i/nuget/AutoMapper/13.0.1\r\nhttps://dndocs.com/i/nuget/Microsoft.EntityFrameworkCore/8.0.3\r\n\r\n### Long description\r\nDNDocs is a simple API Explorer (documentation hosting platform).\r\nDNDocs allows to generate and host API Docs online using [Docfx](https://dotnet.github.io/docfx/).\r\nAfter generating a project, server do not delete it - generated docs are stored on the server disk\r\n(cached) and available immediately after generation. So generating occurs only once\r\nand can took 1-5 minutes and then Docs are  accessible immediately.\r\n\r\nTo Explore nuget package replace values in URL and open the page:\r\n`https://dndocs.com/i/nuget/{NugetPackageName}/{NugetPackageVersion}`\r\nWait 1-5 minutes (if server generate is for the first time) and just click green button\r\non the right.\r\n\r\n### Additional informations\r\nFor example, people want to have API Explorer and I think DocFX can fit well here:\r\n\r\nhttps://github.com/NuGet/NuGetGallery/issues/6946\r\nhttps://github.com/NuGet/NuGetGallery/issues/9776\r\n\r\nAnd also some people on github hosts docs on DNDocs:\r\nhttps://github.com/madelson/DistributedLock\r\nhttps://github.com/betalgo/openai\r\nhttps://github.com/adamhathcock/sharpcompress\r\n\r\n### Summary\r\nSo thats all what I want to say in this request.\r\nI would like to hear Your opinion about this feature and DNDocs project.\r\nDo You like it or not? I'm open to any and all ideas.\r\n\r\nBest Regards\r\nMarek Węglarz / NeuroXiq\r\nhttps://github.com/NeuroXiq/DNDocs\r\n\r\n\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39817774281","Type":"PullRequestEvent","CreatedAt":"2024-07-02T21:50:49","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10043","RelatedDescription":"Merged pull request \"Support service principal\" (#10043) at NuGet/NuGetGallery","RelatedBody":"Partially addresses: https://github.com/NuGet/Engineering/issues/5448\r\n\r\nAdd function to support Service principal access blob storage.\r\n\r\nit was needed for synthetics jobs cross tenant access.\r\n\r\nTested for one FeatureFlag job in dev"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39967450535","Type":"IssuesEvent","CreatedAt":"2024-07-08T20:18:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10780","RelatedDescription":"Closed issue \"`NuGetProjectManagerService` calls to get transitive packages should batch projects\" (#10780) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: all\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\nContinuation of https://github.com/NuGet/Home/issues/10740\r\nThe following methods are called repeatedly for each project, rather than batched:\r\n\r\n```\r\nIProjectContextInfoExtensions.GetInstalledAndTransitivePackagesAsync(this IProjectContextInfo projectContextInfo,)\r\n->\r\nNuGetProjectManagerService.GetInstalledAndTransitivePackagesAsync(IReadOnlyCollection<string> projectIds,)\r\n```\r\n\r\nBatching these may save significant overhead in common PM UI actions, and reduce the overall load times for any Tab, event, or action that triggers them (eg, loading of any of the 4 tabs, all Package Management buttons, selecting a package, changing sources, external changes to project).\r\n\r\nRelated to https://github.com/nuget/home/issues/10356.\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"39967436627","Type":"IssuesEvent","CreatedAt":"2024-07-08T20:17:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10740","RelatedDescription":"Closed issue \"`NuGetProjectManagerService` calls to get installed packages should batch projects\" (#10740) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: all\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\nThe following methods are called repeatedly for each project, rather than batched:\r\n```\r\nIProjectContextInfoExtensions.GetInstalledPackagesAsync(this IProjectContextInfo projectContextInfo, projectContextInfos,,)\r\n->\r\nNuGetProjectManagerService.GetInstalledPackagesAsync(IReadOnlyCollection<string> projectIds,)\r\n```\r\n\r\nBatching these may save significant overhead in common PM UI actions, and reduce the overall load times for any Tab, event, or action that triggers them (eg, loading of any of the 4 tabs, all Package Management buttons, selecting a package, changing sources, external changes to project).\r\n\r\nRelated to https://github.com/nuget/home/issues/10356.\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"39964029323","Type":"IssuesEvent","CreatedAt":"2024-07-08T18:04:35","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13606","RelatedDescription":"Closed issue \"Add telemetry for https vs non https sources\" (#13606) at NuGet/Home","RelatedBody":"we need to implement telemetry for tracking HTTPS vs Non-HTTPS sources in version 17.11. This feature will establish a baseline for comparisons with version 17.12, which is planned to include Non-HTTPS source errors. "},{"Id":"39960207364","Type":"IssuesEvent","CreatedAt":"2024-07-08T15:50:51","Actor":"ViktorHofer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13610","RelatedDescription":"Opened issue \"NU1903 is logged twice\" (#13610) at NuGet/Home","RelatedBody":"```\r\nC:\\Users\\vihofer\\Downloads\\testapp>..\\dotnet-sdk-9.0.100-preview.7.24358.3-win-x64\\dotnet.exe build\r\nRestore succeeded with 2 warning(s) in 0.3s\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Net.Http' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-7jgj-8wvc-jh57\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Text.RegularExpressions' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-cmhx-cq75-c4mj\r\nYou are using a preview version of .NET. See: https://aka.ms/dotnet-support-policy\r\n  testapp succeeded with 2 warning(s) (0.3s) → bin\\Debug\\netstandard1.6\\testapp.dll\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Net.Http' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-7jgj-8wvc-jh57\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Text.RegularExpressions' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-cmhx-cq75-c4mj\r\n```\r\n\r\nI assume the warning is logged both during restore and during the build target."},{"Id":"39941559064","Type":"IssuesEvent","CreatedAt":"2024-07-08T06:28:26","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13607","RelatedDescription":"Opened issue \"Visual Studio \"preview install\" should warn about packages with known vulnerabilities\" (#13607) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nWhen installing packages in Visual Studio's package manager UI, (unless disabled) it will pop up a preview window telling you the list of packages that will be installed/upgraded. If this list contains packages with known vulnerabilities, it should tell you, before clicking the OK button to actually install the packages in the project.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-09T03:30:18.8306475Z","RunDurationInMilliseconds":998}