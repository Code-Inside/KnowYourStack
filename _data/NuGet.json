{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"42771448414","Type":"PullRequestEvent","CreatedAt":"2024-10-11T16:49:47","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10210","RelatedDescription":"Closed pull request \"Add 3rd party dll signing for new tool\" (#10210) at NuGet/NuGetGallery","RelatedBody":"Related to [#2214597](https://mseng.visualstudio.com/AzureDevOps/_workitems/edit/2214597)\r\nAdd 3rd party dll signing for new tool"},{"Id":"42766951392","Type":"PullRequestEvent","CreatedAt":"2024-10-11T14:22:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10216","RelatedDescription":"Merged pull request \"Move unique constraint check to extension method\" (#10216) at NuGet/NuGetGallery","RelatedBody":"Also, make the inner exception layer check be tolerant of changes or exception wrapping.\r\n\r\nThe existing semantics of actually accepting several API SQL error codes is unchanged.\r\n\r\nThis allows other code to use this check also. \r\n\r\nSupports https://github.com/NuGet/NuGetGallery/issues/10212."},{"Id":"42746464172","Type":"PullRequestEvent","CreatedAt":"2024-10-10T23:59:09","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9713","RelatedDescription":"Closed pull request \"ServerCommon version for FunctionalTests.Core\" (#9713) at NuGet/NuGetGallery","RelatedBody":"Missed explicit version of ServerCommon package."},{"Id":"42746441327","Type":"PullRequestEvent","CreatedAt":"2024-10-10T23:57:32","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9981","RelatedDescription":"Closed pull request \"Removing blob storage SDK leakage into the code base\" (#9981) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5456\r\n\r\nWe have wrappers around blob storage SDK (`CloudBlobWrapper`, `CloudBlobContainerWrapper`, `CloudBlobClientWrapper`), unfortunately, they leak underlying SDK types as function arguments, return types and exceptions thrown, which defeats the purpose and complicates swapping the underlying implementation.\r\n\r\nThis change aims to stop that leakage. Introduced more wrappers around concepts that we use (`BlobListContinuationToken`, `CloudBlobCopyState`, `CloudBlobCopyStatus`, `CloudBlobLocationMode`, `CloudBlobPropertiesWrapper`, `ListingDetails`), propagated other wrappers that we had, but didn't use everywhere (`AccessConditionWrapper`, `FileUriPermissions`), wrapped `StorageException` with our own exception hierarchy following the checks existing in the code, simplifying catch expressions."},{"Id":"42746239594","Type":"PullRequestEvent","CreatedAt":"2024-10-10T23:43:32","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10208","RelatedDescription":"Closed pull request \"Treating package version not found warnings as errors.\" (#10208) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5665 in this repo."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"42757221873","Type":"IssuesEvent","CreatedAt":"2024-10-11T09:04:10","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13850","RelatedDescription":"Opened issue \"update docs that plugins no longer require authenticode\" (#13850) at NuGet/Home","RelatedBody":"If this PR gets merged: https://github.com/NuGet/NuGet.Client/pull/6042\r\n\r\nThen we should update the docs: https://github.com/NuGet/docs.microsoft.com-nuget/blob/d9adcadcf092fb08d33502e6d9fcfd0fa4020872/docs/reference/extensibility/NuGet-Cross-Platform-Plugins.md?plain=1#L44"},{"Id":"42745819075","Type":"IssuesEvent","CreatedAt":"2024-10-10T23:16:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13849","RelatedDescription":"Opened issue \"GetPackageSpec_WithInvalidUsingMicrosoftNetSdk_ThrowsAnException is flaky\" (#13849) at NuGet/Home","RelatedBody":""},{"Id":"42741520417","Type":"IssuesEvent","CreatedAt":"2024-10-10T20:00:16","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13848","RelatedDescription":"Opened issue \"[Feature Request] Support nuget.toml for Package Management in .NET\" (#13848) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\n[Rust (Cargo)](https://doc.rust-lang.org/cargo/reference/manifest.html) and Python (Poetry) have adopted the TOML format for their package management files, simplifying project setup and dependency management. Go and Swift also use TOML-like concepts for managing dependencies, providing a cleaner and more readable way to handle build and package concerns.\n\n.NET can evolve its package management format by introducing a nuget.toml file, allowing for a more modern and modular approach to dependency management. This file would clearly separate package management from project/solution configurations and other build concerns, aligning with modern best practices. Or even aid in the idea of moving away from projects/solutions in the future to be less complex to beginners.\n\nBenefits of nuget.toml:\n\n**Cleaner separation of concerns:**\n\nDecouples package management from project/solution files (csproj, sln), making it easier to manage dependencies across projects.\n\n**Simplified syntax and readability:**\n\nTOML is more human-readable and less verbose compared to XML, enhancing developer experience for managing dependencies.\n\n**Out-of-the-box support for advanced concepts:**\n\nThe nuget.toml file could support more advanced features like CPM (centralized package management), dependency groups, and profiles, improving flexibility for larger, more complex projects.\n\n```\n[dependencies]\nNewtonsoft.Json = \"12.0.3\"\nNUnit = \"3.12.0\"\n\n[dev-dependencies]\nxUnit = \"2.4.1\"\nStyleCop.Analyzers = \"1.1.118\"\n\n[package]\nname = \"MyProject\"\nversion = \"1.0.0\"\nauthors = [\"Author Name\"]\n```\n\nAdditional Considerations:\nThere are countless opportunities to re-think pkg mgmt and all the modern things like analyzers, targets, \n\nA migration path or coexistence with the existing csproj dependency structure should be considered to ensure developers can adopt nuget.toml without disrupting current workflows.\n\nnuget.toml should be fully supported by the existing NuGet ecosystem, allowing for seamless management of packages and dependencies.\n\nOther random ideas:\n\n```\n[dependencies]\nNewtonsoft.Json = \"12.0.3\"\n\n[target-frameworks]\nnetcoreapp3.1 = { Microsoft.Extensions.Logging = \"3.1.0\" }\nnet5.0 = { Microsoft.Extensions.Hosting = \"5.0.0\" }\nnet6.0 = { Microsoft.Extensions.Logging.Console = \"6.0.0\" }\n\n[runtime]\nwin-x64 = { WindowsSpecific.Library = \"1.0.0\" }\nlinux-x64 = { LinuxSpecific.Library = \"1.0.0\" }\n```\n\n```\n[dependencies]\nEntityFrameworkCore = \"6.0.0\"\n\n[transitive-dependencies]\noverride = { Newtonsoft.Json = \"12.0.3\" }\n```\n\n```\n[build-tasks]\npre-build = [\"scripts/generate-version.ps1\"]\npost-build = [\"scripts/deploy.ps1\"]\n\n[custom-targets]\nclean = \"dotnet clean\"\npublish = \"dotnet publish --configuration Release\"\n```\n\n```\n[tools]\ndotnet-ef = \"6.0.0\"\ndotnet-sonarscanner = \"5.2.1\"\n```\n\nAll of this of course goes into a single file and isn't separated by nuget.config, .csproj, packages.props, etc. You can do it all from TOML.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"42736037366","Type":"IssuesEvent","CreatedAt":"2024-10-10T16:49:16","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13155","RelatedDescription":"Closed issue \"Wrong order of arguments in logs for centralized package version (string `Info_AddPkgCPM`)\" (#13155) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, NuGet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Command Line 6.8.0.122 (via dotnet CLI)\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\nThe string template `Info_AddPkgCPM` in https://github.com/dotnet/dotnet/blob/002d01eeae9f40bc6d021971cac07501928de3fc/src/nuget-client/src/NuGet.Core/NuGet.CommandLine.XPlat/Strings.resx#L764-L767\r\n\r\nRenders to:\r\n```\r\ninfo : PackageReference for package 'NAudio' added to '/some-project/src/Directory.Packages.props' and PackageVersion added to central package management file '/some-project/src/Web/UiComponents/Zezo.UiComponents.csproj'.\r\n```\r\n\r\nshouldn't it instead be:\r\n\r\n```\r\ninfo : PackageReference for package 'NAudio' added to '/some-project/src/Web/UiComponents/Zezo.UiComponents.csproj'  and PackageVersion added to central package management file '/some-project/src/Directory.Packages.props'.\r\n```\r\n\r\nThe arguments `{1}` and `{2}` should be swapped. \r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-10-12T03:30:22.6943352Z","RunDurationInMilliseconds":952}