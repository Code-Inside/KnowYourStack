{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"28432115581","Type":"IssuesEvent","CreatedAt":"2023-04-14T23:39:28","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9467","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Password login flow redirects to wrong sign in page after creating temp password\" (#9467) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nIn the temporary password login flow that we enable for users, once they've created the temporary password, they see this page:\r\n![image](https://user-images.githubusercontent.com/82980589/232170652-461fea99-0bab-419d-bcda-98dfaef4d398.png)\r\n\r\nThe 'Sign in' link here takes you to the default sign in page: https://www.nuget.org/users/account/LogOn\r\n![image](https://user-images.githubusercontent.com/82980589/232170706-a107fb9b-dbf8-4d28-9a4f-d1d406ee4ccb.png)\r\n\r\nInstead, it should send you to the password enabled sign in page here: https://www.nuget.org/users/account/LogOnNuGetAccount\r\n![image](https://user-images.githubusercontent.com/82980589/232170778-3bf994e4-9b9d-4b56-b4f7-eba33dbde997.png)\r\n\r\n\n\n### Repro Steps\n\n1. Enable password login\r\n2. Follow the steps to create a temporary password\r\n3. Click on the 'sign in' link you see on the page once your password has been set\n\n### Expected Behavior\n\nWe should be redirected to the password-enabled sign in page here: https://www.nuget.org/users/account/LogOnNuGetAccount\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"28377011933","Type":"PullRequestEvent","CreatedAt":"2023-04-12T21:48:30","Actor":"theot12","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9464","RelatedDescription":"Merged pull request \"Disallow aria-expanded for collapsible elements without an allowed role\" (#9464) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9415\r\n\r\nAdded a fix to the JavaScript that controls collapsible elements to not add the `aria-expanded` attribute for elements that do not have an [allowed role](https://w3c.github.io/aria/#aria-expanded)."},{"Id":"28373723041","Type":"IssuesEvent","CreatedAt":"2023-04-12T19:02:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9466","RelatedDescription":"Opened issue \"[Feature]: Hide metadata for any package that is both unlisted and locked\" (#9466) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nSometimes on NuGet.org, we want to hide the freeform content of a package so it's no longer rendered on the package details package. Examples of this would be packages that have project URLs linking to domains that have lapsed in their registration and are now spam. Another example is a package that contains somewhat ambiguous, potentially offensive language that does not meet the threshold of a deletion (takedown).\r\n\r\nCurrently, we have this behavior for `package is unlisted AND package is locked AND all owners are locked`. We should just remove the `all owners are locked` criteria:\r\nhttps://github.com/NuGet/NuGetGallery/blob/0931f8b8176fc59d6bf0d47dee2baf686db3bea4/src/NuGetGallery/ViewModels/DisplayPackageViewModel.cs#L166\n\n### The Elevator Pitch\n\nThis will give the NuGet.org admin team more ability to hide unsafe, offensive, or spammy content that otherwise does not necessitate a deletion.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"28351213154","Type":"PullRequestEvent","CreatedAt":"2023-04-12T02:43:04","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9465","RelatedDescription":"Opened pull request \"[A11y] Make screen readers start with packages list on Search Page.\" (#9465) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n\r\n* Gives focus to `results-column` element to tell screen readers were to start if the `Apply` button or the `Search` button were clicked.\r\n* uses `localStorage` to track if those buttons were clicked before the page refresh.\r\n\r\nAddresses: https://github.com/NuGet/NuGetGallery/issues/9422"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"28446073419","Type":"IssuesEvent","CreatedAt":"2023-04-16T13:01:02","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12494","RelatedDescription":"Closed issue \"NuGet detecting non-existent cycle in solution\" (#12494) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild version 17.6.0-preview-23122-03+f93b24b5a for .NET Framework\n\n### Worked before?\n\nYes, on the same version. The issue goes away and pops back up randomly\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nThe issue happens intermittently. The code is internal, so you can reach out to me for the complete sln.\r\n\r\nThis is one of the project files `PreBind.csproj` in the solution:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">x86</Platform>\r\n    <TargetFramework>net472</TargetFramework>\r\n    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n    <Platforms>AnyCPU;x86</Platforms>\r\n  </PropertyGroup>\r\n  <ItemDefinitionGroup>\r\n    <PackageReference GeneratePathProperty=\"true\" />\r\n  </ItemDefinitionGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"VS.Tools.DevDiv.Decatur\" Version=\"17.5.22121502\" PrivateAssets=\"all\" ExcludeAssets=\"all\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\Microsoft.Cabinet.dll\" />\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\Microsoft.WindowsInstaller.dll\" />\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\Sign.dll\" />\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\UnifiedBuildInterface.dll\" />\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\wix.dll\" />\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\WixVSExtension.dll\" />\r\n    <Reference Include=\"$(PkgVS_Tools_DevDiv_Decatur)\\wconsole.dll\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"$(MSBuildThisFileDirectory)..\\Prebind\\Prebind.csproj\" />\r\n    <ProjectReference Include=\"$(MSBuildThisFileDirectory)..\\BuildTools\\BuildTools.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nWhen I try to build I keep getting errors like:\r\n\r\n```\r\n6>C:\\Users\\yobae\\source\\repos\\SetupBuild2\\IronmanExpParser\\IronmanExpParser.csproj : error NU1108: Cycle detected. \r\n6>C:\\Users\\yobae\\source\\repos\\SetupBuild2\\IronmanExpParser\\IronmanExpParser.csproj : error NU1108:   IronManExpParser -> PreBind -> PreBind.\r\n```\r\n\r\nWhich seems to suggest PreBind has a dependency on itself.\r\n\r\n[detailed.log](https://github.com/NuGet/Home/files/11004771/detailed.log)\n\n### Verbose Logs\n\n```shell\nAttached detailed log above.\n```\n"},{"Id":"28436402801","Type":"IssuesEvent","CreatedAt":"2023-04-15T11:16:35","Actor":"ViktorHofer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12543","RelatedDescription":"Opened issue \"CPM - NU1009 should be suppressable\" (#12543) at NuGet/Home","RelatedBody":"Example: Your net7.0 application references xunit.assert which only offers a netstandard1.1 asset. Because of that, your application receives the transitive NETStandard.Library/1.6.1 package dependency which itself brings in a ton other framework dependencies and some of these might even have a known vulnerability (i.e. System.Runtime/4.3.0).\r\n\r\nTo minimize the dependency graph and not bring these out-of-support and vulnerable dependencies into the closure, we define a PackageReference to NETStandard.Library/2.0.3 which results in it being preferred over the transitive NETStandard.Library/1.6.1 package and a trimmed dependency graph (NETStandard.Library/2.0.3 has a single dependency only).\r\n\r\nThis is achieved via the following: https://github.com/dotnet/runtime/blob/ba0d5f41c25357e375927bab28ce268262bf22ca/eng/testing/xunit/xunit.targets#L3-L6\r\n\r\nNow with CPM enabled, implicitly referenced packages can't be bumped anymore as the unsuppressable `NU1009` error is raised. The alternative of disabling CPM is not possible as that affects every project that has a (transitive or direct) package dependency on NETStandard.Library/1.6.1. These days such projects are mostly test projects in our stack which use xunit or Shouldly but those are hundreds in runtime and still a lot in msbuild.\r\n\r\nCPM should warn about such cases but not error without any way to workaround it.\r\n\r\ncc @jeffkl "},{"Id":"28425365433","Type":"PullRequestEvent","CreatedAt":"2023-04-14T16:30:32","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12542","RelatedDescription":"Opened pull request \"allowInsecureConnections and disableCertificateValidation Proposal\" (#12542) at NuGet/Home","RelatedBody":"This proposal introduces two new properties to control the behavior surrounding insecure connections (http sources) and disabling certificate validations (https sources). This is proposed to address #4387 and #12015 in the .NET 8 timeframe.\r\n\r\n[Rendered Proposal]()\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"28398979612","Type":"IssuesEvent","CreatedAt":"2023-04-13T16:22:55","Actor":"daningalla","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12541","RelatedDescription":"Opened issue \"`FatalProtocolException` retrieving package content using c# client libraries\" (#12541) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nClient libraries: 6.5.0, net-6.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nEnvironment:\r\nDebian Linux\r\nnet6 runtime\r\nProcess running in k8 pod\r\n\r\nOverview: The application's responsibility is to retrieve packages from nuget and perform various indexing of artifacts, etc. This is a very isolated incident, and subsequent runs by the application were successful.\r\n\r\nUsage of the client lib:\r\n\r\n```cs\r\nawait using var memoryStream = new MemoryStream();\r\n\r\nvar resource = await request\r\n    .Repository\r\n    .GetResourceAsync<FindPackageByIdResource>(cancellationToken)\r\n    .ConfigureAwait(false);\r\n\r\nvar result = await resource.CopyNupkgToStreamAsync(\r\n        request.PackageId.Id,\r\n        new NuGetVersion(request.PackageId.Version.ToString()),\r\n        memoryStream,\r\n        new NullSourceCacheContext(),\r\n        _loggingAdapter,\r\n        cancellationToken)\r\n    .ConfigureAwait(false);\r\n```\r\n\r\nThe package being retrieved was `System.Runtime.Serialization.Primitives`.\r\n\n\n### Verbose Logs\n\n```shell\nTop level error:\r\n\r\nFailed to retrieve information about 'System.Runtime.Serialization.Primitives' from remote source 'https://api.nuget.org/v3-flatcontainer/system.runtime.serialization.primitives/index.json'. Path cannot be the empty string or all whitespace. (Parameter 'path') \r\n```\r\n\r\nTraces:\r\n```\r\nNuGet.Protocol.Core.Types.FatalProtocolException:\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResource+<FindPackagesByIdAsync>d__17.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResource+<EnsurePackagesAsync>d__16.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResource+<CopyNupkgToStreamAsync>d__13.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\nInner exception System.ArgumentException handled at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResource+<FindPackagesByIdAsync>d__17.MoveNext:\r\n   at System.IO.Directory.CreateDirectory (System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at NuGet.Protocol.HttpCacheUtility+<CreateCacheFileAsync>d__2.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\n   at NuGet.Protocol.HttpSource+<>c__DisplayClass15_0`1+<<GetAsync>b__0>d.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\n   at NuGet.Common.ConcurrencyUtilities+<ExecuteWithFileLockedAsync>d__5`1.MoveNext (NuGet.Common, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\n   at NuGet.Common.ConcurrencyUtilities+<ExecuteWithFileLockedAsync>d__5`1.MoveNext (NuGet.Common, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31b\r\n   ...\r\n   at NuGet.Protocol.HttpSource+<GetAsync>d__15`1.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   ...\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResource+<FindPackagesByIdAsync>d__17.MoveNext (NuGet.Protocol, Version=6.5.0.154, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n```\r\n\r\nLooks like a cache directory was being made but a bad/empty path was specified? I suspect the issue is symptomatic of a failure on the http feed side.\n```\n"},{"Id":"28370642166","Type":"IssuesEvent","CreatedAt":"2023-04-12T16:42:38","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12535","RelatedDescription":"Closed issue \"[bug] error NU1301 (Unable to load the service index for source https://api.nuget.org/v3/index.json.) when I am trying to create any .NET Application in Ubuntu 20.04\" (#12535) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet-sdk-7.0.202\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n1. Step one keep Ubuntu 20.04 with all its dependencies updated\r\n2. Try to create any project that needs additional dependencies like https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio-code#create-a-web-project-3 or https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-csharp?tabs=in-process#create-an-azure-functions-project\r\n3. That it, when omnisharp or the dotnet sdk try to restore/build/run the project the following exception its handled `error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.`\n\n### Verbose Logs\n\n```shell\n(in) RestoreGraphItems Count '7' (TaskId:39)\r\n                     (in) RestoreDisableParallel 'False' (TaskId:39)\r\n                     (in) RestoreNoCache 'False' (TaskId:39)\r\n                     (in) RestoreIgnoreFailedSources 'False' (TaskId:39)\r\n                     (in) RestoreRecursive 'True' (TaskId:39)\r\n                     (in) RestoreForce 'False' (TaskId:39)\r\n                     (in) HideWarningsAndErrors 'False' (TaskId:39)\r\n                     (in) RestoreForceEvaluate 'False' (TaskId:39)\r\n                     (in) RestorePackagesConfig 'False' (TaskId:39)\r\n                     X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/7.0.202/trustedroots/codesignctl.pem'. (TaskId:39)\r\n                     X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/7.0.202/trustedroots/timestampctl.pem'. (TaskId:39)\r\n                     Running restore with 4 concurrent jobs. (TaskId:39)\r\n                     Reading project file /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj. (TaskId:39)\r\n                     The restore inputs for 'TodoApi' have changed. Continuing restore. (TaskId:39)\r\n                     Restoring packages for /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj... (TaskId:39)\r\n                     Restoring packages for .NETCoreApp,Version=v7.0... (TaskId:39)\r\n11:06:51.525     1>/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n11:06:51.533     1>/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n                     Checking compatibility of packages on net7.0. (TaskId:39)\r\n                     All packages and projects are compatible with net7.0. (TaskId:39)\r\n                     Committing restore... (TaskId:39)\r\n                     Writing assets file to disk. Path: /home/saroui/Documents/sample-app/TodoApi/obj/project.assets.json (TaskId:39)\r\n                     Writing cache file to disk. Path: /home/saroui/Documents/sample-app/TodoApi/obj/project.nuget.cache (TaskId:39)\r\n                     Persisting dg to /home/saroui/Documents/sample-app/TodoApi/obj/TodoApi.csproj.nuget.dgspec.json (TaskId:39)\r\n                     Failed to restore /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (in 326 ms). (TaskId:39)\r\n                      (TaskId:39)\r\n                     NuGet Config files used: (TaskId:39)\r\n                         /home/saroui/.nuget/NuGet/NuGet.Config (TaskId:39)\r\n                      (TaskId:39)\r\n                     Feeds used: (TaskId:39)\r\n                         https://api.nuget.org/v3/index.json (TaskId:39)\r\n                   Done executing task \"RestoreTask\" -- FAILED. (TaskId:39)\r\n11:06:51.652     1>Done building target \"Restore\" in project \"TodoApi.csproj\" -- FAILED.: (TargetId:42)\r\n11:06:51.658     1>Done Building Project \"/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj\" (Restore target(s)) -- FAILED.\r\nDeferred Messages\r\n11:06:51.659     0>\r\nDetailed Build Summary\r\n======================\r\n     (TaskId:0)\r\n                     \r\n                     ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n                     Id                  : Exclusive Time   Total Time   Path (Targets)\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     0                   : 1.627s           1.932s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (Restore)  (TaskId:0)\r\n                     | 1                 : 0.077s           0.077s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_IsProjectRestoreSupported)  (TaskId:0)\r\n                     | 2                 : 0.009s           0.009s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_GenerateRestoreProjectPathWalk)  (TaskId:0)\r\n                     | 3                 : 0.196s           0.196s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_GenerateRestoreGraphProjectEntry)  (TaskId:0)\r\n                     . 4                 : 0.021s           0.021s       /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj (_GenerateProjectRestoreGraph)  (TaskId:0)\r\n                     \r\n                     ============================== Node Utilization (IDs represent configurations) ====================================================\r\n                     Timestamp:            1        Duration   Cumulative\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     638168260097250049:   0        0.905s     0.905s .................. (TaskId:0)\r\n                     638168260106301983:   1        0.078s     0.983s . (TaskId:0)\r\n                     638168260107081071:   0        0.041s     1.024s  (TaskId:0)\r\n                     638168260107492220:   2        0.010s     1.034s  (TaskId:0)\r\n                     638168260107587607:   0        0.019s     1.053s  (TaskId:0)\r\n                     638168260107776373:   3        0.196s     1.249s ... (TaskId:0)\r\n                     638168260109739325:   0        0.003s     1.252s  (TaskId:0)\r\n                     638168260109766418:   4        0.021s     1.273s  (TaskId:0)\r\n                     638168260109978266:   0        0.662s     1.935s ............. (TaskId:0)\r\n                     -----------------------------------------------------------------------------------------------------------------------------------\r\n                     Utilization:          100.0    Average Utilization: 100.0 (TaskId:0)\r\n\r\nProject Evaluation Performance Summary:\r\n      837 ms  /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj   2 calls\r\n\r\nProject Performance Summary:\r\n     1333 ms  /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj   6 calls\r\n               1107 ms  Restore                                    1 calls\r\n                  2 ms  _IsProjectRestoreSupported                 2 calls\r\n                  8 ms  _GenerateRestoreProjectPathWalk            1 calls\r\n                195 ms  _GenerateRestoreGraphProjectEntry          1 calls\r\n                 21 ms  _GenerateProjectRestoreGraph               1 calls\r\n\r\nTarget Performance Summary:\r\n        0 ms  _GenerateRestoreProjectPathItemsCurrentProject   1 calls\r\n        0 ms  _GenerateProjectRestoreGraph               1 calls\r\n        0 ms  _GetRestoreSettingsCurrentProject          1 calls\r\n        0 ms  _GenerateRestoreDependencies               1 calls\r\n        0 ms  _GenerateProjectRestoreGraphCurrentProject   1 calls\r\n        0 ms  _GenerateRestoreGraphProjectEntry          1 calls\r\n        0 ms  _CheckForObsoleteDotNetCliToolReferences   1 calls\r\n        0 ms  _GetRestoreTargetFrameworkOverride         1 calls\r\n        0 ms  _CheckForUnsupportedCppNETCoreVersion      2 calls\r\n        0 ms  _CheckForLanguageAndFeatureCombinationSupport   1 calls\r\n        0 ms  _GetProjectJsonPath                        1 calls\r\n        0 ms  _GetRestoreSettingsPerFramework            1 calls\r\n        0 ms  _CheckForUnsupportedNETCoreVersion         2 calls\r\n        0 ms  _GetRestoreSettingsOverrides               1 calls\r\n        0 ms  _IsProjectRestoreSupported                 1 calls\r\n        1 ms  CollectFrameworkReferences                 1 calls\r\n        1 ms  _GenerateRestoreSpecs                      1 calls\r\n        1 ms  _GenerateRestoreProjectPathItems           1 calls\r\n        1 ms  CollectCentralPackageVersions              1 calls\r\n        1 ms  _CollectTargetFrameworkForTelemetry        1 calls\r\n        2 ms  _GenerateRestoreProjectPathItemsPerFramework   1 calls\r\n        3 ms  ApplyImplicitVersions                      1 calls\r\n        3 ms  _GenerateDotnetCliToolReferenceSpecs       1 calls\r\n        3 ms  _GetRestoreTargetFrameworksOutput          1 calls\r\n        3 ms  _GenerateRestoreProjectSpec                1 calls\r\n        3 ms  CollectPackageReferences                   1 calls\r\n        3 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n        4 ms  _GenerateRestoreProjectPathWalk            1 calls\r\n        5 ms  CollectPackageDownloads                    1 calls\r\n        7 ms  _GenerateProjectRestoreGraphPerFramework   1 calls\r\n        8 ms  _GetRestoreProjectStyle                    1 calls\r\n       11 ms  UpdateAspNetToFrameworkReference           1 calls\r\n       25 ms  _LoadRestoreGraphEntryPoints               1 calls\r\n       30 ms  _GetAllRestoreProjectPathItems             1 calls\r\n       34 ms  _GetRestoreSettings                        1 calls\r\n      125 ms  ProcessFrameworkReferences                 1 calls\r\n      153 ms  _FilterRestoreGraphProjectInputItems       1 calls\r\n      227 ms  _GenerateRestoreGraph                      1 calls\r\n      652 ms  Restore                                    1 calls\r\n\r\nTask Performance Summary:\r\n        1 ms  GetRestorePackageDownloadsTask             1 calls\r\n        1 ms  AllowEmptyTelemetry                        1 calls\r\n        1 ms  GetRestoreFrameworkReferencesTask          1 calls\r\n        1 ms  ApplyImplicitVersions                      1 calls\r\n        1 ms  GetRestoreProjectReferencesTask            1 calls\r\n        1 ms  CheckForDuplicateFrameworkReferences       1 calls\r\n        1 ms  GetRestorePackageReferencesTask            1 calls\r\n        2 ms  GetRestoreDotnetCliToolsTask               1 calls\r\n        2 ms  GetProjectTargetFrameworksTask             1 calls\r\n        2 ms  NuGetMessageTask                           1 calls\r\n        2 ms  ConvertToAbsolutePath                      2 calls\r\n        2 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n        3 ms  Message                                    3 calls\r\n        4 ms  GetRestoreProjectStyleTask                 1 calls\r\n        5 ms  CheckIfPackageReferenceShouldBeFrameworkReference   2 calls\r\n        5 ms  WarnForInvalidProjectsTask                 1 calls\r\n        7 ms  RemoveDuplicates                           5 calls\r\n        8 ms  CheckForDuplicateNuGetItemsTask            3 calls\r\n       31 ms  ResolveAppHosts                            1 calls\r\n       33 ms  GetRestoreSettingsTask                     1 calls\r\n       89 ms  ProcessFrameworkReferences                 1 calls\r\n      366 ms  MSBuild                                    6 calls\r\n      651 ms  RestoreTask                                1 calls\r\n\r\nBuild FAILED.\r\n\r\n                   \"/home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj\" (Restore target) (1) ->\r\n                   (Restore target) -> \r\n                     /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n                     /home/saroui/Documents/sample-app/TodoApi/TodoApi.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n\r\n    0 Warning(s)\r\n    2 Error(s)\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-04-17T03:30:25.2567231Z","RunDurationInMilliseconds":1294}