{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14622917948","Type":"PullRequestEvent","CreatedAt":"2020-12-23T01:47:23","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8364","RelatedDescription":"Opened pull request \"Add fuget.org links to packages\" (#8364) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/7850\r\n\r\nPackages will now have an additional link per specs outlined here: https://github.com/NuGet/NuGetGallery/pull/7832, linking to the packages fuget.org view.\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/102949684-8e0fe180-4514-11eb-89b3-8f69bbfd4cf2.png)"},{"Id":"14622335741","Type":"PullRequestEvent","CreatedAt":"2020-12-22T23:57:24","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8363","RelatedDescription":"Opened pull request \"Show vulnerability alerts on manage packages page\" (#8363) at NuGet/NuGetGallery","RelatedBody":"Note: these PRs must be merged before this one: https://github.com/NuGet/NuGetGallery/pull/8358, https://github.com/NuGet/NuGetGallery/pull/8362\r\n\r\nAddresses remainder of https://github.com/NuGet/NuGetGallery/issues/8361\r\n\r\nThis change decorates all packages, of which any version is vulnerable, in the manage packages view with a bang and tooltip indicating to go to the details page. This applies to listed and unlisted groups of packages.\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/102943956-2ef6a080-4505-11eb-8200-76e3457cdc1b.png)\r\n"},{"Id":"14622292804","Type":"PullRequestEvent","CreatedAt":"2020-12-22T23:49:08","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8362","RelatedDescription":"Opened pull request \"Expand view models for vulnerabilities in manage packages page\" (#8362) at NuGet/NuGetGallery","RelatedBody":"Addresses view model portion of https://github.com/NuGet/NuGetGallery/issues/8361 (I split the PR as best I could because it's large-ish). Full description of change to customer experience in PR (view changes) on this issue."},{"Id":"14622269585","Type":"IssuesEvent","CreatedAt":"2020-12-22T23:44:35","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8361","RelatedDescription":"Opened issue \"Gallery authors should see a message on the Manage Packages page if the package is vulnerable\" (#8361) at NuGet/NuGetGallery","RelatedBody":"Spec: https://github.com/NuGet/Home/blob/dev/designs/PackageVulnerability/NuGet.orgVulnerabilitiesPhase1.md"},{"Id":"14620002833","Type":"IssuesEvent","CreatedAt":"2020-12-22T18:53:44","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8360","RelatedDescription":"Opened issue \"Ownership request email for an org should be sent to org account email ID as well\" (#8360) at NuGet/NuGetGallery","RelatedBody":"Today it seems the ownership request emails are only sent to the `Administrators` of the org account. This causes a lot of confusion as folks keep looking for an email on the org account's email ID. \r\n\r\n#### How to fix this?\r\nWe should be sending an email to the org account email ID stating an ownership request was sent to the Admins."},{"Id":"14612995090","Type":"PullRequestEvent","CreatedAt":"2020-12-22T07:22:01","Actor":"adamralph","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8359","RelatedDescription":"Opened pull request \"update term used for .NET tools\" (#8359) at NuGet/NuGetGallery","RelatedBody":"As per the [linked document](https://aka.ms/global-tools), these are now referred to as \".NET Tools\" —\r\n\r\n> How to manage .NET tools\r\n> \r\n> A .NET tool is a special NuGet package that contains a console application.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14622131264","Type":"IssuesEvent","CreatedAt":"2020-12-22T23:20:07","Actor":"davidliang2008","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10408","RelatedDescription":"Opened issue \"Fail to capture and restore pre-release packages with floating versions\" (#10408) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.8.0.6930\r\n\r\nVS version: Visual Studio Professional 2019 Version 16.8.3\r\n\r\nOS version: Windows 10 Pro for Workstations, 64 bits, Version 2004, OS build 19041.685\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create and deploy a library as NuGet package. Push it as pre-release: LibA.2.1.1-alpha, for example\r\n\r\n2. Create another library, called LibB, that references the first NuGet package. Specify its dependency in its .nuspec using floating versions\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n    <metadata>\r\n        <dependencies>\r\n            <group>\r\n                <dependency id=\"LibA\" version=\"2.1.1-*\" />\r\n            </group>\r\n        </dependencies>\r\n    </metadata>\r\n</package>\r\n```\r\n\r\n3. Create yet another driver program that references LibB.\r\n4. When you try to install/update LibB NuGet package in the driver program, errors occur\r\n   - Package restore failed. Rolling back package changes for 'NAME_OF_DRIVER_PROGRAM'.\r\n   - NU1603: LibB depends on LibA (>= 1.2.1-0) but LibA 1.2.1.0 was not found. An approximate best match of LibA 1.2.1-alpha was resolved.\r\n\r\nNote, on the Common Scenarios section in the documentation (https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions), it shows that floating versions like `1.2.0-*` will match pre-released versions like `1.2.0-rc.2`.\r\n\r\nHow come that doesn't work in my case?\r\n"},{"Id":"14621781221","Type":"IssuesEvent","CreatedAt":"2020-12-22T22:26:34","Actor":"adrianiftode","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10407","RelatedDescription":"Opened issue \"Source parameter is not considered for `dotnet add package` command\" (#10407) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used dotnet.exe\r\n\r\ndotnet nuget --version\r\nNuGet Command Line\r\n4.9.4.0\r\n\r\ndotnet.exe --version (if appropriate): \r\n5.0.101\r\n\r\nVS version (if appropriate):\r\n\r\nOS Version:                10.0.18362 N/A Build 18362\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\nDon't know, but other commands work (ie dotnet restore)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Execute the following command\r\n`dotnet add package Microsoft.EntityFrameworkCore.Sqlite --source https://api.nuget.org/v3/index.json`\r\n\r\n2. Expected to install the package, but getting the following results\r\ngetting error with the following output\r\n\r\n```\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\a.iftode\\AppData\\Local\\Temp\\tmpC211.tmp\r\ninfo : Adding PackageReference for package 'Microsoft.EntityFrameworkCore.Sqlite' into project 'D:\\opensource\\aspnetcore\\IntegrationTestsIssue\\IntegrationTestsIssue\\IntegrationTestsIssue.csproj'.\r\ninfo :   GET ... info :   NotFound with following message : Response status code does not indicate success: 404 (Not Found).\r\nerror:   Response status code does not indicate success: 404 (Not Found).\r\n````\r\nI removed internal links as these are private\r\n\r\n## Other suggested things\r\n\r\nIn order to install the package, I added\r\n```\r\n<PackageReference Include=\"Microsoft.EntityFrameworkCore.Sqlite\" Version=\"5.0.1\" />\r\n```\r\nin the csproj file\r\n\r\nand run\r\n`dotnet restore -s https://api.nuget.org/v3/index.json`\r\nwhich restores correctly the package\r\n\r\n"},{"Id":"14620817825","Type":"IssuesEvent","CreatedAt":"2020-12-22T20:26:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9986","RelatedDescription":"Closed issue \"Implement a pre-registration mechanism for legacy PR projects that call restore at solution open\" (#9986) at NuGet/Home","RelatedBody":"Say you have a mix of legacy + SDK projects, where the legacy projects are say extensibility which call NominateProjectASync without data. \r\n\r\nGiven that NuGet has no clue that it's supposed to wait for these projects(unlike nomination),  we should implement a registration mechanism, that tells NuGet to expect an `I'm ready` call to avoid duplicate restores.\r\n\r\nDesign at https://github.com/NuGet/Home/pull/10064. "},{"Id":"14619986639","Type":"IssuesEvent","CreatedAt":"2020-12-22T18:51:53","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10406","RelatedDescription":"Opened issue \"VS nomination error does not result in assets file being written\" (#10406) at NuGet/Home","RelatedBody":"If you have a project with an error that allows the project to be loaded, but with an error that NuGet can't handle, the assets file is not being written and therefore no error is being reported in Visual Studio.\r\n\r\nAn example of such an error is a PackageReference with an invalid version string `<PackageReference Include=\"NuGet.Versioning\" Version=\"broken\" />`.\r\n\r\nBroken in both VS16.9 previews, and VS16.8, so appears to have regressed from 16.7 at best."},{"Id":"14618002020","Type":"IssuesEvent","CreatedAt":"2020-12-22T15:35:32","Actor":"ViktorHofer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10405","RelatedDescription":"Opened issue \"Optionally validate PackageDescription and throw if not set\" (#10405) at NuGet/Home","RelatedBody":"`PackageDescription` is always set to a default value if both `Description` and `PackageDescription` are empty: https://github.com/NuGet/NuGet.Client/blob/5e1970e323f9f55794c6a77562c5535c12d5c2a4/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L35.\r\n\r\nIt's not uncommon to require a project to set a PackageDescription and throw if none is set. Instead of every consumer adding an InitialTarget for the validation, NuGet should validate the property before the `PackTask` is invoked. Because this would be a breaking change, the validation could be an opt-in via an msbuild property, i.e. `<ValidatePackageDescription />`."},{"Id":"14614316221","Type":"IssuesEvent","CreatedAt":"2020-12-22T09:42:19","Actor":"xoofx","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10404","RelatedDescription":"Opened issue \"Make readonly files by default in NuGet packages\" (#10404) at NuGet/Home","RelatedBody":"Hey,\r\n\r\nRelated closed issue #1729\r\n\r\nIn the project Scriban, I'm using a mode where I ship with my package also the sources of the project that can be used internally in the consuming projects (these are not contentFiles but custom source files added by the package). See [embedding source](https://github.com/scriban/scriban#source-embedding) in Scriban.\r\n\r\nIt allows me to release a NuGet package with binaries and sources, and the user can choose which version to use.\r\n\r\nOne big issue with NuGet today is that files extracted on the disk are not readonly. That means that if a user, by mistake, is starting to change files on the disk, it will change files machine wide (or from where the NuGet package cache is used)."},{"Id":"14609270399","Type":"IssuesEvent","CreatedAt":"2020-12-21T21:31:22","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10378","RelatedDescription":"Closed issue \"Add Update context menu item for package dependencies that launches PMUI with preselected packages to update\" (#10378) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\n\n## Before posting the issue...\n\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\n\nRemove the content above here and fill out details below.\n\n## Details about Problem\n\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\n\nNuGet version (x.x.x.xxx):\n\ndotnet.exe --version (if appropriate):\n\nVS version (if appropriate):\n\nOS version (i.e. win10 v1607 (14393.321)):\n\nWorked before? If so, with which NuGet version:\n\n## Detailed repro steps so we can see the same problem\n\n1.\n\n2.\n\n...\n\n## Other suggested things\n\n### Verbose Logs\n\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\n\n### Sample Project\n\nVery helpful if you can zip a project and paste into this issue!\n\n"},{"Id":"14607871216","Type":"IssuesEvent","CreatedAt":"2020-12-21T18:51:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10399","RelatedDescription":"Closed issue \"Clean-up the contributing docs\" (#10399) at NuGet/Home","RelatedBody":"Remove redundant information such as NET5 preview info."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-12-23T05:30:37.1606216Z","RunDurationInMilliseconds":1667}