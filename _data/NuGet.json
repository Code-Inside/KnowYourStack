{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"NuGet 5.9 is a great release that brings a refined experience to everything package management. We’ve added a bunch of exciting quality of life improvements while also bringing you a more performant...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21423116038","Type":"PullRequestEvent","CreatedAt":"2022-04-22T17:59:56","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9106","RelatedDescription":"Merged pull request \"Fix org profile to show correct MFA status for site admins\" (#9106) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21407745990","Type":"PullRequestEvent","CreatedAt":"2022-04-21T23:56:04","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9106","RelatedDescription":"Opened pull request \"Fix org profile to show correct MFA status for site admins\" (#9106) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21427545131","Type":"IssuesEvent","CreatedAt":"2022-04-22T23:45:53","Actor":"Varorbc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11768","RelatedDescription":"Closed issue \"[Bug]: NU1604\tProject dependency Newtonsoft.Json does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results.\" (#11768) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.2.0 Preview 4.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n```\r\nDirectory.Packages.props\r\n\r\n<Project>\r\n\t\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\r\n  </ItemGroup>\r\n\t\r\n</Project>\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n  \t<PackageReference Include=\"Newtonsoft.Json\" />\r\n  </ItemGroup>\r\n\t\r\n</Project>\r\n\r\n\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21425363220","Type":"IssuesEvent","CreatedAt":"2022-04-22T20:52:55","Actor":"papeh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11774","RelatedDescription":"Opened issue \"[Bug]: misspelling in RestoreCommandCannotDeterminePackagesFolder_deu\" (#11774) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.1.0.106\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nin RestoreCommandCannotDeterminePackagesFolder_deu (in NuGet.Client\\src\\NuGet.Clients\\NuGet.CommandLine\\NuGetResources.resx), \"Widerherstellen\" should properly be spelled \"Wiederherstellen\".\n\n### Verbose Logs\n\n_No response_"},{"Id":"21425126891","Type":"IssuesEvent","CreatedAt":"2022-04-22T20:35:40","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11732","RelatedDescription":"Closed issue \"Unnecessary Allocations in SemanticVersion.ParseSections()\" (#11732) at NuGet/Home","RelatedBody":"SemanticVersion.ParseSections() allocates a System.Tuple to return the parsed elements to the caller. Switching to using out parameters will save about 7MB of allocated memory when opening OrchardCore."},{"Id":"21419411900","Type":"IssuesEvent","CreatedAt":"2022-04-22T14:12:23","Actor":"lonix1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11772","RelatedDescription":"Opened issue \"[Feature]: Nuget links in `dotnet list package --outdated`\" (#11772) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nThe [command](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-list-package#description) `dotnet list package --outdated` shows something like this:\r\n\r\n````\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n\r\nProject `Foo` has the following updates to its packages\r\n   Top-level Package      Requested   Resolved   Latest\r\n   > Microsoft.ML         1.4.0       1.4.0      1.5.0-preview\r\n````\r\n\r\nThis is not friendly. It would be helpful to include a link to the nuget repository.\r\n\r\nAnother column with a link to the nuget repo. For example:\r\n````\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n\r\nProject `Foo` has the following updates to its packages\r\n   Top-level Package      Requested   Resolved   Latest          Link\r\n   > Microsoft.ML         1.4.0       1.4.0      1.5.0-preview   https://www.nuget.org/packages/Microsoft.ML\r\n````\r\n\r\nIn many cases this is run in a terminal and we could click the link to go to that page and read the release notes, or if they don't exist, to then click to the github repo and read the release notes.\n\n### Additional Context and Details\n\nI [originally](https://github.com/dotnet/sdk/issues/22366) opened this issue in the SDK repo. A bot informed me the correct place is this repo.\r\n\r\nI thought it was related to https://github.com/NuGet/Home/issues/7752, but it seems human-readable output is out of scope for that particular issue (which is for machine-readable output)."},{"Id":"21417662791","Type":"IssuesEvent","CreatedAt":"2022-04-22T12:37:02","Actor":"bouchraRekhadda","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11771","RelatedDescription":"Opened issue \"[Bug]: False NU1701 warning\" (#11771) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n17.1.0.7609\n\n### Worked before?\n\nYes with MSBuild 16.11.2.50704\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nSample reproduction project:\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp3.1;net48</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"17.1.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nBuilding using `MSBuild.exe` : `\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Msbuild\\Current\\Bin\\MSBuild.exe\" ConsoleApp2.csproj /t:restore /v:m` generate **NU1701** warning\r\n>warning NU1701: Package 'Microsoft.Build 17.1.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8' instead of the project target framework '.NETCoreApp,Version=v3.1'. This package may not be fully compatible with your project\r\n \r\n The used package reference is both compatible with .NET 6.0 and .NET Framework (from it's nuspec file)\r\n```XML\r\n    <dependencies>\r\n      <group targetFramework=\".NETFramework4.7.2\">\r\n         ...\r\n      </group>\r\n      <group targetFramework=\"net6.0\">\r\n        ....\r\n      </group>\r\n    </dependencies>\r\n```\r\n\r\nThe issue seems related to https://github.com/NuGet/Home/issues/11564 since the `Microsoft.Build` nuspec doesn't **explicitly** list .NET Core 3.1 as a supported Framework (not sure though).\n\n### Verbose Logs\n\n```shell\n>warning NU1701: Package 'Microsoft.Build 17.1.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8' instead of the project target framework '.NETCoreApp,Version=v3.1'. This package may not be fully compatible with your project\n```\n"},{"Id":"21411539925","Type":"IssuesEvent","CreatedAt":"2022-04-22T06:39:53","Actor":"cmeeren","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11770","RelatedDescription":"Opened issue \"[Feature]: Make dotnet list package work without restore when using lock files\" (#11770) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\n(Was asked to post this here instead of https://github.com/dotnet/sdk/issues/24194)\r\n\r\nWe are running `dotnet list package` (with `--vulnerable`, `--outdated`, and `--deprecated`) in a CI pipeline. This seems to require restoring the projects first. This adds overhead in the pipeline, which seems unnecessary since we use lock files (`packages.lock.json`) which AFAIK contains all necessary information. I propose allowing `dotnet list package` to work with the information in lock files, without needing a restore.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"21410319418","Type":"IssuesEvent","CreatedAt":"2022-04-22T04:45:22","Actor":"tapika","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11769","RelatedDescription":"Opened issue \"[Bug]: ServiceUnavailable for slow internet connections when pushing large nuget package\" (#11769) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet Version: 6.0.0.280\n\n### Worked before?\n\nWorks on faster internet connection\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nCreate large nuget package - size of 222 Mb - 500 Mb.\r\n\r\nYou should be behind bit slower internet connection - I'm behind optical fibre - download 100 MB/s, upload 10 MB/s.\r\n\r\n(Upload is most import one).\r\n\r\nPush nuget package from your command line:\r\n\r\n`\"...\\tools\\NuGet.CommandLine.6.0.0\\tools\\NuGet.exe\" push largepackage.1.0.0.1.nupkg -Timeout 3600 -src <azure url>`\r\n\r\n```\r\n>NuGet.exe push largepackage.1.0.0.0.nupkg -Timeout 3600 -src <azure devops url>\r\nPushing largepackage.1.0.0.0.nupkg to 'https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/'...\r\n  PUT https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/\r\n  ServiceUnavailable https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/ 151581ms\r\n  PUT https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/\r\n  ServiceUnavailable https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/ 153199ms\r\n  PUT https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/\r\n  ServiceUnavailable https://pkgs.dev.azure.com/vcomponents/_packaging/a2b3eb0c-a5a4-439a-ab6f-f4b7cae5213f/nuget/v2/ 153575ms\r\nResponse status code does not indicate success: 503 (Service Unavailable).\r\n```\r\n\r\nIndependently of configured timeout transfer fails.\r\n\r\nSame issue can be resolved by using apparently faster internet connection - same issue is reported here:\r\n\r\nhttps://developercommunity.visualstudio.com/t/service-unavailable-when-pushing-nuget-package-to/867172\r\n\r\nand here:\r\n\r\nhttps://blog.johanpersson.nu/?p=4602\r\n\r\n```>> In order to solve the issue I uploaded the file to my D365FO dev machine and tried the push from there… it worked and it took only a couple of seconds… Wohoo…```\r\n\r\nnuget is also brings down whole internet - while it's traferring the file - it's interfering internet heavily.\r\n\r\n(used speedtest.net)\r\n\r\n![image](https://user-images.githubusercontent.com/3228645/164604589-21be32ad-3bca-412b-b3f1-3e1443392b3a.png)\r\n\r\nI think this should be fixed permanently - independently how fast internet connection is - nuget push should not interfere with current internet heavily and must succeeds independently of transfer speed.\r\n\r\nP.S. I'm developer by myself, can help you on bugfixing the problem if necessary - but main commit must come from nuget dev team.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"21409379841","Type":"IssuesEvent","CreatedAt":"2022-04-22T02:59:36","Actor":"Varorbc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11768","RelatedDescription":"Opened issue \"[Bug]: NU1604\tProject dependency Newtonsoft.Json does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results.\" (#11768) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.2.0 Preview 4.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n```\r\nDirectory.Packages.props\r\n\r\n<Project>\r\n\t\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\r\n  </ItemGroup>\r\n\t\r\n</Project>\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n  \t<PackageReference Include=\"Newtonsoft.Json\" />\r\n  </ItemGroup>\r\n\t\r\n</Project>\r\n\r\n\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21407661111","Type":"IssuesEvent","CreatedAt":"2022-04-21T23:45:17","Actor":"smaglio81","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11767","RelatedDescription":"Opened issue \"[Bug]: dotnet SDK 6.0.202 - Detected package downgrade during dotnet restore\" (#11767) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.202\n\n### Worked before?\n\n6.0.102\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nI originally posted this issue in the `dotnet\\sdk` github:\r\n\r\n  * [https://github.com/dotnet/sdk/issues/24931](https://github.com/dotnet/sdk/issues/24931)\r\n\r\n\r\n----------------\r\n\r\n### Describe the bug\r\n\r\nAfter updating to `dotnet sdk 6.0.202`, a `dotnet restore` step in one of our AzureDevOps builds started erroring with the message:\r\n\r\n`error NU1605: Detected package downgrade: Ucsb.Sa.Enterprise.AspNetCore.Mvc.Hosting from 5.0.66833 to 5.0.65698. Reference the package directly from the project to select a different version.  [D:\\TFS\\2\\_work\\10\\s\\Ucsb.Sa.GradDiv.CampusContacts.Web.sln]\r\n`\r\n\r\nWe used a `global.json` file to repoint the build to use `dotnet sdk 6.0.102` (last known good sdk at the time of this writing), and that got the build into a working state.\r\n\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"6.0.102\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n### To Reproduce\r\nI'm not really sure how to reproduce this issue. It's only occurring on our build servers; which are on premise VMs (Windows 2016, info below). When attempting to reproduce this issue on our local machines (Windows 10/21H2) with `dotnet sdk 6.0.202` using Visual Studio 2022, we don't receive any errors.\r\n\r\n\r\n### Exceptions (if any)\r\n`dotnet sdk 6.0.202` build error:\r\n![image](https://user-images.githubusercontent.com/169953/164111559-474d998a-cfb9-4650-8306-6a359c0d2c6d.png)\r\n![image](https://user-images.githubusercontent.com/169953/164111571-a8e18724-42f6-4e6a-80b4-18f4ff5cbef4.png)\r\n\r\n\r\n`dotnet sdk 6.0.102` success:\r\n![image](https://user-images.githubusercontent.com/169953/164111604-506412d2-843e-4cc2-80c1-2fbbef5a18c6.png)\r\n\r\n\r\n\r\n### Further technical details\r\n`dotnet --info`:\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.202\r\n Commit:    f8a55617d2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.202\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.4\r\n  Commit:  be98e88c76\r\n\r\n.NET SDKs installed:\r\n  2.1.515 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.109 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.205 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.102 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n**On Premise Build Servers:**\r\n\r\n* Windows 2016, Version 1607 (OS Build 14393.5006)\r\n* SDK Installers\r\n  * All downloaded from the version specific release notes under (https://github.com/dotnet/core/blob/master/release-notes)[https://github.com/dotnet/core/blob/master/release-notes]\r\n  * The installers are the `SDK Installer` `x64` download.\r\n* AzureDevOps Agent Version 2.196.2\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"21405979919","Type":"IssuesEvent","CreatedAt":"2022-04-21T21:07:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11742","RelatedDescription":"Closed issue \"Move all projects in release-5.11.x to Lang Version 8.0\" (#11742) at NuGet/Home","RelatedBody":"This would allow us to use the new using syntax and make it easier to cherry-pick things into older branches. \r\n\r\nSee: https://github.com/NuGet/NuGet.Client/pull/4023/files"},{"Id":"21405723394","Type":"IssuesEvent","CreatedAt":"2022-04-21T20:48:37","Actor":"papeh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11766","RelatedDescription":"Opened issue \"[DCR]: Include caught exceptions as inner exceptions when rethrowing (in MsBuildUtility)\" (#11766) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\nWhen MsBuildUtility catches certain exceptions, it throws different exceptions, including only the outermost one or two messages from caught exception.\n\n### Desired Behavior\n\nWhen catching an exception and throwing a different one, the original exception should be included as an inner exception so that all original call stacks and messages are preserved, to make debugging more efficient.\n\n### Additional Context\n\nI found these two exceptions (https://github.com/NuGet/NuGet.Client/pull/4588/) when addressing #8373."},{"Id":"21405549571","Type":"IssuesEvent","CreatedAt":"2022-04-21T20:36:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11765","RelatedDescription":"Opened issue \"Update SPDX licenses to bb0099c\" (#11765) at NuGet/Home","RelatedBody":""},{"Id":"21403934279","Type":"IssuesEvent","CreatedAt":"2022-04-21T18:44:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11759","RelatedDescription":"Closed issue \"[Feature]: Retain Command History After Closing and Opening Visual Studio\" (#11759) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Manager Console\n\n### The Elevator Pitch\n\nPackage Manager Console does retain command history in a temporary manner but in between closing and opening of Visual Studio that history is gone. \r\n\r\nPlease can the command history be retained after closing and opening of Visual Studio.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":246,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-04-24T03:30:23.1933861Z","RunDurationInMilliseconds":1381}