{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"38856984300","Type":"PullRequestEvent","CreatedAt":"2024-05-30T15:59:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9982","RelatedDescription":"Merged pull request \"add nuget trends content to csproj\" (#9982) at NuGet/NuGetGallery","RelatedBody":"See: https://github.com/NuGet/NuGetGallery/pull/9737#issuecomment-2104659285\r\n\r\n"},{"Id":"38830882785","Type":"PullRequestEvent","CreatedAt":"2024-05-29T22:42:59","Actor":"bruno-garcia","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9982","RelatedDescription":"Opened pull request \"add nuget trends content to csproj\" (#9982) at NuGet/NuGetGallery","RelatedBody":"See: https://github.com/NuGet/NuGetGallery/pull/9737#issuecomment-2104659285\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"38867252774","Type":"IssuesEvent","CreatedAt":"2024-05-30T23:13:41","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13453","RelatedDescription":"Closed issue \"[Bug]: dotnet restore throws error NU1202 with dotnet sdk 8.0.300 for some centrally managed packages\" (#13453) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#10157**\r\n- Please respond to @tomasfabian.\r\n\r\n---\r\n\r\n_From @tomasfabian on Monday, May 20, 2024 9:56:59 AM_\r\n\r\n### Issue Description\r\n\r\nAfter upgrading to the latest .NET SDK 8.0.300, the build process fails when using **ManagePackageVersionsCentrally** in case of some packages such as `FluentAssertions`.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nRunning the `dotnet restore` Demo.sln command with the configuration below fails to restore packages:\r\n\r\nUnitTest.csproj:\r\n```xml\r\n<Project Sdk=\"MSTest.Sdk/3.3.1\">\r\n\r\n    <PropertyGroup>\r\n        <TargetFramework>net8.0</TargetFramework>\r\n        <IsPackable>false</IsPackable>\r\n    </PropertyGroup>\r\n\r\n    <PropertyGroup>\r\n        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n        <PackageReference Include=\"FluentAssertions\" />\r\n    </ItemGroup>\r\n\r\n</Project>\r\n```\r\nDirectory.Packages.props\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"FluentAssertions\" Version=\"6.12.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThis works as expected:\r\n```xml\r\n<Project Sdk=\"MSTest.Sdk/3.3.1\">\r\n\r\n  <PropertyGroup>\r\n      <TargetFramework>net8.0</TargetFramework>\r\n      <IsPackable>false</IsPackable>\r\n  </PropertyGroup>\r\n\r\n    <PropertyGroup>\r\n        <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>\r\n    </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n        <PackageReference Include=\"FluentAssertions\" Version=\"6.12.0\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nRunning `dotnet restore` with .NET SDK 8.0.300 should work the same way as it does with .NET SDK 8.0.205.\r\n\r\n### Actual Behavior\r\n\r\nA much older version of the package is being used/reported instead of the referenced one:\r\n_C:\\UnitTests.csproj : error NU1202: Package FluentAssertions 1.3.0.1 is not compatible with net8.0 (.NETCoreApp,Version=v8.0). Package FluentAssertions 1.3.0.1 supports: [C:\\Demo.sln]_\r\n\r\n### Analysis\r\n\r\n_No response_\r\n\r\n### Versions & Configurations\r\n\r\n_No response_"},{"Id":"38858874227","Type":"IssuesEvent","CreatedAt":"2024-05-30T17:03:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13465","RelatedDescription":"Closed issue \"Visual Studio and PMC restore/update fails when multiple packages.config projects in the solution share the same name (An item with the same key has already been added)\" (#13465) at NuGet/Home","RelatedBody":"https://github.com/NuGet/Home/issues/13456\r\n\r\n```code\r\nPM> Update-Package -reinstall\r\nUpdate-Package : An item with the same key has already been added.\r\nAt line:1 char:1\r\n+ Update-Package -reinstall\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Update-Package], ArgumentException\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.UpdatePackageCommand\r\n \r\nPM> $error[0].Exception.StackTrace\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at NuGet.PackageManagement.PackageRestoreManager.<GetRestoreAuditProperties>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.PackageRestoreManager.<RestoreMissingPackagesAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.<CheckMissingPackagesAsync>d__64.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.PowerShellCmdlets.PackageActionBaseCommand.<<Preprocess>b__39_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\n   at NuGet.PackageManagement.PowerShellCmdlets.PackageActionBaseCommand.Preprocess()\r\n   at NuGet.PackageManagement.PowerShellCmdlets.UpdatePackageCommand.Preprocess()\r\n   at NuGet.PackageManagement.PowerShellCmdlets.UpdatePackageCommand.ProcessRecordCore()\r\n   at NuGet.PackageManagement.PowerShellCmdlets.NuGetPowerShellBaseCommand.ProcessRecord()\r\n``` \r\n"},{"Id":"38857314685","Type":"IssuesEvent","CreatedAt":"2024-05-30T16:10:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13456","RelatedDescription":"Closed issue \"##[error]The nuget command failed with exit code(1) and error(An item with the same key has already been added.\" (#13456) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\n6.10\r\n\r\n### Worked before?\r\n\r\n6.9\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nIn our yaml file we restore NuGet packages from our own feed and from NuGet.org. \r\nWe are specifying Version 6.9.1 as a workaround.\r\n\r\n![image](https://github.com/NuGet/Home/assets/147873029/81890c3c-f4f9-4e53-ade9-dc4b1a7e6807)\r\n\r\nsteps:\r\n- task: NuGetToolInstaller@1\r\n\r\n- task: NuGetCommand@2\r\n  displayName: \"Restore NuGet package dependencies from custom name feed.\"\r\n  inputs:\r\n    command: 'restore'\r\n    restoreSolution: '$(solution)'\r\n    feedsToUse: 'select'\r\n    vstsFeed: 'our feed key'\r\n\r\n- task: NuGetCommand@2\r\n  displayName: \"Restore NuGet package dependencies from NuGet.org feed.\"\r\n  inputs:\r\n    command: 'restore'\r\n    restoreSolution: '**/*.sln'\r\n    feedsToUse: 'select'\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\n2024-05-21T19:19:32.0057280Z ##[section]Starting: Restore NuGet package dependencies from feed.\r\n2024-05-21T19:19:32.0067250Z ==============================================================================\r\n2024-05-21T19:19:32.0067384Z Task         : NuGet\r\n2024-05-21T19:19:32.0067449Z Description  : Restore, pack, or push NuGet packages, or run a NuGet command. Supports NuGet.org and authenticated feeds like Azure Artifacts and MyGet. Uses NuGet.exe and works with .NET Framework apps. For .NET Core and .NET Standard apps, use the .NET Core task.\r\n2024-05-21T19:19:32.0067720Z Version      : 2.238.1\r\n2024-05-21T19:19:32.0067779Z Author       : Microsoft Corporation\r\n2024-05-21T19:19:32.0067850Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/package/nuget\r\n2024-05-21T19:19:32.0067952Z ==============================================================================\r\n2024-05-21T19:19:33.0007158Z [command]C:\\Windows\\system32\\chcp.com 65001\r\n2024-05-21T19:19:33.0964601Z Active code page: 65001\r\n2024-05-21T19:19:33.4640790Z Detected NuGet version 6.10.0.107 / 6.10.0+6970ffe10efff51d43862ea8f8a2ef0170250262.6970ffe10efff51d43862ea8f8a2ef0170250262\r\n2024-05-21T19:19:33.5217240Z [command]C:\\hostedtoolcache\\windows\\NuGet\\6.10.0\\x64\\nuget.exe sources Add -NonInteractive -Name eb5226ba-ad7e-4568-ab21-ae78862f0a66 -Source https://pkgs.dev.azure.com/repo-name/feed-key-part-1/_packaging/feed-key-part-2/nuget/v3/index.json -ConfigFile D:\\a\\1\\Nuget\\tempNuGet_1007.config\r\n2024-05-21T19:19:35.7583675Z Package source with Name: eb5226ba-ad7e-4568-ab21-ae78862f0a66 added successfully.\r\n2024-05-21T19:19:35.7685511Z [command]C:\\hostedtoolcache\\windows\\NuGet\\6.10.0\\x64\\nuget.exe sources Add -NonInteractive -Name NuGetOrg -Source https://api.nuget.org/v3/index.json -ConfigFile D:\\a\\1\\Nuget\\tempNuGet_1007.config\r\n2024-05-21T19:19:36.6715155Z Package source with Name: NuGetOrg added successfully.\r\n2024-05-21T19:19:36.6814512Z [command]C:\\hostedtoolcache\\windows\\NuGet\\6.10.0\\x64\\nuget.exe restore D:\\a\\1\\s\\Portal.sln -Verbosity Detailed -NonInteractive -ConfigFile D:\\a\\1\\Nuget\\tempNuGet_1007.config\r\n2024-05-21T19:19:54.1074961Z An item with the same key has already been added.\r\n2024-05-21T19:19:54.1075287Z System.ArgumentException: An item with the same key has already been added.\r\n2024-05-21T19:19:54.1075522Z    at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n2024-05-21T19:19:54.1075787Z    at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n2024-05-21T19:19:54.1076057Z    at NuGet.CommandLine.RestoreCommand.GetPackagesConfigToProjectPath(PackageRestoreInputs packageRestoreInputs)\r\n2024-05-21T19:19:54.1076340Z    at NuGet.CommandLine.RestoreCommand.<PerformNuGetV2RestoreAsync>d__59.MoveNext()\r\n2024-05-21T19:19:54.1076573Z --- End of stack trace from previous location where exception was thrown ---\r\n2024-05-21T19:19:54.1076811Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2024-05-21T19:19:54.1077080Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2024-05-21T19:19:54.1077340Z    at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n2024-05-21T19:19:54.1077587Z --- End of stack trace from previous location where exception was thrown ---\r\n2024-05-21T19:19:54.1077808Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2024-05-21T19:19:54.1078068Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2024-05-21T19:19:54.1078287Z    at NuGet.CommandLine.Command.Execute()\r\n2024-05-21T19:19:54.1078509Z    at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n2024-05-21T19:19:54.1078701Z NuGet Version: 6.10.0.107\r\n2024-05-21T19:19:54.1079022Z MSBuild auto-detection: using msbuild version '16.11.2.50704' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\n2024-05-21T19:19:54.1081182Z WARNING: Project file D:\\a\\1\\s\\Portal\\ cannot be found.\r\n2024-05-21T19:19:54.1081359Z MSBuild P2P timeout [ms]: 120000\r\n2024-05-21T19:19:54.1082148Z C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\z4wkm3zx.x40.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetPropsFile=\"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\qmszf1y4.ohy.nugetrestore.props\" /p:NuGetRestoreTargets=\"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\10k25o4w.k4a.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:DisableCheckingDuplicateNuGetItems=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\hostedtoolcache\\windows\\NuGet\\6.10.0\\x64\\nuget.exe\" /p:RestoreSolutionDirectory=\"D:\\a\\1\\s\\\\\" /p:RestoreConfigFile=\"D:\\a\\1\\Nuget\\tempNuGet_1007.config\" /p:SolutionDir=\"D:\\a\\1\\s\\\\\" /p:SolutionName=\"Portal\"\r\n2024-05-21T19:19:54.1082780Z \r\n2024-05-21T19:19:54.1847615Z ##[error]The nuget command failed with exit code(1) and error(An item with the same key has already been added.\r\nSystem.ArgumentException: An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at NuGet.CommandLine.RestoreCommand.GetPackagesConfigToProjectPath(PackageRestoreInputs packageRestoreInputs)\r\n   at NuGet.CommandLine.RestoreCommand.<PerformNuGetV2RestoreAsync>d__59.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args))\r\n2024-05-21T19:19:54.1858650Z ##[error]Packages failed to restore\r\n2024-05-21T19:19:54.1868463Z ##[section]Finishing: Restore NuGet package dependencies from  feed.\r\n```\r\n"},{"Id":"38840820001","Type":"IssuesEvent","CreatedAt":"2024-05-30T07:52:07","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13472","RelatedDescription":"Opened issue \"[Bug Bash] Clicking the author info link on the right of the package name in PM UI goes to an incorrect page\" (#13472) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.11.0.72\n\n### Worked before?\n\nThis is not a regression since it is a new feature.   \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:    \r\n\r\n1. Open VS and create a project through menu File->New->Project->select the “Project Type” as “C#”->search \"C# ASP.NET Web Application (.NET Framework)\". \r\n\r\n2. Click “C# ASP.NET Web Application (.NET Framework)” in the list and click “Next” button. \r\n\r\n3. Type project name in “Project name” text box, select “.NET Framework 4.8.1” in the “Framework” dropdown box and click “Create” button. \r\n\r\n4. 4. Select “MVC” on the left, choose “Windows” in the “Authentication” dropdown list, check “MVC” & “Web API” under “Add folders & core References” and click “Create” button. \r\n\r\n5. Right-click the project in Solution Explorer and select “Manage NuGet Packages…” menu item to open PM UI. \r\n\r\n6. Click “Installed” tab and select the package “Antlr”. \r\n\r\n7. Click the author info “Terence Parr” link on the right of the package name. \r\n#### Expected:    \r\n\r\nClicking the author info link should go to the correct page which is about the author’s info. \r\n\r\n#### Actual: \r\n\r\nThe link goes to a “Error 404 – Page Not Found” page as below: \r\n![image](https://github.com/NuGet/Home/assets/84695155/541be03e-02b8-4fd3-a250-47079afd63e1)\r\n#### Notes:     \r\n\r\n1. The repro rate is 100%. \r\n2. The issue doesn’t repro on the \"Browse\" tab of PM UI and the author info link of the \"Browse\" tab and the \"Installed\" tab is different for the same package as below:\r\n![Unbenannt1](https://github.com/NuGet/Home/assets/84695155/7b18d99e-818c-4e4f-b5af-67bc48478110)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"38830804475","Type":"IssuesEvent","CreatedAt":"2024-05-29T22:38:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4855","RelatedDescription":"Closed issue \"Expand `dotnet nuget` to include more of the commands that nuget.exe has such as dotnet nuget config \" (#4855) at NuGet/Home","RelatedBody":"`dotnet msbuild` is clever about its project/solution context and knows how to find the right version of msbuild to support the task at hand. This is especially useful for a build agent doing CI/CD work where there are potentially many projects with potentially many tool/sdk/runtime version profiles.\r\n\r\nI think this is equally valuable in `dotnet nuget` commands, as evidenced by the existence of:\r\n\r\n - `dotnet nuget delete`\r\n - `dotnet nuget locals`\r\n - `dotnet nuget push`\r\n - `dotnet pack` (i assume)\r\n\r\nBut when working through automation tasks, I immediately wanted:\r\n\r\n - `dotnet nuget sources`\r\n\r\n > I was trying to dynamically build a `nuget.config` file at the solution level that had the correct PAT/credentials (secret build variables) to access a private nuget feed on a multi-tenant build agent without checking in secrets.\r\n\r\nI could also see an argument for:\r\n\r\n - `dotnet nuget config`\r\n - `dotnet nuget delete`\r\n - `dotnet nuget setapikey`\r\n\r\nI mentioned this to Nate McMaster [here](http://disq.us/p/1gzxs4z), and he encouraged me to take it up in this repository. \r\n\r\nThanks for your time and consideration. Please let me know if there is a better/preferred channel in which to request this sort of feature set.\r\n"},{"Id":"38826493860","Type":"IssuesEvent","CreatedAt":"2024-05-29T19:30:37","Actor":"jeromelaban","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13471","RelatedDescription":"Opened issue \"[source mapping] Having a duplicate source breaks msbuild sdks restore\" (#13471) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI\n\n### Product Version\n\n8.0.300\n\n### Worked before?\n\nunknown\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\n1. Clear all caches: `dotnet nuget locals all -c`\r\n2. Create a library: `dotnet new classlib -o test01`\r\n3. Change the `test01.csproj` sdk to be `Sdk=\"MSTest.Sdk/3.3.1\"`\r\n4. In `%appdata%\\NuGet\\NuGet.Config`. add the following mapping:\r\n```xml\r\n<packageSource key=\"nuget.org\">\r\n        <package pattern=\"System.*\" />\r\n</packageSource>\r\n```\r\n5. In the `test01` folder, create a `nuget.config` file:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n        <add key=\"NuGet official package source\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    </packageSources>\r\n</configuration>\r\n```\r\n6. In `classlib01`, run `dotnet restore`\r\n\r\nNotice that if the custom `nuget.config` file added in the project folder is removed or the duplicate nuget.org source is removed, the restore succeeds.\n\n### Verbose Logs\n\n```shell\nD:\\temp\\test01\\test01.csproj : error : Could not resolve SDK \"MSTest.Sdk\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.\r\nD:\\temp\\test01\\test01.csproj : error :   SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" returned null.\r\nD:\\temp\\test01\\test01.csproj : error :   Unable to resolve 'MSTest.Sdk (= 3.3.1)' for '.NETStandard,Version=v0.0'. PackageSourceMapping is enabled, the following source(s) were not considered: Microsoft Visual Studio Offline Packages, NuGet official package source.\r\nD:\\temp\\test01\\test01.csproj : error MSB4236: The SDK 'MSTest.Sdk' specified could not be found.\n```\n"},{"Id":"38826071249","Type":"IssuesEvent","CreatedAt":"2024-05-29T19:14:48","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13470","RelatedDescription":"Opened issue \"Add dotnet SDK CLI command to deprecate NuGet.org packages using deprecation API\" (#13470) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nThere should be a new command to deprecate a NuGet package within the dotnet SDK. Here's an idea for what the command might be called and arguments to deprecate a package version:\r\n\r\n`dotnet nuget deprecate --package-id MyPackage --version 1.2.3 --message \"Deprecated due to critical bug\"`\r\n\r\nIdeally you should be able to deprecate many versions, set the reason, provide an alternative package & package version, and a message of why.\r\n\r\n![image](https://github.com/NuGet/Home/assets/1288848/d9d0d57c-d2f5-437c-bbdd-303722a0a5cc)\r\n\r\n\r\n![image](https://github.com/NuGet/Home/assets/1288848/26b2f102-ae35-473b-95b7-8043a705b96f)\r\n\r\nhttps://learn.microsoft.com/en-us/nuget/nuget-org/deprecate-packages\n\n### Additional Context and Details\n\n_No response_"},{"Id":"38822193331","Type":"IssuesEvent","CreatedAt":"2024-05-29T16:57:41","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13469","RelatedDescription":"Opened issue \"Lint NuGet.config files for common errors, typos, and syntax.\" (#13469) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nWith `nuget.config` as a primary file in the nuget ecosystem, it is manually edited and automatically updated with tooling experiences. This can of course introduce a plethora of problems that may not be found until a user tries to do a nuget operation and their error may not be empowering to the exact problem.\r\n\r\nWe should use the concept of a `nuget.config` specific linter that checks for various problems such as missing syntax in elements, non-matching key/value pairs, invalid/typo package ID/source/file names, and more.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"38808300388","Type":"IssuesEvent","CreatedAt":"2024-05-29T10:25:27","Actor":"RichardD2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13468","RelatedDescription":"Opened issue \"Azure DevOps credentials \"expired\" after a couple of days\" (#13468) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet nuget push\n\n### Worked before?\n\n6.9\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI use the command-line to publish private NuGet packages to our Azure DevOps artifacts feed, following the connection instructions on the feed.\r\n\r\nNone of my PATs expire before August.\r\n\r\nSince the \"upgrade\" to v6.10, I am now told every 3-5 days that _\"The plugin credential provider could not acquire credentials\"_. I then have to re-run the command with the `--interactive` flag, and obtain _another_ PAT in order to publish.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-05-31T03:30:18.3947872Z","RunDurationInMilliseconds":997}