{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"28564057284","Type":"PullRequestEvent","CreatedAt":"2023-04-20T23:13:31","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9477","RelatedDescription":"Merged pull request \"[A11y] Add screen reader description to More information and Add new links\" (#9477) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n\r\n* Apparently adding `title` didn't fix entirely this issue so I added `aria-label` to those links.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9423"},{"Id":"28563188390","Type":"PullRequestEvent","CreatedAt":"2023-04-20T22:06:19","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9477","RelatedDescription":"Opened pull request \"[A11y] Add screen reader description to More information and Add new links\" (#9477) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n\r\n* Apparently adding `title` didn't fix entirely this issue so I added `aria-label` to those links.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9423"},{"Id":"28562376779","Type":"PullRequestEvent","CreatedAt":"2023-04-20T21:14:07","Actor":"theot12","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9476","RelatedDescription":"Merged pull request \"[a11y] remove span element in version history table\" (#9476) at NuGet/NuGetGallery","RelatedBody":"Fixes an issue where JAWS and NVDA cannot access the package warnings column in Version History table using `ctrl` + `alt` + `right arrow key`. Removing the `span` element and distributing its attributes solves the issue. \r\n\r\nAddresses: https://github.com/NuGet/NuGetGallery/issues/9472"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"28561164699","Type":"IssuesEvent","CreatedAt":"2023-04-20T20:09:56","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11262","RelatedDescription":"Closed issue \"Signing:  re-enable signed package verification on Linux and macOS\" (#11262) at NuGet/Home","RelatedBody":"[Design specification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md)\r\n[Technical specification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification-technical.md)"},{"Id":"28557384426","Type":"IssuesEvent","CreatedAt":"2023-04-20T17:06:06","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12547","RelatedDescription":"Closed issue \"Screen readers not detecting elements in NuGet Solver window\" (#12547) at NuGet/Home","RelatedBody":""},{"Id":"28557365186","Type":"IssuesEvent","CreatedAt":"2023-04-20T17:05:15","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12547","RelatedDescription":"Opened issue \"Screen readers not detecting elements in NuGet Solver window\" (#12547) at NuGet/Home","RelatedBody":""},{"Id":"28552608267","Type":"IssuesEvent","CreatedAt":"2023-04-20T14:07:07","Actor":"chrisdecker1201","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12546","RelatedDescription":"Opened issue \"Authentication behaviour changing depending on Basic Auth or CredentialProvider\" (#12546) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.407\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHello,\r\n\r\nI think I've everything described here: https://github.com/microsoft/artifacts-credprovider/issues/383, but it seems no problem from the CredentialProvider.\r\n\r\nWe use the following systems:\r\n\r\n* Azure DevOps Pipelines\r\n\r\n* external Feed (ProGet from Inedo https://inedo.com/proget)\r\n\r\n* self hosted build agents (Windows Server 2022)\r\n\r\nWe have the following issue:\r\n\r\nI can't get the restore running with the external feed, if I use the CredentialProvider. It does not work in the pipeline and it does not work manually.\r\n\r\nI try the following:\r\n\r\n~~~powershell\r\ndotnet new classlib --name proget_experimental\r\ncd proget_experimental\r\ndotnet new nugetconfig\r\ndotnet nuget disable source nuget\r\ndotnet nuget add source \"https://internalproget.server.com/nuget/Experimental/v3/index.json\" --name \"ProGet Experimental (Basic Auth)\"\r\ndotnet add package MsgPack.Cli\r\n~~~\r\n\r\nAnd I'm getting:\r\n\r\n~~~log\r\nResponse status code does not indicate success: 401 (Unauthorized).\r\n~~~\r\n\r\nI prepared the system with the following:\r\n\r\n~~~powershell\r\n$env:VSS_NUGET_EXTERNAL_FEED_ENDPOINTS = '{\"endpointCredentials\": [{\"endpoint\":\"https://internalproget.server.com/nuget/Experimental/v3/index.json\", \"username\":\"username\", \"password\":\"password\"}]}'\r\n$env:NUGET_PLUGIN_HANDSHAKE_TIMEOUT_IN_SECONDS=30\r\n$env:NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS=30\r\niex \"& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) }\"\r\n~~~\r\n\r\nWhen I manually add the dependcy to the *.csproj file\r\n\r\n~~~xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>net6.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n        <Nullable>enable</Nullable>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <PackageReference Include=\"MsgPack.Cli\" Version=\"1.0.1\" />\r\n    </ItemGroup>\r\n</Project>\r\n~~~\r\n\r\n\r\nand run `dotnet restore -v d`, I get the following output:\r\n\r\n~~~log\r\nTask \"RestoreTask\"\r\n  (in) RestoreGraphItems Count '5'\r\n  (in) RestoreDisableParallel 'False'\r\n  (in) RestoreNoCache 'False'\r\n  (in) RestoreIgnoreFailedSources 'False'\r\n  (in) RestoreRecursive 'True'\r\n  (in) RestoreForce 'False'\r\n  (in) HideWarningsAndErrors 'False'\r\n  (in) RestoreForceEvaluate 'False'\r\n  (in) RestorePackagesConfig 'False'\r\n  X.509 certificate chain validation will use the default trust store selected by .NET.\r\n  Running non-parallel restore.\r\n  Reading project file C:\\Users\\<USER>\\proget_experimental\\proget_experimental.csproj.\r\n  The restore inputs for 'proget_experimental' have changed. Continuing restore.\r\n  Restoring packages for C:\\Users\\<USER>\\proget_experimental\\proget_experimental.csproj...\r\n  Restoring packages for .NETCoreApp,Version=v6.0...\r\n  Using C:\\Users\\<USER>\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll as a credential provider plugin.\r\n      [CredentialProvider.073911]Running in plug-in mode\r\n      [CredentialProvider.073911]Command-line v1.0.2+c2bc059db245a21f09d4e9afa92bba813c567488: C:\\Users\\<USER>\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll -Plugin\r\n      [CredentialProvider.073911]Handling 'Request' 'Initialize'. Time elapsed in ms: 4 - Payload: {\"ClientVersion\":\"6.3.2\",\"Culture\":\"en-US\",\"RequestTimeout\":\"00:00:30\"}\r\n      [CredentialProvider.073911]Sending response: 'Request' 'Initialize'. Time elapsed in ms: 4\r\n      [CredentialProvider.073911]Time elapsed in milliseconds after sending response 'Request' 'Initialize': 6\r\n      [CredentialProvider.073911]Handling 'Request' 'GetOperationClaims'. Time elapsed in ms: 0 - Payload: {}\r\n      [CredentialProvider.073911]Sending response: 'Request' 'GetOperationClaims'. Time elapsed in ms: 6\r\n      [CredentialProvider.073911]Time elapsed in milliseconds after sending response 'Request' 'GetOperationClaims': 20\r\n      [CredentialProvider.073911]Handling 'Request' 'SetLogLevel'. Time elapsed in ms: 5 - Payload: {\"LogLevel\":\"Debug\"}\r\n      [CredentialProvider]Sending response: 'Request' 'SetLogLevel'. Time elapsed in ms: 6\r\n      [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'SetLogLevel': 18\r\n      [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 3 - Payload: {\"Uri\":\"https://internalproget.server.com/nuget/Experimental/v3/index.json\",\"IsRetry\":false,\"IsNonInteractive\":true,\"CanShowDialog\":false}\r\n      [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n      [CredentialProvider]Handling auth request, Uri: https://internalproget.server.com/nuget/Experimental/v3/index.json, IsRetry: False, IsNonInteractive: True, CanShowDialog: False\r\n      [CredentialProvider]URI: https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Using NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider to try to get credentials for https://internalproget.server.com/nuget/Experimental/v3/index.json.\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - IsRetry: False\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Parsing json\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Found credentials for endpoint https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Sending response: 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 40\r\n      [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'GetAuthenticationCredentials': 43\r\n      [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 0 - Payload: {\"Uri\":\"https://internalproget.server.com/nuget/Experimental/v3/index.json\",\"IsRetry\":true,\"IsNonInteractive\":true,\"CanShowDialog\":false}\r\n      [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n      [CredentialProvider]Handling auth request, Uri: https://internalproget.server.com/nuget/Experimental/v3/index.json, IsRetry: True, IsNonInteractive: True, CanShowDialog: False\r\n      [CredentialProvider]URI: https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Using NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider to try to get credentials for https://internalproget.server.com/nuget/Experimental/v3/index.json.\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - IsRetry: True\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Found credentials for endpoint https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Sending response: 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 1\r\n      [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'GetAuthenticationCredentials': 2\r\n      [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 0 - Payload: {\"Uri\":\"https://internalproget.server.com/nuget/Experimental/v3/index.json\",\"IsRetry\":true,\"IsNonInteractive\":true,\"CanShowDialog\":false}\r\n      [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n      [CredentialProvider]Handling auth request, Uri: https://internalproget.server.com/nuget/Experimental/v3/index.json, IsRetry: True, IsNonInteractive: True, CanShowDialog: False\r\n      [CredentialProvider]URI: https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Using NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider to try to get credentials for https://internalproget.server.com/nuget/Experimental/v3/index.json.\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - IsRetry: True\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Found credentials for endpoint https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Sending response: 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 1\r\n      [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'GetAuthenticationCredentials': 1\r\n      [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 0 - Payload: {\"Uri\":\"https://internalproget.server.com/nuget/Experimental/v3/index.json\",\"IsRetry\":true,\"IsNonInteractive\":true,\"CanShowDialog\":false}\r\n      [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n      [CredentialProvider]Handling auth request, Uri: https://internalproget.server.com/nuget/Experimental/v3/index.json, IsRetry: True, IsNonInteractive: True, CanShowDialog: False\r\n      [CredentialProvider]URI: https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Using NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider to try to get credentials for https://internalproget.server.com/nuget/Experimental/v3/index.json.\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - IsRetry: True\r\n      [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Found credentials for endpoint https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n      [CredentialProvider]Sending response: 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 1\r\n      [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'GetAuthenticationCredentials': 1\r\nC:\\Users\\<USER>\\proget_experimental\\proget_experimental.csproj : error NU1301: Unable to load the service index for source https://internalproget.server.com/nuget/Experimental/v3/index.json.\r\n~~~\r\n\r\nWhen I add username and password everything is working:\r\n\r\n~~~powershell\r\ndotnet new classlib --name proget_experimental\r\ncd proget_experimental\r\ndotnet new nugetconfig\r\ndotnet nuget disable source nuget\r\ndotnet nuget add source \"https://internalproget.server.com/nuget/Experimental/v3/index.json\" --name \"ProGet Experimental (Basic Auth)\" --username \"username\" --password \"password\"\r\ndotnet add package MsgPack.Cli\r\n~~~\r\n\r\nWhen I execute the following, I also have a positive response:\r\n\r\n~~~powershell\r\nC:\\Users\\<USER>\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe  -I -V Verbose -U \"https://internalproget.server.com/nuget/Experimental/v3/index.json\"\r\n~~~\r\n\r\n~~~log\r\n[Verbose] [CredentialProvider]Running in stand-alone mode\r\n[Verbose] [CredentialProvider]Command-line v1.0.2+c2bc059db245a21f09d4e9afa92bba813c567488: C:\\Users\\<USER>\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll -I -V Verbose -U https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n[Verbose] [CredentialProvider]Handling auth request, Uri: https://internalproget.server.com/nuget/Experimental/v3/index.json, IsRetry: True, IsNonInteractive: False, CanShowDialog: False\r\n[Verbose] [CredentialProvider]URI: https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n[Verbose] [CredentialProvider]Using NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider to try to get credentials for https://internalproget.server.com/nuget/Experimental/v3/index.json.\r\n[Verbose] [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - IsRetry: True\r\n[Verbose] [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Parsing json\r\n[Verbose] [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Found credentials for endpoint https://internalproget.server.com/nuget/Experimental/v3/index.json\r\n[Information] [CredentialProvider]Username: username\r\n[Information] [CredentialProvider]Password: password\r\n~~~\r\n\r\nThe difference (as described here https://github.com/microsoft/artifacts-credprovider/issues/383) between Basic Auth and authorize with the CredentialProvider is that in the CredentalProvider NTLM is used and with Basic Auth it's using Kerberos. But in both cases the CredentialProvider defines \"Basic\" as authenticationType.\r\n\r\nMaybe you can help me :)?\r\n\r\nThank you\n\n### Verbose Logs\n\n_No response_"},{"Id":"28549539321","Type":"IssuesEvent","CreatedAt":"2023-04-20T12:17:01","Actor":"AsakusaRinne","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12545","RelatedDescription":"Opened issue \"Please enlarge the size limitation of NuGet package\" (#12545) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Other/NA\n\n### Current Behavior\n\nThe NuGet package has a size limitation of 250M.\n\n### Desired Behavior\n\nChange the limitation to 500M or higher.\n\n### Additional Context\n\nAs mentioned in https://github.com/NuGet/Home/issues/6208#issuecomment-1516206607, several years have passed and it's easy for machine learning packages to be larger than 250M. For example, I'm one of the authors of Tensorflow.NET, the linux cuda binary reaches 400M (after compressed by NuGet). It's a big inconvenient if users have to download the binary them self and find the right place to put it."},{"Id":"28543264199","Type":"IssuesEvent","CreatedAt":"2023-04-20T08:00:08","Actor":"Sam13","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12544","RelatedDescription":"Opened issue \"Pack: Incorrect dependency id from project reference when package id declared in another package\" (#12544) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.203\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nGiven a package which declares a package ID prefix for all consumers of it.\r\nE.g. useful to encapsulate a reserved prefix on nuget.org to lots of repositories.\r\n\r\nThis is done by setting the ```PackageId``` property in the _build\\\\[package id].props_ file of the package.\r\n\r\nOn the consumer side this package is referenced in the _Directory.Build.props_ on solution level to have it enabled to all projects.\r\nThe generated NuGet packages now have the declared prefix BUT: dependencies in the package are missing the prefix - only the project name is there.\r\n\r\nSample to illustrate / reproduce: https://github.com/Sam13/dotnet-sdk-common-nuget-prefix-issue\r\n- ```dotnet build DefineGlobalNuGetPrefix/DefineGlobalNuGetPrefix.sln``` -> You get _local-nuget-test-feed/MyPrefix.DefineGlobalNuGetPrefix.1.0.0.nupkg_\r\n- ```dotnet build ConsumeGlobalNuGetPrefix/ConsumeGlobalNuGetPrefix.sln``` -> You get _local-nuget-test-feed/MyPrefix.TestContract.1.0.0.nupkg_ and _local-nuget-test-feed/MyPrefix.TestImplementation.1.0.0.nupkg_\r\n- The dependencies of _MyPrefix.TestImplementation.1.0.0.nupkg_ point to _TestContract_ **but should be _MyPrefix.TestContract_**\r\n![image](https://user-images.githubusercontent.com/2196081/233299198-82cb44b6-52b2-4410-8a17-5ba4aad76d38.png)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"28508278206","Type":"IssuesEvent","CreatedAt":"2023-04-19T00:24:31","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11846","RelatedDescription":"Closed issue \"[Bug]: dotnet nuget push not detecting apikey for 3rd party symbol server\" (#11846) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nn/a\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Set apikey for `myget repo v3 index`. \r\n2. Create nupkg + snupkg.\r\n3. Please do `dotnet nuget push .\\somepackage.1.1.0.nupkg --source myget`\r\nIt doesn't detect apikey for 3rd party symbol server, not sure if it's myget implementation issue or `nuget.client` issue. It looks workaround is pass actual apikey as parameter in cli.\r\n![image](https://user-images.githubusercontent.com/8766776/171296532-6266e63e-2d71-4498-aa11-d3ae3ee1d637.png)\r\n\r\nAs you can see in fiddler log it's missing apikey header.\r\n![image](https://user-images.githubusercontent.com/8766776/171298054-b8e97b07-9df5-460c-b5db-c31179335bc3.png)\r\n\r\n\r\n4. Also do `nuget push .\\somepackage.1.1.0.nupkg -source myget` then it asks for username. \r\n It looks workaround is pass actual apikey as parameter in cli.\r\n![image](https://user-images.githubusercontent.com/8766776/171297184-63415ecb-1e5b-4725-861c-c0db6c3d4ba0.png)\r\n\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-04-21T03:30:24.496146Z","RunDurationInMilliseconds":1356}