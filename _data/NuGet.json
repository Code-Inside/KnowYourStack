{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21662795396","Type":"PullRequestEvent","CreatedAt":"2022-05-06T21:32:01","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8962","RelatedDescription":"Merged pull request \"Create artifacts for sharing NuGetGallery.Services\" (#8962) at NuGet/NuGetGallery","RelatedBody":"I did a feasibility spike on getting this project's artifacts into a nupkg for broader use, and got it working using a nupkg stub workaround with built assets (the same approach used for the jobs projects in the same buildstep).\r\n\r\nNote that using the `New-ProjectPackage` PS function for this was a dead end, as this project is not SDK-style (the projects in the repo that do use this function are all SDK-style). The msbuild error there is that the `pack` target is not defined, and this target comes built in to SDK-style projects. Converting the Services project into an SDK-style project is also non-trivial as it turns out, so that can possibly be future work."},{"Id":"21623822529","Type":"IssuesEvent","CreatedAt":"2022-05-04T22:04:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9113","RelatedDescription":"Closed issue \"[WIKI TYPO] Typo in \"Branding the NuGet Gallery\"\" (#9113) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\n\r\nThere is a typo in the \"Branding the NuGet Gallery\" wiki.\r\n\r\nIn the [Clone The Gallery](https://github.com/NuGet/NuGetGallery/wiki/Branding-the-NuGet-Gallery#clone-the-gallery) section in point 3 you are missing a \"h\" in the URL, the URL is https://gitub.com/NuGet/NuGetGallery.git but should be https://github.com/NuGet/NuGetGallery.git\r\n\r\nCheers"},{"Id":"21623347570","Type":"IssuesEvent","CreatedAt":"2022-05-04T21:25:50","Actor":"mickgarland","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9113","RelatedDescription":"Opened issue \"[WIKI TYPO] Typo in \"Branding the NuGet Gallery\"\" (#9113) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\n\r\nThere is a typo in the \"Branding the NuGet Gallery\" wiki.\r\n\r\nIn the [Clone The Gallery](https://github.com/NuGet/NuGetGallery/wiki/Branding-the-NuGet-Gallery#clone-the-gallery) section in point 3 you are missing a \"h\" in the URL, the URL is https://gitub.com/NuGet/NuGetGallery.git but should be https://github.com/NuGet/NuGetGallery.git\r\n\r\nCheers"},{"Id":"21584934738","Type":"IssuesEvent","CreatedAt":"2022-05-02T23:46:22","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6858","RelatedDescription":"Closed issue \"Default into 2FA upon new user sign up\" (#6858) at NuGet/NuGetGallery","RelatedBody":"Once a new user sign's up using MSA, 2FA should be enabled. Users can disable if they wanted to. "},{"Id":"21584115690","Type":"IssuesEvent","CreatedAt":"2022-05-02T22:22:33","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9097","RelatedDescription":"Closed issue \"[Bug]: Many SPDX license Expressions not resolved by https://licenses.nuget.org/ instead \"We have no information regarding the 'Xyz' license.\"\" (#9097) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI\n\n### Product Version\n\ndotnet \n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. create a Visual Studio Project Nuget Package with an SPDX Expression e.g. <PackageLicenseExpression>Hippocratic-2.1</PackageLicenseExpression>\r\n2. build, pack and push the Package using an Azure pipeline \r\n3. Visit the Package Feed / Artifact Page in Azure \r\n4. Search for the new Package \r\n5. Click the Project License Link in the bottom right Corner which links to https://licenses.nuget.org/Hippocratic-2.1 \r\n6. Get an Error Message: We have no information regarding the 'Hippocratic-2.1' license. \r\n\r\nThe https://spdx.org/licenses/ Page lists many licenses, \r\nbut it seems only a few work, e.g. MIT, MIT-0, LGPL-2.0-only and MPL-1.0 \r\n\r\nMany Licenses listed on https://spdx.org/licenses/  don't work and the link https://licenses.nuget.org/Hippocratic-2.1 displays a page with an error message reading \"We have no information regarding the 'Hippocratic-2.1' license.\"\r\n\r\nI understand that maintaining the full List is a lot of work, but it would be good to at least \r\n* include a Link to the SPDX License https://spdx.org/licenses/Hippocratic-2.1.html \r\n* or a Link the List https://spdx.org/licenses/ \r\nin the Message when it cannot be found on https://licenses.nuget.org  \r\n\r\nBest Regards...\n\n### Verbose Logs\n\n```shell\nhttps://licenses.nuget.org/Hippocratic-2.1 does not link to or mirror \r\nhttps://spdx.org/licenses/Hippocratic-2.1\n```\n"},{"Id":"21583933002","Type":"IssuesEvent","CreatedAt":"2022-05-02T22:07:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8505","RelatedDescription":"Closed issue \"[README] \"Blockquotes\" is using a larger font size, and the distance between rows is too large\" (#8505) at NuGet/NuGetGallery","RelatedBody":"Repro:\r\n\r\nTest package: https://int.nugettest.org/packages/license-expression-test2\r\n\r\nAdd this blockquotes into a readme file:\r\n\r\n```\r\nline 1\r\nline 2\r\nline 3\r\n> quote1\r\n>> quote 2\r\n>>> quote 3\r\n\r\n> quote 4\r\n\r\nline 4\r\nline 5\r\n```\r\nThe package detail page shows:\r\n<img src=\"https://user-images.githubusercontent.com/41028779/113785882-daaab180-96ec-11eb-9d9a-84250275e1c7.png\" width=\"180\">\r\n\r\nCould the rendering be better?\r\n\r\n\r\n\r\n\r\n"},{"Id":"21552145032","Type":"PullRequestEvent","CreatedAt":"2022-04-29T22:47:50","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9112","RelatedDescription":"Merged pull request \"RI of dev to main\" (#9112) at NuGet/NuGetGallery","RelatedBody":"I need to run DB migration on validation db in INT and PROD. Need to create a release from the main branch."},{"Id":"21549861030","Type":"PullRequestEvent","CreatedAt":"2022-04-29T19:45:05","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9112","RelatedDescription":"Opened pull request \"Update server common libs to 2.100.0 (#9110)\" (#9112) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21530927386","Type":"IssuesEvent","CreatedAt":"2022-04-29T00:37:18","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9107","RelatedDescription":"Closed issue \"[Deployment] 2022.04.25\" (#9107) at NuGet/NuGetGallery","RelatedBody":"# Licenses\r\n## Changes\r\n* https://github.com/NuGet/NuGet.Licenses/pull/41 (https://github.com/NuGet/NuGetGallery/issues/9097)\r\n\r\n## Progress\r\n* [x] Bulid https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=6069447&view=logs&j=fd490c07-0b22-5182-fac9-6d67fe1e939b&t=e900fa28-66c4-55e5-4e9c-0ba63fb92fbd\r\n* [x] Release https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1318330\r\n* [x] DEV\r\n* [x] PROD"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21660798697","Type":"IssuesEvent","CreatedAt":"2022-05-06T18:51:11","Actor":"patrick-m-kendall","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11799","RelatedDescription":"Opened issue \"nuget integrity check DocumentFormat.OpenXml 2.16.0\" (#11799) at NuGet/Home","RelatedBody":"I am getting an integrity check on the DocumentFormat.OpenXml 2.16.0 package. I have tried both the Package Manager Console and the NuGet Package Manager.\r\n\r\nthanks"},{"Id":"21658492922","Type":"IssuesEvent","CreatedAt":"2022-05-06T16:27:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11798","RelatedDescription":"Opened issue \"PackageDownload multiple versions doesn't work in Visual Studio. \" (#11798) at NuGet/Home","RelatedBody":"Originally changed in https://github.com/NuGet/NuGet.Client/commit/ef9eb47e886cd5abe7e5d3160cc48312274b1c06, works on the commandline, but doesn't work in VS. \r\n\r\nBug here: https://github.com/NuGet/NuGet.Client/blob/f52a83999070237288d7e1c8ec5934a65eda77ac/src/NuGet.Clients/NuGet.SolutionRestoreManager/VSNominationUtilities.cs#L123\r\n\r\nExample failure: \r\n\r\n> Severity Code Description Project File Line Suppression State\r\nError NU1105 Unable to read project information for 'EntityDesignBootstrapPackage': '[5.0.0];[6.2.0]' is not a valid version string. EntityDesignBootstrapPackage C:\\dev\\ef6tools\\src\\EFTools\\EntityDesignBootstrapPackage\\EntityDesignBootstrapPackage.csproj 1\r\n"},{"Id":"21657918749","Type":"IssuesEvent","CreatedAt":"2022-05-06T15:52:05","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11797","RelatedDescription":"Opened issue \"Package Source Mapping UI - PM UI Actions support source pinning create mappings in nuget.config\" (#11797) at NuGet/Home","RelatedBody":"Refer to https://github.com/NuGet/Home/issues/11361 and https://github.com/NuGet/Home/blob/dev/implemented/2021/PackageSourceMapping.md"},{"Id":"21656776302","Type":"IssuesEvent","CreatedAt":"2022-05-06T14:49:50","Actor":"MartinBarkerPhilips","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11796","RelatedDescription":"Opened issue \"[Bug]: Visual Studio 2019 can't find private Artifactory NuGet package\" (#11796) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nvisual studio 2019\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nDownload nuget for the Win10 command line. \r\nDownload Visual Studio 2019.\r\nSetup a JFrog Artifactory repo online.\r\n\r\n\r\nRecently I used Visual Studio to package a NuGet `.nupkg` file, and then used the following commands to push my .nupkg file to a private artifactory repo:\r\n```\r\n$ nuget sources Add -Name Artifactory -Source https://myurl/artifactory/api/nuget/ult-testware-nuget -username aaaaaa -password bbbbbb\r\n$ nuget setapikey aaaaaa:bbbbbb -Source Artifactory\r\n$ nuget push ClassLibrary2.1.0.0.nupkg -Source Artifactory\r\n```\r\nI can verify that it was uploaded and is visible online:\r\n[![enter image description here][1]][1]\r\n\r\nMy private artifactory url is added to vscode as a NuGet source:\r\n[![enter image description here][2]][2]\r\n\r\nBut when I try to browse for NuGet packages using that source, I get no results. Even with prerelease checked, and after refreshing/restarting VS, [![enter image description here][3]][3]\r\n\r\n\r\nDo I need to re-authenticate Visual Studio with my private JFrog Artifactory repo somehow? I'm hoping to see and download the NuGet package I just pushed up.\r\n\r\nI also tried adding to my NuGet.Config file another NuGet source:\r\n```\r\n    <add key=\"ArtifactoryNuGetV3\" value=\"https://myurl/artifactory/api/nuget/v3/ult-testware-nuget\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n```\r\nBut that does not work.\r\n\r\nOne of the artifactory source urls I added links to my repo, and when I selected it to browse, I get a popup asking for username/password. After entering I get an error saying 404 (so I think the auth was a success, but its searching for my package in the wrong place)\r\n```\r\n[artifcator2] The V2 feed at 'https://myurl/artifactory/ult-testware-nuget/ClassLibrary2.1.0.0.nupkg/Search()?$filter=IsLatestVersion&searchTerm=''&targetFramework='netcoreapp3.1'&includePrerelease=false&$skip=0&$top=26&semVerLevel=2.0.0' returned an unexpected status code '404 '.\r\n```\r\nIf I remove everything from the url so it is just ```https://myurl/artifactory/ult-testware-nuget/ClassLibrary2.1.0.0.nupkg/``` and look it up in my browser, it either shows \r\n``` 404: \"{\\\"error\\\":\\\"Expected a folder but found a file, at: ult-testware-nuget:ClassLibrary2.1.0.0.nupkg\\\"}\" ``` or If I remove the last slash it begins to download\r\n\r\nThanks\r\n\r\n  [1]: https://i.stack.imgur.com/AA7m3.png\r\n  [2]: https://i.stack.imgur.com/kg7nq.png\r\n  [3]: https://i.stack.imgur.com/cJyjw.png\n\n### Verbose Logs\n\n_No response_"},{"Id":"21652484192","Type":"IssuesEvent","CreatedAt":"2022-05-06T10:49:57","Actor":"tg73","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11795","RelatedDescription":"Opened issue \"[Bug]: Visual Studio restore sometimes sets originalTargetFrameworks incorrectly in project.assets.json\" (#11795) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS 2019 16.11.7, VS 2022 17.1.6\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThe issue is seen in `project.assets.json` at `project/restore/originalTargetFrameworks`. The issue is present only for some values of `$(TargetFramework)`. I see the issue when `$(TargetFramework)` is `net6.0-windows`, but not when using, for example, `net6.0`. Examples below are when `$(TargetFramework)` is `net6.0-windows`:\r\n\r\nRelevant portion of `project.assets.json` after MSBuild command line restore:\r\n```json\r\n      \"originalTargetFrameworks\": [\r\n        \"net6.0-windows\"\r\n      ],\r\n      \"frameworks\": {\r\n        \"net6.0-windows7.0\": {\r\n          \"targetAlias\": \"net6.0-windows\",\r\n          \"projectReferences\": {}\r\n        }\r\n      },\r\n```\r\n\r\nRelevant portion of `project.assets.json` after Visual Studio restore:\r\n```json\r\n      \"originalTargetFrameworks\": [\r\n        \"net6.0-windows7.0\"\r\n      ],\r\n      \"frameworks\": {\r\n        \"net6.0-windows7.0\": {\r\n          \"targetAlias\": \"net6.0-windows\",\r\n          \"projectReferences\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe documentation for `NuGet.ProjectModel.ProjectRestoreMetadata.OriginalTargetFrameworks` states:\r\n```\r\nOriginal target frameworks strings. These are used to match msbuild conditionals to $(TargetFramework)\r\n```\r\nTherefore I would suggest that MSBuild command line is behaving correctly, and Visual Studio is behaving incorrectly. This difference in behaviour has broken one of our build customizations.\r\n\r\nRepro project/solution: [ClassLibrary1.zip](https://github.com/NuGet/Home/files/8639413/ClassLibrary1.zip)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"21642649495","Type":"PullRequestEvent","CreatedAt":"2022-05-05T20:33:04","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11794","RelatedDescription":"Opened pull request \"[Proposal]: Global Package Reference for Central Package Management\" (#11794) at NuGet/Home","RelatedBody":"# [Rendered](https://github.com/NuGet/Home/blob/dev-jeffkl-globalpackagereference/proposed/2022/globalpackagereference.md)\r\n\r\nProposal for https://github.com/NuGet/Home/issues/10159"},{"Id":"21641074117","Type":"IssuesEvent","CreatedAt":"2022-05-05T18:51:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11783","RelatedDescription":"Closed issue \"[Feature]: Nuget SDK Resolver support for wildcard characters\" (#11783) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\r\n\r\nNuGet SDK\r\n\r\n### The Elevator Pitch\r\n\r\nWe are creating a new SDK that partners will consume and will have consistent changes to the package. We want partners to be able to consume the latest version of the SDK and always build with the latest be being able to use wildcards such as \r\n\r\n```JSON\r\n{\r\n  \"msbuild-sdks\": {\r\n    \"Microsoft.Build.Traversal\": \"3.0.2\",\r\n    \"Microsoft.Build.NoTargets\": \"2.0.1\",\r\n    \"Microsoft.Substrate.Euclid.Sdk.Python\": \"1.0.*\"\r\n  },\r\n  \"sdk\": {\r\n  \"version\": \"3.1.416\"\r\n  }\r\n}\r\n```\r\n### Additional Context and Details\r\n\r\n_No response_"},{"Id":"21641020881","Type":"IssuesEvent","CreatedAt":"2022-05-05T18:47:56","Actor":"jmyersmsft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11793","RelatedDescription":"Opened issue \"[DCR]: Plugin timeout defaults should be increased\" (#11793) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### Current Behavior\n\nCurrently the handshake and response timeouts for plugins default to 5 seconds. While this should theoretically be long enough, in practice we've had to give our customers instructions to increase those timeouts with environments a fairly large number of times. I believe our plugin is starting quickly, but it's possible that NuGet is not observing the response in time.\n\n### Desired Behavior\n\nWe've been giving 20-30 seconds in our guidance, and that seems to be sufficient.\n\n### Additional Context\n\n_No response_"},{"Id":"21640909534","Type":"IssuesEvent","CreatedAt":"2022-05-05T18:40:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11781","RelatedDescription":"Closed issue \"[DCR]: dotnet list package --outdated exit code\" (#11781) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nWe'd like to check for outdated packages as part of our PR pipeline.\r\n\r\nWe would like to use `dotnet list package --outdated`, however there is no way to tell (without parsing the output), if there are any outdated packages.\r\n\r\nWould it be possible to opt into returning a non-zero exit code if there are outdated packages, so we can then fail our pipeline / report on it?\r\n\r\n\n\n### Desired Behavior\n\nHave an additional argument to `dotnet list package --outdated` to have it return a non-zero exit code if there are outdated packages (e.g., then number of outdated packages)\n\n### Additional Context\n\nOriginal issue https://github.com/dotnet/sdk/issues/25091\r\n\r\nWe're currently using [dotnet-outdated/dotnet-outdated](https://github.com/dotnet-outdated/dotnet-outdated), however sometimes it is a hit or miss, because it fails to load the .sln."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":248,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":172,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-05-07T03:30:24.030668Z","RunDurationInMilliseconds":1446}