{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34587609862","Type":"PullRequestEvent","CreatedAt":"2024-01-05T01:38:15","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9739","RelatedDescription":"Merged pull request \"Prevent nupkg validation failure for malformed nupkg\" (#9739) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5039\r\n\r\nInstead of packages getting stuck in the validation pipeline, reject them earlier due to the double slash in the path.\r\n\r\n1. Double backslashes\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/0657d1fb-dfd3-4fa4-a6df-68ffbd799147)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/e9167840-afc8-4c6a-bbc2-cbefb6f884e8)\r\n\r\n1. Double forwardslashes\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/9db5cee9-a07e-498a-985e-0387995a5f3b)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/59518dc8-82c7-40c1-ae95-a746f6aa4efd)\r\n\r\n**After this change rejects earlier with message:**\r\nDouble forwardslash: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/c6f78ee8-2ed6-45a8-b109-31f56fc10c08)\r\n\r\nDouble backslash: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/cbc22868-99a8-4bfa-a3fc-c52ddef7b7a7)\r\n\r\n"},{"Id":"34558827465","Type":"PullRequestEvent","CreatedAt":"2024-01-04T01:29:30","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9771","RelatedDescription":"Merged pull request \"update allowlist\" (#9771) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nremove following domain since they are no longer active: \r\n`api.travis-ci.org` to `app.travis-ci.com` sine they migrated from .org to .com, remove api.travis-ci.org from list since `app.travis-ci.com` already in list\r\n`bettercodehub.com` is retired\r\n`bintray` is no longer active\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9693"},{"Id":"34555611478","Type":"IssuesEvent","CreatedAt":"2024-01-03T21:42:20","Actor":"304NotModified","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9772","RelatedDescription":"Opened issue \"[NuGet.org Bug] Stats: Community Packages shows non-Community Packages #3\" (#9772) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n\r\n\r\nThe Community Packages shows non-Community Packages, see screenshot\r\n\r\n\r\n### To Reproduce\r\n\r\n\r\nrelated: https://github.com/NuGet/NuGetGallery/issues/8456\n\n### Repro Steps\n\nSteps to reproduce the behavior:\r\n1. go to https://www.nuget.org/stats/packages\r\n\n\n### Expected Behavior\n\nNot showing Microsoft packages when \"Show all packages\" isn't checked. Currently multiple microsoft.* packages are shown\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34613471541","Type":"IssuesEvent","CreatedAt":"2024-01-06T00:47:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13134","RelatedDescription":"Opened issue \"Avoid recreating the restore graph if the inputs are the same, (ie package spec no-oped) and the assets file is present, just download the packages\" (#13134) at NuGet/Home","RelatedBody":"Today, a no-op restore consists of a few parts: \r\n\r\n- Ensure the inputs are the same\r\n  - PackageSpec is the same. \r\n- Ensure the outputs are the same\r\n  - assets file, nuget.g.props/nuget.g.targets exist\r\n  - the packages are all downloaded.\r\n\r\nA no-op means all the above conditions are met.\r\n\r\n\r\nIf the conditions are not met, a full restore occurs.\r\nNow this full restore is going to reuse the assets file when possible, download packages only when needed, but it still needs to recreate the graph, and ensure all the requirements are satisfied. \r\n\r\nThere's potentially an opportunity for an optimization when everything in the obj folder is up to date, but the packages are not.\r\nWe can make an aggressive optimization, where if the inputs are up to date, and only *packages* are missing, we'd just go ahead and redownload all the packages only. \r\n\r\nThis could theoretically lead to a restore weird behavior, but it also has the changes of being super performant. \r\nWe'd ofc be assuming that all the warnings/errors in the cache file/assets file are up to date and are going to be replayed. "},{"Id":"34606684243","Type":"IssuesEvent","CreatedAt":"2024-01-05T17:41:26","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11210","RelatedDescription":"Closed issue \"[Bug]: VS Credential Provider Incorrectly Setting Value of `isRetry`\" (#11210) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nMicrosoft Visual Studio Professional 2019 Version 16.10.3 (NuGet Package Manager 5.10.0)\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n## Problem\r\n\r\nThe [documentation](https://docs.microsoft.com/en-us/nuget/reference/extensibility/nuget-credential-providers-for-visual-studio#creating-a-nuget-credential-provider-for-visual-studio) for NuGet credential providers for Visual Studio (NCPVS) states that the value of the `isRetry` parameter should be set to true \"if credentials were previously requested for this Uri, but the supplied credentials did not allow authorized access.\"\r\n\r\n[Other](https://docs.microsoft.com/en-us/nuget/reference/extensibility/nuget-exe-credential-providers#input-parameters) Microsoft documentation (albeit not specifically for VS, but still for NuGet credential providers) states that \"[IsRetry] indicates that this attempt is a retry of a previously failed attempt.\"\r\n\r\nFor context, we have an on-premise authenticated NuGet feed that is configured to disallow anonymous access. That is, each user must provide an Nuget-specific username & password when accessing that NuGet feed. Each time an operation is performed on the  feed from within the Visual Studio Package Manager UI (e.g. list all packages, install a package), we're presented with a 401 Unauthorized challenge. Then, if valid credentials are presented, the challenge flow proceeds successfully, but if not, we are met with a 403 Forbidden.\r\n\r\nI can verify that my NCPVS is being called with `isRetry == false` for the first operation, and then `isRetry == true` for all subsequent operations. This is contrary to what I would expect -- I would expect `isRetry == false` for all of the subsequent requests because the NuGet-specific username and password remains the same, so there is no reason why the set of credentials should not be authorized. Indeed, after debugging my NCPVS, the reason for setting `isRetry == true` is not because the credentials were explicitly forbidden, but rather because the request to the NuGet feed returned a 401 challenge.\r\n\r\nSetting `isRetry == true` only upon encountering a 403 makes sense because a NuGet feed that requires authentication should be forcing the NuGet client (whether that be VS, `NuGet.exe`, etc.) to authenticate with a 401 request each time we \"hit\" that protected NuGet feed. I believe that NuGet should only retry if the provided credentials were explicitly forbidden, not if we were simply presented with a 401 challenge.\r\n\r\nAs it stands right now, the existing implementation will cause our NCPVS to have its [GetCredentialAsync](https://docs.microsoft.com/en-us/nuget/reference/extensibility/nuget-credential-providers-for-visual-studio#getcredentialasync) method with `isRetry == true`. Becuase there's no other way of determining whether the reason for setting `isRetry == true` was because of a 401 Unauthorized, 403 Forbidden, or something else, we always assume the worst case (i.e. a 403 caused by stale credentials) and obtain new credentials from our internal service. This causes unnecessary delay in returning correct credentials from the credential provider, and strain on our internal services.\r\n\r\n## Proposed Solution\r\n\r\nThe logic for determining what value to assign `isRetry` is at [`CredentialService.cs:93`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Credentials/CredentialService.cs#L93). From inspection, I'm deducing that the `_retryCache`'s purpose is to record which credential providers have authenticated with which URLs. The `_retryCache` for a given credential provider and URL will be set to true if the NCPVS has attempted to authenticate with this URL before, irrespective of the [reason](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Credentials/CredentialService.cs#L77) (e.g. Unauthorized, Proxy, Forbidden).\r\n\r\nI propose that the `isRetry` variable should only be set to true if the [`type`](https://gist.github.deshaw.com/leong/bfc381e551cbbadfc029071de05a92bc#file-credentialservice-cs-L77) argument to the `GetCredentialsAsync` method is `type == CredentialRequestType.Forbidden`. Indeed, in [NuGet's source code](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Configuration/Credential/CredentialRequestType.cs#L18-L21) for `CredentialRequestType.Forbidden`, it states that \"A different set of credentials could solve this failure\". Indeed, this is consistent with the documentation quoted in the first two paragraphs of this bug report. Thus, it makes sense only to set `isRetry` to `true` if the following conditions are met:\r\n\r\n```csharp\r\ndiff --git a/src/NuGet.Core/NuGet.Credentials/CredentialService.cs b/src/NuGet.Core/NuGet.Credentials/CredentialService.cs\r\nindex 2524dd0a1..c6fe34461 100644\r\n--- a/src/NuGet.Core/NuGet.Credentials/CredentialService.cs\r\n+++ b/src/NuGet.Core/NuGet.Credentials/CredentialService.cs\r\n@@ -90,7 +90,7 @@ public CredentialService(AsyncLazy<IEnumerable<ICredentialProvider>> providers,\r\n                 cancellationToken.ThrowIfCancellationRequested();\r\n \r\n                 var retryKey = RetryCacheKey(uri, type, provider);\r\n-                var isRetry = _retryCache.ContainsKey(retryKey);\r\n+                var isRetry = (type == CredentialRequestType.Forbidden) && _retryCache.ContainsKey(retryKey);\r\n \r\n                 try\r\n                 {\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"34604030915","Type":"PullRequestEvent","CreatedAt":"2024-01-05T15:51:24","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13133","RelatedDescription":"Opened pull request \"Add errors to JSON output\" (#13133) at NuGet/Home","RelatedBody":"Add errors value to the JSON output. This value will be used to store and report errors."},{"Id":"34599689829","Type":"IssuesEvent","CreatedAt":"2024-01-05T13:00:34","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13066","RelatedDescription":"Closed issue \"Setting NUGET_HTTP_CACHE_PATH is not working\" (#13066) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK:  Version:           8.0.100  Commit:            57efcf1350  Workload version:  8.0.100-manifests.71b9f198  Runtime Environment:  OS Name:     Mac OS X  OS Version:  14.1  OS Platform: Darwin  RID:         osx-arm64  Base Path:   /usr/local/share/dotnet/sdk/8.0.100/  .NET workloads installed:  Workload version: 8.0.100-manifests.71b9f198 There are no installed workloads to display.  Host:   Version:      8.0.0   Architecture: arm64   Commit:       5535e31a71  .NET SDKs installed:   6.0.415 [/usr/local/share/dotnet/sdk]   7.0.402 [/usr/local/share/dotnet/sdk]   8.0.100 [/usr/local/share/dotnet/sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]   Microsoft.NETCore.App\r\n\r\n### Worked before?\r\n\r\n?\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nI keep getting the error that the path to the .local/share/Nuget/http-cache etc.. is denied when I want to restore a project. Deleting the folder and setting the read and write for the user account doesn't work. So, I wanted to change the folder location, however, that doesn't work either. \r\n\r\nI have put this as en environmental variable: export NUGET_HTTP_CACHE_PATH=User/user1/.nuget-http-cache\r\nBut stil when running `dotnet restore`, nuget looks at the cache folder in the .local/share/nuget/http-cache.\r\n\r\n### Verbose Logs\r\n\r\nTo make matters more confusing:\r\n\r\n`dotnet restore`\r\n  Determining projects to restore...\r\n/Users/user1/Development/user1/apps/GenPRES/src/Informedica.ZIndex.Lib/Informedica.ZIndex.Lib.fsproj : warning NU1900: Error occurred while getting package vulnerability data: Access to the path '/Users/user1/.local/share/NuGet/http-cache/670c1461c29885f9aa22c281d8b7da90845b38e4$ps:_api.nuget.org_v3_index.json/vuln_index.dat-new' is denied. [/Users/user1/Development/user1/apps/GenPRES/GenPres.sln]\r\n/Users/user1/Development/user1/apps/GenPRES/src/Informedica.GenSolver.Lib/Informedica.GenSolver.Lib.fsproj : warning NU1900: Error occurred while getting package vulnerability data: Access to the path '/Users/iser1/.local/share/NuGet/http-cache/670c1461c29885f9aa22c281d8b7da90845b38e4$ps:_api.nuget.org_v3_index.json/vuln_index.dat-new' is denied. [/Users/user1/Development/user1/apps/GenPRES/GenPres.sln]\r\n  All projects are up-to-date for restore.\r\n\r\nBut when `dotnet nuget locals all --list`\r\n\r\ndotnet nuget locals all --list\r\nhttp-cache: /Users/user1/.nuget-http-cache\r\nglobal-packages: /Users/user1/.nuget/packages/\r\ntemp: /var/folders/j5/xhmmjddj01vbgx6s11kdnwfc0000gn/T/NuGetScratch\r\nplugins-cache: /Users/user1/.local/share/NuGet/plugin-cache"},{"Id":"34595358594","Type":"IssuesEvent","CreatedAt":"2024-01-05T09:52:59","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13132","RelatedDescription":"Opened issue \"[Bug Bash] Clicking the “name” or “source” textbox in “Options->Package Sources” window still shows a cursor and the textbox was highlighted when there is no package source in the list\" (#13132) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.9.0.79\n\n### Worked before?\n\nIt is not a regression since it reproes on D16.11\\34301.259.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:  \r\n1.Create a C# Console App (.NET Core 8.0) project in VS and open the PM UI or PMC window.  \r\n2.Click the settings button (gear button) on PM UI or PMC window.  \r\n3.Click the “NuGet Package Manager->Package Sources” in the opened “Options” window. \r\n4.Delete all the package sources in the list and click the “name” or “source” textbox.\r\n\r\n#### Expected Results:  \r\nClicking the “name” or “source” textbox in “Options” window should not show the cursor and the textbox should not be highlighted since it had been disabled.\r\n\r\n#### Actual Results:\r\nClicking the “name” or “source” textbox in “Options” window still shows a cursor and the textbox was highlighted as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ce1f1ff2-03de-467c-a35d-aedaaef28455)\r\n#### Notes:\r\n1.Repro Rate: 100%.\r\n2.It is not a regression since it reproes on D16.11\\34301.259.\n\n### Verbose Logs\n\n_No response_"},{"Id":"34589559509","Type":"IssuesEvent","CreatedAt":"2024-01-05T04:20:02","Actor":"richlander","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13131","RelatedDescription":"Opened issue \"Disallow `dotnet restore` at OS root\" (#13131) at NuGet/Home","RelatedBody":"I have seen this issue multiple times.\r\n\r\nhttps://github.com/dotnet/dotnet-docker/issues/5085"},{"Id":"34588174058","Type":"IssuesEvent","CreatedAt":"2024-01-05T02:20:13","Actor":"pengweiqhca","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13130","RelatedDescription":"Closed issue \"Can't disable api.nuget.org.\" (#13130) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\ndotnet 8.0, MSBuild version 17.8.3+195e7f5a3 for .NET Framework\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nwhether I disable `nuget.org` from package sources or change `nuget.org` source to other address, when I build or restore project the tools(dotnet.exe or msbuild.exe) still access api.nuget.org.\n\n### Verbose Logs\n\n```shell\nBuild started 2024-01-05 10:15:56.\r\n     1>Project \"D:\\Source\\GitHub\\apollo.net\\Apollo.sln\" on node 1 (Restore target(s)).\r\n     1>ValidateSolutionConfiguration:\r\n         Building solution configuration \"Debug|Mixed Platforms\".\r\n       _GetAllRestoreProjectPathItems:\r\n         Determining projects to restore...\r\n       Restore:\r\n         X.509 certificate chain validation will use the default trust store selected by .NET for code signing.\r\n         X.509 certificate chain validation will use the default trust store selected by .NET for timestamping.\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigAdapter.Yaml\\Apollo.ConfigAdapter.Yaml.csp\r\n         roj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.OpenApi\\Apollo.OpenApi.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Configuration\\Apollo.Configuration.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.AspNetCoreHosting\\Apollo.AspNetCoreHosting.cspro\r\n         j...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNet.Demo\\Apollo.AspNet.Demo.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.OpenApi.Tests\\Apollo.OpenApi.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigAdapter.Yaml.Tests\\Apollo.ConfigAdapter.Y\r\n         aml.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Configuration.Tests\\Apollo.Configuration.Tests.\r\n         csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNetCore.Demo\\Apollo.AspNetCore.Demo.csproj..\r\n         .\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigurationManager.Tests\\Apollo.Configuration\r\n         Manager.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.Configuration.Demo\\Apollo.Configuration.Demo.cs\r\n         proj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ExtensionsHosting\\Apollo.ExtensionsHosting.cspro\r\n         j...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigurationManager\\Apollo.ConfigurationManager\r\n         .csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Tests\\Apollo.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo\\Apollo.csproj...\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Moq'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.NETFramework.ReferenceAssemblies'&semVerLevel\r\n         =2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='YamlDotNet'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.Extensions.Hosting'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.Extensions.DependencyInjection'&semVerLevel=2\r\n         .0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='PolySharp'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='ConfigureAwaitChecker.Analyzer'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.NET.Test.Sdk'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.SourceLink.GitHub'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='xunit'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Roslynator.Analyzers'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='xunit.runner.visualstudio'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Roslynator.Formatting.Analyzers'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='StyleCop.Analyzers.Unstable'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.Owin.Host.SystemWeb'&semVerLevel=2.0.0\r\n           CACHE https://api.nuget.org/v3-flatcontainer/moq/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/configureawaitchecker.analyzer/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.net.test.sdk/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/polysharp/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.netframework.referenceassemblies/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.sourcelink.github/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/xunit/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/yamldotnet/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.extensions.hosting/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.extensions.dependencyinjection/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/roslynator.analyzers/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/xunit.runner.visualstudio/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/roslynator.formatting.analyzers/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/stylecop.analyzers.unstable/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.owin.host.systemweb/index.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNe\r\n         t.Demo\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Config\r\n         Adapter.Yaml\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Confi\r\n         gurationManager.Tests\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.AspNet\r\n         CoreHosting\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo\\obj\\pr\r\n         oject.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.Confi\r\n         guration.Demo\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Config\r\n         uration\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNe\r\n         tCore.Demo\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.OpenAp\r\n         i\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Config\r\n         urationManager\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Extens\r\n         ionsHosting\\obj\\project.assets.json\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.OpenApi\\Apollo.OpenApi.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.AspNetCoreHosting\\Apollo.AspNetCoreHosting.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.Configuration.Demo\\Apollo.Configuration.Demo.csproj (in 261 m\r\n         s).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNetCore.Demo\\Apollo.AspNetCore.Demo.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigurationManager.Tests\\Apollo.ConfigurationManager.Tests.\r\n         csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Configuration\\Apollo.Configuration.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ExtensionsHosting\\Apollo.ExtensionsHosting.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigurationManager\\Apollo.ConfigurationManager.csproj (in 26\r\n         0 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigAdapter.Yaml\\Apollo.ConfigAdapter.Yaml.csproj (in 261 ms\r\n         ).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo\\Apollo.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNet.Demo\\Apollo.AspNet.Demo.csproj (in 261 ms).\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Confi\r\n         guration.Tests\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Confi\r\n         gAdapter.Yaml.Tests\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Tests\r\n         \\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.OpenA\r\n         pi.Tests\\obj\\project.assets.json\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Tests\\Apollo.Tests.csproj (in 328 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Configuration.Tests\\Apollo.Configuration.Tests.csproj (in 328\r\n          ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.OpenApi.Tests\\Apollo.OpenApi.Tests.csproj (in 329 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigAdapter.Yaml.Tests\\Apollo.ConfigAdapter.Yaml.Tests.cspr\r\n         oj (in 329 ms).\r\n\r\n         NuGet Config files used:\r\n             D:\\Users\\PengWei\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n         Feeds used:\r\n             https://localhost/nuget\r\n             https://nuget.cdn.azure.cn/v3/index.json\r\n             C:\\Program Files\\dotnet\\library-packs\r\n     1>Done Building Project \"D:\\Source\\GitHub\\apollo.net\\Apollo.sln\" (Restore target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.95\n```\n"},{"Id":"34588149065","Type":"IssuesEvent","CreatedAt":"2024-01-05T02:18:10","Actor":"pengweiqhca","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13130","RelatedDescription":"Opened issue \"Can't disable api.nuget.org.\" (#13130) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\ndotnet 8.0, MSBuild version 17.8.3+195e7f5a3 for .NET Framework\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nwhether I disable `nuget.org` from package sources or change `nuget.org` source to other address, when I build or restore project the tools(dotnet.exe or msbuild.exe) still access api.nuget.org.\n\n### Verbose Logs\n\n```shell\nBuild started 2024-01-05 10:15:56.\r\n     1>Project \"D:\\Source\\GitHub\\apollo.net\\Apollo.sln\" on node 1 (Restore target(s)).\r\n     1>ValidateSolutionConfiguration:\r\n         Building solution configuration \"Debug|Mixed Platforms\".\r\n       _GetAllRestoreProjectPathItems:\r\n         Determining projects to restore...\r\n       Restore:\r\n         X.509 certificate chain validation will use the default trust store selected by .NET for code signing.\r\n         X.509 certificate chain validation will use the default trust store selected by .NET for timestamping.\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigAdapter.Yaml\\Apollo.ConfigAdapter.Yaml.csp\r\n         roj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.OpenApi\\Apollo.OpenApi.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Configuration\\Apollo.Configuration.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.AspNetCoreHosting\\Apollo.AspNetCoreHosting.cspro\r\n         j...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNet.Demo\\Apollo.AspNet.Demo.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.OpenApi.Tests\\Apollo.OpenApi.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigAdapter.Yaml.Tests\\Apollo.ConfigAdapter.Y\r\n         aml.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Configuration.Tests\\Apollo.Configuration.Tests.\r\n         csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNetCore.Demo\\Apollo.AspNetCore.Demo.csproj..\r\n         .\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigurationManager.Tests\\Apollo.Configuration\r\n         Manager.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.Configuration.Demo\\Apollo.Configuration.Demo.cs\r\n         proj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ExtensionsHosting\\Apollo.ExtensionsHosting.cspro\r\n         j...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigurationManager\\Apollo.ConfigurationManager\r\n         .csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Tests\\Apollo.Tests.csproj...\r\n         Restoring packages for D:\\Source\\GitHub\\apollo.net\\src\\Apollo\\Apollo.csproj...\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Moq'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.NETFramework.ReferenceAssemblies'&semVerLevel\r\n         =2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='YamlDotNet'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.Extensions.Hosting'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.Extensions.DependencyInjection'&semVerLevel=2\r\n         .0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='PolySharp'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='ConfigureAwaitChecker.Analyzer'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.NET.Test.Sdk'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.SourceLink.GitHub'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='xunit'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Roslynator.Analyzers'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='xunit.runner.visualstudio'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Roslynator.Formatting.Analyzers'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='StyleCop.Analyzers.Unstable'&semVerLevel=2.0.0\r\n           CACHE https://localhost/nuget/FindPackagesById()?id='Microsoft.Owin.Host.SystemWeb'&semVerLevel=2.0.0\r\n           CACHE https://api.nuget.org/v3-flatcontainer/moq/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/configureawaitchecker.analyzer/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.net.test.sdk/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/polysharp/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.netframework.referenceassemblies/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.sourcelink.github/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/xunit/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/yamldotnet/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.extensions.hosting/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.extensions.dependencyinjection/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/roslynator.analyzers/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/xunit.runner.visualstudio/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/roslynator.formatting.analyzers/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/stylecop.analyzers.unstable/index.json\r\n           CACHE https://api.nuget.org/v3-flatcontainer/microsoft.owin.host.systemweb/index.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNe\r\n         t.Demo\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Config\r\n         Adapter.Yaml\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Confi\r\n         gurationManager.Tests\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.AspNet\r\n         CoreHosting\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo\\obj\\pr\r\n         oject.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.Confi\r\n         guration.Demo\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Config\r\n         uration\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNe\r\n         tCore.Demo\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.OpenAp\r\n         i\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Config\r\n         urationManager\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Extens\r\n         ionsHosting\\obj\\project.assets.json\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.OpenApi\\Apollo.OpenApi.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.AspNetCoreHosting\\Apollo.AspNetCoreHosting.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.Configuration.Demo\\Apollo.Configuration.Demo.csproj (in 261 m\r\n         s).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNetCore.Demo\\Apollo.AspNetCore.Demo.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigurationManager.Tests\\Apollo.ConfigurationManager.Tests.\r\n         csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.Configuration\\Apollo.Configuration.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ExtensionsHosting\\Apollo.ExtensionsHosting.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigurationManager\\Apollo.ConfigurationManager.csproj (in 26\r\n         0 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo.ConfigAdapter.Yaml\\Apollo.ConfigAdapter.Yaml.csproj (in 261 ms\r\n         ).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\src\\Apollo\\Apollo.csproj (in 261 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\demo\\Apollo.AspNet.Demo\\Apollo.AspNet.Demo.csproj (in 261 ms).\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Confi\r\n         guration.Tests\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Confi\r\n         gAdapter.Yaml.Tests\\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Tests\r\n         \\obj\\project.assets.json\r\n         Assets file has not changed. Skipping assets file writing. Path: D:\\Source\\GitHub\\apollo.net\\test\\Apollo.OpenA\r\n         pi.Tests\\obj\\project.assets.json\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Tests\\Apollo.Tests.csproj (in 328 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.Configuration.Tests\\Apollo.Configuration.Tests.csproj (in 328\r\n          ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.OpenApi.Tests\\Apollo.OpenApi.Tests.csproj (in 329 ms).\r\n         Restored D:\\Source\\GitHub\\apollo.net\\test\\Apollo.ConfigAdapter.Yaml.Tests\\Apollo.ConfigAdapter.Yaml.Tests.cspr\r\n         oj (in 329 ms).\r\n\r\n         NuGet Config files used:\r\n             D:\\Users\\PengWei\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n         Feeds used:\r\n             https://localhost/nuget\r\n             https://nuget.cdn.azure.cn/v3/index.json\r\n             C:\\Program Files\\dotnet\\library-packs\r\n     1>Done Building Project \"D:\\Source\\GitHub\\apollo.net\\Apollo.sln\" (Restore target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.95\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-07T03:30:19.5415615Z","RunDurationInMilliseconds":1177}