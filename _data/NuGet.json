{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21794005549","Type":"IssuesEvent","CreatedAt":"2022-05-15T10:53:49","Actor":"am11","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9118","RelatedDescription":"Closed issue \"Tabs navigation permalinks\" (#9118) at NuGet/NuGetGallery","RelatedBody":"Steps:\r\n* Open https://www.nuget.org/packages/Microsoft.NET.Test.Sdk\r\n* Click `Dependencies`\r\n\r\nExpected: the URL in browser address bar is updated with permalink to Dependencies tab, ideally: https://www.nuget.org/packages/Microsoft.NET.Test.Sdk/Dependencies /Framewroks /Versions etc. should be hooked to page load handler.\r\n\r\nActual: the URL is not updated, tab navigation permalinks are not supported on page loads. Sharing nuget.org URL in discussions, when the intended content is not visible to the audience, entails further explanation.\r\n\r\nMoreover, the \"last tab\" info is currently cached locally, so the user who is sharing the link will still land on `Dependencies` after the refresh or open the link in new tab, unless it is opened in private browsing mode or a different browser. This causes more confusion when sharing nuget.org links in discussions.\r\n\r\nnote: there is a (less nicer) link https://www.nuget.org/packages/Microsoft.NET.Test.Sdk#dependencies-tab which shows up when we hover over the tab. In theory it should take us to Dependencies tab on page load, but it does not work."},{"Id":"21787727901","Type":"IssuesEvent","CreatedAt":"2022-05-14T12:08:13","Actor":"am11","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9118","RelatedDescription":"Opened issue \"Tabs navigation permalinks\" (#9118) at NuGet/NuGetGallery","RelatedBody":"Steps:\r\n* Open https://www.nuget.org/packages/Microsoft.NET.Test.Sdk\r\n* Click `Dependencies`\r\n\r\nExpected: the URL in browser address bar is updated with permalink to Dependencies tab, ideally: https://www.nuget.org/packages/Microsoft.NET.Test.Sdk/Dependencies /Framewroks /Versions etc. should be hooked to page load handler.\r\n\r\nActual: the URL is not updated, tab navigation permalinks are not supported on page loads. Sharing nuget.org URL in discussion on something not visible by default entails further explanation.\r\n\r\nMoreover, the \"last tab\" info is currently cached locally, so the user who is sharing the link will still land on `Dependencies` after the refresh or open the link in new tab, unless it is opened in private browsing mode or a different browser. This causes more confusion when sharing nuget.org links in discussions.\r\n\r\nnote: there is a (less nicer) link https://www.nuget.org/packages/Microsoft.NET.Test.Sdk#dependencies-tab which shows up when we hover over the tab. In theory it should take us to Dependencies tab on page load, but it does not work."},{"Id":"21779440632","Type":"IssuesEvent","CreatedAt":"2022-05-13T17:04:48","Actor":"LoxleyColourDev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9117","RelatedDescription":"Opened issue \"[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\" (#9117) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIn Visual Studio 2022\r\n\r\nManage NuGet packages for solution.\r\n\r\nBrowse gives the following error:\r\n\r\n[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\nAn error occurred while sending the request.\r\n  The underlying connection was closed: An unexpected error occurred on a send.\r\n  Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n  An existing connection was forcibly closed by the remote host\r\n\n\n### Repro Steps\n\nSee above.\r\nI also wrote a console app:\r\nvar response = await client.GetAsync(\"https://api.nuget.org/v3/index.json\");\r\nSame error.\n\n### Expected Behavior\n\nThis should return without errror.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/7057224/168332965-56b1e7a1-4250-4bc2-8c8b-dafc9081b71c.png)\r\n\n\n### Additional Context and logs\n\nMicrosoft Visual Studio Professional 2022\r\nVersion 17.1.6\r\nVisualStudio.17.Release/17.1.6+32421.90\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nNuGet Package Manager   6.1.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nWindows 10\r\nLocation: Edinburgh, Scotland\r\nNo firewall or proxy.\r\nHome broadband."},{"Id":"21760826898","Type":"IssuesEvent","CreatedAt":"2022-05-12T18:32:27","Actor":"Nessitro","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9116","RelatedDescription":"Opened issue \"[Bug]: Unable to load the service index for source https://api.nuget.org/v3/index.json\" (#9116) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21726406169","Type":"IssuesEvent","CreatedAt":"2022-05-11T08:05:06","Actor":"mattkosmach","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9115","RelatedDescription":"Opened issue \"Multiple certificates in your server nodes, one untrusted?\" (#9115) at NuGet/NuGetGallery","RelatedBody":"Hello,\r\n\r\nFirst of all, love nuget. \r\nSecond, \r\n\r\nI'm having trouble accessing nuget via Visual Studio (and also via Chrome). \r\nSometimes it works, sometimes it doesn't.\r\n\r\nIs it possible you have two (multiple) server nodes, where one is using server certificate which is created by untrusted signer?\r\nWhenever I get response from server, where certificate path is \"*.nuget.org -> Microsoft Azure TLS Issuing CA 05 -> DigiCert Global Root G2\", everything is working just fine, but if I get response from other server, I get \"Untrusted issuer error\".\r\n\r\nSeems like you've replaced certificates on 27.4.2022, maybe you forgot to do it on one of the nodes?\r\n\r\nOr maybe there is problem with my organization's network or local machine ...\r\n\r\nBest regards,\r\nMatt\r\n"},{"Id":"21718747464","Type":"IssuesEvent","CreatedAt":"2022-05-10T20:50:31","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9114","RelatedDescription":"Opened issue \"[A11y][FastPass]Ensures ARIA attributes are allowed for an element's role\" (#9114) at NuGet/NuGetGallery","RelatedBody":"URL: https://www.nuget.org/users/account/SignUp\r\n\r\nSnippet\r\n```\r\n<label class=\"required\" for=\"Register_Username\" id=\"username-label\" aria-required=\"true\">Username</label>\r\n```\r\n\r\nFix\r\nARIA attribute is not allowed: aria-required=\"true\""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21783766187","Type":"IssuesEvent","CreatedAt":"2022-05-13T22:33:55","Actor":"ericstj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11818","RelatedDescription":"Opened issue \"[Bug]: When using the CentralPackageTransitivePinningEnabled feature please avoid redundant references\" (#11818) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.100-preview.4.22227.3\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Grab the project from this gist: https://gist.github.com/ericstj/badca81e76de6875b1bad0958e70b0dc\r\n2. `dotnet pack` with a 7.0 preview4 SDK.\r\n3. Examine the nuspec.\r\n\r\n\r\n**Expect:** \r\nNo dependency listed for `System.Text.Encodings.Web, since the version specified centrally is _equivalent_ to the transitive dependency.\r\n```xml\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"System.Text.Json\" version=\"6.0.0\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n```\r\n\r\n**Actual:**\r\nA redundant dependency on System.Text.Encodings.Web is listed.\r\n```xml\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"System.Text.Json\" version=\"6.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Text.Encodings.Web\" version=\"6.0.0\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n```\r\n\r\nThe dependency is largely just a cosmetic nuisance, but I expected it to go away when the dependency didn't need to be lifted.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21782241381","Type":"IssuesEvent","CreatedAt":"2022-05-13T20:19:22","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11817","RelatedDescription":"Closed issue \"Redundant calls to get `VsHierarchy` in NuGet VS code\" (#11817) at NuGet/Home","RelatedBody":"This is a tracking issue for PR: https://github.com/NuGet/NuGet.Client/pull/4439/files\r\n\r\nThere are some VS call that fetches `IVsHierarchy`-based objects, which can be redundand in NuGet client code.\r\n\r\nMore details on PR description."},{"Id":"21782179313","Type":"IssuesEvent","CreatedAt":"2022-05-13T20:17:20","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11817","RelatedDescription":"Opened issue \"Redundant calls to get `VsHierarchy` in NuGet VS code\" (#11817) at NuGet/Home","RelatedBody":"This is a tracking issue for PR: https://github.com/NuGet/NuGet.Client/pull/4439/files\r\n\r\nThere are some VS call that fetches `IVsHierarchy`-based objects, which can be redundand in NuGet client code.\r\n\r\nMore details on PR description."},{"Id":"21782061507","Type":"IssuesEvent","CreatedAt":"2022-05-13T20:10:45","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11816","RelatedDescription":"Closed issue \"Improve VS and NuGet performance by making some methods non-asynchronous\" (#11816) at NuGet/Home","RelatedBody":"This is a tracking issue for this PR: https://github.com/nuget/nuget.client/pull/4440\r\n\r\nThe main goal is to make some NuGet Visual Studio methods synchronous to improve Visual Studio performance.\r\n\r\nMore details in PR description.\r\n"},{"Id":"21781958630","Type":"IssuesEvent","CreatedAt":"2022-05-13T20:02:43","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11816","RelatedDescription":"Opened issue \"Improve performance by making method non-asynchronous\" (#11816) at NuGet/Home","RelatedBody":"This is a tracking issue for this PR: https://github.com/nuget/nuget.client/pull/4440\r\n\r\nThe main goal is to make some NuGet Visual Studio methods synchronous to improve Visual Studio performance.\r\n\r\nMore details in PR description.\r\n"},{"Id":"21779896089","Type":"IssuesEvent","CreatedAt":"2022-05-13T17:36:45","Actor":"PhilipAtz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11815","RelatedDescription":"Opened issue \"The NuGet CLI stops listing packages if it fails to parse one of them\" (#11815) at NuGet/Home","RelatedBody":"The NuGet CLI will throw an exception and stop listing packages if one of the packages in the repo fails to parse (i.e. if it throws while parsing the version number from the filename). The expected behaviour would be to perhaps complain about the offending package but continue with listing the rest of the packages in the repo. We shouldn't be trashing an entire repo just because an offending package got in! Also, if NuGet does complain, it should display a proper error message (including the name of the offending file) rather than dumping a cryptic exception.\r\n\r\nHere is a sample stack trace from such an occurrence:\r\n```\r\n'$VERSION$' is not a valid version string.\r\nParameter name: value\r\nSystem.ArgumentException: '$VERSION$' is not a valid version string.\r\nParameter name: value\r\n   at NuGet.Versioning.NuGetVersion.Parse(String value)\r\n   at NuGet.Protocol.MetadataReferenceCache.GetVersion(String s)\r\n   at NuGet.Protocol.V2FeedParser.ParsePackage(String id, XElement element, MetadataReferenceCache metadataCache)\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n   at NuGet.Protocol.V2FeedParser.<QueryV2FeedAsync>d__50.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.V2FeedParser.<GetSearchPageAsync>d__42.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at EnumeratorAsync.<MoveNextAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.AggregateEnumeratorAsync`1.<MoveNextAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Commands.ListCommandRunner.<PrintPackages>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.ListCommandRunner.<ExecuteCommand>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.ListCommand.<ExecuteCommandAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```"},{"Id":"21778017236","Type":"IssuesEvent","CreatedAt":"2022-05-13T15:35:40","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11795","RelatedDescription":"Closed issue \"[Bug]: Visual Studio restore sometimes sets originalTargetFrameworks incorrectly in project.assets.json\" (#11795) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nOther/NA\r\n\r\n### Product Version\r\n\r\nVS 2019 16.11.7, VS 2022 17.1.6\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nThe issue is seen in `project.assets.json` at `project/restore/originalTargetFrameworks`. The issue is present only for some values of `$(TargetFramework)`. I see the issue when `$(TargetFramework)` is `net6.0-windows`, but not when using, for example, `net6.0`. Examples below are when `$(TargetFramework)` is `net6.0-windows`:\r\n\r\nRelevant portion of `project.assets.json` after MSBuild command line restore:\r\n```json\r\n      \"originalTargetFrameworks\": [\r\n        \"net6.0-windows\"\r\n      ],\r\n      \"frameworks\": {\r\n        \"net6.0-windows7.0\": {\r\n          \"targetAlias\": \"net6.0-windows\",\r\n          \"projectReferences\": {}\r\n        }\r\n      },\r\n```\r\n\r\nRelevant portion of `project.assets.json` after Visual Studio restore:\r\n```json\r\n      \"originalTargetFrameworks\": [\r\n        \"net6.0-windows7.0\"\r\n      ],\r\n      \"frameworks\": {\r\n        \"net6.0-windows7.0\": {\r\n          \"targetAlias\": \"net6.0-windows\",\r\n          \"projectReferences\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe documentation for `NuGet.ProjectModel.ProjectRestoreMetadata.OriginalTargetFrameworks` states:\r\n```\r\nOriginal target frameworks strings. These are used to match msbuild conditionals to $(TargetFramework)\r\n```\r\nTherefore I would suggest that MSBuild command line is behaving correctly, and Visual Studio is behaving incorrectly. This difference in behaviour has broken one of our build customizations. It will also create churn when mixing VS and command line builds, causing unnecessary rebuilds.\r\n\r\nRepro project/solution: [ClassLibrary1.zip](https://github.com/NuGet/Home/files/8639413/ClassLibrary1.zip)\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"21761031323","Type":"IssuesEvent","CreatedAt":"2022-05-12T18:45:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11814","RelatedDescription":"Closed issue \"[Bug]: NuGet should show in the Task Status Center instead of the status bar\" (#11814) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVisual Studio 2022 Version 17.3.0 Preview 2.0 [32509.446.main]\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nOpen a solution in Visual Studio.\r\n\r\nExpected result:\r\n\r\nNuGet restore progress shows in the Task Status Center.\r\n\r\nActual result:\r\n\r\nNuGet restore progress does not show.\r\nNuGet logs verbose messages to the status bar, which is not intended for showing the progress of background operations.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21761014500","Type":"IssuesEvent","CreatedAt":"2022-05-12T18:44:03","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11800","RelatedDescription":"Closed issue \"[Feature]: Allow for viewing readme when package not hosted on nuget.org\" (#11800) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nI have a nuget package hosted in a private repository (Aerion Devops Artifacts). It would be good to be able to view the readme file in Visual Studio that is embedded in my nuget package.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":249,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-05-16T03:30:24.2364685Z","RunDurationInMilliseconds":1452}