{"Data":{"Blog":{"FeedItems":[{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15757406599","Type":"IssuesEvent","CreatedAt":"2021-03-31T05:14:10","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8474","RelatedDescription":"Opened issue \"Fetch withdrawn advisories from GitHub and include them in ingestion flows\" (#8474) at NuGet/NuGetGallery","RelatedBody":"This should be as straightforward as adding the field here: https://github.com/NuGet/NuGetGallery/blob/main/src/GitHubVulnerabilities2Db/Collector/AdvisoryQueryBuilder.cs\r\n\r\nand ensuring it's propagated to the model here: https://github.com/NuGet/NuGetGallery/blob/main/src/GitHubVulnerabilities2Db/GraphQL/SecurityAdvisory.cs#L17\r\n\r\nWe have code to process them here: https://github.com/NuGet/NuGetGallery/blob/main/src/NuGetGallery.Services/PackageManagement/PackageVulnerabilitiesManagementService.cs#L155-L162\r\n\r\nThere are already tests here, but behavior should be verified manually: https://github.com/NuGet/NuGetGallery/blob/main/tests/NuGetGallery.Facts/Services/PackageVulnerabilitiesManagementServiceFacts.cs#L82-L167"},{"Id":"15757329025","Type":"IssuesEvent","CreatedAt":"2021-03-31T05:06:20","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8465","RelatedDescription":"Closed issue \"[Bug Bash] PM UI doesn’t sort correctly when searching a package whose name have the string “wcf” in WCF Service Application project\" (#8465) at NuGet/NuGetGallery","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.10.0.7170\r\nVS Version: Main\\31118.282\r\nOS: Windows-10-Enterprise-20h1\r\n## Repro steps and/or sample project\r\n1. Launch VS and click “Create a new project” button in the G2C dialog.\r\n2. Create a C# WCF Service Application (.NET Framework 4.8) template.\r\n3. Open the PM UI of the project and search “wcf” in the filter of “Browse” tab.\r\n## Expected\r\nPM UI should put the packages whose name have the string searched at the top of the list.\r\n## Actual\r\nPM UI didn’t put the packages whose name have the string searched at the top of the list as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/111753734-2c240580-88d2-11eb-91cc-65fd71c22dc4.png)\r\n## Note:\r\nIt seems not a regression issue since it repro on 16.9 GA (D16.9\\31025.194). \r\n \r\n"},{"Id":"15753592187","Type":"PullRequestEvent","CreatedAt":"2021-03-30T22:35:09","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8473","RelatedDescription":"Opened pull request \"reject empty readme file & fix error message for invalid extension\" (#8473) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nprevious PR (https://github.com/NuGet/NuGetGallery/pull/8464) was merged to main accidently by me \r\nI reverted. \r\n\r\n\r\n\r\nSame PR https://github.com/NuGet/NuGetGallery/pull/8464\r\n\r\n"},{"Id":"15753450064","Type":"PullRequestEvent","CreatedAt":"2021-03-30T22:22:08","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8472","RelatedDescription":"Opened pull request \"[Statistics]Adding Support for other reports from alternate container\" (#8472) at NuGet/NuGetGallery","RelatedBody":"Adds support for sourcing other reports from the alternate stats container.\r\nCurrently, feature flagging is all-or-nothing."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15755575827","Type":"IssuesEvent","CreatedAt":"2021-03-31T02:01:24","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10702","RelatedDescription":"Closed issue \"[Test Failure] Warning “Feature 'Dependent type finder’ is currently unavailable due to an internal error” after reloading C# WPF Application (.Net Framework) solution\" (#10702) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nVS Version: Main\\31129.12\r\nNuGet Version: Dev\\5.10.0.7187\r\nOS Version: Windows-10-Enterprise-20H1.\r\n\r\n## Installations\r\n1. Install VS Main\\31129.12 from https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4600429&view=ms.vss-build-web.run-extensions-tab\r\n2. Install NuGet Client Dev\\5.10.0.7187 from: \\\\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\dev\\5.10.0.7187\\artifacts\\VS15\r\n\r\n## Repro steps and/or sample project\r\n1. Create a new C# WPF Application (.net Framework) project.\r\n2. Close the solution.\r\n3. Create a NuGet.Config file having below parsing errors next to the .sln file. \r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"NuGet.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"NuGetVolatile\" value=\"https://dotnet.myget.org/F/nuget-volatile/api/v3/index.json\" />\r\n    <add key=\"dotnet-core\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\r\n    <add key=\"dotnet-buildtools\" value=\"https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json\" />\r\n    <add key=\"dotnet-roslyn\" value=\"https://dotnet.myget.org/F/roslyn/api/v3/index.json\" />\r\n    <add key=\"cps\" value=\"https://vside.myget.org/F/devcore/api/v3/index.json\" />\r\n    <add key=\"dotnet-msbuild\" blalblasda=\"https://dotnet.myget.org/F/msbuild/api/v3/index.json\" />\r\n  </packageSources>\r\n  <disabledPackageSources>\r\n    <clear />\r\n  </disabledPackageSources>\r\n</configuration>\r\n```\r\n4. Reload the solution.\r\n## Expected\r\nNo warning occurs after reloading the solution.\r\n\r\n## Actual\r\nWarning “Feature 'Dependent type finder’ is currently unavailable due to an internal error” after reloading the solution as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/112960272-d4f61e80-9176-11eb-925a-c1b281a9033e.png)\r\n\r\n## Show Stack Trace\r\nStreamJsonRpc.RemoteInvocationException: The examined position cannot be less than the previously examined position.\r\n   at StreamJsonRpc.JsonRpc.<InvokeCoreAsync>d__139`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Remote.BrokeredServiceConnection`1.<TryInvokeAsync>d__17`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\nRPC server exception:\r\nSystem.InvalidOperationException: The examined position cannot be less than the previously examined position.\r\n      at System.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_InvalidExaminedPosition()\r\n      at System.IO.Pipelines.Pipe.AdvanceReader(BufferSegment consumedSegment, Int32 consumedIndex, BufferSegment examinedSegment, Int32 examinedIndex)\r\n      at System.IO.Pipelines.Pipe.AdvanceReader(SequencePosition& consumed, SequencePosition& examined)\r\n      at System.IO.Pipelines.Pipe.DefaultPipeReader.AdvanceTo(SequencePosition consumed)\r\n      at System.IO.Pipelines.PipeReaderStream.<ReadAsyncInternal>d__26.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at System.IO.Pipelines.PipeReaderStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n      at System.IO.Stream.ReadByte()\r\n      at Roslyn.Utilities.ObjectReader.TryGetReader(Stream stream, Boolean leaveOpen, CancellationToken cancellationToken)\r\n      at Microsoft.CodeAnalysis.FindSymbols.SymbolTreeInfo.<TryLoadOrCreateAsync>d__61`1.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at Microsoft.CodeAnalysis.FindSymbols.SymbolTreeInfo.<TryLoadOrCreateAsync>d__61`1.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.FindSymbols.SymbolTreeInfo.<GetInfoForMetadataReferenceSlowAsync>d__49.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.FindSymbols.SymbolTreeInfo.<GetInfoForMetadataReferenceAsync>d__48.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<AddMatchingMetadataTypesInMetadataReferenceAsync>d__17.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<AddDescendantMetadataTypesInProjectAsync>d__16.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<DescendInheritanceTreeInProjectAsync>d__7.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<DescendInheritanceTreeAsync>d__6.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<FindImplementingTypesInCurrentProcessAsync>d__27.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.<FindTypesInCurrentProcessAsync>d__30.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at Microsoft.CodeAnalysis.Remote.RemoteDependentTypeFinderService.<>c__DisplayClass2_0.<<FindTypesAsync>b__0>d.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      at System.Threading.Tasks.ValueTask`1.get_Result()\r\n      at Microsoft.CodeAnalysis.Remote.BrokeredServiceBase.<RunServiceImplAsync>d__12`1.MoveNext()\r\n   --- End of stack trace from previous location where exception was thrown ---\r\n      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n      at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n"},{"Id":"15754106350","Type":"IssuesEvent","CreatedAt":"2021-03-30T23:25:24","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10708","RelatedDescription":"Opened issue \"PackageArchieveReader doesn't override CopyNupkgAsync so package extraction fails\" (#10708) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\n\n## Details about Problem\n\nNuGet product used (Visual Studio | dotnet.exe):\n\nProduct version: \n\nWorked before? If so, with which NuGet version: N/A\n\n## Repro steps and/or sample project\n`PackageArchiveReader.cs` is derived from `PackageReaderBase.cs` but it's not overriding `CopyNupkgAsync` in base class.\nSo when I try to use [ExtractPackageAsync ](https://github.com/NuGet/NuGet.Client/blob/c6ca6ebcfe3fdad5815f19669c96431b53055b3b/src/NuGet.Core/NuGet.Packaging/PackageExtractor.cs#L244-L250) method it throws `System.NotImplementedException : The method or operation is not implemented.` exception on [line#314](https://github.com/NuGet/NuGet.Client/blob/c6ca6ebcfe3fdad5815f19669c96431b53055b3b/src/NuGet.Core/NuGet.Packaging/PackageExtractor.cs#L314). \n\n### Verbose Logs\n\n\n"},{"Id":"15753404029","Type":"IssuesEvent","CreatedAt":"2021-03-30T22:18:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10251","RelatedDescription":"Closed issue \"dotnet restore taking up to 12GB in docker container\" (#10251) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#14389**\r\n- Please respond to @adam8797.\r\n\r\n---\r\n\r\n_From @adam8797 on Friday, October 30, 2020 2:21:38 PM_\r\n\r\nHello all,\r\n\r\nI've been working to try to determine why my `dotnet restore` is taking so long in my build system (GitLab CI)\r\n\r\nThis project is using .net 5 rc2 currently.\r\n\r\nI'm restoring three projects, and on developer machines it only ever takes around 30 seconds or so. In the build system it takes about 10 minutes. \r\n\r\nThe exact restore command is `dotnet restore -v n --packages .nuget /clp:PerformanceSummary --disable-parallel`\r\n\r\nHere is the target performance summary of the latest build:\r\n\r\n```\r\nTarget Performance Summary:\r\n        0 ms  ValidateProjects                           1 calls\r\n        0 ms  _GetRestorePackagesPathOverride            1 calls\r\n        0 ms  ValidateToolsVersions                      1 calls\r\n        0 ms  CollectCentralPackageVersions              3 calls\r\n        0 ms  _GenerateRestoreGraphProjectEntry          3 calls\r\n        0 ms  _GetRestoreSettingsCurrentProject          3 calls\r\n        0 ms  CollectFrameworkReferences                 3 calls\r\n        0 ms  _GenerateRestoreProjectPathItemsCurrentProject   3 calls\r\n        0 ms  _GenerateRestoreDependencies               3 calls\r\n        0 ms  _GenerateProjectRestoreGraph               3 calls\r\n        0 ms  _GenerateProjectRestoreGraphCurrentProject   3 calls\r\n        0 ms  CollectPackageReferences                   3 calls\r\n        0 ms  CollectPackageDownloads                    3 calls\r\n        0 ms  _CheckForObsoleteDotNetCliToolReferences   3 calls\r\n        0 ms  _CheckForUnsupportedCppNETCoreVersion      3 calls\r\n        0 ms  _GetProjectJsonPath                        3 calls\r\n        0 ms  _CheckForUnsupportedNETCoreVersion         3 calls\r\n        1 ms  _GetRestoreSettingsPerFramework            3 calls\r\n        1 ms  _CheckForLanguageAndFeatureCombinationSupport   3 calls\r\n        2 ms  _GenerateRestoreSpecs                      3 calls\r\n        2 ms  _GenerateRestoreProjectPathItems           3 calls\r\n        2 ms  _GenerateRestoreProjectSpec                3 calls\r\n        3 ms  _GenerateDotnetCliToolReferenceSpecs       3 calls\r\n        5 ms  _GetRestoreTargetFrameworksOutput          3 calls\r\n        7 ms  _IsProjectRestoreSupported                 3 calls\r\n        9 ms  _LoadRestoreGraphEntryPoints               1 calls\r\n        9 ms  _GenerateProjectRestoreGraphPerFramework   3 calls\r\n       10 ms  ValidateSolutionConfiguration              1 calls\r\n       11 ms  CheckForImplicitPackageReferenceOverrides   3 calls\r\n       13 ms  UpdateAspNetToFrameworkReference           3 calls\r\n       15 ms  ApplyImplicitVersions                      3 calls\r\n       16 ms  _GetRestoreProjectStyle                    3 calls\r\n       26 ms  _GenerateRestoreProjectPathWalk            3 calls\r\n       31 ms  _GenerateRestoreProjectPathItemsPerFramework   3 calls\r\n       32 ms  _GetRestoreSettingsOverrides               3 calls\r\n       45 ms  _GetAllRestoreProjectPathItems             1 calls\r\n       65 ms  _GetRestoreSettings                        3 calls\r\n      162 ms  _GenerateRestoreGraph                      1 calls\r\n      256 ms  ProcessFrameworkReferences                 3 calls\r\n      720 ms  _FilterRestoreGraphProjectInputItems       1 calls\r\n    556229 ms  Restore                                    1 calls\r\nTask Performance Summary:\r\n        1 ms  NuGetMessageTask                           1 calls\r\n        1 ms  WarnForInvalidProjectsTask                 1 calls\r\n        1 ms  GetRestorePackageDownloadsTask             3 calls\r\n        1 ms  GetRestoreFrameworkReferencesTask          3 calls\r\n        2 ms  GetRestoreProjectReferencesTask            3 calls\r\n        2 ms  GetRestoreDotnetCliToolsTask               3 calls\r\n        2 ms  GetRestorePackageReferencesTask            3 calls\r\n        2 ms  RemoveDuplicates                           9 calls\r\n        3 ms  Message                                    8 calls\r\n        4 ms  GetProjectTargetFrameworksTask             3 calls\r\n        5 ms  GetRestoreSolutionProjectsTask             1 calls\r\n        6 ms  ConvertToAbsolutePath                      6 calls\r\n        6 ms  CheckIfPackageReferenceShouldBeFrameworkReference   6 calls\r\n        7 ms  CheckForDuplicateFrameworkReferences       3 calls\r\n        8 ms  GetRestoreProjectStyleTask                 3 calls\r\n        8 ms  ApplyImplicitVersions                      3 calls\r\n        9 ms  CheckForImplicitPackageReferenceOverrides   3 calls\r\n       40 ms  ResolveAppHosts                            3 calls\r\n       64 ms  GetRestoreSettingsTask                     3 calls\r\n      207 ms  ProcessFrameworkReferences                 3 calls\r\n      950 ms  MSBuild                                   11 calls\r\n    556228 ms  RestoreTask                                1 calls\r\n```\r\n\r\nEven weirder, is if I manage to get into the build node and run `top` I see that dotnet is using 12GB of memory! Output from top:\r\n```\r\ntop - 14:20:54 up 9 days, 22:07,  0 users,  load average: 3.13, 3.58, 3.50\r\nTasks:  11 total,   1 running,  10 sleeping,   0 stopped,   0 zombie\r\n%Cpu(s):  5.1 us,  0.4 sy,  0.0 ni, 94.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\r\nMiB Mem : 58.5/128309.8 [|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||                                         ]\r\nMiB Swap:  0.0/0.0      [                                                                                                    ]\r\n\r\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                                                                                                                                                                                                                                   \r\n   33 root      20   0   11.9g   0.2g   0.1g S   2.7   0.2   0:18.10 dotnet\r\n   69 root      20   0    8.2g   0.1g   0.0g S   0.0   0.1   0:00.75 dotnet\r\n   55 root      20   0    8.2g   0.1g   0.0g S   0.0   0.1   0:00.74 dotnet\r\n   14 root      20   0    8.1g   0.1g   0.0g S   0.0   0.1   0:00.61 dotnet\r\n  124 root      20   0    0.0g   0.0g   0.0g S   0.0   0.0   0:00.00 bash\r\n  315 root      20   0    0.0g   0.0g   0.0g R   0.0   0.0   0:00.07 top\r\n    6 root      20   0    0.0g   0.0g   0.0g S   0.0   0.0   0:00.00 bash\r\n    1 root      20   0    0.0g   0.0g   0.0g S   0.0   0.0   0:00.02 bash\r\n   12 root      20   0    0.0g   0.0g   0.0g S   0.0   0.0   0:00.00 bash\r\n  117 root      20   0    0.0g   0.0g   0.0g S   0.0   0.0   0:00.00 sh\r\n  123 root      20   0    0.0g   0.0g   0.0g S   0.0   0.0   0:00.00 sh\r\n```\r\n\r\nThis seems like an insane amount of memory to be using? How can I reduce this? What more can I provide to help troubleshoot this?\r\n\r\n"},{"Id":"15753064636","Type":"IssuesEvent","CreatedAt":"2021-03-30T21:49:10","Actor":"dnaranjor","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10707","RelatedDescription":"Opened issue \"Visual Studio Manage Package for Solutions shows error while browsing packages from an internal JFrog NuGet Artifactory\" (#10707) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: Visual Studio\r\n\r\nProduct version: Community 2019\r\n\r\nWorked before?: No\r\n\r\n## Repro steps and/or sample project\r\n\r\nIn a fresh install of Visual Studio Community 2019, I need to setup as Repository an internal JFrog Artifactory server, Commercial license 7.7.8 rev 70708900.\r\n\r\nAfter opening a brand new Project in Visual Studio, I click on Tools > NuGet Package Manager > Manage Package for Solutions, and in the opened window, select the Gear icon to edit Repositories settings.\r\n\r\nIn that new window, I select Package Sources > \"+\" button to add a new source.\r\n\r\nEnter the information in required fields:\r\n\r\nName: Arfitactory\r\nSource: https://<my_artifactory_URL>/artifactory/api/nuget/<nuget_virtual_repo_name>/index.json\r\n\r\nAnd finally, click on \"Update\" button and close the settings window pushing on the \"Ok\" button.\r\n\r\nAfter this configuration, if I try to browse Artifactory Nuget content, I end up with the following error:\r\n\r\n[Artifactory] Unable to load the service index for source https://<my_artifactory_URL>/artifactory/api/nuget/<nuget_virtual_repo_name>/index.json. \r\n  An error occurred while sending the request.\r\n  The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel.\r\n  The remote certificate is invalid according to the validation procedure.\r\n\r\n"},{"Id":"15752961378","Type":"IssuesEvent","CreatedAt":"2021-03-30T21:40:39","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9749","RelatedDescription":"Closed issue \"Installed/Updates UI Filtering can be more conservative with Reloading\" (#9749) at NuGet/Home","RelatedBody":"In https://github.com/nuget/home/issues/8294, I've applied UI Filtering to the Installed/updates tab-switches only when those tabs are loaded once. This was a tiny-step forward, and this issue is to take another (final?) step in this filtering.\r\n\r\n1. Updates doesn't need to load independently of Installed. \r\n2. Switching away from Installed/Updates doesn't need to trash the cache. Keep it around and use it when switching back.\r\n\r\nRelated Issue that gets tangentially affected with this work https://github.com/nuget/home/issues/4176"},{"Id":"15751558610","Type":"IssuesEvent","CreatedAt":"2021-03-30T19:59:05","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10706","RelatedDescription":"Opened issue \"Test PackageUpdateResource_SourceAndSymbolNuGetOrgPushingAsync makes network connections\" (#10706) at NuGet/Home","RelatedBody":"The test `NuGet.Protocol.Tests.PackageUpdateResourceTests.PackageUpdateResource_SourceAndSymbolNuGetOrgPushingAsync` appears to make real network connections to nuget.org and nuget.smbsrc.net.\r\n\r\nI don't think our CI should block PRs being merged if an external resource has a service outage, or the CI agent is having flakey network access to the outside world.\r\n\r\n"},{"Id":"15747449802","Type":"IssuesEvent","CreatedAt":"2021-03-30T15:35:54","Actor":"beechgrovejoe","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10705","RelatedDescription":"Opened issue \"Cannot Add NuGet Package To Visual Studio WebSite Project\" (#10705) at NuGet/Home","RelatedBody":"In a Visual Studio WebSite project there is no project file.  However there is a setting in the solution named TargetFrameworkMoniker that can interfere with the installation of NuGet packages.\r\n\r\nTypically a WebSite project is configured to use a specific version of the .NET Framwork to compile and execute the code from within the web.config file.  However a different framework version can be called out in the solution file using the TargetFrameworkMoniker setting.  This doesn't affect the compilation or execution of the code in any way.\r\n\r\nIt's very possible for an old solution to have a value like TargetFrameworkMoniker = \".NETFramework,Version%3Dv4.0\" on a WebSite project while the actual project has been upgraded over time to be configured for version 4.6.1 in the web.config file.  The project will compile and execute just fine as a 4.6.1 project.\r\n\r\nBut when the user attempts to add a new NuGet package (for example Microsoft.AspNet.WebApi.WebHost version 5.2.7) an error occurs during installation even though that package supports version 4.6.1.  The installation fails claiming problems with the version of the code in the WebSite project.  However there is no mention in the error message that it's a setting in the solution file causing the problem leading to the developer spending lots of time scratching their head about what the incompatibility could be.\r\n\r\nEverything looks fine from within Visual Studio.  But the user needs to unload the solution and manually edit the solution file and change the value of the TargeFrameworkMoniker setting to allow the NuGet package to be correctly installed.\r\n"},{"Id":"15746420261","Type":"IssuesEvent","CreatedAt":"2021-03-30T14:39:53","Actor":"gallettoNL","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10704","RelatedDescription":"Opened issue \"nuget creates spurious space in path during build in VS 2019\" (#10704) at NuGet/Home","RelatedBody":"I need to upgrade NuGet.exe from 2.7.3 to address a SemVer versioning  issue with preview packages, so I downloaded and installed Nuget 5.8.1.\r\nThen I ran into issues with a path generated by Nuget.exe, containing a spurious space (see logging below).\r\n\r\nI could get around that by upgrading ALL projects but one (ASP.NET) to use package reference instead of packages.config, but apparently that's impossible for ASP.NET projects.\r\nWhat are we supposed to do now? I've seen various closed issues on the matter (https://github.com/NuGet/Home/issues/7657), but no solution as yet, as far as I can see....\r\n\r\nPlease advise.\r\n\r\nThanks!\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio 2019 Version 16.9.2\r\n\r\nProduct version: 5.8.1\r\n\r\nWorked before? If so, with which NuGet version: 2.7.3\r\n\r\n### Verbose Logs\r\n\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebApi.Core.5.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.Razor.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebApi.Client.5.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebApi.WebHost.5.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebPages.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\DevExpress.Web.Themes.19.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebPages.Data.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebHelpers.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebPages.WebData.3.2.7 niet vinden.\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"👏Contributor appreciation time👏\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t… https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":86,"FavoriteCount":37,"RawContent":null},{"Id":"1366458126141120525","CreatedAt":"2021-03-01T18:39:39+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nLate last year we launched a https://t.co/F9kiKfvqkS survey to ask customers about their… https://t.co/mgpdDNj3is","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1366422928519233536","CreatedAt":"2021-03-01T16:19:47+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nIf you have a moment, please take some time to leave us feedback! We really appreciate it ♥ https://t.co/we1sP6mT8q","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":3,"RawContent":null},{"Id":"1365020887758614529","CreatedAt":"2021-02-25T19:28:35+00:00","UserScreenname":"nuget","Text":"🔐 https://t.co/F9kiKfvqkS security update 🔐\n\nThe https://t.co/F9kiKfvqkS repository signing certification will be u… https://t.co/jur1vcuf0B","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2021-03-31T05:30:30.2053467Z","RunDurationInMilliseconds":1878}