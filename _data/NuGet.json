{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13272198930","Type":"PullRequestEvent","CreatedAt":"2020-08-21T18:31:42","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8168","RelatedDescription":"Merged pull request \"Move to Knockout 3.5.1 and fix admin JS errors\" (#8168) at NuGet/NuGetGallery","RelatedBody":"We have unused Knockout NuGet dependencies. We do not pull in Knockout in this way. They are just files checked in to source control.\r\n\r\nThe admin errors are because `error` is no longer the syntax for jQuery AJAX errors. It is `fail`. This was likely from the jQuery update we did a while back but went undetected.\r\n\r\nAddress https://github.com/NuGet/Engineering/issues/3311"},{"Id":"13271013576","Type":"IssuesEvent","CreatedAt":"2020-08-21T16:20:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6865","RelatedDescription":"Closed issue \"The V3 monitoring job should verify search results are consistent with V2\" (#6865) at NuGet/NuGetGallery","RelatedBody":"The V3 monitoring job could easily be expanded to also check the status of packages in search and verify that they are consistent with V2."},{"Id":"13271002937","Type":"IssuesEvent","CreatedAt":"2020-08-21T16:19:32","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5890","RelatedDescription":"Closed issue \"Autocomplete improvemenets\" (#5890) at NuGet/NuGetGallery","RelatedBody":"An epic to track different improvement needed to the autocomplete endpoint in search service."},{"Id":"13270999116","Type":"IssuesEvent","CreatedAt":"2020-08-21T16:19:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5762","RelatedDescription":"Closed issue \".NET 2.1 - Add flag or indicator for global tool searching / discoverability\" (#5762) at NuGet/NuGetGallery","RelatedBody":"In .NET Core 2.1, Global Tools is now a thing allowing for installing tools using the `-g` flag similar to to **npm**, however discoverability is already becoming an issue even in Preview. Other than the list @natemcmaster has here -> https://github.com/natemcmaster/dotnet-tools, hard to find a good list and I am sure that there are more.\r\n\r\nConsider adding a **tool** flag/option to the search. There is a metadata item to search on or index on `<packageType name=\"DotnetTool\" />`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n  <metadata>\r\n    <!-- This piece is required -->\r\n    <packageTypes>\r\n      <packageType name=\"DotnetTool\" />\r\n    </packageTypes>\r\n    <!-- ... -->\r\n  </metadata>\r\n</package>\r\n```\r\n\r\ncc:/ @natemcmaster @shanselman @KathleenDollard"},{"Id":"13270934075","Type":"IssuesEvent","CreatedAt":"2020-08-21T16:12:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3635","RelatedDescription":"Closed issue \"NuGet.Jobs nuspec files include branch name in the package ID\" (#3635) at NuGet/NuGetGallery","RelatedBody":"This is a very weird way to scope what builds should be deployed. As long as the package version includes the branch name and build number information, there will never be collision from one build to the next.\r\n\r\nThis also makes it hard for us to deploy a NuGet.Jobs build from a private branch to our dev environment because the package ID is not, say, `NuGet.SupportRequests.Notifications.master` (which is what our deployment pipeline expects).\r\n\r\nCompare to Gallery, Search Service, or Ng deployment -- the ID is just the component name (not component name plus branch name)."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13274901331","Type":"IssuesEvent","CreatedAt":"2020-08-22T02:36:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9927","RelatedDescription":"Closed issue \"MSBuild project evaluation fails when TargetFramework property includes semicolon\" (#9927) at NuGet/Home","RelatedBody":"The .NET SDK is now using `NuGetFramework` methods to parse the `TargetFramework` property, via MSBuild intrinsic functions that were added for this:\r\n\r\nhttps://github.com/dotnet/sdk/blob/5b50ac24ecd5af91736cf81360eab5813c9e93b9/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.TargetFrameworkInference.targets#L54-L55\r\n\r\nHowever, this is causing MSBuild evaluation to fail with an assertion when the `TargetFramework` property has a semicolon in it (for example `netcoreapp2.0;net461`).  What is supposed to happen is for the SDK to generate an error during the build:\r\n\r\n> error NETSDK1046: The TargetFramework value 'netcoreapp2.0;net461' is not valid. To multi-target, use the 'TargetFrameworks' property instead.\r\n\r\nHowever, instead evaluation fails with the following:\r\n\r\n> ---- DEBUG ASSERTION FAILED ----\r\n---- Assert Short Message ----\r\ninvalid folder name, this appears to contain multiple frameworks\r\n---- Assert Long Message ----\r\n>\r\n>   at NuGet.Frameworks.NuGetFramework.Parse(String folderName, IFrameworkNameProvider mappings)\r\n   at NuGet.Frameworks.NuGetFramework.Parse(String folderName)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at Microsoft.Build.Evaluation.NuGetFrameworkWrapper.Parse(String tfm) in C:\\git\\msbuild\\src\\Build\\Utilities\\NuGetFrameworkWrapper.cs:line 55\r\n   at Microsoft.Build.Evaluation.NuGetFrameworkWrapper.GetTargetFrameworkIdentifier(String tfm) in C:\\git\\msbuild\\src\\Build\\Utilities\\NuGetFrameworkWrapper.cs:line 60\r\n   at Microsoft.Build.Evaluation.IntrinsicFunctions.GetTargetFrameworkIdentifier(String tfm) in C:\\git\\msbuild\\src\\Build\\Evaluation\\IntrinsicFunctions.cs:line 486\r\n\r\nI think to fix this the parse methods should return \"Unsupported\" instead of asserting when there is a semicolon in the value passed in.\r\n\r\nI ran into this when testing private NuGet packages based on this PR: https://github.com/NuGet/NuGet.Client/pull/3578.  As our tests didn't fail previously, this may have been a regression in that PR.\r\n\r\n@nkolev92 "},{"Id":"13274566277","Type":"IssuesEvent","CreatedAt":"2020-08-22T00:45:59","Actor":"AmadeusW","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9930","RelatedDescription":"Opened issue \"CI build throws error NU5104 and succeeds regardless\" (#9930) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nOur CI build produces multiple instances of warning NU5104 (treated as error)\r\nHowever, the CI build succeeds.\r\n\r\nThis may lead engineer diagnosing a build failure on an incorrect path, wasting their time, because the error which caused the build failure is buried somewhere else in the log.\r\n\r\nThe expected behavior is either\r\n1. Make these warnings and allow the build to succeed\r\n2. Fail the build since it has errors\r\n\r\nThe incorrect behavior is to see this in the logs\r\n`15 Error(s) \\ Successfully built`\r\n\r\n## Versions\r\n\r\nI'm not sure which nuget version it's used. It's happening in CI within DevDiv\r\n```\r\nAgent name: 'vs2019mb-00000J'\r\nAgent machine name: 'vs2019mb-00000J'\r\nCurrent agent version: '2.171.1'\r\nAgent running as: 'dlab14'\r\n```\r\n\r\nThe error originates at `dotnet\\sdk\\3.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5)`\r\n\r\nNuGet product used:\r\nmsbuild using .NET SDK 3.0.101 in AzureDevOps CI build\r\n\r\nNuGet version:\r\nNuGet 5.0.2 x64\r\n\r\ndotnet.exe --version (if appropriate): n/a\r\n\r\nVS version (if appropriate): n/a\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): n/a\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.  Pick any passing build in this definition: https://devdiv.visualstudio.com/DevDiv/_build?definitionId=8282\r\nFor a recent example, take https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3999127&view=logs&j=2d2b3007-3c5c-5840-9bb0-2b1ea49925f3&t=08e986c2-058e-5f01-51da-ae4278e2d74e\r\n\r\n2. Go to the build log\r\n\r\n3. Observe\r\n```\r\nC:\\A\\1\\_tool\\dotnet\\sdk\\3.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error NU5104: A stable release of a package should not have a prerelease dependency. Either modify the version spec of dependency \"Microsoft.Internal.VisualStudio.Shell.Embeddable [16.6.29918.18-pre, )\" or update the version field in the nuspec. [C:\\A\\1\\13\\s\\src\\Editor\\VisualStudio\\Impl\\EditorImpl.csproj]\r\nC:\\A\\1\\_tool\\dotnet\\sdk\\3.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error NU5104: A stable release of a package should not have a prerelease dependency. Either modify the version spec of dependency \"Microsoft.VisualStudio.Threading [16.7.29-alpha, )\" or update the version field in the nuspec. [C:\\A\\1\\13\\s\\src\\Editor\\Text\\Test\\Util\\TextUnitTestHelper\\TextUnitTestHelper.csproj]\r\nC:\\A\\1\\_tool\\dotnet\\sdk\\3.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error NU5104: A stable release of a package should not have a prerelease dependency. Either modify the version spec of dependency \"Microsoft.VisualStudio.Threading [16.7.29-alpha, )\" or update the version field in the nuspec. [C:\\A\\1\\13\\s\\src\\Editor\\Text\\Test\\Util\\EditorTestApp\\EditorTestApp.csproj]\r\nC:\\A\\1\\_tool\\dotnet\\sdk\\3.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error NU5104: A stable release of a package should not have a prerelease dependency. Either modify the version spec of dependency \"Microsoft.VisualStudio.Threading [16.7.29-alpha, )\" or update the version field in the nuspec. [C:\\A\\1\\13\\s\\src\\Editor\\Text\\Test\\Util\\TextViewUnitTestHelper\\TextViewUnitTestHelper.csproj]\r\n    1505 Warning(s)\r\n    15 Error(s)\r\n\r\nTime Elapsed 01:10:07.28\r\nSuccessfully built\r\n```\r\nSpecifically, the issue is seeing these two messages:\r\n`15 Error(s) \\ Successfully built`\r\n\r\nPlease let us know whether this is an AzureDevOps configuration issue\r\nThanks!\r\n\r\n\r\n"},{"Id":"13273452024","Type":"IssuesEvent","CreatedAt":"2020-08-21T21:09:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9566","RelatedDescription":"Closed issue \"Analyze the frequency of OnBuild restore & potential improvements\" (#9566) at NuGet/Home","RelatedBody":"This is an investigative task to track one of the 3 scenarios in which restore happens. \r\n\r\nQuestions that need answered:\r\n* How frequent is this in the overall picture?\r\n* What is the status distribution?\r\n* Can it be made faster? \r\n* Can it happen less frequently?\r\n\r\nRelated to https://github.com/NuGet/Home/issues/9513. \r\n\r\nGiven that this will happen after https://github.com/NuGet/Home/issues/9513 is completed. It's relevant to think of this problem in the context of those no-op optimizations existing. "},{"Id":"13271881206","Type":"IssuesEvent","CreatedAt":"2020-08-21T17:55:58","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9249","RelatedDescription":"Closed issue \"Geting Error before and after Migrate from packages.config to PackageReference\" (#9249) at NuGet/Home","RelatedBody":" Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Manage Nuget Packages for solution / project\r\n\r\nNuGet version (x.x.x.xxx): Package Manager Console Host Version 5.0.2.5988. Used UI interface of Manage Nuger Manager\r\n\r\ndotnet.exe --version (if appropriate): .Net framework 4.7.2\r\n\r\nVS version (if appropriate): Microsoft Visual Studio Professional 2019\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 10\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFollowed below steps after upgrading application to .NET framework 4.7.2\r\n\r\nReference \r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/migrate-packages-config-to-package-reference\r\n\r\n1. Open a solution containing project using packages.config.\r\n2. In Solution Explorer, right-click on the References node or the packages.config file and select Migrate packages.config to PackageReference....\r\n3. The migrator analyzes the project's NuGet package references and attempts to categorize them into Top-level dependencies (NuGet packages that you installed directly) and Transitive dependencies (packages that were installed as dependencies of top-level packages).\r\n Note\r\nPackageReference supports transitive package restore and resolves dependencies dynamically, meaning that transitive dependencies need not be installed explicitly.\r\n4. (Optional) You may choose to treat a NuGet package classified as a transitive dependency as a top-level dependency by selecting the Top-Level option for the package. This option is automatically set for packages containing assets that do not flow transitively (those in the build, buildCrossTargeting, contentFiles, or analyzers folders) and those marked as a development dependency (developmentDependency = \"true\").\r\nReview any package compatibility issues.\r\n5. Select OK to begin the migration.\r\n\r\nError during run time:\r\n\r\nCould not load file or assembly 'System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040) Could not load file or assembly 'System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\n========\r\nEven getting same error after upgrading System.Buffers to available versions on nuget 4.0.0/ 4.3.0 / 4.4.0 / 4.5.0\r\n\r\n============\r\n\r\nBelow is my app.config file . also attached appconfig.zip file.\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <configSections>\r\n    </configSections>\r\n<startup><supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.7.2\" /></startup>\r\n  <runtime>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Numerics.Vectors\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.1.4.0\" newVersion=\"4.1.4.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.6.0\" newVersion=\"4.0.6.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.ValueTuple\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Threading.Tasks.Extensions\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.2.0.1\" newVersion=\"4.2.0.1\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n  </runtime>\r\n</configuration>\r\n\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nBelow is the migration report\r\n\r\nNuGet Migration Report\r\nOverview\r\nMigration to PackageReference was completed successfully. Please build and run your solution to verify that all packages are available.\r\nIf you run into any problems, have feedback, questions, or concerns, please file an issue on the NuGet GitHub repository.\r\nChanged files and this report have been backed up here: C:\\Users\\RAM\\source\\repos\\RestWebService\\MigrationBackup\\57a5308f\\Company\r\nHelp me rollback to packages.config\r\nPackages processed\r\nTop-level dependencies:\r\nPackage Id\r\nVersion\r\nMicrosoft.Bcl.AsyncInterfaces\r\nv1.1.0\r\nNewtonsoft.Json\r\nv12.0.3\r\nSystem.Buffers\r\nv4.5.0\r\nSystem.Memory\r\nv4.5.3\r\nSystem.Numerics.Vectors\r\nv4.5.0\r\nSystem.Runtime.CompilerServices.Unsafe\r\nv4.7.0\r\nSystem.Text.Encodings.Web\r\nv4.7.0\r\nSystem.Text.Json\r\nv4.7.1\r\nSystem.Threading.Tasks.Extensions\r\nv4.5.2\r\nSystem.ValueTuple\r\nv4.5.0\r\n\r\nTransitive dependencies:\r\nPackage Id\r\nVersion\r\nNo transitive dependencies found. \r\n\r\nPackage compatibility issues\r\n\r\nDescription\r\n\r\nNo issues were found. \r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13271753497","Type":"IssuesEvent","CreatedAt":"2020-08-21T17:41:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9567","RelatedDescription":"Closed issue \"Analyze the frequency of Implicit restore & potential improvements\" (#9567) at NuGet/Home","RelatedBody":"This is an investigative task to track one of the 3 scenarios in which restore happens. \r\n\r\nQuestions that need answered:\r\n* How frequent is this in the overall picture?\r\n* What is the status distribution?\r\n* Can it be made faster? \r\n* Can it happen less frequently?\r\n\r\nRelated to https://github.com/NuGet/Home/issues/9513. \r\n\r\nGiven that this will happen after https://github.com/NuGet/Home/issues/9513 is completed. It's relevant to think of this problem in the context of those no-op optimizations existing. "},{"Id":"13271579315","Type":"IssuesEvent","CreatedAt":"2020-08-21T17:22:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8825","RelatedDescription":"Closed issue \"Restore:  investigate CloudBuild\" (#8825) at NuGet/Home","RelatedBody":""},{"Id":"13271474763","Type":"IssuesEvent","CreatedAt":"2020-08-21T17:11:17","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9929","RelatedDescription":"Opened issue \"Avoid initializing NuGet Package Manager Console on VS start\" (#9929) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2020-08-22T05:30:40.0599029Z","RunDurationInMilliseconds":2764}