{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12683760737","Type":"IssuesEvent","CreatedAt":"2020-06-19T20:34:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8067","RelatedDescription":"Opened issue \"[Search] Add an \"Include deprecated\" filter\" (#8067) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nI suspect that users prefer to install the latest stable non-deprecated version of a package. Furthermore, I suspect users avoid packages if all its versions are deprecated. These are hypotheses that need to be validated.\r\n\r\n### Describe the solution you'd like\r\nWe should consider adding an \"Include deprecated\" filter, similar to the \"Include prerelease\" filter. This would be a natural extension to the Advanced Search feature.\r\n\r\n/cc @t-mog-msft  @chgill-MSFT  @joelverhagen  "},{"Id":"12683730390","Type":"PullRequestEvent","CreatedAt":"2020-06-19T20:30:00","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8065","RelatedDescription":"Merged pull request \"UI Polish\" (#8065) at NuGet/NuGetGallery","RelatedBody":"\r\n* Removed \"+\" signs from total number of dependents.\r\n* Removed number if there are 0 dependents \r\n* Added \"popular\" to text for GitHub dependents, i.e. \"Showing the top 5 popular GitHub repositories that depend on Newtonsoft.Json:\"\r\n\r\nBefore:\r\n![Before(Zero)](https://user-images.githubusercontent.com/63263324/85172300-499f4280-b260-11ea-845d-d0230802b7da.png)\r\nAfter:\r\n![After(zero)](https://user-images.githubusercontent.com/63263324/85172317-502dba00-b260-11ea-8018-df26e8d54386.png)\r\nBefore:\r\n![Before(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172403-82d7b280-b260-11ea-88bd-bc83236db58e.png)\r\nAfter:\r\n![After(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172412-89662a00-b260-11ea-90e9-2ed95f212cad.png)\r\nProgress on: https://github.com/NuGet/NuGetGallery/issues/8063"},{"Id":"12683459557","Type":"IssuesEvent","CreatedAt":"2020-06-19T19:48:38","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8066","RelatedDescription":"Opened issue \"Add documentation for advanced search\" (#8066) at NuGet/NuGetGallery","RelatedBody":"Add the documentation about the new sorting and filtering features on https://docs.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages"},{"Id":"12683424079","Type":"IssuesEvent","CreatedAt":"2020-06-19T19:43:27","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8000","RelatedDescription":"Closed issue \"[Search sorting] Create engineering spec\" (#8000) at NuGet/NuGetGallery","RelatedBody":"Create an engineering spec containing all gallery, search, and protocol changes. Review this with the nuget server and client team (client since there are protocol changes). "},{"Id":"12683216752","Type":"PullRequestEvent","CreatedAt":"2020-06-19T19:12:26","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8065","RelatedDescription":"Opened pull request \"UI Polish\" (#8065) at NuGet/NuGetGallery","RelatedBody":"\r\n* Removed \"+\" signs from total number of dependents.\r\n* Removed number if there are 0 dependents \r\n* Added \"popular\" to text for GitHub dependents, i.e. \"Showing the top 5 popular GitHub repositories that depend on Newtonsoft.Json:\"\r\n\r\nBefore:\r\n![Before(Zero)](https://user-images.githubusercontent.com/63263324/85172300-499f4280-b260-11ea-845d-d0230802b7da.png)\r\nAfter:\r\n![After(zero)](https://user-images.githubusercontent.com/63263324/85172317-502dba00-b260-11ea-8018-df26e8d54386.png)\r\nBefore:\r\n![Before(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172403-82d7b280-b260-11ea-88bd-bc83236db58e.png)\r\nAfter:\r\n![After(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172412-89662a00-b260-11ea-90e9-2ed95f212cad.png)\r\nProgress on: https://github.com/NuGet/NuGetGallery/issues/8063"},{"Id":"12683092874","Type":"IssuesEvent","CreatedAt":"2020-06-19T18:54:43","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8064","RelatedDescription":"Opened issue \"Improve end-to-end autocomplete tests \" (#8064) at NuGet/NuGetGallery","RelatedBody":"The DEV china service index had the incorrect autocomplete endpoint. Our end-to-end tests should catch this issue in the future."},{"Id":"12683011219","Type":"IssuesEvent","CreatedAt":"2020-06-19T18:42:52","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8063","RelatedDescription":"Opened issue \"[Dependents] Polish current UI\" (#8063) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12682172971","Type":"PullRequestEvent","CreatedAt":"2020-06-19T16:49:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8060","RelatedDescription":"Merged pull request \"Don't track the package push failure if the client has disconnected\" (#8060) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8022\r\n\r\nI was unable to reproduce the issue with many wild attempts (local devbox, app service directly, APIM, custom HTTP client implementation, raising firewall in the middle of request, killing connection via external tools, etc) but from reading online this seems like the recommended implementation. See https://stackoverflow.com/questions/4772597 for some recommendations. We can't use the cancellation token approach because the API that is throwing does not accept a token. It's this line that throws:\r\nhttps://github.com/NuGet/NuGetGallery/blob/84ea5890b77e79b1f218521f2c031f8ee6c311f5/src/NuGetGallery/Controllers/ApiController.cs#L984"},{"Id":"12674942013","Type":"IssuesEvent","CreatedAt":"2020-06-18T23:59:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8062","RelatedDescription":"Opened issue \"Investigate blob storage retries in Catalog2Registration\" (#8062) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nCatalog2Registration should have retries on Blob Storage. This exception was logged:\r\n\r\n```\r\n\"Job Failed to Run\": \"Microsoft.WindowsAzure.Storage.StorageException: The client could not finish the operation within specified timeout. ---> System.TimeoutException: The client could not finish the operation within specified timeout.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.WindowsAzure.Storage.Core.Executor.Executor.EndExecuteAsync[T](IAsyncResult result) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Executor\\Executor.cs:line 51\r\n   at Microsoft.WindowsAzure.Storage.Core.Util.AsyncExtensions.<>c__DisplayClass7.<CreateCallbackVoid>b__5(IAsyncResult ar) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Util\\AsyncExtensions.cs:line 121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.AzureStorage.<OnLoadAsync>d__19.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\AzureStorage.cs:line 356\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.Storage.<LoadAsync>d__17.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\Storage.cs:line 107\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.Storage.<LoadStringAsync>d__19.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\Storage.cs:line 152\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.DurableCursor.<LoadAsync>d__5.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\DurableCursor.cs:line 34\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Catalog2Registration.Catalog2RegistrationCommand.<ExecuteAsync>d__9.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Catalog2RegistrationCommand.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Catalog2Registration.Catalog2RegistrationCommand.<ExecuteAsync>d__8.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Catalog2RegistrationCommand.cs:line 49\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Job.<Run>d__1.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Job.cs:line 23\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.JobRunner.<JobLoop>d__14.MoveNext() in E:\\A\\_work\\3286\\s\\src\\NuGet.Jobs.Common\\JobRunner.cs:line 265\r\nRequest Information\r\nRequestID:\r\nRequestDate:\r\nStatusMessage:\r\nErrorCode:\r\n\"\r\n```\r\n\r\n### To Reproduce\r\n\r\nSee if you can put a delegating handler in the request pipeline.\r\nAdd a host name mapping for the Azure Blob Storage to 192.168.255.255. \r\n\r\n### Expected behavior\r\n\r\nThere should be retries. It's not clear that there are retries implemented in the code. Let's verify retries occur for exceptions like these."},{"Id":"12674894546","Type":"PullRequestEvent","CreatedAt":"2020-06-18T23:49:34","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8061","RelatedDescription":"Merged pull request \"Update `websocket-extensions` dependency\" (#8061) at NuGet/NuGetGallery","RelatedBody":"Bump `websocket-extensions` to the latest version. This is pulled in transitively by the `grunt-contrib-watch` development dependency. I verified this change by ensuring `grunt` still ran fine.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/network/alert/src/Bootstrap/package-lock.json/websocket-extensions/open\r\nAddresses https://github.com/nuget/engineering/issues/3231"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12687968123","Type":"IssuesEvent","CreatedAt":"2020-06-20T19:23:36","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8935","RelatedDescription":"Closed issue \"Broken test in TimestampTests\" (#8935) at NuGet/Home","RelatedBody":"In TimestampTests,\r\ntest Timestamp_Verify_WithOfflineRevocation_ReturnsCorrectFlagsAndLogsAsync  failed on Linux and Mac."},{"Id":"12687967876","Type":"IssuesEvent","CreatedAt":"2020-06-20T19:23:31","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9004","RelatedDescription":"Closed issue \"XPlat Signing: Enable signature verification for restore\" (#9004) at NuGet/Home","RelatedBody":"This is a tracking epic for getting verification working during restore. It involves the following:\n\n1. Enable all verification-related tests, enabling signing tests as necessary to get existing verification working.\n2. Make sure `nuget.exe verify` works on all platforms through mono\n3. Make sure client policies work as expected on all platforms."},{"Id":"12685142335","Type":"IssuesEvent","CreatedAt":"2020-06-20T02:22:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7052","RelatedDescription":"Closed issue \"Custom TargetFramework names cause nuget restore to throw NRE\" (#7052) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): 4.6.1.5019\r\n\r\ndotnet.exe --version (if appropriate): 2.1.300\r\n\r\nVS version (if appropriate): 15.8.0 Preview 3 (27820.1.d15.8)\r\n\r\nWorked before? If so, with which NuGet version: Not sure. I've read that this technique should work, so I assume it used to work. But this is the first time I've tried it.\r\n\r\nI have a library that targets net45 and I want to add a net40 target to it. I'll need to test it, but my test project requires net45 or later, so I can't simply make the test project target net40. How can I have *two* net45 targets that test different versions of the product assembly?\r\nI've read that one can make up any TargetFramework string they want, so long as they set the canonical properties for it to explain what it means. I've [tried that](https://github.com/Microsoft/vs-validation/commit/e85d79e26c276ff219edbba843b80b2625761a80) and NuGet restore throws a `NullReferenceException`, blocking my progress.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n```ps1\r\ngit clone https://github.com/microsoft/vs-validation.git\r\ncd vs-validation\r\ngit co e85d79e26c276ff219edbba843b80b2625761a80\r\ncd src\\Microsoft.VisualStudio.Validation.Tests\r\nmsbuild /restore\r\n```\r\n\r\nProduces this output:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\IntPreview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(114,5): error : Object reference not set to an instance of an object\r\n. [D:\\git\\validation\\src\\Microsoft.VisualStudio.Validation.Tests\\Microsoft.VisualStudio.Validation.Tests.csproj]\r\n```\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nUsing `nuget.exe restore` gives a callstack for the NRE:\r\n\r\n```\r\nnuget restore .\\Microsoft.VisualStudio.Validation.Tests.csproj\r\nMSBuild auto-detection: using msbuild version '15.8.86.63054' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\IntPreview\\MSBuild\\15.0\\bin'.\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018: The \"WriteRestoreGraphTask\" task failed unexpectedly. [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018: System.NullReferenceException: Object reference not set to an instance of an object. [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Frameworks.NuGet.Frameworks1093899.FallbackFramework..ctor(NuGet.Frameworks1093899.NuGetFramework framework, IReadOnlyList`1 fallbackFrameworks) [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Commands.AssetTargetFallbackUtility.GetFallbackFramework(NuGet.Frameworks1093899.NuGetFramework projectFramework, IEnumerable`1 packageTargetFallback, IEnumerable`1 assetTargetFallback) [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Commands.AssetTargetFallbackUtility.ApplyFramework(TargetFrameworkInformation targetFrameworkInfo, IEnumerable`1 packageTargetFallback, IEnumerable`1 assetTargetFallback) [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Commands.MSBuildRestoreUtility.AddPackageTargetFallbacks(PackageSpec spec, IEnumerable`1 items) [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Commands.MSBuildRestoreUtility.GetPackageSpec(IEnumerable`1 items) [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext() [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext() [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Commands.MSBuildRestoreUtility.GetDependencySpec(IEnumerable`1 items) [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at NuGet.Build.Tasks.WriteRestoreGraphTask.Execute() [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\nC:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\bwzz0ytl.eqc.nugetrestore.targets(133,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\Users\\andarno\\AppData\\Local\\Temp\\NuGetScratch\\5ged54xd.ovz.nugetinputs.targets]\r\n```\r\n\r\n"},{"Id":"12685119375","Type":"IssuesEvent","CreatedAt":"2020-06-20T02:14:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9674","RelatedDescription":"Closed issue \"Renable MsbuildRestore_StaticGraphEvaluation_CleanupAssetsForUnsupportedProjectsAsync after app.config stuff is figured out\" (#9674) at NuGet/Home","RelatedBody":"In order to fix https://github.com/NuGet/Home/issues/9665 we had to do https://github.com/NuGet/NuGet.Client/pull/3441 but that breaks a test.\r\n\r\nOnce the app.config stuff is figured out, we can generate the binding redirects on the fly and re-enable the test."},{"Id":"12685118769","Type":"IssuesEvent","CreatedAt":"2020-06-20T02:13:57","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9701","RelatedDescription":"Opened issue \"Test: QueryDelayBuildAction_CleanBuild and UninstallPackageFromUI are flaky\" (#9701) at NuGet/Home","RelatedBody":"The following 5 flaky tests:\r\n```\r\nQueryDelayBuildAction_CleanBuild\r\nQueryDelayBuildAction_ShouldRestoreOnBuild\r\nQueryDelayBuildAction_ShouldNotRestoreOnBuild_ProjectUpToDateMark\r\nQueryDelayBuildAction_ShouldNotRestoreOnBuild_NoOps\r\nUninstallPackageFromUI\r\n```\r\nError message:\r\n`System.Runtime.InteropServices.COMException : Dispose must be called on the UI thread.`\r\n\r\nStack Trace:\r\n```\r\n at Microsoft.VisualStudio.Shell.ThreadHelper.ThrowIfNotOnUIThread(String callerMemberName)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreBuildHandler.Dispose() in C:\\A\\vs2019mb-000035-1\\_work\\6\\s\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\SolutionRestoreBuildHandler.cs:line 84\r\n   at NuGet.SolutionRestoreManager.Test.SolutionRestoreBuildHandlerTests.<QueryDelayBuildAction_CleanBuild>d__2.MoveNext() in C:\\A\\vs2019mb-000035-1\\_work\\6\\s\\test\\NuGet.Clients.Tests\\NuGet.SolutionRestoreManager.Test\\SolutionRestoreBuildHandlerTests.cs:line 45\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\nUninstallPackageFromUI\r\nError message:\r\n`System.TimeoutException : Timed out after 00:00:10 waiting for C:\\school\\ApexSolutions\\TestCase2478\\TestProject\\packages.config did not exist within 00:00:10.`\r\nStack trace\r\n```\r\n   at Omni.Common.Waiter.ThrowIfExpired(String waitCondition)\r\n   at Omni.Common.WaitFor.IsTrue(Func`1 predicate, TimeSpan timeout, Nullable`1 interval, String conditionDescription)\r\n   at NuGet.Tests.Apex.NuGetUITestCase.WaitForFileExists(FileInfo file) in E:\\A\\_work\\1\\s\\test\\NuGet.Tests.Apex\\NuGet.Tests.Apex\\NuGetEndToEndTests\\NuGetUITestCase.cs:line 161\r\n   at NuGet.Tests.Apex.NuGetUITestCase.UninstallPackageFromUI() in E:\\A\\_work\\1\\s\\test\\NuGet.Tests.Apex\\NuGet.Tests.Apex\\NuGetEndToEndTests\\NuGetUITestCase.cs:line 113\r\n```"},{"Id":"12685022362","Type":"IssuesEvent","CreatedAt":"2020-06-20T01:34:01","Actor":"dansiegel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9589","RelatedDescription":"Closed issue \"NuGet Authentication issues\" (#9589) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nI'm currently working on a private feed for my NuGet Sponsors. The feed is based on BaGet but adds some custom Authentication Handlers to support basic auth using their GitHub login and a generated token from the portal.\r\n\r\nSince it appears that the NuGet Client will always attempt an unauthenticated call first, unsuccessful calls get two response headers added:\r\n\r\n- `Www-Authenticate` -> `Basic`\r\n- `X-NuGet-Warning` -> Failed Reason\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. When connecting to the Package Source in Visual Studio, I get a prompt for a username and password and it seems to work.\r\n\r\n2. When I attempt to push to the package (from the CLI or Azure Pipelines) I get the error `ERROR: This version of nuget.exe does not support updating packages to package source`\r\n\r\n## Other suggested things\r\n\r\nAny suggestions on how to properly manage this would be greatly appreciated.\r\n\r\n### Verbose Logs\r\n\r\n[build-log](https://github.com/NuGet/Home/files/4662980/nugetpush.txt)\r\n\r\n\r\n"},{"Id":"12684904786","Type":"IssuesEvent","CreatedAt":"2020-06-20T00:50:27","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9653","RelatedDescription":"Closed issue \"Save the order of NuGet Package Feeds in VS Options Dialog\" (#9653) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1062565/save-the-order-of-nuget-packag-feeds.html)._\n\n---\nYou can add multiple Nuget-Feed-Sources with VisualStudio which is then save to \"%AppData%\\NuGet\\NuGet.Config\".\nIn VisualStudio you can change the order of that sources but the order is not saved into the config. After a VS restart the order has not changed.\nWorkaround: Editing the file manually.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/3/2020, 01:57 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"12684902333","Type":"IssuesEvent","CreatedAt":"2020-06-20T00:49:32","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9700","RelatedDescription":"Closed issue \"Signing Test: on Mac and Linux,  the exception thrown by HttpListener during disposing should be caught\" (#9700) at NuGet/Home","RelatedBody":"In SigningTestFixture,  the exception thrown by HttpListener during disposing is only caught on Windows and Mono, not Linux and Mac.\r\nSo even if all the tests pass, the dotnet vstest has the exit code not 0.\r\n"},{"Id":"12684359035","Type":"IssuesEvent","CreatedAt":"2020-06-19T22:21:06","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9086","RelatedDescription":"Closed issue \"NuGet.Protocol does not support getting a version's download count from search\" (#9086) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.Protocol\r\nNuGet version: 5.5.0-preview.1.6319\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nThe NuGet Search API returns the download count for each individual version of a package through the `downloads` property in the `versions` array (see [this documentation](https://docs.microsoft.com/en-us/nuget/api/search-query-service-resource#search-result)). For example, see: https://azuresearch-usnc.nuget.org/query?q=packageid:newtonsoft.json&prerelease=true&semVerLevel=2.0.0\r\n\r\nThe NuGet.Protocol library has a [`PackageSearchMetadata.GetVersionsAsync()`](https://github.com/NuGet/NuGet.Client/blob/9173d9bc53b5123d5cadec6cae513149d40505b0/src/NuGet.Core/NuGet.Protocol/Model/PackageSearchMetadata.cs#L197) method that returns `VersionInfo`s, which have a [`DownloadCount`](https://github.com/NuGet/NuGet.Client/blob/9173d9bc53b5123d5cadec6cae513149d40505b0/src/NuGet.Core/NuGet.Protocol/Model/VersionInfo.cs#L34) property. Sadly, this `DownloadCount` property returns the total download count instead of the version's download count. We should expose the version specific download count as well.\r\n\r\n### Sample Project\r\n\r\nHere's an example project that reproduces this issue: https://gist.github.com/loic-sharma/107210ba996fba598b6fdb5143ed847b\r\n\r\n"},{"Id":"12684061905","Type":"IssuesEvent","CreatedAt":"2020-06-19T21:24:44","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9700","RelatedDescription":"Opened issue \"Signing Test: on Mac and Linux,  the exception thrown by HttpListener during disposing should be caught\" (#9700) at NuGet/Home","RelatedBody":"In SigningTestFixture,  the exception thrown by HttpListener during disposing is only caught on Windows and Mono, not Linux and Mac.\r\nSo even if all the tests pass, the dotnet vstest has the exit code not 0.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-21T05:30:38.4906427Z","RunDurationInMilliseconds":1520}