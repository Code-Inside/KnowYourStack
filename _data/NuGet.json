{"Data":{"Blog":{"FeedItems":[{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15646284391","Type":"PullRequestEvent","CreatedAt":"2021-03-23T00:32:29","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8447","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.03.09] RI of dev into master \" (#8447) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"15646233832","Type":"IssuesEvent","CreatedAt":"2021-03-23T00:26:08","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8463","RelatedDescription":"Opened issue \"[2021-03-22] Deployment\" (#8463) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\nChanges:\r\n\r\nworkaround for narrator announce the status changes of copy button (#8423)\r\n\r\n[SAS Token] Create get only uri methods for files. (#8424)\r\n\r\nImplementation of Cake tab with instructions for NuGet packages (#8434)\r\n\r\nUpdating the client libraries to 5.9 (#8442)\r\n\r\nImage allowlist (#8406)\r\n\r\nNew TFM logic for package ingestion (#8432)\r\n\r\nBugfix upload page & remove dev.azure from allowlist (#8449)\r\n\r\nAdd Cake dotnet tool directive instructions (#8440)\r\n\r\nAdd feature flag for new TFM heuristics (#8448)\r\n\r\nUse new TFM logic for package ingestion in backfill command (#8431)\r\n\r\nAdd IsVulnerable to Manage Packages view model (#8435)\r\n\r\nExtend vulnerabilities verification to metadata (#8412)\r\n\r\nAdd vulnerable warnings to Manage Packages page (#8436)\r\n\r\nAdd Knapcode.MiniZip to 3rd party signing (#8450)\r\n\r\nGive the manage packages page its own pva flag (perf concerns) (#8451)\r\n\r\nSymbols perf improvement (#8446)\r\n\r\nMerge pull request #8454 from NuGet/master\r\n\r\nProgress:\r\n* [ ] Merge RI: https://github.com/NuGet/NuGetGallery/pull/8447\r\n* [ ] Build: \r\n* [ ] Release: \r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"15645313365","Type":"IssuesEvent","CreatedAt":"2021-03-22T22:31:32","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8462","RelatedDescription":"Opened issue \"[Online safety] spec changes to contacts form\" (#8462) at NuGet/NuGetGallery","RelatedBody":"Create the facility in our contact form for customers to report safety concerns according to the categories and data we require. See the Microsoft Online Safety Policy."},{"Id":"15640750934","Type":"IssuesEvent","CreatedAt":"2021-03-22T16:36:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5222","RelatedDescription":"Closed issue \"Historical package download counts data\" (#5222) at NuGet/NuGetGallery","RelatedBody":"As far as I can tell, there's no way to get historical statistics data outside of the \"last six weeks\".\r\n\r\nFor example, if I wanted to track the downloads of a package every day, I currently need to constantly monitor the stats page and save the values somewhere, or I need to give up and just look at the last six weeks as a whole.\r\n\r\nAnother example is that we wanted to know how many downloads NuGet.org had at the end of 2017, but since we didn't spend NYE refreshing the Gallery's statistics, we aren't sure the exact number.\r\n\r\nWe should show the daily values for at least the last couple weeks.\r\n\r\nAnother thing to note is that the statistics job doesn't save snapshots of these reports, so we don't even have internal copies of the past data."},{"Id":"15616790823","Type":"IssuesEvent","CreatedAt":"2021-03-19T21:25:55","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8459","RelatedDescription":"Closed issue \"[Readme] Images from untrusted domains are displayed in readmes\" (#8459) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nOnly images from trusted domains should be displayed. However, images from untrusted domains are still displayed for both embedded and legacy readmes.\r\n\r\nFor example:\r\n* https://dev.nugettest.org/packages/Loshar.Readme/3.0.0\r\n* https://dev.nugettest.org/packages/Loshar.Readme/4.0.0#\r\n\r\n### To Reproduce\r\n\r\n1. Upload a package that does not have an embedded readme\r\n2. Add the following readme using the legacy readme feature: `![NuGet Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/NuGet_project_logo.svg/220px-NuGet_project_logo.svg.png)`\r\n3. Navigate to the package details page. The image is hosted by wikipedia.org which is not on the trusted domains list. It should not be rendered.\r\n\r\nThis also reproduces if you upload a package with the following embedded readme: `![NuGet Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/NuGet_project_logo.svg/220px-NuGet_project_logo.svg.png)`"},{"Id":"15602627087","Type":"IssuesEvent","CreatedAt":"2021-03-19T00:12:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8461","RelatedDescription":"Opened issue \"[README]\" (#8461) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\n\r\nClicking the Show More link clears the URL fragment and goes to the top of the page.\r\n\r\n### To Reproduce\r\n\r\n1. Go to https://dev.nugettest.org/packages/ICanHazReadme/1.0.1#show-readme-container\r\n2. Click Show More\r\n3. Wait a second\r\n\r\n### Expected behavior\r\n\r\nThe README should expand but the viewport should stay where it is.\r\n\r\nActual: it jumps up.\r\n\r\n### Screenshots\r\n\r\n![repro](https://user-images.githubusercontent.com/94054/111713555-21536d00-880d-11eb-91f1-90fa6225b28b.gif)\r\n"},{"Id":"15602535335","Type":"IssuesEvent","CreatedAt":"2021-03-19T00:00:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8460","RelatedDescription":"Opened issue \"[README] Empty embedded readme breaks the manage package > documentation section\" (#8460) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nI created a package with an empty README file. It seems to confuse the upload UI and the manage package Documentation section. It sort of looks like some of the code thinks it's a legacy readme package and other code thinks its an embedded readme.\r\n\r\n### To Reproduce\r\n\r\nGo here: https://dev.nugettest.org/packages/ICanHazReadme/1.0.2/Manage\r\n\r\nOr\r\n\r\n1. Create a nupkg with an embedded readme and make the readme empty (0 bytes)\r\n2. Upload to Gallery\r\n3. Notice the README preview on the upload package\r\n4. After the package is uploaded, go to the Manage Package page and expand the Documentation section\r\n\r\n### Expected behavior\r\n\r\nEither the package should be rejected or the package should be considered to have an embedded readme and no Preview button should appear.\r\n\r\n### Screenshots\r\n\r\nNo submit button:\r\n![image](https://user-images.githubusercontent.com/94054/111712721-71c9cb00-880b-11eb-8ed0-5522618fd639.png)\r\n"},{"Id":"15602529923","Type":"IssuesEvent","CreatedAt":"2021-03-19T00:00:21","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8459","RelatedDescription":"Opened issue \"[Readme] Images from untrusted domains are displayed from legacy readme\" (#8459) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nOnly images from trusted domains should be displayed. However, images from untrusted domains are still displayed for legacy readmes.\r\n\r\nFor example: https://dev.nugettest.org/packages/Loshar.Readme/3.0.0\r\n\r\n### To Reproduce\r\n\r\n1. Upload a package that does not have an embedded readme\r\n2. Add the following readme using the legacy readme feature: `![NuGet Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/NuGet_project_logo.svg/220px-NuGet_project_logo.svg.png)`\r\n3. Navigate to the package details page. The image is hosted by wikipedia.org which is not on the trusted domains list. It should not be rendered."},{"Id":"15602283251","Type":"IssuesEvent","CreatedAt":"2021-03-18T23:30:01","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8458","RelatedDescription":"Opened issue \"[README] Show more +/- is shown even if there is no additional content\" (#8458) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nWhen the README is short (like 1-3 lines) the \"Show more\" / \"Show less\" links are shown but if you click on them they don't do anything.\r\n\r\n### To Reproduce\r\n\r\n1. Go to this package: https://dev.nugettest.org/packages/ICanHazReadme/1.0.0\r\n2. Click \"Show more\" and \"Show less\"\r\n\r\n### Expected behavior\r\n\r\nThe link should not appear for short READMEs.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/94054/111710428-ea7a5880-8806-11eb-94b3-ef11fe2a20b1.png)\r\n"},{"Id":"15602071552","Type":"IssuesEvent","CreatedAt":"2021-03-18T23:05:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8457","RelatedDescription":"Opened issue \"[Readme] UTF8 characters broken in preview but work in expanded mode\" (#8457) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nUTF8 characters do not render properly in the README preview.\r\n\r\n### To Reproduce\r\n\r\n1. Go to: https://dev.nugettest.org/packages/Loshar.Readme/2.0.0#\r\n1. Look at the Documentation (notice the ?):\r\n\r\n![image](https://user-images.githubusercontent.com/737941/111708733-a2a60200-8803-11eb-8f53-0bb94d04f4d8.png)\r\n\r\n1. Now press `+ Show more` (notice the emojis):\r\n\r\n![image](https://user-images.githubusercontent.com/737941/111708768-afc2f100-8803-11eb-8a12-5dcb69b2a733.png)\r\n\r\n### Expected behavior\r\nUTF8 emojis should work in the preview mode."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15647181430","Type":"IssuesEvent","CreatedAt":"2021-03-23T02:40:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10678","RelatedDescription":"Opened issue \"NuGet should not eagerly start restore when there are pending design time builds\" (#10678) at NuGet/Home","RelatedBody":"A couple of real time scenarios here: \r\n\r\n* A user edited a common file such as `Directory.Build.Props`\r\n* Git operations such as branch switch.\r\n\r\nNuGet has an easy tell about when to restore on solution load (wait for all the projects to be ready), during branch switching, that's not obvious because most of the projects are already ready.\r\n\r\nThis issue is blocked on [1283992](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1283992)"},{"Id":"15644444145","Type":"IssuesEvent","CreatedAt":"2021-03-22T21:04:28","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10676","RelatedDescription":"Closed issue \"[CPVM] Wrong version restored for transitive dependency\" (#10676) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet packages that are referenced transitively seem not to be restored with the expected version defined in the `Directory.Packages.props`.\r\n\r\nTested with .NET SDK 5.0.201.\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Clone this repo: https://github.com/MichaeIDietrich/CpvmTransitiveDependencies\r\n\r\nsolution structure:\r\n`App1.csproj` <- `Microsoft.AspNetCore.Authentication.JwtBearer` <- `Microsoft.IdentityModel.Protocols.OpenIdConnect`\r\n`App2.csproj` <- `Microsoft.IdentityModel.Protocols.OpenIdConnect`\r\n\r\n(<- means references)\r\n\r\nBoth NuGets are defined in the `Directory.Packages.props`. CPVM is enabled in the `Directory.Build.props`.\r\n\r\n2. Run `dotnet publish src\\`\r\n\r\nVersion of `publish\\App1\\Microsoft.IdentityModel.Protocols.OpenIdConnect.dll` is `6.7.1`.\r\nVersion of `publish\\App2\\Microsoft.IdentityModel.Protocols.OpenIdConnect.dll` is `6.8.0`.\r\n\r\nI would have expected both to be `6.8.0`, since that's the version defined in the `Directory.Packages.props`.\r\n\r\nCan you confirm this is a bug or do I have a misunderstanding of what CPVM is meant to do here?"},{"Id":"15644023870","Type":"IssuesEvent","CreatedAt":"2021-03-22T20:28:14","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10677","RelatedDescription":"Opened issue \"Remove the \"v\" from the version number in PMUI\" (#10677) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: \r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\nRemove the \"v\" in the PMUI packages list just before the version number.\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/948022\r\n![image](https://user-images.githubusercontent.com/49205731/112054052-78b64d80-8b2b-11eb-84a2-68ff267a307d.png)\r\n\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15642770261","Type":"IssuesEvent","CreatedAt":"2021-03-22T18:52:06","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10661","RelatedDescription":"Closed issue \"Clients terminate the restore procedure, when any DNS failure is met.\" (#10661) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nProduct version: 5.6.0\r\n\r\nIt seems that clients terminate the restore procedure, when any DNS failure is met.\r\n\r\n## Repro steps and/or sample project\r\n\r\nFor example: \"NuGet Gallery\" (https://github.com/NuGet/NuGetGallery)\r\n1. Clone the repository;\r\n2. Update \"NuGet.config\" to use the only feed: \"apidev.nugettest.org\";\r\n3. Clear local caches: `dotnet nuget locals all --clear`\r\n4. Run a clean solution restore: `nuget restore .\\NuGetGallery.sln -NonInteractive -Verbosity detailed`\r\n\r\n(\"apidev\" feed is in a not stable status, and the intermittent DNS failures are expected but not all times. Retry is needed to reproduce this issue.)\r\n\r\n### Verbose Logs\r\n\r\nOne sample of failure logs:\r\n\r\n![image](https://user-images.githubusercontent.com/41028779/111098861-966b2d80-8501-11eb-8e29-38c5a5851f52.png)\r\n\r\n\r\n\r\n"},{"Id":"15641324056","Type":"IssuesEvent","CreatedAt":"2021-03-22T17:14:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5872","RelatedDescription":"Closed issue \"Support floating versions with IVsPackageInstallerServices.GetInstalledPackages\" (#5872) at NuGet/Home","RelatedBody":"IVsPackageInstallerServices.GetInstalledPackages currently uses the minimum bound of the version range for the package. \r\n\r\nThis should instead use the actual version in project.assets.json\r\n\r\nThere are several issues blocking this today\r\n* Performance of loading up the assets file to get this info. Caching may be needed.\r\n* When the API is called before auto restore has happened. Example: Test explorer is pinned and immediately requests installed packages from NuGet before NuGet has received the nomation from the project system to even start restore."},{"Id":"15637627299","Type":"IssuesEvent","CreatedAt":"2021-03-22T13:35:48","Actor":"MichaeIDietrich","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10676","RelatedDescription":"Opened issue \"[CPVM] Wrong version restored for transitive dependency\" (#10676) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet packages that are referenced transitively seem not to be restored with the expected version defined in the `Directory.Packages.props`.\r\n\r\nTested with .NET SDK 5.0.201.\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Clone this repo: https://github.com/MichaeIDietrich/CpvmTransitiveDependencies\r\n\r\nsolution structure:\r\n`App1.csproj` <- `Microsoft.AspNetCore.Authentication.JwtBearer` <- `Microsoft.IdentityModel.Protocols.OpenIdConnect`\r\n`App2.csproj` <- `Microsoft.IdentityModel.Protocols.OpenIdConnect`\r\n\r\n(<- means references)\r\n\r\nBoth NuGets are defined in the `Directory.Packages.props`. CPVM is enabled in the `Directory.Build.props`.\r\n\r\n2. Run `dotnet publish src\\`\r\n\r\nVersion of `publish\\App1\\Microsoft.IdentityModel.Protocols.OpenIdConnect.dll` is `6.7.1`.\r\nVersion of `publish\\App2\\Microsoft.IdentityModel.Protocols.OpenIdConnect.dll` is `6.8.0`.\r\n\r\nI would have expected both to be `6.8.0`, since that's the version defined in the `Directory.Packages.props`.\r\n\r\nCan you confirm this is a bug or do I have a misunderstanding of what CPVM is meant to do here?"},{"Id":"15626451755","Type":"IssuesEvent","CreatedAt":"2021-03-21T12:30:33","Actor":"alexvaccaro","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10675","RelatedDescription":"Opened issue \"Using NuGet restore with lock files gives “NU1004: The packages lock file is inconsistent with the project dependencies” error\" (#10675) at NuGet/Home","RelatedBody":"I am getting this error when I use the `-LockMode` switch with the `nuget restore` command.\r\n\r\n> NU1004: The packages lock file is inconsistent with the project\r\n> dependencies so restore can't be run in locked mode. Disable the\r\n> RestoreLockedMode MSBuild property or pass an explicit\r\n> --force-evaluate option to run restore to update the lock file.\r\n\r\nWhat I am trying to achieve is to automatically upgrade my nuget references by using wildcards but use specific versions when I want to re-build my project from known sources. this blog posts describes how this can be achieved [Enable repeatable package restores using a lock file](https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/).\r\n\r\nWhen I use `-UseLockFile` & `-LockMode` on a simple solution with just one project it works as expected, the issue arises when I start adding another project to the solution.\r\n\r\nHere're the steps:\r\n\r\n 1. I have published my package to an Azure DevOps feed and I have the following versions listed:\r\n```\r\n1.0.1-ci.1\r\n1.0.1-ci.2\r\n```\r\n\r\n 2. I have created a .Net 3.1 console app that references my package using wild cards, i.e. `<PackageReference Include=\"My.Package\" Version=\"1.0.*-ci.*\" />`\r\n\r\n 3. Running the command `nuget restore -UseLockFile -ForceEvaluate` creates the packages.lock.json with the right reference (I am using `-ForceEvaluate` in order to ensure it always resolves to the latest version available on the feed), the contents of the lock file of my console project are:\r\n```json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETCoreApp,Version=v3.1\": {\r\n      \"My.Package\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.*-ci.*, )\",\r\n        \"resolved\": \"1.0.0-ci.2\",\r\n        \"contentHash\": \"4HQuN7LNoZT9Z+MOL/Yig79FehhXBZmi26j3VtWR9Cgz8k5irWspSQ8aasVbNkYp7AgA2XaDQdr/cnwJnPilpQ==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n 4. I then publish a new version of My.Package (**1.0.1-ci.3**) and run the command `nuget restore -LockedMode`, and the version resolved is still **1.0.1-ci.2**, and if I then run `nuget restore -ForceEvaluate` it will resolve as expected to **1.0.1-ci.3**, so far so good!\r\n\r\n 5. The issue arises when I add a class library to my solution which uses the same package reference, i.e. `<PackageReference Include=\"My.Package\" Version=\"1.0.*-ci.*\" />`, when I run `restore -UseLockFile -ForceEvaluate` my packages.lock.json file is updated to include the project dependency:\r\n```json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETCoreApp,Version=v3.1\": {\r\n      \"My.Package\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.*-ci.*, )\",\r\n        \"resolved\": \"1.0.0-ci.3\",\r\n        \"contentHash\": \"4HQuN7LNoZT9Z+MOL/Yig79FehhXBZmi26j3VtWR9Cgz8k5irWspSQ8aasVbNkYp7AgA2XaDQdr/cnwJnPilpQ==\"\r\n      },\r\n      \"classlibrary1\": {\r\n        \"type\": \"Project\",\r\n        \"dependencies\": {\r\n          \"My.Package\": \"1.0.0-ci.0\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWhile the contents of the lock file of the Class Library project are:\r\n\r\n```json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETCoreApp,Version=v3.1\": {\r\n      \"My.Package\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.*-ci.*, )\",\r\n        \"resolved\": \"1.0.0-ci.3\",\r\n        \"contentHash\": \"4HQuN7LNoZT9Z+MOL/Yig79FehhXBZmi26j3VtWR9Cgz8k5irWspSQ8aasVbNkYp7AgA2XaDQdr/cnwJnPilpQ==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAfter this when I try running `restore -LockMode` I get the **NU1004** error mentioned earlier.\r\n\r\nDoing what the error message suggests and use `-ForceEvaluate` would clearly break what I wanted to achieve, yet I can't imagine that this relatively simple scenario is not covered by NuGet, so I would guess I am doing something wrong, does anyone have any ideas of what I could try to make this work?"},{"Id":"15618175131","Type":"IssuesEvent","CreatedAt":"2021-03-20T00:14:50","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10674","RelatedDescription":"Opened issue \"Manage NuGet packages for solution extremely slow\" (#10674) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Manage-NuGet-packages-for-solution-extre/1371226)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:16.7 (I think)]\r\nAfter installing the latest version of Visual Studio 2019, the Manage NuGet packages for the whole solution is terribly slow.\nI have a solution with 70+ projects in it, and in previous versions I had no issue when managing the NuGet packages for the solution. But now, when opening, Visual Studio freezes for some minute or so, and after that it needs even more time to load the information of the NuGet packages. When all is done, it again takes some 20 seconds when I select a new NuGet package to see its information.\nAlso, switching from package source freezes the GUI and is very slow.\nCPU usage for Visual Studio normally is around 15% (when doing nothing), but it peeks at 40% when opening the Nuget Package manager for the solution. Also the network traffic goes to 100% for a few seconds.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/16/2021, 06:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":86,"FavoriteCount":37,"RawContent":null},{"Id":"1366458126141120525","CreatedAt":"2021-03-01T18:39:39+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nLate last year we launched a https://t.co/F9kiKfvqkS survey to ask customers about their… https://t.co/mgpdDNj3is","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1366422928519233536","CreatedAt":"2021-03-01T16:19:47+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nIf you have a moment, please take some time to leave us feedback! We really appreciate it ♥ https://t.co/we1sP6mT8q","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":3,"RawContent":null},{"Id":"1365020887758614529","CreatedAt":"2021-02-25T19:28:35+00:00","UserScreenname":"nuget","Text":"🔐 https://t.co/F9kiKfvqkS security update 🔐\n\nThe https://t.co/F9kiKfvqkS repository signing certification will be u… https://t.co/jur1vcuf0B","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"1362857576422137856","CreatedAt":"2021-02-19T20:12:21+00:00","UserScreenname":"nuget","Text":"🙌 New doc just dropped! 🙌\n\nCheck out our latest recommendations to help secure your software supply chain, for pack… https://t.co/odu3ygBOvR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1355252975678189569","CreatedAt":"2021-01-29T20:34:23+00:00","UserScreenname":"nuget","Text":"For users affected by the Debian 10 Buster CA Certificate issue, we now have a documented mitigation available.\n\nPl… https://t.co/VhGXtYI6aj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"1354633996202700808","CreatedAt":"2021-01-28T03:34:47+00:00","UserScreenname":"nuget","Text":"📢 For .NET Docker users, we have published new images that mitigate these issues by using a pre-release version of… https://t.co/eWBiUMyYhr","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":41,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2021-03-23T05:30:31.3059195Z","RunDurationInMilliseconds":1286}