{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21944920948","Type":"PullRequestEvent","CreatedAt":"2022-05-23T22:44:57","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9123","RelatedDescription":"Opened pull request \"[TFM Badges] Added + sign for badges.\" (#9123) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n\r\n* TODO\r\n\r\n### Addresses\r\nhttps://github.com/NuGet/NuGetGallery/issues/9044"},{"Id":"21906363699","Type":"IssuesEvent","CreatedAt":"2022-05-20T18:41:27","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9115","RelatedDescription":"Closed issue \"Multiple certificates in your server nodes, one untrusted?\" (#9115) at NuGet/NuGetGallery","RelatedBody":"Hello,\r\n\r\nFirst of all, love nuget. \r\nSecond, \r\n\r\nI'm having trouble accessing nuget via Visual Studio (and also via Chrome). \r\nSometimes it works, sometimes it doesn't.\r\nI'm accessing [v3/index.json](https://api.nuget.org/v3/index.json) to be precise.\r\n\r\n\r\nIs it possible you have two (multiple) server nodes, where one is using server certificate which is created by untrusted signer?\r\nWhenever I get response from server, where certificate path is \"*.nuget.org -> Microsoft Azure TLS Issuing CA 05 -> DigiCert Global Root G2\", everything is working just fine, but if I get response from other server, I get \"Untrusted issuer error\".\r\n\r\nSeems like you've replaced certificates on 27.4.2022, maybe you forgot to do it for one of the nodes?\r\n\r\nOr maybe there is problem with my organization's network or local machine ...\r\n\r\nBest regards,\r\nMatt\r\n"},{"Id":"21885254363","Type":"IssuesEvent","CreatedAt":"2022-05-19T17:57:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5102","RelatedDescription":"Closed issue \"Move to a new version of anglicangeek.markdownmailer\" (#5102) at NuGet/NuGetGallery","RelatedBody":"Gallery references the old unlisted version from 2011. There is a newer version (which is not unlisted) from 2013. We should use that one: https://www.nuget.org/packages/MarkdownMailer/"},{"Id":"21871935626","Type":"IssuesEvent","CreatedAt":"2022-05-19T06:32:37","Actor":"AbhitejJohn","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9122","RelatedDescription":"Opened issue \"[Feature]: Mapping type names to nuget packages to improve discoverability\" (#9122) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI find myself trying to determine the right nuget package to pull in for a type of interest. This isn't trivial the moment and is dependent on the fact that the author of the type has relevant documentation to point its consumers to the right nuget package which isn't always straightforward.\n\n### The Elevator Pitch\n\nMost times we start off with an API/interface of interest by looking at docs or searching for other references of it. It ought to be easy for consumers to go from there to a nuget package they could consume in their solutions. At the moment this isn't as simple as searching for the type name in nuget/a private feed and the UX showing up a list of packages that contain the type being searched for. This both improves discoverability and ease of mapping any API to a nuget package as long as it has been indexed. \r\n\r\nIt would be great if this experience was built into both the web client and other desktop clients as well.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"21868182442","Type":"PullRequestEvent","CreatedAt":"2022-05-19T01:44:39","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9120","RelatedDescription":"Merged pull request \"Remove unused field from ConfigurationService\" (#9120) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21859000287","Type":"IssuesEvent","CreatedAt":"2022-05-18T16:17:42","Actor":"philipstratford","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9121","RelatedDescription":"Opened issue \"[Bug]: Unable to connect to NuGet - \"...connection forcibly closed by the remote host\"\" (#9121) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21844835609","Type":"PullRequestEvent","CreatedAt":"2022-05-18T02:56:41","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9120","RelatedDescription":"Opened pull request \"Remove unused field from ConfigurationService\" (#9120) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21947197599","Type":"PullRequestEvent","CreatedAt":"2022-05-24T02:47:38","Actor":"Algadikdh0533","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11832","RelatedDescription":"Opened pull request \"Update SECURITY.md\" (#11832) at NuGet/Home","RelatedBody":"حذف جميع الحسابات"},{"Id":"21946353838","Type":"IssuesEvent","CreatedAt":"2022-05-24T01:19:49","Actor":"drewgillies","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11831","RelatedDescription":"Opened issue \"Refactor NuGet CLI list runner code to better support unit testing\" (#11831) at NuGet/Home","RelatedBody":"I'd like to explore an opportunity to make the CLI list command code more robust. Currently we have codebase with challenges to unit testability. Here are a few examples the method `ExcecuteCommandAsync` in the `ListPackageCommandRunner` class:\r\n\r\n- https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Commands/PackageReferenceCommands/ListPackage/ListPackageCommandRunner.cs#L43 - we see here a direct call to `System.IO.Path`, rather than to a type which can provide this information (and hence be mocked away for testing), along with a `static` call to the class `MSBuildAPIUtility`.\r\n\r\n- https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Commands/PackageReferenceCommands/ListPackage/ListPackageCommandRunner.cs#L53 - we see here direct writes to the console--there are many of these embedded throughout the code--rather than to a type which can process output (and hence be mocked away for testing).\r\n\r\n- https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Commands/PackageReferenceCommands/ListPackage/ListPackageCommandRunner.cs#L89 direct calls to a type which isn't an interface--not mockable.\r\n\r\n- https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Commands/PackageReferenceCommands/ListPackage/ListPackageCommandRunner.cs#L115 - call to method which indirectly invokes metadata processing class, downloading from cloud, not written to an interface, not mockable.\r\n\r\n- https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Commands/PackageReferenceCommands/ListPackage/ListPackageCommandRunner.cs#L142 - static call for output processing.\r\n\r\nThis would be a refactor that would touch a reasonable amount of code, however if it is done in a way that introduces unit tests to cover all of our list command scenarios, we shouldn't be introducing a lot of risk here. And a good series of tests would also make the code quickly identify breaks during dev cycles."},{"Id":"21946078023","Type":"IssuesEvent","CreatedAt":"2022-05-24T00:50:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11830","RelatedDescription":"Opened issue \"Remove net45 and net40 targets from the NuGet build\" (#11830) at NuGet/Home","RelatedBody":"These are outdated and out of support frameworks.\r\n \r\nCurrently VS 2022 doesn't even give you the option to install the framework components for .NET Framework 4.0 - 4.5.1, which means that you have to jump through hoops to get those targeting packs installed. \r\n\r\nSee : https://docs.microsoft.com/en-us/dotnet/framework/install/guide-for-developers\r\n\r\n> Starting with Visual Studio 2022, Visual Studio no longer includes .NET Framework components for .NET Framework 4.0 - 4.5.1 because these versions are no longer supported. Visual Studio 2022 and later versions can't build apps that target .NET Framework 4.0 through .NET Framework 4.5.1. To continue building these apps, you can use Visual Studio 2019 or an earlier version.\r\n\r\nI understand that there are other reasons for targetting net45 in particular, `NuGet.Packaging.Extraction`, but I think that can be addressed by using older versions of the package that have already been published. \r\n\r\nIn particular both @drewgillies and @lukka both ran into issues over the last 2 weeks trying to build the product."},{"Id":"21945092759","Type":"IssuesEvent","CreatedAt":"2022-05-23T23:02:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6803","RelatedDescription":"Closed issue \"dotnet pack generates wrong nuspec\" (#6803) at NuGet/Home","RelatedBody":"_From @Doomblaster on April 10, 2018 13:56_\n\n## Steps to reproduce\r\nCreate project and pack it in nuget package A with version 2.0.0.0. Create another project dependant on nuget package A and change the PackageReference Version attribute to *. Use dotnet pack and create version 3.0.0.0.\r\n\r\n## Expected  behavior\r\nNuget package B to be dependant on nuget package A v2.0.0.0\r\n\r\n## Actual behavior\r\nNuget package B is dependant on nuget package A v3.0.0.0\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.1.200-preview-007474)\r\n\r\nProduct Information:\r\n Version:            2.1.200-preview-007474\r\n Commit SHA-1 hash:  06ce7628d3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007474\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.6\r\n  Build    : 74b1c703813c8910df5b96f304b0f2b78cdf194d\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#9038_"},{"Id":"21944725062","Type":"IssuesEvent","CreatedAt":"2022-05-23T22:25:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11209","RelatedDescription":"Closed issue \"[Bug]: Nuget package is not using the highest dependency\" (#11209) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\n.net 5.0.302, vs 2019 16.10.4, nuget package manager 5.10.0, Package Manager Console Host Version 5.10.0.7240\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a new wpf application.\r\n2. Type \r\n`Install-Package Moq -DependencyVersion Highest` \r\nin package manager console, I want moq's dependencies all latest.\r\n\r\nBut `Castle.Core` is still the older version of 4.4.0, while the latest is 4.4.1.\r\n\r\nFull log:\r\n```\r\nPM> Install-Package Moq -DependencyVersion Highest\r\nRestoring packages for C:\\Users\\ASUS\\source\\repos\\WpfApp14\\WpfApp14\\WpfApp14.csproj...\r\nInstalling NuGet package Moq 4.16.1.\r\nCommitting restore...\r\nWriting assets file to disk. Path: C:\\Users\\ASUS\\source\\repos\\WpfApp14\\WpfApp14\\obj\\project.assets.json\r\nRestored C:\\Users\\ASUS\\source\\repos\\WpfApp14\\WpfApp14\\WpfApp14.csproj (in 1.41 sec).\r\nSuccessfully installed 'Castle.Core 4.4.0' to WpfApp14\r\nSuccessfully installed 'Microsoft.NETCore.Targets 1.1.0' to WpfApp14\r\nSuccessfully installed 'Microsoft.Win32.Primitives 4.3.0' to WpfApp14\r\nSuccessfully installed 'Moq 4.16.1' to WpfApp14\r\nSuccessfully installed 'NETStandard.Library 1.6.1' to WpfApp14\r\nSuccessfully installed 'runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.native.System 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.native.System.IO.Compression 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.native.System.Net.Http 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.native.System.Security.Cryptography.Apple 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.AppContext 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Buffers 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Collections 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Collections.Concurrent 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Collections.NonGeneric 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Collections.Specialized 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.ComponentModel 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.ComponentModel.Primitives 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.ComponentModel.TypeConverter 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Console 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Diagnostics.Debug 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Diagnostics.DiagnosticSource 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Diagnostics.Tools 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Diagnostics.TraceSource 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Diagnostics.Tracing 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Dynamic.Runtime 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Globalization 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Globalization.Calendars 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Globalization.Extensions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.IO 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.IO.Compression 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.IO.Compression.ZipFile 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.IO.FileSystem 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.IO.FileSystem.Primitives 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Linq 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Linq.Expressions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Net.Http 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Net.Primitives 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Net.Sockets 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.ObjectModel 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection.Emit 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection.Emit.ILGeneration 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection.Emit.Lightweight 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection.Extensions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection.Primitives 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Reflection.TypeExtensions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Resources.ResourceManager 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Runtime 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Runtime.Extensions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Runtime.Handles 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Runtime.InteropServices 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Runtime.InteropServices.RuntimeInformation 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Runtime.Numerics 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Security.Cryptography.Algorithms 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Security.Cryptography.Csp 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Security.Cryptography.Encoding 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Security.Cryptography.OpenSsl 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Security.Cryptography.Primitives 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Security.Cryptography.X509Certificates 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Text.Encoding 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Text.Encoding.Extensions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Text.RegularExpressions 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Threading 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Threading.Tasks 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Threading.Tasks.Extensions 4.5.4' to WpfApp14\r\nSuccessfully installed 'System.Threading.Timer 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Xml.ReaderWriter 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Xml.XDocument 4.3.0' to WpfApp14\r\nSuccessfully installed 'System.Xml.XmlDocument 4.3.0' to WpfApp14\r\nExecuting nuget actions took 149 ms\r\nTime Elapsed: 00:00:02.9992864\r\n```\r\n\r\nSo setting `-DependencyVersion Highest` is not working now, is it a bug?\r\n\r\nI also tried to edit `C:\\Users\\ASUS\\AppData\\Roaming\\NuGet\\NuGet.Config` adding \r\n```\r\n  <config>\r\n    <add key=\"DependencyVersion\" value=\"Highest\" />\r\n  </config>\r\n```\r\nNot working.\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"21940738289","Type":"IssuesEvent","CreatedAt":"2022-05-23T17:49:10","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11829","RelatedDescription":"Opened issue \"Compatibility tenet work\" (#11829) at NuGet/Home","RelatedBody":""},{"Id":"21940295002","Type":"IssuesEvent","CreatedAt":"2022-05-23T17:21:23","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11828","RelatedDescription":"Opened issue \"[Bug]: Installing a package in Visual Studio when using central package management results in an error before projects can be modified\" (#11828) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nLatest\n\n### Worked before?\n\nNo\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nWhen installing a new package in Visual Studio, NuGet attempts to preview the restore by modifying the graph and running the restore without committing it to disk.  However, the package dependency that gets added to the graph does not take into account that central package management is in use so the preview restore fails.  We need to update this code to modify the restore graph and take CPM into account.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3e6b1e48ad1d54563e0dd1370eece3d163a5e79f/src/NuGet.Core/NuGet.ProjectModel/PackageSpecOperations.cs#L145-L150\n\n### Verbose Logs\n\n_No response_"},{"Id":"21940028602","Type":"IssuesEvent","CreatedAt":"2022-05-23T17:05:22","Actor":"jonathan-hamilton","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11827","RelatedDescription":"Closed issue \"[Bug]: \" (#11827) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nVS 2019, .netcore 4.0\n\n### Worked before?\n\nno\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nCreate console app .net framework\r\n\r\nIn VS, Tools/Nuget Package Manager/ Manage Nuget Packages for Solution, install Microsoft.Azure.Cosmos any version\r\n\r\ninstall fails with error below\r\n\r\n(the same thing happens when you follow the suggestion and clear the http-cache)\n\n### Verbose Logs\n\n```shell\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU3008\tPackage 'Microsoft.Azure.Cosmos 3.27.0' from source 'https://api.nuget.org/v3/index.json': The package integrity check failed. The package has changed since it was signed. Try clearing the local http-cache and run nuget operation again.\n```\n"},{"Id":"21939401831","Type":"IssuesEvent","CreatedAt":"2022-05-23T16:28:48","Actor":"jonathan-hamilton","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11827","RelatedDescription":"Opened issue \"[Bug]: \" (#11827) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nVS 2019, .netcore 4.0\n\n### Worked before?\n\nno\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nCreate console app .net framework\r\n\r\nIn VS, Tools/Nuget Package Manager/ Manage Nuget Packages for Solution, install Microsoft.Azure.Cosmos any version\r\n\r\ninstall fails with error below\r\n\r\n(the same thing happens when you follow the suggestion and clear the http-cache)\n\n### Verbose Logs\n\n```shell\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU3008\tPackage 'Microsoft.Azure.Cosmos 3.27.0' from source 'https://api.nuget.org/v3/index.json': The package integrity check failed. The package has changed since it was signed. Try clearing the local http-cache and run nuget operation again.\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":249,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-05-24T03:30:23.8069432Z","RunDurationInMilliseconds":1376}