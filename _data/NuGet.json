{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20423858498","Type":"IssuesEvent","CreatedAt":"2022-02-24T00:16:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9019","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Job feature flag refreshers are not stopped in a `finally` block\" (#9019) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nJob feature flag refreshers are not stopped in a `finally` block.\r\n\r\nExample: https://github.com/NuGet/NuGet.Jobs/blob/14d1ab2f5761a2cfab77ce1b9d8d8cf94dc87ed4/src/NuGet.Services.AzureSearch/AzureSearchJob.cs#L37\r\n\r\nThis causes job loop failures (exceptions) to skip this stop step and that background task to continue on forever (until the process is ended). Because we dispose the DI container per job loop (as of https://github.com/NuGet/NuGet.Jobs/pull/1013), this causes these \"leaked\" tasks to log more and more exceptions. The exception message looks like this:\r\n\r\n```\r\nInstances cannot be resolved and nested lifetimes cannot be created from this LifetimeScope as it has already been disposed.\r\n```\r\n\r\n\r\n\r\n\n\n### Repro Steps\n\nIntermittent, e.g. due to a networking issue causing Catalog2AzureSearch to fail.\n\n### Expected Behavior\n\nThe feature flag refresher should be started and stopped per job loop, no matter if the job loop succeeds or fails.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20423650962","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:56:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8983","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Why have download counts not updated?\" (#8983) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n![image](https://user-images.githubusercontent.com/68726706/152710149-915b98a4-58c0-4bfa-aca8-aa2d1c82e724.png)\r\nEPPlus 4 days without download data\n\n### Repro Steps\n\nhttps://www.nuget.org/packages/EPPlus/\n\n### Expected Behavior\n\nnodejs.org every day update data, but nuget org looks like not \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20423645213","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:55:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9012","RelatedDescription":"Closed issue \"[NuGet.org ]:  Why is the download number Always 0\" (#9012) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe download of our latest version 8.0.7 is 0 as:\r\n\r\n![image](https://user-images.githubusercontent.com/9426627/154775237-89ea667d-cf09-4944-9f69-110c0d54a8d8.png)\r\n\r\nWhat's wrong with this version? because all other versions have a download number.\r\n\r\n\r\n\r\n\n\n### Repro Steps\n\nGo to nuget.org, search for microsoft.aspnetcore.odata\n\n### Expected Behavior\n\nShould have the download number.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20423628358","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:54:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9018","RelatedDescription":"Opened issue \"[Service degradation] Package download counts are delayed by several weeks\" (#9018) at NuGet/NuGetGallery","RelatedBody":"As mentioned in NuGet.org's [status page](https://status.nuget.org/):\r\n\r\n> **Package download statistics are delayed. Download logs have been processed up to February 11th, 2022.** Download count statistics are currently being ingested at a reduced rate. This is resulting in download counts on packages not reflecting their latest status. We apologize for the inconvenience and are actively working on a solution.\r\n>\r\n> Our current plan forward is to accelerate our migration to a new statistics pipeline which will help us overcome the scaling issues that we have encountered.\r\n\r\nTo provide a bit more context: our team has been using a SQL-based statistics data warehouse solution which has had more and more scaling issues over the years. We have been working for several months on a new solution based on [Azure Synapse Analytics](https://azure.microsoft.com/en-us/services/synapse-analytics/) which will help us overcome the growing volume of download logs that we process.\r\n\r\nThe download logs are processed in order for use to generate various statistics reports (most notably the total download counts showing in many UI experiences). This new Synapse-based infrastructure will also allow us to more easily add new reports and statistics features in the future as well as keep up with the wonderful growth of the .NET ecosystem.\r\n\r\nThe old pipeline began to fall behind on log ingestion in mid-January before our planned migration to the new pipeline had completed. This was a surprise to us. Fortunately, our new pipeline is not far off from being ready for production usage. There were some remaining steps of hardening the monitoring as well and log reflow edge cases that we wanted complete prior turning off the old pipeline and activating the new one. To avoid investing engineering effort into the older stats pipeline (essentially throwaway work), we chose to focus our efforts on the migration to the new pipeline.\r\n\r\nWe anticipate during the next week or two (week of February 28th or March 6th) to have these final stabilization steps for the new pipeline completed and the reports produced by the new pipeline (i.e. parity with existing behavior on the old pipeline) to be activated on NuGet.org.\r\n\r\nIn the interim, you will continue to see delayed download counts as the old pipeline stoically churns to through a big pile of log files. No download counts have been lost and we anticipate the new pipeline to quickly churn through the backlog of logs at a satisfactory rate.\r\n\r\nWhen the issue is resolved, we will clear the status page and close this issue."},{"Id":"20423229199","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:16:28","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9017","RelatedDescription":"Closed issue \"Dev Secret Expiration Tracker synthetics job uses SharedAccesKeys for service bus\" (#9017) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20423220492","Type":"IssuesEvent","CreatedAt":"2022-02-23T23:15:46","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9017","RelatedDescription":"Opened issue \"Dev Secret Expiration Tracker synthetics job uses SharedAccesKeys for service bus\" (#9017) at NuGet/NuGetGallery","RelatedBody":"With the work done to migrate all service bus jobs to use managed identity we have one Job - Synthetics SecretExpirationTracker-DEV instance that still uses the shared access key. It uses `Dev-ServiceBus-SharedAccessKey-SecretExpiration-Job` secret from the keyvault to fetch the messages about secrets that are going to expire stored in the Dev keyvaults.\n\nThe issue is that the synthetics uses its own managed identity called `msazgs-prd-nugetservice-msi`. \n\n```\n\"managedServiceIdentity\": {\n   \"displayName\": \"msazgs-prd-nugetservice-msi\",\n   \"clientId\": \"d8494ec9-8fb1-49dc-9f62-53500ce33986\",\n   \"objectId\": \"67977922-14dc-4e75-bca0-193e08735c1b\",\n   \"tenantId\": \"33e01921-4d64-4f8c-a055-5bdaffd5e33d\" \n}\n```\n\nThis identity is set in AME tenant and our DEV resources are in CORP tenant. This identity is not discoverable when adding the  Service bus Sender/Receiver roles in portal.\n\nThis managed identity was added for the DEV keyvault using the Azure CLI commands, which specifically allowed adding cross tenant identities. From cursory investigation it doesn't seem to work that way for service bus, we need to investigate and add that managed identity for dev service bus resources. Possibly reach out to the synthetics team to seek solutions.\n\n"},{"Id":"20422449661","Type":"PullRequestEvent","CreatedAt":"2022-02-23T22:14:36","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9016","RelatedDescription":"Merged pull request \"[TFM Display] Display empty version with only the framework name as badge.\" (#9016) at NuGet/NuGetGallery","RelatedBody":"* If a package asset contains an empty version, it won't show 0.0 on the badge component, just the framework name.\r\n\r\n### Screenshots\r\n\r\n#### Before\r\n![Before](https://user-images.githubusercontent.com/17834924/155406512-750e7968-4d91-4bb1-9191-4ba3d88f7036.png)\r\n\r\n#### After\r\n![After](https://user-images.githubusercontent.com/17834924/155406537-e88ed067-a35d-4d4e-914a-6ce6d9ade3af.png)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4259"},{"Id":"20421410934","Type":"PullRequestEvent","CreatedAt":"2022-02-23T21:01:50","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9016","RelatedDescription":"Opened pull request \"[TFM Display] Display empty version with only the framework name as badge.\" (#9016) at NuGet/NuGetGallery","RelatedBody":"* If a package asset contains an empty version, it won't show 0.0 on the badge component, just the framework name.\r\n\r\n### Screenshot\r\n#### Before\r\n![Before](https://user-images.githubusercontent.com/17834924/155406512-750e7968-4d91-4bb1-9191-4ba3d88f7036.png)\r\n\r\n#### After\r\n![After](https://user-images.githubusercontent.com/17834924/155406537-e88ed067-a35d-4d4e-914a-6ce6d9ade3af.png)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4259"},{"Id":"20413012757","Type":"IssuesEvent","CreatedAt":"2022-02-23T13:24:30","Actor":"jzabroski","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9015","RelatedDescription":"Opened issue \"[Feature]: Tool Packages should display differently than library packages \" (#9015) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nIf you go to nuget.org/packages/Wyam , you will see the following informational messages :\r\n\r\n* Frameworks tab: \r\n    > There are no supported framework assets in this package.\r\n    > \r\n    > *Learn more about [Target Frameworks](https://docs.microsoft.com/dotnet/standard/frameworks) and [.NET Standard](https://docs.microsoft.com/dotnet/standard/net-standard).*\r\n* Dependencies tab:\r\n    > This package has no dependencies.\r\n\r\n![Screenshot_20220223-070514_Samsung Internet](https://user-images.githubusercontent.com/447485/155326658-5fdbc995-9de3-475c-b8d2-039774e95d34.jpg)\r\n\r\n![Screenshot_20220223-081717_Samsung Internet](https://user-images.githubusercontent.com/447485/155326847-55c5e7dd-a222-4959-a4b3-0a6758803430.jpg)\r\n\n\n### The Elevator Pitch\n\nNuget.org is really confusing even to people with 20 years experience like me. This is one example that always confuses and confounds me.\n\n### Additional Context and Details\n\nThere are likely at least 3 types of Tool packages:\r\n* nuget v1 - v2.1 style packages us old timers used to use before .NET Global Tools came out\r\n* .netcoreapp2.1 tools\r\n* .netcoreapp3.0 tools"},{"Id":"20399700139","Type":"IssuesEvent","CreatedAt":"2022-02-22T19:43:21","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9014","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Intermittent 500: https://api-v2v3search-0.nuget.org/query?\" (#9014) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nUsing a browser, or other http client, navigate to **https://api-v2v3search-0.nuget.org/query?q=PackageId:AWSSDK.AWSSupport&prerelease=true**\r\n\r\nReload the page several times.\r\n\r\nOn at least one reload, observe error message:\r\n\r\n```\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n```\r\n\r\n### Repro Steps\r\n\r\nSteps to reproduce this behavior\r\n\r\n1. Navigate to https://api-v2v3search-0.nuget.org/query?q=PackageId:AWSSDK.AWSSupport&prerelease=true\r\n2. Refresh page several times\r\n3. Observe page intermittently returns 500 error.\r\n\r\n### Expected Behavior\r\n\r\nNavigating to https://api-v2v3search-0.nuget.org/query?q=PackageId:AWSSDK.AWSSupport&prerelease=true should never return a 500 error.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/1190907/155009635-3ca8bd6c-4803-47b2-a12c-b0d625c1e537.png)\r\n\r\n### Additional Context and logs\r\n\r\nWe have automated monitoring of our packages in NuGet that verify available version history once every 30 minutes.\r\n\r\nWe first observed a degraded experience on Feb 21st 2022 at approximately 16:10 UTC"},{"Id":"20399000611","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:58:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9007","RelatedDescription":"Closed issue \"[Bug]: SearchQueryService doesnt find System.CommandLine\" (#9007) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product Used\r\n\r\nOther/NA\r\n\r\n### Product Version\r\n\r\nhttps://azuresearch-usnc.nuget.org\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\n```\r\nhttps://azuresearch-usnc.nuget.org/query?q=system.commandline\r\n```\r\n\r\nneither\r\n\r\n```\r\nnuget search System.CommandLine\r\n```\r\n\r\nif you do\r\n\r\n```\r\nnuget search System.CommandLine -PreRelease\r\n```\r\nthat works,\r\n\r\nbut\r\n\r\n```\r\nhttps://azuresearch-usnc.nuget.org/query?q=system.commandline&prerelease=true\r\n```\r\n\r\nstill doesn't show anything\r\n\r\n-- compare to --\r\n\r\nnuget.org and search for System.CommandLine which actually shows the package\r\n\r\nwhy can't these be found\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20422942976","Type":"PullRequestEvent","CreatedAt":"2022-02-23T22:52:52","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11446","RelatedDescription":"Merged pull request \"Spec for machine readable json output for dotnet list package\" (#11446) at NuGet/Home","RelatedBody":"## Bug\r\n\r\nFixes: https://github.com/NuGet/Home/issues/11449\r\nRelated: https://github.com/NuGet/Home/issues/7752\r\n\r\n## Description\r\n\r\nMany organization are required by [regulation](https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/) to audit packages that they're using in repository. It is difficult to parse the output of dotnet list package.  Without having a good way to parse the output of this command, it makes it difficult to structure the list of packages in a way that can be fed into another auditing system.\r\nIn this spec design proposal, I tried to address `json` output part, for `parsable` format output it needs own spec.\r\nFor this purpose, I added below 2 new options for all `dotnet list package` commands.\r\n\r\n* `--format <FORMAT>`\r\n`<FORMAT>` - Allowed values as part of spec is `json`. Also `text` is acceptable input value too, it'll just output current cli output. (In the future `parseable`, `csv`, `yaml`, `xml` could be candidates.)\r\n\r\n```dotnetcli\r\ndotnet list [<PROJECT>|<SOLUTION>] package [--config <SOURCE>]\r\n    [--deprecated]\r\n    [--framework <FRAMEWORK>] [--highest-minor] [--highest-patch]\r\n    [--include-prerelease] [--include-transitive] [--interactive]\r\n    [--outdated] [--source <SOURCE>] [-v|--verbosity <LEVEL>]\r\n    [--vulnerable]\r\n    [--format <FORMAT>]\r\n\r\ndotnet list package -h|--help\r\n```\r\n\r\n[Rendered view](https://github.com/NuGet/Home/blob/a23955149092f7b94354ced79060b466fb6af5b3/proposed/2021/MachineReadableOutput.md)\r\n\r\nTo do:  \r\n* Rename spec md file to `DotnetListPackageMachineReadableJsonOutput.md`\r\n* Get community input https://twitter.com/nuget/status/1470426335705239557\r\n* Get explicit approval from stake holders\r\n* packages.lock.json format looks very similar what we want, code/schema could be reused.\r\n* Single json schema"},{"Id":"20422942933","Type":"IssuesEvent","CreatedAt":"2022-02-23T22:52:51","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11449","RelatedDescription":"Closed issue \"Create spec for machine readable json output for \"dotnet list package\"\" (#11449) at NuGet/Home","RelatedBody":"Sub issue of https://github.com/NuGet/Home/issues/7752, `json` output spec only.\r\n\r\nMany organizations are required by regulation to audit packages that they're using in a repository.\r\n\r\nCurrently there's no easy way to produce a Software Bill of Material (SBOM) output which can be consumed by another auditing system or kept for records.\r\nTo do:\r\n* Rename spec md file to `DotnetListPackageMachineReadableJsonOutput.md`"},{"Id":"20417460174","Type":"IssuesEvent","CreatedAt":"2022-02-23T16:59:36","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11616","RelatedDescription":"Opened issue \"[Bug]: Revert mitigation of missing nuget.org when other tools create nuget.config\" (#11616) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\ndotnet 6.0.200, NuGet 6.1\n\n### Worked before?\n\ndotnet 6.0.100, NuGet 6.0\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nhttps://github.com/NuGet/Home/issues/11387 attempted to mitigate an issue when other tools (primarily Chocolatey and PowerShell's NuGet module) created a user-profile nuget.config file without any nuget.org package source defined.\r\n\r\nThat fix is now causing a lot more customers problems with errors reporting that nuget.config is being used by another process, or nugetorgadd.trk is being used. Note that it's not just other processes using the file, but also codepaths running in parallel trying to create the default config at the same time. While RestoreCommand (I believe) reads the config file before starting parallel tasks, NuGetSDKResolver from msbuild, and `dotnet tool restore` both invoke NuGet in parallel, preventing an easy \"load config single threaded, then do work in parallel\".\r\n\r\nSince Chocolatey stopped writing a user-profile nuget.config on clean machines, the only known issue is Windows PowerShell's NuGet module, but the number of customers were small, much smaller than the number of customers affected by the \"file is being used\" error.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":42,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-02-24T03:30:26.9451622Z","RunDurationInMilliseconds":1506}