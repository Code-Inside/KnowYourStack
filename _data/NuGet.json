{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40966248623","Type":"IssuesEvent","CreatedAt":"2024-08-13T00:32:53","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10065","RelatedDescription":"Reopened issue \"[NuGet.org Bug]: Dark mode README table issue\" (#10065) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Describe the bug\r\n\r\nWhen viewing a NuGet package using dark mode, every second table row in the README is unreadable because the background and text are the same color.\r\n\r\n### Repro Steps\r\n\r\n1. Use dark mode\r\n2. Go to https://www.nuget.org/packages/RMN.Blazor.DragDrop\r\n3. Find the table in the README\r\n\r\n### Expected Behavior\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/156656650/72b9213b-bebc-4b1a-9fef-fadab5a6be6c)\r\n\r\n### Screenshots\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/156656650/fa5f9390-3d01-4c57-85ca-d5ff31f400fd)\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"40900887987","Type":"PullRequestEvent","CreatedAt":"2024-08-09T16:58:03","Actor":"clairernovotny","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10122","RelatedDescription":"Merged pull request \"Packaging for LogIntegration\" (#10122) at NuGet/NuGetGallery","RelatedBody":"A building block for NuGet/Engineering#5082\n\nAdds packaging support to create a wheel file using Poetry"},{"Id":"40898073804","Type":"PullRequestEvent","CreatedAt":"2024-08-09T15:11:40","Actor":"clairernovotny","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10122","RelatedDescription":"Opened pull request \"Cnov-statslogparser-packaging\" (#10122) at NuGet/NuGetGallery","RelatedBody":"A building block for NuGet/Engineering#5082\n\nAdds packaging support to create a wheel file using Poetry"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40964172384","Type":"IssuesEvent","CreatedAt":"2024-08-12T22:20:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13701","RelatedDescription":"Opened issue \"Document: RestoreUseLegacyDependencyResolver \" (#13701) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/5964"},{"Id":"40964053694","Type":"IssuesEvent","CreatedAt":"2024-08-12T22:14:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13700","RelatedDescription":"Opened issue \"Add property for toggling the to the previous NuGet resolver: RestoreUseLegacyDependencyResolver  \" (#13700) at NuGet/Home","RelatedBody":""},{"Id":"40963554228","Type":"IssuesEvent","CreatedAt":"2024-08-12T21:48:32","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13699","RelatedDescription":"Opened issue \"Drive insertion of new dependency graph resolution algorithm\" (#13699) at NuGet/Home","RelatedBody":"The new dependency graph algorithm is merged and we need to drive the insertion process\r\n\r\n- [ ] Create release (https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1544075)\r\n- [ ] Get test results from vendors\r\n- [ ] Get test results from a few internal repos\r\n- [ ] Monitor VS insertion\r\n- [ ] Monitor dotnet insertion"},{"Id":"40962732169","Type":"IssuesEvent","CreatedAt":"2024-08-12T21:10:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13643","RelatedDescription":"Closed issue \"Can not install signed package with certificate chain building issue\" (#13643) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, MSBuild.exe, NuGet.exe\r\n\r\n### Product Version\r\n\r\ndotnet 8.0.303, dev nuget.exe\r\n\r\n### Worked before?\r\n\r\nAccording to https://github.com/mbdavid/LiteDB/issues/1874 may worked in dotnet 3.1\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nThis bug is related to https://github.com/mbdavid/LiteDB/issues/1874.\r\n\r\nWe are trying to install/restore LiteDB, which is signed with certificate, issued by ssl.com. \r\n![image](https://github.com/user-attachments/assets/35940b88-b4d2-4b4b-90f8-3915d14e1081)\r\n\r\nFor CI/CD we are using Windows Server 2022 21H2 20348.2461 without SSL.com trusted root certificate installed, but with [certificate trust list](http://ctldl.windowsupdate.com/msdownload/update/v3/static/trustedr/en/authrootstl.cab), and on this list, we have an issue with certificate in the chain.\r\n\r\n![image](https://github.com/user-attachments/assets/c22a5443-fd43-429f-a343-8736d1b3876f)\r\n\r\nI understand that we have to fix issue with certificate, but I expect that nuget should be able to install this package in `signatureValidationMode=accept`.\r\n\r\nThe problem starts here \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Packaging/Signing/Utility/VerificationUtility.cs#L28-L34\r\n\r\nСonverts `SignatureVerificationStatusFlags.ChainBuildingFailure` into `SignatureVerificationStatus.Disallowed`\r\n\r\nAnd then this leads to `NuGet.Packaging.Signing.SignatureException` here (`verifyResult.IsValid is false`)\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Packaging/PackageExtractor.cs#L1034-L1072\r\n\r\nAnd remove downloaded files.\r\n\r\nnuget.exe install litedb:\r\n\r\n```console\r\nError downloading 'LiteDB.5.0.21 : System.Buffers [4.5.1, )' from 'xxx'.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Error downloading 'LiteDB.5.0.21 : System.Buffers [4.5.1, )' from 'xxx'. ---> NuGet.Packaging.Signing.SignatureException\r\n   at NuGet.Packaging.PackageExtractor.<VerifyPackageSignatureAsync>d__9.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 1073\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.Packaging.PackageExtractor.<>c__DisplayClass3_2.<<InstallFromSourceAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 520\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__5`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Common\\ConcurrencyUtilities.cs:line 102\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__5`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Common\\ConcurrencyUtilities.cs:line 117\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Packaging.PackageExtractor.<InstallFromSourceAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 390\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GlobalPackagesFolderUtility.<AddPackageAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GlobalPackagesFolderUtility.cs:line 121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GetDownloadResultUtility.<>c__DisplayClass3_0.<<GetDownloadResultAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GetDownloadResultUtility.cs:line 90\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass18_0`1.<<ProcessStreamAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 252\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__20`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 291\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<ProcessStreamAsync>d__18`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 239\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GetDownloadResultUtility.<GetDownloadResultAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GetDownloadResultUtility.cs:line 111\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.V2FeedParser.<DownloadFromUrl>d__44.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\V2FeedParser.cs:line 275\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.DownloadResourceV2Feed.<GetDownloadResourceResultAsync>d__4.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\DownloadResourceV2Feed.cs:line 76\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.DownloadResourceV2Feed.<GetDownloadResourceResultAsync>d__4.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\DownloadResourceV2Feed.cs:line 106\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackageDownloader.<GetDownloadResourceResultAsync>d__1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackageDownloader.cs:line 302\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackagePreFetcher.<>c__DisplayClass0_1.<<GetPackagesAsync>b__4>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcher.cs:line 130\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackagePreFetcherResult.<EnsureResultAsync>d__24.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcherResult.cs:line 113\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.PackagePreFetcherResult.<GetResultAsync>d__25.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcherResult.cs:line 146\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2655\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2691\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2823\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<InstallPackageAsync>d__53.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 449\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.CommandLine.InstallCommand.<InstallPackageAsync>d__38.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Commands\\InstallCommand.cs:line 403\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.CommandLine.Command.Execute() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Commands\\Command.cs:line 182\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args) in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Program.cs:line 166\r\n```\r\ndotnet restore\r\n\r\n```console\r\n                   \"C:\\Temp\\Temp.csproj\" (Restore target) (1) ->\r\n                   (Restore target) ->\r\n                     C:\\Temp\\Temp.csproj : warning NU3012: Package 'LiteDB 5.0.21' from source 'xxx': The author primary signature found a chain building issue: CtlNotValidForUsage: The certificate is not valid for the requested usage.\r\n                     C:\\Temp\\Temp.csproj : warning NU3012: Package 'LiteDB 5.0.21' from source 'xxxx': The author primary signature found a chain building issue: NotValidForUsage: The certificate is not valid for the requested usage.\r\n\r\n\r\n                   \"C:\\Temp\\Temp.csproj\" (Restore target) (1) ->\r\n                   (Restore target) ->\r\n                     C:\\Program Files\\dotnet\\sdk\\8.0.303\\NuGet.targets(169,5): error MSB4181: The \"RestoreTask\" task returned false but did not log an error. [C:\\Temp\\Temp.cspr\r\n                   oj]\r\n\r\n    2 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\ndotnet add package litedb\r\n\r\n```console\r\ninfo : Package 'LiteDB 5.0.21' from source 'xxx': Verifying author primary signature's timestamp with timestamping service certificate:\r\ninfo :   Subject Name: CN=DigiCert Timestamp 2023, O=\"DigiCert, Inc.\", C=US\r\ninfo :   SHA1 hash: 66F02B32C2C2C90F825DCEAA8AC9C64F199CCF40\r\ninfo :   SHA256 hash: D2F6E46DED7422CCD1D440576841366F828ADA559AAE3316AF4D1A9AD40C7828\r\ninfo :   Issued by: CN=DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA, O=\"DigiCert, Inc.\", C=US\r\ninfo :   Valid from: 7/14/2023 12:00:00 AM to 10/13/2034 11:59:59 PM\r\ninfo : Package 'litedb' is compatible with all the specified frameworks in project 'C:\\Temp\\Temp.csproj'.\r\nerror: Value cannot be null. (Parameter 'path1')\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"40961624666","Type":"IssuesEvent","CreatedAt":"2024-08-12T20:25:51","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13698","RelatedDescription":"Opened issue \"Show transitive status of package for each project in Solution-level Details Pane\" (#13698) at NuGet/Home","RelatedBody":"Similiarly to how we show in the projects check list which version of the package is installed in which project, we also want to show if the package is transitive in the project. However, we don't want to recompute this information for each project because that's expensive and we've already done the work. So, we should consider how we can pass the \"transitiveOriginsCache\" which will now have the project as the first layer, and use it to find if the package is transitively installed in the given project."},{"Id":"40961589893","Type":"IssuesEvent","CreatedAt":"2024-08-12T20:24:26","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13697","RelatedDescription":"Opened issue \"Show vulnerability data for solution-level transitive packages\" (#13697) at NuGet/Home","RelatedBody":"Make transitive packages in Solution PM UI query the vulnerability service to see if it is vulnerable and display the vulnerability indicator in the packages list."},{"Id":"40961508625","Type":"IssuesEvent","CreatedAt":"2024-08-12T20:21:11","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13696","RelatedDescription":"Opened issue \"Change algorithm to compute transitive origins for each project\" (#13696) at NuGet/Home","RelatedBody":"We will need to change the transitive origins cache to add an extra parent layer that represents the project. The Solution Level PM UI needs to compute transitive origins for each project and the Project level PM UI does as well, but it will be for a single project."},{"Id":"40960431047","Type":"IssuesEvent","CreatedAt":"2024-08-12T19:38:48","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13695","RelatedDescription":"Opened issue \"Fetch transitive packages for all PM UI levels\" (#13695) at NuGet/Home","RelatedBody":"In its simplified form, this involves removing the IsSolution checks for code that queries for transitive packages and adjusting the code to handle the Solution-level PM UI scenarios."},{"Id":"40958431729","Type":"IssuesEvent","CreatedAt":"2024-08-12T18:22:11","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13692","RelatedDescription":"Closed issue \"NuGet's dependency graph resolution algorithm does not scale well for large graphs\" (#13692) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nNuGet's current dependency graph resolution algorithm can be rather slow for large, complex graphs.  It walks the entire tree and for each level expands out every single node. This creates more of a tree representation but also includes duplicates.  Consider a popular package, `PackageX`, that might show up as a common dependency for lots of packages.  NuGet will create a graph in memory like this:\r\n\r\n```\r\nProjectA\r\n ├─ PackageA\r\n │  └─ PackageX\r\n │     ├─ PackageY\r\n │     └─ PackageZ\r\n ├─ PackageB\r\n │  └─ PackageX\r\n │     ├─ PackageY\r\n │     └─ PackageZ\r\n ├─ PackageC\r\n │  └─ PackageX\r\n │     ├─ PackageY\r\n │     └─ PackageZ\r\n ├─ PackageD\r\n │  └─ PackageX\r\n │     ├─ PackageY\r\n │     └─ PackageZ\r\n └─ PackageE\r\n    └─ PackageX\r\n       ├─ PackageY\r\n       └─ PackageZ\r\n```\r\n\r\nIn restores for large repos internal to Microsoft, individual projects end up with _millions_ of nodes in the graph. \r\n\r\nAfter create the graph, NuGet then walks through the graph N times looking for versions to eclipse, detecting cycles, detecting version conflicts, and detecting downgrades.  Walking millions of nodes several times causes restore times for 2,500 projects to be around 15 minutes.\n\n### Desired Behavior\n\nWe should rewrite the dependency graph resolution algorithm to be linear by having it only walk each node once, resolving versions as it goes.  Doing this in a single pass will greatly reduce the amount of time it takes to resolve complex graphs.\n\n### Additional Context\n\n_No response_"},{"Id":"40944563309","Type":"IssuesEvent","CreatedAt":"2024-08-12T11:19:05","Actor":"meokullu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13694","RelatedDescription":"Opened issue \"Default tab selection on Manage NuGet Packages\" (#13694) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nDefault tab selection is \"Installed\" while there are Browse, Installed and Updates tabs on fresh created empty project.\r\n![Screenshot 2024-08-12 141420](https://github.com/user-attachments/assets/bd417e4c-99c6-4455-acd5-429d96a347fa)\r\n\n\n### Desired Behavior\n\nDefault tab should be selected \"Browse\" instead of Installed on fresh created empty project.\r\n\n\n### Additional Context\n\nThousands of users use NuGet. A few seconds of UI improvements may result saving time, energy thus leads greener world."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-13T03:30:19.7426289Z","RunDurationInMilliseconds":919}