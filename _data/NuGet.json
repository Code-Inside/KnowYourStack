{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39855960634","Type":"PullRequestEvent","CreatedAt":"2024-07-04T00:56:47","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10057","RelatedDescription":"Merged pull request \"Explicitly triggering release pipelines\" (#10057) at NuGet/NuGetGallery","RelatedBody":"Existing trigger pipeline does not pass through triggering pipeline properly, so instead I wrote a script that just starts target pipelines explicitly using AzDO REST API.\r\n\r\nHad to add a parameter to this pipeline that contains information about target pipelines because only parameters support complex values (arrays, objects)."},{"Id":"39855793223","Type":"PullRequestEvent","CreatedAt":"2024-07-04T00:43:56","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10057","RelatedDescription":"Opened pull request \"Explicitly triggering release pipelines\" (#10057) at NuGet/NuGetGallery","RelatedBody":"Existing trigger pipeline does not pass through triggering pipeline properly, so instead I wrote a script that just starts target pipelines explicitly using AzDO REST API.\r\n\r\nHad to add a parameter to this pipeline that contains information about target pipelines because only parameters support complex values (arrays, objects)."},{"Id":"39853442437","Type":"PullRequestEvent","CreatedAt":"2024-07-03T21:50:13","Actor":"NeuroXiq","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10056","RelatedDescription":"Opened pull request \"[Feature]: DNDocs #10055\" (#10056) at NuGet/NuGetGallery","RelatedBody":"Created a link to DNDocs in similar way like FuGet does.\r\nCreated Unit Tests \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"39853231162","Type":"IssuesEvent","CreatedAt":"2024-07-03T21:37:56","Actor":"NeuroXiq","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10055","RelatedDescription":"Opened issue \"[Feature]: DNDocs\" (#10055) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nhttps://github.com/NuGet/NuGetGallery/issues/6946\r\nhttps://github.com/NuGet/NuGetGallery/issues/9776\n\n### The Elevator Pitch\n\n## Short description\r\nLooking on github.com repositories and nuget.org packages I noticed that lots of them does not\r\nhave documentation online. If I want to see classes, methods etc. I need to open source code \r\nand look in the C# code about implemented feature. This is cumbersome.\r\n\r\nI created DNDocs to host API Explorer exactly for this problem:\r\nhttps://dndocs.com/i/nuget/AutoMapper/13.0.1\r\nhttps://dndocs.com/i/nuget/Microsoft.EntityFrameworkCore/8.0.3\r\n\r\n### Long description\r\nDNDocs is a simple API Explorer (documentation hosting platform).\r\nDNDocs allows to generate and host API Docs online using [Docfx](https://dotnet.github.io/docfx/).\r\nAfter generating a project, server do not delete it - generated docs are stored on the server disk\r\n(cached) and available immediately after generation. So generating occurs only once\r\nand can took 1-5 minutes and then Docs are  accessible immediately.\r\n\r\nTo Explore nuget package replace values in URL and open the page:\r\n`https://dndocs.com/i/nuget/{NugetPackageName}/{NugetPackageVersion}`\r\nWait 1-5 minutes (if server generate is for the first time) and just click green button\r\non the right.\r\n\r\n### Additional informations\r\nFor example, people want to have API Explorer and I think DocFX can fit well here:\r\n\r\nhttps://github.com/NuGet/NuGetGallery/issues/6946\r\nhttps://github.com/NuGet/NuGetGallery/issues/9776\r\n\r\nAnd also some people on github hosts docs on DNDocs:\r\nhttps://github.com/madelson/DistributedLock\r\nhttps://github.com/betalgo/openai\r\nhttps://github.com/adamhathcock/sharpcompress\r\n\r\n### Summary\r\nSo thats all what I want to say in this request.\r\nI would like to hear Your opinion about this feature and DNDocs project.\r\nDo You like it or not? I'm open to any and all ideas.\r\n\r\nBest Regards\r\nMarek Węglarz / NeuroXiq\r\nhttps://github.com/NeuroXiq/DNDocs\r\n\r\n\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39817774281","Type":"PullRequestEvent","CreatedAt":"2024-07-02T21:50:49","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10043","RelatedDescription":"Merged pull request \"Support service principal\" (#10043) at NuGet/NuGetGallery","RelatedBody":"Partially addresses: https://github.com/NuGet/Engineering/issues/5448\r\n\r\nAdd function to support Service principal access blob storage.\r\n\r\nit was needed for synthetics jobs cross tenant access.\r\n\r\nTested for one FeatureFlag job in dev"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39853934957","Type":"IssuesEvent","CreatedAt":"2024-07-03T22:20:53","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13604","RelatedDescription":"Opened issue \"Enhance PMUI Package Source Display to Include allowInsecureConnections and Protocol Version Attributes\" (#13604) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nWhen Listing package sources in PMUI, reflect the attribute values of each package source.  Currently, name and url are incuded. Update PMUI to include \r\n* allowInsecureConnections\r\n* Protocol Version\r\nit would look as follows\r\n![image](https://github.com/NuGet/Home/assets/59111203/fd272e9f-26a7-48df-a758-3c1500a9109e)\r\n\r\n#### This should be completed for 17.12\r\n\r\nThis update should be implemented in version 17.12 to ensure a seamless transition to the unified settings in version 17.13, which will automatically include these attributes in the package sources list.\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39847661726","Type":"IssuesEvent","CreatedAt":"2024-07-03T17:37:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13563","RelatedDescription":"Closed issue \"Restore may write nulls to project.assets.json \" (#13563) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\n9.0.100-preview.5.24307.3\r\n\r\n### Worked before?\r\n\r\n9.0.100-preview.3.24204.13\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nSDK task ResolvePackageAssets throws NRE while enumerating `NuGet.ProjectModel.ProjectFileDependencyGroup.Dependencies`, which returns null. \r\n\r\nI'm guessing that's because the `project.assets.json` contains nulls in `projectFileDependencyGroups`, which it probably shouldn't. Somehow nuget restore managed to produce these:\r\n\r\n```\r\n\"libraries\": {},\r\n  \"projectFileDependencyGroups\": {\r\n    \".NETFramework,Version=v4.7.2\": [\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      \"Microsoft.DotNet.Build.Tasks.VisualStudio >= 9.0.0-beta.24317.3\",\r\n      \"Microsoft.Net.Compilers.Toolset >= 4.11.0-2.24270.4\",\r\n      \"Microsoft.VisualStudioEng.MicroBuild.Plugins.SwixBuild >= 1.1.286\"\r\n    ]\r\n  },\r\n```\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\9.0.100-preview.5.24307.3\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.NET.Build.Tasks.ProjectContext.<>c__DisplayClass31_0.<GetTopLevelDependencies>b__3(String projectFileDependency)\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter.ComputePackageExclusions()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() \r\n[D:\\R4\\src\\VisualStudio\\Setup\\Roslyn.VisualStudio.Setup.csproj]\r\n```\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\nCan share full binlog. DM me on Teams.\r\nSearching for `null,`:\r\n![image](https://github.com/NuGet/Home/assets/41759/1965540e-378c-4592-a304-bc9fb2ad84ab)\r\n"},{"Id":"39847399093","Type":"IssuesEvent","CreatedAt":"2024-07-03T17:26:48","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13603","RelatedDescription":"Opened issue \"Create a documentation for HTTP errors introduced for insecure sources\" (#13603) at NuGet/Home","RelatedBody":"Create a documentation for : https://github.com/NuGet/Home/issues/13289"},{"Id":"39846663523","Type":"IssuesEvent","CreatedAt":"2024-07-03T16:59:28","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13602","RelatedDescription":"Opened issue \"NuGet-based MSBuild project SDK resolver should include information about what NuGet.config files were used\" (#13602) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWhen the NuGet-based MSBuild project SDK resolver fails to restore an SDK package, it only provides information about errors encountered.  At least one user had an issue with a NuGet.config being included with unwanted feeds.  It was very difficult to figure out the problem since the NuGet-based MSBuild project SDK resolver doesn't provide that information like a normal NuGet restore does.  We should consider adding that so that users can better understand what's going on.\r\n\r\nReported at https://github.com/microsoft/MSBuildSdks/issues/558\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-05T03:30:18.4369274Z","RunDurationInMilliseconds":868}