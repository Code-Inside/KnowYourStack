{"Data":{"Blog":{"FeedItems":[{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"33206210730","Type":"IssuesEvent","CreatedAt":"2023-11-08T22:19:17","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9720","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The remote name could not be resolved: 'api.nuget.org'\" (#9720) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nI am using VS 2022 Enterprise using the following nuget feed url in package manager \r\n\r\nWhen i try to open Package manager UI and select nuget.org source to browse packages get the following error\r\n\r\nUnable to load the service index for source https://api.nuget.org/v3/index.json\r\n\r\nIt was all working fine for so many months but now it is not working at all.\r\nI have turned off all firewall settings.  just to be sure its not the problem\r\nAlso TLS 1.2 and 1.3 enabled in IE settings. \r\nThis is really frustrating. If you could please help ASAP that would be great\n\n### Repro Steps\n\nVS 2022 Enterprise edition\r\nWindows 11\r\n.NET 6 \r\n\r\nadded NuGet.config with the following settings \r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n        <packageSources>\r\n\t\t\t<clear />\r\n            <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n            <add key=\"OptimizelyFeed\" value=\"https://nuget.optimizely.com/feed/packages.svc/\" />\r\n        </packageSources>\r\n    </configuration>\r\n\r\nOpen C# webproject \r\nOpen Package manager UI from VS \r\nselect neuget source\r\nwill see this error in the output \n\n### Expected Behavior\n\nI should be able see packages available publicly i.e. NewtonSoft etc. \n\n### Screenshots\n\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/144935980/fc249563-d323-4cd9-8dfd-3f3e9edb0372)\r\n\r\n\n\n### Additional Context and logs\n\nTime Elapsed: 00:00:00.3658246\r\n========== Finished ==========\r\n\r\n\r\n[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  An error occurred while sending the request.\r\n  The remote name could not be resolved: 'api.nuget.org'\r\n"},{"Id":"33144149725","Type":"IssuesEvent","CreatedAt":"2023-11-07T04:38:07","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9728","RelatedDescription":"Opened issue \"Update IPackageVulnerabilitiesManagementService to allow batch updates.\" (#9728) at NuGet/NuGetGallery","RelatedBody":"As per the discussion at https://github.com/NuGet/NuGetGallery/pull/9712#discussion_r1372451267\r\nThis service should allow bulk updates to minimize impact on DB performance."},{"Id":"33129864494","Type":"IssuesEvent","CreatedAt":"2023-11-06T17:16:38","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9612","RelatedDescription":"Closed issue \"NuGet.exe and NuGet Packages Support Policy\" (#9612) at NuGet/NuGetGallery","RelatedBody":"- [x] Display a link for only the latest recent nuget.exe on the nuget.org downloads\n\n- [x] Add a collapsible section to nuget.org page"},{"Id":"33110879442","Type":"PullRequestEvent","CreatedAt":"2023-11-06T06:17:02","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9727","RelatedDescription":"Opened pull request \"Reject POST to report abuse if the reason isn't one we allow reporting from the form.\" (#9727) at NuGet/NuGetGallery","RelatedBody":"Should address an odd issue with support requests where we get reasons that we shouldn't be seeing in support DB."},{"Id":"33091428697","Type":"IssuesEvent","CreatedAt":"2023-11-04T13:35:34","Actor":"meokullu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9726","RelatedDescription":"Opened issue \"[Feature]: Encourage developers to share their profile and stats.\" (#9726) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nWhen user checking published packages on nuget.org website it is not encouraging developer to share it since there is no \"save it as photo\" or \"share it as photo\" option. User avatar and profile name should be added at somewhere of this table.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/59773207-dd40-4bc0-976c-f87b5c6dfa09)\r\n\r\nAlso, on profile data do look like a soap. It doesn't encourage to save or share data with others. Rather than a simple lines of texts and packages, metro design could be offered as option which packages could be seen on grid design.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/a93f4f63-44f9-44bc-aad5-ce373f49876e)\r\n\r\nThere is no option so see full stats by time, work-flow design could be used there. Also there should be also an option to save or share it as photo.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/0559ebc9-9bda-4a33-bca8-452d1e673a6c)\r\n\r\nContrast should be increased to enhance liability between rows.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/13a2eb98-e890-409d-9f6f-e7c36b818e9e)\r\n\r\nI would love to discuss about these.\r\n\r\nThanks.\r\n\n\n### The Elevator Pitch\n\nWould you like to hear amazing minor design enhancement that will encourage users to share they are happy to use Nuget?\r\n\r\nHere, there are a few example, how current users can help us to others which they didn't hear us yet.\r\n\r\nDing-dong -> elevator reaches to floor.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"33242225609","Type":"PullRequestEvent","CreatedAt":"2023-11-10T03:00:30","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12704","RelatedDescription":"Closed pull request \"Adds Visual Studio Filters & Sorts\" (#12704) at NuGet/Home","RelatedBody":"This proposal introduces two new ways to filter and sort packages in Visual Studio's NuGet Package Manager experience.\r\n\r\n[Rendered Proposal](https://github.com/NuGet/Home/blob/6225561b2aa85ddfe55024344155c7ec82ff8973/proposed/2023/vs-filters.md)\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"33241710713","Type":"IssuesEvent","CreatedAt":"2023-11-10T02:20:39","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12998","RelatedDescription":"Closed issue \"The `TestPackageSearchMetadata` class is dead code\" (#12998) at NuGet/Home","RelatedBody":"No references exist. Found while searching for `IPackageSearchMetadata` tests."},{"Id":"33240341352","Type":"IssuesEvent","CreatedAt":"2023-11-10T00:43:28","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13004","RelatedDescription":"Closed issue \"Author primary signing certificate not trusted\" (#13004) at NuGet/Home","RelatedBody":"Hello,\r\n\r\nI am facing a certificate invalid error when building a Windows docker image. Retires work sometimes but this has become a trend. A couple of them work but again they start failing for a few hours, then they work again.\r\nThe error occurs for different packages. Most of the time, it was for the cryptography ones below but this time, it was for 'Newtonsoft.Json 13.0.3'. The certificate is valid but I am still getting the error. \r\n\r\n**Logs below**:\r\n\r\n Package 'Newtonsoft.Json 13.0.3' from source 'https://api.nuget.org/v3/index.json': \r\n  Signature type: Author\r\n  Package 'Newtonsoft.Json 13.0.3' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Json.NET (.NET Foundation), O=Json.NET (.NET Foundation), L=Redmond, S=Washington, C=US, SERIALNUMBER=603 389 068, OID.1.3.6.1.4.1.311.60.2.1.2=Washington, OID.1.3.6.1.4.1.311.60.2.1.3=US, OID.2.5.4.15=Private Organization\r\n  Package 'Newtonsoft.Json 13.0.3' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: D60F9A9BD35829CCF4684D4B1E0B62EB3D982FCD55159F337348BB18EA25B8A7\r\n  Package 'Newtonsoft.Json 13.0.3' from source 'https://api.nuget.org/v3/index.json':   Valid from: 8/12/2021 7:00:00 PM to 10/29/2024 6:59:59 PM\r\n\r\n  Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json': \r\n  Signature type: Repository\r\n  Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=NuGet.org Repository by Microsoft, O=NuGet.org Repository by Microsoft, L=Redmond, S=Washington, C=US\r\n  Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 0E5F38F57DC1BCC806D8494F4F90FBCEDD988B46760709CBEEC6F4219AA6157D\r\n  Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json':   Valid from: 4/9/2018 7:00:00 PM to 4/14/2021 7:00:00 AM\r\nC:\\###.Services.csproj : error NU3018: Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature's signing certificate is not trusted by the trust provider. [C:\\src\\###.Web.csproj]\r\nC:\\###.Services.csproj : error NU3037: Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature validity period has expired. [C:\\src\\###Web.csproj]\r\nC:\\###.Services.csproj : error NU3028: Package 'runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature's timestamping certificate is not trusted by the trust provider. [C:\\src\\###.Web.csproj]\r\n\r\n\r\n**Docker Image used**:\r\nFROM mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-ltsc2019\r\n\r\nGoing through the forums, one suggestion was to try ENV DOTNET_NUGET_SIGNATURE_VERIFICATION=false. This didn't work either.\r\n\r\nWe are running on dotnet 6.0.4\r\n\r\nAny input is appreciated. \r\n"},{"Id":"33240194885","Type":"IssuesEvent","CreatedAt":"2023-11-10T00:33:24","Actor":"danmoseley","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13005","RelatedDescription":"Opened issue \" SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" returned null. produces ugly stack trace\" (#13005) at NuGet/Home","RelatedBody":"I got the following doing a restore on Ubuntu with 8.0.100-rtm.23512.16.\r\n\r\nI don't know what the repo is, but this issue is to change one frame here, perhaps `NuGet.Commands.RestoreRunner.RunWithoutCommit`, to handle AggregateException/FatalProtocolException and produce an error message instead of a callstack.\r\n\r\n```\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error : Could not resolve SDK \"Microsoft.DotNet.Arcade.Sdk\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :   SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" returned null.\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :   System.AggregateException: One or more errors occurred. (Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/internal/_packaging/dotnet-libraries-internal/nuget/v3/index.json.)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :  ---> NuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/internal/_packaging/dotnet-libraries-internal/nuget/v3/index.json.\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :  ---> System.Net.Http.HttpRequestException: Response status code does not indicate success: 401 (Unauthorized).\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.HttpSource.<>c__DisplayClass15_0`1.<<GetAsync>b__0>d.MoveNext()\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error : --- End of stack trace from previous location ---\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(dan@danmose50:~/git/runtime$\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    --- End of inner exception stack trace ---\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.ServiceIndexResourceV3Provider.TryCreate(SourceRepository source, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.Providers.VulnerabilityInfoResourceV3Provider.TryCreate(SourceRepository source, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.VulnerabilityInformationProvider.GetVulnerabilityInfoAsync()\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.VulnerabilityInformationProvider.GetVulnerabilityInformationAsync(CancellationToken cancellationToken)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.Restore.Utility.AuditUtility.GetAllVulnerabilityDataAsync(CancellationToken cancellationToken)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.Restore.Utility.AuditUtility.CheckPackageVulnerabilitiesAsync(CancellationToken cancellationToken)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.RestoreCommand.PerformAuditAsync(EnabledValue enableAudit, IEnumerable`1 graphs, TelemetryActivity telemetry, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at NuGet.Commands.RestoreRunner.RunWithoutCommit(IEnumerable`1 restoreRequests, RestoreArgs restoreContext)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    --- End of inner exception stack trace ---\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :    at Microsoft.Build.NuGetSdkResolver.NuGetSdkResolver.NuGetAbstraction.GetSdkResult(SdkReference sdk, Object nuGetVersion, SdkResolverContext context, SdkResultFactory factory)\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :   MSB4276: The default SDK resolver failed to resolve SDK \"Microsoft.DotNet.Arcade.Sdk\" because directory \"/home/dan/git/runtime/.dotnet/sdk/8.0.100-rtm.23512.16/Sdks/Microsoft.DotNet.Arcade.Sdk/Sdk\" did not exist.\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :     [CredentialProvider]Warning: Cannot persist Microsoft authentication token cache securely!\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error :     [CredentialProvider]Warning: Using plain-text fallback token cache\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error : The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for `NuGet`\r\n/home/dan/git/runtime/artifacts/toolset/restore.proj : error MSB4236: The SDK 'Microsoft.DotNet.Arcade.Sdk' specified could not be found.\r\n```"},{"Id":"33237751413","Type":"IssuesEvent","CreatedAt":"2023-11-09T22:01:55","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12988","RelatedDescription":"Closed issue \"Obsolete API error when building in source-build\" (#12988) at NuGet/Home","RelatedBody":"When building nuget.client repo in full product source-build we see the following error:\r\n\r\n`\r\n/vmr/src/nuget-client/src/NuGet.Core/NuGet.Frameworks/FrameworkException.cs(17,88): error SYSLIB0051: 'Exception.Exception(SerializationInfo, StreamingContext)' is obsolete: 'This API supports obsolete formatter-based serialization. It should not be called or extended by application code.' (https://aka.ms/dotnet-warnings/SYSLIB0051) [/vmr/src/nuget-client/src/NuGet.Core/NuGet.Frameworks/NuGet.Frameworks.csproj::TargetFramework=net8.0]\r\n`\r\n\r\nTo work around this, source-build process have been modifying Directory.Build.props during build to add a nowarn for SYSLIB0051. We are moving away from modifying sources during source-build and this needs to be fixed in the repo.\r\n\r\nI will be creating a PR to fix this issue."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-11-10T03:30:19.6989984Z","RunDurationInMilliseconds":1192}