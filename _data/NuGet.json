{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41301021610","Type":"PullRequestEvent","CreatedAt":"2024-08-24T02:35:09","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10158","RelatedDescription":"Opened pull request \"[NewSDK]Update ValidateCertificate and ProcessSignature for new SDK\" (#10158) at NuGet/NuGetGallery","RelatedBody":"Updates to ValidateCertificate and ProcessSignature to use new SDK stuff and support ManagedIdentity authenciation."},{"Id":"41300062723","Type":"PullRequestEvent","CreatedAt":"2024-08-24T00:38:02","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10157","RelatedDescription":"Opened pull request \"[Repair Item] Fix unicode character on nuspec.\" (#10157) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Adds a new validation to verify `nuspec` file is normalized\r\n* This validation is the same that is done on `db2catalog` job that was not performed on Gallery.\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/5470"},{"Id":"41299004865","Type":"PullRequestEvent","CreatedAt":"2024-08-23T22:59:43","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10156","RelatedDescription":"Merged pull request \"Add fall back option if Storage MSI isn't specified\" (#10156) at NuGet/NuGetGallery","RelatedBody":"Some follow-up work from https://github.com/NuGet/NuGetGallery/pull/10153"},{"Id":"41298429431","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:17:11","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10139","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#10139) at NuGet/NuGetGallery","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41295560838","Type":"PullRequestEvent","CreatedAt":"2024-08-23T19:45:16","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10156","RelatedDescription":"Opened pull request \"Add fall back option if Storage MSI isn't specified\" (#10156) at NuGet/NuGetGallery","RelatedBody":"Some follow-up work from https://github.com/NuGet/NuGetGallery/pull/10153"},{"Id":"41295326695","Type":"PullRequestEvent","CreatedAt":"2024-08-23T19:34:30","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10153","RelatedDescription":"Merged pull request \"Job base classes MSI support\" (#10153) at NuGet/NuGetGallery","RelatedBody":"This is @agr's latest work on the job base types supporting MSIs for storage account access. Tested via other changes as discussed offline."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41298772900","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:40:53","Actor":"jaredpar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13734","RelatedDescription":"Opened issue \"Explicitly enabling NuGet audit leads to incorrect NU1008 errors\" (#13734) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.100-preview.5.24307.\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nClone roslyn: https://github.com/dotnet/roslyn. Then add the following to `Directory.Packages.props`\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n\r\n    <!-- Add these three lines -->    \r\n    <NugetAuditMode>all</NuGetAuditMode>\r\n    <NugetAuditLevel>moderate</NugetAuditLevel>\r\n    <NugetAudit>true</NuGetAudit>\r\n\r\n  </PropertyGroup>\r\n  <Import Project=\"eng\\Directory.Packages.props\" />\r\n</Project>\r\n\r\n```\r\n\r\nNow run `dotnet restore Rosyln.sln` and it will produce several hundred NU1008 errors. \r\n\r\n> C:\\Users\\jaredpar\\code\\roslyn-2\\src\\Compilers\\Test\\Resources\\Core\\Microsoft.CodeAnalysis.Compiler.Test.Resources.csproj : error NU1008: Projects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items: Microsoft.CodeAnalysis.NetAnalyzers;Roslyn.Diagnostics.Analyzers;Microsoft.VisualStudio.Threading.Analyzers;Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers;RichCodeNav.EnvVarDump.\r\n\r\nThese errors are incorrect as none of the `PackageReference` involved have explicit versions. The repo already uses CPM so this error would've been firing already. Its' the addition of the nuget audit properties that triggers this to happen. \r\n\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41297264396","Type":"PullRequestEvent","CreatedAt":"2024-08-23T21:07:00","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13680","RelatedDescription":"Closed pull request \"[One Pager] Transitive origins paths in PM UI\" (#13680) at NuGet/Home","RelatedBody":"One pager for https://github.com/NuGet/Home/issues/13574"},{"Id":"41297264193","Type":"IssuesEvent","CreatedAt":"2024-08-23T21:07:00","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13574","RelatedDescription":"Closed issue \"PM UI should show transitive path\" (#13574) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nWhen hovering a package in the \"installed\" package list, when the package is a transitve package, it will tell you a top level package that caused the package to be included:\r\n<img width=\"446\" alt=\"image\" src=\"https://github.com/NuGet/Home/assets/5030577/33e9aec1-8bc3-4ac4-9e62-07ac1194f27a\">\r\n\n\n### Desired Behavior\n\nThe tooltip should show the full path of all intermediate packages. This is because when dealing with transitive packages with known vulnerabilities, some customers (and my personal recommendation) is to upgrade the \"closest to direct\" package to a higher version where packages with known vulnerabilities are removed.\r\n\r\nFor example, consider a package path, as shown by the new `dotnet nuget why` command:\r\n\r\n```text\r\n  [net8.0]\r\n   │\r\n   └─ YesSql (v5.0.0)\r\n      └─ YesSql.Provider.SqlServer (v5.0.0)\r\n         ├─ Azure.Identity (v1.11.2)\r\n         │  ├─ Microsoft.Identity.Client (v4.60.3)\r\n         │  └─ Microsoft.Identity.Client.Extensions.Msal (v4.60.3)\r\n         │     └─ Microsoft.Identity.Client (v4.60.3)\r\n         └─ Microsoft.Data.SqlClient (v5.2.0)\r\n            ├─ Azure.Identity (v1.11.2)\r\n            │  ├─ Microsoft.Identity.Client (v4.60.3)\r\n            │  └─ Microsoft.Identity.Client.Extensions.Msal (v4.60.3)\r\n            │     └─ Microsoft.Identity.Client (v4.60.3)\r\n            └─ Microsoft.Identity.Client (v4.60.3)\r\n```\r\n\r\nAs a developer, I'd prefer to update the `YesSql` package to a newer version, but if no newer version exists, then I'd like to update `YesSql.Provider.SqlServer`, and my next preference is `Azure.identity` or `Microsoft.Data.SqlClient`, etc.  In order to investigate upgrading these packages, I need to know the package path, not just the direct/root package that brought in the dependency.\n\n### Additional Context\n\n_No response_"},{"Id":"41297264066","Type":"IssuesEvent","CreatedAt":"2024-08-23T21:06:59","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12105","RelatedDescription":"Closed issue \"[Bug]: Extra space at start of package description in tooltip\" (#12105) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 2022\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nIn the Visual Studio Package Management UI, click on the Browse tab.\r\n\r\nHover over a package so that the tooltip appears.\r\n\r\nAt the start of the package description in the tooltip, there is an extra space. See screenshot attached.\r\n\r\n![image](https://user-images.githubusercontent.com/6613722/191628288-93c9c37c-58fc-43c0-b3c4-6da09e12d465.png)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41291594884","Type":"IssuesEvent","CreatedAt":"2024-08-23T16:57:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11474","RelatedDescription":"Closed issue \"[Bug Bash] The package recommended from IntelliCode should have the recommend icon on the left of the package in Browse Tab\" (#11474) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n NuGet Client Dev\\6.1.0.86\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n### Details about Problem\r\nNuGet version: NuGet Client Dev\\6.1.0.86\r\nVS Version: Main\\32030.25\r\nOS: Windows-11-Enterprise-21H2\r\n### Detailed repro steps\r\n1. Launch VS and click “Create a new project” button in the G2C dialog.\r\n2. Type “ASP.NET Web” in the search box, select the “ASP.NET Web Application (.NET Framework)” template in the list and click “Next” button.\r\n3. Type a project name and click “Create” button.\r\n4. Select “Single Page Application” and click “Create” button.\r\n5. Open the PM UI of the project and go to Browse tab.\r\n### Expected\r\nThe package recommended from IntelliCode should have the recommend icon (the start icon) on the left of the package in Browse Tab.\r\n### Actual\r\nThe package recommended from IntelliCode doesn’t have the recommend icon (the start icon) on the left of the package in Browse Tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/147820066-ae747e55-25b3-4a85-9cdd-765b8977ccf8.png)\r\n### Note\r\nIt’s not a regression.\n\n### Verbose Logs\n\n_No response_"},{"Id":"41279163652","Type":"IssuesEvent","CreatedAt":"2024-08-23T09:51:17","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13733","RelatedDescription":"Opened issue \"[Bug Bash] Expected error disappear and restore will be successful after the TLS certificate validation is re-enabled\" (#13733) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK Version: 9.0.100-rc.2.24420.21\n\n### Worked before?\n\nIt is not a regression since it is a new feature.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1.\t[Patch  dotnet  SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc={8a3c6685-1661-47f4-8807-b765ca62aea1}&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703) (patch 9.0.1xx with Nupkgs of the NuGet build you are testing). \r\n2.\tOpen a command prompt (called prompt1), go to the PatchedSDK folder and create a .NET SDK project with command `dotnet new console  -n NetCoreConsole `\r\n3.\tIn the solution folder, create a file named nuget.config with the following content: \r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \r\n<configuration> \r\n  <packageSources> \r\n    <clear /> \r\n    <add key=\"mySource\" value=\"https://127.0.0.1:44444/v3/index.json\"/> \r\n  </packageSources> \r\n</configuration> \r\n```\r\n4.\tOpen the .csproj file for your project and insert the following package reference within an ItemGroup: \r\n```\r\n<ItemGroup> \r\n  <PackageReference Include=\"abcdefghijkl\" Version=\"1.0.0\" /> \r\n</ItemGroup> \r\n```\r\n5.\tOpen the \"...\\Entropy\\filebackedserver\\filebackedserver\\filebackedserver.csproj\" and update the <TargetFramework> property to 'net9.0'. \r\n6.\tOpen a second command prompt (called prompt2), go to the PatchedSDK folder and build the server by running:  \r\n`dotnet build   ...\\Entropy\\filebackedserver\\filebackedserver\\filebackedserver.csproj `\r\n7.\tStart the local server by executing: \r\n`dotnet run --project  ...\\Entropy\\filebackedserver\\filebackedserver\\filebackedserver.csproj `\r\n8.\tSwitch back to the first terminal where your original project is located (prompt1) and run \r\n`dotnet restore …\\NetCoreConsole.csproj `\r\n9.\tModify the nuget.config file to disable TLS certificate validation as follows: \r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \r\n<configuration> \r\n  <packageSources> \r\n    <clear /> \r\n    <add key=\"mySource\" value=\"https://127.0.0.1:44444/v3/index.json\" disableTLSCertificateValidation=\"true\"/> \r\n  </packageSources> \r\n</configuration> \r\n```\r\n10.\t Run dotnet restore again: `dotnet restore …\\NetCoreConsole.csproj`\r\n11.\tModify the nuget.config file to reenable the TLS certificate validation as follows: \r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \r\n<configuration> \r\n  <packageSources> \r\n    <clear /> \r\n    <add key=\"mySource\" value=\"https://127.0.0.1:44444/v3/index.json\" /> \r\n  </packageSources> \r\n</configuration> \r\n```\r\n12.\tRun dotnet restore again: `dotnet restore …\\NetCoreConsole.csproj`\r\n#### Expected Result:\r\nThis should result in a \"TLS validation failed\" error or \"Unable to load the service index\" error in step12 as the screenshot below.\r\n![image](https://github.com/user-attachments/assets/81d2ef03-362b-4741-9c29-b7ce1fff6396)\r\n#### Actual Result:\r\nNo error shows and restoring is successful in step12.\r\n![image](https://github.com/user-attachments/assets/ef0c3229-9caa-40f4-a5c0-3d87380bd00b)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41278382375","Type":"IssuesEvent","CreatedAt":"2024-08-23T09:25:19","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13001","RelatedDescription":"Closed issue \"[Bug Bash] The vulnerability InfoBar does not display in the Solution Explorer window when the transitive package is a vulnerable package\" (#13001) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.9.0.27\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:       \r\n1. Create a F# Console App (.NET Core) -- .NET 8.0 project.   \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.   \r\n3. Select the package source: “Nuget.org” in the “Package source:” drop-down box.   \r\n4. Go to the \"Browse\" tab and search package “Microsoft.AspNet.WebApi.Client”.  \r\n5. Select package version “4.0.30506” and install the package. \r\n \r\n#### Expected:        \r\nThe InfoBar should display at the top of the Solution Explorer window since the transitive package “Newtonsoft.Json” is a vulnerable package. \r\n\r\n#### Actual:        \r\nThe InfoBar doesn’t display at the top of the Solution Explorer window as below: \r\n![image](https://github.com/NuGet/Home/assets/84695155/a1ae0194-8ebe-4c8e-83db-f11a3ad9171a)\r\n\r\n#### Notes:    \r\n1.The repro rate is 100%.  \r\n2.This is not a regression since it is a new feature.  \n\n### Verbose Logs\n\n_No response_"},{"Id":"41278341773","Type":"IssuesEvent","CreatedAt":"2024-08-23T09:23:58","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13000","RelatedDescription":"Closed issue \"[Bug Bash] Vulnerability InfoBar won’t show at the top of Solution Explorer window for C# UWP project\" (#13000) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nDev\\6.9.0.27\r\n\r\n### Worked before?\r\n\r\nDidn't work since it is a new feature.\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:\r\n1.\tCreate a C# UWP project in VS and open the PM UI of the project.\r\n2.\tOpen Solution Explorer window in VS.\r\n3.\tGo to “Browse” tab and install a vulnerable package (e.g. Newtonsoft.Json -version 12.0.2).\r\n4.\tObserve the top of the Solution Explorer window.\r\n#### Expected:\r\nThere should be vulnerability InfoBar showing at the top of the Solution Explorer window.\r\n#### Actual:\r\nNo vulnerability InfoBar showing at the top of the Solution Explorer window as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/20632625/d0b752b2-2dee-4a8f-a520-fb6d7046127b)\r\n#### Note:\r\n1.The repro rate is 100%.  \r\n2.It is not a regression bug since it’s a new feature.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-25T03:30:18.6275507Z","RunDurationInMilliseconds":866}