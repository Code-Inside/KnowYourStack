{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"19862220217","Type":"PullRequestEvent","CreatedAt":"2022-01-22T02:19:33","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8949","RelatedDescription":"Opened pull request \"Add admin panel to lock users from specific operations\" (#8949) at NuGet/NuGetGallery","RelatedBody":"See https://github.com/NuGet/Engineering/pull/4213 for more information"},{"Id":"19846304216","Type":"PullRequestEvent","CreatedAt":"2022-01-21T06:55:12","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8948","RelatedDescription":"Opened pull request \"Add reCAPTCHA to package uploads\" (#8948) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/4212\r\n\r\nThis change adds reCAPTCHA to the upload package flow. It's behind a feature flag with the disabled case attempting as little disruption as possible to existing logic. While a lot of time has been spent on this aspect, this is a good thing to double-check in this review.\r\n\r\nNote that the HTML change in the _VerifyForm partial (`submit-package-template` insertion code) is largely indentation in the no-flag scenario. The only real change is the inclusion of the script which sets the RecaptchaEnabled JS var to false. I've duplicated this code for the enabled case to make it cleaner.\r\n\r\nThe creative piece here is the attachment of a delegate function to OnVerifySubmit in JS, which is the callback for reCAPTCHA, along with the globally scoped RecaptchaEnabled var which we set from the Razor view based on the view model's exposure of the feature flag value.\r\n\r\nI've also opted to not turn on reCAPTCHA for symbols uploads as (1) it's customer noise, and (2) it's not a spam scenario.\r\n\r\nI've tested the disabled and enabled scenarios numerous times, as well as the enabled + reCAPTCHA passing and enabled + reCAPTCHA failing (see image) scenarios. All seems to operate as expected.\r\n\r\nreCAPTCHA in action:\r\n![image](https://user-images.githubusercontent.com/14225979/150480405-af412293-0988-49e0-92f2-bbbc3f9ed58a.png)\r\n\r\nFailing reCAPTCHA:\r\n![image](https://user-images.githubusercontent.com/14225979/150480191-758bcab5-f635-49d9-bca9-dfd53c94f0da.png)\r\n\r\nBrowse button--no verify template, therefore no reCAPTCHA client yet:\r\n![image](https://user-images.githubusercontent.com/14225979/150480606-91ea1b35-7275-41c3-b58e-efadf946a4a3.png)\r\n\r\nVerify template inflated--reCAPTCHA client activated:\r\n![image](https://user-images.githubusercontent.com/14225979/150480743-85baf15f-7a6a-48a5-9479-b9568fea4a3a.png)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"19862143269","Type":"IssuesEvent","CreatedAt":"2022-01-22T02:05:08","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11519","RelatedDescription":"Opened issue \"MAC certificate chain build logs NU3018 warning for trusted certificate\" (#11519) at NuGet/Home","RelatedBody":"I found MAC certificate chain build logs NU3018 warning for trusted certificate on our tests.\n\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/7ee06ab5-555a-4034-98df-078528faaa84)\n```\n\n\"Verifying A.1.0.0\\nSignature type: Author\\n  Subject Name: CN=NuGetTest-916a3f4f-eb80-4747-8079-8879f675136d\\n  SHA256 hash: 22332D9F10F8E3A8B7E35ACE20E7DB3B27DC61977E75ECA644EEA99878BA8FF6\\n  Valid from: 1/21/2022 5:08:49 PM to 1/21/2022 5:58:45 PM\\nerror: NU3034: This package is signed but not by a trusted signer.\\n\nwarn : NU3018: The author primary signature found a chain building issue: RevocationStatusUnknown: An incomplete certificate revocation check occurred.\\n\nwarn : NU3027: The signature should be timestamped to enable long-term signature validity after the certificate has expired.\\nPackage signature validation failed.\\n\\n\"\n```"},{"Id":"19843640700","Type":"IssuesEvent","CreatedAt":"2022-01-21T01:54:19","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11518","RelatedDescription":"Opened issue \"Improve Error_NoClientAllowList message\" (#11518) at NuGet/Home","RelatedBody":"Follow up on comment "},{"Id":"19839440961","Type":"IssuesEvent","CreatedAt":"2022-01-20T19:52:32","Actor":"reynoldsbd","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11517","RelatedDescription":"Opened issue \"[Bug]: Race Condition Creating Plugin Log Files\" (#11517) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n.NET 5.0.404\n\n### Worked before?\n\nDon't have specific versions, but we have been observing the bug for nearly 6 months.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOriginal issue: dotnet/sdk#21320\r\n\r\nNuGet credential provider fails to initialize if two .NET projects are being built concurrently.\r\n\r\nAppears to be caused by a race condition where both concurrent MSBuild instances attempt to open the same log file for plugin logs. The winner of the race successfully opens the file and starts the plugin; the loser fails to start the plugin, and the overall build fails because NuGet packages cannot be restored.\r\n\r\nSo far my team has only observed this happening within Azure DevOps Pipelines builds, and only over the past 6 months or so. I'm confident that nothing in our build has changed; we have been building .NET projects concurrently for years.\r\n\r\n# Repro Steps\r\n\r\nDefinitely not easy to repro. You have to get \"lucky\" and start two separate .NET builds within a short time of each other. Haven't been able to reproduce locally, but this happens in our CI builds dozens of times per day.\r\n\r\n# Proposed Fix\r\n\r\n@nkolev92 suggested adding process ID or some other random string as part of the log file name.\r\n\r\nhttps://github.com/dotnet/sdk/issues/21320#issuecomment-1017855276\n\n### Verbose Logs\n\n```shell\nFull output from running `dotnet publish`:\r\n\r\n\r\n  Determining projects to restore...\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error : Problem starting the plugin 'C:\\Users\\cloudtest\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll'. The process cannot access the file 'C:\\Users\\cloudtest\\AppData\\Local\\Temp\\pluginlog\\NuGet_PluginLogFor_dotnet_8d97ea679be4f9c.log' because it is being used by another process. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error : Problem starting the plugin 'C:\\Users\\cloudtest\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll'. The process cannot access the file 'C:\\Users\\cloudtest\\AppData\\Local\\Temp\\pluginlog\\NuGet_PluginLogFor_dotnet_8d97ea679be4f9c.log' because it is being used by another process. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error :   The process cannot access the file 'C:\\Users\\cloudtest\\AppData\\Local\\Temp\\pluginlog\\NuGet_PluginLogFor_dotnet_8d97ea679be4f9c.log' because it is being used by another process. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://microsoft.pkgs.visualstudio.com/<GUID>/_packaging/<GUID>/nuget/v3/flat2/<PACKAGE>/index.json'.\r\n  Response status code does not indicate success: 401 (Unauthorized).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://microsoft.pkgs.visualstudio.com/<GUID>/_packaging/<GUID>/nuget/v3/flat2/<PACKAGE>/index.json'.\r\n  Response status code does not indicate success: 401 (Unauthorized).\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error : Failed to retrieve information about '<PACKAGE>' from remote source 'https://microsoft.pkgs.visualstudio.com/<GUID>/_packaging/<GUID>/nuget/v3/flat2/<PACKAGE>/index.json'. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error :   Response status code does not indicate success: 401 (Unauthorized). [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\n```\n```\n"},{"Id":"19838008052","Type":"IssuesEvent","CreatedAt":"2022-01-20T18:18:19","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9949","RelatedDescription":"Closed issue \"Pack needs support for PackageReference specific NoWarn\" (#9949) at NuGet/Home","RelatedBody":"@iwillspeak commented on [Wed, 19 Aug 2020 12:36:47 GMT](https://github.com/dotnet/sdk/issues/12981)\r\nWe have a dependency on a package with no release build available. Building\r\nrelease builds of our packages results in the NU5104 warning being issued.\r\n\r\nPreviously we were able to suppress this warning with `NoWarn=\"NU5104\"` on\r\nthe `PackageReference`. With the `3.1.401` SDK this no longer works. The\r\nexit status of `dotnet pack` is now 1, causing our build pipeline to fail.\r\n\r\nA minimal reproduction is in this Gist:\r\n\r\nhttps://gist.github.com/iwillspeak/2d503703a579f5623fd5e5fb410a29f1\r\n\r\nThis can be worked around by installing an older SDK (e.g. 3.1.301) in our CI\r\npipeline, or by removing the `<TreatWarningsAsErrors>` property.\r\n\r\nI can't find any reference to this being a deliberate change. Is this a regression?\r\nHow can we ignore the warning / error in this case? Ideally we would still be\r\nable to use `<TreatWarningsAsErrors>` for other warnings.\r\n"},{"Id":"19837231935","Type":"IssuesEvent","CreatedAt":"2022-01-20T17:30:47","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9465","RelatedDescription":"Closed issue \"[Feature]: Support overriding centrally managed version on a package reference\" (#9465) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nFeature request\r\n\r\nCPVM support version overrides.\r\n\r\nVersion overrides are supported as a product of MsBuild flexibility.\r\n\r\n**_Option 1:_**  use the Import MsBuild element but there is not a build in experience for the version overrides. \r\n\r\n``` xml\r\n<Project>\r\n\t  <ItemGroup>\r\n\t    <PackageVersion Include=\"Xunit.StaFact.Mac\" Version=\"1.0.24-beta-g88c3555268\"/>\r\n\t    <PackageVersion Include=\"xunit.stafact\" Version=\"1.0.24-beta-g88c3555268\"/>\r\n\t  </ItemGroup>\r\n\t\r\n\t  <Import Project=\"$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Packages.props))\\Directory.Packages.props\" Condition=\"'$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Packages.props))' != ''\" />\r\n\t</Project>\r\n\r\n```\r\n\r\n\r\n**_Option 2 :_**  use the MsBuild Update as :  \r\n``` <PackageVersion Update=\"Foo\" Version=\"1.2.3\"/> ```\r\n\r\n**_Option 3:_**  use the MsBuild Conditions as :  \r\n\r\nDirectory.Packages.Props \r\n``` xml\r\n<Project>\r\n  <ItemGroup Condition=\"'$(Group)'=='Test'\">\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\r\n    <PackageVersion Include=\"EntityFramework\" Version=\"6.2.0\" />\r\n    <PackageVersion Include=\"ParentLibTestCM1\" Version=\"3.0.0\" />\r\n    <PackageVersion Include=\"LibTestCM1\" Version=\"3.0.0\" />\r\n    <PackageVersion Include=\"NUnit\" Version=\"3.12.0\" />\r\n    <PackageVersion Include=\"Microsoft.Azure.Storage.Common\" Version=\"11.1.2\" /> \r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\nDirectory.Build.props (for the project that needs Newtonsoft 12.0.2)\r\n``` xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <Group>Test</Group>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n```"},{"Id":"19837219711","Type":"IssuesEvent","CreatedAt":"2022-01-20T17:30:06","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11516","RelatedDescription":"Opened issue \"[Feature]: Allow overriding a centrally defined package version\" (#11516) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCentral Package Management (CPM) allows users to specify versions for their packages in one place.  However, there are edge cases where a project might want to use a different version.  For example, a prototype project could need a newer version than a repo is using so it would opt into newer versions.\r\n\r\nThere is an existing implementation, Microsoft.Build.CentralPackageVersions, which uses a `VersionOverride` attribute to indicate that a `<PackageReference />` should use a different version than is centrally defined.\r\n\r\nThis design has a few advantages:\r\n1. Makes it obvious when a project is using its own package version(s)\r\n2. Ideally, an entire repo would use the same package version which is why users would define it in one place.  Users who want to use a different version would need to fully understand the ramifications of specifying the `VersionOverride` attribute.\r\n3. Migration from Microsoft.Build.CentralPackageVersions would be easier.\r\n\r\nOther options for users that would still be possible are:\r\n1. Specify a `<PackageVersion />` in a project\r\n2. Define an MSBuild property that represents the package version and set it in a project\r\n\r\nSince MSBuild essentially lets users do anything they want, the built-in mechanism for overriding a package version should be simple and well documented.  \r\n\r\n# Design\r\n\r\nA user would specify package versions in `Directory.Packages.props`:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"PackageA\" Version=\"1.0.0\" />\r\n    <PackageVersion Include=\"PackageB\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n<Project>\r\n```\r\n\r\nA project would override the version with the `VersionOverride` metadata on a `<PackageReference />` item:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"PackageA\" VersionOverride=\"3.0.0\" />\r\n  </ItemGroup>\r\n<Project>\r\n```\r\n\r\nIn this case, the project's restore graph would resolve `PackageA` to version `3.0.0`.  Any project that references it would also get that version and a user would be responsible for handling an unresolved conflicts.\r\n\r\nFinally, a repo owner should be able to disable the ability for developers to override package version.  This would be used for instance if someone wanted to ensure that all package versions are unified.  This would be possible by setting the MSBuild property `EnablePackageVersionOverride` to `false` in a project or import like Directory.Build.props:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <EnablePackageVersionOverride>false</EnablePackageVersionOverride>\r\n  </PropertyGroup>\r\n<Project>\r\n```\r\n\r\nWhen this is disabled, specifying a `VersionOverride` on a `<PackageReference />` would result in a restore error indicating that he feature is disabled.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"19836505174","Type":"IssuesEvent","CreatedAt":"2022-01-20T16:50:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11481","RelatedDescription":"Closed issue \"[Bug]: Errors NU3028 and NU3037 when restoring NuGet packages on FreeBSD\" (#11481) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK (reflecting any global.json):  Version:   6.0.100-dev  Commit:    2f6dac4342  Runtime Environment:  OS Name:     FreeBSD  OS Version:  12  OS Platform: FreeBSD  RID:         freebsd.12-x64  Base Path:   /usr/local/share/dotnet/sdk/6.0.100-dev/  Host (useful for support):   Version: 6.0.0   Commit:  N/A  .NET SDKs installed:   6.0.100-dev [/usr/local/share/dotnet/sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]  To install additional .NET runtimes or SDKs:   https://aka.ms/dotnet-download\n\n### Worked before?\n\nIt worked until the root certificate of the corresponding timestamp provider chain was removed: https://github.com/NuGet/Announcements/issues/56\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis issue has already been fixed by [#3979](https://github.com/NuGet/NuGet.Client/pull/3979) for Linux and MacOS but not for FreeBSD, because [RuntimeEnvironmentHelper.IsLinux](https://github.com/NuGet/NuGet.Client/blob/1fdb7892fa61aae87d6ea67d522b42eca5f282a3/src/NuGet.Core/NuGet.Common/RuntimeEnvironmentHelper.cs#L139-L158) returns `false` if `IS_CORECLR` is defined. According to [common.targets](https://github.com/NuGet/NuGet.Client/blob/1fdb7892fa61aae87d6ea67d522b42eca5f282a3/build/common.targets#L9-L12) `IS_CORECLR` is defined for all target frameworks starting with `netcoreapp`, `netstandard` or `net6`, and therefore the code that causes this issue is included by a NuGet package in the `dotnet` executable.\n\n### Verbose Logs\n\n```shell\nMicrosoft (R) Build Engine version 17.0.0+c9eb9dd64 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json': \r\n  Signature type: Repository\r\n  Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=NuGet.org Repository by Microsoft, O=NuGet.org Repository by Microsoft, L=Redmond, S=Washington, C=US\r\n  Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 0E5F38F57DC1BCC806D8494F4F90FBCEDD988B46760709CBEEC6F4219AA6157D\r\n  Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json':   Valid from: 04/10/2018 00:00:00 to 04/14/2021 12:00:00\r\n/usr/home/Administrator/ConsoleApp/ConsoleApp.csproj : error NU3037: Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature validity period has expired.\r\n/usr/home/Administrator/ConsoleApp/ConsoleApp.csproj : error NU3028: Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature's timestamping certificate is not trusted by the trust provider.\r\n  Failed to restore /usr/home/Administrator/ConsoleApp/ConsoleApp.csproj (in 1.37 sec).\r\n\r\nBuild FAILED.\r\n\r\n/usr/home/Administrator/ConsoleApp/ConsoleApp.csproj : error NU3037: Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature validity period has expired.\r\n/usr/home/Administrator/ConsoleApp/ConsoleApp.csproj : error NU3028: Package 'System.Runtime 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature's timestamping certificate is not trusted by the trust provider.\r\n    0 Warning(s)\r\n    2 Error(s)\n```\n"},{"Id":"19823521973","Type":"PullRequestEvent","CreatedAt":"2022-01-20T02:01:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11492","RelatedDescription":"Merged pull request \"Update package events spec\" (#11492) at NuGet/Home","RelatedBody":"Updated based on discussions in https://github.com/NuGet/NuGet.Client/pull/4359. \r\n\r\ncc @zivkan "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1410695861508526080","CreatedAt":"2021-07-01T20:24:37+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠ \nHave you recently experienced issues interacting with https://t.co/KVB7werYQh's Search API?… https://t.co/3eM1gicePx","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2022-01-24T08:20:26.582524Z","RunDurationInMilliseconds":1338}