{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29863173578","Type":"PullRequestEvent","CreatedAt":"2023-06-19T23:35:44","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9524","RelatedDescription":"Merged pull request \"Fix user credential result on admin panel\" (#9524) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nproblem: `IsAADorMACredential` is not assigned. \r\n\r\nFix: check if credential is AAD or MA, then assign `IsAADorMACredential = true`, otherwise false\r\n\r\nTest: Tested in dev environment\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4904"},{"Id":"29862361537","Type":"PullRequestEvent","CreatedAt":"2023-06-19T22:17:22","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9526","RelatedDescription":"Merged pull request \"Updating NuGet.Protocol version.\" (#9526) at NuGet/NuGetGallery","RelatedBody":"Fix for a CG warning."},{"Id":"29860178653","Type":"PullRequestEvent","CreatedAt":"2023-06-19T19:41:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9526","RelatedDescription":"Opened pull request \"Updating NuGet.Protocol version.\" (#9526) at NuGet/NuGetGallery","RelatedBody":"Fix for a CG warning."},{"Id":"29793342251","Type":"IssuesEvent","CreatedAt":"2023-06-15T22:34:43","Actor":"fluffynuts","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9525","RelatedDescription":"Opened issue \"Error when attempting to push a pre-release package: The package manifest contains an invalid Version\" (#9525) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29865669642","Type":"IssuesEvent","CreatedAt":"2023-06-20T03:28:21","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12669","RelatedDescription":"Opened issue \"Obsolete Clone methods on immutable types\" (#12669) at NuGet/Home","RelatedBody":"Several NuGet.Client types are immutable yet define `Clone` methods. There is no need to clone them, as the cloned value will be equivalent in every way to the original. The downside of cloning is the extra memory allocation and GC pressure such clones cause.\r\n\r\nThe clone methods should be marked as `[Obsolete]` to discourage their use and promote better memory efficiency."},{"Id":"29865514488","Type":"IssuesEvent","CreatedAt":"2023-06-20T03:13:34","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12668","RelatedDescription":"Opened issue \"GetContentFileFolderRelativeToFramework allocates too much\" (#12668) at NuGet/Home","RelatedBody":"GetContentFileFolderRelativeToFramework allocates too many strings, enumerators and arrays. It can be made to allocate only the output string."},{"Id":"29863948832","Type":"IssuesEvent","CreatedAt":"2023-06-20T00:56:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12645","RelatedDescription":"Closed issue \"ContentItemCollection.PopulateItemGroups unnecessarily causing resizes of List<T>, ContentItemCollection.PopulateItemGroups boxing List<T>.Enumerator\" (#12645) at NuGet/Home","RelatedBody":"Internal issues for more detail: \r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824305\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824313"},{"Id":"29862584688","Type":"IssuesEvent","CreatedAt":"2023-06-19T22:37:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12667","RelatedDescription":"Opened issue \"Specify SelectionCriteria list capacity correctly\" (#12667) at NuGet/Home","RelatedBody":"Related to https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1837292"},{"Id":"29860862094","Type":"IssuesEvent","CreatedAt":"2023-06-19T20:23:53","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12608","RelatedDescription":"Closed issue \"VS Options shortcut from PMUI for PackageSourceMappings doesn't scroll to or select the Package\" (#12608) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nThe shortcut (`Configure` button) in PM UI for Package Source Mapping settings opens the VS Options dialog. The default behavior is to show the list scrolled to the top with nothing selected.\n\n### Desired Behavior\n\nWould be handy if the dialog scrolled down to and selected the Package in the VS Options PackageSourceMapping dialog for the package that was selected in the PMUI.\n\n### Additional Context\n\n_No response_"},{"Id":"29857239662","Type":"IssuesEvent","CreatedAt":"2023-06-19T16:48:30","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12607","RelatedDescription":"Closed issue \"Install/Update buttons are enabled in Details Pane when the PackageSourceMapping is not found\" (#12607) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nInstall/Update buttons are enabled in Details Pane when the PackageSourceMapping is not found.\r\nThis leads to NU1100 errors from Restore. \r\nRelated: [NU1100 is used for both TFM incompatibility and for an unresolved PackageSourceMapping · Issue #12606 · NuGet/Home (github.com)](https://github.com/NuGet/Home/issues/12606)\n\n### Desired Behavior\n\nInstall/Update buttons should be disabled in Details Pane when the PackageSourceMapping is not found\n\n### Additional Context\n\n_No response_"},{"Id":"29847011646","Type":"IssuesEvent","CreatedAt":"2023-06-19T10:09:13","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12666","RelatedDescription":"Opened issue \"Avoid value lookup in foreach loop over dictionary's keys\" (#12666) at NuGet/Home","RelatedBody":"NuGet.Client has several places where the following pattern is seen:\r\n\r\n```c#\r\nforeach (var key in dictionary.Keys)\r\n{\r\n    var value = dictionary[key];\r\n    // ...\r\n}\r\n```\r\n\r\nThis code is slower than it needs to be. It's possible to avoid looking up the value on each iteration of the loop by enumerating both the key and value at the same time:\r\n\r\n```c#\r\nforeach (KeyValuePair<TKey, TValue> pair in dictionary)\r\n{\r\n    var key = pair.Key;\r\n    var value = pair.Value;\r\n    // ...\r\n}\r\n```\r\n\r\nThis will be faster as the lookups are avoided, and also avoids allocating a `Dictionary<>.KeyCollection` class.\r\n\r\nUsing deconstriction, it's possible to write this more succinctly as:\r\n\r\n```c#\r\nforeach ((var key, var value) in dictionary)\r\n{\r\n    // ...\r\n}\r\n```\r\n"},{"Id":"29824141884","Type":"IssuesEvent","CreatedAt":"2023-06-17T12:24:57","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12665","RelatedDescription":"Opened issue \"ResolverUtility.FindLibraryFromSourcesAsync should cancel pending work when returning early\" (#12665) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/blob/3be9ceed93526e7fed1282820436435694f122cd/src/NuGet.Core/NuGet.DependencyResolver.Core/ResolverUtility.cs#L433-L456\r\n\r\nThis code spins up one `Task` per `IRemoteDependencyProvider` and waits for them to complete.\r\n\r\nIf one of these tasks completes with an exact match, that match is returned immediately.\r\n\r\nHowever in such a case, any pending work is left to complete. From my reading of the code, the result of that work is unused, and therefore those ongoing tasks should be cancelled to avoid wasting resources (IO/CPU/etc).\r\n\r\nIf that's right, it can be achieved easily with [`CancellationTokenSource.CreateLinkedTokenSource`](https://learn.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource.createlinkedtokensource?view=net-7.0#system-threading-cancellationtokensource-createlinkedtokensource(system-threading-cancellationtoken))."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"},{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-06-20T03:30:22.8199531Z","RunDurationInMilliseconds":1003}