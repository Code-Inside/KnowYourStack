{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"42529210692","Type":"PullRequestEvent","CreatedAt":"2024-10-04T00:41:13","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10200","RelatedDescription":"Merged pull request \"Fix assembly bindings\" (#10200) at NuGet/NuGetGallery","RelatedBody":"Fix runtime assembly binding conflicts"},{"Id":"42528900931","Type":"PullRequestEvent","CreatedAt":"2024-10-04T00:20:18","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10199","RelatedDescription":"Merged pull request \"Use user-provided data correctly\" (#10199) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5661\r\n\r\nSolution copied from: https://github.com/jquery/jquery-ui/commit/afe20b79a64266e64011f34b26a30b3d1c62fd47#diff-9fe9167f897d640e82537adc5391958ffe6284b413a08152cd31d061e97a644aL243"},{"Id":"42528881006","Type":"PullRequestEvent","CreatedAt":"2024-10-04T00:18:57","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10201","RelatedDescription":"Opened pull request \"CodeQL suppressions + suppression fixes\" (#10201) at NuGet/NuGetGallery","RelatedBody":"Following guidance provided in: https://aka.ms/codeql#guidance-on-suppressions"},{"Id":"42528871349","Type":"PullRequestEvent","CreatedAt":"2024-10-04T00:18:19","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10200","RelatedDescription":"Opened pull request \"Fix assembly bindings\" (#10200) at NuGet/NuGetGallery","RelatedBody":"Fix runtime assembly binding conflicts"},{"Id":"42528703895","Type":"PullRequestEvent","CreatedAt":"2024-10-04T00:08:11","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10197","RelatedDescription":"Merged pull request \"Use MSI for storage access in GitHubVulnerabilities2Db\" (#10197) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5568"},{"Id":"42528124024","Type":"PullRequestEvent","CreatedAt":"2024-10-03T23:28:57","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10199","RelatedDescription":"Opened pull request \"Use user-provided data correctly\" (#10199) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5661\r\n\r\nSolution copied from: https://github.com/jquery/jquery-ui/commit/afe20b79a64266e64011f34b26a30b3d1c62fd47#diff-9fe9167f897d640e82537adc5391958ffe6284b413a08152cd31d061e97a644aL243"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"42562341645","Type":"IssuesEvent","CreatedAt":"2024-10-04T23:32:25","Actor":"sykesbPragmatics","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13837","RelatedDescription":"Opened issue \"Attempting to build on Ubuntu Docker Container -- SMB Share Nuget Cache -- Results in access denied for single package\" (#13837) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet core 8\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nDescribe the bug\r\nNo matter what I do I always get an error while trying to restore nuget on a single package file. A ton of other packages work successfully but this one always fails no matter what.\r\n\r\nThe build agent is a docker container on Ubuntu and I'm attaching an smb file share to /mnt/build-agent-share so that I can get nuget caching. I cannot mount a local folder to the docker image as I do not own the VM, its a shared \"ephemeral\" build agent designed to be killed off after every run.\r\n\r\nI have attempted deleting the folder entirely and starting over, attempting to own the folder once its mounted.... Anyone have any ideas?\n\n### Verbose Logs\n\n```shell\nsimple dotnet build:\r\n\r\n/usr/lib/dotnet/sdk/8.0.108/NuGet.targets(156,5): error : Access to the path '/mnt/build-agent-share/nugetcache/microsoft.netcore.app.host.linux-x64/8.0.8/Microsoft.NETCore.App.Host.linux-x64.nuspec' is denied. [/opt/agent/_work/1/s/Src/Project.csproj] /usr/lib/dotnet/sdk/8.0.108/NuGet.targets(156,5): error :   Operation not permitted [/opt/agent/_work/1/s/Src/Project.csproj]\r\n\r\nThe file is definitely created, but seems to be failing when its trying to unzip\r\n\r\nAlternate log when attempting to just do dotnet restore\r\n 1>/usr/lib/dotnet/sdk/8.0.108/NuGet.targets(156,5): error : Access to the path '/mnt/build-agent-share/nugetcache/microsoft.netcore.app.host.linux-x64/8.0.8/Microsoft.NETCore.App.Host.linux-x64.nuspec' is denied. [/opt/agent/_work/1/s/Project.csproj] /usr/lib/dotnet/sdk/8.0.108/NuGet.targets(156,5): error :   Operation not permitted [/opt/agent/_work/1/s/Project.csproj] Assembly loaded during TaskRun (NuGet.Build.Tasks.RestoreTask): System.Diagnostics.StackTrace, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (location: /usr/lib/dotnet/shared/Microsoft.NETCore.App/8.0.8/System.Diagnostics.StackTrace.dll, MVID: 4061053c-27f4-4307-bc08-8a769a70c3f3, AppDomain: [Default]) System.UnauthorizedAccessException: Access to the path '/mnt/build-agent-share/nugetcache/microsoft.netcore.app.host.linux-x64/8.0.8/Microsoft.NETCore.App.Host.linux-x64.nuspec' is denied. ---> System.IO.IOException: Operation not permitted --- End of inner exception stack trace --- at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError) at Interop.CheckIo(Int64 result, String path, Boolean isDirError) at System.IO.FileStatus.SetAccessOrWriteTimeCore(SafeFileHandle handle, String path, DateTimeOffset time, Boolean isAccessTime, Boolean checkCreationTime, Boolean asDirectory) at System.IO.File.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc) at NuGet.Packaging.ZipArchiveExtensions.Testable.UpdateFileTimeEntry(String fileFullPath, DateTime dateTime) at NuGet.Packaging.ZipArchiveExtensions.Testable.UpdateFileTimeFromEntry(ZipArchiveEntry entry, String fileFullPath, ILogger logger) at NuGet.Packaging.ZipArchiveExtensions.UpdateFileTimeFromEntry(ZipArchiveEntry entry, String fileFullPath, ILogger logger) at NuGet.Packaging.PackageArchiveReader.CopyFiles(String destination, IEnumerable1 packageFiles, ExtractPackageFileDelegate extractFile, ILogger logger, CancellationToken token)\r\nat NuGet.Packaging.PackageReaderBase.CopyFilesAsync(String destination, IEnumerable1 packageFiles, ExtractPackageFileDelegate extractFile, ILogger logger, CancellationToken cancellationToken) at NuGet.Packaging.PackageExtractor.<>c__DisplayClass5_2.<<InstallFromSourceAsync>b__0>d.MoveNext() --- End of stack trace from previous location --- at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func2 action, CancellationToken token)\r\nat NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func2 action, CancellationToken token) at NuGet.Packaging.PackageExtractor.InstallFromSourceAsync(PackageIdentity packageIdentity, IPackageDownloader packageDownloader, VersionFolderPathResolver versionFolderPathResolver, PackageExtractionContext packageExtractionContext, CancellationToken token, Guid parentId) at NuGet.Commands.ProjectRestoreCommand.InstallPackageAsync(RemoteMatch installItem, NuGetv3LocalRepository userPackageFolder, PackageExtractionContext packageExtractionContext, CancellationToken token) at NuGet.Commands.ProjectRestoreCommand.<>c__DisplayClass15_1.<<InstallPackagesAsync>b__4>d.MoveNext() --- End of stack trace from previous location --- at NuGet.Commands.ProjectRestoreCommand.InstallPackagesAsync(HashSet1 uniquePackages, IEnumerable1 graphs, IList1 downloadDependencyInformations, NuGetv3LocalRepository userPackageFolder, CancellationToken token)\r\nat NuGet.Commands.ProjectRestoreCommand.TryRestoreAsync(LibraryRange projectRange, IEnumerable1 frameworkRuntimePairs, NuGetv3LocalRepository userPackageFolder, IReadOnlyList1 fallbackPackageFolders, RemoteDependencyWalker remoteWalker, RemoteWalkContext context, Boolean forceRuntimeGraphCreation, CancellationToken token, TelemetryActivity telemetryActivity, String telemetryPrefix)\r\nat NuGet.Commands.RestoreCommand.ExecuteRestoreAsync(NuGetv3LocalRepository userPackageFolder, IReadOnlyList1 fallbackPackageFolders, RemoteWalkContext context, CancellationToken token, TelemetryActivity telemetryActivity) at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token) at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token) at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, IRestoreProgressReporter progressReporter, CancellationToken token) at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List1 restoreTasks)\r\nat NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreArgs, CancellationToken token)\r\nat NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\nat NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\nat NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\nDone executing task \"RestoreTask\" -- FAILED.\r\n1>Done building target \"Restore\" in project \"Project.csproj\" -- FAILED.\r\n1>Done Building Project \"/opt/agent/_work/1/s/Project.csproj\" (Restore target(s)) -- FAILED.\r\n\r\n`\n```\n"},{"Id":"42561662440","Type":"IssuesEvent","CreatedAt":"2024-10-04T22:36:34","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13836","RelatedDescription":"Opened issue \"Could not write to output file 'C:\\.xml' -- 'Access to the path 'C:\\.xml' is denied\" (#13836) at NuGet/Home","RelatedBody":"I'm unable to build our repo without an attempt to write to my system's root ('C:\\.xml'). \r\n\r\n>  Publishing test extension artifacts...\r\n>   C:\\NuGet.Client\\artifacts\\GenerateTestPackages\\bin\\Debug\\net472\\GenerateTestPackages.exe -> C:\\NuGet.Client\\artifacts\\\\TestExtensions\r\n> CSC : error CS0016: Could not write to output file 'C:\\.xml' -- 'Access to the path 'C:\\.xml' is denied.' [C:\\NuGet.Client\\test\\TestExtensions\\TestableVSCredentialProvider\\TestableVSCredentialProvider.csproj]\r\n>   NuGet.VisualStudio.OnlineEnvironment.Client -> C:\\NuGet.Client\\artifacts\\NuGet.VisualStudio.OnlineEnvironment.Client\\bin\\Debug\\net472\\NuGet.VisualStudio.OnlineEnvironment.Client.dll\r\n>   NuGet.VisualStudio.Client -> C:\\NuGet.Client\\artifacts\\NuGet.VisualStudio.Client\\bin\\Debug\\net472\\NuGet.VisualStudio.Client.dll\r\n>   NuGet.Localization -> C:\\NuGet.Client\\artifacts\\NuGet.Localization\\bin\\Debug\\netstandard2.0\\NuGet.Localization.dll\r\n> C:\\NuGet.Client\\build\\build.proj(163,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error.\r\n> \r\n> Build FAILED.\r\n> \r\n> CSC : error CS0016: Could not write to output file 'C:\\.xml' -- 'Access to the path 'C:\\.xml' is denied.' [C:\\NuGet.Client\\test\\TestExtensions\\TestableVSCredentialProvider\\TestableVSCredentialProvider.csproj]\r\n> C:\\NuGet.Client\\build\\build.proj(163,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error.\r\n>     0 Warning(s)\r\n>     2 Error(s)\r\n> \r\n> Time Elapsed 00:05:07.39"},{"Id":"42561384334","Type":"IssuesEvent","CreatedAt":"2024-10-04T22:18:43","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13835","RelatedDescription":"Opened issue \"Read and write .nupkg.metadata files with System.Text.Json\" (#13835) at NuGet/Home","RelatedBody":"System.Text.Json has lower allocations and higher performance.\r\n\r\nAnyone using the NuGet Client SDK's `NuGetMetadataFileFormat` `.Read` and `.Write` overloads with the `TextReader` or `TextWriter` parameters will have a breaking change. System.Text.Json doesn't read or write these text streams, only UTF8 byte steams.  But there's little reason for anyone to use the stream (byte or text) overloads, it's easier for most people to pass the path, and let NuGet open the file."},{"Id":"42529029627","Type":"IssuesEvent","CreatedAt":"2024-10-04T00:28:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9740","RelatedDescription":"Closed issue \"[Performance]: Find a solution with better performance to reject the central transitive dependencies that have rejected parents. \" (#9740) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nRelated with the issue [Rejected transitive central dependencies should be removed from the restore graph](https://github.com/NuGet/Home/issues/9483) \r\n\r\nThe [current solution](https://github.com/NuGet/NuGet.Client/pull/3374) does multiple loops through the the list of the central dependencies and their parents to detect any rejected parents. \r\n\r\nEvaluate if a different solution with better performance exists. \r\n\r\n\r\n\r\n"},{"Id":"42528102250","Type":"IssuesEvent","CreatedAt":"2024-10-03T23:27:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5745","RelatedDescription":"Closed issue \"Provide means/ways/option to measure underlying service execution times.\" (#5745) at NuGet/Home","RelatedBody":"Hi,\r\n\r\nI had recently a problem with the update and installing of a packet. I took around a minute.\r\nSo it dropped to 5 seconds after some changes and retries. But sometimes its hard to say where the problem is lying. But within, I was searching for the issues here and wrote a commend to not let it drop.\r\n\r\nA college reported later, that network was slow on that day. So this days I wish for an option tool, something, to have a times log for the action, complexity, amount of request for a certain action.\r\n\r\nWhen 80 percent from my problems arise due to an a problem the nuget team cannot changes anything, I do not need to raise a issue here, but with my IT/network, Team, Providers.\r\n\r\nIt's like blaming the delivery service that the producer did't deliver the goods beforhand.\r\n\r\nIf your versioning with pre-releases is fexing. I should pressure our team to make an release, instead of waiting for nuget to improve such the update times for stupid complex case.\r\nIf our IT/network is slow, ...\r\nIf our PCs are low-end (ok, they are not)\r\n\r\nIf the nuget Team would provide such option/means tools, it would give ways to improve my satisfaction with nuget.\r\n\r\nI posted here my comment\r\n#4897\r\nThis seems to be the epic story\r\n#1909 "},{"Id":"42528097586","Type":"IssuesEvent","CreatedAt":"2024-10-03T23:27:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/2911","RelatedDescription":"Closed issue \"Expose package compatibility as a public API for consumption in CLI\" (#2911) at NuGet/Home","RelatedBody":"Expose an API in NuGet so CLI can solve this issue:\nhttps://github.com/dotnet/cli/issues/3396\n\nSomething on `CompatibilityChecker.cs` probably. The code in CLI that is replicating this logic is here:\nhttps://github.com/dotnet/cli/blob/rel/1.0.0/src/Microsoft.DotNet.ProjectModel/Resolution/PackageDependencyProvider.cs#L35-L38\n"},{"Id":"42528085631","Type":"IssuesEvent","CreatedAt":"2024-10-03T23:26:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/2128","RelatedDescription":"Closed issue \"Feature request: Add \"Finished\" message to Package Manager Console commands\" (#2128) at NuGet/Home","RelatedBody":"I am never sure when it is done processing. Typically an update-package command on a big solution with many projects takes forever. Would be nice to know when we are done.\nA simple ==== finished ==== would do.\n"},{"Id":"42525836784","Type":"IssuesEvent","CreatedAt":"2024-10-03T21:29:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12825","RelatedDescription":"Closed issue \"Refactor `PackageSourceMapping` class to be Mockable\" (#12825) at NuGet/Home","RelatedBody":"The current implementation of `NuGet.Configuration/PackageSourceMapping` is not Mockable as defined here: https://github.com/moq/moq/wiki/FAQ#moq---non-overridable-members-may-not-be-used-in-setup--verification-expressions\r\n\r\nThere may be several changes needed to do so (source & tests).\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Configuration/PackageSourceMapping/PackageSourceMapping.cs\r\n\r\nFor example\r\nFeedback in https://github.com/NuGet/NuGet.Client/pull/5355/files would require tests verifying # times the `PackageSourceMapping` object is referenced (eg, [UIActionEngineTests](https://github.com/NuGet/NuGet.Client/blob/dev/test/NuGet.Clients.Tests/NuGet.PackageManagement.UI.Test/Actions/UIActionEngineTests.cs#L414)) to now look at counts for particular method invocations (ie, GetConfiguredPackageSources). This isn't possible without making the class mockable."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-10-06T03:30:21.8941287Z","RunDurationInMilliseconds":851}