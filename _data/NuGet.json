{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27147666484","Type":"IssuesEvent","CreatedAt":"2023-02-16T21:25:36","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9392","RelatedDescription":"Opened issue \"[Search-by-TFM] Users can filter by TFMs not shown in the filtering UI: Make this more obvious/accessible?\" (#9392) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nWith Search-by-TFM on NuGet.org, we chose to display a limited list of supported TFMs in the filtering UI, but it is still possible for users to filter by other TFMs not shown in the UI by editing the URL query parameters directly. \r\n\r\nFor example, someone could search for a package with a `xamarinmac` (Xamarin.Mac) asset target framework by including this TFM in the `tfms` query parameter in the URL:\r\n`https://www.nuget.org/packages?q=&tfms=xamarinmac&prerel=true&sortby=relevance`\r\n\r\n### Solution\r\n* Should we make it clearer to users that it is possible to do this, as it might help a lot more developers take advantage of TFM filtering too?\r\n    - The information tooltip next to the Frameworks filters can point to our [NuGet.org search docs](https://learn.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages), which we can update to explain all this functionality.\r\n* Should we make it easier to filter by other TFMs?\r\n    - A new TFMs text input field in the filters panel?\r\n    - Search syntax, something like `tfm:xamarinmac` (See https://learn.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages#search-syntax)?"},{"Id":"27091746351","Type":"IssuesEvent","CreatedAt":"2023-02-14T21:44:55","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3098","RelatedDescription":"Closed issue \"Package discovery: Show and search by TFM/package-compatibility \" (#3098) at NuGet/NuGetGallery","RelatedBody":"A feature request: I'd like to browse packages compatible with [.NET Core](https://dotnet.github.io/)\r\n\r\nMost the packages on https://www.nuget.org/packages seem not to be, so it would be useful to shortlist those that are\r\n\r\n```\r\n>dotnet restore\r\nPackage Microsoft.Net.Http 2.2.29 is not compatible with netcoreapp1.0 (.NETCoreApp,Version=v1.0). \r\nOne or more packages are incompatible with .NETCoreApp,Version=v1.0.\r\n```\r\n\r\nI want to search nuget.org by target framework.\r\n<!-- Do not remove this section. Triage will add new issues identified as part of this epic into this section. The v-team is responsible for triaging them into their business goals. If they do not fit into a business goals, please remove from this section. -->\r\n# Recently Triaged Issues\r\n\r\nAll issues in this section should be triaged by the v-team into one of their business objectives or features.\r\n\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8863\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8864\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8865\r\n"},{"Id":"27087455264","Type":"PullRequestEvent","CreatedAt":"2023-02-14T18:04:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Merged pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27065220057","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:33:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9388","RelatedDescription":"Merged pull request \"Added null checks to mitigate exceptions on the '/profiles' pages\" (#9388) at NuGet/NuGetGallery","RelatedBody":"The `/profiles` pages use the same js script as the search page, but do not have a `searchForm` element on the page, so we were getting exceptions from the javascript on the `/profiles` pages when we tried to reference the form elements.\r\n\r\nI've now added checks in the script so that we do not reference anything that doesn't exist on the page.\r\n\r\nI also removed a helper method that was not being used by the search page anymore (`AddSortByOption()`)."},{"Id":"27065082044","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:22:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Opened pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27064653171","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:55:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9390","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] 'Template' package type filters combined with Frameworks filters should warn?\" (#9390) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nTemplates do not have a Frameworks tab on the Package Details page. Should we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters? The behaviors across the frameworks tab and frameworks filters should be consistent.\r\n\r\nQ: Are target frameworks expected with template packages? Most template packages in our ecosystem do not have target frameworks, but a handful do.\r\n\r\n### Solution\r\nShould we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters?"},{"Id":"27064452514","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:42:15","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9389","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] Tags sometimes spill over into the next line when there are multiple of them\" (#9389) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIn the search results, when there are very few tags, they appear on the same line as the downloads, last updated date and version, but spill over into the next line when there are multiple tags. This behavior should be consistent. \r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it. \r\n\r\n### Solution\r\nPossible solution: Always show tags on the next line so that it is consistent."},{"Id":"27063127454","Type":"PullRequestEvent","CreatedAt":"2023-02-13T21:29:45","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9387","RelatedDescription":"Merged pull request \"Search page A11y fixes\" (#9387) at NuGet/NuGetGallery","RelatedBody":"1. This PR fixes an accessibility issue where, when the TFM section was collapsed and there were very few search results on the page, the black text of some of the TFM checkbox labels could overlap with the dark blue footer background (even though the checkboxes were not visible), causing a contrast issue on A11y FastPass. \r\n![image](https://user-images.githubusercontent.com/82980589/218198449-23ec3954-7e64-46d7-8347-5df58ac1b18e.png)\r\nWe now flip the TFM tab's `display` property between `'none'` and `'block'` when it is collapsed or expanded. This also means we don't need to manually toggle `tabindex` for the checkboxes when the section is collapsed or expanded.\r\n\r\n2. The text we show when there's 0 package results also has an a11y issue, where it shouldn't have the `aria-expanded` property. I've removed that now.\r\n![image](https://user-images.githubusercontent.com/82980589/218199365-a21f5d7f-675f-4bd4-8879-6cbbb23fa11a.png)\r\n\r\n3. I've also removed an unused ViewModel property (`ShouldDisplayAdvancedSearchPanel`). "},{"Id":"27061164462","Type":"PullRequestEvent","CreatedAt":"2023-02-13T19:54:35","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9365","RelatedDescription":"Merged pull request \"Modify warning message on display package page when missing readme\" (#9365) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Introduced new warning message on package display page when package is missing readme\r\n* only display warning message to package authors\r\n* added feature flag to this new warning\r\n\r\nBefore: \r\n![Screenshot 2023-01-31 140711](https://user-images.githubusercontent.com/64443925/215915916-076f6854-e2da-48fb-8a73-6a8f8ddf11ed.png)\r\nAfter: \r\n![Screenshot 2023-01-31 140647](https://user-images.githubusercontent.com/64443925/215915939-7573b301-73ad-4108-98c8-5b3a164070df.png)\r\n\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4695"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27149145461","Type":"IssuesEvent","CreatedAt":"2023-02-16T22:53:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12227","RelatedDescription":"Closed issue \"dotnet restore fails in Arm-based container on an x64 host machine\" (#12227) at NuGet/Home","RelatedBody":"**Copied from post by @zimbres at https://github.com/dotnet/sdk/issues/28971:**\r\n\r\nWhen try to build arm64 containers using .Net7 results in a error on restore step.\r\n\r\nJust create a new web api for example with .Net7 as target framework and try to build it with buildx. For amd64 build works just fine.\r\n\r\n```\r\nPS C:\\Users\\Marcio\\OneDrive\\Documents\\VSCode\\asp.net\\EspUpdater> docker buildx build --platform linux/arm64 -t zimbres/espupdater -f .\\src\\EspUpdater\\Dockerfile --push . --no-cache\r\n[+] Building 66.2s (12/17)\r\n => [internal] load .dockerignore                                                                                                                                                                                          0.1s\r\n => => transferring context: 382B                                                                                                                                                                                          0.0s\r\n => [internal] load build definition from Dockerfile                                                                                                                                                                       0.1s\r\n => => transferring dockerfile: 622B                                                                                                                                                                                       0.0s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:7.0                                                                                                                                                          2.3s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:7.0                                                                                                                                                       2.0s\r\n => [build 1/7] FROM mcr.microsoft.com/dotnet/sdk:7.0@sha256:39069a126f2e3dd8f3aa72a21688d4de13ba23b051a8c5856be1460f8165c422                                                                                             52.0s\r\n => => resolve mcr.microsoft.com/dotnet/sdk:7.0@sha256:39069a126f2e3dd8f3aa72a21688d4de13ba23b051a8c5856be1460f8165c422                                                                                                    0.0s\r\n => => sha256:d508dcfcdd2e1834750cbcc43a9e0f44625d7cdbb349be5342f069a0a26a9d20 13.42MB / 13.42MB                                                                                                                           8.7s\r\n => => sha256:edd0ccac63956573208572413f089dcc51a922baced37a1c3588d55701aab5c3 150.47MB / 150.47MB                                                                                                                        38.8s\r\n => => sha256:62558e356c6cd900192712f446fefcd8029f9f54b12c87b4b342a392d2e9e9ed 25.39MB / 25.39MB                                                                                                                          11.1s\r\n => => extracting sha256:62558e356c6cd900192712f446fefcd8029f9f54b12c87b4b342a392d2e9e9ed                                                                                                                                  1.7s\r\n => => extracting sha256:edd0ccac63956573208572413f089dcc51a922baced37a1c3588d55701aab5c3                                                                                                                                  3.2s\r\n => => extracting sha256:d508dcfcdd2e1834750cbcc43a9e0f44625d7cdbb349be5342f069a0a26a9d20                                                                                                                                  0.3s\r\n => [internal] load build context                                                                                                                                                                                          0.1s\r\n => => transferring context: 6.72kB                                                                                                                                                                                        0.0s\r\n => [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:7.0@sha256:cc60f5590843f067871d72ffc99d3065f8556624d45465948166b11a08714ddc                                                                                           22.7s\r\n => => resolve mcr.microsoft.com/dotnet/aspnet:7.0@sha256:cc60f5590843f067871d72ffc99d3065f8556624d45465948166b11a08714ddc                                                                                                 0.0s\r\n => => sha256:9855365906865f18e48e4132950bb1f031a37afd9487af259eb8618313aaa672 9.80MB / 9.80MB                                                                                                                             6.2s\r\n => => sha256:e48426b90b5fe27894046a6b96e67e208ec25e2768a1c5bf76d233fa1ec1e7d6 155B / 155B                                                                                                                                 0.3s\r\n => => sha256:eafd3893bf918fb60399acce35d47fc92934372f519a0dc8ea56b7ae552a1524 30.71MB / 30.71MB                                                                                                                          19.1s\r\n => => sha256:dd6189d6fc13cb03db0f4a3d9659b6b6044fd5858019d659001eaf8367584d67 30.06MB / 30.06MB                                                                                                                          19.4s\r\n => => sha256:8487b5d2f3511cc5ae78d3f730d7f7e8f06466f6281464355fd6a464c95cab36 14.92MB / 14.92MB                                                                                                                           9.2s\r\n => => extracting sha256:dd6189d6fc13cb03db0f4a3d9659b6b6044fd5858019d659001eaf8367584d67                                                                                                                                  1.5s\r\n => => extracting sha256:8487b5d2f3511cc5ae78d3f730d7f7e8f06466f6281464355fd6a464c95cab36                                                                                                                                  0.4s\r\n => => extracting sha256:eafd3893bf918fb60399acce35d47fc92934372f519a0dc8ea56b7ae552a1524                                                                                                                                  0.8s\r\n => => extracting sha256:e48426b90b5fe27894046a6b96e67e208ec25e2768a1c5bf76d233fa1ec1e7d6                                                                                                                                  0.0s\r\n => => extracting sha256:9855365906865f18e48e4132950bb1f031a37afd9487af259eb8618313aaa672                                                                                                                                  0.3s\r\n => [base 2/2] WORKDIR /app                                                                                                                                                                                                0.7s\r\n => [final 1/2] WORKDIR /app                                                                                                                                                                                               0.1s\r\n => [build 2/7] WORKDIR /src                                                                                                                                                                                               1.4s\r\n => [build 3/7] COPY [src/EspUpdater/EspUpdater.csproj, src/EspUpdater/]                                                                                                                                                   0.0s\r\n => ERROR [build 4/7] RUN dotnet restore \"src/EspUpdater/EspUpdater.csproj\"                                                                                                                                               10.5s\r\n------\r\n > [build 4/7] RUN dotnet restore \"src/EspUpdater/EspUpdater.csproj\":\r\n#0 10.13 /usr/share/dotnet/sdk/7.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(55,5): error MSB4184: The expression \"[MSBuild]::GetTargetFrameworkVersion(net7.0, 2)\" cannot be evaluated. Exception has been thrown by the target of an invocation. [/src/src/EspUpdater/EspUpdater.csproj]\r\n------\r\nDockerfile:8\r\n--------------------\r\n   6 |     WORKDIR /src\r\n   7 |     COPY [\"src/EspUpdater/EspUpdater.csproj\", \"src/EspUpdater/\"]\r\n   8 | >>> RUN dotnet restore \"src/EspUpdater/EspUpdater.csproj\"\r\n   9 |     COPY . .\r\n  10 |     WORKDIR \"/src/src/EspUpdater\"\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c dotnet restore \\\"src/EspUpdater/EspUpdater.csproj\\\"\" did not complete successfully: exit code: 1\r\n```\r\n\r\n# Docker Version\r\n\r\n```\r\nPS C:\\Users\\Marcio\\OneDrive\\Documents\\VSCode\\asp.net\\EspUpdater> docker version\r\nClient:\r\n Cloud integration: v1.0.29\r\n Version:           20.10.20\r\n API version:       1.41\r\n Go version:        go1.18.7\r\n Git commit:        9fdeb9c\r\n Built:             Tue Oct 18 18:28:44 2022\r\n OS/Arch:           windows/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Desktop 4.13.1 (90346)\r\n Engine:\r\n  Version:          20.10.20\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.18.7\r\n  Git commit:       03df974\r\n  Built:            Tue Oct 18 18:18:35 2022\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.6.8\r\n  GitCommit:        9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6\r\n runc:\r\n  Version:          1.1.4\r\n  GitCommit:        v1.1.4-0-g5fd4c4d\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n# Docker Info\r\n```\r\nPS C:\\Users\\Marcio\\OneDrive\\Documents\\VSCode\\asp.net\\EspUpdater> docker info\r\nClient:\r\n Context:    default\r\n Debug Mode: false\r\n Plugins:\r\n  buildx: Docker Buildx (Docker Inc., v0.9.1)\r\n  compose: Docker Compose (Docker Inc., v2.5.1)\r\n  dev: Docker Dev Environments (Docker Inc., v0.0.3)\r\n  extension: Manages Docker extensions (Docker Inc., v0.2.13)\r\n  sbom: View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)\r\n  scan: Docker Scan (Docker Inc., v0.21.0)\r\n\r\nServer:\r\n Containers: 18\r\n  Running: 4\r\n  Paused: 0\r\n  Stopped: 14\r\n Images: 40\r\n Server Version: 20.10.20\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n  userxattr: false\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Cgroup Version: 1\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: io.containerd.runtime.v1.linux runc io.containerd.runc.v2\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6\r\n runc version: v1.1.4-0-g5fd4c4d\r\n init version: de40ad0\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 5.10.102.1-microsoft-standard-WSL2\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 12\r\n Total Memory: 15.6GiB\r\n Name: docker-desktop\r\n ID: BGP4:KFNX:A6XV:MDJT:AKET:PD7L:O7YG:6SHF:KNRB:EFFD:PD3W:6OC2\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n HTTP Proxy: http.docker.internal:3128\r\n HTTPS Proxy: http.docker.internal:3128\r\n No Proxy: hubproxy.docker.internal\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  hubproxy.docker.internal:5000\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n\r\nWARNING: No blkio throttle.read_bps_device support\r\nWARNING: No blkio throttle.write_bps_device support\r\nWARNING: No blkio throttle.read_iops_device support\r\nWARNING: No blkio throttle.write_iops_device support\r\n```\r\n"},{"Id":"27145217895","Type":"IssuesEvent","CreatedAt":"2023-02-16T19:24:38","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12383","RelatedDescription":"Closed issue \"Out of Memory on Simple project with dotnet restore\" (#12383) at NuGet/Home","RelatedBody":"I am running `dotnet restore` as part of a Jenkins build pipeline. The restore often fails with variations on OutOfMemory. I initially increased the 8Gb RAM on the machine to 16Gb, but this had no effect.\r\n\r\n`DeptXWindowsService.sln` is relatively straightforward, containing c. 12 projects. None of these projects are unusual, excepting perhaps that they are all .NET Framework 4.8 based. They all build on Visual Studio 2022 without problems.\r\n\r\nTo recreate the situation, I ran two command-line processes on the build machine, both of which failed. The command lines were:\r\n\r\n```\r\n> D:\\Build_Pipeline>dotnet restore -v diag Client\\DeptXWindowsService.sln 1> dotnet-restore.txt 2>&1\r\n\r\n> D:\\Build_Pipeline>dotnet restore --disable-parallel -v diag Client\\DeptXWindowsService.sln 1> dotnet-restore-disable-parallel.txt 2>&1\r\n```\r\n\r\n[dotnet-restore.txt](https://github.com/NuGet/Home/files/10498436/dotnet-restore.txt)\r\n[dotnet-restore-disable-parallel.txt](https://github.com/NuGet/Home/files/10498110/dotnet-restore-disable-parallel.txt)\r\n\r\nThis created the two outputs attached. Both processes exited with a failure after apparently running out of memory, displaying message boxes or stderr errors indicating the out of memory exception, albeit slightly different variations. I imagine this just depends on exactly where the process ran out of memory. Running identical commands back-to-back may even fail in slightly different ways, but they all amount to \"out of memory\".\r\n\r\nMemory usage is only around 5% of the 16Gb before running these processes and the machine is perfectly normal in set-up in other regards, such as normal amount of swap space. The main build task runs without requiring or using even a fraction of this memory.\r\n\r\nWhat can I do to stop this happening? The key issue is not \"What happens when it runs out of memory\", but rather \"Why is a simple `dotnet restore` using so much memory?\"\r\n\r\nVersions Information:\r\n```\r\nD:\\Build_Pipeline>msbuild /version\r\nMSBuild version 17.4.1+9a89d02ff for .NET Framework\r\n17.4.1.60106\r\nD:\\Build_Pipeline>dotnet --version\r\n7.0.102\r\n```\r\n[systeminfo.txt](https://github.com/NuGet/Home/files/10498282/systeminfo.txt)\r\n\r\n\r\n"},{"Id":"27144125325","Type":"IssuesEvent","CreatedAt":"2023-02-16T18:30:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10809","RelatedDescription":"Closed issue \"Restore dependencies for projects listed in a solution filter (.slnf) file\" (#10809) at NuGet/Home","RelatedBody":"NuGet product used: NuGet.exe\r\nProduct version: 5.8.1\r\n\r\nIt would be nice to be able to restore dependencies based on an .slnf file.\r\nBased on the release notes in v5.0 support was added for solution filters, but a restore must be done for the entire solution beforehand.\r\nhttps://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.0-rtm\r\n\r\nAs restoring dependencies based on .csproj files is possible, it would be handy if it would work for an .slnf file as well, which basically just lists corresponding csproj files.\r\n\r\nAs of now the command\r\n`nuget.exe restore \"C:\\Git\\SampleProject\\src\\Api.slnf\" -Verbosity detailed`\r\nproduces the following output:\r\n\r\n```\r\nNuGet Version: 5.8.1.7021\r\nC:\\Users\\SampleUser\\Downloads\\nuget.exe : Invalid input 'Api.slnf'. The file type was not recognized.\r\nAt line:1 char:1\r\n+ C:\\Users\\SampleUser\\Downloads\\nuget.exe restore \"C:\\Git\\SampleProject\\src ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (Invalid input '...not recognized.:String) [], RemoteException\r\n    + FullyQualifiedErrorId : NativeCommandError\r\n \r\nSystem.InvalidOperationException: Invalid input 'Api.slnf'. The file type was not recognized.\r\n   at NuGet.CommandLine.RestoreCommand.GetInputsFromFile(String projectFilePath, PackageRestoreInputs packageRestoreInputs)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineRestoreInputsAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n"},{"Id":"27109460048","Type":"IssuesEvent","CreatedAt":"2023-02-15T14:24:49","Actor":"Youssef1313","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12438","RelatedDescription":"Opened issue \"`IncludeContentInPack` shouldn't affect `None` items\" (#12438) at NuGet/Home","RelatedBody":"Having `<None Include=\"path/to/icon.png\" Pack=\"true\" PackagePath=\"icon.png\" />` along with `IncludeContentInPack` set to false doesn't include the `icon.png` file in the package.\r\n\r\nI don't think `IncludeContentInPack` should affect `None` items, especially when `Pack` is explicitly set to true."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-02-17T03:30:24.6651181Z","RunDurationInMilliseconds":1325}