{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39692152289","Type":"PullRequestEvent","CreatedAt":"2024-06-27T23:25:16","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10050","RelatedDescription":"Opened pull request \"fix constraint typo\" (#10050) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39692068212","Type":"PullRequestEvent","CreatedAt":"2024-06-27T23:19:06","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10040","RelatedDescription":"Closed pull request \"trim trailing whitespace\" (#10040) at NuGet/NuGetGallery","RelatedBody":"and update editorconfig"},{"Id":"39692049815","Type":"PullRequestEvent","CreatedAt":"2024-06-27T23:17:48","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10049","RelatedDescription":"Opened pull request \"add trim_trailing_whitespace = true to editorconfig\" (#10049) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39690272383","Type":"PullRequestEvent","CreatedAt":"2024-06-27T21:34:01","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9995","RelatedDescription":"Closed pull request \"fix Priviledged typo\" (#9995) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39686633034","Type":"IssuesEvent","CreatedAt":"2024-06-27T19:00:53","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13590","RelatedDescription":"Opened issue \"Add tests for partial CPM adoption\" (#13590) at NuGet/Home","RelatedBody":"We have a test gap for CPM so we need to add tests that verify that CPM can be disabled globally but still enabled for projects individually."},{"Id":"39678811534","Type":"IssuesEvent","CreatedAt":"2024-06-27T14:42:05","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13589","RelatedDescription":"Opened issue \"IOException during restore not very informative\" (#13589) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\n.NET SDK 9.0.100-preview.5.24307.3\n\n### Worked before?\n\nNot sure, this is the first time I've seen the exception.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI'm not sure what caused the underlying error but I had a build failure that manifested as\r\n\r\n```\r\n  sdk failed with 1 error(s) (3.0s)\r\n    S:\\sdk\\.dotnet\\sdk\\9.0.100-preview.5.24307.3\\NuGet.targets(170,5): error : Cannot create a file when that file already exists.\r\n\r\nBuild failed with 1 error(s) in 31.7s\r\n```\r\n\r\nWhich wasn't super helpful! I had a binlog attached which showed this stack:\r\n\r\n```\r\nSystem.IO.IOException: Cannot create a file when that file already exists.\r\n   at System.IO.FileSystem.MoveFile(String sourceFullPath, String destFullPath, Boolean overwrite)\r\n   at NuGet.Common.FileUtility.Move(String sourceFileName, String destFileName)\r\n   at NuGet.Common.FileUtility.Replace(String sourceFileName, String destFileName)\r\n   at NuGet.Common.FileUtility.Replace(Action`1 writeSourceFile, String destFilePath)\r\n   at NuGet.Common.FileUtility.Replace(Action`1 writeSourceFile, String destFilePath)\r\n   at NuGet.Commands.BuildAssetsUtils.WriteFiles(IEnumerable`1 files, ILogger log)\r\n   at NuGet.Commands.RestoreResult.CommitAssetsFileAsync(LockFileFormat lockFileFormat, ILogger log, Boolean toolCommit, CancellationToken token)\r\n   at NuGet.Commands.RestoreResult.CommitAsync(ILogger log, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CommitAsync(RestoreResultPair restoreResult, IRestoreProgressReporter progressReporter, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, IRestoreProgressReporter progressReporter, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n   at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreArgs, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n   at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n```\r\n\r\nIdeally the file being created would be called out by path, and the NuGet error would have more context about what NuGet was doing when this happened.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39672349868","Type":"IssuesEvent","CreatedAt":"2024-06-27T11:47:44","Actor":"ghoebenreich","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13588","RelatedDescription":"Opened issue \"Nuget restore with --packages does not work as expected. The deprecated folder C:\\Program Files\\dotnet\\sdk\\NuGetFallBackFolder is still used silently.\" (#13588) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.420 [C:\\Program Files\\dotnet\\sdk]\n\n### Worked before?\n\nNever\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI wanted to use the dotnet restore --package \"packages\" <MY solution> --force to restore all packages of my solution into the \"packages\" folder. No matter what I did I got different results on different computers.\r\n\r\nEvent after clearing the nuget cache with dotnet nuget locals all --clear i did not get the same number of restored packages. \r\n\r\nI found out that the previous directory \"C:\\Program Files\\dotnet\\sdk\\NuGetFallBackFolder\" which was used prior to .NET 3.0 Core was still considered as cache. If the nuget package was already present in the C:\\Program Files\\dotnet\\sdk\\NuGetFallBackFolder the nuget package was not saved to the packages folder.\r\n\r\nI would expect, using dotnet restore --force would take care of really considering all packages and store them, not only those which are in the official dotnet nuget cache lists.\r\n\r\nI also would think that if something got removed and deprecated the C:\\Program Files\\dotnet\\sdk\\NuGetFallBackFolder is not of concern anyhow and should be ignored.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39649199121","Type":"IssuesEvent","CreatedAt":"2024-06-26T19:02:56","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13587","RelatedDescription":"Opened issue \"Service 6.10 with CPM fix\" (#13587) at NuGet/Home","RelatedBody":"We're considering servicing Visual Studio 17.10 with https://github.com/NuGet/NuGet.Client/pull/5866 which fixes an unintentional breaking change in CPM for users that were selectively enabling the feature on a per-project basis."},{"Id":"39644523086","Type":"IssuesEvent","CreatedAt":"2024-06-26T16:18:23","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13122","RelatedDescription":"Closed issue \"Do not autoclose bot not working in the Home repo for PRs\" (#13122) at NuGet/Home","RelatedBody":"See example: https://github.com/NuGet/Home/blob/dev/.github/fabricbot.json\r\n\r\nNot sure what the problem is."},{"Id":"39620543393","Type":"IssuesEvent","CreatedAt":"2024-06-26T02:42:22","Actor":"HO-COOH","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13586","RelatedDescription":"Opened issue \"Wrong documentation in Create UWP package (C#)\" (#13586) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n[Link here](https://learn.microsoft.com/en-us/nuget/guides/create-uwp-packages-cs)\r\n\r\nObviously, you are not packaging any `dll` files in the `nuspec` file\r\n![image](https://github.com/NuGet/docs.microsoft.com-nuget/assets/42881734/c404a1cc-de30-4542-a4b6-a3f7d97a44bd)\r\n\r\nBut in the result screenshot, there are `dll` files out of nowhere\r\n![image](https://github.com/NuGet/docs.microsoft.com-nuget/assets/42881734/dbef26a7-ef5b-4a27-95f2-accdd7834a82)\r\n\r\nI get redirected by [this](https://github.com/NuGet/docs.microsoft.com-nuget/issues/3310)\n\n### Verbose Logs\n\n_No response_"},{"Id":"39618991400","Type":"IssuesEvent","CreatedAt":"2024-06-26T01:04:44","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13571","RelatedDescription":"Closed issue \"nuget restore warnings can't be suppressed with NoWarn in Visual Studio\" (#13571) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\n17.10\r\n\r\n### Worked before?\r\n\r\n17.9\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nAdd multiple nuget sources and set ManagePackageVersionsCentrally to true.\r\n\r\nVisual Studio show restore error even if \\<NoWarn>NU1507\\</NoWarn> specified for project.\r\n\r\nThere is no issues when using dotnet restore or msbuild.\r\n\r\nOnly legacy projects type affected.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nNU1507: Warning As Error: There are 2 package sources defined in your configuration. When using central package management, please map your package sources with package source mapping (https://aka.ms/nuget-package-source-mapping) or specify a single package source. The following sources are defined: nuget.org, dotnet-tools\r\nFailed to restore ****** (in 1,08 sec).\r\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\r\n```\r\n"},{"Id":"39618468676","Type":"IssuesEvent","CreatedAt":"2024-06-26T00:32:10","Actor":"dangavNZ","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13585","RelatedDescription":"Opened issue \"https://github.com/NuGet/docs.microsoft.com-nuget/issues/3237 - Unsorted list in nuget package manager GUI within VS\" (#13585) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nAll\n\n### Worked before?\n\nnever\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOpen Nuget UI.  Search for Newtonsoft.\r\n\r\nYou won't get the base package first, and what you do get is a randomly sorted list!\n\n### Verbose Logs\n\n```shell\n.\n```\n"},{"Id":"39618427702","Type":"IssuesEvent","CreatedAt":"2024-06-26T00:29:53","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13584","RelatedDescription":"Opened issue \"Change NuGetAuditMode default to all for non-SDK style projects\" (#13584) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe\n\n### Current Behavior\n\n`NuGetAuditMode` defaults to `direct` ever since the feature was introduced in VS17.8.\n\n### Desired Behavior\n\nChange the default to `all`, so that customers get warned about transitive packages with known vulnerabilities, in addition to direct packages. Note that this default has already been changed for SDK style projects using the .NET 9 SDK.\n\n### Additional Context\n\nJust like the .NET 9 SDK NuGetAuditMode defaults change, non-SDK style customers must be able to configure their project to use `direct`, and we should respect `SdkAnalysisLevel` even for non-SDK style projects, so that custoemrs can set it in a repo level *Directory.Build.props* and have it apply to non-SDK style projects, in addition to SDK style projects.\r\n\r\nFor more information on NuGetAudit, including `TreatWarningsNotAsErrors`, see our docs on the feature: https://learn.microsoft.com/nuget/concepts/auditing-packages"},{"Id":"39616229028","Type":"IssuesEvent","CreatedAt":"2024-06-25T22:16:14","Actor":"thaiknguyen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13583","RelatedDescription":"Opened issue \"Can not get API key with glob pattern to work\" (#13583) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nnuget.exe\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nCreate an API key with glob pattern: *alpha*\r\n\r\n\r\nI'm unable to push packages with that pattern in the name.. for example:\r\n\r\n>nuget push thaitest.alpha.AppLogger.3.0.0.nupkg -Source https://api.nuget.org/v3/index.json\r\nPushing thaitest.alpha.AppLogger.3.0.0.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 268ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n\r\nI'm actually trying to only allow pushing '-alpha' version packages for this API key, but also tried the package name; both failed.  If I changed the glob pattern to just *, then the above works.\r\n\n\n### Verbose Logs\n\n```shell\nnuget push thaitest.alpha.AppLogger.3.0.0.nupkg -Source https://api.nuget.org/v3/index.json -verbosity detailed\r\nNuGet Version: 6.10.0.107\r\nPushing thaitest.alpha.AppLogger.3.0.0.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 311ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\nSystem.Net.Http.HttpRequestException: Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n   at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.EnsureSuccessStatusCode(HttpResponseMessage response, Nullable`1 codeNotToThrow, ILogger logger)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<>c__DisplayClass26_0.<PushPackageToServer>b__0(HttpResponseMessage response)\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__20`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageToServer>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageCore>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackagePath>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<Push>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.PushRunner.<Run>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.PushCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\n```\n"},{"Id":"39615674444","Type":"IssuesEvent","CreatedAt":"2024-06-25T21:47:24","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13582","RelatedDescription":"Opened issue \"Show Owner information in Package Manager UI\" (#13582) at NuGet/Home","RelatedBody":"## Before 17.10\r\n- [ ] ~https://github.com/NuGet/NuGet.Client/pull/5505~\r\n- [x] https://github.com/NuGet/Home/pull/13030\r\n\r\n## 17.10 🚀\r\n- [x] https://github.com/NuGet/Home/issues/13186\r\n- [x] https://github.com/NuGet/docs.microsoft.com-nuget/pull/3280\r\n\r\n## 17.11 🚀\r\n- [x] https://github.com/NuGet/Home/issues/12501\r\n  - [x] https://github.com/NuGet/NuGet.Client/pull/5766\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/5763\r\n- [x] https://github.com/NuGet/NuGet.Client/pull/5843\r\n  - [x] https://github.com/NuGet/Home/pull/13514\r\n\r\n## Future 📃\r\n\r\n### P1\r\n- [ ] https://github.com/NuGet/docs.microsoft.com-nuget/issues/3287\r\n\r\n### P2\r\n- [ ] https://github.com/NuGet/Home/issues/13516\r\n  - [ ] (🚧 WIP) https://github.com/NuGet/Home/pull/13530\r\n- [ ] https://github.com/NuGet/Home/issues/10666"},{"Id":"39615005468","Type":"IssuesEvent","CreatedAt":"2024-06-25T21:15:40","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13579","RelatedDescription":"Closed issue \"[Bug Bash] The “Advisory (high severity)” link for installed vulnerable package is truncated in the right panel of PM UI when shrinking the VS window  \" (#13579) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.11.0.113\r\n\r\n### Worked before?\r\n\r\nIt can be repro on D17.10\\34902.84, but it doesn’t repro on D16.11\\34601.136 since the feature 'vulnerable package' was not merged into VS 16.11.\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a C# Console App (.NET Framework) project. \r\n\r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI. \r\n\r\n3. Go to \"Browse\" tab, search for a vulnerable package (e.g. \"Newtonsoft.Json\") and choose a vulnerable version (e.g. \"12.0.1\"). \r\n\r\n4. Shrink the VS window to make sure it is not the maximum. \r\n\r\n5. Resize the PM UI window to the left to make it not wide enough to display all controls. \r\n\r\n#### Expected:    \r\n\r\nThe “Advisory (high severity)” link isn’t truncated in right panel. \r\n\r\n#### Actual: \r\n\r\nThe “Advisory (high severity)” link is truncated as below: \r\n![image](https://github.com/NuGet/Home/assets/84695155/9effde0a-2c4d-4ed0-84b4-2cb82dff1fa5)\r\n\r\n\r\n#### Notes:     \r\n1. The repro rate is 100%. \r\n2. When shrinking the VS window and resizing the PM UI window to the left, we can see the horizontal bar at the bottom of the PM UI window, however dragging it to the right side would not resolve this issue. \r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"39610326830","Type":"IssuesEvent","CreatedAt":"2024-06-25T18:15:08","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13581","RelatedDescription":"Opened issue \"[EPIC] Build Provenance for NuGet\" (#13581) at NuGet/Home","RelatedBody":"- [ ] [Support OIDC authentication](https://github.com/NuGet/NuGetGallery/issues/9332)\r\n- [ ] Collect build information from CI/CD system so I can generate build provenance for my package\r\n- [ ] Extend the NuGet.org registry to support build provenance so it can store and verify the provenance information\r\n- [ ] Verify the provenance bundle so I trust the integrity / origin of the package\r\n- [ ] Provide provenance information to users\r\n\r\nPrior Art\r\n\r\n- https://github.com/npm/cli/blob/latest/workspaces/libnpmpublish/lib/publish.js#L173"},{"Id":"39592451054","Type":"IssuesEvent","CreatedAt":"2024-06-25T09:32:00","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13580","RelatedDescription":"Opened issue \"[Bug Bash] All checked projects were unchecked automatically when switching from ‘Updates’ or ‘Consolidate’ tab in the solution-level PM UI\" (#13580) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.11.0.113\n\n### Worked before?\n\nIt is not a regression since it reproes on D16.11\\34601.136.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1.\tCreate a solution with multiple projects, right-click the solution in the Solution Explorer window and select the menu item “Manage NuGet Packages for Solution…”..\r\n2.\tGo to ‘Browse’ tab, select ‘nuget.org’ in the ‘Package source’ drop-down list and install a package into the projects.\r\n3.\tCheck all the projects in the right panel of ‘Browse’ tab.\r\n4.\tClick the ‘Installed’ tab, click the installed package in the package list and observe the right panel.\r\n5.\tClick the ‘Updates’ tab or ‘Consolidate’ tab, click the ‘Installed’ tab again and observe the right panel.\r\n\r\n#### Expected Results:\r\nAll checked projects should not be unchecked automatically in step5 (same with the behavior in step4).\r\n\r\n#### Actual Result:\r\nAll checked projects were unchecked automatically in step5 as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/42abb26a-240a-4b68-b58b-ddc285050119)\r\n#### Notes:\r\n1. Repro rate: 100%.\r\n2. Switching to ‘Installed’ tab from ‘Browse’ tab is correct but switching to ‘Installed’ tab from ‘Updates’ or ‘Consolidate’ tab is incorrect.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39591250040","Type":"IssuesEvent","CreatedAt":"2024-06-25T08:57:52","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13579","RelatedDescription":"Opened issue \"[Bug Bash] The “Advisory (high severity)” link for installed vulnerable package is truncated in the right panel of PM UI when shrinking the VS window  \" (#13579) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.11.0.113\n\n### Worked before?\n\nIt can be repro on D17.10\\34902.84, but it doesn’t repro on D16.11\\34601.136 since it is a new feature for D\\16.11. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:    \r\n\r\n1. Create a C# Console App (.NET Framework) project. \r\n\r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI. \r\n\r\n3. Go to \"Browse\" tab, search for a vulnerable package (e.g. \"Newtonsoft.Json\") and choose a vulnerable version (e.g. \"12.0.1\"). \r\n\r\n4. Shrink the VS window to make sure it is not the maximum. \r\n\r\n5. Resize the PM UI window to the left to make it not wide enough to display all controls. \r\n\r\n#### Expected:    \r\n\r\nThe “Advisory (high severity)” link isn’t truncated in right panel. \r\n\r\n#### Actual: \r\n\r\nThe “Advisory (high severity)” link is truncated as below: \r\n![image](https://github.com/NuGet/Home/assets/84695155/9effde0a-2c4d-4ed0-84b4-2cb82dff1fa5)\r\n\r\n\r\n#### Notes:     \r\n1. The repro rate is 100%. \r\n2. When shrinking the VS window and resizing the PM UI window to the left, we can see the horizontal bar at the bottom of the PM UI window, however dragging it to the right side would not resolve this issue. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39582521215","Type":"IssuesEvent","CreatedAt":"2024-06-25T02:42:03","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13578","RelatedDescription":"Opened issue \"Some errors encountered when patching the .NET SDK with NuGet Dev latest build\" (#13578) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nDev\\6.11.0.113 \n\n### Worked before?\n\nIt is a regression since the issue doesn’t repro on patching Dotnet SDK with NuGet Client Dev\\6.11.0.110.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n**Repro Steps:**\r\n       1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n       2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with \r\n           administrative privileges” checked.\r\n       3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test \r\n           machine and named \"nupkgs\".\r\n       5. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script \r\n           with the commands:\r\n      ` .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-ssue\\Desktop\\PatchedSDK\\ -NupkgsPath C:\\Users\\v-ssue\\Desktop\\Nupkgs\\ -SDKChannel 8.0.4xx -Quality daily`\r\n\r\n**Expected Result:**\r\n\r\nThe patching is successful with no error.\r\n\r\n**Actual Result:**\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-28T03:30:18.4363075Z","RunDurationInMilliseconds":894}