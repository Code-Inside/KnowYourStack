{"Data":{"Blog":{"FeedItems":[{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won‚Äôt keep you ‚Äúin the dark‚Äù about this any longer‚Ä¶ Dark Mode for NuGet.org is finally here!¬†¬†\nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org‚Äôs Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 ‚Äì Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40122548114","Type":"PullRequestEvent","CreatedAt":"2024-07-13T18:49:27","Actor":"guibranco","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10072","RelatedDescription":"Opened pull request \"Update Trusted-Image-Domains.json\" (#10072) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add `app.deepsource.com` domain to the trusted image domains list.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9953"},{"Id":"40118296344","Type":"IssuesEvent","CreatedAt":"2024-07-13T10:26:20","Actor":"o-l-a-v","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10071","RelatedDescription":"Opened issue \"[Feature]: Add hosting of PowerShell modules\" (#10071) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nPowerShell Gallery runs NuGet v2 and has various API issues that does not seem to get attention.\r\n\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/267>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/268>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/269>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/270>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/273>\r\n\r\nPowerShell Gallery seems to be maintained by a small team. I absolutely believe they are doing what they can, with the time and resources they have. But limited resources hurts speed of fixing issues, and thus reliability and quality.\r\n\r\nInstead of keeping the PowerShell Gallery as a separate thing, why not just add PowerShell modules support to nuget.org?\n\n### The Elevator Pitch\n\nPowerShell modules and script are also `.nupkg` files, only with a tag `PSModule` if a module, and `PSScript` if a script, to tell PSResourceGet & PowerShellGet that \"this particular `.nupkg` file is indeed a PowerShell resource\".\r\n\r\n* Let the PowerShell community piggyback nuget.org, and thus get a much better API experience, better reliability, NuGet v3 backend etc.\r\n* Let Microsoft maintain less public infrastructure. Probably can't kill PowerShell Gallery in a heartbeat though.\r\n\r\nCan it be that much work to add that ability to the NuGet Gallery? ü§î I don't know, which is why I ask.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40113829454","Type":"IssuesEvent","CreatedAt":"2024-07-13T00:50:51","Actor":"donnie-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10070","RelatedDescription":"Opened issue \"De-emphasize Nuspec authors references to nuget.org\" (#10070) at NuGet/NuGetGallery","RelatedBody":"The documentation for `.nuspec` authors indicates that cross-referencing is done between `authors` and NuGet Gallery. See https://learn.microsoft.com/en-us/nuget/reference/nuspec#authors\r\n\r\n> A comma-separated list of packages authors, **matching the profile names on nuget.org**. These are displayed in the NuGet Gallery on nuget.org **and are used to cross-reference packages by the same authors**.\r\n\r\nMy observation is that author is displayed in the Copyright in the footer of the package details page.\r\n\r\nI'd like to remove this verbiage entirely from the document, and focus instead on authors being a freeform metadata. Wanted to verify first whether any cross-referencing is done for other reasons I'm not aware of currently."},{"Id":"40112064728","Type":"IssuesEvent","CreatedAt":"2024-07-12T22:09:02","Actor":"Cryptoc1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10069","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Unable to 'Edit' API Key\" (#10069) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWhen attempting to edit an API Key, an error (`500 Internal Server Error`) is encountered at `POST https://www.nuget.org/account/EditCredential`. \r\n\r\nThe end user receives a generic error alert on the website: \r\n![image](https://github.com/user-attachments/assets/32957079-7817-48c1-bc2d-81a74039da3c)\r\n\r\nUpon inspecting the failed request via DevTools, I could see the HTML directing me to file an issue:\r\n![image](https://github.com/user-attachments/assets/6e1bcbca-efe0-44ad-8838-be0e63170b72)\r\n\r\nError was encountered when editing an API Key owned directly by my account, as well as keys belonging to an org to which I am an owner/administrator.\r\n\r\nCurrent Workaround:\r\n- Delete key\r\n- Recreate key with desired settings\r\n- Update _all_ my pipeline secrets :)\n\n### Repro Steps\n\n1. Login to `https://www.nuget.org/account/apikeys`\r\n2. Select an API Key and click 'Edit'\r\n3. Modify key settings (e.g. \"Glob Pattern\")\r\n4. Click \"Edit\" to save changes\r\n5. Scroll up to see error\n\n### Expected Behavior\n\nAPI Key settings are saved.\n\n### Screenshots\n\nProvided in description.\n\n### Additional Context and logs\n\n_No response_"},{"Id":"40080407932","Type":"PullRequestEvent","CreatedAt":"2024-07-11T22:32:44","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10060","RelatedDescription":"Merged pull request \"Make tooltip block sitewide accessible and fix warning icon accessibility issue\" (#10060) at NuGet/NuGetGallery","RelatedBody":"* Move less and js to site less  and js file to make tooltip block sitewide accessible \r\n* Fixed tooltip block AI4W error\r\n* Add tooltip block to package waring icon to solve keyboard accessibility issue\r\n\r\nBug URL: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2087242\r\nResult:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/37f2573d-8779-43ef-8d4b-54b5ed557e2f)\r\n\r\n\r\n"},{"Id":"40080405051","Type":"PullRequestEvent","CreatedAt":"2024-07-11T22:32:33","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10064","RelatedDescription":"Merged pull request \"Fixed tooltip layout\" (#10064) at NuGet/NuGetGallery","RelatedBody":"* Add button role to tooltip target\r\n* Fix tooltip popup issue\r\n* Remove link from tooltip\r\nBug URLs: \r\n1. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2089796\r\n2. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2089795\r\n3. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2087140\r\n4. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2087164/?view=edit\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/b1d85535-5252-47da-8aa6-7b28088526ed)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/8846f99b-7772-4e60-b7ba-a7143f68c76f)\r\n\r\n"},{"Id":"40079986627","Type":"IssuesEvent","CreatedAt":"2024-07-11T22:09:21","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10068","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Scroll bars on graphs on https://www.nuget.org/stats\" (#10068) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThere are vertical scroll bars on the graphs:\r\n\r\n![image](https://github.com/user-attachments/assets/0b1ea0e8-7bbf-4af8-843d-aac830d5f480)\r\n\r\nIdeally, we won't need them.\n\n### Repro Steps\n\nOpen https://www.nuget.org/stats and scroll down to the graphs.\n\n### Expected Behavior\n\nNo scroll bars\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"40068963327","Type":"IssuesEvent","CreatedAt":"2024-07-11T15:10:59","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10067","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Alternating table row styling in Dark Mode\" (#10067) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nThe markdown rendering of alternating table row styling doesn't work well in dark mode\r\n\r\nhttps://www.nuget.org/packages/Azure.Identity#credential-classes\r\n\r\n<img width=\"872\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/1288848/726a229d-4736-44d5-9e9d-f9a617f30d4d\">\r\n\n\n### Repro Steps\n\n1. Open https://www.nuget.org/packages/Azure.Identity#credential-classes\r\n2. See the screenshot from above\n\n### Expected Behavior\n\nThe alternate table row styling should work in dark mode.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40135126345","Type":"IssuesEvent","CreatedAt":"2024-07-14T22:48:45","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13621","RelatedDescription":"Opened issue \"Add docs for NU1508\" (#13621) at NuGet/Home","RelatedBody":"Duplicate NuGetAuditSupress items, for https://github.com/NuGet/Home/issues/13620"},{"Id":"40114103904","Type":"IssuesEvent","CreatedAt":"2024-07-13T01:18:58","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13531","RelatedDescription":"Closed issue \"NuGet fails because of invalid characters in User-Agent header\" (#13531) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet SDK\n\n### Product Version\n\n9.0.100-preview.4.24267.66\n\n### Worked before?\n\nNo\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Install NixOS latest version (24.11 Vicu√±a).\r\n2. Attempt to restore nuget packages for a project.\r\n3. Unable to restore packages due to special character in header since the release name (Vicu√±a) is added to the HTTP header.\n\n### Verbose Logs\n\n```shell\n/nix/store/lax73wx0qp7v2wpydc0bii5hszj1dys5-dotnet-core-combined/sdk/9.0.100-preview.4.24267.66/MSBuild.dll -nologo -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/nix/store/jd1kkgy9psy5km4m6k0drbzd7i3vqga6-dotnet-sdk-9.0.100-preview.4.24267.66/sdk/9.0.100-preview.4.24267.66/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/nix/store/jd1kkgy9psy5km4m6k0drbzd7i3vqga6-dotnet-sdk-9.0.100-preview.4.24267.66/sdk/9.0.100-preview.4.24267.66/dotnet.dll -maxcpucount -target:Restore -tlp:default=auto -verbosity:m -verbosity:diag ./m3u8-dl.sln\r\n    Determining projects to restore...\r\n    /home/ggg/Git/GGG-KILLER/m3u8-dl/src/m3u8-dl.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n    Failed to restore /home/ggg/Git/GGG-KILLER/m3u8-dl/src/m3u8-dl.csproj (in 5.76 sec).\r\n    /home/ggg/Git/GGG-KILLER/m3u8-dl/test/m3u8-dl.Test.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n    /home/ggg/Git/GGG-KILLER/m3u8-dl/src/m3u8-dl.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n    Failed to restore /home/ggg/Git/GGG-KILLER/m3u8-dl/test/m3u8-dl.Test.csproj (in 11.61 sec).\n```\n"},{"Id":"40113380489","Type":"IssuesEvent","CreatedAt":"2024-07-13T00:04:27","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13619","RelatedDescription":"Closed issue \"Solution Explorer search can be broken by skipped dataflow updates\" (#13619) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/5508 reduced the number of tree updates by suppressing notifications when data is unchanged.\r\n\r\n`AssetsFileDependenciesTreeSearchProvider` uses `GetLatestVersionAsync` to obtain the latest snapshot value, relative to the current data versions of the project. However suppression of updates meant that the latest version might not be present, and the call would hang indefinitely. This would break Solution Explorer search for customers who enabled \"Search External Items\", have SDK-style .NET projects in the solution, and make certain project changes that lead to so-called \"version-only\" updates."},{"Id":"40111490017","Type":"IssuesEvent","CreatedAt":"2024-07-12T21:31:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13620","RelatedDescription":"Opened issue \"Add a log code NuGetAuditSuppress duplicate items\" (#13620) at NuGet/Home","RelatedBody":"Duplicate item checking is supposed to raise warnings when duplicates are seen. \r\n\r\nWhen NuGetAuditSuppress was added, NU1505 was added as a warning for it. \r\nThis should be a new log code. \r\n\r\ncc @zivkan "},{"Id":"40106260176","Type":"IssuesEvent","CreatedAt":"2024-07-12T17:24:14","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13309","RelatedDescription":"Closed issue \"Roll-out new breaking change process for SDK tools, respect SdkAnalysisLevel\" (#13309) at NuGet/Home","RelatedBody":"See design: https://github.com/dotnet/designs/pull/308. \r\n\r\n\r\nNuGet needs to adopt this whenever a new feature that significantly affects analysis levels is needed. "},{"Id":"40095972276","Type":"IssuesEvent","CreatedAt":"2024-07-12T11:27:12","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13619","RelatedDescription":"Opened issue \"Solution Explorer search can be broken by skipped dataflow updates\" (#13619) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/5508 reduced the number of tree updates by suppressing notifications when data is unchanged.\r\n\r\n`AssetsFileDependenciesTreeSearchProvider` uses `GetLatestVersionAsync` to obtain the latest snapshot value, relative to the current data versions of the project. However suppression of updates meant that the latest version might not be present, and the call would hang indefinitely. This would break Solution Explorer search for customers who enabled \"Search External Items\", have SDK-style .NET projects in the solution, and make certain project changes that lead to so-called \"version-only\" updates."},{"Id":"40081430553","Type":"IssuesEvent","CreatedAt":"2024-07-11T23:44:19","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13584","RelatedDescription":"Closed issue \"Change NuGetAuditMode default to all for non-SDK style projects\" (#13584) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe, MSBuild.exe\r\n\r\n### Current Behavior\r\n\r\n`NuGetAuditMode` defaults to `direct` ever since the feature was introduced in VS17.8.\r\n\r\n### Desired Behavior\r\n\r\nChange the default to `all`, so that customers get warned about transitive packages with known vulnerabilities, in addition to direct packages. Note that this default has already been changed for SDK style projects using the .NET 9 SDK.\r\n\r\n**NOTE ON BREAKING CHANGE**\r\n\r\nNuGetAudit raises warnings when packages with vulnerabilities are found. But many people use \"treat errors as warnings\", so it will give the appearance of a breaking change. Therefore, I've labeled this issue as \"breaking change\", even though it's technically not, in order to raise visibility.\r\n\r\n### Additional Context\r\n\r\nJust like the .NET 9 SDK NuGetAuditMode defaults change, non-SDK style customers must be able to configure their project to use `direct`, and we should respect `SdkAnalysisLevel` even for non-SDK style projects, so that custoemrs can set it in a repo level *Directory.Build.props* and have it apply to non-SDK style projects, in addition to SDK style projects.\r\n\r\nFor more information on NuGetAudit, including `TreatWarningsNotAsErrors`, see our docs on the feature: https://learn.microsoft.com/nuget/concepts/auditing-packages"},{"Id":"40078582497","Type":"IssuesEvent","CreatedAt":"2024-07-11T21:00:14","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12698","RelatedDescription":"Closed issue \"Audit security vulnerabilities without adding nuget.org as package source \" (#12698) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nStarting with .NET 8, `dotnet restore` can warn about security vulnerabilities in referenced packages.\r\n[According to the docs](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-restore#audit-for-security-vulnerabilities) this will only work when adding nuget.org as a package source.\r\n\r\n> Additionally, to retrieve the known vulnerability dataset, ensure that you have the NuGet.org central registry defined as one of your package sources:\r\n\r\nPlease make it possible to use the security audit feature of `dotnet restore` without having to add nuget.org as a package source. Nuget.org should not implicitly become a package source but just the source for the known vulnerability dataset.\n\n### Additional Context and Details\n\nThe company I work for maintains their own feed which contains a curated list of packages mirrored from nuget.org that are safe/allowed to be use in the company. The direct use of nuget.org as a package source is prohibited."},{"Id":"40070681040","Type":"IssuesEvent","CreatedAt":"2024-07-11T16:02:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13617","RelatedDescription":"Closed issue \"Add nullability declarations to ResolverUtility and RemoteWalkContext\" (#13617) at NuGet/Home","RelatedBody":""},{"Id":"40053016847","Type":"IssuesEvent","CreatedAt":"2024-07-11T07:17:14","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13618","RelatedDescription":"Opened issue \"[Bug Bash] The tooltip of ‚ÄòPackage source‚Äô dropdown box in PMC is inconsistent with the PM UI  \" (#13618) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nNuGet Client Dev\\6.12.0.18\n\n### Worked before?\n\nIt is not a regression since it reproes on D16.11\\34601.136.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:‚ÄØ‚ÄØ‚ÄØ \r\n\r\n1. Create a C# Console App (.NET core) project in VS. \r\n\r\n2. Click menu Tools->NuGet Package Manager->Package Manager Console to open PMC.  \r\n\r\n3. Hover on ‚ÄòPackage source‚Äô drop down list on the left-top of PMC window. \r\n\r\n#### Expected:‚ÄØ‚ÄØ‚ÄØ \r\n\r\n\r\nThe tooltip should show the selected package source, it should be consistent with the tooltip of the same dropdown box in the PM UI shown below. \r\n![0711-1](https://github.com/NuGet/Home/assets/84695155/f8bb9282-518e-4e41-94ee-8bc01d5edafc)\r\n#### Actual: \r\n\r\n\r\nThe tooltip doesn‚Äôt show any tip for the selected package source as the screenshot below: \r\n![0711](https://github.com/NuGet/Home/assets/84695155/dee1ecdf-9f57-4032-9a33-553541616146)\r\n#### Note:‚ÄØ‚ÄØ‚ÄØ‚ÄØ \r\n\r\n1. The repro rate is 100%. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"40044709673","Type":"IssuesEvent","CreatedAt":"2024-07-10T23:11:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13617","RelatedDescription":"Opened issue \"Add nullability declarations to ResolverUtility and RemoteWalkContext\" (#13617) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-15T03:30:18.9560648Z","RunDurationInMilliseconds":952}