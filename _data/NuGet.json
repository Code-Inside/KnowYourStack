{"Data":{"Blog":{"FeedItems":[{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9¬†and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 ‚Äì 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"16038308432","Type":"PullRequestEvent","CreatedAt":"2021-04-22T02:40:44","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8539","RelatedDescription":"Opened pull request \"[A11y] Remove collapse from cancel button in ApiKey page.\" (#8539) at NuGet/NuGetGallery","RelatedBody":"The cancel button is announced as expanded when it's clickable (you don't know it's collapse because it's disabled), but since that button doesn't actually expands data we got a bug for that behavior.\r\n* removed collapse from cancel button.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8496."},{"Id":"16037638875","Type":"PullRequestEvent","CreatedAt":"2021-04-22T01:01:31","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8538","RelatedDescription":"Opened pull request \"[A11y] Moved aria-labelledby so that announcer says correctly radio button grouping.\" (#8538) at NuGet/NuGetGallery","RelatedBody":"* Moved aria-labelledby to `label` instead of the `input` element.\r\n\r\nWith this change it's more clear that radio button is checked or not when traversing the page with arrow keys.\r\n\r\nAddresses https://github.com/nuget/nugetgallery/issues/8495."},{"Id":"16033343160","Type":"IssuesEvent","CreatedAt":"2021-04-21T17:41:17","Actor":"zivkan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8511","RelatedDescription":"Reopened issue \"Installation instructions for NUKE\" (#8511) at NuGet/NuGetGallery","RelatedBody":"Hi everyone! I'm basically following up on another recent proposal to extend the installation instruction tabs.\r\n\r\n## Proposal\r\n\r\nNUKE provides a `nuke :add-package <package-id> [package-version]` command via our [global tool](https://www.nuget.org/packages/nuke.globaltool), which allows installing packages to the build project. The command works from any directory of a repository built with NUKE, thus covering more situations compared to the conventional `dotnet add` command. More importantly, though, it automatically determines _how_ a package should be installed, which is either as `PackageReference` (regular libraries) or `PackageDownload` (tool packages). The latter is a great feature (thanks once more @nkolev92), because it allows a build to reference tools without messing with references (implicit `ExcludeAssets`), and works with tools in different versions (`PackageReference` wouldn't allow that even with `ExcludeAssets`).\r\n\r\nWe would like to display this command as installation instructions under a separate \"NUKE\" tab. Today, users naturally use `PackageReference` instead of `PackageDownload`, which often completely breaks the compilation of the build project, and overall _is_ a sub-optimal approach.\r\n\r\n## Listing Criteria\r\n\r\nRegarding if we meet the criteria, here are my comments:\r\n\r\n- Signification adoption in .NET community: currently at 1.4M total downloads and around 1k downloads per day for the [main package](https://www.nuget.org/packages/Nuke.Common/)\r\n- Actively maintained and updated: the project is continuously maintained for the last 4 years (since its creation), and as mentioned below used by a wide range of companies and projects\r\n- Security compliance: We have repeatable builds. Publish signed packages. Have a package prefix reservation. And 2FA for NuGet.org!\r\n\r\n## Background\r\n\r\n[NUKE](https://nuke.build) is a build automation system, which is created with the idea to integrate with other .NET tools natively. That means it uses regular C# projects for the build implementation and thus comes with IDE integration out-of-the-box, including navigation, refactoring, and debugging. It is well adopted with almost 1k downloads per day, and many companies and projects are actively using or transitioning to it (e.g. OctopusDeploy, JetBrains, AvaloniaUI, ASP.NET Boilerplate, CsvHelper, FluentAssertions, HotChocolate).\r\n\r\n---\r\n\r\nWe and our users would really appreciate if this proposal would be accepted! üôè"},{"Id":"16030327840","Type":"IssuesEvent","CreatedAt":"2021-04-21T14:15:55","Actor":"matkoch","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8511","RelatedDescription":"Closed issue \"Installation instructions for NUKE\" (#8511) at NuGet/NuGetGallery","RelatedBody":"Hi everyone! I'm basically following up on another recent proposal to extend the installation instruction tabs.\r\n\r\n## Proposal\r\n\r\nNUKE provides a `nuke :add-package <package-id> [package-version]` command via our [global tool](https://www.nuget.org/packages/nuke.globaltool), which allows installing packages to the build project. The command works from any directory of a repository built with NUKE, thus covering more situations compared to the conventional `dotnet add` command. More importantly, though, it automatically determines _how_ a package should be installed, which is either as `PackageReference` (regular libraries) or `PackageDownload` (tool packages). The latter is a great feature (thanks once more @nkolev92), because it allows a build to reference tools without messing with references (implicit `ExcludeAssets`), and works with tools in different versions (`PackageReference` wouldn't allow that even with `ExcludeAssets`).\r\n\r\nWe would like to display this command as installation instructions under a separate \"NUKE\" tab. Today, users naturally use `PackageReference` instead of `PackageDownload`, which often completely breaks the compilation of the build project, and overall _is_ a sub-optimal approach.\r\n\r\n## Listing Criteria\r\n\r\nRegarding if we meet the criteria, here are my comments:\r\n\r\n- Signification adoption in .NET community: currently at 1.4M total downloads and around 1k downloads per day for the [main package](https://www.nuget.org/packages/Nuke.Common/)\r\n- Actively maintained and updated: the project is continuously maintained for the last 4 years (since its creation), and as mentioned below used by a wide range of companies and projects\r\n- Security compliance: We have repeatable builds. Publish signed packages. Have a package prefix reservation. And 2FA for NuGet.org!\r\n\r\n## Background\r\n\r\n[NUKE](https://nuke.build) is a build automation system, which is created with the idea to integrate with other .NET tools natively. That means it uses regular C# projects for the build implementation and thus comes with IDE integration out-of-the-box, including navigation, refactoring, and debugging. It is well adopted with almost 1k downloads per day, and many companies and projects are actively using or transitioning to it (e.g. OctopusDeploy, JetBrains, AvaloniaUI, ASP.NET Boilerplate, CsvHelper, FluentAssertions, HotChocolate).\r\n\r\n---\r\n\r\nWe and our users would really appreciate if this proposal would be accepted! üôè"},{"Id":"16021657196","Type":"IssuesEvent","CreatedAt":"2021-04-21T00:57:49","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8497","RelatedDescription":"Closed issue \"Adjust TFM backfill logic to support portable edge cases\" (#8497) at NuGet/NuGetGallery","RelatedBody":"Seeing some interesting errors in TFM collection in PROD:\nexample: System.ArgumentException: Invalid portable frameworks 'net40-client+sl5'. A hyphen may not be in any of the portable framework names.\nAlso some out of memory exceptions.\n"},{"Id":"16021636131","Type":"PullRequestEvent","CreatedAt":"2021-04-21T00:54:24","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8536","RelatedDescription":"Merged pull request \"Adjust support request hint to include DMCA text\" (#8536) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/8535\r\n\r\nA text update for the hint of the text area in the support request edit dialog, prompting users to format their resolution to cover the  data we need for searches."},{"Id":"16021619619","Type":"PullRequestEvent","CreatedAt":"2021-04-21T00:51:39","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8531","RelatedDescription":"Merged pull request \"Adjust try blocks, repair empty TFM metadata case\" (#8531) at NuGet/NuGetGallery","RelatedBody":"Logic tweak--exceptions were still sneaking through because the try block for harvesting TFMs only surrounded the method call doing the extraction - it didn't surround the loop enumerating them. The collection is `IEnumerable`, so of course throwing can still take place while enumerating. The diffing isn't great here, but that's what's happening in `UpdatePackage`. Forcing another enumeration `ToList` is for the same reason.\r\n\r\nAlso, the case where no TFMs were being persisted to the metadata file was throwing on the update cycle. I needed to null the `MissingFieldFound` action on the csvReader (this instruction comes from the exception thrown by csvReader). The null case is covered in update code so this fixed the issue."},{"Id":"16017864933","Type":"PullRequestEvent","CreatedAt":"2021-04-20T18:22:35","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8537","RelatedDescription":"Merged pull request \"[A11Y] Screenreader does not read required keyword for the control ‚ÄúPackage Owner\".\" (#8537) at NuGet/NuGetGallery","RelatedBody":"* Added aria-required=\"true\" to announce a required input.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8494"},{"Id":"16007012306","Type":"PullRequestEvent","CreatedAt":"2021-04-20T05:10:00","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8537","RelatedDescription":"Opened pull request \"[A11Y] Screenreader does not read required keyword for the control ‚ÄúPackage Owner\".\" (#8537) at NuGet/NuGetGallery","RelatedBody":"* Added aria-required=\"true\" to announce a required input.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8494"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"16037542198","Type":"IssuesEvent","CreatedAt":"2021-04-22T00:46:22","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10779","RelatedDescription":"Closed issue \"Tools -> Options -> NuGet Package Manager string is truncated\" (#10779) at NuGet/Home","RelatedBody":"Related to: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1151266\n\nAffected Branch:\nAffected Build: Version 16.7.0 Preview 4.0 [30301.268.master]\nAffected Product Language:\n\nSteps to reproduce:\n\n1. open tools->options->NuGet Package Manager\n2. observe the string in the label for \"Automatically check for missing packages during build in Visual\n\n\n**Expected**\nthe string should either end with \"in Visual Basic\" or with \"during build.\"\n\n**Observed**\nthe string appears trunctated, and has extraneous information (\"in Visual\"). I also question how this string will appear after localization.\n\n![image.png](https://images.zenhubusercontent.com/5fb70598d06a06645c8439d4/e0867be4-577d-401e-8bc2-e3556b98b7d3)"},{"Id":"16036220263","Type":"IssuesEvent","CreatedAt":"2021-04-21T21:52:08","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10790","RelatedDescription":"Opened issue \"`PackageLoadContext.GetInstalledAndTransitivePackagesAsync` is dead code and hurting performance\" (#10790) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: 16.9+\r\n\r\nWorked before? If so, with which NuGet version: N/A\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\nThe following code doesn't appear to be needed. It also hurts performance.\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/PackageLoadContext.cs#L60\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"16034198039","Type":"IssuesEvent","CreatedAt":"2021-04-21T18:53:08","Actor":"ViktorHofer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10789","RelatedDescription":"Opened issue \"Allow specifying the msbuild binlog path when invoking static graph restore to avoid modifying the environment\" (#10789) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): dotnet.exe\r\n\r\nProduct version: 6.0.100-preview.3.21202.5\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\nWhen using static graph restore, the environment variable `RESTORE_TASK_BINLOG_PARAMETERS` needs to be set to generate a binlog for the out-of-process evaluation of the projects. If you are already inside an msbuild instance, it's not possible to modify the existing environment variables without a custom task (either compiled or inline).\r\n\r\nTo avoid modifying the existing environment, `RestoreTaskEx` task could accept a property to specify the path to the restore binlog which is then passed in as an environment variable to the restore task console.\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"16033769652","Type":"IssuesEvent","CreatedAt":"2021-04-21T18:16:44","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10787","RelatedDescription":"Closed issue \"packages.lock.json contentHash different from manually generated value\" (#10787) at NuGet/Home","RelatedBody":"## contentHash in packages.lock.json not reproducible via manual steps\r\n\r\nContentHash seems to be base64 encoded sha512 hash (at least based on the source: https://github.com/NuGet/NuGet.Client/blob/d3a633a04da7cd83900498334ec5e7650a52fa86/src/NuGet.Core/NuGet.Packaging/PackageArchiveReader.cs#L460).\r\nWe want to use this value for our SBOM files and be able to reproduce it via our logic in isolated environment. However the base64 encoded SHA512 hash differs from the contentHash in packages.lock.json\r\n\r\nNuGet Version: 5.7.0.6726\r\n\r\n## Repro steps and/or sample project\r\n\r\n```\r\n$filePath = \"C:\\trash\\delete\\NugetsSBOM\\packages\\Newtonsoft.Json.13.0.1\\Newtonsoft.Json.13.0.1.nupkg\"\r\n\r\n$content = Get-Content -Encoding byte $filePath\r\n\r\n[System.Convert]::ToBase64String( [System.Security.Cryptography.SHA512]::Create().ComputeHash($content) )\r\n```\r\nresult: g3MbZi6vBTeaI/hEbvR7vBETSd1DWLe9i1E4P+nPY34v5i94zqUqDXvdWC3G+7tYN9SnsdU9zzegrnRz4h7nsQ==\r\ncontentHash: ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==\r\n\r\n```\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETFramework,Version=v4.5\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[13.0.1, 13.0.1]\",\r\n        \"resolved\": \"13.0.1\",\r\n        \"contentHash\": \"ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nGenerated via: `nuget restore NugetsSBOM.sln -UseLockFile`\r\n\r\nIs this expected?\r\nHow exctly is the `contetHash` calculated?\r\n\r\n\r\n"},{"Id":"16033584019","Type":"IssuesEvent","CreatedAt":"2021-04-21T18:01:09","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10788","RelatedDescription":"Opened issue \"Show help only for the error itself has to do with a command, argument, or option being invalid with `dotnet nuget` command\" (#10788) at NuGet/Home","RelatedBody":"## Details about Problem\n\nNuGet product used (dotnet.exe):\n\nProduct version: \n\nWorked before? If so, with which NuGet version: N/A\n\n## Repro steps and/or sample project\n[Printing out help doesn't help at all unless the error itself has to do with a command, argument, or option being invalid.](https://github.com/NuGet/NuGet.Client/pull/3989/files#r617113765)\nCurrent experience show for `dotnet nuget` is different from `nuget.exe`. It show help  when there is a exception like InvalidOperationException even though it's nothing to do with `a command, argument, or option being invalid`\n\nFor example:\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/e710bb55-da5d-4335-9fd5-2d2a4f3f35e0)\n\nIt adds red marked help even though it's not really needed.\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/255c5666-e5e5-480a-9dc1-92d834bc97ca)\n### Verbose Logs\n\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\n"},{"Id":"16033339884","Type":"IssuesEvent","CreatedAt":"2021-04-21T17:41:00","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10784","RelatedDescription":"Closed issue \"Add a NUKE tab for NuGet packages\" (#10784) at NuGet/Home","RelatedBody":"I'm following up on @JonDouglas suggesting to use the new template for my original proposal from NuGet/NuGetGallery#8511. Spec is here https://github.com/NuGet/Home/pull/10782.\r\n\r\n<img width=\"876\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5005566/115483260-bdc7bf80-a250-11eb-8385-cb6e7a52c99f.png\">\r\n\r\nHappy to answer your questions! :)"},{"Id":"16032958028","Type":"IssuesEvent","CreatedAt":"2021-04-21T17:09:57","Actor":"jakrivan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10787","RelatedDescription":"Opened issue \"packages.lock.json contentHash different from manually generated value\" (#10787) at NuGet/Home","RelatedBody":"## contentHash in packages.lock.json not reproducible via manual steps\r\n\r\nContentHash seems to be base64 encoded sha512 hash (at least based on the source: https://github.com/NuGet/NuGet.Client/blob/d3a633a04da7cd83900498334ec5e7650a52fa86/src/NuGet.Core/NuGet.Packaging/PackageArchiveReader.cs#L460).\r\nWe want to use this value for our SBOM files and be able to reproduce it via our logic in isolated environment. However the base64 encoded SHA512 hash differs from the contentHash in packages.lock.json\r\n\r\nNuGet Version: 5.7.0.6726\r\n\r\n## Repro steps and/or sample project\r\n\r\n```\r\n$filePath = \"C:\\trash\\delete\\NugetsSBOM\\packages\\Newtonsoft.Json.13.0.1\\Newtonsoft.Json.13.0.1.nupkg\"\r\n\r\n$content = Get-Content -Encoding byte $filePath\r\n\r\n[System.Convert]::ToBase64String( [System.Security.Cryptography.SHA512]::Create().ComputeHash($content) )\r\n```\r\nresult: g3MbZi6vBTeaI/hEbvR7vBETSd1DWLe9i1E4P+nPY34v5i94zqUqDXvdWC3G+7tYN9SnsdU9zzegrnRz4h7nsQ==\r\ncontentHash: ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==\r\n\r\n```\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETFramework,Version=v4.5\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[13.0.1, 13.0.1]\",\r\n        \"resolved\": \"13.0.1\",\r\n        \"contentHash\": \"ppPFpBcvxdsfUonNcvITKqLl3bqxWbDCZIzDWHzjpdAHRFfZe0Dw9HmA0+za13IdyrgJwpkDTDA9fHaxOrt20A==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nGenerated via: `nuget restore NugetsSBOM.sln -UseLockFile`\r\n\r\nIs this expected?\r\nHow exctly is the `contetHash` calculated?\r\n\r\n\r\n"},{"Id":"16032934136","Type":"IssuesEvent","CreatedAt":"2021-04-21T17:07:59","Actor":"simonvane","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10786","RelatedDescription":"Opened issue \"Can't single list packages for all projects in a folder.\" (#10786) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI need to provide a list of nuget packages that we use every time I release our .net core 3.1 application.\r\n\r\nThe solution is structure as follows:\r\n\r\n-solution folder\r\n solution file\r\n--src (folder)\r\n---project1 (folder)\r\nproject1.csproj\r\n---project2 (folder)\r\nproject2.csproj\r\n--test (folder)\r\n---project1.tests (folder)\r\nproject1.tests.csproj\r\n---project2.tests (folder)\r\nproject2.tests.csproj\r\n\r\n- I would like to be able to get a unique list of used nuget packages using \"dotnet list [folder] packages\".\r\n(Perhaps this would need flags to control recursion and whether to flatten to unique packages).\r\n- I would like to be able to get the response in a way that I could further process programmatically in PowerShell e.g. in JSON, rather than the current output designed for human consumption. \r\n\r\nProduct version: \r\ndotnet --version\r\n5.0.202\r\n\r\nnuget\r\nName             : Package Manager Host\r\nVersion          : 5.9.1.0\r\nInstanceId       : b577b347-4955-4c77-b1e3-b264bfa313bb\r\nUI               : System.Management.Automation.Internal.Host.InternalHostUserInterface\r\nCurrentCulture   : en-GB\r\nCurrentUICulture : en-US\r\nPrivateData      : NuGetConsole.Host.PowerShell.Implementation.NuGetPSHost+Commander\r\nDebuggerEnabled  : True\r\nIsRunspacePushed : False\r\nRunspace         : System.Management.Automation.Runspaces.LocalRunspace"},{"Id":"16031063753","Type":"IssuesEvent","CreatedAt":"2021-04-21T14:59:38","Actor":"JonPSmith","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10785","RelatedDescription":"Opened issue \"dotnet pack: Getting NU5008: Manifest file not found in one folder, but not in another folder\" (#10785) at NuGet/Home","RelatedBody":"I am getting different results from `dotnet pack` when in different folders - both work but one produces error messages. There must be some sort of rules that I'm not aware with and I could use some help to understand how `dotnet pack` works with solutions/projects.\r\n\r\n### What I am trying to achieve:\r\n\r\nI am trying to build a dotnet tool that will allow multiple projects to go into one NuGet package (part of my modular monolith approach). I'm using this tool to allow me to break up large solutions into separate NuGet packages. You would run the tool at the solution level so that it can find all the projects to include in the NuGet package.\r\n\r\nI get errors running the `dotnet pack` at the solution folder level, which isn't going to work for other users.\r\n\r\n## Details about Problem\r\n\r\nI have a VS solution with the following (example) file structure\r\n\r\n- SolutionFolder (actually MultiProjPackTool , but make it easier to understand I use SolutionFolder)\r\n   - Group1.Project1\r\n       - Group1.Project1.csproj\r\n    - Group1.Project2\r\n       - Group1.Project2.csproj\r\n    - Group1.Project3\r\n       - Group1.Project3.csproj\r\n    - MultiProjPackTool \r\n\r\nMy `CreateNuGetDebug .nuspec` file looks like this (but different version num for each folder)\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>BookApp.Books</id>\r\n    <version>1.0.0-preview001</version>\r\n    <authors>The authors</authors>\r\n    <description>description of this NuGet package</description>\r\n    <dependencies>\r\n      <group targetFramework=\"net5.0\">\r\n        <dependency id=\"Microsoft.Extensions.Logging\" version=\"5.0.0\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"13.0.1\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\" target=\"lib\\net5.0\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nWhen I run the command `dotnet pack -p:NuspecFile=CreateNuGetDebug.nuspec` (which has the version of `1.0.0-preview002`) at the `...SolutionFolder\\MultiProjPackTool\\` it works fine, with the following output.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\n```\r\n\r\n\r\nWhen I run the same command with the same .nuspec (copied) in the folder `...SolutionFolder\\` (which has the version of `1.0.0-preview001`) it gives me the following output **BUT it still creates a valid .nupkg file!! (see `Successfully created package ... ` output below)**. It also puts the .nupkg file into the MultiProjPackTool\\bin\\Debug folder.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Group1.Project3 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\r\n  Group2.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\bin\\Debug\\netstandard2.1\\Group2.Project1.dll\r\n  Group1.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\r\n  Group1.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\Group2.Project1.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\Group1.Project3.csproj]\r\n  Group2.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\bin\\Debug\\net5.0\\Group2.Project2.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\Group1.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\Group2.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\Group1.Project1.csproj]\r\n```\r\n\r\n## Access to the code\r\n\r\nThe actual code is open-source at https://github.com/JonPSmith/MultiProgPackTool\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15928910571","Type":"IssuesEvent","CreatedAt":"2021-04-13T21:31:59","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/58","RelatedDescription":"Opened issue \"NuGet repository signature certificate will expire on April 14th, 2021\" (#58) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nAt 5:00AM PST on April 14th, 2021, the [NuGet repository signing certificate will expire](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/). This certificate is used to verify the content integrity of a package and protect against content tampering. When the signing certificate expires, it will fallback to a timestamp for verification.\r\n\r\nFor packages that have not been automatically re-signed by NuGet.org with an updated certificate, you may be affected by [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://github.com/NuGet/Announcements/issues/56). Only a subset of NuGet.org packages have been re-signed with a new certificate since March 15th, 2021.\r\n\r\nGiven that the [NuGet Microsoft author signing certificate has already expired](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/), you may have already ran into this issue if you have a Microsoft author signed package in your environment and may already be aware of this change in behavior & resolved it.\r\n\r\nFor reference of the different types of NuGet signatures:\r\n\r\n- **Author signature.** An author signature guarantees that the package has not been modified since the author signed the package, no matter from which repository or what transport method the package is delivered. Additionally, author-signed packages provide an extra authentication mechanism to the nuget.org publishing pipeline because the signing certificate must be registered ahead of time. \r\n- **Repository signature.** Repository signatures provide an integrity guarantee for all packages in a repository whether they are author signed or not, even if those packages are obtained from a different location than the original repository where they were signed.\r\n\r\n## Symptoms\r\n\r\nYour Linux environment may give you error messages when running `dotnet restore` such as:\r\n\r\n```\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nThis indicates that your environment is affected by an upstream change to [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages and you'll need to update your .NET SDK to resolve it.\r\n\r\n## Solution\r\n\r\nNew .NET builds have been provided with NuGet package verification disabled on Linux and macOS.\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0)\r\n\r\nIt is recommended that you update to these builds as soon as you can to mitigate disruption on Linux environments.\r\n\r\n## Details\r\n\r\nFor more details on this incident, see the following resources:\r\n\r\n- https://github.com/NuGet/Announcements/issues/56\r\n- https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/\r\n- https://github.com/dotnet/announcements/issues/180\r\n\r\nIf you run into this issue after April 14th, 2021, please provide a comment on https://github.com/NuGet/Home/issues/10712"},{"Id":"15789095683","Type":"IssuesEvent","CreatedAt":"2021-04-01T22:00:20","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/57","RelatedDescription":"Opened issue \"NuGet.org temporarily down due to Azure services outage\" (#57) at NuGet/Announcements","RelatedBody":"NuGet.org is being affected by an outage due to issues affecting the Azure Portal and Azure services, but the team is on it. We appreciate your patience and we will keep you updated as soon as we get more information.\r\n\r\nIn the meantime, check https://status2.azure.com/ for Azure updates and find work-arounds in this thread https://github.com/NuGet/NuGetGallery/issues/8480."},{"Id":"15770729318","Type":"IssuesEvent","CreatedAt":"2021-03-31T19:45:05","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/56","RelatedDescription":"Opened issue \"Notice: NuGet Restore Failures on Linux distributions using NSS or Mozilla root CA list\" (#56) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nUsers of .NET 5.0+ will receive error messages when running `dotnet restore` on Linux distros that use [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages maintained by Mozilla's root CA list. The root cause is due to the certificate used for signed NuGet packages recently expiring and as a result the validation for packages uses a timestamp provider chain that has a root certificate that has been [removed by Network Security Services (NSS)](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) which is a popular alternative to [OpenSSL](https://github.com/openssl/openssl).\r\n\r\n- [NuGet Microsoft Author Signing Certificate Update](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/) - Expires January 27th, 2021\r\n- [NuGet.org Repository Signing Certificate Update](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/) - Expires April 14th, 2021\r\n\r\nFor more information, please read the [Distrust of Symantec TLS Certificates](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/) on the Mozilla Security Blog, [Mozilla Root Store Policy](https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/policy/) on Mozilla.org, and [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues) on the Mozilla Wiki Page.\r\n\r\n## Affected Environments\r\n\r\n.NET 5.0+ SDK on Linux distros that use [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). \r\n\r\nAt this time, we are not sure of every distro that may be affected. If you're aware of an affected distro, please let us know!\r\n\r\nBelow is a table that includes .NET support for Linux distros:\r\n\r\n### Linux\r\n\r\nOS                                    | Version               | Affected          |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Alpine Linux][Alpine]                | N/A                 | ‚ùì |\r\n[CentOS][CentOS]                      | N/A                    | ‚ùì |\r\n[Debian][Debian]                      | N/A                    | ‚ùì |\r\n[Fedora][Fedora]                      | N/A                   | ‚ùì |\r\n[Linux Mint][Linux-Mint]              | N/A                   | ‚ùì |\r\n[openSUSE][OpenSUSE]                  | N/A                   | ‚ùì |\r\n[Red Hat Enterprise Linux][RHEL]      | N/A                    | ‚ùì |\r\n[SUSE Enterprise Linux (SLES)][SLES]  | N/A               | ‚ùì |\r\n[Ubuntu][Ubuntu]                      | N/A   | ‚ùì |\r\n\r\n[Alpine]: https://alpinelinux.org/\r\n[CentOS]: https://www.centos.org/\r\n[Debian]: https://www.debian.org/\r\n[Fedora]: https://getfedora.org/\r\n[Linux-Mint]: https://linuxmint.com/\r\n[OpenSUSE]: https://opensuse.org/\r\n[RHEL]: https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\r\n[SLES]: https://www.suse.com/products/server/\r\n[Ubuntu]: https://ubuntu.com/\r\n\r\nAdditionally, here is a table of other Linux variants that may be affected but are not officially supported by .NET.\r\n\r\nOS                                    | Version               | Affected       |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Arch Linux](https://archlinux.org/)                          | 20210328+                 | ‚úÖ[Issue](https://github.com/NuGet/Home/issues/10695)             |\r\n[Artix Linux](https://artixlinux.org/)                         | 20201128+                    | ‚úÖ[Issue](https://github.com/NuGet/Home/issues/10684)             |\r\n\r\n### Other Linux distros\r\n\r\n- At the time of writing, we believe other distributions will not be affected until a distribution is updated to include [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes).\r\n\r\n## Mitigation\r\n\r\n### .NET Core 3.1\r\n\r\n.NET 5 introduces a signing verification mechanism that promotes warnings to throw an error at `dotnet restore` time. To work around this, you can temporarily target against .NET Core 3.1.\r\n\r\n### Modify CA Certificate Store\r\n\r\nDepending on your Linux distro, you can modify your CA certificate store by taking on an earlier version of your `ca-certificates` package.\r\n\r\nFor reference, the affected version is [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). `nss` includes a hard-coded list of trusted CA certificates and therefore can be modified to include and trust the `Verisign Universal Root Certificate Authority` again.\r\n\r\nMany Linux distros can leverage `dpkg-reconfigure` to check for the entry and enable trust for it. As a manual workaround, you may need to remove a `leading !` from the certificate line & update your CA certificates package.\r\n\r\n**Note:** Doing this is considered a bad security practice & should only be done if you understand the security implications of doing so.\r\n\r\n## Solution\r\n\r\nDue to existing issues with the .NET 5 signing verification feature & fallback of timestamp verification, we have decided to revoke this feature for Unix-based systems within .NET 5 SDK. Therefore your experience of using `dotnet restore` will remain largely the same as it was in .NET Core 3.1. Stay tuned for an updated .NET SDK version that will include this change.\r\n\r\n### Stay updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We will also continue posting updates on [NuGet Status](https://status.nuget.org/) and [@NuGet on Twitter](https://twitter.com/nuget)."},{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\nüéâüì¶Please provide your comments, concerns, and feedback within this PR. üì¶üéâ\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something ü§î ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something ü§î ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1384935395515936773","CreatedAt":"2021-04-21T18:21:43+00:00","UserScreenname":"nuget","Text":"Thank you @rocklan for your code contributions to NuGet - you're rocking the VS shirt, Microsoft jacket, and guitar‚Ä¶ https://t.co/JkUiVYLuMw","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1379845663807188996","CreatedAt":"2021-04-07T17:16:57+00:00","UserScreenname":"nuget","Text":"üôåNew mockup just droppedüôå\n\n@jiachenjiang_  is reading all the feedback and iterating daily üí™\n\nWe want you to be inv‚Ä¶ https://t.co/HMOopaJPDN","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1377764630769008640","CreatedAt":"2021-04-01T23:27:40+00:00","UserScreenname":"nuget","Text":"Our monitoring and tests indicate that the incident related to DNS has been mitigated. We are waiting for more info‚Ä¶ https://t.co/Oz3vtCPt0K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1377743615422685191","CreatedAt":"2021-04-01T22:04:09+00:00","UserScreenname":"nuget","Text":"Check our announcement here for additional resources as well as a Github thread for us to share work-arounds.‚Ä¶ https://t.co/j0UWauYtq3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1377737823994802182","CreatedAt":"2021-04-01T21:41:09+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi is being affected by this outage, but the team is on it. We appreciate your patience and we‚Ä¶ https://t.co/ESWjKBbpYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"üëèContributor appreciation timeüëè\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t‚Ä¶ https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"üö® Reminder üö®\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to‚Ä¶ https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"üôåNew proposal just droppedüôå\n\nWe've been working hard to find ways to help you secure your software supply chain üí™‚Ä¶ https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he‚Ä¶ https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"üôå New post just dropped üôå\n\nWe're upping our security game by enabling you to find package vulnerabilities on‚Ä¶ https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":85,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2021-04-22T05:30:37.5770588Z","RunDurationInMilliseconds":1471}