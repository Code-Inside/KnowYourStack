{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27065220057","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:33:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9388","RelatedDescription":"Merged pull request \"Added null checks to mitigate exceptions on the '/profiles' pages\" (#9388) at NuGet/NuGetGallery","RelatedBody":"The `/profiles` pages use the same js script as the search page, but do not have a `searchForm` element on the page, so we were getting exceptions from the javascript on the `/profiles` pages when we tried to reference the form elements.\r\n\r\nI've now added checks in the script so that we do not reference anything that doesn't exist on the page.\r\n\r\nI also removed a helper method that was not being used by the search page anymore (`AddSortByOption()`)."},{"Id":"27065082044","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:22:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Opened pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27064653171","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:55:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9390","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] 'Template' package type filters combined with Frameworks filters should warn?\" (#9390) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nTemplates do not have a Frameworks tab on the Package Details page. Should we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters? The behaviors across the frameworks tab and frameworks filters should be consistent.\r\n\r\nQ: Are target frameworks expected with template packages? Most template packages in our ecosystem do not have target frameworks, but a handful do.\r\n\r\n### Solution\r\nShould we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters?"},{"Id":"27064452514","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:42:15","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9389","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] Tags sometimes spill over into the next line when there are multiple of them\" (#9389) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIn the search results, when there are very few tags, they appear on the same line as the downloads, last updated date and version, but spill over into the next line when there are multiple tags. This behavior should be consistent. \r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it. \r\n\r\n### Solution\r\nPossible solution: Always show tags on the next line so that it is consistent."},{"Id":"27063127454","Type":"PullRequestEvent","CreatedAt":"2023-02-13T21:29:45","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9387","RelatedDescription":"Merged pull request \"Search page A11y fixes\" (#9387) at NuGet/NuGetGallery","RelatedBody":"1. This PR fixes an accessibility issue where, when the TFM section was collapsed and there were very few search results on the page, the black text of some of the TFM checkbox labels could overlap with the dark blue footer background (even though the checkboxes were not visible), causing a contrast issue on A11y FastPass. \r\n![image](https://user-images.githubusercontent.com/82980589/218198449-23ec3954-7e64-46d7-8347-5df58ac1b18e.png)\r\nWe now flip the TFM tab's `display` property between `'none'` and `'block'` when it is collapsed or expanded. This also means we don't need to manually toggle `tabindex` for the checkboxes when the section is collapsed or expanded.\r\n\r\n2. The text we show when there's 0 package results also has an a11y issue, where it shouldn't have the `aria-expanded` property. I've removed that now.\r\n![image](https://user-images.githubusercontent.com/82980589/218199365-a21f5d7f-675f-4bd4-8879-6cbbb23fa11a.png)\r\n\r\n3. I've also removed an unused ViewModel property (`ShouldDisplayAdvancedSearchPanel`). "},{"Id":"27061164462","Type":"PullRequestEvent","CreatedAt":"2023-02-13T19:54:35","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9365","RelatedDescription":"Merged pull request \"Modify warning message on display package page when missing readme\" (#9365) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Introduced new warning message on package display page when package is missing readme\r\n* only display warning message to package authors\r\n* added feature flag to this new warning\r\n\r\nBefore: \r\n![Screenshot 2023-01-31 140711](https://user-images.githubusercontent.com/64443925/215915916-076f6854-e2da-48fb-8a73-6a8f8ddf11ed.png)\r\nAfter: \r\n![Screenshot 2023-01-31 140647](https://user-images.githubusercontent.com/64443925/215915939-7573b301-73ad-4108-98c8-5b3a164070df.png)\r\n\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4695"},{"Id":"27057425293","Type":"IssuesEvent","CreatedAt":"2023-02-13T17:05:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7607","RelatedDescription":"Closed issue \"Simultaneously pushing and unlisting a package may result in incorrect latest\" (#7607) at NuGet/NuGetGallery","RelatedBody":"Consider the following:\r\n\r\n1. Package is uploaded and unlisted at the same time.\r\n2. Package is added to the database by upload flow.\r\n3. Package is unlisted by unlist flow.\r\n4. After being unlisted, package's IsLatest is updated incorrectly by upload flow, which still thinks package is listed.\r\n\r\nIdeally, the unlist flow should not be able to execute until upload flow is completed. Perhaps the upload flow is committing to DB multiple times?\r\n\r\nSee https://github.com/nuget/nugetgallery/issues/7536 for more information"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27067113740","Type":"IssuesEvent","CreatedAt":"2023-02-14T01:52:23","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12434","RelatedDescription":"Closed issue \"project.assets.json should not contain username in it\" (#12434) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nCurrently, dotnet restore --locked generates project.assets.json, which contains the username of whomever ran the command.  This causes issues because every build in our CI loop there is new username (using a GUID), and so the hash of project.assets.json changes and downstream items rebuild.\n\n### Desired Behavior\n\nUsername should be removed from project.assets.json.\n\n### Additional Context\n\nIn some cases were are able to overwrite the username after nuget restore runs with a common value, but it becomes more tricky which the call to nuget restore is nested (like the build calls npm, which runs some javascript that then calls dotnet restore)."},{"Id":"27066988339","Type":"IssuesEvent","CreatedAt":"2023-02-14T01:42:10","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12184","RelatedDescription":"Reopened issue \"[Bug]: Versions_SelectionChanged throws NullReferenceException when changing selected package\" (#12184) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\n17.5 Preview 1.0 33023.41.main\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nOther\r\n\r\n### Repro Steps & Context\r\n\r\nI don't see any direct customer impact from this, but when changing selected version, the debugger shows exceptions being thrown from `Versions_SelectionChanged` due to `null` value in the AddedItem[0] element (see https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/ProjectView.xaml.cs#L279)\r\n\r\n1. Attach a debugger.\r\n2. Launch Project PM UI.\r\n3. Change selected packages.\r\n4. Observe the NRE.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/197612110-6c4fde03-4c62-403c-8c38-7a88bd20efc9.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27065400246","Type":"IssuesEvent","CreatedAt":"2023-02-13T23:48:03","Actor":"erickulcyk","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12434","RelatedDescription":"Opened issue \"project.assets.json should not contain username in it\" (#12434) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nCurrently, dotnet restore --locked generates project.assets.json, which contains the username of whomever ran the command.  This causes issues because every build in our CI loop there is new username (using a GUID), and so the hash of project.assets.json changes and downstream items rebuild.\n\n### Desired Behavior\n\nUsername should be removed from project.assets.json.\n\n### Additional Context\n\nIn some cases were are able to overwrite the username after nuget restore runs with a common value, but it becomes more tricky which the call to nuget restore is nested (like the build calls npm, which runs some javascript that then calls dotnet restore)."},{"Id":"27064702508","Type":"PullRequestEvent","CreatedAt":"2023-02-13T22:58:25","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12433","RelatedDescription":"Opened pull request \"Add a \"do not auto close\" label\" (#12433) at NuGet/Home","RelatedBody":"fix: https://github.com/NuGet/Client.Engineering/issues/2131\r\n\r\nAdd a \"do not auto close\" label, and bot will never close them. This only apply to home and Client.Engineering repositories."},{"Id":"27063684540","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:00:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12394","RelatedDescription":"Closed issue \"The command “dotnet list” will not work if a devops source is enabled in the “nuget.config” file \" (#12394) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.102\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps: \r\n1. Make sure a devops source (e.g. https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json) is enabled in the “nuget.config” file (path: C:\\Users\\[UserName]\\AppData\\Roaming\\NuGet\\NuGet.Config) \r\n2. Patch dotnet sdk (please refer to [Install and patch the dotnet with the nupkgs](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=NavigationUrl)) \r\n3. Create a Powershell script named \"Test.ps1\" with below contents. **Please change the value of $patchSDKCommand to the patched SDK from step2.** \r\n```\r\n\"Getting latest .NET Core CLI\"  \r\n# Pls change the value of below $patchSDKCommand to the patched SDK.  \r\n$patchSDKCommand = \"C:\\Users\\v-luzh\\Desktop\\PatchedSDK\\dotnet.exe\"    \r\n\"Testing the following version of the .NET Core CLI/SDK\"  \r\n& $patchSDKCommand --version  \r\n\"Creating test package projects\"  \r\n& $patchSDKCommand new classlib -n  MyLib  \r\n& $patchSDKCommand new classlib -n MyDep  \r\n& $patchSDKCommand add MyLib/MyLib.csproj reference MyDep/MyDep.csproj  \r\n& $patchSDKCommand new sln -n test  \r\n& $patchSDKCommand sln add MyLib/MyLib.csproj  \r\n& $patchSDKCommand sln add MyDep/MyDep.csproj  \r\n& $patchSDKCommand build  \r\n\"Creating packages\"  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.0.1  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.0.2  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.0.3-beta  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.1.0  \r\n& $patchSDKCommand msbuild /t:pack /p:version=1.2.0-beta  \r\n& $patchSDKCommand msbuild /t:pack /p:version=2.0.0  \r\n& $patchSDKCommand msbuild /t:pack /p:version=3.0.0-beta  \r\n\"Creating nuget.config\"  \r\nNew-Item .\\localSource\\ -ItemType Directory | Out-Null  \r\n& $patchSDKCommand new nugetconfig  \r\n$xml = [xml](Get-Content .\\nuget.config)   \r\n$sources = $xml.SelectSingleNode('/configuration/packageSources')  \r\n$sources.RemoveAll()  \r\n$source = $xml.CreateElement('add')  \r\n$source.SetAttribute('key', 'localSource') | Out-Null  \r\n$source.SetAttribute('value', 'localSource') | Out-Null  \r\n$sources.AppendChild($source)  \r\n$source = $xml.CreateElement('add')  \r\nif (Test-Path .\\cli\\sdk\\NuGetFallbackFolder) {  \r\n       $source.SetAttribute('key', 'dotnetFallbackFolder') | Out-Null  \r\n       $source.SetAttribute('value', 'cli/sdk/NuGetFallbackFolder') | Out-Null  \r\n       $sources.AppendChild($source)  \r\n}  \r\n$config = $xml.CreateElement('config')  \r\n$xml.DocumentElement.AppendChild($config) | Out-Null  \r\n$globalPackagesFolder = $xml.CreateElement('add')  \r\n$globalPackagesFolder.SetAttribute('key', 'globalPackagesFolder')  \r\n$globalPackagesFolder.SetAttribute('value', 'globalPackages')  \r\n$config.AppendChild($globalPackagesFolder) | Out-Null  \r\n$xml.Save((Join-Path (Get-Location) nuget.config))  \r\nCopy-Item *\\bin\\Debug\\*.nupkg .\\localSource\\ | Out-Null  \r\n\"Creating test program\"  \r\n& $patchSDKCommand new console -n MyProg  \r\n& $patchSDKCommand add MyProg\\MyProg.csproj package MyLib -v 1.0.0  \r\n& $patchSDKCommand restore MyProg\\MyProg.csproj  \r\n& $patchSDKCommand new console -n deprecationTest  \r\n& $patchSDKCommand add .\\deprecationTest\\deprecationTest.csproj package NuGet.Core -v 2.14.0  \r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-patch  \r\n\"latest version of MyLib and MyDep above should be 1.0.2\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-patch --include-prerelease  \r\n\"latest version of MyLib and MyDep above should be 1.0.3-beta\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-minor  \r\n\"latest version of MyLib and MyDep above should be 1.1.0\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --highest-minor --include-prerelease  \r\n\"latest version of MyLib and MyDep above should be 1.2.0-beta\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive  \r\n\"latest version of MyLib and MyDep above should be 2.0.0\"  \r\nPause  \r\n\r\n& $patchSDKCommand list MyProg\\MyProg.csproj package --outdated --include-transitive --include-prerelease  \r\n\"latest version of MyLib and MyDep above should be 3.0.0-beta\"  \r\nPause  \r\n\r\n& $patchSDKCommand list .\\deprecationTest\\deprecationTest.csproj package --deprecated  \r\n\"the deprecated package version of deprecationTest above should be 2.14.0\"  \r\nPause  \r\n\r\n\"testing complete with the following version of the .NET Core CLI/SDK\"  \r\n& $patchSDKCommand --version  \r\n& $patchSDKCommand new classlib -n MultiTargetTest \r\n$xml=@' \r\n<Project Sdk=\"Microsoft.NET.Sdk\">  \r\n    <PropertyGroup>  \r\n      <TargetFrameworks>netstandard1.3;netstandard2.0</TargetFrameworks>  \r\n   </PropertyGroup>  \r\n   <ItemGroup>  \r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.1\" />  \r\n   </ItemGroup>  \r\n   <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard1.3'\">  \r\n     <PackageReference Include=\"Moq\" Version=\"4.10.0\" />  \r\n   </ItemGroup>  \r\n   <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">  \r\n     <PackageReference Include=\"xunit\" Version=\"2.4.0\" />  \r\n   </ItemGroup>  \r\n</Project>  \r\n'@  \r\n\r\nOut-File -FilePath .\\MultiTargetTest\\MultiTargetTest.csproj -InputObject $xml \r\n& $patchSDKCommand restore MultiTargetTest\\MultiTargetTest.csproj  \r\n& $patchSDKCommand list MultiTargetTest\\MultiTargetTest.csproj package  \r\n\"The output above should have two target frameworks, netstandard1.3 and netstandard2.0\"  \r\n\"Moq should be listed under netstandard1.3, but not netstandard2.0\"  \r\n\"xunit should be listed under netstandard2.0, but not netstandard1.3\"  \r\n\"Newtonsoft.Json should be listed under both\" \r\nPause \r\n```\r\n\r\n4. Open a powershell command window  \r\n  4.1. Open Task Manager. \r\n  4.2. Navigate on the main menu to File | “Run new task.” \r\n  4.3. In the Open textbox type: \r\n         Powershell -ExecutionPolicy Bypass \r\n  4.4. Enable the option “Create this task with administrative privileges.” And click the OK button. \r\n5. Cd to the path of \"Test.ps1\" and run the script.\r\n#### Expected: \r\nThe command “dotnet list” should work if a devops source is enabled in the “nuget.config” file. \r\n#### Actual: \r\nThe command “dotnet list” doesn’t work if a devops source is enabled in the “nuget.config” file as below.\r\n```\r\n...\r\nProcessing post-creation actions...\r\nRestoring C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyProg\\MyProg.csproj:\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyProg\\MyProg.csproj (in 258 ms).\r\nRestore succeeded.\r\n\r\n\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\v-luzh\\AppData\\Local\\Temp\\tmpAE02.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package 'MyLib' into project 'MyProg\\MyProg.csproj'.\r\ninfo : Restoring packages for C:\\Users\\v-luzh\\Desktop\\DotnetList\\MyProg\\MyProg.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/mylib/index.json\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/mylib/index.json 91ms\r\nerror: NU1301: Unable to load the service index for source https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json.\r\ninfo : Package 'MyLib' is compatible with all the specified frameworks in project 'MyProg\\MyProg.csproj'.\r\nerror: Value cannot be null. (Parameter 'version')\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj:\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj (in 223 ms).\r\nRestore succeeded.\r\n\r\n\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\v-luzh\\AppData\\Local\\Temp\\tmpE86C.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package 'NuGet.Core' into project '.\\deprecationTest\\deprecationTest.csproj'.\r\ninfo : Restoring packages for C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/nuget.core/index.json\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/nuget.core/index.json 331ms\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/nuget.core/2.14.0/nuget.core.2.14.0.nupkg\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/nuget.core/2.14.0/nuget.core.2.14.0.nupkg 17ms\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.web.xdt/index.json\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/microsoft.web.xdt/index.json 70ms\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.web.xdt/2.1.0/microsoft.web.xdt.2.1.0.nupkg\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/microsoft.web.xdt/2.1.0/microsoft.web.xdt.2.1.0.nupkg 11ms\r\ninfo : Installed NuGet.Core 2.14.0 from https://api.nuget.org/v3/index.json with content hash UDXFLVRDepqVqyYxQuxujfaAc7XePdw+Lsey+q36iqTm0nuSU1n9laIGqjokvBl0unifYtjSai7fqBQKKd9BUg==.\r\ninfo : Installed Microsoft.Web.Xdt 2.1.0 from https://api.nuget.org/v3/index.json with content hash /ieJ02r4MEJM21Eyl+c5kwoJWPhy+qEEcN68JaqDoamabgxJI1jGi/kNLuKvHUCl6tU7E0rMvaR6FmEnDWtS4A==.\r\nwarn : NU1701: Package 'Microsoft.Web.Xdt 2.1.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8, .NETFramework,Version=v4.8.1' instead of the project target framework 'net7.0'. This package may not be fully compatible with your project.\r\nwarn : NU1701: Package 'NuGet.Core 2.14.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8, .NETFramework,Version=v4.8.1' instead of the project target framework 'net7.0'. This package may not be fully compatible with your project.\r\ninfo : Package 'NuGet.Core' is compatible with all the specified frameworks in project '.\\deprecationTest\\deprecationTest.csproj'.\r\ninfo : PackageReference for package 'NuGet.Core' version '2.14.0' added to file 'C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj'.\r\ninfo : Writing assets file to disk. Path: C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\obj\\project.assets.json\r\nlog  : Restored C:\\Users\\v-luzh\\Desktop\\DotnetList\\deprecationTest\\deprecationTest.csproj (in 2.66 sec).\r\n\r\nThe following sources were used:\r\n   C:\\Users\\v-luzh\\Desktop\\DotnetList\\localSource\r\n   https://api.nuget.org/v3/index.json\r\n   https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nThe given project `MyProg` has no updates given the current sources.\r\nkey         value\r\n---         -----\r\nlocalSource localSource\r\nCreating test program\r\nlatest version of MyLib and MyDep above should be 1.0.2\r\nPress Enter to continue...:\r\n```\r\n\r\n#### Notes:\r\n1. It doesn't repro when the devops package source is disabled in “nuget.config” file. And we always execute the Dotnet List Packages Test in this way.\r\n2. It is not a regression since it reproes from the beginning of the Dotnet List Packages Test.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27063626739","Type":"IssuesEvent","CreatedAt":"2023-02-13T21:57:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12395","RelatedDescription":"Closed issue \"[Bug Bash] The “Install” button is clickable and package can be installed successfully even if the custom version drop-down box is empty. \" (#12395) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.6.0.15\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:   \r\n\r\n1. Create a C# Console App (.Net core) project.   \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.   \r\n3. Click settings button (top-right of right panel), check \"Allow format selection on first package install\" in General tab and click OK.                                         \r\n4. Go to \"Browse\" tab and click a package (for example \"Newtonsoft.Json\").  \r\n\r\n5. Click the \"Version\" drop-down box in the right panel. \r\n\r\n6. Delete the default version from the custom version drop-down box and click “Install” button. \r\n\r\n#### Expected:   \r\n\r\nThe “Install” button should be unclickable after step 6. \r\n\r\n#### Actual:   \r\n\r\nThe “Install” button is clickable and package is installed successfully when no version is typed in the custom version drop-down box as below record: \r\n![custom version](https://user-images.githubusercontent.com/84695155/215724755-d8134b8d-9298-491f-b19e-e92c1fc57b1d.gif)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27063349447","Type":"IssuesEvent","CreatedAt":"2023-02-13T21:41:53","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12427","RelatedDescription":"Closed issue \" [Pack] NU1102 errors occur when running command “dotnet pack --runtime win10-x64” \" (#12427) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nNuGet Client Dev\\6.6.0.19\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps:    \r\n\r\n1. Open VS and create a C# Class Library (.Net Core) project through menu File->New->Project->select the “Project Type” as “C#”->search “Console App” in the filter.  \r\n\r\n2. Click the “C# Class Library” in the list and click “Next” button. \r\n\r\n3. Type project name as “Package1” in “Project name” text box and click “Next” button. \r\n\r\n4. Select “.NET 7.0” in the “Framework” dropdown box and click “Create” button. \r\n\r\n6. Build solution and make sure compilation succeeds.  \r\n\r\n7. Open “Developer Command Prompt”, cd to “Package1” project path. \r\n\r\n8. Run “`dotnet pack --runtime win10-x64`”. \r\n\r\n#### Expected:    \r\n\r\nRunning the command “`dotnet pack --runtime win10-x64`” should be successful. \r\n\r\n#### Actual:    \r\n\r\nNU1102 errors (e.g. “NU1102: `Unable to find package Microsoft.WindowsDesktop.App.Runtime.win-x64 with version (= 7.0.3)`”) occur when running command “`dotnet pack --runtime win10-x64`” as below screenshot. \r\n\r\n![MicrosoftTeams-image (8)](https://user-images.githubusercontent.com/84695155/218045821-99585c20-4708-45a2-a119-911543930cd2.png)\r\n\r\n#### Note: \r\n\r\n1.It’s still repro when configure an additional source [dotnet7](https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json)  refer https://github.com/dotnet/installer#installers-and-binaries, the error is as below screenshot: \r\n![MicrosoftTeams-image (10)](https://user-images.githubusercontent.com/84695155/218046191-78e8104c-e340-4280-a5a3-848df195bd79.png)\r\n2. It's doesn't repro on VS Main\\33310.108 + NuGet Client Dev\\6.5.0.139. \r\n\r\n#### Verbose Logs\r\n```\r\nError Log:\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102: Unable to find package Microsoft.WindowsDesktop.App.Runtime.win-x64 with version (= 7.0.3)\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102:   - Found 107 version(s) in nuget.org [ Nearest version: 7.0.2 ]\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102:   - Found 0 version(s) in C:\\Program Files\\dotnet\\library-packs\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.App.Runtime.win-x64 with version (= 7.0.3)\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102:   - Found 110 version(s) in nuget.org [ Nearest version: 7.0.2 ]\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-cicili\\source\\repos\\Package1\\Package1\\package1.csproj : error NU1102:   - Found 0 version(s) in C:\\Program Files\\dotnet\\library-packs\r\n```\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-02-14T03:30:24.3691498Z","RunDurationInMilliseconds":1385}