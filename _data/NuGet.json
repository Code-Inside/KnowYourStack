{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23155386814","Type":"IssuesEvent","CreatedAt":"2022-07-29T12:32:12","Actor":"EkiH","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9182","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Using nuget.core 2.14 with https://www.nuget.org/api/v2 no longer allows finding packages\" (#9182) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWe are using NuGet.Core 2.14.0 with https://www.nuget.org/api/v2 and yesterday we noticed an error blocking finding packages.\r\n\r\nWe are getting the following exception on almost all packages we try to find using FindPackages(...)\r\nSystem.InvalidOperationException: The current value 'String' type is not compatible with the expected 'System.Int32' type.\r\n\r\nThis happens both in Azure and locally, no changes made on our part so we're suspecting this is due to some change on nuget.org.\r\n\r\n\r\nScreenshot of a LINQPad script reproducing this:\r\n![image](https://user-images.githubusercontent.com/6724459/181757455-1b009982-0978-4f0c-87be-d1d5a334f686.png)\r\n\n\n### Repro Steps\n\n1. Use Nuget.Core 2.14 NuGet package reference\r\n2. Create a package repository targeting the v2 feed https://packages.nuget.org/api/v2\r\n3. Try to find packages by id, e.g. Microsoft.Extensions.DependencyInjection.Abstractions\r\n4. Get InvalidOperationException: The current value 'String' type is not compatible with the expected 'System.Int32' type.\r\n\r\nCode:\r\n`var repository = NuGet.PackageRepositoryFactory.Default.CreateRepository(\"https://packages.nuget.org/api/v2\");`\r\n`var packages = repository.FindPackagesById(\"Microsoft.Extensions.DependencyInjection.Abstractions\"); // This throws: The current value 'String' type is not compatible with the expected 'System.Int32' type.`\r\n\n\n### Expected Behavior\n\nTo get a list of packages like before\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/6724459/181758324-81e003cd-e58e-425f-8d55-c95ef34af1b1.png)\r\n\n\n### Additional Context and logs\n\nThis seems a bit similar to #9000 which we encountered in February"},{"Id":"23144276523","Type":"PullRequestEvent","CreatedAt":"2022-07-28T21:59:54","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9181","RelatedDescription":"Opened pull request \"[A11y][ScreenReader] Prevent Screen Reader from reading non-header elements\" (#9181) at NuGet/NuGetGallery","RelatedBody":"Prevent the 'Prefix Reserved' element on a package page from being read when using the 'H' option in the screen reader by setting the element's `aria-hidden` attribute to `true`.\r\n\r\nCurrent Behavior:\r\n![nvda text original](https://user-images.githubusercontent.com/25823466/181644313-8fffa215-639e-4259-a230-88d89bc0686f.jpg)\r\n\r\nNew Behavior:\r\n![nvda text edited](https://user-images.githubusercontent.com/25823466/181644345-d90c0f02-1423-47ca-b6c7-b358c192b887.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9173"},{"Id":"23141761284","Type":"IssuesEvent","CreatedAt":"2022-07-28T19:13:40","Actor":"SoftCircuits","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9180","RelatedDescription":"Opened issue \"Forks of my repository are ALSO posted on NuGet\" (#9180) at NuGet/NuGetGallery","RelatedBody":"I have a general question about when people fork one of my repositories, and then post their fork on NuGet.\r\n\r\nFor example, one of my repositories is [Silk](https://www.nuget.org/packages/SoftCircuits.Silk/). This has several forks on GitHub. I don't understand all the details of forks. But one of them also posted their fork on [NuGet](https://www.nuget.org/packages/LbsFeldkirch.Silk/).\r\n\r\nMy question is about this practice. Are there valid reasons for someone to do this? Should there be a way that I can prevent other people from listing my repositories on NuGet? Their fork is getting downloads while I'm trying to attract more attention to my NuGet packages."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23166409080","Type":"IssuesEvent","CreatedAt":"2022-07-30T02:51:49","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11094","RelatedDescription":"Closed issue \"[Bug]: Non open source code in end to end tests\" (#11094) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET 6.0 Preview 6\r\n\r\n### Worked before?\r\n\r\nNot sure\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nHere's how I can see the affected file:\r\n\r\n```\r\n$ git clone https://github.com/NuGet/NuGet.Client\r\nCloning into 'NuGet.Client'...\r\nremote: Enumerating objects: 127652, done.\r\nremote: Counting objects: 100% (4262/4262), done.\r\nremote: Compressing objects: 100% (1763/1763), done.\r\nremote: Total 127652 (delta 2764), reused 3676 (delta 2436), pack-reused 123390\r\nReceiving objects: 100% (127652/127652), 52.34 MiB | 1.16 MiB/s, done.\r\nResolving deltas: 100% (99133/99133), done.\r\n$ cd NuGet.Client/\r\n$ git rev-parse HEAD\r\nd70adaba77e5754ecdc41984edd21c5cecf8c2a2\r\n$ grep license test/EndToEnd/ProjectTemplates/NetCoreWebApplication1.0.zip/wwwroot/lib/jquery-validation-unobtrusive/.bower.json\r\n  \"license\": \"http://www.microsoft.com/web/webpi/eula/net_library_eula_enu.htm\",\r\n```\r\n\r\nYou can also see this online at:\r\nhttps://github.com/NuGet/NuGet.Client/blob/d70adaba77e5754ecdc41984edd21c5cecf8c2a2/test/EndToEnd/ProjectTemplates/NetCoreWebApplication1.0.zip/wwwroot/lib/jquery-validation-unobtrusive/.bower.json#L26\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"23165004141","Type":"IssuesEvent","CreatedAt":"2022-07-29T23:01:12","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11726","RelatedDescription":"Closed issue \"[Bug]: Significant delay in UI state change following package operations\" (#11726) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nVisual Studio 17.3 Preview 1\r\n\r\n### Worked before?\r\n\r\nUnsure\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Repro Steps & Context\r\n\r\n1. Open browse tab in solution or project level PMUI\r\n2. Keep output window open so you can see when package operations complete\r\n3. Install any package through the PMUI\r\n4. Notice that the installation completes quickly, but the Install/Uninstall buttons in the details pane of the PMUI takes much longer to reflect the operation completion. Anywhere from 1-10s delay, usually about 2.5s on my machine.\r\n\r\nNote: It isn't 100% consistent. You may have to uninstall/reinstall a package or try a few different packages to see the most dramatic delays.\r\n\r\n![PMUI Delay Bug](https://user-images.githubusercontent.com/15097183/162281328-9bf10a0a-b119-45ee-a106-7c1be522aa52.gif)\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"23163848471","Type":"IssuesEvent","CreatedAt":"2022-07-29T21:12:22","Actor":"pragnya17","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11874","RelatedDescription":"Closed issue \"spec for dotnet nuget why command\" (#11874) at NuGet/Home","RelatedBody":""},{"Id":"23163848378","Type":"PullRequestEvent","CreatedAt":"2022-07-29T21:12:21","Actor":"pragnya17","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11875","RelatedDescription":"Merged pull request \"dotnet nuget why proposal\" (#11875) at NuGet/Home","RelatedBody":"Fixes https://github.com/NuGet/Home/issues/11874\r\n\r\n[Rendered spec](https://github.com/NuGet/Home/blob/dev-kartheekp-ms-nugetwhy-proposal/proposed/2022/dotnet-nuget-why-proposal.md)\r\n\r\nTracking https://github.com/NuGet/Home/issues/11782\r\n\r\n//cc @chgill-MSFT "},{"Id":"23162268184","Type":"IssuesEvent","CreatedAt":"2022-07-29T19:11:03","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6388","RelatedDescription":"Closed issue \"Contents and .targets in package dependencies are not included in the build process\" (#6388) at NuGet/Home","RelatedBody":"In a .NET Standard project I'm referencing a NuGet Package, that in turn references other nuget packages to perform bait'n'switch. For instance sub-packages for UWP, Android and iOS. These sub packages deploy various resources like native libraries, shaders etc.\r\n\r\nNext you create your app heads for iOS, Android and UWP, and you reference your .NET Standard project. In turn the NuGet package also gets available for compilation. You can even access the APIs in the package from the project heads. However, the .targets and contents down in the package dependencies are not included, and thus at runtime, your app will crash, because the native libs and resources doesn't get deployed.\r\n\r\nThe workaround currently is to set \"privateAssets=none\" on the nuget reference, but this is very counter intuitive and is going to hurt my customers. They would expect things to \"just work\" when it compiles fine. At no point has my nuget package said to ignore .targets and contents (the dependency list in the nuget package does specify `include=\"all\"` already, but it seems to not actually be doing that).\r\n\r\nThe interesting bit is, this issue doesn't affect UWP, but it affects WPF, iOS and Android.\r\n\r\nEven worse, when using packages.config instead of Package Reference in your project head, you don't get any access to the APIs from the nuget package in the project heads. You have to manually add the package _again_ in the project head.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): `VS UI`\r\n\r\nNuGet version (x.x.x.xxx): `4.5.0.4685`\r\nVS version (if appropriate): `15.5.2`\r\nOS version (i.e. win10 v1607 (14393.321)): `win10 v1709 (16299.98)`\r\nWorked before? If so, with which NuGet version: `AFAIK never worked`\r\n\r\n\r\n### Sample Project\r\n\r\nI can provide packages that reproduces the issue, but due to them having NDA content, it would have to be done through a back-channel.\r\n\r\n/CC @rohit21agrawal helped me track down the issue. He understands it better and said he would add some more details here\r\n  "},{"Id":"23160572886","Type":"IssuesEvent","CreatedAt":"2022-07-29T17:15:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11710","RelatedDescription":"Closed issue \"_CleanPackageFiles target fails sporadically when (re)building\" (#11710) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#7465**\r\n- Please respond to @wouterroos.\r\n\r\n---\r\n\r\n_From @wouterroos on Monday, March 14, 2022 12:28:54 PM_\r\n\r\n<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\n\r\nWhen rebuilding our 80+ project solutions we sporadically get the following error on the `_CleanPackageFiles` target:\r\n\r\n`MSB3061 Unable to delete file \"C:\\Projects\\MyProject\\src\\MyProject\\obj\\MyPlatform\\Debug\\MyProject.MyPlatform.3.0.0-debug.nuspec\". Access to the path 'C:\\Projects\\MyProject\\src\\MyProject\\obj\\MyPlatform\\Debug\\MyProject.MyPlatform.3.0.0-debug.nuspec' is denied.`\r\n\r\nThis issue happens for seemingly random projects in our solution.\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n\r\nIf providing steps to reproduce the issue proves difficult, consider attaching a binlog:\r\n[Details on sharing binary logs](https://aka.ms/msbuild/binlog)\r\n[More information on binary logs](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md)\r\nNOTE: Binary logs capture environment information. Ensure it does not include any information you don't want to be public before you attach one.\r\nIf you want to share one just with Microsoft, you can [report a problem through Visual Studio](https://developercommunity.visualstudio.com/report) and share it privately with Microsoft.\r\n-->\r\n\r\nExecute the following MSBuild command until the issue presents itself (Build runs with `Configuration` set to `Debug` and `Platform` set to `any cpu` by default):\r\n\r\n`msbuild MySolution.MyPlatform.sln /bl -t:Rebuild -m --restore`\r\n\r\nThe impacted projects have `IsPackable` and `GeneratePackageOnBuild` set to true and `PackageOutputPath` set to `$(RepositoryRootDirectory)nuget\\nupkg\\$(Configuration)\\`. Furthermore, the projects have `TargetFrameworks` set to `net48;netcoreapp3.1;net6.0`.\r\n\r\nThe issue can also be reproduced by opening the solution in Visual Studio and rebuilding the solution. This yields more consistent results.\r\n\r\nAdditional information:\r\n\r\nWe have multiple solutions targeting the same projects but for a different platform so we use a `Directory.Build.props` file that modifies the following MSBuild variables to allow for everything to compile to a separate output folder (`BuildForPlatform` is set per project or in a nested Directory.Build.props file based on requirements and `MySolutionPlatform` is determined by the solution name):\r\n\r\n```\r\n<!-- BEGIN Sets project output paths for platform-specific projects -->\r\n  <PropertyGroup Condition=\"'$(BuildForPlatform)'=='true'\">\r\n    <MSBuildProjectExtensionsPath>obj\\$(MySolutionPlatform)</MSBuildProjectExtensionsPath>\r\n    <BaseIntermediateOutputPath>obj\\$(MySolutionPlatform)\\</BaseIntermediateOutputPath>\r\n    <BaseOutputPath>bin\\$(MySolutionPlatform)</BaseOutputPath>\r\n    <DefaultItemExcludes>$(DefaultItemExcludes);bin/**;obj/**</DefaultItemExcludes>\r\n    <PackageId>$(MSBuildProjectName).$(MySolutionPlatform)</PackageId>\r\n  </PropertyGroup>\r\n  <!-- END -->\r\n```\r\n\r\nWe build our solutions in parallel using the `-m` MSBuild switch or by setting `maximum number of parallel project builds` in Visual Studio.\r\n\r\n### Expected Behavior\r\n<!--\r\n* The expected output or behavior.\r\n-->\r\n\r\nAs happens sometimes, the solution will be rebuilt and all NuGet packages are generated as expected.\r\n\r\n### Actual Behavior\r\n<!--\r\n* The actual output or behavior.\r\n-->\r\n\r\nRebuilding one of the projects fails with the error mentioned above, causing a cascading failure for all projects depending on the project causing the issue. We've verified this behavior using both Visual Studio and the MSBuild command line. The issue happens more often when building using Visual Studio but we've also seen occurrences when using MSBuild, especially when building on our build server. \r\n\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\n\r\nI generated a `.binlog` file and did some analysis and the issue might be caused by the `_CleanPackageFiles` target running for each target framework during the inner build, which are built in parallel. This seems weird as the `Pack` is only executed once (after all inner builds are completed, which makes sense). I've submitted the binlog as a Visual Studio issue (see: https://developercommunity.visualstudio.com/t/Binlog-for-https:githubcomdotnetmsb/1691529?entry=myfeedback)\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\n\r\nMSBuild version: `17.1.0.7609`\r\nOS: `Windows 10 Enterprise 21H2`\r\n"},{"Id":"23159559328","Type":"IssuesEvent","CreatedAt":"2022-07-29T16:10:30","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10311","RelatedDescription":"Closed issue \"[Bug]: Metadata like PrivateAssets does not flow from parent to transitively pinned dependency in CPM\" (#10311) at NuGet/Home","RelatedBody":"Tested and verified to repro on .NET Core SDK versions: 3.1.401, 5.0.100\r\nThis is an **adoption blocker** for our teams.\r\n\r\nWhen CPVM is active, package dependencies are retained to _transitive_ references with pinned versions even if their direct reference had `PrivateAssets=\"all\"` set on them.\r\n\r\nGiven this simple csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MicroBuild.VisualStudio\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nand a `Directory.Packages.props` file with this content:\r\n\r\n```xml\r\n<Project>\r\n    <ItemGroup>\r\n        <PackageVersion Include=\"MicroBuild\" Version=\"2.0.61\" />\r\n        <PackageVersion Include=\"MicroBuild.VisualStudio\" Version=\"2.0.61\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\nand a `Directory.Build.props` file with this content:\r\n\r\n```xml\r\n<Project>\r\n    <PropertyGroup>\r\n        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n        <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**EXPECTED**\r\n\r\nThe packed project contains no dependency because its only `PackageReference` has `PrivateAssets=\"all\"` metadata.\r\n\r\n**ACTUAL**\r\n\r\nThe resulting package has a nuspec that expresses a dependency on a transitively referenced package:\r\n\r\n```xml\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"MicroBuild\" version=\"2.0.61\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n```\r\n\r\n### Sample Project\r\n\r\nMinimal repro: [issue10311.zip](https://github.com/NuGet/Home/files/8444650/issue10311.zip)\r\n\r\n\r\n"},{"Id":"23155941292","Type":"IssuesEvent","CreatedAt":"2022-07-29T13:01:27","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11852","RelatedDescription":"Closed issue \"[Bug]: nuget.exe command line keeps prompting for username/password\" (#11852) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet Version: 6.1.0.106\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nI am trying to use NuGet packages with a pre-existing nightly build system, so I need to automatically check for missing / out of date NuGet package and update them if needed.\r\n\r\nSo far I've created a Visual Studio 2019 project which has a dependency for a NuGet package that exists inside my JFrog Artifactory repo online.\r\n\r\nIf I run the command `nuget restore demopack3.sln` in command prompt on my VS2019 solution file (.sln) it prompts me for my artifactory userName / password.\r\n\r\nAfter I input my info, it correctly downloads the NuGet package. And I can run the command / delete my nuget package multiple times without being prompted for my username/password again. But occasionally, seemingly at random, it prompts me for my username/password manual entry\r\n\r\nthis is a problem because I need my `nuget restore` and `msbuild` commands to be ran automatically and without user input.\r\n\r\nis there any way I can set my Artifactory username/password inside Windows Credentials Manager or some other automated way to avoid needing to manually enter my username/password when downloading NuGet packages from an Artifactory repo?\n\n### Verbose Logs\n\n_No response_"},{"Id":"23155940411","Type":"IssuesEvent","CreatedAt":"2022-07-29T13:01:25","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11872","RelatedDescription":"Closed issue \"[Bug]: Sdk Nugets cannot use Path properties of referenced packages\" (#11872) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild 16.11.2.50704\n\n### Worked before?\n\nNever\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nHello,\r\n\r\nI am attempting to create a new nuget SDK that takes dependencies on the content of other nugets. However, the path property for the package is never resolved even though I see that the project *.nuget.g.props is generated with the path properties. Am I calling my target too soon after restore or is this a bug?\r\n\r\n```xml\r\n<PackageReference Include=\"ZuluJDK.OSS\" Version=\"1.8.203\" GeneratePathProperty=\"true\" />\r\n...\r\n  <Target Name=\"InsideSDK\" AfterTargets=\"Restore\">\r\n     <Message Text=\"JDK home is $(PkgZuluJDK_OSS)\" />\r\n  </Target>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"23155939437","Type":"IssuesEvent","CreatedAt":"2022-07-29T13:01:22","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11919","RelatedDescription":"Closed issue \"[Bug]: Package Manager uses and invalid url to restore packages\" (#11919) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\n6.0.0.262\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHello team, I need your help... I have a problem with nuget when I create a Xamarin project Nuget always tries to restore packages from a URL that I never set, and it's from a private repository from my old company. This url is not showing in package manager sources and it is enabled only for Xamarin projects, I created a web project and everything works fine.\r\n\r\nI need to know where this URL was placed so I can remove it...\r\n\r\nI also tried reinstalling VS and that didn't work either... clearing the nuget cache didn't work either...\r\n\r\nI'm using a Mac with Visual Studio for Mac 2022\r\n\r\n<img width=\"580\" alt=\"image\" src=\"https://user-images.githubusercontent.com/107021460/175610382-a6bdd88f-dbfd-43e7-a6c0-1d6453b3ef18.png\">\r\n\r\n<img width=\"1003\" alt=\"image\" src=\"https://user-images.githubusercontent.com/107021460/175610274-a8dcb6d8-1fad-482c-8fa7-fb96a9de385e.png\">\r\n\n\n### Verbose Logs\n\n```shell\nReading project file /Users/emilio/Projects/XamDemo/XamDemo/XamDemo.Android/XamDemo.Android.csproj.\r\nReading project file /Users/emilio/Projects/XamDemo/XamDemo/XamDemo/XamDemo.csproj.\r\nRestoring packages for /Users/emilio/Projects/XamDemo/XamDemo/XamDemo.Android/XamDemo.Android.csproj...\r\nRestoring packages for /Users/emilio/Projects/XamDemo/XamDemo/XamDemo.iOS/XamDemo.iOS.csproj...\r\nRestoring packages for /Users/emilio/Projects/XamDemo/XamDemo/XamDemo/XamDemo.csproj...\r\nRestoring packages for .NETStandard,Version=v2.0...\r\nRestoring packages for MonoAndroid,Version=v12.0...\r\nRestoring packages for Xamarin.iOS,Version=v1.0...\r\n  GET http://yprimenuget.eclinicalcloud.net/nuget/FindPackagesById()?id='NETStandard.Library'&semVerLevel=2.0.0\r\n  GET http://yprimenuget.eclinicalcloud.net/nuget/FindPackagesById()?id='Xamarin.Essentials'&semVerLevel=2.0.0\r\n  GET http://yprimenuget.eclinicalcloud.net/nuget/FindPackagesById()?id='Xamarin.Forms'&semVerLevel=2.0.0\r\n  GET https://api.nuget.org/v3-flatcontainer/xamarin.essentials/index.json\r\n  GET https://api.nuget.org/v3-flatcontainer/netstandard.library/index.json\r\n  GET https://api.nuget.org/v3-flatcontainer/xamarin.forms/index.json\r\nUnable to load the service index for source https://y-prime.pkgs.visualstudio.com/_packaging/YPrime.Nuget/nuget/v3/index.json.\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2022-08-01T03:30:50.3207253Z","RunDurationInMilliseconds":1392}