{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41154034568","Type":"PullRequestEvent","CreatedAt":"2024-08-19T22:03:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10137","RelatedDescription":"Merged pull request \"Use auth for downloads.v1.json in stats and search jobs\" (#10137) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/5576.\r\n\r\nThis changes `DownloadsV1JsonClient` to use `BlobClient` instead of `HttpClient`. The initialized blob client (`BlobClient`) in this case is meant to be a singleton so I inverted the control so the downloads.v1.json is provided via DI. This works because we really only have one downloads.v1.json URL at a time, coming from config. It doesn't need to be a parameter.\r\n\r\n"},{"Id":"41149092803","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:40:28","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10139","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#10139) at NuGet/NuGetGallery","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41145523852","Type":"PullRequestEvent","CreatedAt":"2024-08-19T16:30:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10138","RelatedDescription":"Merged pull request \"Show DONE trace outside of the collapse build step block\" (#10138) at NuGet/NuGetGallery","RelatedBody":"The build log looks like this in Azure DevOps:\r\n![image](https://github.com/user-attachments/assets/294d1626-688c-4d3c-a5b8-9f2eab259889)\r\n\r\nIt's nice, but it could be even better if the stop lines are visible. This lets us see DONE/STOPPED/FAILED status as well as the step duration. Change SKIP to a warning since it's not a warning. Steps are disabled on demand."},{"Id":"41145000175","Type":"PullRequestEvent","CreatedAt":"2024-08-19T16:11:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10138","RelatedDescription":"Opened pull request \"Show BEGIN and DONE outside of the collapse block\" (#10138) at NuGet/NuGetGallery","RelatedBody":"The build log looks like this in Azure DevOps:\r\n![image](https://github.com/user-attachments/assets/294d1626-688c-4d3c-a5b8-9f2eab259889)\r\n\r\nIt's nice, but it could be even better if the start and stop lines are visible. This lets us see DONE/STOPPED/FAILED status as well as the step duration. Change SKIP to a warning since it's not a warning. Steps are disabled on demand."},{"Id":"41096473427","Type":"PullRequestEvent","CreatedAt":"2024-08-16T22:02:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10135","RelatedDescription":"Merged pull request \"Merge branch dev into main (NuGet.Jobs and ServerCommon merge)\" (#10135) at NuGet/NuGetGallery","RelatedBody":"This brings the NuGet.Jobs and ServerCommon source trees into `main` branch. They have already been merged into `dev` branch as of https://github.com/NuGet/NuGetGallery/pull/10091 and https://github.com/NuGet/NuGetGallery/pull/10109.\r\n\r\nThat's a lot of content to review, so let's focus on the changes NOT including NuGet.Jobs and ServerCommon. I have listed them here with diff links to illustrate how I found them:\r\n\r\n- Changes between the NuGet.Jobs merge and the ServerCommon merge: https://github.com/NuGet/NuGetGallery/compare/d55ed52c78a34c5416ecd6734af8e1aad0d97765...a782405fbacf8ac657caec334aae115273a95d02\r\n  - @clairernovotny\r\n    - https://github.com/NuGet/NuGetGallery/pull/10083\r\n  - @martinrrm\r\n    - https://github.com/NuGet/NuGetGallery/pull/10096\r\n  - @erdembayar\r\n    - https://github.com/NuGet/NuGetGallery/pull/10098\r\n  - @joelverhagen - many (I have verified the changes I want to deploy)\r\n- Changes between ServerCommon merge and latest `dev`: https://github.com/NuGet/NuGetGallery/compare/968432180cad66123c6541ba89b562e0cbb22a8d...ef1455c0a31dd97623f14a817f5bcab80e39efb0\r\n   - @Goodyear2017\r\n      - https://github.com/NuGet/NuGetGallery/pull/10103\r\n      - https://github.com/NuGet/NuGetGallery/pull/10105\r\n  - @clairernovotny\r\n      - https://github.com/NuGet/NuGetGallery/pull/10107\r\n      - https://github.com/NuGet/NuGetGallery/pull/10114\r\n      - https://github.com/NuGet/NuGetGallery/pull/10122\r\n      - https://github.com/NuGet/NuGetGallery/pull/10134\r\n  - @joelverhagen - many (I have verified the changes I want to deploy)\r\n\r\nIn other words, these are the changes made to NuGetGallery or post-merge NuGet.Jobs and ServerCommon states.\r\n\r\nDEV environment has latest `dev` branch deployment so you should be able to verify your changes there right now if you are worries:\r\nhttps://dev.nugettest.org/\r\n\r\nThe rollout plan is to deploy the following jobs and services:\r\n- NuGetGallery (web app)\r\n   - @martinrrm, @clairernovotny, and @Goodyear2017 are to verify their changes in INT then PROD.\r\n   - Purpose: dark mode fixes, V2 download URL change, accessibility fixes\r\n- MonitoringProcessor\r\n   - @joelverhagen is to verify his changes in INT then PROD.\r\n   - Purpose: auth for Azure Search cursors\r\n- Catalog2Monitoring\r\n   - @joelverhagen is to verify his changes in INT then PROD.\r\n   - Purpose: auth for Azure Search cursors"},{"Id":"41096191320","Type":"PullRequestEvent","CreatedAt":"2024-08-16T21:43:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10137","RelatedDescription":"Opened pull request \"Use auth for downloads.v1.json in stats and search jobs\" (#10137) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/5576.\r\n\r\nThis changes `DownloadsV1JsonClient` to use `BlobClient` instead of `HttpClient`. The initialized blob client (`BlobClient`) in this case is meant to be a singleton so I inverted the control so the downloads.v1.json is provided via DI. This works because we really only have one downloads.v1.json URL at a time, coming from config. It doesn't need to be a parameter.\r\n\r\n"},{"Id":"41094072616","Type":"IssuesEvent","CreatedAt":"2024-08-16T19:53:54","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10133","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Getting too similar name upload error for packages that I own\" (#10133) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nI own a [series of packages][github] on nuget.org that match up with .NET target framework monikers. \r\n\r\n- Basic.Reference.Assemblies.Net461\r\n- Basic.Reference.Assemblies.Net60\r\n- Basic.Reference.Assemblies.Net70\r\n- Basic.Reference.Assemblies.Net80\r\n- Basic.Reference.Assemblies.NetStandard20\r\n\r\nThis morning was attempting to release a new package Basic.Reference.Assemblies.Net20. When my action attempted to publish I got the following error:\r\n\r\n> The uploaded package's id is too similar to the already existing packages:\r\n\r\nI doubled checked that I don't have any weird authoring mistakes on my new package (verified in package explorer that it has the ID I was expecting). Yes the difference between existing names is only one character but I already have several versions of the package which have that characteristic. \r\n\r\nTried uploading manually through the gallery and got the same error. When displayed in the gallery though it feels like the error is truncated. The trailing colon makes me think it should be displaying the similar names (maybe I'm off here). \r\n\r\n![image](https://github.com/user-attachments/assets/30b65a49-0376-4489-a8c2-88e00508f89c)\r\n\r\nAt this point though I'm blocked from moving forward on some work in github.com/dotnet/roslyn because we can't upload these new packages for TFMs we want to test. \r\n\r\n[github]: https://github.com/jaredpar/basic-reference-assemblies\n\n### Repro Steps\n\nHave to build the package from https://github.com/jaredpar/basic-reference-assemblies and then attempt to upload and it you will see the error. \n\n### Expected Behavior\n\nI should be able to upload the new package. Yes it is similar to existing names but I'm the package owner for all those packages with similar names. \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41156467960","Type":"IssuesEvent","CreatedAt":"2024-08-20T00:31:21","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13718","RelatedDescription":"Opened issue \"dotnet nuget why should check RID specific packages\" (#13718) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nAdd any package which eventually adds `System.Runtime` as a depenedncy. For example, `System.Collections.Specialized`. Restore will warn you about `System.Private.Uri` having a known vulnerability (when NuGetAuditMode is set to `all`, which is default from .NET 9).  However, `dotnet nuget why my.csproj System.Private.Uri` will tell you that the package is not used by the project\n\n### Desired Behavior\n\n`dotnet nuget why` should tell me why this package is being restored.\n\n### Additional Context\n\nLooking at the assets file, the package is being included due to RID-specific (Runtime IDentifier) dependencies. Therefore, `dotnet nuget why` appears to be looking only at the \"RIDless\" package graph in the assets file."},{"Id":"41152960791","Type":"IssuesEvent","CreatedAt":"2024-08-19T21:12:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13665","RelatedDescription":"Closed issue \"[Feature] Automatically remediate known vulnerabilities in dependencies by upgrading them.\" (#13665) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### The Elevator Pitch\n\nThe CLI and VS tooling should be able to automatically remediate known vulnerabilities in dependencies by upgrading them. This issue tracks the PR design of https://github.com/NuGet/Home/pull/11549 which would provide this functionality through a new `dotnet audit` and `dotnet audit fix` command.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"41146600836","Type":"IssuesEvent","CreatedAt":"2024-08-19T17:08:59","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13699","RelatedDescription":"Closed issue \"Drive insertion of new dependency graph resolution algorithm\" (#13699) at NuGet/Home","RelatedBody":"The new dependency graph algorithm is merged and we need to drive the insertion process\r\n\r\n- [x] Create release (https://dev.azure.com/devdiv/DevDiv/_releaseProgress?releaseId=1544293&_a=release-pipeline-progress)\r\n- [ ] Get test results from vendors\r\n- [ ] Get test results from a few internal repos\r\n- [ ] Monitor VS insertion (https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/571529)\r\n- [ ] Monitor dotnet insertion (https://github.com/dotnet/sdk/pull/42711)"},{"Id":"41146593098","Type":"IssuesEvent","CreatedAt":"2024-08-19T17:08:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13710","RelatedDescription":"Closed issue \"The \"RestoreTask\" task returned false but did not log an error\" (#13710) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 9 preview\n\n### Worked before?\n\nyes\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nFull details in https://github.com/dotnet/dnceng/issues/3100 (including recent builds that are failing)\r\n\r\n```\r\n     2>/__w/1/s/.dotnet/sdk/9.0.100-preview.5.24307.3/NuGet.targets(170,5): error MSB4181: The \"RestoreTask\" task returned false but did not log an error. [/__w/1/s/.packages/microsoft.dotnet.arcade.sdk/9.0.0-beta.24311.10/tools/Tools.proj]\r\n##[error].dotnet/sdk/9.0.100-preview.5.24307.3/NuGet.targets(170,5): error MSB4181: (NETCORE_ENGINEERING_TELEMETRY=Restore) The \"RestoreTask\" task returned false but did not log an error.\r\n     2>Done Building Project \"/__w/1/s/.packages/microsoft.dotnet.arcade.sdk/9.0.0-beta.24311.10/tools/Tools.proj\" (Restore target(s)) -- FAILED.\r\n     1>Done Building Project \"/__w/1/s/.packages/microsoft.dotnet.arcade.sdk/9.0.0-beta.24311.10/tools/Build.proj\" (default targets) -- FAILED.\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"41145253606","Type":"IssuesEvent","CreatedAt":"2024-08-19T16:20:48","Actor":"SoyDiego","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13717","RelatedDescription":"Opened issue \"dotnet build/restore/run is not working\" (#13717) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n8.0.107\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHi I was running my project using `dotnet run` and downloading the nugets from Azure doing `dotnet restore --interactive` but today I found some problems and I don't know what is happening... \r\n\r\n![image](https://github.com/user-attachments/assets/b3049dc3-7331-4bee-99c2-81a9b8b383fc)\r\n\r\nAfter that command nothing is happening. And If I cancel the command I'm receiving this warnings:\r\n\r\n![image](https://github.com/user-attachments/assets/7673c400-d9d9-4537-b1d1-160bc7346aea)\r\n\r\nAfter 10 minutes, you can see this errors:\r\n\r\n```sh\r\n Determining projects to restore...\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Data/CitizenPortal.Data.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Services/CitizenPortal.Services.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Common.Data/CitizenPortal.Common.Data.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api/CitizenPortal.Api.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Tests/CitizenPortal.Tests.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Crosscutting/CitizenPortal.Crosscutting.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Common.Data/CitizenPortal.Common.Data.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Crosscutting/CitizenPortal.Crosscutting.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Services/CitizenPortal.Services.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api/CitizenPortal.Api.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Data/CitizenPortal.Data.csproj (in 10.09 min).\r\n  ```\r\n\r\n### `dotnet restore --interactive -v detailed` ([I'm using Artifacts Credential Provider)](https://github.com/Microsoft/artifacts-credprovider) :\r\n\r\nI have created a **[gist](https://gist.github.com/SoyDiego/8cfc7fa94f4da76ceb8c44a2f30fc9f2)** because was too long and I couldn't share pasting here: https://gist.github.com/SoyDiego/8cfc7fa94f4da76ceb8c44a2f30fc9f2\r\n\r\nI don't know what more I can try.\r\n\r\nBecause is with every commmand:\r\n- `dotnet restore`\r\n- `dotnet build`\r\n- `dotnet run`\r\n\r\n## I have tried:\r\n- Cloning my projects again\r\n- Logout and login in Azure again\r\n- Cleaning using `dotnet nuget locals all --clear` and `dotnet clear`\r\n\r\n## `dotnet info`\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.107\r\n Commit:            1bdaef7265\r\n Workload version:  8.0.100-manifests.43c23f91\r\n\r\nRuntime Environment:\r\n OS Name:     manjaro\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         arch-x64\r\n Base Path:   /usr/share/dotnet/sdk/8.0.107/\r\n\r\n.NET workloads installed:\r\n Workload version: 8.0.100-manifests.43c23f91\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.7\r\n  Architecture: x64\r\n  Commit:       2aade6beb0\r\n\r\n.NET SDKs installed:\r\n  3.1.426 [/usr/share/dotnet/sdk]\r\n  7.0.120 [/usr/share/dotnet/sdk]\r\n  8.0.107 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.32 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.20 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.32 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.20 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  ```\r\n  \r\n  Any help here or someone with the same problem?\r\n  Or any idea what more can I try, please?\r\n  \r\n  Thanks!!\n\n### Verbose Logs\n\n_No response_"},{"Id":"41113248005","Type":"IssuesEvent","CreatedAt":"2024-08-18T09:43:26","Actor":"gautam-singh2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13716","RelatedDescription":"Closed issue \"<vulnerabilityDataSource> in Nuget.config not working if Nuget.org is added as a disabled package source\" (#13716) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n9.0.100-preview.7.24407.12\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nI want to use Nuget.org just as a vulnerability source, not as a package source. So, my existing Nuget.config had these lines added in it:\r\n\r\n```\r\n<disabledPackageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"Microsoft Azure Service Fabric\" value=\"true\" />\r\n    <add key=\"Microsoft and .NET\" value=\"true\" />\r\n</disabledPackageSources>\r\n```\r\n\r\nAccording to this comment: https://github.com/NuGet/Home/issues/12698#issuecomment-1606988777, adding this should have allowed me to use Nuget.org as a  vulnerability source but I have been unable to get it to work.\r\n\r\n```\r\n<vulnerabilityDataSource>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  <vulnerabilityDataSource>\r\n```\r\n\r\n\r\nI have tried this with .NET SDK 8.0.300, 8.0.400 and 9.0.100-preview.7.24407.12, didn't work with any of these. Infact, I observed that adding `<vulnerabilityDataSource>` in my Nuget.config didnt make any difference at all.\r\n\r\nSteps to reproduce:\r\n\r\n1) Run `cd C:\\MyTest`.\r\n2) Run `dotnet new classlib --framework \"netstandard2.0\" -o MyTest`.\r\n3) Open the .csproj in Visual Studio and add a package reference to System.Formats.Asn1 6.0.0 which has a known high security vulnerability.\r\nAfter this my .csproj looks like this:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Formats.Asn1\" Version=\"6.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n4) Create a global.json file in C:\\MyTest to make use of .NET SDK 9.0.100-preview.7.24407.12 (or .NET SDK 8.0.300 or .NET SDK 8.0.401) with these contents:\r\n\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"9.0.100-preview.7.24407.12\",\r\n    \"rollForward\": \"latestFeature\"\r\n  }\r\n}\r\n```\r\n5) Create a NuGet.config in C:\\MyTest with these contents:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageRestore>\r\n    <add key=\"enabled\" value=\"True\" />\r\n    <add key=\"automatic\" value=\"True\" />\r\n  </packageRestore>\r\n  <packageSources>\r\n\t  <add key=\"RETRACTED 1\" value=\"A VALID V2 URL\" />\r\n\t  <add key=\"RETRACTED 2\" value=\"ANOTHER VALID V2 URL\" />\r\n  </packageSources>\r\n  <vulnerabilityDataSource>\r\n    <add key=\"NuGet Vulnerability DB\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </vulnerabilityDataSource>\r\n  <disabledPackageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"Microsoft Azure Service Fabric\" value=\"true\" />\r\n    <add key=\"Microsoft and .NET\" value=\"true\" />\r\n</disabledPackageSources>\r\n  <activePackageSource>\r\n\t  <add key=\"RETRACTED 1\" value=\"A VALID V2 URL\" />\r\n\t  <add key=\"RETRACTED 2\" value=\"ANOTHER VALID V2 URL\" />\r\n  </activePackageSource>\r\n</configuration>\r\n\r\n```\r\n\r\n6) Run `dotnet nuget config get ALL` to get the combined Nuget.config created form all Nuget.config, this is the output I get:\r\n\r\n```\r\nC:\\MyTest\\MyTest>dotnet nuget config get ALL\r\npackageSources:\r\n        add key=\"RETRACTED 1\" value=\"A VALID V2 URL\"\r\n        add key=\"RETRACTED 2\" value=\"ANOTHER V2 URL\"\r\n        add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\"\r\n        add key=\"Microsoft Visual Studio Offline Packages\" value=\"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\"\r\n\r\nfallbackPackageFolders:\r\n        add key=\"Microsoft Visual Studio Fallback Folder\" value=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages\"\r\n\r\npackageRestore:\r\n        add key=\"enabled\" value=\"True\"\r\n        add key=\"automatic\" value=\"True\"\r\n\r\nvulnerabilityDataSource:\r\n        add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\"\r\n\r\ndisabledPackageSources:\r\n        add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\"\r\n        add key=\"Microsoft Azure Service Fabric\" value=\"true\"\r\n        add key=\"Microsoft and .NET\" value=\"true\"\r\n\r\nactivePackageSource:\r\n        add key=\"RETRACTED 1\" value=\"A VALID V2 URL\"\r\n        add key=\"RETRACTED 2\" value=\"ANOTHER VALID V2 URL\"\r\n```\r\n\r\n7) Run this command `dotnet restore MyTest\\MyTest.csproj`, the build logs dont report the warnings about the security flaw:\r\n\r\n```\r\nC:\\MyTest\\MyTest>dotnet restore\r\n  Determining projects to restore...\r\n  Restored C:\\MyTest\\MyTest\\MyTest.csproj (in 414 ms).\r\n```\r\n\r\nTo make this work, I have to remove nuget.org as a disabled package source. This is the output I get after removing nuget.org as a disabled package source from C:\\MyTest\\NuGet.config:\r\n\r\n```\r\nC:\\MyTest\\MyTest>dotnet restore\r\n  Determining projects to restore...\r\nC:\\MyTest\\MyTest\\MyTest.csproj : **warning NU1903**: Package 'System.Formats.Asn1' 6.0.0 has a known high severity vulnerab\r\nility, https://github.com/advisories/GHSA-447r-wph3-92pm [C:\\MyTest\\MyTest\\MyTest.sln]\r\n  Restored C:\\MyTest\\MyTest\\MyTest.csproj (in 521 ms).\r\n```\r\n\r\nEven if I remove \r\n\r\n```\r\n<vulnerabilityDataSource>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </vulnerabilityDataSource>\r\n``` \r\ncompletely from my NuGet,config, I still get the build warning about security flaw as long as I don't have nuget.org in the list of disabled package sources.\r\n\r\n\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-20T03:30:19.6955181Z","RunDurationInMilliseconds":883}