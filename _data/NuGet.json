{"Data":{"Blog":{"FeedItems":[{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14824832227","Type":"IssuesEvent","CreatedAt":"2021-01-14T20:51:35","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8376","RelatedDescription":"Opened issue \"[Stats]Support multiple stats sources\" (#8376) at NuGet/NuGetGallery","RelatedBody":"Make gallery changes to allow multiple specified locations for downloads statistics."},{"Id":"14824816524","Type":"PullRequestEvent","CreatedAt":"2021-01-14T20:50:05","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8353","RelatedDescription":"Merged pull request \"[A11y]Fixing a missed horizontal scroll bar case\" (#8353) at NuGet/NuGetGallery","RelatedBody":"Fixing https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1188115 being reopened.\r\n![image](https://user-images.githubusercontent.com/11051729/102154855-26c8a200-3e2f-11eb-80d5-52b15391e6c9.png)\r\n\r\n![image](https://user-images.githubusercontent.com/11051729/102154868-2defb000-3e2f-11eb-8b30-ce2e2a847cf9.png)\r\n"},{"Id":"14812099514","Type":"PullRequestEvent","CreatedAt":"2021-01-13T22:47:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8375","RelatedDescription":"Merged pull request \"Add F# interactive instructions\" (#8375) at NuGet/NuGetGallery","RelatedBody":"Screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/104518035-e8e4a800-55ab-11eb-8073-9b2e0d15bbc4.png)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/3527\r\n\r\n/cc @cartermp @jonsequitur"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14826947250","Type":"IssuesEvent","CreatedAt":"2021-01-15T01:16:59","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10396","RelatedDescription":"Closed issue \"Introduce a new msbuild property to exclude build output for specific tfms during pack task\" (#10396) at NuGet/Home","RelatedBody":"Nuget currently provides a msbuild called IncludeBuildOutput to disable including the build output for all tfms. \r\nNuget provides this kind of feature for other targets like ```_GetFrameworksWithSuppressedDependencies``` which run during the pack command.\r\nIt will enable the scenario where developer wants to exclude a certain kind of build output for a specific tfm.\r\n\r\ncc @ViktorHofer @nkolev92 @ericstj @safern\r\n\r\n"},{"Id":"14826654988","Type":"PullRequestEvent","CreatedAt":"2021-01-15T00:31:08","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/10445","RelatedDescription":"Merged pull request \"Create CONTRIBUTING.md\" (#10445) at NuGet/Home","RelatedBody":"Creates an initial CONTRIBUTING.md file based on https://github.com/NuGet/Home/wiki/Submitting-Bugs-and-Suggestions and https://github.com/NuGet/Home/wiki/Contribute-to-NuGet"},{"Id":"14824168319","Type":"IssuesEvent","CreatedAt":"2021-01-14T19:52:56","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9090","RelatedDescription":"Closed issue \"Support .NET 5\" (#9090) at NuGet/Home","RelatedBody":"Spec: https://github.com/dotnet/designs/blob/master/accepted/2020/net5/net5.md"},{"Id":"14823059457","Type":"IssuesEvent","CreatedAt":"2021-01-14T18:08:59","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10330","RelatedDescription":"Closed issue \"NuGet Package Manager is not reporting installed packages in Visual Studio 2019\" (#10330) at NuGet/Home","RelatedBody":"I would normally report this through Visual Studio 2019.  However, when I try, the website says that there is no instance of Visual Studio that is signed in.  Visual Studio 2019 shows me as being signed in.\r\n\r\nThe following steps describe my issues with Visual Studio 2019 and NuGet Package Manager:\r\n\r\n1.  Go to Tools | NuGet Package Manager | Manage NuGet Packages for Solution...\r\n2.  Click the \"Installed\" link at the top of the \"Manage Packages for Solution\".\r\n3.  Click the \"EntityFramework by Microsoft\" entry.\r\n4.  Note that no projects in the solution show up in the list projects.\r\n\r\nWhen I right-click the solution, and click the \"Restore NuGet Packages\", I get the response: \"All packages are already installed and there is nothing to restore\".\r\n\r\nIf I add a package to a project in the solution, the project entry in the \"Manage Packages for Solution\" that I added the package shows the correct package version.  The references are correctly shown.\r\n\r\nA different project entry that I added the package to last week, shows a blank version.  The references for this project appear correctly.  \r\n\r\nThis is Visual Studio 2019 Version 16.8.1\r\n\r\n\r\n\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14822619830","Type":"IssuesEvent","CreatedAt":"2021-01-14T17:30:17","Actor":"breidikl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10456","RelatedDescription":"Opened issue \"Inconsistent packages.lock.json after updating global.json from 3.1.405 to 5.0.102\" (#10456) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nDepending on what is installed on the machine, running restore on the same project will result in different packages.lock.json files.  \r\n\r\nSpecifically we use the following command on our builds:\r\n\r\n> dotnet.exe restore --use-lock-file --no-dependencies /p:ImportProjectExtensionProps=false /p:ImportProjectExtensionTargets=false /nodeReuse:false /maxcpucount:1 --lock-file-path \"<Path>\\packages.lock.json\" --locked-mode\r\n\r\nIf the build fails with NU1004 (and we're not in an automated build environment), we'll re-run restore without --locked-mode to update the lock file and rebuild.  \r\n\r\nThe problem is that the lock files are failing and being updated for differences in what is installed on the machine.  For example, on our dev environments with Visual Studio installed, the lock file is smaller while in our more minimal environments without VS are adding additional sections similar to the following:\r\n\r\n\r\n> 11 | + | \"Microsoft.NETFramework.ReferenceAssemblies\":   {\r\n> -- | -- | --\r\n> 12 | + | \"type\":   \"Direct\",\r\n> 13 | + | \"requested\":   \"[1.0.0, )\",\r\n> 14 | + | \"resolved\":   \"1.0.0\",\r\n> 15 | + | \"contentHash\":   \"7D2TMufjGiowmt0E941kVoTIS+GTNzaPopuzM1/1LSaJAdJdBrVP0SkZW7AgDd0a2U1DjsIeaKG1wxGVBNLDMw==\",\r\n> 16 | + | \"dependencies\":   {\r\n> 17 | + | \"Microsoft.NETFramework.ReferenceAssemblies.net472\":   \"1.0.0\"\r\n> 18 | + | }\r\n> 19 | + | },\r\n> \r\n> 92 | + | \"Microsoft.NETFramework.ReferenceAssemblies.net472\":   {\r\n> -- | -- | --\r\n> 93 | + | \"type\":   \"Transitive\",\r\n> 94 | + | \"resolved\":   \"1.0.0\",\r\n> 95 | + | \"contentHash\":   \"VI0f22cH/xOlXLUVY7t6vr2Gi7cg0vzwpspNGz5isRusyspZblF7jJMw49E8mF1m071JyeVmZVkIK9c5kbiyFA==\"\r\n> 96 | + | },\r\n\r\nUsing the new lock file in the other environment then fails and updating the lock file in that environment then removes the new sections. There is also variability in the dev environments based on the features being used.  \r\n\r\nThis problem did not occur when using sdk version 3.1.405 in global.json (when we would get a consistent lock file just based on the project), and only started after changing the sdk version to 5.0.102. \r\n\r\n"},{"Id":"14821188230","Type":"IssuesEvent","CreatedAt":"2021-01-14T15:41:32","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10452","RelatedDescription":"Closed issue \"The deprecated icon overlaps with the version of the deprecated package in Browse tab\" (#10452) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Main\\30912.243\r\nNuGet Version : Dev\\5.9.0.7028\r\nOS Version: Windows-10-Enterprise-19H2\r\n## Installation\r\n1. Install VS Main\\30912.243: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4366886&view=ms.vss-build-web.run-extensions-tab\r\n2. Install NuGet Dev\\5.9.0.7028: \\\\\\ddfiles\\drops\\NuGet\\Drops\\CI\\NuGet.Client\\Dev\\5.9.0.7028\\artifacts\\VS15\\NuGet.Tools.vsix\r\n## Repro steps \r\n1. Create a C# Class Library (.Net Framework) project.\r\n2. Add a deprecated package source: https://apidev.nugettest.org/v3-index/index.json\r\n3. Open PM UI, select the above deprecated package source and search package “afine” in Browse tab.\r\n## Expected\r\nThe deprecated icon should not overlap with the version of the deprecated package as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/104419106-f3ef0680-55b2-11eb-8a9c-2b3b4c28d127.png)\r\n## Actual\r\nThe deprecated icon overlaps with the version of the deprecated package in Browse tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/104419141-00735f00-55b3-11eb-956f-46da894fcd7f.png)\r\n## Notes\r\n1. The issue also reproes on C# Console App (.Net Core) project.\r\n2. The issue does not repro after installing the deprecated package.\r\n3. The issue starts from Dev\\5.9.0.7028."},{"Id":"14818189378","Type":"IssuesEvent","CreatedAt":"2021-01-14T11:35:13","Actor":"sonic1981","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10455","RelatedDescription":"Opened issue \"Don't offer upgrade of assemblies to v5 for .Net Core 3 targetted projects\" (#10455) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 16.8.3\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Abstractions\" Version=\"3.1.11\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nNuget offers an upgrade of the package `Microsoft.Extensions.Logging.Abstractions` to version `5.0.0` for the above. If you complete this upgrade you get errors running this project. This can be extremely difficult to diagnose as this assembly could be heavily nested. No build failures occur you only see the issue when the DI runs. \r\n\r\nThe error you get is the cryptic:\r\n\r\n>Microsoft.Extensions.DependencyInjection.Abstractions: Unable to resolve service for type 'Microsoft.Extensions.Logging.ILogger\r\n\r\nI don't think Nuget should be recommending upgrade of .Net Core 3.x dlls to v5 in none compatible projects?\r\n\r\n"},{"Id":"14818141937","Type":"IssuesEvent","CreatedAt":"2021-01-14T11:30:42","Actor":"olivegamestudio","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10454","RelatedDescription":"Opened issue \"\"Unable to find package\" error but nupkg exists in in repository and locally\" (#10454) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nVisual Studio 16.8.4 and the NUGET Package Manager UI\r\n\r\n## Repro steps and/or sample project\r\n\r\nSelect solution and NUGET solution update.\r\nGoto updates and see update for own package listed. e.g. 3.0.7 with an upgrade to 3.0.8 showing.\r\nCheckbox and update.\r\n\r\n## Output\r\n\r\nRestoring packages for C:\\dev\\X.csproj...\r\n  GET https://api.nuget.org/v3-flatcontainer/mypackage/index.json\r\n  NotFound https://api.nuget.org/v3-flatcontainer/mypackage/index.json 443ms\r\nNU1102: Unable to find package mypackage with version (>= 3.0.8)\r\n  - Found 4 version(s) in local [ Nearest version: 3.0.7 ]\r\n  - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n  - Found 0 version(s) in nuget.org\r\nPackage restore failed. Rolling back package changes for 'Inspired.CoreUI.NorthAmerica.Prereqs'.\r\nTime Elapsed: 00:00:00.8883385\r\n========== Finished ==========\r\n\r\nBut 3.0.8 is present in the local folder and being shown in the display.\r\n"},{"Id":"14811039477","Type":"IssuesEvent","CreatedAt":"2021-01-13T20:52:56","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10433","RelatedDescription":"Closed issue \"NuGet package recommender should work when more than one source is selected in package manager\" (#10433) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThe NuGet package recommender should make recommendations as long as nuget.org is included as one of the package sources. This was implemented before, but PR #3797 reverted this change and now requires that nuget.org is the only source.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Right-click a project in VS and select Manage NuGet Packages to open Package Manager\r\n2. In the browse tab, make sure there are more than one package source listed in the sources drop-down, and that one of them is nuget.org.\r\n3. Select 'All' as sources. \r\n4. Result: no package recommendations, Expected: You should get recommendations.\r\n\r\n\r\n"},{"Id":"14809359317","Type":"IssuesEvent","CreatedAt":"2021-01-13T18:16:39","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9977","RelatedDescription":"Closed issue \"NuGet.Client should replace using of ManagedImageMonikers with KnownMonikers\" (#9977) at NuGet/Home","RelatedBody":"NuGet.VisualStudio.Implementation uses 3 icons from ManagedImageMonikers. These should be replaced with KnownMonikers equivalents to make sure that they pick up the icon refresh.\r\n\r\nManagedImageMonikers.ReferencePrivate -> KnownMonikers.ReferencePrivate\r\nManagedImageMonikers.Application -> KnownMonikers.Application\r\n[Blocked] ManagedImageMonikers.NuGetGrey -> KnownMonikers.PackageReferencePrivate\r\n\r\nThe first two icons can be found in Microsoft.VisualStudio.ImageCatalog, 16.8.30431.43-pre. The latter is being worked on and will be available soon.\r\n\r\nThese APIs will be deleted from the dll in a future update: https://github.com/dotnet/project-system/pull/6570."},{"Id":"14809069740","Type":"IssuesEvent","CreatedAt":"2021-01-13T17:51:36","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10453","RelatedDescription":"Opened issue \"Migrate from DTE's solution events to IVsSolution's events\" (#10453) at NuGet/Home","RelatedBody":"Historically NuGet has use DTE's solution events to detect projects in the solution, and when an API needs to pass an instance of a project, we used DTE's `Project` in the API. However, this was not recommended, so when a new API, GetInstalledPackagesAsync was added recently, we created our first API that used the project id (guid).\r\n\r\nThe DTE project doesn't have an API to get the project id directly, so I tried getting the project file path from the DTE project, then used `IVsSolution5.GetGuidOfProjectFile`. But for a small number of customers this would throw an exception. At the time of writing, we haven't yet been able to determine which project types this is happening on, and therefore why the `IVsSolution5` can't find the project. Since then, I added a second attempt of getting a project's guid, and we'll monitor reliability once a version of VS with that change ships, but I'm not sure if it will be any more reliable.\r\n\r\nHowever, when working on improvements to our internal tool to test VS APIs, I discovered [a way to get a DTE project from a `IVsHierarchy` instance](https://github.com/NuGet/Entropy/blob/6bc031c2f8c668079069afcce1b0b6b16bcc41b3/IVsTestingExtension/src/Xaml/ToolWindow/ToolWindowControlViewModel.cs#L73). It needs more testing, but given that every time I talk to the VS extensibility team or VS architects about DTE, they always strongly recommend not using DTE. Therefore, I believe we can make a step in the preferred direction by migrating one small usage off DTE, and hopefully improve VS client reliability as well."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1349825493265231872","CreatedAt":"2021-01-14T21:07:30+00:00","UserScreenname":"nuget","Text":"Thanks for the birthday wishes everyone! 🥳🥳🥳\n\nThank you to all of the team members (past and present), external con… https://t.co/mWYE55Bh9b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-15T05:30:38.7966421Z","RunDurationInMilliseconds":1501}