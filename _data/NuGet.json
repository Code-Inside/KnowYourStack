{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 â€“ Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 â€“ Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 â€“ The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 â€“ Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34500638023","Type":"IssuesEvent","CreatedAt":"2024-01-01T11:31:02","Actor":"Javidleo","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9770","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Face with 504 Gateway Timeout while Restore Packages\" (#9770) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nuntil yesterday(last time I build up my application) everything was ok, \r\nbut now I'm facing with 504 and 502 errors while building my dotnet application via docker compose.\r\nI hope following info will help: (names and project routes are fake)\r\n\r\n`Determining projects to restore...\r\n  Restored /home/project/backend/src/Common/EventBus/Project.EventBus/Project..EventBus.csproj (in 116 ms).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.fileproviders.physical/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.entityframeworkcore.abstractions/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.authentication.cookies/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/system.threading.channels/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/swashbuckle.aspnetcore.swaggerui/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Restored /route-to-project/src/Common/classlib/classlib.csproj (in 2.93 sec).\r\n  Restored /route-to-project/src/Common/classlib/classlib.csproj (in 3.98 sec).\r\n  Restored \r\n  Restored /route-to-project/src/Common/serviceclasslib/serviceclasslib.csproj (in 5.88 sec).\r\n  Failed to download package 'Geocoding.Microsoft.4.0.1' from 'https://api.nuget.org/v3-flatcontainer/geocoding.microsoft/4.0.1/geocoding.microsoft.4.0.1.nupkg'.\r\n  Response status code does not indicate success: 504 (Gateway Time-out).\r\n  Restored /route-to-project/src/Common/service/service.csproj (in 8.96 sec).\r\n  Failed to download package 'Geocoding.Microsoft.4.0.1' from 'https://api.nuget.org/v3-flatcontainer/geocoding.microsoft/4.0.1/geocoding.microsoft.4.0.1.nupkg'.\r\n  Response status code does not indicate success: 504 (Gateway Time-out).\r\n/usr/lib/dotnet/sdk/6.0.125/NuGet.targets(130,5): error : Failed to download package 'Geocoding.Microsoft.4.0.1' from 'https://api.nuget.org/v3-flatcontainer/geocoding.microsoft/4.0.1/geocoding.microsoft.4.0.1.nupkg'. `\r\n\r\nmore details : \r\n- I recently updated my gitlab and its ssl certificate, is there any related stuff between downloading/restoring packages and ssl certificates? if it is, please someone share a blog post or a document about it.\r\n\r\n\n\n### Repro Steps\n\nI don't know how this error produced at first time, but something that might help is \r\n- I was working on updating my gitlab and its ssl certificate\r\n- I'm using .NET 6 on this project \r\n- this project uses docker-compose and builds as a set of containers.\r\n- I also tried to restore just one of the projects with dotnet cli 'restore' command but it also failed.\n\n### Expected Behavior\n\nas normal restore process I should be able to build my application as usual.  \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34499007296","Type":"IssuesEvent","CreatedAt":"2024-01-01T08:22:42","Actor":"gimbling-away","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9769","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Unable to access api.nuget.org using the .NET SDK, but can access it using curl or Firefox.\" (#9769) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWhen I do `dotnet restore`, it times out while fetching https://api.nuget.org/v3/index.json but I can access it using curl or open it in Firefox.\r\n\r\nNote: I honestly have no idea whether this is a .NET SDK bug or a NuGet.org problem. The original issue at `dotnet/sdk` for this is https://github.com/dotnet/sdk/issues/37673. I did see similar issues regarding connectivity to the API in this repo, so felt this should be the place. I apologize if this is the wrong place. ðŸ˜…\n\n### Repro Steps\n\n- Open any .NET project\r\n- Run `dotnet restore`\r\n\n\n### Expected Behavior\n\nNot time out\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/93856041/e3249471-68e1-4a0a-9922-61feca67d1e4)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34502931835","Type":"IssuesEvent","CreatedAt":"2024-01-01T15:31:54","Actor":"Wonderwhothen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13120","RelatedDescription":"Opened issue \"package() {\" (#13120) at NuGet/Home","RelatedBody":"https://github.com/Wonderwhothen/archlinuxcn-repo/blob/master/alarmcn%2Focaml-menhir%2FPKGBUILD#L28"},{"Id":"34502922728","Type":"IssuesEvent","CreatedAt":"2024-01-01T15:30:49","Actor":"Wonderwhothen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13119","RelatedDescription":"Opened issue \"sha256sums=('7f29f717b67ff31ad3dbabb17996f5171e6bba417f6fff1458dbdee71966c126')\" (#13119) at NuGet/Home","RelatedBody":"https://github.com/Wonderwhothen/archlinuxcn-repo/blob/master/alarmcn%2Focaml-menhir%2FPKGBUILD#L21"},{"Id":"34495643677","Type":"PullRequestEvent","CreatedAt":"2024-01-01T00:40:16","Actor":"Wonderwhothen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/pull/13117","RelatedDescription":null,"RelatedBody":"~P"},{"Id":"34495641328","Type":"PullRequestEvent","CreatedAt":"2024-01-01T00:40:00","Actor":"Wonderwhothen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13117","RelatedDescription":"Closed pull request \"Triage \" (#13117) at NuGet/Home","RelatedBody":"~P"},{"Id":"34488878186","Type":"IssuesEvent","CreatedAt":"2023-12-31T07:33:19","Actor":"Nefcanto","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13118","RelatedDescription":"Opened issue \"NuGet not respecting local cache\" (#13118) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nNuGet does not honor the locale cache. We have restored a project with many packages in a docker image to cache images so that we can run an app without an internet connection, but we get this error:\r\n\r\n```\r\nApiContainer | MSBuild version 17.8.3+195e7f5a3 for .NET\r\nApiContainer |   Determining projects to restore...\r\nApiContainer | /usr/share/dotnet/sdk/8.0.100/NuGet.targets(156,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/Project/AdminApi/Api.csproj]\r\nApiContainer | /usr/share/dotnet/sdk/8.0.100/NuGet.targets(156,5): error :   Resource temporarily unavailable (api.nuget.org:443) [/Project/AdminApi/Api.csproj]\r\nApiContainer | /usr/share/dotnet/sdk/8.0.100/NuGet.targets(156,5): error :   Resource temporarily unavailable [/Project/AdminApi/Api.csproj]\r\nApiContainer | \r\nApiContainer | Build FAILED.\r\nApiContainer | \r\nApiContainer | /usr/share/dotnet/sdk/8.0.100/NuGet.targets(156,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/Project/AdminApi/Api.csproj]\r\nApiContainer | /usr/share/dotnet/sdk/8.0.100/NuGet.targets(156,5): error :   Resource temporarily unavailable (api.nuget.org:443) [/Project/AdminApi/Api.csproj]\r\nApiContainer | /usr/share/dotnet/sdk/8.0.100/NuGet.targets(156,5): error :   Resource temporarily unavailable [/Project/AdminApi/Api.csproj]\r\n\r\n```\n\n### Desired Behavior\n\nWhen packages are cached once, NuGet should use them if the internet connection is not available. Preferably it should use them and not connect to the internet at all, even if it's available. Because packages are already there on the disk.\n\n### Additional Context\n\nThis is our `Dockerfile`:\r\n\r\n```\r\n# https://mcr.microsoft.com/v2/vscode/devcontainers/dotnet/tags/list\r\n# https://mcr.microsoft.com/v2/devcontainers/dotnet/tags/list\r\n# https://github.com/devcontainers/images/blob/main/src/dotnet/.devcontainer/Dockerfile\r\n# https://hub.docker.com/_/microsoft-dotnet-sdk\r\nARG VARIANT=\"8.0-bookworm-slim\"\r\nFROM mcr.microsoft.com/vscode/devcontainers/dotnet:${VARIANT}\r\n\r\nENV PATH=\"${PATH}:/HolismHolding/Commands/ApiContainer:/HolismHolding/Commands\"\r\n\r\nENV Nuget=/root/.local/share/NuGet/http-cache/\r\n\r\nCOPY . /HolismApi/Infra\r\n\r\nRUN mkdir /Temp \\\r\n    && cd /Temp \\\r\n    && dotnet new console \\\r\n    && echo '<Project Sdk=\"Microsoft.NET.Sdk.Web\"><Import Project=\"/HolismApi/Infra/DotNet.targets\" /></Project>' > /Temp/Temp.csproj \\\r\n    && echo 'System.Console.WriteLine(\"hello\");' > /Temp/Program.cs \\\r\n    && dotnet restore \\\r\n    && dotnet build \\\r\n    && cd / \\\r\n    && rm -rf /Temp\r\n\r\nRUN apt update -qq \\\r\n    && mkdir -p /Temp/ImageResizingAndCompression \\\r\n    && chmod 777 --preserve-root /Temp/ImageResizingAndCompression \\\r\n    && mkdir -p /Temp/VideoConversion \\\r\n    && chmod 777 --preserve-root /Temp/VideoConversion \\\r\n    && apt install bc -qq -y \\\r\n    && apt install procps -qq -y \\\r\n    && apt install file -qq -y \\\r\n    && apt install gettext-base -qq -y \\\r\n    && apt install apt-utils -qq -y \\\r\n    && apt install libgdiplus -qq -y \\\r\n    && apt install inotify-tools -qq -y \\\r\n    && apt install libc6-dev -qq -y \\\r\n    && apt install webp -qq -y \\\r\n    && apt install telnet -qq -y \\\r\n    && apt install dnsutils -qq -y \\\r\n    && apt install imagemagick -qq -y \\\r\n    && apt install ffmpeg -qq -y \\\r\n    && cd /usr/local/bin \\\r\n    && curl https://getmic.ro | bash\r\n```\r\n\r\nAs you can see we create a `Temp.csproj` that has a `Import`. This is what it imports:\r\n\r\n```\r\n<Project>\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <OutputPath>.\\bin</OutputPath>\r\n    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>\r\n    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>\r\n    <Nullable>disable</Nullable>\r\n    <ImplicitUsings>disable</ImplicitUsings>\r\n    <Deterministic>true</Deterministic>\r\n  </PropertyGroup>\r\n\r\n  <Import Project=\"/HolismApi/Infra/Nuget.targets\" />\r\n\r\n  <ItemGroup>\r\n    <None Include=\"./Settings.json\" Condition=\"Exists('./Settings.json')\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"./SettingsOverride.json\" Condition=\"Exists('./SettingsOverride.json')\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"./LocalSecrets.json\" Condition=\"Exists('./LocalSecrets.json')\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"./ConnectionStrings.json\" Condition=\"Exists('./ConnectionStrings.json')\" >\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nAnd this is our `Nuget.targets`:\r\n\r\n```\r\n<Project>\r\n\r\n  <ItemGroup>\r\n\r\n    <PackageReference Include=\"AngleSharp\" Version=\"1.0.7\" />\r\n    <PackageReference Include=\"Azure.Storage.Blobs\" Version=\"12.19.1\" />\r\n    <PackageReference Include=\"Bogus\" Version=\"35.2.0\" />\r\n    <PackageReference Include=\"ClosedXML\" Version=\"0.102.1\" />\r\n    <PackageReference Include=\"Hashids.net\" Version=\"1.7.0\" />\r\n    <PackageReference Include=\"Humanizer.Core\" Version=\"2.14.1\" />\r\n    <PackageReference Include=\"Humanizer.Core.ar\" Version=\"2.14.1\" />\r\n    <PackageReference Include=\"Humanizer.Core.fa\" Version=\"2.14.1\" />\r\n    <PackageReference Include=\"Humanizer.Core.ru\" Version=\"2.14.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"8.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"8.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"8.0.0\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Protocols.OpenIdConnect\" Version=\"7.0.3\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Tokens\" Version=\"7.0.3\" />\r\n    <PackageReference Include=\"morelinq\" Version=\"4.1.0\" />\r\n    <PackageReference Include=\"MySqlConnector\" Version=\"2.3.3\" />\r\n    <PackageReference Include=\"Pomelo.EntityFrameworkCore.MySql\" Version=\"7.0.0\" />\r\n    <PackageReference Include=\"Pomelo.EntityFrameworkCore.MySql.NetTopologySuite\" Version=\"7.0.0\" />\r\n    <PackageReference Include=\"SocketIOClient\" Version=\"3.1.1\" />\r\n    <PackageReference Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"7.0.3\" />\r\n    <PackageReference Include=\"System.Linq.Dynamic.Core\" Version=\"1.3.7\" />\r\n    <PackageReference Include=\"System.Text.Json\" Version=\"8.0.0\" />\r\n    <!-- <PackageReference Include=\"AngouriMath\" Version=\"1.3.0\" /> -->\r\n\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nAnd then we do `dotnet restore` and `dotnet build` to make sure that our dependencies are cached once and our project can be built.\r\n\r\nThen we use this image in an environment without internet access. When we upgraded to dotnet 8, it broke."},{"Id":"34483722305","Type":"PullRequestEvent","CreatedAt":"2023-12-30T17:38:35","Actor":"Wonderwhothen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13117","RelatedDescription":"Opened pull request \"Triage \" (#13117) at NuGet/Home","RelatedBody":"~P"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us atâ€¯[support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-02T03:30:19.4502159Z","RunDurationInMilliseconds":1266}