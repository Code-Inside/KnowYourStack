{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20297208996","Type":"PullRequestEvent","CreatedAt":"2022-02-16T20:30:10","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9006","RelatedDescription":"Merged pull request \"Increase blocking time for search indexing\" (#9006) at NuGet/NuGetGallery","RelatedBody":"Raised the blocking period to 3 weeks."},{"Id":"20282722370","Type":"IssuesEvent","CreatedAt":"2022-02-16T07:04:14","Actor":"no1melman","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9007","RelatedDescription":"Opened issue \"[Bug]: SearchQueryService doesnt find System.CommandLine\" (#9007) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20278148609","Type":"PullRequestEvent","CreatedAt":"2022-02-15T23:36:08","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9006","RelatedDescription":"Opened pull request \"Increase blocking time for search indexing\" (#9006) at NuGet/NuGetGallery","RelatedBody":"Raised the blocking period to 3 weeks."},{"Id":"20278011564","Type":"IssuesEvent","CreatedAt":"2022-02-15T23:23:34","Actor":"devlead","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9005","RelatedDescription":"Closed issue \".NET 6 not listed besides .NET Core 3.1 /5.0\" (#9005) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n.NET 6 not listed for Tool and class library targeting .NET 6, but .NET 5 and .NET Core 3.1 is. \r\n\r\nExample tool \r\n![Screenshot_20220215-224750](https://user-images.githubusercontent.com/1647294/154156200-abb96ccd-62d5-4b98-9805-2c4c2516c524.jpg)\r\n\r\nExample class library\r\n![Screenshot_20220215-225722](https://user-images.githubusercontent.com/1647294/154156592-f4fde3d8-ae61-44a5-9d1f-76dbf7a57e89.jpg)\r\n\r\n\r\nBoth have .NET 6 listed under frameworks\r\n![Screenshot_20220215-230030](https://user-images.githubusercontent.com/1647294/154156782-422dc4bb-9c71-4d38-b91e-e20bf89cb411.jpg)\r\n\n\n### Repro Steps\n\nGo to\r\nhttps://www.nuget.org/packages/Cake.Tool\r\nor\r\nhttps://www.nuget.org/packages/Cake.Core\n\n### Expected Behavior\n\n.NET 6 to be listed\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20277001259","Type":"IssuesEvent","CreatedAt":"2022-02-15T22:02:07","Actor":"devlead","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9005","RelatedDescription":"Opened issue \".NET 6 not listed besides .NET Core 3.1 /5.0\" (#9005) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n.NET 6 not listed for Tool and class library targeting .NET 6, but .NET 5 and .NET Core 3.1 is. \r\n\r\nExample tool \r\n![Screenshot_20220215-224750](https://user-images.githubusercontent.com/1647294/154156200-abb96ccd-62d5-4b98-9805-2c4c2516c524.jpg)\r\n\r\nExample class library\r\n![Screenshot_20220215-225722](https://user-images.githubusercontent.com/1647294/154156592-f4fde3d8-ae61-44a5-9d1f-76dbf7a57e89.jpg)\r\n\r\n\r\nBoth have .NET 6 listed under frameworks\r\n![Screenshot_20220215-230030](https://user-images.githubusercontent.com/1647294/154156782-422dc4bb-9c71-4d38-b91e-e20bf89cb411.jpg)\r\n\n\n### Repro Steps\n\nGo to\r\nhttps://www.nuget.org/packages/Cake.Tool\r\nor\r\nhttps://www.nuget.org/packages/Cake.Core\n\n### Expected Behavior\n\n.NET 6 to be listed\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20276545360","Type":"IssuesEvent","CreatedAt":"2022-02-15T21:30:11","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4843","RelatedDescription":"Closed issue \"Gallery should show which frameworks a package is compatible with\" (#4843) at NuGet/NuGetGallery","RelatedBody":"The NuGet web site (and client UI) doesn't *really* show which frameworks a package is compatible with. Instead, it renders the dependency groups. If there are no dependency groups, it doesn't show any frameworks:\r\n\r\n![image](https://user-images.githubusercontent.com/5169960/31554645-04ba4bdc-aff3-11e7-9dc2-cba00c2562e5.png)\r\n\r\nAnd if there are some, it quickly looks super busy, even in packages with few dependencies (check out [JSON.NET](https://www.nuget.org/packages/Newtonsoft.Json/)). And for meta packages it's basically not working at all (check out [NETStandard.Library](https://www.nuget.org/packages/NETStandard.Library)).\r\n\r\nIf think we want to render the lowest version of a framework that the package is compatible with. We probably also want to hide or at least deemphasize legacy frameworks:\r\n\r\n![image](https://user-images.githubusercontent.com/5169960/31554441-6fae0cd6-aff2-11e7-939e-5206cf1699b3.png)\r\n\r\nIf my package only targets .NET Standard, I should still see the list of frameworks I’m effectively compatible with (i.e. the list above). Ideally, the list of frameworks would remain the same between packages but we’d indicate unsupported ones. For instance, let’s say the package only targets .NET Framework 2.0, this is what I would expect to see:\r\n\r\n![image](https://user-images.githubusercontent.com/5169960/31554451-7534c4ce-aff2-11e7-96c8-116496f55a84.png)\r\n\r\nLogically, I think we want to have a list of frameworks on the server for which we do hit testing with each package. Adding new frameworks should update the display for all packages.\r\n\r\n## .NET Standard\r\n\r\nWe probably want to treat .NET Standard specially, at least by displaying it first. If a package has .NET Framework assets, it might be consumable via the .NET Standard 2.0 compatibility mode. It seems we should think if and how we could render that information. Maybe like this?\r\n\r\n![image](https://user-images.githubusercontent.com/5169960/31555337-8544e7a6-aff5-11e7-8924-1217fa9a91ca.png)\r\n\r\n\r\n"},{"Id":"20270571144","Type":"IssuesEvent","CreatedAt":"2022-02-15T15:51:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9004","RelatedDescription":"Closed issue \"[NuGet.org Bug]: \" (#9004) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nNot able to connect to the project website https://webgrease.codeplex.com/. It is showing the site is unreachable. Our Governance Team need to explore the project site before consuming it NuGet .\n\n### Repro Steps\n\n1.Go to URL  https://webgrease.codeplex.com/\r\n2.Check for its availability\n\n### Expected Behavior\n\nSite should be reachable\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/99735590/154067205-2e6e0f03-4c56-429a-a7a9-b4206b3a308a.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20267176612","Type":"IssuesEvent","CreatedAt":"2022-02-15T13:11:22","Actor":"hardik-2","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9004","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9004) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nNot able to connect to the project website https://webgrease.codeplex.com/. It is showing the site is unreachable. Our Governance Team need to explore the project site before consuming it NuGet .\n\n### Repro Steps\n\n1.Go to URL  https://webgrease.codeplex.com/\r\n2.Check for its availability\n\n### Expected Behavior\n\nSite should be reachable\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/99735590/154067205-2e6e0f03-4c56-429a-a7a9-b4206b3a308a.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20267076012","Type":"IssuesEvent","CreatedAt":"2022-02-15T13:06:08","Actor":"daveaglick","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9003","RelatedDescription":"Opened issue \"[Feature]: Better error message when uploading a certificate fails\" (#9003) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nThe error message when uploading a certificate to the gallery that doesn't meet requirements isn't particularly helpful:\r\n\r\n![image](https://user-images.githubusercontent.com/1020407/154065380-17d5b45b-51c7-4aea-ac3d-9223fad36f11.png)\r\n\r\nIt tells you what you need, but not how what you uploaded wasn't correct or how to get from what you uploaded to what you need. While someone who's experienced with security tools like OpenSSL can likely take what they have and convert it to the requested format without too much trouble, this could be a very confusing and time-consuming process of research and trial-and-error for developers who aren't experienced with certificates. This could eventually lead to them giving up on signing packages or carrying out unsafe actions in pursuit of answers (I.e. using untrusted web-based certificate conversion tools and accidentally leaking their private key). It's in the interest of the entire NuGet ecosystem to ensure package authors can sign and validate packages as easily and painlessly as possible.\r\n\r\nThere are a few ways I think this experience could be improved:\r\n- Tell the user what they uploaded. While it may take some additional code to determine the kind and format of a certificate that the gallery can't handle, it would give the user a much better starting point for researching how to convert it to the appropriate format. There are so many different starting points, and the extensions can mean so many different things, just understanding what you have in your hand is a huge help.\r\n- Link to a general overview of how security certificates work like [this one](https://www.ssl.com/guide/pem-der-crt-and-cer-x-509-encodings-and-conversions/). \r\n- Suggest that the user import their certificate into the Windows Certificate Manager MMC snap-in and then export it from there. This could be some simple inline text, at least enough to suggest it's something worth researching, and/or a link to a full article [like this](https://support.globalsign.com/ssl/ssl-certificates-installation/import-and-export-certificate-microsoft-windows). I'd also mention that the private key _does not_ need to be exported with the certificate here.\r\n- Suggest that the user use OpenSSL either through WSL or on Linux. This doesn't need to include OpenSSL commands for all types of conversions, but even just mentioning that this is an available tool that can help convert to the correct certificate format for upload could help start the user down the right path.\r\n\r\nAnother related mitigation beyond better help text could be to accept more certificate formats, thus reducing the number of failures requiring better text up front. For example, accepting a PEM encoded certificate in addition to DER.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20260396530","Type":"IssuesEvent","CreatedAt":"2022-02-15T06:36:06","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9000","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Using nuget.core 2.14.0 with https://www.nuget.org/api/v2 no longer allows finding packages.\" (#9000) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nWe are using NuGet.Core 2.14.0 with https://www.nuget.org/api/v2 and yesterday we started experiencing an error blocking finding packages.\r\n\r\nWe are getting the following exception on almost all packages we try to find using FindPackages(...)\r\nSystem.InvalidOperationException: Response version '3.0' is not supported. The only supported versions are: '1.0', '2.0'.\r\n\r\nThis happens both in Azure and locally.\r\n\r\nWe are in the process of updating to a newer version of nuget but it would be nice to get this fixed.\r\n\r\n### Repro Steps\r\n\r\nYou can also reporduce this manually by for example doing doing a manual request in browser:\r\n\r\n1. https://packages.nuget.org/api/v2/FindPackagesById()?id='System.Runtime.Serialization.Primitives'&version='4.1.1'\r\n2. Check Response Headers.\r\n3. DataServiceVersion: 3.0 is returned.\r\n\r\n### Expected Behavior\r\n\r\nExpected behaviour would be to return a version of DataServices that still works with NuGet.Core 2 when using v2 feed.\r\n\r\n### Screenshots\r\n\r\nProblem when using NuGet.Core\r\n![image](https://user-images.githubusercontent.com/6636662/153552470-e9d14f01-efdd-4a9c-a17a-4d3ef2f38424.png)\r\n\r\nManual repro:\r\n![image](https://user-images.githubusercontent.com/6636662/153591105-e3b0ba64-20cd-4ee2-b972-8a9dd49e32bf.png)\r\n\r\n\r\n### Additional Context and logs\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20301236421","Type":"IssuesEvent","CreatedAt":"2022-02-17T02:09:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11602","RelatedDescription":"Opened issue \"When LocValidation fails, the loc validation logs are not uploaded\" (#11602) at NuGet/Home","RelatedBody":"See sample: \r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5765193&view=logs&j=d80b2849-30d4-52dd-74cd-d6536ba98fe0&t=e1cbb385-1170-59ff-f358-\r\n1eb26eb7a26a"},{"Id":"20298830265","Type":"IssuesEvent","CreatedAt":"2022-02-16T22:22:54","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11358","RelatedDescription":"Closed issue \"Unskip FSharp tests\" (#11358) at NuGet/Home","RelatedBody":"Tests skipped to resolve: https://github.com/NuGet/Home/issues/11357"},{"Id":"20298830248","Type":"IssuesEvent","CreatedAt":"2022-02-16T22:22:54","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11291","RelatedDescription":"Closed issue \"Enable back flaky test GetPackageForFSharpProjectReturnsCorrectPackages\" (#11291) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Repro Steps & Context\r\n\r\nFollow up on https://github.com/NuGet/Home/issues/11290\r\nEnable back flaky test GetPackageForFSharpProjectReturnsCorrectPackages once package is published on nuget.org\r\nRoot cause it's Patch Tuesday , a new .NET SDK and packages are released, which is outside our control.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\n\r\nNU1102: Unable to find package Microsoft.NETCore.App.Host.win-x64 with version (= 5.0.11)\r\n\r\nFound 62 version(s) in nuget.org [ Nearest version: 6.0.0-preview.1.21102.12 ]\r\nFound 0 version(s) in E2E Test Repository\r\nFound 0 version(s) in https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json\r\n```\r\nRelated issue https://github.com/NuGet/NuGet.Client/pull/4328/files"},{"Id":"20298699480","Type":"IssuesEvent","CreatedAt":"2022-02-16T22:13:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11598","RelatedDescription":"Closed issue \"Remove NU5049 \" (#11598) at NuGet/Home","RelatedBody":"Discovered in https://github.com/NuGet/docs.microsoft.com-nuget/issues/2563, this is an unused log code."},{"Id":"20292928993","Type":"IssuesEvent","CreatedAt":"2022-02-16T16:25:03","Actor":"renemadsen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11601","RelatedDescription":"Opened issue \"[Bug]: error: File does not exist (true).\" (#11601) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet Version: 6.0.200\n\n### Worked before?\n\ndotnet version: 6.0.102\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nPublish a package to nuget.org with the commad like:\r\n\r\n`dotnet nuget push /home/runner/work/eform-sdk-dotnet/eform-sdk-dotnet/artifacts/Microting.eForm.5.4.30.nupkg -k ${{secrets.NUGET_SECRET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols true`\r\n\r\nWorking edition can be see here: https://github.com/microting/eform-sdk-dotnet/runs/5204099665?check_suite_focus=true#step:8:1\r\n\r\nBroken can be seen here: https://github.com/microting/eform-sdk-dotnet/runs/5219100462?check_suite_focus=true#step:8:1\r\n\r\nDoing the above, results in an error: \"error: File does not exist (true).\" even thought the package was pushed and published as expected.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20291803930","Type":"IssuesEvent","CreatedAt":"2022-02-16T15:32:19","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11517","RelatedDescription":"Closed issue \"[Bug]: Race Condition Creating Plugin Log Files\" (#11517) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n.NET 5.0.404\n\n### Worked before?\n\nDon't have specific versions, but we have been observing the bug for nearly 6 months.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOriginal issue: dotnet/sdk#21320\r\n\r\nNuGet credential provider fails to initialize if two .NET projects are being built concurrently.\r\n\r\nAppears to be caused by a race condition where both concurrent MSBuild instances attempt to open the same log file for plugin logs. The winner of the race successfully opens the file and starts the plugin; the loser fails to start the plugin, and the overall build fails because NuGet packages cannot be restored.\r\n\r\nSo far my team has only observed this happening within Azure DevOps Pipelines builds, and only over the past 6 months or so. I'm confident that nothing in our build has changed; we have been building .NET projects concurrently for years.\r\n\r\n# Repro Steps\r\n\r\nDefinitely not easy to repro. You have to get \"lucky\" and start two separate .NET builds within a short time of each other. Haven't been able to reproduce locally, but this happens in our CI builds dozens of times per day.\r\n\r\n# Proposed Fix\r\n\r\n@nkolev92 suggested adding process ID or some other random string as part of the log file name.\r\n\r\nhttps://github.com/dotnet/sdk/issues/21320#issuecomment-1017855276\n\n### Verbose Logs\n\n```shell\nFull output from running `dotnet publish`:\r\n\r\n\r\n  Determining projects to restore...\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error : Problem starting the plugin 'C:\\Users\\cloudtest\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll'. The process cannot access the file 'C:\\Users\\cloudtest\\AppData\\Local\\Temp\\pluginlog\\NuGet_PluginLogFor_dotnet_8d97ea679be4f9c.log' because it is being used by another process. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error : Problem starting the plugin 'C:\\Users\\cloudtest\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll'. The process cannot access the file 'C:\\Users\\cloudtest\\AppData\\Local\\Temp\\pluginlog\\NuGet_PluginLogFor_dotnet_8d97ea679be4f9c.log' because it is being used by another process. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error :   The process cannot access the file 'C:\\Users\\cloudtest\\AppData\\Local\\Temp\\pluginlog\\NuGet_PluginLogFor_dotnet_8d97ea679be4f9c.log' because it is being used by another process. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://microsoft.pkgs.visualstudio.com/<GUID>/_packaging/<GUID>/nuget/v3/flat2/<PACKAGE>/index.json'.\r\n  Response status code does not indicate success: 401 (Unauthorized).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://microsoft.pkgs.visualstudio.com/<GUID>/_packaging/<GUID>/nuget/v3/flat2/<PACKAGE>/index.json'.\r\n  Response status code does not indicate success: 401 (Unauthorized).\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error : Failed to retrieve information about '<PACKAGE>' from remote source 'https://microsoft.pkgs.visualstudio.com/<GUID>/_packaging/<GUID>/nuget/v3/flat2/<PACKAGE>/index.json'. [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\nC:\\a\\_work\\_tool\\dotnet\\sdk\\5.0.401\\NuGet.targets(131,5): error :   Response status code does not indicate success: 401 (Unauthorized). [C:\\a\\_work\\1\\s\\Path\\To\\MyProj.csproj]\r\n```\n```\n"},{"Id":"20280974014","Type":"IssuesEvent","CreatedAt":"2022-02-16T04:09:40","Actor":"chris-smith-zocdoc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11600","RelatedDescription":"Opened issue \"[DCR]: \" (#11600) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nWe host an authenticated nuget feed for our organization using Artifactory. We noticed in the logs an excessive amount of 401 Unauthorized responses originating from `dotnet restore` throughout the org. It appears that every api call is being made twice, first without authentication, then again with authentication. This doubles the number of api calls make during a package restore. \n\n### Desired Behavior\n\nI'd like to force nuget to always send credentials to our feed, there is no need to make the api calls twice. This slows down the restore process, places additional load on the supporting infrastructure and makes monitoring more difficult. \n\n### Additional Context\n\nOther package management tools will always send credentials if configured to do so, they do not 401 first. "},{"Id":"20280297856","Type":"IssuesEvent","CreatedAt":"2022-02-16T02:57:07","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11599","RelatedDescription":"Opened issue \"[Responsiveness] Package Management UI can consume large number of threads all searching the disk (up to 316 threads) Part2\" (#11599) at NuGet/Home","RelatedBody":"Tracking issue for: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1424937\nI added `Around The World` tag here since internal issue has one.\n"},{"Id":"20279794322","Type":"IssuesEvent","CreatedAt":"2022-02-16T02:03:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11598","RelatedDescription":"Opened issue \"Remove NU5049 \" (#11598) at NuGet/Home","RelatedBody":"Discovered in https://github.com/NuGet/docs.microsoft.com-nuget/issues/2563, this is an unused log code."},{"Id":"20279738958","Type":"IssuesEvent","CreatedAt":"2022-02-16T01:58:08","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11597","RelatedDescription":"Opened issue \"[Feature]: Plugin model for post-package add\" (#11597) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console, dotnet.exe\n\n### The Elevator Pitch\n\nNuGet allows for a package to be added to a project, but does not enable post-add steps.  This used to exist with the model of `install.ps1` but that is no longer available.  There are many scenarios where this is desired, but the current solutions (msbuild targets) does not complete the experience.  NuGet should make available a renewed model for post-package add configuration in some type of plugin model that enables packages to augment the experience when adding.  Right now the users who only use tools like VS Package Manager UI don't get a pleasant experience when adding packages that actually **require** post-add steps to be meaningful and the PM UI experience doesn't expose/alert them to such.  The experience does not put the developer on the path of success and in some cases it puts them into the pit of failure.\n\n### Additional Context and Details\n\nRazor components in ASPNET are one such category here.  Nearly every Razor component will follow the pattern of asking the user to do the following:\r\n\r\n- Add the package\r\n- Modify their _Imports.razor file to include an additional import\r\n- Modify their index.html file to add links to the embedded CSS/JS files as a part of the component\r\n- Modify their Program/Startup.cs files to register new DI services that may be required for the component to work\r\n\r\nWhen a developer does the first step...especially in VS...they aren't guided to know the other steps are needed unless they are able to navigate successfully to the docs.  Otherwise they will be in an F5 loop, change something, fail, add the other thing, fail, repeat until they find success.\r\n\r\nCompared to something analogous like the Vue framework which when you add a UI component (akin to a Razor component), it adds the package and also enables a hook to modify what is needed.  In the Vue model, you are immediately put on the path of success.  Here is an example showing a new Vue app and me adding a cool UI component library...observe the end state shows that all is modified for me to be successful:\r\n\r\nhttps://user-images.githubusercontent.com/4821/154180697-78863835-7ea4-473b-8fad-991780001722.mp4\r\n\r\nObserve that the after state has all the requirements for me to be immediately successful.\r\n\r\nCompare that to Razor+NuGet:\r\n\r\nhttps://user-images.githubusercontent.com/4821/154181509-9543cc15-9283-458b-b156-f2d71e92e5e9.mp4\r\n\r\nObserve the after state has only added the package and I still need 4 more steps to be successful but there also is no information even telling me that.  I now have to modify three things and in this particular example I'll still get an error until I realize I have to add 2 more things that weren't told to me.  It's just a poorer experience.\r\n\r\nProviding a better experience for authors to enable post-install steps would enable this scenario easily and others that have already been reported."},{"Id":"20276999921","Type":"IssuesEvent","CreatedAt":"2022-02-15T22:02:02","Actor":"no1melman","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11596","RelatedDescription":"Opened issue \"[Bug]: SearchQueryService doesnt find System.CommandLine\" (#11596) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nhttps://azuresearch-usnc.nuget.org\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n```\r\nhttps://azuresearch-usnc.nuget.org/query?q=system.commandline\r\n```\r\n\r\nneither\r\n\r\n```\r\nnuget search System.CommandLine\r\n```\r\n\r\n-- compare to --\r\n\r\nnuget.org and search for System.CommandLine which actually shows the package\r\n\r\nwhy can't these be found\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":166,"FavoriteCount":40,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-02-17T03:30:24.5083174Z","RunDurationInMilliseconds":1298}