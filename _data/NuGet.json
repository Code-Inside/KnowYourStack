{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org ‚Äì Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It‚Äôs been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13519736298","Type":"PullRequestEvent","CreatedAt":"2020-09-15T02:46:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8205","RelatedDescription":"Merged pull request \"Focus edit button after form is closed\" (#8205) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8183"},{"Id":"13518542573","Type":"PullRequestEvent","CreatedAt":"2020-09-14T23:25:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8206","RelatedDescription":"Merged pull request \"Emit AI event when install command is copied\" (#8206) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/Engineering/issues/3400\r\n\r\nCurrently we have very little understanding of whether a user is \"successful\" after they reach a package details page. We have floated the idea several times in the past about instrumenting the \"Copy\" button. I decided to do that now so we can establish a baseline leading up to the next feature, whatever that might be (perhaps readmes? üëç)\r\n\r\nThe event looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/93124915-3513f000-f67f-11ea-81e7-50e5510d19bf.png)\r\n"},{"Id":"13518069839","Type":"PullRequestEvent","CreatedAt":"2020-09-14T22:13:52","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8207","RelatedDescription":"Opened pull request \"adding an * by required fields in forms\" (#8207) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nBefore changes:\r\n\r\nAfter changes: \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8181 "},{"Id":"13516141044","Type":"PullRequestEvent","CreatedAt":"2020-09-14T18:48:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8206","RelatedDescription":"Opened pull request \"Emit AI event when install command is copied\" (#8206) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/Engineering/issues/3400\r\n\r\nCurrently we have very little understanding of whether a user is \"successful\" after they reach a package details page. We have floated the idea several times in the past about instrumenting the \"Copy\" button. I decided to do that now so we can establish a baseline leading up to the next feature, whatever that might be (perhaps readmes? üëç)\r\n\r\nThe event looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/93124915-3513f000-f67f-11ea-81e7-50e5510d19bf.png)\r\n"},{"Id":"13514645453","Type":"PullRequestEvent","CreatedAt":"2020-09-14T16:28:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8205","RelatedDescription":"Opened pull request \"Focus edit button after form is closed\" (#8205) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8183"},{"Id":"13510602673","Type":"IssuesEvent","CreatedAt":"2020-09-14T10:59:34","Actor":"rootnoir","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8204","RelatedDescription":"Opened issue \"Response status code does not indicate success: 400 (The <icon> element is not currently supported.)\" (#8204) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWe use release https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09\r\nWhen try to push package downloaded from nuget.org, get error:\r\n`\r\nResponse status code does not indicate success: 400 (The <icon> element is not currently supported.).\r\n`\r\n### To Reproduce\r\n`Pushing System.Runtime.CompilerServices.Unsafe.4.7.1.nupkg to 'https://localnuget/api/v2/package'...`\r\n`PUT https://localnuget/api/v2/package/`\r\n`BadRequest https://localnuget/api/v2/package/ 2021ms`\r\n`Response status code does not indicate success: 400 (The <icon> element is not currently supported.).`"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13515940787","Type":"IssuesEvent","CreatedAt":"2020-09-14T18:29:43","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8270","RelatedDescription":"Closed issue \"Package Manager experiences for VSO \" (#8270) at NuGet/Home","RelatedBody":"Per this blog post from May 2019, https://aka.ms/vsfutures --> https://devblogs.microsoft.com/visualstudio/intelligent-productivity-and-collaboration-from-anywhere/\r\n\r\n[ADO Query](https://devdiv.visualstudio.com/DevDiv/_queries/query-edit/5d5d5ecc-9e55-4053-9cdb-245a082dd02f/)"},{"Id":"13513569136","Type":"IssuesEvent","CreatedAt":"2020-09-14T15:03:27","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10030","RelatedDescription":"Opened issue \".NET Core restore is significantly slower than .NET Framework restore\" (#10030) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#13538**\r\n- Please respond to @saul.\r\n\r\n---\r\n\r\n_From @saul on Friday, September 11, 2020 4:36:23 PM_\r\n\r\nHi\r\n\r\nWe're currently in the middle of migrating a large .NET Framework codebase (~350 projects) to .NET Core. Unfortunately we've hit a bit of a roadblock - the NuGet restore times have shot up from ~1:30m -> ~16:00m (an increase of 10x!)\r\n\r\nUnfortunately I can't share the full solution as it is sensitive. However I have been able to create a representative solution outside of the office. This representative solution has the same number of projects, the same ProjectReferences and the same third-party PackageReferences. With this representative solution, here are my results:\r\n\r\n- .NET Framework restore time: 14s average\r\n- .NET Core restore time: 51s average\r\n\r\nNote that the only thing that has changed between .NET Framework and .NET Core is moving from `net471` -> `netcoreapp3.1`. All project/package references remain the same.\r\n\r\n```\r\nBenchmark #1: dotnet restore --force C:\\Code\\SharedSolutions\\SanitisedNetCoreApp3.1\\Solution.sln\r\n  Time (mean ¬± œÉ):     53.221 s ¬±  1.505 s    [User: 4.4 ms, System: 4.5 ms]\r\n  Range (min ‚Ä¶ max):   50.993 s ‚Ä¶ 55.307 s    10 runs\r\n\r\nBenchmark #2: dotnet restore --force C:\\Code\\SharedSolutions\\SanitisedNet471\\Solution.sln\r\n  Time (mean ¬± œÉ):     14.121 s ¬±  0.272 s    [User: 1.5 ms, System: 4.5 ms]\r\n  Range (min ‚Ä¶ max):   13.750 s ‚Ä¶ 14.481 s    10 runs\r\n```\r\n\r\nYou can find the solutions here to test/profile for yourself here:\r\n\r\n- [SanitisedNet471.zip](https://github.com/dotnet/sdk/files/5210379/SanitisedNet471.zip)\r\n- [SanitisedNetCoreApp3.1.zip](https://github.com/dotnet/sdk/files/5210380/SanitisedNetCoreApp3.1.zip)\r\n\r\nAny info would be greatly appreciated as we're unable to complete the .NET Core migration without a solution.\r\n\r\nThanks\r\nSaul"},{"Id":"13510899429","Type":"IssuesEvent","CreatedAt":"2020-09-14T11:28:26","Actor":"jozefizso","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10029","RelatedDescription":"Opened issue \"NU1403: Package content hash validation failed for System.Diagnostics.Debug.4.3.0\" (#10029) at NuGet/Home","RelatedBody":"NuGet product used: **nuget.exe**\r\n\r\nNuGet version: **5.7.0 x64**\r\n\r\nVS version (if appropriate): Visual Studio 2019 16.7.3\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 2004 x64, Azure Hosted Agent 20200827.1\r\n\r\n\r\n## Detailed repro steps so we can see the same problem\r\n1. Migrate projects from **packages.config** to `PackageReference` format\r\n2. Enable `RestorePackagesWithLockFile` and `DisableImplicitNuGetFallbackFolder` in project files\r\n3. Configure Azure Pipeline to cache nuget packages based on `packages.lock.json` files\r\n4. Use `nuget.exe` to restore packages in Azure Pipeline build\r\n5. Build will randomly fail with `NU1403: Package content hash validation failed for System.Diagnostics.Debug.4.3.0` error message.\r\n\r\n## Other suggested things\r\n\r\nhttp://thecodemanual.pl/2020/03/11/caching-not-only-nuget-packages-on-azure-devops.html\r\nhttps://rafaeldossantos.net/azure-devops-pipeline-cache-nuget/\r\n\r\n### Verbose Logs\r\n\r\n```\r\n...\r\n2020-09-14T07:56:02.8580414Z All packages and projects are compatible with .NETFramework,Version=v4.6.2 (win-x86).\r\n2020-09-14T07:56:02.8581131Z Package content hash validation failed for System.Diagnostics.Debug.4.3.0. Expected: aMZ7dxchsUUwNeVUnDHImWs2f/5MFLbEHBktJEOJ2tYfL/a743iyuQye8qAhwVWC9hbr8O8+zfx+J4E9UTJniQ== Actual: ZUhUOdqmaG5Jk3Xdb8xi5kIyQYAA4PnTNlHx1mu9ZY3qv4ELIdKbnL/akbGaKi2RnNUWaZsAs31rvzFdewTj2g==\r\n2020-09-14T07:56:02.8583634Z Package content hash validation failed for System.Runtime.InteropServices.RuntimeInformation.4.3.0. Expected: TbJ8Q9N8BLyOxAGTgx55HJlgsxwlWIVaY6uuqvB6/pIpR9z95qTwd1ZzNOuCqE0AcW9d8WMkjzzC3lpljK06zA== Actual: cbz4YJMqRDR7oLeMRbdYv7mYzc++17lNhScCX0goO2XpGWdvAt60CGN+FHdePUEHCe/Jy9jUlvNAiNdM+7jsOw==\r\n2020-09-14T07:56:02.8584771Z Package content hash validation failed for System.Diagnostics.Debug.4.3.0. Expected: aMZ7dxchsUUwNeVUnDHImWs2f/5MFLbEHBktJEOJ2tYfL/a743iyuQye8qAhwVWC9hbr8O8+zfx+J4E9UTJniQ== Actual: ZUhUOdqmaG5Jk3Xdb8xi5kIyQYAA4PnTNlHx1mu9ZY3qv4ELIdKbnL/akbGaKi2RnNUWaZsAs31rvzFdewTj2g==\r\n2020-09-14T07:56:02.8587275Z Package content hash validation failed for System.Runtime.InteropServices.RuntimeInformation.4.3.0. Expected: TbJ8Q9N8BLyOxAGTgx55HJlgsxwlWIVaY6uuqvB6/pIpR9z95qTwd1ZzNOuCqE0AcW9d8WMkjzzC3lpljK06zA== Actual: cbz4YJMqRDR7oLeMRbdYv7mYzc++17lNhScCX0goO2XpGWdvAt60CGN+FHdePUEHCe/Jy9jUlvNAiNdM+7jsOw==\r\n2020-09-14T07:56:02.8592366Z Package content hash validation failed for System.Diagnostics.Debug.4.3.0. Expected: aMZ7dxchsUUwNeVUnDHImWs2f/5MFLbEHBktJEOJ2tYfL/a743iyuQye8qAhwVWC9hbr8O8+zfx+J4E9UTJniQ== Actual: ZUhUOdqmaG5Jk3Xdb8xi5kIyQYAA4PnTNlHx1mu9ZY3qv4ELIdKbnL/akbGaKi2RnNUWaZsAs31rvzFdewTj2g==\r\n2020-09-14T07:56:02.8595388Z Package content hash validation failed for System.Runtime.InteropServices.RuntimeInformation.4.3.0. Expected: TbJ8Q9N8BLyOxAGTgx55HJlgsxwlWIVaY6uuqvB6/pIpR9z95qTwd1ZzNOuCqE0AcW9d8WMkjzzC3lpljK06zA== Actual: cbz4YJMqRDR7oLeMRbdYv7mYzc++17lNhScCX0goO2XpGWdvAt60CGN+FHdePUEHCe/Jy9jUlvNAiNdM+7jsOw==\r\n2020-09-14T07:56:02.8597124Z Committing restore...\r\n...\r\n```\r\n\r\nFull log file: [nuget_restore.txt](https://github.com/NuGet/Home/files/5218067/nuget_restore.txt)\r\n\r\nWe use this `NuGet.config` file:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n</configuration>\r\n```\r\n\r\n### Sample Project\r\n\r\nUnfortunately we don't have sample project, but this is easily reproducible when configuring Azure Pipelines with caching and nuget package restore for C# projects.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"üôå Community contributor appreciation üôå\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope‚Ä¶ https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq üëç https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-09-15T05:30:38.6809747Z","RunDurationInMilliseconds":1730}