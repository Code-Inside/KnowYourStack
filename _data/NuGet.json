{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41268702441","Type":"PullRequestEvent","CreatedAt":"2024-08-23T01:40:55","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10154","RelatedDescription":"Opened pull request \"Add new constants for Storage MSI configuration\" (#10154) at NuGet/NuGetGallery","RelatedBody":"Adds 2 new constants for Storage MSI configuration:\r\n\r\n`Storage_UseManagedIdentity` and `Storage_ManagedIdentityClientId`\r\n\r\nIn response to https://github.com/NuGet/NuGetGallery/pull/10153#discussion_r1728101855"},{"Id":"41265787783","Type":"PullRequestEvent","CreatedAt":"2024-08-22T22:29:22","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10153","RelatedDescription":"Opened pull request \"Job base classes MSI support\" (#10153) at NuGet/NuGetGallery","RelatedBody":"This is @agr's latest work on the job base types supporting MSIs for storage account access. Tested via other changes as discussed offline."},{"Id":"41265527705","Type":"PullRequestEvent","CreatedAt":"2024-08-22T22:15:22","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10150","RelatedDescription":"Closed pull request \"Job base classes MSI support\" (#10150) at NuGet/NuGetGallery","RelatedBody":"This is @agr's latest work on the job base types supporting MSIs for storage account access. Tested via other changes as discussed offline."},{"Id":"41264876942","Type":"PullRequestEvent","CreatedAt":"2024-08-22T21:41:23","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10152","RelatedDescription":"Merged pull request \"Fix file exist logic in init.ps1 file\" (#10152) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Engineering/issues/5593\r\nAfter pointing the NuGetGallery instead of ServerCommon in internal repo, now we see this error on local build.\r\nPlease note you'll notice this error only during 1st build after cloning the repo.\r\n\r\nIn the original command, $File is an object of type FileInfo (or PSObject if not directly typed). When you pass the entire $File object to Join-Path, it may not behave as expected because Join-Path expects a string (or strings) that represent the components of a path. Passing a FileInfo object directly might cause unexpected results, especially since Join-Path isn't designed to handle objects but rather strings.\r\nIn the modified command, $File.Name is a string representing the name of the file, such as \"example.txt\". This is the correct component to pass to Join-Path when you want to create a full path to the destination file, combining the directory path with the file name.\r\n\r\nBefore this change in internal repo:\r\n![image](https://github.com/user-attachments/assets/adc5f001-fbdd-4d32-967e-c8f56abf0e72)\r\n\r\nAfter this change in internal repo:\r\n![image](https://github.com/user-attachments/assets/a57a6530-2392-4469-bed9-6cce3c6375f8)\r\n"},{"Id":"41262288515","Type":"PullRequestEvent","CreatedAt":"2024-08-22T19:58:01","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10149","RelatedDescription":"Closed pull request \"Fix sign for internal repo\" (#10149) at NuGet/NuGetGallery","RelatedBody":"Partially addresses https://github.com/NuGet/Engineering/issues/5593\r\nSo far both this repo and other internal repo both compile without sign.proj error.\r\nI have another draft PR for internal repo which can merged after merging this."},{"Id":"41260906050","Type":"PullRequestEvent","CreatedAt":"2024-08-22T19:03:10","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10152","RelatedDescription":"Opened pull request \"Dev eryondon movefiles init.ps1\" (#10152) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Engineering/issues/5593\r\nAfter pointing the NuGetGallery instead of ServerCommon in internal repo, now we see this error on local build.\r\nPlease note you'll notice this error only during 1st build.\r\n\r\nBefore this change in internal repo:\r\n![image](https://github.com/user-attachments/assets/4416c024-36c6-4e14-b351-c224b336ec1b)\r\n\r\n\r\nAfter this change in internal repo:\r\n![image](https://github.com/user-attachments/assets/a57a6530-2392-4469-bed9-6cce3c6375f8)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41269468967","Type":"IssuesEvent","CreatedAt":"2024-08-23T02:27:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13732","RelatedDescription":"Opened issue \"Package extraction on Linux when nupkg central directory uses back slashes \" (#13732) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nall\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIf a package author creates a package on Windows, but does not use NuGet's official tooling to create the package (for example, say they have a PowerShell script that extracts the package, makes a modification, then zips it up again), the zip file's central directory can use `\\` as path separators, rather than `/`.\r\n\r\nOn Linux (and maybe Mac), `\\` is not a path separator, and is a valid character in directory and file names. When I, as a package consumer, reference this package, NuGet will create a file named `path\\to\\file.ext` in the package directory, rather than a subdirectory named `{package directory}/path/to` and a file `file.ext`.  Therefore, when NuGet tries to do asset selection, it won't find any files named `lib/{tfm}/*.dll` and the package doesn't work.\r\n\r\nAs a package consumer on Linux, there's nothing I can do to fix this. I need the package author and nuget server to provide a different package version.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-23T03:30:19.5153488Z","RunDurationInMilliseconds":850}