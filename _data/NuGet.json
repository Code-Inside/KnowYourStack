{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13262828503","Type":"PullRequestEvent","CreatedAt":"2020-08-20T22:43:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8169","RelatedDescription":"Opened pull request \"Manage edit documentation \" (#8169) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nDocumentation UI change  in manage package page:\r\n\r\n* Hide the edit documentation session if the package has embedded readme file \r\n![docudisable](https://user-images.githubusercontent.com/64443925/90832849-92748580-e2fb-11ea-941c-dc435cdb9d52.PNG)\r\n\r\n* Show the edit documentation session if package without embedeed readme file \r\n\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/3307"},{"Id":"13262664627","Type":"PullRequestEvent","CreatedAt":"2020-08-20T22:18:01","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8168","RelatedDescription":"Opened pull request \"Move to Knockout 3.5.1 and fix admin JS errors\" (#8168) at NuGet/NuGetGallery","RelatedBody":"We have unused Knockout NuGet dependencies. We do not pull in Knockout in this way. They are just files checked in to source control.\r\n\r\nThe admin errors are because `error` is no longer the syntax for jQuery AJAX errors. It is `fail`. This was likely from the jQuery update we did a while back but went undetected.\r\n\r\nAddress https://github.com/NuGet/Engineering/issues/3311"},{"Id":"13262042424","Type":"IssuesEvent","CreatedAt":"2020-08-20T21:00:02","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8085","RelatedDescription":"Closed issue \"[Advanced search] Update search KPIs\" (#8085) at NuGet/NuGetGallery","RelatedBody":"# Work\r\n\r\n* [x] Update OneNote. [LINK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FEvaluating%20advanced%20search%7CABC8D401-9DA2-4CEA-B1AC-55E46C346CAC%2F%29onenote:https://microsoft.sharepoint.com/teams/NuGet/Team/NugetServer/NugetServerTeamNote/Operations.one#Evaluating%20advanced%20search&section-id={C674B49C-4CB7-4793-8890-A1E46E33FEB9}&page-id={ABC8D401-9DA2-4CEA-B1AC-55E46C346CAC}&end)\r\n* [x] Review updated KPIs\r\n* [X] Update Application Insights saved queries\r\n    * [ ] ~~DEV~~\r\n    * [ ] ~~INT~~\r\n    * [x] PROD\r\n\r\n# Updated search KPIs\r\n\r\nFor the section below there are three categories of KPIs:\r\n\r\n* The \"Original KPIs\" are the current Shared Queries in the **nuget-prod-v2gallery** Application Insights account that will replaced.\r\n* The \"Updated KPIs\" will replace the existing Shared Queries in the **nuget-prod-v2gallery**  Application Insights account.\r\n* The \"Additional advanced search KPIs\" are ad-hoc queries for further analysis. These will not be saved to App Insights account, but they are listed in the [\"Evaluationg advanced search\" Operations OneNote](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FEvaluating%20advanced%20search%7CABC8D401-9DA2-4CEA-B1AC-55E46C346CAC%2F%29onenote:https://microsoft.sharepoint.com/teams/NuGet/Team/NugetServer/NugetServerTeamNote/Operations.one#Evaluating%20advanced%20search&section-id={C674B49C-4CB7-4793-8890-A1E46E33FEB9}&page-id={ABC8D401-9DA2-4CEA-B1AC-55E46C346CAC}&end).\r\n\r\n## Sessions that use advanced search\r\n\r\n<details>\r\n<summary>Additional advanced search KPIs...</summary>\r\n\r\nThis is an ad-hoc query used to analyze usage\r\n\r\n```\r\n// Usage of regular vs advanced search in past 7 days\r\ncustomMetrics \r\n| where timestamp > ago(7d)\r\n| where name == \"BrowserSearchPage\" \r\n| extend hasPackageType = isnotempty(customDimensions.PackageType) \r\n| extend hasSortBy = (isnotempty(customDimensions.SortBy) and customDimensions.SortBy !~ \"relevance\") \r\n| extend isAdvancedSearch = (hasPackageType or hasSortBy) \r\n| summarize\r\n    timestamp = min(timestamp),\r\n    Kind = iff(countif(isAdvancedSearch) > 0, \"Advanced search\", \"Regular search\")\r\n    by session_Id\r\n| summarize count() by bin(timestamp, 1d), Kind\r\n| render columnchart kind=stacked\r\n```\r\n</details>\r\n\r\n## Avg. click index on first page\r\n\r\n<details>\r\n<summary>Original KPI...</summary>\r\n\r\n```\r\n// Avg. click index on first page\r\nlet minTimestamp = todatetime('2019-11-14T21:00:00Z');\r\nlet maxTimestamp = todatetime('2019-11-30T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| where clickIndex <= 19\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| summarize avg(clickIndex) by isPreviewSearch\r\n| order by isPreviewSearch\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>Updated KPI...</summary>\r\n\r\n```\r\n// Avg. click index on first page (EXCLUDES advanced search)\r\nlet minTimestamp = todatetime('2019-11-14T21:00:00Z');\r\nlet maxTimestamp = todatetime('2019-11-30T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| where clickIndex <= 19\r\n| extend hasPackageType = isnotempty(customDimensions.PackageType)\r\n| extend hasSortBy = (isnotempty(customDimensions.SortBy) and customDimensions.SortBy !~ \"relevance\")\r\n| extend isAdvancedSearch = (hasPackageType or hasSortBy)\r\n| where not(isAdvancedSearch)\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| summarize avg(clickIndex) by isPreviewSearch\r\n| order by isPreviewSearch\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>Additional advanced search KPIs...</summary>\r\n\r\n```\r\n// Avg. click index on first page (INCLUDES advanced search)\r\nlet minTimestamp = todatetime('2019-11-14T21:00:00Z');\r\nlet maxTimestamp = todatetime('2019-11-30T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| where clickIndex <= 19\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| summarize avg(clickIndex) by isPreviewSearch\r\n| order by isPreviewSearch\r\n\r\n// Avg. click index on first page (SEPARATES advanced search)\r\nlet minTimestamp = todatetime('2020-08-01T00:00:00Z');\r\nlet maxTimestamp = todatetime('2020-08-17T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| where clickIndex <= 19\r\n| extend hasPackageType = isnotempty(customDimensions.PackageType)\r\n| extend hasSortBy = (isnotempty(customDimensions.SortBy) and customDimensions.SortBy !~ \"relevance\")\r\n| extend isAdvancedSearch = (hasPackageType or hasSortBy)\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| summarize avg(clickIndex) by isPreviewSearch, isAdvancedSearch\r\n| order by isPreviewSearch, isAdvancedSearch\r\n```\r\n</details>\r\n\r\n## Clicks on first page %\r\n\r\n<details>\r\n<summary>Original KPI...</summary>\r\n\r\n```\r\n// Clicks on first page %\r\nlet minTimestamp = todatetime('2019-11-14T21:00:00Z');\r\nlet maxTimestamp = todatetime('2019-11-30T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| summarize 100.0 * countif(clickIndex <= 19) / count() by isPreviewSearch\r\n| order by isPreviewSearch \r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>Updated  KPI...</summary>\r\n\r\n```\r\n// Clicks on first page % (EXCLUDES advanced search)\r\nlet minTimestamp = todatetime('2019-11-14T21:00:00Z');\r\nlet maxTimestamp = todatetime('2019-11-30T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| extend hasPackageType = isnotempty(customDimensions.PackageType)\r\n| extend hasSortBy = (isnotempty(customDimensions.SortBy) and customDimensions.SortBy !~ \"relevance\")\r\n| extend isAdvancedSearch = (hasPackageType or hasSortBy)\r\n| where not(isAdvancedSearch)\r\n| summarize 100.0 * countif(clickIndex <= 19) / count() by isPreviewSearch\r\n| order by isPreviewSearch \r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>Additional advanced search KPIs...</summary>\r\n\r\n```\r\n// Clicks on first page % (SEPARATES advanced search)\r\nlet minTimestamp = todatetime('2020-08-01T00:00:00Z');\r\nlet maxTimestamp = todatetime('2020-08-17T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| extend hasPackageType = isnotempty(customDimensions.PackageType)\r\n| extend hasSortBy = (isnotempty(customDimensions.SortBy) and customDimensions.SortBy !~ \"relevance\")\r\n| extend isAdvancedSearch = (hasPackageType or hasSortBy)\r\n| summarize 100.0 * countif(clickIndex <= 19) / count() by isPreviewSearch, isAdvancedSearch\r\n| order by isPreviewSearch \r\n\r\n// Clicks on first page % (INCLUDES advanced search)\r\nlet minTimestamp = todatetime('2020-08-01T00:00:00Z');\r\nlet maxTimestamp = todatetime('2020-08-17T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp \r\n| where timestamp < maxTimestamp\r\n| where name == \"BrowserSearchSelection\"\r\n| extend clickIndex = toint(customDimensions.ClickIndex)\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| summarize 100.0 * countif(clickIndex <= 19) / count() by isPreviewSearch\r\n| order by isPreviewSearch\r\n```\r\n</details>\r\n\r\n## Bounce %\r\n\r\nThis KPI is unchanged.\r\n\r\n<details>\r\n<summary>Original KPI...</summary>\r\n\r\n```\r\n// Bounce %\r\nlet minTimestamp = todatetime('2019-11-14T21:00:00Z');\r\nlet maxTimestamp = todatetime('2019-11-30T00:00:00Z');\r\ncustomMetrics\r\n| where timestamp > minTimestamp\r\n| where timestamp < maxTimestamp\r\n| where session_Id != \"\"\r\n| where name == \"BrowserSearchPage\"\r\n| extend searchTerm = tostring(customDimensions.SearchTerm)\r\n| where searchTerm != \"\"\r\n| extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n| project session_Id, searchTerm, isPreviewSearch\r\n| join kind=leftanti (\r\n    customMetrics\r\n    | where timestamp > minTimestamp\r\n| where timestamp < maxTimestamp\r\n    | where session_Id != \"\"\r\n    | where name == \"BrowserSearchSelection\"\r\n    | extend searchTerm = tostring(customDimensions.SearchTerm)\r\n| where searchTerm != \"\"\r\n    | project session_Id, searchTerm\r\n) on $left.session_Id == $right.session_Id and $left.searchTerm == $right.searchTerm\r\n| summarize bounceCount = count() by isPreviewSearch\r\n| join (\r\n    customMetrics\r\n    | where timestamp > minTimestamp\r\n    | where timestamp < maxTimestamp\r\n    | where session_Id != \"\"\r\n    | where name == \"BrowserSearchPage\"\r\n    | extend isPreviewSearch = customDimensions.IsPreviewSearch == \"True\"\r\n    | summarize totalCount = count() by isPreviewSearch\r\n) on $left.isPreviewSearch == $right.isPreviewSearch\r\n| project isPreviewSearch,\r\nbounceCount,\r\ntotalCount,\r\nbouncePercentage = 100.0 * bounceCount / totalCount\r\n| order by isPreviewSearch\r\n```\r\n</details>"},{"Id":"13257804156","Type":"PullRequestEvent","CreatedAt":"2020-08-20T14:34:05","Actor":"baronfel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8167","RelatedDescription":"Opened pull request \"Add an entry for (soon to be stable) scripting usages\" (#8167) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* F# 5.0 (which will release with .Net 5) and the dotnet/interactive project allow for using a variation of the `#r` syntax for including DLLs explicitly to also include packages.  This syntax is of the form:\r\n\r\n```\r\n#r \"nuget: <package name>[, <list of options>*]\"\r\n```\r\n\r\nwhere `<list of options>` is primarily used for specifying the `Version` of the package (which defaults to '*').\r\n\r\nIn the interests of making it easier for users to use nuget package in scripting/interactive/notebook scenarios, I think there's value in showing that syntax on Nuget.org."},{"Id":"13254408558","Type":"IssuesEvent","CreatedAt":"2020-08-20T09:12:55","Actor":"khellang","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4624","RelatedDescription":"Closed issue \"URL with non-existing version number returns latest package version\" (#4624) at NuGet/NuGetGallery","RelatedBody":"Try going to https://www.nuget.org/packages/Newtonsoft.Json/1337.42.42.0 (or ending with any other valid version number).\r\n\r\nIt returns back a 200 response with the information of the latest package, as if you've gone to https://www.nuget.org/packages/Newtonsoft.Json.\r\n\r\nI'd expect this to return a 404 😄 "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13264606733","Type":"IssuesEvent","CreatedAt":"2020-08-21T04:12:37","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9650","RelatedDescription":"Closed issue \"net5.0 VS APIs\" (#9650) at NuGet/Home","RelatedBody":"Because of the addition of a platform component to .NET tfms since 5.0 (https://github.com/NuGet/NuGet.Client/pull/3339), any APIs relying on `FrameworkName` have become mostly incompatible with net5.0.\r\n\r\nIn particular, the VsFrameworkCompatibility APIs rely on these objects. We need to come up with guidance for customers who can't use the extensibility framework APIs to work around this.\r\n\r\nWe also need to figure out the impact of this change on folks who might be using this."},{"Id":"13263584022","Type":"IssuesEvent","CreatedAt":"2020-08-21T01:00:36","Actor":"dsplaisted","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9927","RelatedDescription":"Opened issue \"MSBuild project evaluation fails when TargetFramework property includes semicolon\" (#9927) at NuGet/Home","RelatedBody":"The .NET SDK is now using `NuGetFramework` methods to parse the `TargetFramework` property, via MSBuild intrinsic functions that were added for this:\r\n\r\nhttps://github.com/dotnet/sdk/blob/5b50ac24ecd5af91736cf81360eab5813c9e93b9/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.TargetFrameworkInference.targets#L54-L55\r\n\r\nHowever, this is causing MSBuild evaluation to fail with an assertion when the `TargetFramework` property has a semicolon in it (for example `netcoreapp2.0;net461`).  What is supposed to happen is for the SDK to generate an error during the build:\r\n\r\n> error NETSDK1046: The TargetFramework value 'netcoreapp2.0;net461' is not valid. To multi-target, use the 'TargetFrameworks' property instead.\r\n\r\nHowever, instead evaluation fails with the following:\r\n\r\n> ---- DEBUG ASSERTION FAILED ----\r\n---- Assert Short Message ----\r\ninvalid folder name, this appears to contain multiple frameworks\r\n---- Assert Long Message ----\r\n>\r\n>   at NuGet.Frameworks.NuGetFramework.Parse(String folderName, IFrameworkNameProvider mappings)\r\n   at NuGet.Frameworks.NuGetFramework.Parse(String folderName)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at Microsoft.Build.Evaluation.NuGetFrameworkWrapper.Parse(String tfm) in C:\\git\\msbuild\\src\\Build\\Utilities\\NuGetFrameworkWrapper.cs:line 55\r\n   at Microsoft.Build.Evaluation.NuGetFrameworkWrapper.GetTargetFrameworkIdentifier(String tfm) in C:\\git\\msbuild\\src\\Build\\Utilities\\NuGetFrameworkWrapper.cs:line 60\r\n   at Microsoft.Build.Evaluation.IntrinsicFunctions.GetTargetFrameworkIdentifier(String tfm) in C:\\git\\msbuild\\src\\Build\\Evaluation\\IntrinsicFunctions.cs:line 486\r\n\r\nI think to fix this the parse methods should return \"Unsupported\" instead of asserting when there is a semicolon in the value passed in.\r\n\r\nI ran into this when testing private NuGet packages based on this PR: https://github.com/NuGet/NuGet.Client/pull/3578.  As our tests didn't fail previously, this may have been a regression in that PR.\r\n\r\n@nkolev92 "},{"Id":"13252525605","Type":"IssuesEvent","CreatedAt":"2020-08-20T05:35:57","Actor":"ericanastas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9926","RelatedDescription":"Opened issue \"PackageManager.InstallPackageAsync() throws NullReferenceException\" (#9926) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet product used: Nuget Libraries\r\nNuGet version (5.7.0:\r\nVS version: VS 2017\r\nOS version: Win 10 (1909)\r\n\r\nI'm working on a plug-in management system built on top of Nuget similar to Chocolatey, PowerShell Gallery etc. I wanted to use the newer V3 libraries but the amount of abstraction and the lack of documentation is becoming a serious challenge for me.\r\n\r\nThe responses to issue #6161 have been helpful, as well as the blog posts mentioned there. However, I'm still failing to get simple prototype working that will download and extract a package.\r\n\r\nHere's my test code \r\nhttps://github.com/ericanastas/nuget-packagemanagment-test\r\n\r\n```C#\r\n       private static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                var curDir = System.IO.Directory.GetCurrentDirectory();\r\n                ISettings settings = Settings.LoadSpecificSettings(curDir, Settings.DefaultSettingsFileName);\r\n\r\n                List<Lazy<INuGetResourceProvider>> resourceProviders = new List<Lazy<INuGetResourceProvider>>();\r\n                resourceProviders.AddRange(NuGet.Protocol.Core.Types.Repository.Provider.GetCoreV3());  // Add v3 API support\r\n                IPackageSourceProvider packageSourceProvider = new PackageSourceProvider(settings);\r\n                SourceRepositoryProvider sourceRepositoryProvider = new SourceRepositoryProvider(packageSourceProvider, resourceProviders);\r\n\r\n                string projectRoot = System.IO.Path.GetFullPath(\"ProjectRoot\");\r\n                if (!System.IO.Directory.Exists(projectRoot)) System.IO.Directory.CreateDirectory(projectRoot);\r\n\r\n                FolderNuGetProject nuGetProject = new FolderNuGetProject(projectRoot);\r\n\r\n                string packagesFolderPath = System.IO.Path.GetFullPath(\"Packages\");\r\n                if (!System.IO.Directory.Exists(packagesFolderPath)) System.IO.Directory.CreateDirectory(packagesFolderPath);\r\n\r\n                NuGetPackageManager packageManager = new NuGetPackageManager(sourceRepositoryProvider, settings, packagesFolderPath)\r\n                {\r\n                    PackagesFolderNuGetProject = nuGetProject\r\n                };\r\n\r\n                bool allowPrereleaseVersions = true;\r\n                bool allowUnlisted = true;\r\n                DependencyBehavior dependencyBehavior = DependencyBehavior.Lowest;\r\n\r\n                ResolutionContext resolutionContext = new ResolutionContext(\r\n                         dependencyBehavior, allowPrereleaseVersions, allowUnlisted, VersionConstraints.None);\r\n\r\n                INuGetProjectContext projectContext = new ConsoleProjectContext(NullLogger.Instance);\r\n\r\n                IEnumerable<SourceRepository> primarySourceRepositories = sourceRepositoryProvider.GetRepositories();\r\n\r\n                //packageIdentity\r\n                string packageId = \"Newtonsoft.Json\";\r\n                string packageVersion = \"12.0.3\";\r\n                PackageIdentity packageIdentity = new PackageIdentity(packageId, new NuGet.Versioning.NuGetVersion(packageVersion));\r\n\r\n                var installPackageAsyncTask = packageManager.InstallPackageAsync(packageManager.PackagesFolderNuGetProject,\r\n                    packageIdentity, resolutionContext, projectContext,\r\n                    primarySourceRepositories, Array.Empty<SourceRepository>(), CancellationToken.None);\r\n\r\n                installPackageAsyncTask.GetAwaiter().GetResult();\r\n            }\r\n            catch (Exception exp)\r\n            {\r\n                using (var sw = new System.IO.StreamWriter(\"error.txt\"))\r\n                {\r\n                    sw.Write(exp.ToString());\r\n                }\r\n\r\n                Console.WriteLine(exp.ToString());\r\n                throw;\r\n            }\r\n        }\r\n```\r\n\r\nAnd here's the `NullReferenceException` that is thrown at the end when I try to call `InstallPackageAsync()`\r\n\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NuGet.ProjectManagement.FolderNuGetProject.<>c__DisplayClass13_0.<<InstallPackageAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__3`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__3`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteInstallAsync>d__85.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__76.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__76.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__76.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<InstallPackageAsync>d__48.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<InstallPackageAsync>d__47.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NugetTest.Program.Main(String[] args) in C:\\Git\\5ec64809061464dc19a1d4e39961c565\\NugetTest\\Program.cs:line 66\r\n```\r\n\r\nWhat am I missing here?\r\n\r\n\r\n\r\n"},{"Id":"13248048585","Type":"IssuesEvent","CreatedAt":"2020-08-19T18:17:17","Actor":"joeloff","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9925","RelatedDescription":"Opened issue \"Owner Tag not shipped in nuspec file using dotnet pack\" (#9925) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#12538**\r\n- Please respond to @kmuthukumar23.\r\n\r\n---\r\n\r\n_From @kmuthukumar23 on Friday, July 17, 2020 4:26:19 AM_\r\n\r\n### Describe the bug\r\n\r\nRun the '**dotnet pack pathTo csproj**' in CLI, the owner tag is missing in nuspec file with in the generated nuget. I have faced this issue recent days. Before 10days it was working fine. last three days i am facing this issue.\r\n\r\n### To Reproduce\r\n\r\nI am using this below tags in my project file.\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n      <PropertyGroup>\r\n\r\n      <Title>projectTitle</Title>\r\n\r\n      <Company>MyName</Company>\r\n\r\n     <Authors>MyName</Authors>\r\n\r\n     </PropertyGroup>\r\n\r\n     </Project>\r\n\r\nExpected Nupec contents\r\n\r\n<metadata>\r\n\r\n    <title>projectTitle</title>\r\n\r\n    <authors>MyName</authors>\r\n\r\n     <owners>MyName</owners>\r\n\r\n</metadata>\r\n\r\nBut it generated with out '<owners></owners>' tag\r\n\r\n<metadata>\r\n\r\n    <title>projectTitle</title>\r\n\r\n    <authors>MyName</authors>\r\n\r\n</metadata>\r\n\r\nIt occurs recent days only.\r\n\r\n### Further technical details\r\n- ASP.NET Core version - 3.1\r\n\r\n- Include the output of `dotnet --info`\r\n\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.6.20318.15\r\n Commit:    4356580024\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.6.20318.15\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.6.20305.6\r\n  Commit:  4ba9ecaabd\r\n\r\n.NET SDKs installed:\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.6.20318.15 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.6.20312.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.6.20305.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.6.20308.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n- The IDE (VS ) you're running on, and it's version\r\n\r\nVersion 16.6.2\r\n"},{"Id":"13241953291","Type":"IssuesEvent","CreatedAt":"2020-08-19T09:00:37","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9924","RelatedDescription":"Opened issue \"[Test Failure] No-op restore doesn’t occur at the first time in MSBuild restore command for the non-.Net SDK-style projects\" (#9924) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6779\r\nVS Version: Master\\30418.48\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps\r\n1. Create a non-.Net SDK-style project [e.g. C# Console App (.NET Framework)] in VS.\r\n2. Open the PM UI of the project and install several packages with “PackageReference” format.\r\n3. Save the solution and close VS.\r\n4. Go to the VS developer command prompt, cd to the path of the project and do “msbuild /t:restore /v:d”.\r\n## Expected Result\r\nNo-op restore occur for the first time.\r\n## Actual Result\r\nNo-op restore doesn’t occur at the first time. It start to occur from the second time as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/90614395-321f0e80-e23d-11ea-95be-bb4fc721f963.png)\r\n## Notes\r\n1. It doesn’t repro in VS build restore for the same project (as below screenshot).\r\n![image](https://user-images.githubusercontent.com/20632625/90614442-3f3bfd80-e23d-11ea-9f51-6c792da9d94b.png)\r\n2. It started to repro from Dev\\5.8.0.6761 (didn’t repro on Dev\\5.8.0.6760).\r\n"},{"Id":"13239042170","Type":"IssuesEvent","CreatedAt":"2020-08-19T02:14:29","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9826","RelatedDescription":"Closed issue \"Display the resolved version in the PMUI.\" (#9826) at NuGet/Home","RelatedBody":"In the current behavior when using floating version we are not displaying the correct installed version and we are getting this version from the PackageReference instead of the assets file."},{"Id":"13238786637","Type":"IssuesEvent","CreatedAt":"2020-08-19T01:26:56","Actor":"sunny868","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9922","RelatedDescription":"Closed issue \"error : The local source '/home/gysun/myNuGetServer' doesn't exist.\" (#9922) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet Version: 5.5.0.6382\r\n.NET Core SDK (3.0.101)\r\nOS version (ubuntu-16.04):\r\n\r\n## Detailed repro steps so we can see the same problem\r\n1. nuget sources Add -Name \"MyServer\" -Source /home/gysun/myNugetServer\r\n2. nuget add new_package.1.0.0.nupkg -source /home/gysun/myNugetServer\r\n3. git clone https://github.com/dotnet/corefx.git ;cd corefx\r\n4. vim NuGet.config and add \r\n           <add key=\"MyServer\" value=\"/home/gysun/myNuGetServer\" /> \r\n5. then run \r\n          ./build.sh --configuration Debug --arch arm64 /p:DisableCrossgen=true /p:PortableBuild=true /p:SkipTests=true\r\n    then error is :\r\n      /corefx/.dotnet/sdk/3.0.100/NuGet.targets(123,5): error : The local source '/home/gysun/myNuGetServer' doesn't exist. [/corefx/external/runtime/runtime.depproj]\r\n\r\n\r\nso , I don`t know to add a local souce to NuGet.config. I want get a help ,thank you very much!\r\n\r\n"},{"Id":"13238173292","Type":"IssuesEvent","CreatedAt":"2020-08-18T23:32:42","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9923","RelatedDescription":"Opened issue \"Automating our GitHub processes\" (#9923) at NuGet/Home","RelatedBody":"This is a tracking epic for various tasks we'll be doing to automate our development process on GitHub, mostly through writing bots and scripts."},{"Id":"13237250518","Type":"IssuesEvent","CreatedAt":"2020-08-18T21:17:33","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9907","RelatedDescription":"Closed issue \"PackageManagerUI should abstract use of PackageReference for VS.Oe scenarios\" (#9907) at NuGet/Home","RelatedBody":"PM UI needs to abstract the use of PackageReference to better support serializability for online scenarios."},{"Id":"13237056685","Type":"IssuesEvent","CreatedAt":"2020-08-18T20:55:17","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9911","RelatedDescription":"Closed issue \"NuGet Target framework information breaking change coordination\" (#9911) at NuGet/Home","RelatedBody":"In 16.8 P2, NuGet made a breaking change where we started reading the TargetFramework* and TargetPlatform* properties from the inner build.\r\nThis means that the framework detection across NuGet & SDK needed to change. \r\n\r\nIn additional .NET 5 SDK, P7 and earlier, misreported the TargetPlatformMoniker for net5.0 projects as `Windows,Version=7.0`. \r\n\r\nOther notable challenges are that in 16.8 P2, NuGet used TargetPlatformIdentifier and TargetPLatformVersion, but in 16.8 P3 NuGet will use TargetPlatformMoniker. https://github.com/NuGet/NuGet.Client/pull/3578. \r\n\r\nSo this is meant to coordinate the insertions necessary to get 16.8 P2 and 16.8 P3 in a happy state. \r\n\r\n- [x] NuGet -> VS (16.8 P2) [PR](https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/267136) (done)\r\n- [x] NuGet -> SDK (.NET 5 P8 & .NET 5 RC1)\r\n  - @sfoslund in charge https://github.com/NuGet/Client.Engineering/issues/462, https://github.com/dotnet/sdk/pull/12915 and https://github.com/dotnet/sdk/pull/12897 (the main tracking issue)\r\n  - Approved by tactics!\r\n  - Merged into preview.8 (not master, yet?)\r\n- [x] NuGet -> project-system (16.8 P2) https://github.com/dotnet/project-system/pull/6495 - This allows NuGet in VS 16.8 P2 and 16.8 P3 to work continuously.\r\n- [x] Further insertion blocked (Charles and Peter)\r\n  - https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/267767?_a=overview\r\n  - https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/268099?_a=files\r\n- [x] Insertions pending SDK changes\r\n  - https://github.com/dotnet/sdk/pull/12944\r\n  - https://github.com/dotnet/sdk/pull/12943\r\n  - Estimated to land the night of 2020/08/17 (Monday), possibly early Tuesday\r\n  - Once these are merged, insertion can be attempted again (and those will take a while to do their runs)\r\n  - Matt will make sure drop gets pulled\r\n- [x] SDK -> VS (.NET 5 P8 with NuGet to VS 16.8 P2)\r\n  - @wli3 will be taking point on this\r\n  - He will target https://dev.azure.com/devdiv/DevDiv/_git/VS?version=GBdev%2Fvslsnap%2Finsertions%2Fmaster.20200814130317 instead of 16.8 or master (because project system changes need SDK changes to pass DDRITS and vice versa)\r\n  - SDK has flowed into the installer branch: https://dnceng.visualstudio.com/internal/_build/results?buildId=772035&view=results\r\n- [x] project-system -> VS (16.8 P2) (See email thread for status, JJ and microbuild are on this. Tracking issue for insertion: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/268099 )\r\n  - master got locked, so PR 267767 had to be redirected to main\r\n\r\ncc @zkat "},{"Id":"13236724469","Type":"IssuesEvent","CreatedAt":"2020-08-18T20:19:20","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9905","RelatedDescription":"Closed issue \"feature-oe.pmui - reopening pm ui for a project in codespaces - then closing is broken\" (#9905) at NuGet/Home","RelatedBody":"reported by @sbanni \n\nopen pmui\nclose it\nopen pmui for same project\nclose it --- drat...doesn't work."},{"Id":"13236721941","Type":"IssuesEvent","CreatedAt":"2020-08-18T20:19:04","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9570","RelatedDescription":"Closed issue \"Move ToolWindow creation to AsyncPackage APIs\" (#9570) at NuGet/Home","RelatedBody":"Calls to uiShell.CreateToolWindow (in Nuget Codespaces) should be replaced with their appropriate counterparts in AsyncPackage, documented here: [https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualstudio.shell.asyncpackage?view=visualstudiosdk-2019](https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualstudio.shell.asyncpackage?view=visualstudiosdk-2019)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2020-08-21T05:30:46.1722992Z","RunDurationInMilliseconds":2034}