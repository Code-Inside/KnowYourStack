{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"33839544807","Type":"IssuesEvent","CreatedAt":"2023-12-03T18:31:55","Actor":"hbenvenutti","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9745","RelatedDescription":"Opened issue \"[Feature]: Add Codeium domain to trusted list.\" (#9745) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nAdd codeium domain to trusted domains so this badge works in nuget.org.\r\n\r\n[![built with Codeium](https://codeium.com/badges/main)](https://codeium.com/badges/main)\n\n### The Elevator Pitch\n\nAdd codeium domain to trusted domains so this badge works in nuget.org.\r\n\r\n[![built with Codeium](https://codeium.com/badges/main)](https://codeium.com/badges/main)\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"33886340731","Type":"IssuesEvent","CreatedAt":"2023-12-04T23:51:26","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13068","RelatedDescription":"Closed issue \"Vulnerability indicator shows up on dependent project if parent project has transitive vulnerabilities\" (#13068) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from NuGet/Client.Engineering#2600**\r\n- Please respond to @jebriede.\r\n\r\n---\r\n\r\n_From @jebriede on Wednesday, November 29, 2023 9:07:58 PM_\r\n\r\n### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nVersion 17.9.0 Preview 2.0 [34328.292.main]\r\n\r\n### Worked before?\r\n\r\nN/A, new feature\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a solution with 2 projects, ProjectA and ProjectB\r\n2. In ProjectA, install a top-level package that depends on one or more transitive package that is vulnerable. For example, Microsoft.AspNet.WebApi.Client version 5.2.9 which depends on Newtonsoft.Json 10.0.1 which is vulnerable\r\n3. Add a project reference from ProjectB -> ProjectA. That is, ProjectB depends on ProjectA.\r\n4. Open the NuGet Package Manager for Project B.\r\n\r\n**Expected:**\r\nThe Installed Tab should not have a warning indicator by it in ProjectB, since it has no packages installed.\r\n\r\n**Actual**\r\nThe Installed Tab has a warning indicator that 3 vulnerable packages are installed (presumably because the dependent project, ProjectA, has 3 transitive vulnerable packages), even though ProjectB has no installed packages:\r\n\r\n![image](https://github.com/NuGet/Client.Engineering/assets/10777837/2d063c41-e683-4f8b-9982-45f01b064ecd)\r\n\r\nNote: This only seems to happen when there's a project dependency between ProjectB which depends on ProjectA. If there are no project dependencies, the issue does not repro. Also, this only repros if ProjectA has transitive package vulnerabilities. If it has top-level package vulnerabilities only, the issue does not repro.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"33886280765","Type":"IssuesEvent","CreatedAt":"2023-12-04T23:48:15","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13068","RelatedDescription":"Opened issue \"Vulnerability indicator shows up on dependent project if parent project has transitive vulnerabilities\" (#13068) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from NuGet/Client.Engineering#2600**\r\n- Please respond to @jebriede.\r\n\r\n---\r\n\r\n_From @jebriede on Wednesday, November 29, 2023 9:07:58 PM_\r\n\r\n### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nVersion 17.9.0 Preview 2.0 [34328.292.main]\r\n\r\n### Worked before?\r\n\r\nN/A, new feature\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a solution with 2 projects, ProjectA and ProjectB\r\n2. In ProjectA, install a top-level package that depends on one or more transitive package that is vulnerable. For example, Microsoft.AspNet.WebApi.Client version 5.2.9 which depends on Newtonsoft.Json 10.0.1 which is vulnerable\r\n3. Add a project reference from ProjectB -> ProjectA. That is, ProjectB depends on ProjectA.\r\n4. Open the NuGet Package Manager for Project B.\r\n\r\n**Expected:**\r\nThe Installed Tab should not have a warning indicator by it in ProjectB, since it has no packages installed.\r\n\r\n**Actual**\r\nThe Installed Tab has a warning indicator that 3 vulnerable packages are installed (presumably because the dependent project, ProjectA, has 3 transitive vulnerable packages), even though ProjectB has no installed packages:\r\n\r\n![image](https://github.com/NuGet/Client.Engineering/assets/10777837/2d063c41-e683-4f8b-9982-45f01b064ecd)\r\n\r\nNote: This only seems to happen when there's a project dependency between ProjectB which depends on ProjectA. If there are no project dependencies, the issue does not repro. Also, this only repros if ProjectA has transitive package vulnerabilities. If it has top-level package vulnerabilities only, the issue does not repro.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"33879273154","Type":"IssuesEvent","CreatedAt":"2023-12-04T18:58:14","Actor":"halcwb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13066","RelatedDescription":"Closed issue \"Setting NUGET_HTTP_CACHE_PATH is not working\" (#13066) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK:  Version:           8.0.100  Commit:            57efcf1350  Workload version:  8.0.100-manifests.71b9f198  Runtime Environment:  OS Name:     Mac OS X  OS Version:  14.1  OS Platform: Darwin  RID:         osx-arm64  Base Path:   /usr/local/share/dotnet/sdk/8.0.100/  .NET workloads installed:  Workload version: 8.0.100-manifests.71b9f198 There are no installed workloads to display.  Host:   Version:      8.0.0   Architecture: arm64   Commit:       5535e31a71  .NET SDKs installed:   6.0.415 [/usr/local/share/dotnet/sdk]   7.0.402 [/usr/local/share/dotnet/sdk]   8.0.100 [/usr/local/share/dotnet/sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]   Microsoft.NETCore.App\r\n\r\n### Worked before?\r\n\r\n?\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nI keep getting the error that the path to the .local/share/Nuget/http-cache etc.. is denied when I want to restore a project. Deleting the folder and setting the read and write for the user account doesn't work. So, I wanted to change the folder location, however, that doesn't work either. \r\n\r\nI have put this as en environmental variable: export NUGET_HTTP_CACHE_PATH=User/user1/.nuget-http-cache\r\nBut stil when running `dotnet restore`, nuget looks at the cache folder in the .local/share/nuget/http-cache.\r\n\r\n### Verbose Logs\r\n\r\nTo make matters more confusing:\r\n\r\n`dotnet restore`\r\n  Determining projects to restore...\r\n/Users/user1/Development/user1/apps/GenPRES/src/Informedica.ZIndex.Lib/Informedica.ZIndex.Lib.fsproj : warning NU1900: Error occurred while getting package vulnerability data: Access to the path '/Users/user1/.local/share/NuGet/http-cache/670c1461c29885f9aa22c281d8b7da90845b38e4$ps:_api.nuget.org_v3_index.json/vuln_index.dat-new' is denied. [/Users/user1/Development/user1/apps/GenPRES/GenPres.sln]\r\n/Users/user1/Development/user1/apps/GenPRES/src/Informedica.GenSolver.Lib/Informedica.GenSolver.Lib.fsproj : warning NU1900: Error occurred while getting package vulnerability data: Access to the path '/Users/iser1/.local/share/NuGet/http-cache/670c1461c29885f9aa22c281d8b7da90845b38e4$ps:_api.nuget.org_v3_index.json/vuln_index.dat-new' is denied. [/Users/user1/Development/user1/apps/GenPRES/GenPres.sln]\r\n  All projects are up-to-date for restore.\r\n\r\nBut when `dotnet nuget locals all --list`\r\n\r\ndotnet nuget locals all --list\r\nhttp-cache: /Users/user1/.nuget-http-cache\r\nglobal-packages: /Users/user1/.nuget/packages/\r\ntemp: /var/folders/j5/xhmmjddj01vbgx6s11kdnwfc0000gn/T/NuGetScratch\r\nplugins-cache: /Users/user1/.local/share/NuGet/plugin-cache"},{"Id":"33878536890","Type":"IssuesEvent","CreatedAt":"2023-12-04T18:31:09","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9300","RelatedDescription":"Closed issue \"Static Graph restore won't warn for invalid projects\" (#9300) at NuGet/Home","RelatedBody":"Have a sln with 2 projects, one restoreable, the other without the NuGet.targets. \r\n\r\nRegular restore will warn https://github.com/NuGet/NuGet.Client/blob/b6ba5908951c172ed7df75e3074a7af409f743d7/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets#L282-L292, while static graph restore quietly skips the project. \r\n\r\ncc @jeffkl \r\n\r\nWe need to understand what we want the experience to be. "},{"Id":"33877869233","Type":"IssuesEvent","CreatedAt":"2023-12-04T18:07:26","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13067","RelatedDescription":"Opened issue \"Getting \"An item with the same key has already been added\" error when restoring.\" (#13067) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n17.8.1\n\n### Worked before?\n\n17.7.6\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nUnable to reproduce. Addressing [Feedback Ticket](https://developercommunity.visualstudio.com/t/Error-reading-git-repository-information/10525656). \n\n### Verbose Logs\n\n_No response_"},{"Id":"33877576997","Type":"IssuesEvent","CreatedAt":"2023-12-04T17:57:04","Actor":"halcwb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13066","RelatedDescription":"Opened issue \"Setting NUGET_HTTP_CACHE_PATH is not working\" (#13066) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK:  Version:           8.0.100  Commit:            57efcf1350  Workload version:  8.0.100-manifests.71b9f198  Runtime Environment:  OS Name:     Mac OS X  OS Version:  14.1  OS Platform: Darwin  RID:         osx-arm64  Base Path:   /usr/local/share/dotnet/sdk/8.0.100/  .NET workloads installed:  Workload version: 8.0.100-manifests.71b9f198 There are no installed workloads to display.  Host:   Version:      8.0.0   Architecture: arm64   Commit:       5535e31a71  .NET SDKs installed:   6.0.415 [/usr/local/share/dotnet/sdk]   7.0.402 [/usr/local/share/dotnet/sdk]   8.0.100 [/usr/local/share/dotnet/sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]   Microsoft.NETCore.App\n\n### Worked before?\n\n?\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI keep getting the error that the path to the .local/share/Nuget/http-cache etc.. is denied when I want to restore a project. Deleting the folder and setting the read and write for the user account doesn't work. So, I wanted to change the folder location, however, that doesn't work either. \r\n\r\nI have put this as en environmental variable: export NUGET_HTTP_CACHE_PATH=User/halcwb/.nuget-http-cache\r\nBut stil when running `dotnet restore`, nuget looks at the cache folder in the .local/share/nuget/http-cache.\n\n### Verbose Logs\n\n_No response_"},{"Id":"33877170485","Type":"IssuesEvent","CreatedAt":"2023-12-04T17:42:46","Actor":"halcwb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13065","RelatedDescription":"Opened issue \"dotnet restore --no-http-cache not working\" (#13065) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK:  Version:           8.0.100  Commit:            57efcf1350  Workload version:  8.0.100-manifests.71b9f198  Runtime Environment:  OS Name:     Mac OS X  OS Version:  14.1  OS Platform: Darwin  RID:         osx-arm64  Base Path:   /usr/local/share/dotnet/sdk/8.0.100/  .NET workloads installed:  Workload version: 8.0.100-manifests.71b9f198 There are no installed workloads to display.  Host:   Version:      8.0.0   Architecture: arm64   Commit:       5535e31a71  .NET SDKs installed:   6.0.415 [/usr/local/share/dotnet/sdk]   7.0.402 [/usr/local/share/dotnet/sdk]   8.0.100 [/usr/local/share/dotnet/sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]   Microsoft.NETCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]   Microsoft.NETCore.App 8.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]  Other architectures found:   None  Environment variables:   Not set  global.json file:   /Users/halcwb/Development/halcwb/apps/GenPRES/global.json  Learn more:   https://aka.ms/dotnet/info  Download .NET:   https://aka.ms/dotnet/download\n\n### Worked before?\n\n?\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI wanted to use this option because I get a path denied  to the http-cache folder when restoring a project on my Macbool Pro M2. So I read: For nuget restore, use the -NoHttpCache option, or for dotnet restore, use the --no-http-cache option. \r\nThat was what I tried, but then I get that this is no longer an option.\n\n### Verbose Logs\n\n_No response_"},{"Id":"33869787100","Type":"IssuesEvent","CreatedAt":"2023-12-04T14:17:33","Actor":"lg2de","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13064","RelatedDescription":"Opened issue \"`FrameworkReducer` does not create same result as `dotnet restore` command line\" (#13064) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuGet.Frameworks 6.8.0\n\n### Worked before?\n\nno\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Create a project with target framework net8.0-windows\r\n2. Add reference to `Steema.TeeChart.NET` in version 4.2023.11.17\r\n3. `dotnet restore`\r\n\r\nThe package `Microsoft.WinForms.Designer.SDK` is restored because it is an [indirect dependency of `Steema.TeeChart.NET` for the target framework `net6.0-windows7.0`](https://www.nuget.org/packages/Steema.TeeChart.NET/4.2023.11.17#dependencies-body-tab).\r\n\r\n4. Create a console app (I've used target framework `net6.0`, but I think this is not relevant.)\r\n5. Add reference to `NuGet.Protocol` in version `6.8.0` (I'm explicitly using `NuGet.Protocol` and implicitly using `NuGet.Frameworks`.)\r\n6. Run the tests below.\r\n\r\nBoth tests should succeed, but one fails.\r\nThe failing test exactly reproduces the exact package definition of the example `Steema.TeeChart.NET` and which is successful in `dotnet restore`.\r\nThe successful tests is slightly different and maybe shows the glitch in the definition of the sample package.\r\n\r\nAnyway:\r\n1. Why `dotnet restore` works differently from using `FrameworkReducer` from `NuGet.Frameworks`?\r\n2. Is it correct that the package specifies \"net6.0-windows7.0\" as dependency target platform?\r\n\r\nFailing test is using \"net6.0-windows7.0\" as dependency target platform:\r\n```cs\r\n[Fact]\r\npublic void GetNearest_UsingWindows7_WindowsSpecificTargetUsed()\r\n{\r\n    var frameworkReducer = new FrameworkReducer();\r\n    var projectTargetFramework = NuGetFramework.Parse(\"net8.0-windows\");\r\n    var frameworks = new List<NuGetFramework>\r\n    {\r\n        NuGetFramework.Parse(\"net6.0\"),\r\n        NuGetFramework.Parse(\"net6.0-windows7.0\"),\r\n        NuGetFramework.Parse(\".NETFramework,Version=v4.0\"),\r\n        NuGetFramework.Parse(\".NETFramework,Version=v4.8\")\r\n    };\r\n    \r\n    var nearest = frameworkReducer.GetNearest(projectTargetFramework, frameworks);\r\n\r\n    nearest!.ToString().Should().Be(\"net6.0-windows7.0\");\r\n}\r\n```\r\n\r\nSuccessful test is using \"net6.0-windows\" without \"7.0\":\r\n```cs\r\n[Fact]\r\npublic void GetNearest_UsingWindows_WindowsSpecificTargetUsed()\r\n{\r\n    var frameworkReducer = new FrameworkReducer();\r\n    var projectTargetFramework = NuGetFramework.Parse(\"net8.0-windows\");\r\n    var frameworks = new List<NuGetFramework>\r\n    {\r\n        NuGetFramework.Parse(\"net6.0\"),\r\n        NuGetFramework.Parse(\"net6.0-windows\"),\r\n        NuGetFramework.Parse(\".NETFramework,Version=v4.0\"),\r\n        NuGetFramework.Parse(\".NETFramework,Version=v4.8\")\r\n    };\r\n    \r\n    var nearest = frameworkReducer.GetNearest(projectTargetFramework, frameworks);\r\n\r\n    nearest!.ToString().Should().Be(\"net6.0-windows\");\r\n}\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-12-05T03:30:21.4502151Z","RunDurationInMilliseconds":1067}