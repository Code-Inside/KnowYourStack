{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13621143966","Type":"IssuesEvent","CreatedAt":"2020-09-23T23:49:13","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8218","RelatedDescription":"Opened issue \"Add functional test for search title sorting\" (#8218) at NuGet/NuGetGallery","RelatedBody":"The functional test that checks that titles can be sorted started failing. This feature is actually unused so we removed the functional test.\r\n\r\nExample query: https://azuresearch-usnc.nuget.org/search/query?q=&prerelease=False&testData=true&ignoreFilter=False&CountOnly=False&sortBy=title-desc\r\nExample build: https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=73962&view=results"},{"Id":"13620302152","Type":"IssuesEvent","CreatedAt":"2020-09-23T21:43:51","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8217","RelatedDescription":"Opened issue \"Fix flaky db2catalog unit test\" (#8217) at NuGet/NuGetGallery","RelatedBody":"The test [`RunInternal_WithMultipleDeletedPackagesWithSamePackageIdentity_PutsEachPackageInSeparateCommit`](https://github.com/NuGet/NuGet.Jobs/blob/dd26676619c5901c9924fc9b3286ba263c41a446/tests/NgTests/Db2CatalogTests.cs#L533) is flaky.\r\n\r\nExample builds that have failed:\r\n\r\n* https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4090330\r\n* https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4090974\r\n\r\nExample builds that have passed (notice there are no changes between failed and passed builds):\r\n\r\n* https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4090487\r\n"},{"Id":"13618583161","Type":"IssuesEvent","CreatedAt":"2020-09-23T18:47:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7784","RelatedDescription":"Closed issue \"Feedback button should not appear if script is blocked\" (#7784) at NuGet/NuGetGallery","RelatedBody":"Browser extensions like uBlock Origin block some \"tracking\" scripts. This can effect the loading of the Usabilla JavaScript snippet. In such a case, the feedback button should not appear.\r\n\r\nToday, if the Usabilla script is blocked the button still appears (because we have a custom button) but does nothing when we click it. This is confusing."},{"Id":"13618579856","Type":"IssuesEvent","CreatedAt":"2020-09-23T18:46:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8183","RelatedDescription":"Closed issue \"[A11y][Keyboard]Focus is going to Feedback instead of staying on the same button \"Edit\"  after cancelling the edit of the package\" (#8183) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1184485\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450)\r\n\r\n\r\n## Repro Steps:\r\n\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"Open Profile drop down\" and press enter\r\n    Tab till \"API Keys\" and Press enter\r\n    Tab till \"Manage drop down\" and press enter\r\n    Tab till Edit button and press enter\r\n    Tab till \"Cancel\" button and press enter\r\n    Tab again\r\n    Check whether focus is going to \"Regenerate\" button or not.\r\n\r\n## Actual Results:\r\n\r\nFocus is going to Feedback instead of staying on the same button \"Edit\"  after cancelling the edit of the package\r\n\r\n   \r\n## Expected Results:\r\nThe focus should stay on the same 'Edit' button after cancelling the edit option and it should go to \"Regenerate\" if we press tab button  \r\n## User Impact:\r\nUsers with motor disabilities may find it difficult to navigate if the focus order doesn't retrieve correctly."},{"Id":"13607918911","Type":"IssuesEvent","CreatedAt":"2020-09-23T00:51:37","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8216","RelatedDescription":"Opened issue \"Use client's latest certificate generation abstractions\" (#8216) at NuGet/NuGetGallery","RelatedBody":"The client team introduced a [`TestCertificateGenerator`](https://github.com/NuGet/NuGet.Client/blob/0e5413751caebf168e7d363c88b9c22a3560fe60/test/TestUtilities/Test.Utility/Signing/TestCertificateGenerator.cs#L10) abstraction to create certificates for integration testing purposes. This replaces Bouncy Castle's `X509CertificateGenerator` and provides high-level helpers for common tasks (expire a certificate, make it a code signing certificate, etc...).\r\n\r\nSee this comment for more information: https://github.com/NuGet/NuGet.Jobs/pull/916/files#r492732746"},{"Id":"13606342806","Type":"IssuesEvent","CreatedAt":"2020-09-22T21:01:20","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7847","RelatedDescription":"Closed issue \"Accessibility: Color-Contrast too low on package page\" (#7847) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI played around with [Accessibility Insights](https://accessibilityinsights.io/) and tried it on NuGet.org. The site seems (at least from the \"Fast pass\") quite good regarding accessibility, but the color on the package page for the currently released package is too low.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. On this URL 'https://www.nuget.org/packages/Newtonsoft.Json/'\r\n2. Perform this operation 'FastPass with https://accessibilityinsights.io/'\r\n3. See error\r\n\r\n### Expected behavior\r\n\"Congratulations!\r\nNo failed automated checks were found.\"\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/756703/74595115-19d7f800-503e-11ea-8730-fb319a456680.png)\r\n\r\n### Additional context\r\nThe link color and the background color (this blue-ish color) are problematic. I'm not sure if this combination is used on other pages as well. I would guess that the best fix would be to change the background color of the \"bg-info\" class. \r\n\r\nI could try to find a color combination, but I guess there is not \"right\" or \"wrong\", but if you would like that I should try something just give me a comment here. :)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13620744182","Type":"IssuesEvent","CreatedAt":"2020-09-23T22:43:22","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9941","RelatedDescription":"Closed issue \"dotnet on Linux incorrectly detects revoked certificates on signed packages.\" (#9941) at NuGet/Home","RelatedBody":"The package https://www.nuget.org/packages/Rido.CoreAppLauncher/0.0.1-Beta1 is signed with author and repo certificates.\r\n\r\nNuGet.exe  5.4.0.6315 reports the package as valid\r\n```\r\nSuccessfully verified package 'Rido.CoreAppLauncher.0.0.1-Beta1'.\r\n```\r\n<details>\r\nVerifying Rido.CoreAppLauncher.0.0.1-Beta1\r\nC:\\Users\\rido\\Downloads\\rido.coreapplauncher.0.0.1-beta1.nupkg\r\n\r\nSignature Hash Algorithm: SHA256\r\nTimestamp: 11/7/2018 8:31:32 PM\r\n\r\nVerifying author primary signature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=DigiCert SHA2 Timestamp Responder, O=DigiCert, C=US\r\n  SHA1 hash: 400191475C98891DEBA104AF47091B5EB6D4CBCB\r\n  SHA256 hash: FC834D5BFFDE31DBA5B79BF95F573F7953BCBF9156E8525163E828EB92EA8A93\r\n  Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 1/3/2017 4:00:00 PM to 1/17/2028 4:00:00 PM\r\n\r\nVerifying the author primary signature with certificate:\r\n  Subject Name: CN=Ricardo Minguez, O=Ricardo Minguez, L=Redmond, S=Washington, C=US\r\n  SHA1 hash: AF227A682A7A39B3E21740C6C42C27E56312D3D8\r\n  SHA256 hash: 518F74AE79E44C7451FB5013E63D46BFF967A11AA13CD8F4586C57059AE900C9\r\n  Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 7/11/2018 5:00:00 PM to 10/11/2019 5:00:00 AM\r\n\r\nTimestamp: 11/7/2018 8:36:43 PM\r\n\r\nVerifying repository countersignature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1 hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256 hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Issued by: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Valid from: 1/1/2017 4:00:00 PM to 4/1/2028 4:59:59 PM\r\n\r\nSignature type: Repository\r\nnuget-v3-service-index-url: https://api.nuget.org/v3/index.json\r\nnuget-package-owners: ridomin\r\nVerifying the repository countersignature with certificate:\r\n  Subject Name: CN=NuGet.org Repository by Microsoft, O=NuGet.org Repository by Microsoft, L=Redmond, S=Washington, C=US\r\n  SHA1 hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\n  SHA256 hash: 0E5F38F57DC1BCC806D8494F4F90FBCEDD988B46760709CBEEC6F4219AA6157D\r\n  Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 4/9/2018 5:00:00 PM to 4/14/2021 5:00:00 AM\r\n\r\n\r\nSuccessfully verified package 'Rido.CoreAppLauncher.0.0.1-Beta1'.\r\n</details>\r\n\r\nWhen trying to install the same package in Ubuntu 20 (WSL2) with `dotnet 5.0.100-preview.8.20417.9` I got the following error\r\n\r\n```\r\nerror: Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': The author primary signature found a chain building issue: Revoked: certificate revoked\r\n```\r\n\r\n<details>\r\n```\r\ndotnet add package rido.coreapplauncher -v 0.0.1-beta1\r\n\r\n  Determining projects to restore...\r\n  Writing /tmp/tmpn2UntS.tmp\r\ninfo : Adding PackageReference for package 'rido.coreapplauncher' into project '/home/rido/code/testcons/testcons.csproj'.\r\ninfo : Restoring packages for /home/rido/code/testcons/testcons.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/rido.coreapplauncher/index.json\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/rido.coreapplauncher/index.json 399ms\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/rido.coreapplauncher/0.0.1-beta1/rido.coreapplauncher.0.0.1-beta1.nupkg\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/rido.coreapplauncher/0.0.1-beta1/rido.coreapplauncher.0.0.1-beta1.nupkg 10ms\r\ninfo : Installing Rido.CoreAppLauncher 0.0.1-Beta1.\r\ninfo : Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': Signature Hash Algorithm: SHA256\r\ninfo : Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': Timestamp: 11/07/2018 20:31:32\r\ninfo : Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': Verifying author primary signature's timestamp with timestamping service certificate:\r\ninfo :   Subject Name: CN=DigiCert SHA2 Timestamp Responder, O=DigiCert, C=US\r\ninfo :   SHA1 hash: 400191475C98891DEBA104AF47091B5EB6D4CBCB\r\ninfo :   SHA256 hash: FC834D5BFFDE31DBA5B79BF95F573F7953BCBF9156E8525163E828EB92EA8A93\r\ninfo :   Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\ninfo :   Valid from: 01/03/2017 16:00:00 to 01/17/2028 16:00:00\r\ninfo : Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': Signature type: Author\r\ninfo : Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': Verifying the author primary signature with certificate:\r\ninfo :   Subject Name: CN=Ricardo Minguez, O=Ricardo Minguez, L=Redmond, S=Washington, C=US\r\ninfo :   SHA1 hash: AF227A682A7A39B3E21740C6C42C27E56312D3D8\r\ninfo :   SHA256 hash: 518F74AE79E44C7451FB5013E63D46BFF967A11AA13CD8F4586C57059AE900C9\r\ninfo :   Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\ninfo :   Valid from: 07/11/2018 17:00:00 to 10/11/2019 05:00:00\r\nerror: Package 'Rido.CoreAppLauncher 0.0.1-Beta1' from source 'https://api.nuget.org/v3/index.json': The author primary signature found a chain building issue: Revoked: certificate revoked\r\ninfo : Package 'rido.coreapplauncher' is compatible with all the specified frameworks in project '/home/rido/code/testcons/testcons.csproj'.\r\nerror: Value cannot be null. (Parameter 'path1')\r\n```\r\n</details>\r\n"},{"Id":"13620295853","Type":"IssuesEvent","CreatedAt":"2020-09-23T21:43:04","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10044","RelatedDescription":"Closed issue \"Use [AppliesToProject] on IAttachedCollectionSourceProvider implementations\" (#10044) at NuGet/Home","RelatedBody":"Visual Studio has recently [added `[AppliesToProject]`](https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/271500) support for `IAttachedCollectionSourceProvider` providers, which can be used to prevent unneeded dlls. NuGet should use this for all their implementations to avoid unneeded loads of this dll in projects/solutions where it is not applicable, for example:\r\n\r\n``` C#\r\n    [Export(typeof(IAttachedCollectionSourceProvider))]\r\n    [Name(nameof(PackageReferenceAttachedCollectionSourceProvider))]\r\n    [Order(Before = HierarchyItemsProviderNames.Contains)]\r\n    [AppliesToProject(\"DependenciesTree\")] \r\n```\r\n\r\nThis is required to fix this [performance gate that was broken](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1136214) that got an exception for 16.7.\r\n\r\n**Note:** Similar to UI contexts for commands/packages this only controls whether your implementation is loaded for a given solution. You will still be called back for projects that do not contain these capabilities and you will need to continue to handle this.\r\n"},{"Id":"13618855405","Type":"PullRequestEvent","CreatedAt":"2020-09-23T19:13:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10064","RelatedDescription":"Opened pull request \"Ensure legacy PackageReference projects, that trigger a restore through IVsSolutionRestoreService, participate in the solution load restore batching \" (#10064) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/9986. \r\n\r\n@davkean I'm relying on your expertise for feedback here and help deciding the right capability. \r\n\r\nfyi @panopticentral"},{"Id":"13617864838","Type":"IssuesEvent","CreatedAt":"2020-09-23T17:39:16","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10063","RelatedDescription":"Opened issue \"Improve TargetsForTfmSpecificContentInPackage for TargetFramework alias support\" (#10063) at NuGet/Home","RelatedBody":"Before .NET 5, customers could extend pack to include additional files by adding their own targets that run as part of `TargetsForTfmSpecificContentInPackage `. For example:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeReferencedProjectInPackage</TargetsForTfmSpecificContentInPackage>\r\n</PropertyGroup>\r\n<Target Name=\"IncludeReferencedProjectInPackage\" Condition=\"'$(IncludeBuildOutput)' != 'false'\">\r\n  <ItemGroup>\r\n    <TfmSpecificPackageFile Include=\"$(OutputPath)\\ReferencedLib.dll\" PackagePath=\"lib/$(TargetFramework)\" />\r\n  </ItemGroup>\r\n</Target>\r\n```\r\n\r\nHowever, given that the `lib` folder name no longer matches the default `TargetFramework` value for TFMs such as `net5.0-windows`, we need to consider improving this extensibility, so that customers have a property they can use to place files in the correctly named TFM folder."},{"Id":"13617757768","Type":"IssuesEvent","CreatedAt":"2020-09-23T17:29:15","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10062","RelatedDescription":"Opened issue \"Add telemetry for NuGet's VS extensibility API faults\" (#10062) at NuGet/Home","RelatedBody":"NuGet's [VS extensibility APIs](https://docs.microsoft.com/en-us/nuget/visual-studio-extensibility/nuget-api-in-visual-studio) usually should not throw exceptions. Currently, we have no visibility when they do throw, and require customers to report problems to us.\r\n\r\nThis is particularly an issue for the new [brokered services](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.VisualStudio.Contracts/NuGetServices.cs), because all exceptions get deserialized as a single exception type, and the stack trace is lost, so customers are unable to report detailed failures to us."},{"Id":"13617564508","Type":"IssuesEvent","CreatedAt":"2020-09-23T17:11:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9635","RelatedDescription":"Closed issue \"restore hangs if you define a source to network folder that doesnt exist\" (#9635) at NuGet/Home","RelatedBody":"Steps to reproduce:\r\n\r\n1. wipe your local cache\r\n2. define a Nuget.Config in root of solution with a source to a network share \\\\machine\\nonexistenfolder\r\n3. run dotnet restore, nuget restore, visual studio\r\n\r\nexpected: nuget should warn that the feed is not avaible\r\ncurrent: visual studio hanges, nuget hangets, donet hangs\r\n\r\nannoying :(\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":28,"FavoriteCount":18,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-09-24T05:30:35.8443437Z","RunDurationInMilliseconds":1617}