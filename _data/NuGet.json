{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"26128321123","Type":"PullRequestEvent","CreatedAt":"2022-12-28T22:30:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9338","RelatedDescription":"Opened pull request \"Move the error message container outside of the Upload section\" (#9338) at NuGet/NuGetGallery","RelatedBody":"Fix https://github.com/NuGet/NuGetGallery/issues/9336\r\n"},{"Id":"26103008058","Type":"IssuesEvent","CreatedAt":"2022-12-27T09:38:04","Actor":"aelij","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9337","RelatedDescription":"Opened issue \"Gallery computed target frameworks not showing .NET 7\" (#9337) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI've recently uploaded the package [RoslynPad.Roslyn.Windows](https://www.nuget.org/packages/RoslynPad.Roslyn.Windows) which targets `net6.0-windows7.0` (not sure why `dotnet pack` added the `7.0`).\r\n\r\nHowever, the gallery website is missing the computed target `net7.0-windows`. It seems to be compatible with it as I've managed to restore it in a `net7.0-windows` project.\r\n\r\nIs that a bug? [Prism.Wpf](https://www.nuget.org/packages/Prism.Wpf) targets `net5.0-windows7.0` and it does show both `net6.0-windows` and `net7.0-windows` as computed targets.\n\n### Verbose Logs\n\n_No response_"},{"Id":"26093633380","Type":"PullRequestEvent","CreatedAt":"2022-12-26T15:23:11","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9333","RelatedDescription":"Merged pull request \"add document about how to deploy locally\" (#9333) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add steps about how to deploy locally to the readme file\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9326"},{"Id":"26083075082","Type":"IssuesEvent","CreatedAt":"2022-12-25T17:34:27","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9334","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Upload page does not properly show \"package must be signed\" error\" (#9334) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWhen a package is unsigned, the upload UI is blocked but it's not clear to the user what is happening.\n\n### Repro Steps\n\n1. Register a certificate to your account.\r\n2. Attempt to upload a package through the UI that has no signature.\r\n\r\nThe upload page will not continue, but the F12 developer tools show an HTTP 400 Bad Request.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/209393524-e891f06d-e7f5-4895-b85b-60a07e94c664.png)\r\n\n\n### Expected Behavior\n\nThe error message should be shown clearly to the user.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26078873868","Type":"IssuesEvent","CreatedAt":"2022-12-25T01:35:10","Actor":"RussKie","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9336","RelatedDescription":"Opened issue \"[NuGet.org Bug]: HTTP responses aren't reported to user\" (#9336) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIf a package author tries to upload\r\na) a signed package without a registered signing key, or\r\nb) an unsigned package when a signing key is registered,\r\n...the package will not be uploaded and no error message will be shown to the author.\r\n\r\nThe only way to find any kind of information is to open the DevTools and inspect the HTTP response. The HTTP response will look something like\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/209454605-bf34c11d-20f9-4ae3-b557-ced11ce2c24b.png)\r\n\n\n### Repro Steps\n\nSee above\n\n### Expected Behavior\n\nThe error message is shown to the user, and it clearly explains what the author must do in order to upload the package. The error message in the HTTP response **is not** be sufficient.\r\nLinks to documentation that articulates the necessity would also be helpful.\r\n\r\nA slight necessary OT: our organisation maintains several packages some of which are signed and some of which aren't. We can't sign all of the packages (and it's besides the point). Up until recently we published all packages without issues, and now when I tried to upload a new version of the signed package I couldn't do it. After some head scratching and investigations, essentially I was forced to register the signing key. And after that I could no longer upload a new version of the unsigned package....\r\n_If_ this is now \"by design\" this has to be explained, as well as steps to resolve such situations should be provided. \"Sign all your packages\" may not be an option.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26070941765","Type":"IssuesEvent","CreatedAt":"2022-12-23T21:36:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9335","RelatedDescription":"Closed issue \"[NuGet.org Bug]: china access api.nuget.org redirect to nuget.cdn.azure.cn ResourceNotFound\" (#9335) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nchina access api.nuget.org redirect to nuget.cdn.azure.cn ResourceNotFound\n\n### Repro Steps\n\nNormal: https://api.nuget.org/v3/catalog0/data/2022.12.22.18.59.52/altv.net.client.13.0.12.json\r\n\r\nResourceNotFound: https://nuget.cdn.azure.cn/v3/catalog0/data/2022.12.22.18.59.52/altv.net.client.13.0.12.json\n\n### Expected Behavior\n\nNormal access\n\n### Screenshots\n\n![ff1](https://user-images.githubusercontent.com/27775356/209393536-e7031266-2cf3-4b51-ba57-bb6313bfd78f.png)\r\n![ff2](https://user-images.githubusercontent.com/27775356/209393556-4ddda7b0-c75e-47ee-9107-d0327982eda5.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26069328757","Type":"IssuesEvent","CreatedAt":"2022-12-23T18:48:12","Actor":"godkoten","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9335","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9335) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nchina access api.nuget.org redirect to nuget.cdn.azure.cn ResourceNotFound\n\n### Repro Steps\n\nNormal: https://api.nuget.org/v3/catalog0/data/2022.12.22.18.59.52/altv.net.client.13.0.12.json\r\n\r\nResourceNotFound: https://nuget.cdn.azure.cn/v3/catalog0/data/2022.12.22.18.59.52/altv.net.client.13.0.12.json\n\n### Expected Behavior\n\nNormal access\n\n### Screenshots\n\n![ff1](https://user-images.githubusercontent.com/27775356/209393536-e7031266-2cf3-4b51-ba57-bb6313bfd78f.png)\r\n![ff2](https://user-images.githubusercontent.com/27775356/209393556-4ddda7b0-c75e-47ee-9107-d0327982eda5.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26069315088","Type":"IssuesEvent","CreatedAt":"2022-12-23T18:46:52","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9334","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Upload page does not properly show \"package must be signed\" error\" (#9334) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWhen a package is unsigned, the upload UI is blocked but it's not clear to the user what is happening.\n\n### Repro Steps\n\n1. Register a certificate to your account.\r\n2. Attempt to upload a package through the UI that has no signature.\r\n\r\nThe upload page will not continue, but the F12 developer tools show an HTTP 400 Bad Request.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/209393524-e891f06d-e7f5-4895-b85b-60a07e94c664.png)\r\n\n\n### Expected Behavior\n\nThe error message should be shown clearly to the user.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"26150606348","Type":"IssuesEvent","CreatedAt":"2022-12-30T13:01:02","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12241","RelatedDescription":"Closed issue \"getting error while build .net application in jenkins\" (#12241) at NuGet/Home","RelatedBody":"VERBOSE: Building InsightWeb Project with Version number : 2021.07.0.0\r\nMSBuild version 17.3.0+92e077650 for .NET\r\n  Determining projects to restore...\r\n  Retrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.devexpress.com/CnraCdegL3Nrpe5TGyiFPMwksP9mua7zFXAe5hGwiGWI3AYetM/api/FindPackagesById()?id='Antlr4'&semVerLevel=2.0.0'.\r\n  The SSL connection could not be established, see inner exception.\r\n    Authentication failed, see inner exception.\r\n    The client and server cannot communicate, because they do not possess a common algorithm.\r\n  Retrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.devexpress.com/CnraCdegL3Nrpe5TGyiFPMwksP9mua7zFXAe5hGwiGWI3AYetM/api/FindPackagesById()?id='BuildBundlerMinifier'&semVerLevel=2.0.0'.\r\n  The SSL connection could not be established, see inner exception.\r\n    Authentication failed, see inner exception.\r\n    The client and server cannot communicate, because they do not possess a common algorithm.\r\n  Retrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.devexpress.com/CnraCdegL3Nrpe5TGyiFPMwksP9mua7zFXAe5hGwiGWI3AYetM/api/FindPackagesById()?id='Microsoft.AspNetCore.Identity'&semVerLevel=2.0.0'.\r\n  The SSL connection could not be established, see inner exception.\r\n    Authentication failed, see inner exception.\r\n    The client and server cannot communicate, because they do not possess a common algorithm.\r\n  Retrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.devexpress.com/CnraCdegL3Nrpe5TGyiFPMwksP9mua7zFXAe5hGwiGWI3AYetM/api/FindPackagesById()?id='BuildWebCompiler2022'&semVerLevel=2.0.0'."},{"Id":"26150533729","Type":"IssuesEvent","CreatedAt":"2022-12-30T12:54:59","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12340","RelatedDescription":"Opened issue \"[Bug Bash] Installing the package “coverlet.collector” into WPF Application (.NET Framework) makes Browse tab unable to use\" (#12340) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.5.0.136\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Create a WPF Application (.NET Framework) project in VS.\r\n2. Open PM UI of the project, go to Browse tab and try to install the package “coverlet.collector”.\r\n3. There is an error in Error List window, click Installed tab and click back to Browse tab.\r\n\r\n#### Expected: \r\nNo error occurred and the error cannot make Browse tab unable to use.\r\n\r\n#### Actual: \r\nInstalling the package “coverlet.collector” into WPF Application (.NET Framework) makes Browse tab unable to use as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/210072187-9b614486-2f32-4ac8-bc61-d711020f3be2.png)\r\n#### Notes: \r\nIt seems not a regression since it reproes on D17.4\\33110.190.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"26141494946","Type":"IssuesEvent","CreatedAt":"2022-12-29T19:11:52","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12338","RelatedDescription":"Closed issue \"Is it possible to make the --ignore-failed-sources option a global configuration?\" (#12338) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK, Other/NA\n\n### The Elevator Pitch\n\nCurrently, we can explicitly add the ``--ignore-failed-sources`` parameter when using the command line to ignore some non-existing paths. But this does not work for ``VS``.\r\n\r\nIs it possible to add this option to global config file or ``Nuget.config`` file?\n\n### Additional Context and Details\n\n_No response_"},{"Id":"26134356301","Type":"IssuesEvent","CreatedAt":"2022-12-29T10:07:13","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12339","RelatedDescription":"Opened issue \"[Cross-platform Dotnet NuGet Sign] Duplicated “X.509 certificate chain validation” info showed after running command “dotnet nuget sign” and “dotnet nuget verify” on Windows\" (#12339) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK Version: 7.0.101\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n\r\n1. Execute the [dotnet nuget sign pre-step](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FDotnet%20nuget%20sign%20pre-step%7C708e56b6-a296-493e-a615-e0e18c55f96f%2F%29&wdorigin=703&xsdata=MDV8MDF8fGJiMGU2NDY4NzA2ZDQ0ZWQzOWRmMDhkYWU5ODBiMDBifDcyZjk4OGJmODZmMTQxYWY5MWFiMmQ3Y2QwMTFkYjQ3fDB8MHw2MzgwNzkwMzYxNDQ5NTc5MTl8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxNVFkzTWpNd05qZ3hNekkzTkRzeE5qY3lNekEyT0RFek1qYzBPekU1T2prellqVTBNbUZpTFdZeU1XTXRORFJqTWkwNE16aGhMVGN3WXpneVlUYzFNelk0Wmw5bU5EWTNZall6WWkwd05XSTRMVFF4Wm1VdE9EVmxNaTB5TkRGaFl6STRPVEZsWmpOQWRXNXhMbWRpYkM1emNHRmpaWE09fGFiYTExMjc3ZDRlZTRkMGUzOWRmMDhkYWU5ODBiMDBifDJlM2U5MGIyYjI2YTQyZWVhZDJmZThjZWIzMThiNDcw&sdata=YUwxQmlxODc0WGxNT2gzbEd0bGxMMnMyQkJScU1wUVd4eXVRUXppRFkxVT0%3D&ovuser=72f988bf-86f1-41af-91ab-2d7cd011db47%2Cv-cicili%40microsoft.com).\r\n\r\n2. On Windows: Create a new test certificate: ` .\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile `(in the powershell \"Developer Command Prompt\").\r\n\r\n3. Use the patched \"dotnet.exe\" to sign a package. Where <PackageFilePath> is the test package path and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\n\r\nOn Windows: ` .\\patchedSDK .\\dotnet.exe nuget sign <PackageFilePath> --overwrite --certificate-path <PfxFilePath> --certificate-password password --timestamper http://timestamp.digicert.com/ -v n`\r\n\r\n4. Verify that the package is signed successfully in the output, with no warnings and no errors\r\n\r\nPackage(s) signed successfully.\r\n\r\n5. Use the patched \"dotnet.exe\" to verify a package. \r\n\r\nOn Windows: ` .\\patchedSDK .\\dotnet.exe nuget verify <PackageFilePath> -v d` \r\n\r\n#### Expected: \r\n\r\nThere is only one “X.509 certificate chain validation” info after step3 and step5.\r\n\r\n#### Actual: \r\n\r\nDuplicated “X.509 certificate chain validation” info showed after step5 and step7 as below screenshot.\r\n![image](https://user-images.githubusercontent.com/84695155/209935806-dbd393e7-fc87-441e-8ea2-c74a51b84238.png)\r\n\r\n#### Note:\r\nIt only reproes on Windows, on Linux/MacBook the “X.509 certificate chain validation” info is:\r\n```\r\nX.509 certificate chain validation will use the fallback certificate bundle at '/home/jamie/Desktop/patchSDK/sdk/7.0.101/trustedroots/codesignctl.pem'.\r\nX.509 certificate chain validation will use the fallback certificate bundle at '/home/jamie/Desktop/patchSDK/sdk/7.0.101/trustedroots/timestampctl.pem'.\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"26133454591","Type":"IssuesEvent","CreatedAt":"2022-12-29T09:00:59","Actor":"pedoc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12338","RelatedDescription":"Opened issue \"Is it possible to make the --ignore-failed-sources option a global configuration?\" (#12338) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK, Other/NA\n\n### The Elevator Pitch\n\nCurrently, we can explicitly add the ``--ignore-failed-sources`` parameter when using the command line to ignore some non-existing paths. But this does not work for ``VS``.\r\n\r\nIs it possible to add this option to global config file or ``Nuget.config`` file?\n\n### Additional Context and Details\n\n_No response_"},{"Id":"26122772374","Type":"IssuesEvent","CreatedAt":"2022-12-28T14:35:48","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12337","RelatedDescription":"Opened issue \"WebSite projects opened from IIS fail to install packages\" (#12337) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nVS 17.4\n\n### Worked before?\n\n17.3\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. In IIS Manager, create a virtual directory as an application.\r\n2. In VS, use \"open website\", select \"local IIS\", and then select the directory\r\n3. Try to install a package that has `lib/<tfm>/*.dll` files.\r\n\r\nAn obscure error message is reported: \r\n\r\n> Failed to add reference to ‘Newtonsoft.Json’.\r\n> \r\n> Invalid URI: The Authority/Host could not be parsed.\n\n### Verbose Logs\n\n_No response_"},{"Id":"26121340923","Type":"IssuesEvent","CreatedAt":"2022-12-28T13:01:02","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12264","RelatedDescription":"Closed issue \"How to use nuget API to judge that these dependencies have build errors?\" (#12264) at NuGet/Home","RelatedBody":"### Discussed in https://github.com/NuGet/Home/discussions/12263\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Smartisa** November 22, 2022</sup>\r\nFor example, enter:\r\n` <PackageReference Include=\"Flips\" Version=\"2.4.3\" />\r\n    <PackageReference Include=\"CenterSpace.NMath.Standard.Windows.X64\" Version=\"7.4.0.16\" />`\r\n\r\nNuGet API can return:\r\n`NU1107 ERROR`</div>"},{"Id":"26119097142","Type":"IssuesEvent","CreatedAt":"2022-12-28T10:19:13","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12040","RelatedDescription":"Closed issue \"[Bug]: [Cross-platform Sign Verify] No “X.509” info shows after running command “dotnet restore”\" (#12040) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.100-rc.2.22417.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Detailed repro steps\r\n1.\tExecute the [Pre-testing steps](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FManual%20tests%2FTest%20Cases&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344A15B-01B1-4828-AF4C-63FE53687F8A%2FPre-testing%20steps%7C6E4370C3-C593-4B99-ABD8-908D0F9E002B%2F%29).\r\n2.\tWhere <NotBefore> and <NotAfter> are datetime values that mark a 10-minute period starting now, create a short-lived test code signing certificate that will expire 10 minutes from now. \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net7.0 -- -nb \"<NotBefore>\" -na \"<NotAfter>\"  `\r\n3.\tWhere `<CertificateFilePath>` is the file path to the .cer or .pem file in step 1 and <VersionedSdkDirectoryPath> is the directory path for the versioned .NET SDK directory (e.g.:  ./dotnet/dotnet/sdk/7.0.100), add trust for the certificate: \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> `\r\n4.\tWhere `<PackageId>` is the test package ID and `<PfxFilePath>` is the file path to the .pfx file, sign the test package: \r\n               On Windows: ` .\\dotnet\\dotnet nuget sign .\\<PackageId>\\bin\\Debug\\<PackageId>.1.0.0.nupkg --overwrite --certificate-path <PfxFilePath> `\r\n5.\tVerify that 1 warning displays in the output from the previous step: \r\nwarn : NU3002: The '--timestamper' option was not provided. The signed package will not be timestamped. To learn more about this option, please visit https://docs.microsoft.com/dotnet/core/tools \r\n6.\tCreate a test project: \r\nOn Windows:  `mkdir .\\test && pushd .\\test && ..\\dotnet\\dotnet new console && copy ..\\NuGet.config.template .\\NuGet.config  `\r\n7.\tUpdate NuGet.config to reference the SHA-256 fingerprint of the short-lived certificate created in step 2. \r\n8.\tClear local NuGet resources and previous restore results: \r\nOn Windows:  `rd /s /q .\\obj && ..\\dotnet\\dotnet nuget locals --clear all `\r\n9.\tWhere <PackageId> is the test package ID, add a package reference to the test package: \r\n        On Windows: ` ..\\dotnet\\dotnet add package <PackageId> --version 1.0.0 `\r\n10.\tVerify the results of the previous step.  \r\n               On Windows, the operation failed with the following messages: \r\n```\r\na.\tinfo : X.509 certificate chain validation will use the default trust store selected by .NET. \r\nb.\terror: NU3037: Package '<PackageId> 1.0.0' from source 'E:\\testpass\\<PackageId>\\bin\\Debug': The author primary signature validity period has expired. \r\n```\r\n11.\tRepeat step 8. \r\n12. Where <PackageId> is the test package ID, edit test.csproj to include the following element directly inside the root <configuration> element: \r\n```\r\n<ItemGroup> \r\n<PackageReference Include=\"<PackageId>\" Version=\"1.0.0\" /> \r\n</ItemGroup> \r\n```\r\n13.\tRestore: \r\nOn Windows:  `..\\dotnet\\dotnet restore -v detailed `\r\n\r\n#### Expected\r\nThe “X.509” info (as below on Windows) will show after running command “dotnet restore”. \r\n`info : X.509 certificate chain validation will use the default trust store selected by .NET. `\r\n#### Actual\r\nNo “X.509” info shows\r\n#### Notes\r\nIt also reproes on MacBook.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-01-02T03:30:25.1525879Z","RunDurationInMilliseconds":1458}