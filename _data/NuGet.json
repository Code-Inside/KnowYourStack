{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"43881352590","Type":"PullRequestEvent","CreatedAt":"2024-11-15T23:40:59","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10271","RelatedDescription":"Opened pull request \"Deleting unnecessary stats jobs\" (#10271) at NuGet/NuGetGallery","RelatedBody":"Before migration, we decided to remove unnecessary stats jobs. Jobs were removed based on the list in this work item:\r\n\r\nhttps://github.com/orgs/NuGet/projects/21/views/1?filterQuery=milestone%3A%22Sprint+2024-11%22+assignee%3A%40me&pane=issue&itemId=64259916&issue=NuGet%7CEngineering%7C5445"},{"Id":"43877417740","Type":"IssuesEvent","CreatedAt":"2024-11-15T20:23:07","Actor":"KirillOsenkov","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10270","RelatedDescription":"Opened issue \"More metadata in package tags on the search endpoint\" (#10270) at NuGet/NuGetGallery","RelatedBody":"As an example, if a package is deprecated, automatically add \"deprecated\" to the tag collection."},{"Id":"43873031608","Type":"PullRequestEvent","CreatedAt":"2024-11-15T17:29:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10269","RelatedDescription":"Opened pull request \"[OIDC 6] Find matching federated credential policy (policy evaluation)\" (#10269) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10268.\r\n\r\nThis is a big chunk of the OIDC feature's business logic. A new `IFederatedCredentialEvaluator` is added which takes a list of federated credential policies and a bearer token and evaluates which trust policy, if any matches the given bearer token.\r\n\r\nThis is a read-only operation. The creation of the short-lived API key will be performed at a higher level.\r\n\r\nThere are two main parts of the logic.\r\n\r\nFirst, find the issuer of the bearer token and validate it using the appropriate, issuer-specific validation routine. This step can be summarized as \"Is this a valid token, issued by an expected issuer?\". This is done no matter the policies provided. to reduce the amount of information leaked about policies in our DB.\r\n\r\nSecond, if the token is valid, the code checks the claims in the token against the given polices. For the short term, this is checking if the `tid` and `oid` claims in a policy match the token.\r\n\r\nFor a future phase where we accept GitHub Actions tokens, the first step will be enhanced with GitHub OIDC signature validation and step 2 will validate against some expected build context provided by the user (e.g. is the token coming from an expected repository and branch). This is not part of the PR but I wanted to give a taste for how this code will expand in the future as we federate with more IdPs.\r\n\r\nThe returned `EvaluatedFederatedCredentialPolicies` is the result pattern because there are several error modes that should be handled differently, but gracefully. This is opposed to throwing different flavored exceptions, Generally, there is \"bad token\", \"no matching policy\", and \"matching policy\". The \"bad token\" state shows a helpful error message because it is unrelated to any specific policy. This eases debugging for the user. The \"unauthorized\" state will not show a detailed error message because we don't want to leak information about what policies the user has or doesn't have.\r\n\r\nThe caller of this new method will fetch the policies for a given user and call this method to find a matching policy if any."},{"Id":"43872603317","Type":"PullRequestEvent","CreatedAt":"2024-11-15T17:14:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10268","RelatedDescription":"Opened pull request \"[OIDC 5] Add repository for federated credential DB entities\" (#10268) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10267.\r\n\r\nThis adds a \"repository\" (which is our wrapper around one or more `EntitiesContext` DB sets) for working with federated credential entities.\r\n\r\nThese methods will be used by the token trade endpoint and the admin panel.\r\n\r\nI followed the pattern of a `bool saveChanges` parameter on the method to allow the caller to control if the changes should be saved to the DB immediately or not."},{"Id":"43872487834","Type":"PullRequestEvent","CreatedAt":"2024-11-15T17:10:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10267","RelatedDescription":"Opened pull request \"[OIDC 4] Add method to create a short-lived API key\" (#10267) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10262.\r\n\r\nThis adds a new method to `CredentialBuilder` which creates a short-lived API key given a federated credential trust policy.\r\n\r\nThis method has a TODO in it linking to the OIDC work item because the exact shape of the short lived API key is still in discussion. The created credential is not yet associated with a user (the created by user account) because this is the responsibility of `IAuthenticationService.AddCredential`:\r\nhttps://github.com/NuGet/NuGetGallery/blob/0ec99618043ae7f7e54a3ed8fdbbb47acc5e30b1/src/NuGetGallery.Services/Authentication/AuthenticationService.cs#L629-L641\r\n\r\nThis will be called in a future PR while executing the token trade endpoint.\r\n\r\nThis stub allows me to perform the token trade flow with a current V4 API key, without any of the improvements we will need (such as hiding this API keys from the API key page, not sending API key expiration messages, etc.)."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"43887718813","Type":"PullRequestEvent","CreatedAt":"2024-11-16T10:54:29","Actor":"microsoft-github-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/10899","RelatedDescription":"Closed pull request \"Proposal of snupkg restore functionality and debug improvement\" (#10899) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/10793"},{"Id":"43881179399","Type":"IssuesEvent","CreatedAt":"2024-11-15T23:29:44","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13933","RelatedDescription":"Opened issue \"Value cannot be null. Parameter name: versionRange when opening the PM UI\" (#13933) at NuGet/Home","RelatedBody":"Original ticket: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2300943\r\n\r\nWhen looking at the VSInMemoryActivityLog file I see a lot of places this is being thrown, I haven't been able to reproduce the error but looking at the code paths I see that it is possible to have those errors."},{"Id":"43875904086","Type":"IssuesEvent","CreatedAt":"2024-11-15T19:20:19","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13932","RelatedDescription":"Opened issue \"More metadata in package tags on the search endpoint\" (#13932) at NuGet/Home","RelatedBody":"As an example, if a package is deprecated, automatically add \"deprecated\" to the tag collection."},{"Id":"43875564211","Type":"IssuesEvent","CreatedAt":"2024-11-15T19:06:06","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13923","RelatedDescription":"Closed issue \"Test:  test certificate not removed after test completion\" (#13923) at NuGet/Home","RelatedBody":"[This certificate](https://github.com/NuGet/NuGet.Client/blob/38729596a6549df3cd1eed37b93d51df1bf62bff/test/NuGet.Core.Tests/NuGet.Commands.Test/CertificatesFixture.cs#L22-L28) is added to the current user's personal store but not removed.\r\n\r\nThe reason is because `GetTrustedCertificate()` returns the private copy of the certificate, which is then disposed by the caller.  When `CertificatesFixture.Dispose()` executes, the certificate cannot be found (and removed) because the certificate has already been disposed."},{"Id":"43875564174","Type":"IssuesEvent","CreatedAt":"2024-11-15T19:06:06","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13923","RelatedDescription":"Closed issue \"Test:  test certificate not removed after test completion\" (#13923) at NuGet/Home","RelatedBody":"[This certificate](https://github.com/NuGet/NuGet.Client/blob/38729596a6549df3cd1eed37b93d51df1bf62bff/test/NuGet.Core.Tests/NuGet.Commands.Test/CertificatesFixture.cs#L22-L28) is added to the current user's personal store but not removed.\r\n\r\nThe reason is because `GetTrustedCertificate()` returns the private copy of the certificate, which is then disposed by the caller.  When `CertificatesFixture.Dispose()` executes, the certificate cannot be found (and removed) because the certificate has already been disposed."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-11-17T03:30:21.1943239Z","RunDurationInMilliseconds":1032}