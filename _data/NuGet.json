{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13030908432","Type":"IssuesEvent","CreatedAt":"2020-07-27T23:34:11","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7649","RelatedDescription":"Closed issue \"Newly pushed packages that are vulnerable should be marked vulnerable on upload/push\" (#7649) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13030549142","Type":"IssuesEvent","CreatedAt":"2020-07-27T22:33:22","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7649","RelatedDescription":"Reopened issue \"Newly pushed packages that are vulnerable should be marked vulnerable on upload/push\" (#7649) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13030466788","Type":"IssuesEvent","CreatedAt":"2020-07-27T22:20:37","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8093","RelatedDescription":"Closed issue \"[2020-07-13] Deployment \" (#8093) at NuGet/NuGetGallery","RelatedBody":"# Stats.ImportAzureCdnStatistics\r\n\r\nChanges:\r\n*  [Stats] Aggregate rows with same Dimensions, before inserting to DB.  (https://github.com/NuGet/NuGet.Jobs/pull/895)\r\n\r\nProgress: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=744704\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD\r\n\r\n# Catalog2Monitoring \r\n\r\nChanges:\r\n* Log cursor URI with value (https://github.com/NuGet/NuGet.Services.Metadata/pull/799)\r\n\r\nProgress: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=743695\r\n* [x] Merge RI: https://github.com/NuGet/NuGet.Services.Metadata/pull/799\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD\r\n\r\n# Azure search service\r\n\r\nChanges:\r\n* [Advanced Search] Add sorting & filtering to the search service (https://github.com/NuGet/NuGet.Services.Metadata/pull/794) \r\n\r\nProgress: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=743121\r\n* [x] Merge RI: https://github.com/NuGet/NuGet.Services.Metadata/pull/799\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD\r\n\r\n# db2catalog\r\n\r\nChanges:\r\n*  [Catalog] Add vulnerability data to catalog. (https://github.com/NuGet/NuGet.Services.Metadata/pull/790)\r\n\r\nProgress: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=745201\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD\r\n\r\n# catalog2registration\r\n\r\nChanges:\r\n*  [Registration] Propagate vulnerability data to reg blobs (https://github.com/NuGet/NuGet.Services.Metadata/pull/798)\r\n\r\nProgress: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=745207\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD\r\n"},{"Id":"13030462838","Type":"IssuesEvent","CreatedAt":"2020-07-27T22:20:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8083","RelatedDescription":"Closed issue \"[Search] Investigate how to use recent downloads from statistics pipeline\" (#8083) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13030462161","Type":"IssuesEvent","CreatedAt":"2020-07-27T22:19:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8082","RelatedDescription":"Closed issue \"[Search] Ramp up on NDCG\" (#8082) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13028035569","Type":"IssuesEvent","CreatedAt":"2020-07-27T17:34:23","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8058","RelatedDescription":"Closed issue \"Add package type filtering to Search service\" (#8058) at NuGet/NuGetGallery","RelatedBody":"Add support for package type filtering to the search service v2 endpoint"},{"Id":"13028035301","Type":"IssuesEvent","CreatedAt":"2020-07-27T17:34:21","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8057","RelatedDescription":"Closed issue \"Add downloads sorting to the Search service\" (#8057) at NuGet/NuGetGallery","RelatedBody":"Add total download count sorting to the search service endpoint"},{"Id":"13027639533","Type":"IssuesEvent","CreatedAt":"2020-07-27T16:52:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8127","RelatedDescription":"Closed issue \"References deprecated Nuget.Core package\" (#8127) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nThe current latest release on Nuget.org references Nuget.Core v2 which is deprecated.\r\n\r\n### To Reproduce\r\nInstall the latest Nuget.Server package\r\n\r\n### Expected behavior\r\nNo errors should appear in the package manager stating you are referencing a deprecated package\r\n![Annotation 2020-07-26 094228](https://user-images.githubusercontent.com/4307189/88484568-56c8e480-cf24-11ea-8cfe-432a57a39a34.png)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13031618388","Type":"IssuesEvent","CreatedAt":"2020-07-28T01:47:40","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9849","RelatedDescription":"Opened issue \"NuGetFramework copy constructor does not create an equivalent frameworks\" (#9849) at NuGet/Home","RelatedBody":"This leads to ATF getting created with the wrong base framework and to an incorrect framework being used forrestore.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/e09cdc8a877737addb01eeb90d5ea2bd9433ac52/src/NuGet.Core/NuGet.Frameworks/AssetTargetFallbackFramework.cs#L52\r\n\r\nRepros anytime you use ATF + framework with a platform. "},{"Id":"13031222148","Type":"IssuesEvent","CreatedAt":"2020-07-28T00:32:37","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9845","RelatedDescription":"Closed issue \"Enable PM UI experiment - package recommender\" (#9845) at NuGet/Home","RelatedBody":"Call into VS Experiment service so we can do an A/B test for Package Recommender services."},{"Id":"13030649052","Type":"IssuesEvent","CreatedAt":"2020-07-27T22:49:45","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9705","RelatedDescription":"Closed issue \"Invalid Nuget.Build.Tasks.Console package when building from source\" (#9705) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nBuilding Nuget.Build.Tasks.Console in source-build results in invalid contentFiles in the generated package.  Trailing backslashes in the PackagePath on the two lines linked below cause a double slash in the output package.  Related to https://github.com/NuGet/Home/issues/7004\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/784274cc9b2002ca73055e8134064261118d8a01/src/NuGet.Core/NuGet.Build.Tasks.Console/NuGet.Build.Tasks.Console.csproj#L67-L68\r\n\r\ndotnet.exe --version (if appropriate): 5.0.100-preview.4.20258.7\r\nOS version (i.e. win10 v1607 (14393.321)): CentOS Linux 8 (Core)\r\n\r\nWorked before? Not sure\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Build Nuget.Build.Tasks.Console on a non-windows OS\r\n\r\n2. Inspect the resulting nuspec in Nuget.Build.Tasks.Console.*.nupkg (Note the double slash in contentFiles entries)\r\n\r\n\r\n\r\n"},{"Id":"13029689873","Type":"IssuesEvent","CreatedAt":"2020-07-27T20:39:36","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8808","RelatedDescription":"Closed issue \"Add \"latest\" option for -MSBuildVersion \" (#8808) at NuGet/Home","RelatedBody":"Currently we can only specify the version in order to use this argument like:\r\n> nuget restore a.sln -MSBuildVersion 16.3\r\n\r\n**Why?**\r\nIt should be the latest by default. However, in some cases the PATH value overwrites this behaviour. e.g. if we have MSbuild14 in the PATH. There is currently no way to specify using the latest version of MSBuild. Is it possible to add this feature to `-MSBuildVersion` ?"},{"Id":"13028916559","Type":"IssuesEvent","CreatedAt":"2020-07-27T19:10:52","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9751","RelatedDescription":"Closed issue \"Plan out trajectory for net5.0 support project\" (#9751) at NuGet/Home","RelatedBody":""},{"Id":"13028849000","Type":"IssuesEvent","CreatedAt":"2020-07-27T19:03:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9436","RelatedDescription":"Closed issue \"net5 tfm: framework precedence rules\" (#9436) at NuGet/Home","RelatedBody":"net5 has [specific precedence rules](https://github.com/dotnet/designs/blob/master/accepted/2020/net5/net5.md#precedences) that need to be followed. We need to implement them."},{"Id":"13028076363","Type":"IssuesEvent","CreatedAt":"2020-07-27T17:38:53","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9820","RelatedDescription":"Closed issue \"Is the (global) packages folder structure stable (packageName\\packageVersion)?\" (#9820) at NuGet/Home","RelatedBody":"The (global) packages has a structure in the form of `packageName\\packageVersion`, e.g.:\r\n* `C:\\packages\\Foo.Package.Name\\1.2.3`\r\n* `C:\\packages\\Bar.Package.Name\\4.5.6`\r\n\r\nCan we rely on this structure in build scripts and the like?\r\n(I am aware of `GeneratePathProperty`, I need this outside of MSBuild context)\r\n\r\nIn case the folder structure above is part of the NuGet contract/spec and is stable, I suggest it is documented clearly.\r\n"},{"Id":"13027943914","Type":"IssuesEvent","CreatedAt":"2020-07-27T17:24:30","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9175","RelatedDescription":"Closed issue \"[CPVM] Re-discuss the CPV merge location\" (#9175) at NuGet/Home","RelatedBody":"There were question for the location where the CPVM and package reference merge needs to be done. \r\nAt the entry point by (msbuild, VS, static restore graph entry points) or before restore .\r\nCurrently the merge is before restore when the packagespec is added to the dgspec. \r\n\r\nThis item is to track if we need to change to do it at entry points. \r\n\r\n"},{"Id":"13027502318","Type":"IssuesEvent","CreatedAt":"2020-07-27T16:38:14","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9848","RelatedDescription":"Opened issue \"Modifying VS Project Properties Page for Readme Support\" (#9848) at NuGet/Home","RelatedBody":"Add the ability to include a Readme file and property to a project through the Project Properties page."},{"Id":"13027448112","Type":"IssuesEvent","CreatedAt":"2020-07-27T16:32:34","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9847","RelatedDescription":"Opened issue \"NuGet package manager icons look poor on dark theme\" (#9847) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1123992/nuget-package-manager-icons-look-poor-on-dark-them.html)._\n\n---\n[severity:I'm somewhat annoyed. A fix would be nice]\r\nIcons on the dark theme are pixelated and clipped. They should use the VS image service. See attached screenshot.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/23/2020, 08:12 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"13027412688","Type":"IssuesEvent","CreatedAt":"2020-07-27T16:28:58","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9846","RelatedDescription":"Opened issue \"Use only approved cryptographic hash functions\" (#9846) at NuGet/Home","RelatedBody":"Investigate the AzDO tasks assigned to me that ask us to use only approved cryptographic hash functions.\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/784520"},{"Id":"13027320330","Type":"IssuesEvent","CreatedAt":"2020-07-27T16:19:31","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9845","RelatedDescription":"Opened issue \"Enable PM UI experiment - package recommender\" (#9845) at NuGet/Home","RelatedBody":"Call into VS Experiment service so we can do an A/B test for Package Recommender services."},{"Id":"13024781941","Type":"IssuesEvent","CreatedAt":"2020-07-27T12:29:21","Actor":"japj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9844","RelatedDescription":"Opened issue \"System.IO.DirectoryNotFoundException: Could not find a part of the path during Restore\" (#9844) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: MSBuild restore\r\n\r\nVS version : VS2019 16.5.5\r\n\r\nOS version:  Windows Server 2016 1607 (14393.3750)\r\n\r\nWorked before? Yes, using VS2019 16.4.0\r\n\r\nThe restore is running as part of a Build Definition in a build step (Azure DevOps Server/on premise agent).\r\nThe System.IO.DirectoryNotFoundException error seems to occur frequently after having recently updated to VS2019 16.5.5\r\n(but it is not 100% reproducable)\r\n\r\nhttps://github.com/NuGet/Home/issues/7341 and https://github.com/NuGet/Home/issues/7908 seem to describe similar occurrences of this issue (but then it only seemed to happen on linux/mac machines?). We have a similar issue, but specifically on Windows machines.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/2774 also mentions that this problem occurrence might be related to the amount of projects being restored in the solution, but reproducing it also seemed to be difficult there.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. a solution with 218 projects in it (C++ vcxproj, C# csproj (.NET Framework) and some dotnet core projects), plus several projects using the Microsoft.Build.NoTargets Sdk and a company private MSBuild Sdk.\r\n\r\n2. run MSBuild /t:restore on the solution\r\n\r\n### Verbose Logs\r\n```\r\n##[error]someprojectfile.csproj(7,5): Error : System.AggregateException: One or more errors occurred. ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'c:\\agent04\\_work\\_temp\\mspdbsrv.17a37a44-6da2-4803-b51c-3e2225fc04f2\\NuGetScratch\\cfbbb4d423d44644b09f91277a2ef8be\\adc573783fc0444ba0738b1f95891d13.proj.nuget.dgspec.json'.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode)\r\n   at NuGet.ProjectModel.DependencyGraphSpec.Save(String path)\r\n   at NuGet.Commands.NoOpRestoreUtilities.PersistDGSpecFile(DependencyGraphSpec spec, String dgPath, ILogger log)\r\n   at NuGet.Commands.RestoreCommand.EvaluateCacheFile()\r\n   at NuGet.Commands.RestoreCommand.<ExecuteAsync>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<ExecuteAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<CompleteTaskAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunWithoutCommit>d__3.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at System.Threading.Tasks.Task`1.get_Result()\r\n   at Microsoft.Build.NuGetSdkResolver.NuGetSdkResolver.NuGetAbstraction.GetSdkResult(SdkReference sdk, Object nuGetVersion, SdkResolverContext context, SdkResultFactory factory)\r\n---> (Inner Exception #0) System.IO.DirectoryNotFoundException: Could not find a part of the path 'c:\\agent04\\_work\\_temp\\mspdbsrv.17a37a44-6da2-4803-b51c-3e2225fc04f2\\NuGetScratch\\cfbbb4d423d44644b09f91277a2ef8be\\adc573783fc0444ba0738b1f95891d13.proj.nuget.dgspec.json'.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode)\r\n   at NuGet.ProjectModel.DependencyGraphSpec.Save(String path)\r\n   at NuGet.Commands.NoOpRestoreUtilities.PersistDGSpecFile(DependencyGraphSpec spec, String dgPath, ILogger log)\r\n   at NuGet.Commands.RestoreCommand.EvaluateCacheFile()\r\n   at NuGet.Commands.RestoreCommand.<ExecuteAsync>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<ExecuteAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<CompleteTaskAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunWithoutCommit>d__3.MoveNext()<---\r\n```"},{"Id":"13023309718","Type":"IssuesEvent","CreatedAt":"2020-07-27T09:47:06","Actor":"bbants","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9843","RelatedDescription":"Opened issue \"namelink is dereferenced in linux when using NuGet.exe(mono) to pack my native versioned so file namelink\" (#9843) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 4.8.2.5835\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Ubuntu 18.04\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. my project generate a xxx.so.1.0.0 and its namelink xxx.so\r\n\r\n2. using nuget pack, xxx.so namelink its dereferenced to xxx.so.1.0.0 in nupkg file\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-28T05:30:43.0005287Z","RunDurationInMilliseconds":2296}