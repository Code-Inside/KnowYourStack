{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13786582616","Type":"PullRequestEvent","CreatedAt":"2020-10-09T02:17:17","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8249","RelatedDescription":"Merged pull request \"NuGet survey banner\" (#8249) at NuGet/NuGetGallery","RelatedBody":"UI:\r\n\r\n![bannerfinal](https://user-images.githubusercontent.com/64443925/95498428-a5e5b980-0958-11eb-98b1-4726624da384.PNG)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8225"},{"Id":"13785762790","Type":"PullRequestEvent","CreatedAt":"2020-10-08T23:46:59","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8252","RelatedDescription":"Opened pull request \"Call out the 'select scopes' field label\" (#8252) at NuGet/NuGetGallery","RelatedBody":"Update the API key form to call out the `select scopes` label after tabbing to inputs within that field group.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8182"},{"Id":"13785217858","Type":"PullRequestEvent","CreatedAt":"2020-10-08T22:22:31","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8251","RelatedDescription":"Opened pull request \"Remove A/B test check for the package dependents feature\" (#8251) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8250\r\n\r\nAlso, did a little thinking about what the next A/B test would do. Either re-use the \"pd\" property in the cookie if you don't care much about independent treatment groups or add a new schema version and leave \"pd\" as vestigial. "},{"Id":"13784697032","Type":"IssuesEvent","CreatedAt":"2020-10-08T21:19:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8250","RelatedDescription":"Opened issue \"Remove A/B test for package dependents feature\" (#8250) at NuGet/NuGetGallery","RelatedBody":"This feature has been running successfully for several months. We no longer need the A/B test check. The existing feature flag can remain for emergency scenarios."},{"Id":"13784456043","Type":"PullRequestEvent","CreatedAt":"2020-10-08T20:54:45","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8246","RelatedDescription":"Merged pull request \"Revert \"[Cookie Compliance] Revert revert and fix the functional test…\" (#8246) at NuGet/NuGetGallery","RelatedBody":"This reverts commit 82b1d222d19e6cd868eac1b9054600d706ac1a07."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13782900111","Type":"IssuesEvent","CreatedAt":"2020-10-08T18:21:33","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10117","RelatedDescription":"Opened issue \"Remove liveshare flag from service attributes\" (#10117) at NuGet/Home","RelatedBody":"Our services use Audience = ServiceAudience.AllClientsIncludingGuests which enables liveshare scenarios which we don't want to enable at this time."},{"Id":"13782729904","Type":"IssuesEvent","CreatedAt":"2020-10-08T18:05:46","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/2387","RelatedDescription":"Reopened issue \"PackageRestoreTest.ps1 E2E tests have disabled since Dev12. Re-enable or Delete them\" (#2387) at NuGet/Home","RelatedBody":"PackageRestoreTest.ps1 E2E tests have disabled since Dev12. Re-enable them or Delete them\n\nCurrently, they were disabled for Dev12 and Dev14. Will disable it for Dev15 as well.\nInvestigate and fix them all when this issue is fixed.\n\nCode to remove is at https://github.com/NuGet/NuGet.Client/blob/dev/test/EndToEnd/NuGet.Tests.psm1#L108\n"},{"Id":"13772021863","Type":"IssuesEvent","CreatedAt":"2020-10-07T23:22:17","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10116","RelatedDescription":"Opened issue \"Make PM UI's icon display resilient to errors\" (#10116) at NuGet/Home","RelatedBody":"It appears we have had multiple bugs in the past related to icons in PM UI which caused VS to crash: https://github.com/NuGet/Home/issues/9696, https://github.com/NuGet/Home/issues/10037\r\n\r\nPM UI should never crash VS. If there's any kind of problem with displaying an icon, NuGet should display the default icon.\r\n\r\nI'm not sure about the first issue, but the second issue is caused because WPF's implementation of resizing and changing the color pallet of images happens on the Dispatcher (UI) thread, and doesn't catch exceptions. Unhandled exceptions on the UI thread crashes the process. Since this is work that WPF is scheduling on the UI thread, NuGet's not on the call stack, and hence we cannot catch/handle the exception. The Dispatcher.UnhandledException handler does get triggered, but I don't see any way to determine if it was NuGet, or something else, that triggered the image load, and even if we assume it was NuGet, I'm not sure how to determine which image load had the problem when we load multiple images in parallel.\r\n\r\nEven if dotnet/wpf fixes the issue, that will take effect in .NET 6 at the earliest, but VS 2019 runs in .NET Framework 4.7.2 (or 4.8 if that's installed, I guess). The bar to service the .NET Framework is very, very high, so I have no idea if this issue would be approved. Even if it is, customers who haven't installed the patch would continue to crash. We have to decide what machine install states we want to support.\r\n\r\nWe should investigating re-designing our icon loading code so that crashing VS just cannot happen, even for bugs we don't currently know about. Think `catch (Exception e)`, rather than catching specific exceptions, which is normally the recommendation. This won't work for this WPF exception on dispatcher thread issue, so we need to do something in addition to handle that scenario.\r\n\r\nI have no idea if it will work, but maybe we can copy [WPF's code](https://github.com/dotnet/wpf/blob/b697746306a695af80a756586cad3f84a62e366c/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/Imaging/BitmapImage.cs#L303), and add more try-catch blocks.\r\n\r\n"},{"Id":"13771450287","Type":"IssuesEvent","CreatedAt":"2020-10-07T22:02:54","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9386","RelatedDescription":"Closed issue \"Nuget acceptance command works wrong!\" (#9386) at NuGet/Home","RelatedBody":"NuGet product used (NuGet.exe | dotnet.exe):\r\n\r\nNuGet version (5.4.0.2):\r\n\r\ndotnet.exe --version (3.1.102):\r\n\r\nOS version (Win10 v1903 (18362.720)):\r\n\r\nWhen I run my dotnet nuget command in console like following:\r\n\r\n`dotnet nuget delete B3.Extensions.Data 1.0.2 -s https://api.nuget.org/v3/index.json -k apikey`\r\n\r\nit asks me if I want to continue.\r\n\r\n![e](https://user-images.githubusercontent.com/2901269/78363733-f30d5b00-75c4-11ea-88e0-4fc86767512d.PNG)\r\n\r\nIf I type \"y\", it is cancelling. If I type \"n\", it is deleting.\r\n\r\nMy language is Turkish. So there is a translation bug or logical bug here.\r\n"},{"Id":"13770018110","Type":"IssuesEvent","CreatedAt":"2020-10-07T19:32:45","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10115","RelatedDescription":"Opened issue \"{CPVM] Add support for optional pack the pinned transitive dependencies.\" (#10115) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nOne of the features that CPVM supports is enforcing transitive dependencies to the central defined versions. As all the testing and development for an application is done using the specified dependency set, on pack the enforced/pinned transitive dependencies are packed as well. \r\n\r\nHowever this may not be the desired experience for some of the scenarios. \r\n\r\n## Suggestion\r\nConsider have an pack option to include the transitive dependencies only per request. \r\n\r\nRelated with: https://github.com/openiddict/openiddict-core/issues/1113\r\n\r\n"},{"Id":"13768737060","Type":"IssuesEvent","CreatedAt":"2020-10-07T17:32:03","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10090","RelatedDescription":"Closed issue \"Design and cost Dotnet nuget sign\" (#10090) at NuGet/Home","RelatedBody":""},{"Id":"13763974911","Type":"IssuesEvent","CreatedAt":"2020-10-07T11:22:04","Actor":"kmteam","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10114","RelatedDescription":"Closed issue \"Unable to auto create nuspec file.\" (#10114) at NuGet/Home","RelatedBody":"\r\nI'm trying to generate `nuspec `manifest file from legacy _.NET Framework 4.5_ library project.\r\nAccording to [MSDN documentation](https://docs.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-visual-studio-net-framework#generate-the-initial-manifest) I can create the manifest file by typing : \r\n```\r\nnuget spec MyProject.csproj\r\n```\r\nThis should create a `MyProject.nuspec` file filled with all my project metadata (assembly version, author..)\r\nBut when I examine the generated file, **no replacement token has been filled**.\r\nMy goal is to completely automate this step, so I don't want to manually fill anything.\r\n\r\n## Details about Problem\r\n\r\nNuGet Version: 5.7.0.6726\r\nMicrosoft Visual Studio Professional 2019 (2) Version 16.7.4\r\nOS version Windows 10 2004\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. `nuget spec MyProject.csproj`\r\n2. The generated file looks like the bellow, without any replacement token filled.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\r\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\r\n    <description>$description$</description>\r\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\r\n    <copyright>$copyright$</copyright>\r\n    <tags>Tag1 Tag2</tags>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n## Other suggested things\r\n\r\nAdditionally, I've also tried to generate the nuspec file directly from the assembly by typing : \r\n```nuget spec -a bin\\release\\MyProject.dll```\r\n\r\nIn that case, some token were replaced but some strange dependencies were added.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>DummyLib</id>\r\n    <version>1.0.1</version>\r\n    <authors>The Author</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\r\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\r\n    <description>Description</description>\r\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\r\n    <copyright>$copyright$</copyright>\r\n    <tags>Tag1 Tag2</tags>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.1\">\r\n        <dependency id=\"SampleDependency\" version=\"1.0.0\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n"},{"Id":"13763908192","Type":"IssuesEvent","CreatedAt":"2020-10-07T11:15:45","Actor":"kmteam","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/10114","RelatedDescription":"Reopened issue \"Unable to auto create nuspec file.\" (#10114) at NuGet/Home","RelatedBody":"\r\nI'm trying to generate `nuspec `manifest file from legacy _.NET Framework 4.5_ library project.\r\nAccording to [MSDN documentation](https://docs.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-visual-studio-net-framework#generate-the-initial-manifest) I can create the manifest file by typing : \r\n```\r\nnuget spec MyProject.csproj\r\n```\r\nThis should create a `MyProject.nuspec` file filled with all my project metadata (assembly version, author..)\r\nBut when I examine the generated file, **no replacement token has been filled**.\r\nMy goal is to completely automate this step, so I don't want to manually fill anything.\r\n\r\n## Details about Problem\r\n\r\nNuGet Version: 5.7.0.6726\r\nMicrosoft Visual Studio Professional 2019 (2) Version 16.7.4\r\nOS version Windows 10 2004\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. `nuget spec MyProject.csproj`\r\n2. The generated file looks like the bellow, without any replacement token filled.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\r\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\r\n    <description>$description$</description>\r\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\r\n    <copyright>$copyright$</copyright>\r\n    <tags>Tag1 Tag2</tags>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n## Other suggested things\r\n\r\nAdditionally, I've also tried to generate the nuspec file directly from the assembly by typing : \r\n```nuget spec -a bin\\release\\MyProject.dll```\r\n\r\nIn that case, some token were replaced but some strange dependencies were added.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>DummyLib</id>\r\n    <version>1.0.1</version>\r\n    <authors>The Author</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\r\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\r\n    <description>Description</description>\r\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\r\n    <copyright>$copyright$</copyright>\r\n    <tags>Tag1 Tag2</tags>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.1\">\r\n        <dependency id=\"SampleDependency\" version=\"1.0.0\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":28,"FavoriteCount":19,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-09T05:30:37.2387753Z","RunDurationInMilliseconds":1416}