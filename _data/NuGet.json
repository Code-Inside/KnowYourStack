{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35306083087","Type":"IssuesEvent","CreatedAt":"2024-02-01T09:26:21","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9793","RelatedDescription":"Opened issue \"Parameterize Framework Badges front end code using helpers\" (#9793) at NuGet/NuGetGallery","RelatedBody":"We can use a helper method to make the code in https://github.com/NuGet/NuGetGallery/blob/main/src/NuGetGallery/Views/Packages/_SupportedFrameworksBadges.cshtml more concise."},{"Id":"35278731677","Type":"IssuesEvent","CreatedAt":"2024-01-31T14:07:59","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9792","RelatedDescription":"Opened issue \"Make DateTime ISO 8601 throughout NuGet.org\" (#9792) at NuGet/NuGetGallery","RelatedBody":"\r\n<img width=\"1872\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/1288848/c06ad27e-ddc0-495e-8b19-32e05e89c89c\">\r\n\r\n\r\nhttps://github.com/NuGet/NuGetGallery/blob/7f55d930b98e3fcd0d901bb897819d96a9ebedb8/src/NuGetGallery.Services/Extensions/DateTimeExtensions.cs#L21C9-L24C10\r\n\r\n->\r\n\r\n```\r\npublic static string ToNuGetShortDateString(this DateTime self)\r\n{\r\n    return self.ToString(\"yyyy-MM-dd\");\r\n}\r\n```\r\n\r\nOr similar?"},{"Id":"35262820182","Type":"IssuesEvent","CreatedAt":"2024-01-31T03:46:01","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9791","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9791) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nStatistics on the search page don't match statistics on the package details page.\n\n### Repro Steps\n\nSearch for Fabulous Scheduler on NuGet.org and view the results: https://www.nuget.org/packages?q=fabulous+scheduler\r\nClick on the FabulousScheduler link on the results page and view the stats on the package details page: https://www.nuget.org/packages/FabulousScheduler\r\n\r\nThey don't match.\n\n### Expected Behavior\n\nBoth screen show the same download count.\n\n### Screenshots\n\nSearch results:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/14225979/b4367bef-acd3-48a0-9c9b-d7ff714aeb7e)\r\n\r\nPackage details:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/14225979/08dccb02-94a8-4f06-963d-cc593b4b31f0)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35224619781","Type":"IssuesEvent","CreatedAt":"2024-01-30T02:00:57","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9790","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Search filters panel blinks when we click 'Apply'\" (#9790) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe checkboxes for the framework generations and TFMs blink when the search page is loaded with filter parameters. \r\n\r\nThe likely cause for it how we initialize checobox states on the page. JavaScript code reads the search page URL and uses it to set the state of the checkboxes on the page. This happens after page load, which is why we see the blinking.\n\n### Repro Steps\n\n1. Select a framework generation or TFM filter checkbox, say `.NET`\r\n2. Click on `Apply`\r\n3. The `.NET` checkbox will blink after the page loads\n\n### Expected Behavior\n\nThe checkbox states should be set in the `.cshtml` itself so that we don't need to run any JavaScript.\r\n\r\nWe can modify the `FrameworkFilterGroup` objects in the view model to have a checkbox state enum with `Checked/Unchecked/Indeterminate` values.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\nSee https://github.com/NuGet/NuGetGallery/pull/9782#issuecomment-1907354318"},{"Id":"35177150237","Type":"IssuesEvent","CreatedAt":"2024-01-28T05:10:49","Actor":"toras9000","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9789","RelatedDescription":"Opened issue \"[NuGet.org Bug]: The primary search feed for api.nuget.org may be staying.\" (#9789) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe primary SearchQueryService and secondary SearchQueryService presented in the following feeds return different numbers of downloads.\r\nThe primary SearchQueryService appears to be lagging behind.\r\nhttps://api.nuget.org/v3/index.json\r\n\r\nI do not know if this is the planned behavior.\r\n\n\n### Repro Steps\n\nI compared the following two results (usnc and ussc)\r\n\r\n- Primary SearchQueryService\r\n    - https://azuresearch-usnc.nuget.org/query?q=packageid:System.Data.SQLite.Core\r\n- Secondary SearchQueryService\r\n    - https://azuresearch-ussc.nuget.org/query?q=packageid:System.Data.SQLite.Core\r\n\r\nThe following web page display is close to the secondary\r\n\r\n- Web page\r\n    - https://www.nuget.org/packages/System.Data.SQLite.Core\r\n\n\n### Expected Behavior\n\nIf this is the response for the intended reason, then this is not a particular problem.\r\nI created this issue because I had a question about the fact that the primary appears to return old results.\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35168776420","Type":"IssuesEvent","CreatedAt":"2024-01-27T11:43:52","Actor":"meokullu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9784","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Number of downloads changes among web and mobile.\" (#9784) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nOn last view, I realized number of downloads don't change on web view and I was suspecting if there is a problem through data. Then I checked, new versions of packages' download count and check mobile view to see same result. Interestingly, mobile view show correct number of downloads while web view doesn't.\n\n### Repro Steps\n\n1. Open URL on web view. https://www.nuget.org/profiles/Okullu\r\n2. Open URL on mobile view. https://www.nuget.org/profiles/Okullu\n\n### Expected Behavior\n\nSame number of downloads on both usage of same web site.\n\n### Screenshots\n\nMobile view:\r\n![photo_2024-01-23_17-36-22](https://github.com/NuGet/NuGetGallery/assets/4971757/cd22f130-df9e-410c-b74a-ad176073bbd1)\r\n\r\nWeb view: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/f30d0759-dee5-4b32-ac6e-f86a48ee1a07)\r\n\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35128052414","Type":"PullRequestEvent","CreatedAt":"2024-01-25T18:31:55","Actor":"dependabot[bot]","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9781","RelatedDescription":"Closed pull request \"Bump System.Data.SqlClient from 4.8.5 to 4.8.6 in /src/NuGet.Services.Entities\" (#9781) at NuGet/NuGetGallery","RelatedBody":"Bumps [System.Data.SqlClient](https://github.com/dotnet/corefx) from 4.8.5 to 4.8.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/corefx/releases\">System.Data.SqlClient's releases</a>.</em></p>\n<blockquote>\n<h2>.NET Core 2.1.0 RC1</h2>\n<ul>\n<li><a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1.md\">Release Notes</a></li>\n<li><a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1-known-issues.md\">Known Issues</a></li>\n<li><a href=\"https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.1.0-rc1-download.md\">Download and Install</a></li>\n</ul>\n<h2>Repos</h2>\n<ul>\n<li><a href=\"https://github.com/dotnet/coreclr/releases/tag/v2.1-rc1\">CoreCLR</a></li>\n<li><a href=\"https://github.com/dotnet/corefx/releases/tag/v2.1-rc1\">CoreFX</a></li>\n<li><a href=\"https://github.com/dotnet/core-setup/releases/tag/v2.1-rc1\">Core-Setup</a></li>\n<li><a href=\"https://github.com/dotnet/cli/releases/tag/v2.1.300-rc1-008673\">CLI</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/corefx/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=System.Data.SqlClient&package-manager=nuget&previous-version=4.8.5&new-version=4.8.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"},{"Id":"35128034899","Type":"PullRequestEvent","CreatedAt":"2024-01-25T18:31:11","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9788","RelatedDescription":"Merged pull request \"[Release 1/25/2024] Gallery dev to main\" (#9788) at NuGet/NuGetGallery","RelatedBody":"Deployment for System.data.SqlClient security vulnerability"},{"Id":"35128026785","Type":"IssuesEvent","CreatedAt":"2024-01-25T18:30:51","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9777","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Unable to upload package\" (#9777) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nHi, i'm trying to upload package using \"Upload\" button at https://www.nuget.org/packages/upload, but i'm receiving \"The package ID 'PackageName' is not available.\".\r\nI checked package name and is \"supposed\" to be not registered previously but is not letting me register anyways. Is a modification/version for an existing library registered previously on NuGet, but prefix is not registered (it hasn't have blue check)\r\n\r\nCan you help me to check if is registered or not?\r\n\r\nMy library name was: \"EasyNetQ.Legacy.NetStandard\"\r\n\r\nand former/based library is \"EasyNetQ\" (https://www.nuget.org/packages/EasyNetQ/8.0.0-beta95)\n\n### Repro Steps\n\nTry to upload new package called \"EasyNetQ.Legacy.NetStandard\"\n\n### Expected Behavior\n\nI expect nuget to let me upload my new package because is supposed to be \"free\".\n\n### Screenshots\n\n![Capture](https://github.com/NuGet/NuGetGallery/assets/16104257/fd5176ba-2f08-4c3a-b19c-f09a3915712b)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35332753370","Type":"IssuesEvent","CreatedAt":"2024-02-02T00:59:30","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13211","RelatedDescription":"Opened issue \"Read auditSources from nuget.config files\" (#13211) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nThe first step for being able to use NuGetAudit without adding nuget.org as a package source, is to add `<auditSources>` to the nuget.config file, as specified in the feature spec: https://github.com/NuGet/Home/blob/dev/accepted/2023/NuGetAudit-without-nuget.org-as-packageSource.md\r\n\r\nThe work for this issue is to add APIs to NuGet.Configuration to be able to read the sources from nuget.config files. \n\n### Additional Context and Details\n\nWhen this issue is complete, it does not mean that NuGetAudit, as part of restore, will use these sources yet. See this issue for the complete work:\r\n* https://github.com/NuGet/Home/issues/12698"},{"Id":"35325633726","Type":"IssuesEvent","CreatedAt":"2024-02-01T19:33:16","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13153","RelatedDescription":"Closed issue \"Shipped APIs tool is not doing the work to copy APIs from unshipped to shipped\" (#13153) at NuGet/Home","RelatedBody":"Repro:\r\nFrom root of enlistment NuGet.Client enlistment, run: \"dotnet run --project tools-local\\ship-public-apis\\ship-public-apis.csproj\"\r\n\r\nExpected:\r\nTool runs and generates output to the command line.\r\n\r\nActual:\r\nTool runs but does not produce any output.\r\n\r\nNotes: The tool was regressed by this commit: [ff7695dfeafa05fcf1af15e7f880c7bf8507304d ](https://github.com/NuGet/NuGet.Client/commit/ff7695dfeafa05fcf1af15e7f880c7bf8507304d) which introduced a boolean check that prevents the tool from calling into MainAsync and doing its work."},{"Id":"35320512809","Type":"IssuesEvent","CreatedAt":"2024-02-01T16:38:39","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13151","RelatedDescription":"Closed issue \"Calls in SetWarningProperties() have allocation overhead due to multiple enumeration\" (#13151) at NuGet/Home","RelatedBody":"`SetWarningProperties()` has the following implementation:\r\n\r\n    private static void SetWarningProperties(IObjectWriter writer, ProjectRestoreMetadata msbuildMetadata)\r\n    {\r\n        if (msbuildMetadata.ProjectWideWarningProperties != null &&\r\n            (msbuildMetadata.ProjectWideWarningProperties.AllWarningsAsErrors ||\r\n             msbuildMetadata.ProjectWideWarningProperties.NoWarn.Count > 0 ||\r\n             msbuildMetadata.ProjectWideWarningProperties.WarningsAsErrors.Count > 0))\r\n        {\r\n            writer.WriteObjectStart(\"warningProperties\");\r\n\r\n            SetValueIfTrue(writer, \"allWarningsAsErrors\", msbuildMetadata.ProjectWideWarningProperties.AllWarningsAsErrors);\r\n\r\n            if (msbuildMetadata.ProjectWideWarningProperties.NoWarn.Count > 0)\r\n            {\r\n                SetArrayValue(writer, \"noWarn\", msbuildMetadata\r\n                   .ProjectWideWarningProperties\r\n                   .NoWarn\r\n                   .ToArray()\r\n                   .OrderBy(c => c)\r\n                   .Select(c => c.GetName())\r\n                   .Where(c => !string.IsNullOrEmpty(c)));\r\n            }\r\n\r\n            if (msbuildMetadata.ProjectWideWarningProperties.WarningsAsErrors.Count > 0)\r\n            {\r\n                SetArrayValue(writer, \"warnAsError\", msbuildMetadata\r\n                    .ProjectWideWarningProperties\r\n                    .WarningsAsErrors\r\n                    .ToArray()\r\n                    .OrderBy(c => c)\r\n                    .Select(c => c.GetName())\r\n                    .Where(c => !string.IsNullOrEmpty(c)));\r\n            }\r\n\r\n            if (msbuildMetadata.ProjectWideWarningProperties.WarningsNotAsErrors.Count > 0)\r\n            {\r\n                SetArrayValue(writer, \"warnNotAsError\", msbuildMetadata\r\n                    .ProjectWideWarningProperties\r\n                    .WarningsNotAsErrors\r\n                    .ToArray()\r\n                    .OrderBy(c => c)\r\n                    .Select(c => c.GetName())\r\n                    .Where(c => !string.IsNullOrEmpty(c)));\r\n            }\r\n\r\n            writer.WriteObjectEnd();\r\n        }\r\n    }\r\n\r\nThere are three calls to `SetArrayValue()` that get passed a chain of Linq calls. `SetArrayValue()` has this implementation:\r\n\r\n    private static void SetArrayValue(IObjectWriter writer, string name, IEnumerable<string> values)\r\n    {\r\n        if (values != null && values.Any())\r\n        {\r\n            writer.WriteNameArray(name, values);\r\n        }\r\n    }\r\n\r\nThe intent is that the array is only written if `values` is not empty. A consequence of the current implementation is that there is some non-trivial work that is duplicated since there is multiple enumeration happening:\r\n\r\n![image](https://github.com/NuGet/Home/assets/60519722/b418add4-b489-4d6a-9c87-7e66405eedd2)\r\n\r\nFrom the trace you can see that the `Any()` call requires us to repeat all the work after the `ToArray()` call until the enumerator gets an item. For `OrderBy()` this requires consuming the entire enumerable and allocating the intermediate arrays that will hold the sorted items. The code should be restructured to avoid the multiple enumeration."},{"Id":"35303917552","Type":"IssuesEvent","CreatedAt":"2024-02-01T08:15:24","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13210","RelatedDescription":"Opened issue \"[Bug Bash] Newly added package source mapping shouldn’t be case-sensitive in “Option->NuGet Package Manager->Package Source Mapping” window\" (#13210) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.10.0.20\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:     \r\n\r\n1. Create a C# Console App (.NET Core 8.0) project in VS and open the PM UI or PMC window.   \r\n\r\n2. Click the settings button (gear button) on PM UI or PMC window.   \r\n\r\n3. Click the NuGet Package Manager->Package Source Mapping in the opened “Options” window.  \r\n\r\n4. Click the “Add” button in the “Add New Package Source Mapping” dialog, type the package pattern “Microsoft.*” in the “Package pattern:” text-box, select the “nuget.org” and click “Add” button. \r\n\r\n5. Click the “Add” button again, in the “Add New Package Source Mapping” dialog, type the package pattern “microsoft.*” in the “Package pattern:” text-box, select sources “Microsoft Visual Studio Offline Packages” and click “Add” button. \r\n\r\n6. Click “OK” button and reopen “Package Source Mapping” in option windows. \r\n\r\n#### Expected:      \r\n\r\nThe package source mappings should be consolidated automatically. The source patterns should not be treated as case-sensitive. \r\n\r\n#### Actual: \r\n\r\nThis added package source mappings were not consolidated automatically as below: \r\n![MicrosoftTeams-image (3)](https://github.com/NuGet/Home/assets/84695155/9105af5b-a797-4f67-a095-c3462f316673)\r\n#### Notes:     \r\n\r\n1. The repro rate is 100%.   \r\n2. This is not a regression since it is a new feature.     \r\n3. The issue doesn’t repro in “Package Sources” node (the newly added package source isn’t case sensitive). \n\n### Verbose Logs\n\n_No response_"},{"Id":"35292868152","Type":"IssuesEvent","CreatedAt":"2024-01-31T22:16:58","Actor":"tcartwright","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13209","RelatedDescription":"Opened issue \"Error NU1202 Package is not compatible framework, when it actually is\" (#13209) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nNuGet Version: 6.2.1.2, VS 17.8.34511.84, .NET SDK: 8.0.101\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nPlease see this SO post for an explanation of the issue: https://stackoverflow.com/questions/77881667/error-nu1202-package-is-not-compatible-framework-when-it-actually-is?noredirect=1#comment137339382_77881667\r\n\r\nI am posting this here, as I have figured out how to repro this. I will try to detail as best I can how to repro this. All packages (Project1, Project2) mentioned are posted to our internal nuget server. I was going to try to fix it, but I have to get back to my normal work. Hopefully, this helps you guys repro it, and figure out the fix.\r\n\r\nIn the same solution, I have two projects:\r\n- Project1 \r\n  - produces a package, posted to local nuget server\r\n- Project2 \r\n  - produces a package, posted to local nuget server\r\n  - references the package of Project1\r\n- Project2.Tests\r\n  - References Project2 as a ProjectReference for debugging\r\n  - Also has a reference to Project1\r\n    -  When the reference to Project1 is a ProjectReference then **the build error occurs**\r\n    - To work around this issue I changed the reference to a PackageReference. The build works, however I then lose debug capability for Project1 as I am not publishing a symbols package for Project1.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"35258390036","Type":"PullRequestEvent","CreatedAt":"2024-01-30T23:06:31","Actor":"albarry4","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13208","RelatedDescription":"Opened pull request \"NuGet in VS Code/C# Dev Kit MVP Proposal\" (#13208) at NuGet/Home","RelatedBody":"This proposal introduces a Visual Studio Code NuGet package management experience including command palette flows and integration with C# Dev Kit. It covers the initial experiences for adding, removing, and updating a NuGet package. This document covers the minimum viable product (MVP) for a NuGet command palette experience, and leaves room for growth and expansion on these initial concepts, both in enhancing these 3 features, or in the addition of more NuGet command palette features.\r\n\r\nWe are actively looking for feedback on this proposal and working to improve the experience along the way. Any suggestions or comments are welcome and appreciated!\r\n\r\nLink to Rendered Spec here"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-02T03:30:17.5839937Z","RunDurationInMilliseconds":1172}