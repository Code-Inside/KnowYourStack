{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40711687399","Type":"PullRequestEvent","CreatedAt":"2024-08-03T02:14:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10109","RelatedDescription":"Merged pull request \"Merge ServerCommon repository into NuGetGallery\" (#10109) at NuGet/NuGetGallery","RelatedBody":"Much like https://github.com/NuGet/NuGetGallery/pull/10091, but for ServerCommon.\r\n\r\nThis brings ServerCommon git tree into NuGetGallery. This is another step in merging our OSS repositories to ease development.\r\n\r\nSince the diff is so large, I don't expect you to review it all. Instead, I'll describe my process:\r\n1. Clean up the files for NuGetGallery and ServerCommon to reduce conflicts (already done).\r\n2. Merge ServerCommon `main` into NuGetGallery `dev`, allowing unrelated histories.\r\n    - NuGetGallery base: https://github.com/NuGet/NuGetGallery/commit/d8c37806c6f27171b834b40d632954082e2b5d2c\r\n    - ServerCommon base: https://github.com/NuGet/ServerCommon/commit/7816f6eb5f7817a9a9adfdca096887054879241a (v2.123.0)\r\n\r\n## Description of each additional commit:\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/71c6f67c75d32dd92c9f8f11506465c8a4cda5c7\r\n\r\nPurpose: merge the two Git histories into one, handling merge conflicts of overlapping files\r\n\r\n- Update `.gitignore` to no longer ignore the build tools (they are in the same repo now, rather than fetched by `build.ps1`\r\n- Update `.pipelines/Release-trigger.yml` to trigger the ServerCommon release also\r\n- Merge ServerCommon build steps in `build.ps1`, add assembly version and package version parameters\r\n- Merge ServerCommon test step in `test.ps1`\r\n- Merge version entries in `Directory.Packages.props` (simple union)\r\n- Merge package source mappings in `NuGet.config` (simple union)\r\n- Merge cred scan suppressions in `CredScanSuppressions.json` (simple union)\r\n- Rename ServerCommon `README.md` to `README.common.md`, for a subsequent README fix\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/a1bdaf5285dad9484b08c6671fc8377b22d27c37\r\n\r\nPurpose: merge contents of `README.common.md` into `README.md`\r\n\r\n- Update `README.md` with a new shared libraries section\r\n- Delete `README.common.md`\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/7feec13e42632546f27c144ca55d6b5ef1f25125\r\n\r\nPurpose: clean up builds scripts to allow common tests to be skip, little clean up\r\n\r\n- Add `-SkipArtifacts` and `-SkipCommon` to `build.ps1`\r\n- Add `-SkipCommon` to `test.ps1`\r\n- Enhance `NuGetGallery-CI.yaml` to use the new switches, with a new stage for building artifacts\r\n- Add a comment to mark the signing block, since it's copy pasta\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/e1e4b641bbd4780f6289d0d976914be0c429d3f5\r\n\r\nPurpose: change package reference to project reference for projects that now exist in the same repo\r\n\r\nAll of the projects in ServerCommon `src` are used by `NuGetGallery.sln` and `NuGet.Jobs.sln`. These are most of the `NuGet.Services.*` projects in our codebase (although not all like NuGet.Services.Entities which is already in NuGetGallery repo).\r\n\r\nIn some cases I needed to add a `System.Web` reference because this was coming from a transitive package reference previously.\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/04a00d50ee09ecb80beb39405842918537c8d09b\r\n\r\nPurpose: make friend assembly (`InternalsVisibleTo`) declarations in `AssemblyInfo.cs` not in MSBuild. The MSBuild method was only done in NuGetGallery.Services. I switched it so we are consistent.\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/e4f95cab753116a0b88014ad49cc3e1b0bcd8627\r\n\r\nPurpose: clean up init.ps1 to just be better\r\n\r\n- Add a group block for Azure DevOps builds (`if ($env:TF_BUILD)` condition), better log viewing in AzDO\r\n- No-op better when build tools are already up to date\r\n- Only fetch `7za` build tool, not other random things in the `tools` directory\r\n- Only checkout specific folders in the clone, rather than the whole tree (a bit faster)\r\n\r\nRepositories will need to switch away from ServerCommon's `init.ps1` in their own build scripts.\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/082cd373c44df7653d7d5262d60345e171f5d674\r\n\r\nChange `NuGetGalleryBranch` parameter to `Branch` for the NuGetGallery packages release build. This is just for consistency. I will fix the related pipeline in a separate PR."},{"Id":"40711444056","Type":"PullRequestEvent","CreatedAt":"2024-08-03T01:44:44","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10109","RelatedDescription":"Opened pull request \"Merge ServerCommon repository into NuGetGallery\" (#10109) at NuGet/NuGetGallery","RelatedBody":"Much like https://github.com/NuGet/NuGetGallery/pull/10091, but for ServerCommon.\r\n\r\nThis brings Server git tree into NuGetGallery. This is another step in merging our OSS repositories to ease development.\r\n\r\nSince the diff is so large, I don't expect you to review it all. Instead, I'll describe my process:\r\n1. Clean up the files for NuGetGallery and ServerCommon to reduce conflicts (already done).\r\n2. Merge ServerCommon `main` into NuGetGallery `dev`, allowing unrelated histories.\r\n    - NuGetGallery base: https://github.com/NuGet/NuGetGallery/commit/d8c37806c6f27171b834b40d632954082e2b5d2c\r\n    - ServerCommon base: https://github.com/NuGet/ServerCommon/commit/7816f6eb5f7817a9a9adfdca096887054879241a (v2.123.0)\r\n\r\n## Description of each additional commit:\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/71c6f67c75d32dd92c9f8f11506465c8a4cda5c7\r\n\r\nPurpose: merge the two Git histories into one, handling merge conflicts of overlapping files\r\n\r\n- Update `.gitignore` to no longer ignore the build tools (they are in the same repo now, rather than fetched by `build.ps1`\r\n- Update `.pipelines/Release-trigger.yml` to trigger the ServerCommon release also\r\n- Merge ServerCommon build steps in `build.ps1`, add assembly version and package version parameters\r\n- Merge ServerCommon test step in `test.ps1`\r\n- Merge version entries in `Directory.Packages.props` (simple union)\r\n- Merge package source mappings in `NuGet.config` (simple union)\r\n- Merge cred scan suppressions in `CredScanSuppressions.json` (simple union)\r\n- Rename NuGet.Jobs `README.md` to README.common.md`, for a subsequent README fix\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/a1bdaf5285dad9484b08c6671fc8377b22d27c37\r\n\r\nPurpose: merge contents of `README.common.md` into `README.md`\r\n\r\n- Update `README.md` with a new shared libraries section\r\n- Delete `README.common.md`\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/7feec13e42632546f27c144ca55d6b5ef1f25125\r\n\r\nPurpose: clean up builds scripts to allow common tests to be skip, little clean up\r\n\r\n- Add `-SkipArtifacts` and `-SkipCommon` to `build.ps1`\r\n- Add `-SkipCommon` to `test.ps1`\r\n- Enhance `NuGetGallery-CI.yaml` to use the new switches, with a new stage for building artifacts\r\n- Add a comment to mark the signing block, since it's copy pasta\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/e1e4b641bbd4780f6289d0d976914be0c429d3f5\r\n\r\nPurpose: change package reference to project reference for projects that now exist in the same repo\r\n\r\nAll of the projects in ServerCommon `src` are used by `NuGetGallery.sln` and `NuGet.Jobs.sln`. These are most of the `NuGet.Services.*` projects in our codebase (although not all like NuGet.Services.Entities which is already in NuGetGallery repo).\r\n\r\nIn some cases I needed to add a `System.Web` reference because this was coming from a transitive package reference previously.\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/04a00d50ee09ecb80beb39405842918537c8d09b\r\n\r\nPurpose: make friend assembly (`InternalsVisibleTo`) declarations in `AssemblyInfo.cs` not in MSBuild. The MSBuild method was only done in NuGetGallery.Services. I switched it so we are consistent.\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/e4f95cab753116a0b88014ad49cc3e1b0bcd8627\r\n\r\nPurpose: clean up init.ps1 to just be better\r\n\r\n- Add a group block for Azure DevOps builds (`if ($env:TF_BUILD)` condition), better log viewing in AzDO\r\n- No-op better when build tools are already up to date\r\n- Only fetch `7za` build tool, not other random things in the `tools` directory\r\n- Only checkout specific folders in the clone, rather than the whole tree (a bit faster)\r\n\r\nRepositories will need to switch away from ServerCommon's `init.ps1` in their own build scripts.\r\n\r\n### Commit https://github.com/NuGet/NuGetGallery/commit/082cd373c44df7653d7d5262d60345e171f5d674\r\n\r\nChange `NuGetGalleryBranch` parameter to `Branch` for the NuGetGallery packages release build. This is just for consistency. I will fix the related pipeline in a separate PR."},{"Id":"40708978381","Type":"PullRequestEvent","CreatedAt":"2024-08-02T21:47:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10108","RelatedDescription":"Merged pull request \"Update to latest ServerCommon (v2.123.0)\" (#10108) at NuGet/NuGetGallery","RelatedBody":"The enablePublicAccess values were determined based on current PROD container public access."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40767940242","Type":"IssuesEvent","CreatedAt":"2024-08-05T23:43:52","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13679","RelatedDescription":"Closed issue \"Suppress NuGetAudit warnings for specific advisories for PackageReference projects\" (#13679) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nNuGet Audit provides warnings when a package used in the project has a known vulnerability. Sometimes these vulnerabilities are limited to specific API usage, and if my project does not use those APIs, then my project is not at risk. When there is a cost to upgrading to a new version of the package (perhaps breaking changes in APIs I use), it's desirable to suppress those advisories when I'm confident I'm not at risk.\r\n\r\nTherefore, it should be possible to add `NuGetAuditSuppress` items to the project (or Directory.Build.props, etc) in order to suppress the advisory.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <!-- other project stuff left out of this example -->\r\n\r\n  <ItemGroup>\r\n    <NuGetAuditSuppress Include=\"https://github.com/advisories/GHA1234\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\n\n### Additional Context and Details\n\n[NuGet Audit docs on learn.microsoft.com](https://learn.microsoft.com/en-us/nuget/concepts/auditing-packages)\r\n\r\nblog post [NuGetAudit 2.0: Elevating Security and Trust in Package Management](https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/)"},{"Id":"40767930436","Type":"IssuesEvent","CreatedAt":"2024-08-05T23:43:09","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13679","RelatedDescription":"Opened issue \"Suppress NuGetAudit warnings for specific advisories for PackageReference projects\" (#13679) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nNuGet Audit provides warnings when a package used in the project has a known vulnerability. Sometimes these vulnerabilities are limited to specific API usage, and if my project does not use those APIs, then my project is not at risk. When there is a cost to upgrading to a new version of the package (perhaps breaking changes in APIs I use), it's desirable to suppress those advisories when I'm confident I'm not at risk.\r\n\r\nTherefore, it should be possible to add `NuGetAuditSuppress` items to the project (or Directory.Build.props, etc) in order to suppress the advisory.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <!-- other project stuff left out of this example -->\r\n\r\n  <ItemGroup>\r\n    <NuGetAuditSuppress Include=\"https://github.com/advisories/GHA1234\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\n\n### Additional Context and Details\n\n[NuGet Audit docs on learn.microsoft.com](https://learn.microsoft.com/en-us/nuget/concepts/auditing-packages)\r\n\r\nblog post [NuGetAudit 2.0: Elevating Security and Trust in Package Management](https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/)"},{"Id":"40767345937","Type":"IssuesEvent","CreatedAt":"2024-08-05T23:03:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13678","RelatedDescription":"Opened issue \"Replicate NET SDK static graph build tests \" (#13678) at NuGet/Home","RelatedBody":"See: https://github.com/dotnet/sdk/pull/42458/checks?check_run_id=28337194159\r\n\r\nMicrosoft.NET.Build.Tests.GivenThatWeWantToBuildAnAppWithoutTransitiveProjectRefs.It_builds_the_project_successfully_with_static_graph_and_isolation and https://github.com/NuGet/NuGet.Client/pull/5951 is the fixed for the changes. \r\n\r\nThis is non-standard and unlike any of the tests we have in our repo."},{"Id":"40766828372","Type":"IssuesEvent","CreatedAt":"2024-08-05T22:31:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13677","RelatedDescription":"Opened issue \"ConvertToProjectPaths  causes extra allocations due to yield usage\" (#13677) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-06T03:30:19.3267616Z","RunDurationInMilliseconds":995}