{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"33739435156","Type":"IssuesEvent","CreatedAt":"2023-11-30T03:07:11","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13055","RelatedDescription":"Opened issue \"Vulnerability InfoBar remains visible in the Solution Explorer after closing solution\" (#13055) at NuGet/Home","RelatedBody":"When closing a solution when the vulnerability infobar was shown, I noticed that the infobar remains visible. When solutions are closed, this infobar should be removed since the context is no longer present in VS.\r\n\r\n![image](https://github.com/NuGet/Home/assets/49205731/06527807-1b3b-4b1f-aa45-f2cdaf9adaf0)\r\n"},{"Id":"33736672182","Type":"IssuesEvent","CreatedAt":"2023-11-30T00:24:49","Actor":"Forgind","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13054","RelatedDescription":"Opened issue \"PackageReference to native code does not error when it's absent\" (#13054) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.0-alpha.1.23577.7\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nCopy the contents of [this folder](https://github.com/dotnet/sdk/tree/bd786cf2963e46fe866e80d1803b717d79806b1b/src/Assets/TestProjects/DesktopMinusRid).\r\nBuild it with `dotnet build /p:RuntimeIdentifier=win-x86`\r\n\r\nThat csproj has `<PackageReference Include=\"Libuv\" Version=\"1.9.1\" />`. Libuv version 1.9.1 doesn't have a win-x86 version, so it fails to copy Libuv to the output directory. When you run the exe, it fails.\r\n\r\ndotnet build, however, succeeds with no errors. This led me to hours of head-scratching.\n\n### Verbose Logs\n\n_No response_"},{"Id":"33733740957","Type":"IssuesEvent","CreatedAt":"2023-11-29T21:49:56","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13053","RelatedDescription":"Opened issue \"Better to show different icon coloring between deprecated vs vulnerable\" (#13053) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nCurrently, deprecated and vulnerable packages are using the same icon. I believe this could lead to warning fatigue for end users. There are good old packages that are still functioning as expected and do not have any security vulnerabilities. However, the maintainer has marked them as deprecated because they are no longer able to provide updates. Many enterprise customers still use the old .NET Framework and older packages, which may not have a direct replacement or expensive to migrate. Having the same icon for all packages requires mental effort to determine if it is a vulnerable one or not. Instead, if there were different colors or icons, it would be easier to take appropriate action.\r\n\r\n![image](https://github.com/NuGet/Home/assets/8766776/da4cc144-7cbd-4491-abad-e4ebbff5698e)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"33732169732","Type":"IssuesEvent","CreatedAt":"2023-11-29T20:40:11","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13052","RelatedDescription":"Opened issue \"Grammar: \"1 vulnerable package versions installed\" (should be singlular not plural)\" (#13052) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVersion 17.9.0 Preview 2.0 [34328.292.main]\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Have a single vulnerable package in your package graph\r\n2. Open PM UI on the project\r\n3. Hover over the ⚠️ in the Installed tab heading\r\n\r\nIt says \"1 vulnerable package versions installed\" when \"1 vulnerable package version installed\" would be more proper.\n\n### Verbose Logs\n\n_No response_"},{"Id":"33731801475","Type":"IssuesEvent","CreatedAt":"2023-11-29T20:23:56","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13051","RelatedDescription":"Opened issue \"Vulnerable top level package does not show ⚠️ when selected feed is non-NuGet.org\" (#13051) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nWhen you have a top level package that is vulnerable, the vulnerable indicator shows just fine when NuGet.org is a selected feed.\r\n![image](https://github.com/NuGet/Home/assets/94054/1206b53d-d5ff-4057-8ce1-fca0ccbca72a)\r\n\r\nBut when you switch to another feed, it disappears.\r\n![image](https://github.com/NuGet/Home/assets/94054/5571cd13-57b8-4361-bf79-87be3cd82147)\r\n \r\nThis is inconsistent with the \"Updates ⚠️\" heading and most shockingly with transitives (Newtonsoft.Json is transitive only in this example)\r\n![image](https://github.com/NuGet/Home/assets/94054/9148efe6-2c05-4cc1-a02c-2e7cf7288e08)\r\n\n\n### Desired Behavior\n\nShow the NuGet.org-like view on all selected sources, much like transitives.\n\n### Additional Context\n\n_No response_"},{"Id":"33731378231","Type":"IssuesEvent","CreatedAt":"2023-11-29T20:06:11","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13050","RelatedDescription":"Opened issue \"\"Manage NuGet Packages\" in vulnerability gold bar could take you to a better PM UI view\" (#13050) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nWhen you click \"Manage NuGet Packages\" in the vulnerability gold bar\r\n![image](https://github.com/NuGet/Client.Engineering/assets/94054/781d1895-bca8-4759-904f-ca929ef6b3d5)\r\n\r\nIt takes you to the solution view of PM UI. This might be hard or slow to track down the package you need to fix.\r\n![image](https://github.com/NuGet/Home/assets/94054/68e53fcb-d8c4-4f33-aaf1-05bb0551ce12)\r\n\r\n\r\n\n\n### Desired Behavior\n\nIt could take you to the Installed tab on the PM UI for the specific project that has the vulnerability. If there are multiple projects with vulnerable packages then the solution view of PM UI makes sense.\r\n\r\nIt could also pre-check the \"Show only vulnerable\" checkbox. \r\n\r\nIt could select the lowest or highest non-vulnerable version in the version selector.\r\n\r\n![image](https://github.com/NuGet/Home/assets/94054/890cec72-e9ee-4822-98e0-cbaa9a8cd810)\r\n\n\n### Additional Context\n\n_No response_"},{"Id":"33729452766","Type":"IssuesEvent","CreatedAt":"2023-11-29T18:48:43","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13049","RelatedDescription":"Opened issue \"Static graph-based restore should not enumerate every item's metadata\" (#13049) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe, dotnet.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nStatic graph-based restore uses an implementation of IMSBuildItem which is supposed to allow access to the names of all of the metadata items associated with a particular MSBuild item.  However, the names are not needed during static graph-based restore.\n\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks.Console/MSBuildProjectItemInstance.cs#L30\n\nI only found one usage in Pack which seems like its not causing any slowness issues.\n\n### Verbose Logs\n\n_No response_"},{"Id":"33718443009","Type":"IssuesEvent","CreatedAt":"2023-11-29T13:00:32","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12976","RelatedDescription":"Closed issue \"NuGet does not download any packages\" (#12976) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\n6.7.0.127\r\n\r\n### Worked before?\r\n\r\nNA\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nRun `NuGet\\Install-Package cTrader.Automate -Version 1.0.8`\r\n\r\nIn console:\r\n\r\n```\r\nPM> NuGet\\Install-Package cTrader.Automate -Version 1.0.8\r\nRestoring packages for C:\\Users\\sirin\\OneDrive\\Documents\\cAlgo\\Sources\\Robots\\Grid Level Trading\\Grid Level Trading\\Grid Level Trading.csproj...\r\n  GET https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0\r\n  NotFound https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0 1797ms\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0'.\r\nResponse status code does not indicate success: 404 (Not Found).\r\n  GET https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0\r\n  NotFound https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0 1607ms\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0'.\r\nResponse status code does not indicate success: 404 (Not Found).\r\n  GET https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0\r\n  NotFound https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0 533ms\r\nNuGet\\Install-Package : NU1301: Failed to retrieve information about 'cTrader.Automate' from remote source 'https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0'.\r\nAt line:1 char:1\r\n+ NuGet\\Install-Package cTrader.Automate -Version 1.0.8\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nNuGet\\Install-Package : Package restore failed. Rolling back package changes for 'Grid Level Trading'.\r\nAt line:1 char:1\r\n+ NuGet\\Install-Package cTrader.Automate -Version 1.0.8\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nTime Elapsed: 00:00:07.9129059\r\n```\r\n\r\nIn package manager:\r\n\r\n```\r\n[nuget.org] The V2 feed at 'https://www.nuget.org/Search()?$filter=IsAbsoluteLatestVersion&searchTerm='ctrader'&targetFramework='net6.0'&includePrerelease=true&$skip=0&$top=26&semVerLevel=2.0.0' returned an unexpected status code '404 Not Found'.\r\n```\r\n\r\n```\r\nC:\\Users\\sirin\\OneDrive\\Documents\\cAlgo\\Sources\\Robots\\Grid Level Trading\\Grid Level Trading>dotnet add package cTrader.Automate --version 1.0.8\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\sirin\\AppData\\Local\\Temp\\tmp36A7.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET for code signing.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET for timestamping.\r\ninfo : Adding PackageReference for package 'cTrader.Automate' into project 'C:\\Users\\sirin\\OneDrive\\Documents\\cAlgo\\Sources\\Robots\\Grid Level Trading\\Grid Level Trading\\Grid Level Trading.csproj'.\r\ninfo : Restoring packages for C:\\Users\\sirin\\OneDrive\\Documents\\cAlgo\\Sources\\Robots\\Grid Level Trading\\Grid Level Trading\\Grid Level Trading.csproj...\r\ninfo :   GET https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0\r\ninfo :   NotFound https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0 2400ms\r\nlog  : Retrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0'.\r\nlog  : Response status code does not indicate success: 404 (Not Found).\r\ninfo :   GET https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0\r\ninfo :   NotFound https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0 583ms\r\nlog  : Retrying 'FindPackagesByIdAsyncCore' for source 'https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0'.\r\nlog  : Response status code does not indicate success: 404 (Not Found).\r\ninfo :   GET https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0\r\ninfo :   NotFound https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0 581ms\r\nerror: NU1301: Failed to retrieve information about 'cTrader.Automate' from remote source 'https://nuget.org/FindPackagesById()?id='cTrader.Automate'&semVerLevel=2.0.0'.\r\ninfo : Package 'cTrader.Automate' is compatible with all the specified frameworks in project 'C:\\Users\\sirin\\OneDrive\\Documents\\cAlgo\\Sources\\Robots\\Grid Level Trading\\Grid Level Trading\\Grid Level Trading.csproj'.\r\nerror: Value cannot be null. (Parameter 'version')\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"33712308937","Type":"IssuesEvent","CreatedAt":"2023-11-29T09:34:44","Actor":"AR-May","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13048","RelatedDescription":"Opened issue \"[Bug]: Building test project with only one framework causes NU1701 warning on different one\" (#13048) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#9432**\r\n- Please respond to @msmolka.\r\n\r\n---\r\n\r\n_From @msmolka on Friday, November 17, 2023 7:19:59 AM_\r\n\r\n### Issue Description\n\nI have simple test project: See attached file\r\nit is multi target with one eol .dotnet version 5\r\n\r\n```xml\r\n<TargetFrameworks>net8.0;net462;net5.0</TargetFrameworks>\r\n```\r\n\r\nI've added package:\r\n\r\n```xml\r\n    <ItemGroup>\r\n        <PackageReference Include=\"Microsoft.Extensions.TimeProvider.Testing\" Version=\"8.0.0\" />\r\n    </ItemGroup>\r\n```\r\n\r\nnow building project reports warning on ALL 3 target versions. If I remove .net5 - all is correct\r\nif I add it reports warning\r\n\r\neven running simple command with forcing build only for .net 8 produces nu1701 warning.\r\n\r\n`\r\ndotnet build --framework net8.0 --no-restore\r\n`\r\n\r\n\r\n[TestMultiTarget.zip](https://github.com/dotnet/msbuild/files/13388533/TestMultiTarget.zip)\r\n\n\n### Steps to Reproduce\n\nRun attached repo with framework 8\r\n\r\n`\r\ndotnet build --framework net8.0 --no-restore\r\n`\n\n### Expected Behavior\n\nWarning only appears when building target framework 5 not any other supported ones.\n\n### Actual Behavior\n\nWarning is produced even for supported frameworks:\r\n\r\n```\r\nwarning NU1701: Package 'Microsoft.Extensions.TimeProvider.Testing 8.0.0' was restored using '.NETF \r\nramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8, .NETFramework,Version=v4.8.1' instead of the project tar \r\nget framework 'net5.0'. This package may not be fully compatible with your project. [TargetFramework=net8.0]\r\n\r\n```\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-11-30T03:30:22.5112935Z","RunDurationInMilliseconds":1255}