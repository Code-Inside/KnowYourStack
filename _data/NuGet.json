{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27459279654","Type":"IssuesEvent","CreatedAt":"2023-03-03T01:09:50","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8877","RelatedDescription":"Closed issue \"[README]: Allow Azure Pipelines Badge Images in README.md\" (#8877) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI use badge images from Azure Pipelines like this:\r\n\r\n[![Serilog.Enrichers.Span package in serilog-exceptions feed in Azure Artifacts](https://feeds.dev.azure.com/serilog-exceptions/_apis/public/Packaging/Feeds/8479813c-da6b-4677-b40d-78df8725dc9c/Packages/3f8a2a7e-8124-4987-9c44-916dba83b9d6/Badge)](https://dev.azure.com/serilog-exceptions/Serilog.Enrichers.Span/_packaging?_a=package&feed=8479813c-da6b-4677-b40d-78df8725dc9c&package=3f8a2a7e-8124-4987-9c44-916dba83b9d6&preferRelease=true)\r\n\r\nThey currently show like this on NuGet:\r\n\r\n![image](https://user-images.githubusercontent.com/2270364/141500441-233dfdef-4ab9-4db8-b4e0-c957e7d207ac.png)\r\n\r\nHere is a link to the package:\r\n\r\nhttps://www.nuget.org/packages/Serilog.Enrichers.Span/\n\n### The Elevator Pitch\n\nAzure Pipelines badges needs proper support.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27459273584","Type":"IssuesEvent","CreatedAt":"2023-03-03T01:09:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8877","RelatedDescription":"Closed issue \"[README]: Allow Azure Pipelines Badge Images in README.md\" (#8877) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI use badge images from Azure Pipelines like this:\r\n\r\n[![Serilog.Enrichers.Span package in serilog-exceptions feed in Azure Artifacts](https://feeds.dev.azure.com/serilog-exceptions/_apis/public/Packaging/Feeds/8479813c-da6b-4677-b40d-78df8725dc9c/Packages/3f8a2a7e-8124-4987-9c44-916dba83b9d6/Badge)](https://dev.azure.com/serilog-exceptions/Serilog.Enrichers.Span/_packaging?_a=package&feed=8479813c-da6b-4677-b40d-78df8725dc9c&package=3f8a2a7e-8124-4987-9c44-916dba83b9d6&preferRelease=true)\r\n\r\nThey currently show like this on NuGet:\r\n\r\n![image](https://user-images.githubusercontent.com/2270364/141500441-233dfdef-4ab9-4db8-b4e0-c957e7d207ac.png)\r\n\r\nHere is a link to the package:\r\n\r\nhttps://www.nuget.org/packages/Serilog.Enrichers.Span/\n\n### The Elevator Pitch\n\nAzure Pipelines badges needs proper support.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27457534748","Type":"IssuesEvent","CreatedAt":"2023-03-02T22:50:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9355","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The rendering of code block in Readme shows the light grey shade. \" (#9355) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe rendering of code block in Readme shows the light grey shade at each line. This looks not pretty and doesn't align with official documents.\n\n### Repro Steps\n\nOpen any package with the code block in Readme: https://www.nuget.org/packages/Newtonsoft.Json\r\n\r\nThere is the light grey shade at each line of the code block:\r\n![image](https://user-images.githubusercontent.com/41028779/214198811-570ada55-fd22-41de-b921-29f6cd16920b.png)\r\n\r\nHaving the similar rendering of code block as official documents will look much better and support package authors to use this feature.\n\n### Expected Behavior\n\nNo shade at each line of the code block in Readme.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27457347374","Type":"IssuesEvent","CreatedAt":"2023-03-02T22:39:04","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9389","RelatedDescription":"Closed issue \"[Search-by-TFM Bug] Tags sometimes spill over into the next line when there are multiple of them\" (#9389) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIn the search results, when there are very few tags, they appear on the same line as the downloads, last updated date and version, but spill over into the next line when there are multiple tags. This behavior should be consistent. \r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it. \r\n\r\n### Solution\r\nPossible solution: Always show tags on the next line so that it is consistent."},{"Id":"27456543060","Type":"PullRequestEvent","CreatedAt":"2023-03-02T21:54:02","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9407","RelatedDescription":"Merged pull request \"Update Fabric Core to 11.0.1\" (#9407) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n- Updated version 7.3.0 to 11.0.1\r\n- Removed SquaredShape icon since it's no longer needed.\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4756"},{"Id":"27440126856","Type":"PullRequestEvent","CreatedAt":"2023-03-02T10:24:34","Actor":"knocte","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9409","RelatedDescription":"Opened pull request \"Fix Script & Interactive tab #r nuget clause\" (#9409) at NuGet/NuGetGallery","RelatedBody":"It was missing the `Version=` part so it would have never worked like that."},{"Id":"27432649294","Type":"PullRequestEvent","CreatedAt":"2023-03-02T03:28:29","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9408","RelatedDescription":"Opened pull request \"[2FA] Update link msa/aad account page with legacy password account information.\" (#9408) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n* Updated wording of the \"Link Microsoft Account\" page to include Legacy Account information.\r\n* Removed **sign in** misleading inputs.\r\n\r\n### Screenshot\r\n![Legacy Account](https://user-images.githubusercontent.com/17834924/222323489-e101632a-49d0-4780-b529-e22cd5901a84.png)\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4617"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27460215925","Type":"IssuesEvent","CreatedAt":"2023-03-03T02:26:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12098","RelatedDescription":"Closed issue \"Remove GetInstalledAndTransitivePackagesAsync() API in PackageRefenceProject\" (#12098) at NuGet/Home","RelatedBody":"Since this is an NuGet-owned API, we can remove this API and use the overloaded version with includeTransitivePackages parameter.\r\n\r\n### Feedback to address\r\n\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4788#discussion_r973504991 Remove old gitpa api\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4788#discussion_r973371926 Renaming test\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4788#discussion_r973373985 Renaming test\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4788#discussion_r973374676 Better assert for gitpa\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4788#discussion_r973375838 Refactor\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4788#discussion_r973506618 nit on empty line"},{"Id":"27459922915","Type":"IssuesEvent","CreatedAt":"2023-03-03T02:03:21","Actor":"Satancito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12463","RelatedDescription":"Closed issue \"NuGet Error NU5030 - The license file 'LICENSE.txt' does not exist in the package\" (#12463) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, Visual Studio Package Management UI\n\n### Product Version\n\nMsBuild 17.5.0.10706, Dotnet 7.0.201\n\n### Worked before?\n\nVisual Studio Community 17.4.5\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n**dotnet --info**\r\n\r\n```\r\nPS C:\\Users\\Megam> dotnet --info\r\n.NET SDK:\r\n Version:   7.0.201\r\n Commit:    68f2d7e7a3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.201\\\r\n\r\nHost:\r\n  Version:      7.0.3\r\n  Architecture: x64\r\n  Commit:       0a2bda10e8\r\n\r\n.NET SDKs installed:\r\n  6.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.114 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.309 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\n**msbuild.exe -version**\r\n\r\n```\r\nPS C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Msbuild\\Current\\Bin\\amd64> .\\MSBuild.exe -version\r\nMSBuild version 17.5.0+6f08c67f3 for .NET Framework\r\n17.5.0.10706\r\n```\r\n\r\nI have an error in **Visual Studio 17.5.1**. My Visual Studio is up to date.\r\n\r\n[![vs][1]][1]\r\n\r\n**The error**\r\n\r\n[![error][2]][2]\r\n\r\nThe license file \"LICENSE.md\" does not exists in the package. [NuGet Error NU5030][3]\r\n\r\n\r\n----------\r\n\r\n\r\n**My project file (.csproj)**\r\n\r\nThe files are located in a parent folder. **SolutionFolder**/ProjectFolder\r\n\r\nI tried \r\n\r\n1. From Microsoft [NuGet Error NU5030][3] ```<None Include=\"../LICENSE.md\" Pack=\"true\" Visible=\"true\" PackagePath=\"\" />```\r\n2. Worked before but now have this error \r\n```\r\n<None Include=\"../LICENSE.md\">\r\n        <Pack>True</Pack>\r\n        <PackagePath></PackagePath>\r\n</None>\r\n```\r\n3. 1 or 2. I copied the files in the same folder of project.\r\n\r\n```<None Include=\"LICENSE.md\" Pack=\"true\" Visible=\"true\" PackagePath=\"\" />```\r\n \r\nor\r\n\r\n```\r\n<None Include=\"LICENSE.md\">\r\n        <Pack>True</Pack>\r\n        <PackagePath></PackagePath>\r\n</None>\r\n```\r\n\r\n4. `<None Include=\"$(MSBuildThisFileDirectory)LICENSE.md\" Pack=\"true\" PackagePath=\"\" />`\r\n5. `<None Include=\"$(SolutionDir)LICENSE.md\" Pack=\"true\" PackagePath=\"\" />`\r\n\r\n**Project.csproj**\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\t<PropertyGroup>\r\n\t\t<Nullable>enable</Nullable>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<TargetFramework>net6.0</TargetFramework>\r\n\t\t<PackageId>$(AssemblyName)</PackageId>\r\n\t\t<GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n\t\t<PackageLicenseFile>License.md</PackageLicenseFile>\r\n\t\t<IncludeContentInPack>false</IncludeContentInPack>\r\n\t\t<VersionPrefix>27.0.0</VersionPrefix>\r\n\t\t<VersionSuffix></VersionSuffix>\r\n\t\t<Version>27.0.0</Version>\r\n\t\t<LangVersion>latest</LangVersion>\r\n\t</PropertyGroup>\r\n\t<ItemGroup>\r\n\t\t<None Include=\"License.md\" Pack=\"true\" PackagePath=\"\" />\r\n\t</ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Screenshots**\r\n\r\n[![fullcapture][4]][4]\r\n\r\n**Content of C:\\Program Files\\dotnet\\sdk\\7.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets** \r\n\r\n```\r\n\r\n<!--\r\n***********************************************************************************************\r\nNuGet.Build.Tasks.Pack.targets\r\n\r\nWARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have\r\n          created a backup copy.  Incorrect changes to this file will make it\r\n          impossible to load or build your projects from the command-line or the IDE.\r\n\r\nCopyright (c) .NET Foundation. All rights reserved.\r\n***********************************************************************************************\r\n-->\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\r\n  <!-- Load NuGet.Build.Tasks.Pack.dll, this can be overridden to use a different version with $(NuGetPackTaskAssemblyFile) -->\r\n  <PropertyGroup Condition=\"$(NuGetPackTaskAssemblyFile) == ''\">\r\n    <NuGetPackTaskAssemblyFile Condition=\"'$(MSBuildRuntimeType)' == 'Core'\">..\\CoreCLR\\NuGet.Build.Tasks.Pack.dll</NuGetPackTaskAssemblyFile>\r\n    <NuGetPackTaskAssemblyFile Condition=\"'$(MSBuildRuntimeType)' != 'Core'\">..\\Desktop\\NuGet.Build.Tasks.Pack.dll</NuGetPackTaskAssemblyFile>\r\n  </PropertyGroup>\r\n\r\n  <!-- Tasks -->\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.PackTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.GetPackOutputItemsTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.GetProjectTargetFrameworksTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n\r\n  <PropertyGroup>\r\n    <PackageId Condition=\" '$(PackageId)' == '' \">$(AssemblyName)</PackageId>\r\n    <PackageVersion Condition=\" '$(PackageVersion)' == '' \">$(Version)</PackageVersion>\r\n    <IncludeContentInPack Condition=\"'$(IncludeContentInPack)'==''\">true</IncludeContentInPack>\r\n    <GenerateNuspecDependsOn>_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; $(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>\r\n    <PackageDescription Condition=\"'$(PackageDescription)'==''\">$(Description)</PackageDescription>\r\n    <PackageDescription Condition=\"'$(PackageDescription)'==''\">Package Description</PackageDescription>\r\n    <IsPackable Condition=\"'$(IsPackable)'=='' AND '$(IsTestProject)'=='true'\">false</IsPackable>\r\n    <IsPackable Condition=\"'$(IsPackable)'==''\">true</IsPackable>\r\n    <IncludeBuildOutput Condition=\"'$(IncludeBuildOutput)'==''\">true</IncludeBuildOutput>\r\n    <BuildOutputTargetFolder Condition=\"'$(BuildOutputTargetFolder)' == '' AND '$(IsTool)' == 'true'\">tools</BuildOutputTargetFolder>\r\n    <BuildOutputTargetFolder Condition=\"'$(BuildOutputTargetFolder)' == ''\">lib</BuildOutputTargetFolder>\r\n    <ContentTargetFolders Condition=\"'$(ContentTargetFolders)' == ''\">content;contentFiles</ContentTargetFolders>\r\n    <PackDependsOn>$(BeforePack); _IntermediatePack; GenerateNuspec; $(PackDependsOn)</PackDependsOn>\r\n    <IsInnerBuild Condition=\"'$(TargetFramework)' != '' AND '$(TargetFrameworks)' != ''\">true</IsInnerBuild>\r\n    <SymbolPackageFormat Condition=\"'$(SymbolPackageFormat)' == ''\">symbols.nupkg</SymbolPackageFormat>\r\n    <AddPriFileDependsOn Condition=\"'$(MicrosoftPortableCurrentVersionPropsHasBeenImported)' == 'true'\">DeterminePortableBuildCapabilities</AddPriFileDependsOn>\r\n    <WarnOnPackingNonPackableProject Condition=\"'$(WarnOnPackingNonPackableProject)' == ''\">false</WarnOnPackingNonPackableProject>\r\n    <ImportNuGetBuildTasksPackTargetsFromSdk Condition=\"'$(ImportNuGetBuildTasksPackTargetsFromSdk)' == ''\">false</ImportNuGetBuildTasksPackTargetsFromSdk>\r\n    <DefaultAllowedOutputExtensionsInPackageBuildOutputFolder Condition=\"'$(DefaultAllowedOutputExtensionsInPackageBuildOutputFolder)' == ''\">.dll; .exe; .winmd; .json; .pri; .xml</DefaultAllowedOutputExtensionsInPackageBuildOutputFolder>\r\n    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(DefaultAllowedOutputExtensionsInPackageBuildOutputFolder) ;$(AllowedOutputExtensionsInPackageBuildOutputFolder)</AllowedOutputExtensionsInPackageBuildOutputFolder>\r\n    <AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder Condition=\"'$(SymbolPackageFormat)' != 'snupkg'\">.pdb; .mdb; $(AllowedOutputExtensionsInPackageBuildOutputFolder); $(AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder)</AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder>\r\n    <AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder Condition=\"'$(SymbolPackageFormat)' == 'snupkg'\">.pdb</AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder>\r\n    <SuppressDependenciesWhenPacking Condition=\"'$(SuppressDependenciesWhenPacking)' == ''\">false</SuppressDependenciesWhenPacking>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(NoBuild)' == 'true' or '$(GeneratePackageOnBuild)' == 'true'\">\r\n    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(NoBuild)' != 'true' and '$(GeneratePackageOnBuild)' != 'true'\">\r\n    <GenerateNuspecDependsOn>Build;$(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectCapability Include=\"Pack\"/>\r\n  </ItemGroup>\r\n\r\n  <ItemDefinitionGroup>\r\n    <BuildOutputInPackage>\r\n      <TargetFramework>$(TargetFramework)</TargetFramework>\r\n    </BuildOutputInPackage>\r\n  </ItemDefinitionGroup>\r\n\r\n  <PropertyGroup>\r\n    <RestoreOutputPath Condition=\"'$(RestoreOutputPath)' == ''\">$(MSBuildProjectExtensionsPath)</RestoreOutputPath>\r\n    <PackageOutputPath Condition=\"'$(PackageOutputPath)' == ''\">$(BaseOutputPath)$(Configuration)\\</PackageOutputPath>\r\n    <NuspecOutputPath Condition=\"'$(NuspecOutputPath)' == ''\">$(BaseIntermediateOutputPath)$(Configuration)\\</NuspecOutputPath>\r\n  </PropertyGroup>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetAbsoluteOutputPathsForPack\r\n    Gets the absolute output paths for Pack.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetAbsoluteOutputPathsForPack\">\r\n    <ConvertToAbsolutePath Paths=\"$(RestoreOutputPath)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"RestoreOutputAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <ConvertToAbsolutePath Paths=\"$(PackageOutputPath)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"PackageOutputAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <ConvertToAbsolutePath Paths=\"$(NuspecOutputPath)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"NuspecOutputAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetOutputItemsFromPack\r\n    Gets the output '.nupkg' and '.nuspec' absolute file paths.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetOutputItemsFromPack\"\r\n          DependsOnTargets=\"_GetAbsoluteOutputPathsForPack\"\r\n          Returns=\"@(_OutputPackItems)\">\r\n\r\n    <!-- 'PackageOutputAbsolutePath' and 'NuspecOutputAbsolutePath' will be provided by '_GetAbsoluteOutputPathsForPack' target -->\r\n\r\n    <GetPackOutputItemsTask\r\n        PackageOutputPath=\"$(PackageOutputAbsolutePath)\"\r\n        NuspecOutputPath=\"$(NuspecOutputAbsolutePath)\"\r\n        PackageId=\"$(PackageId)\"\r\n        PackageVersion=\"$(PackageVersion)\"\r\n        IncludeSymbols=\"$(IncludeSymbols)\"\r\n        IncludeSource=\"$(IncludeSource)\"\r\n        SymbolPackageFormat=\"$(SymbolPackageFormat)\">\r\n\r\n      <Output\r\n        TaskParameter=\"OutputPackItems\"\r\n        ItemName=\"_OutputPackItems\" />\r\n    </GetPackOutputItemsTask>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetTargetFrameworksOutput\r\n    Read target frameworks from the project.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetTargetFrameworksOutput\"\r\n    Returns=\"@(_TargetFrameworks)\">\r\n\r\n    <PropertyGroup>\r\n      <_ProjectFrameworks/>\r\n    </PropertyGroup>\r\n\r\n      <GetProjectTargetFrameworksTask\r\n        ProjectPath=\"$(MSBuildProjectFullPath)\"\r\n        TargetFrameworks=\"$(TargetFrameworks)\"\r\n        TargetFramework=\"$(TargetFramework)\"\r\n        TargetFrameworkMoniker=\"$(TargetFrameworkMoniker)\"\r\n        TargetPlatformIdentifier=\"$(TargetPlatformIdentifier)\"\r\n        TargetPlatformVersion=\"$(TargetPlatformVersion)\"\r\n        TargetPlatformMinVersion=\"$(TargetPlatformMinVersion)\">\r\n      <Output\r\n        TaskParameter=\"ProjectTargetFrameworks\"\r\n        PropertyName=\"_ProjectFrameworks\" />\r\n    </GetProjectTargetFrameworksTask>\r\n\r\n    <ItemGroup Condition=\" '$(_ProjectFrameworks)' != '' \">\r\n      <_TargetFrameworks Include=\"$(_ProjectFrameworks.Split(';'))\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    Pack\r\n    Post Build Target\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_PackAsBuildAfterTarget\"\r\n          AfterTargets=\"Build\"\r\n          Condition=\"'$(GeneratePackageOnBuild)' == 'true' AND '$(IsInnerBuild)' != 'true'\"\r\n          DependsOnTargets=\"Pack\">\r\n  </Target>\r\n\r\n  <Target Name=\"_CleanPackageFiles\"\r\n          DependsOnTargets=\"_GetOutputItemsFromPack\"\r\n          AfterTargets=\"Clean\"\r\n          Condition=\"'$(GeneratePackageOnBuild)' == 'true' AND '$(IsInnerBuild)' != 'true'\">\r\n    <ItemGroup>\r\n      <_PackageFilesToDelete Include=\"@(_OutputPackItems)\"/>\r\n    </ItemGroup>\r\n    <Delete Files=\"@(_PackageFilesToDelete)\"/>\r\n  </Target>\r\n\r\n  <Target Name=\"_CalculateInputsOutputsForPack\" DependsOnTargets=\"_GetOutputItemsFromPack\">\r\n    <PropertyGroup Condition=\"$(ContinuePackingAfterGeneratingNuspec) == '' \">\r\n      <ContinuePackingAfterGeneratingNuspec>false</ContinuePackingAfterGeneratingNuspec>\r\n    </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n      <!--This catches changes to properties-->\r\n      <NuGetPackInput Include=\"$(MSBuildAllProjects)\"/>\r\n      <NuGetPackInput Include=\"@(_PackageFiles)\"/>\r\n      <NuGetPackInput Include=\"@(_PackageFilesToExclude)\"/>\r\n      <NuGetPackInput Include=\"@(_BuildOutputInPackage->'%(FinalOutputPath)')\"/>\r\n      <NuGetPackInput Include=\"@(_TargetPathsToSymbols->'%(FinalOutputPath)')\"/>\r\n      <NuGetPackInput Include=\"@(_SourceFiles)\"/>\r\n      <NuGetPackInput Include=\"@(_References)\"/>\r\n      <NuGetPackOutput Include=\"@(_OutputPackItems)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    Pack\r\n    Main entry point for packing packages\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"Pack\" DependsOnTargets=\"$(PackDependsOn)\">\r\n     <IsPackableFalseWarningTask Condition=\"'$(IsPackable)' == 'false' AND '$(WarnOnPackingNonPackableProject)' == 'true'\"/>\r\n  </Target>\r\n  <Target Name=\"_IntermediatePack\">\r\n    <PropertyGroup>\r\n      <ContinuePackingAfterGeneratingNuspec>true</ContinuePackingAfterGeneratingNuspec>\r\n    </PropertyGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"GenerateNuspec\"\r\n          Condition=\"'$(IsPackable)' == 'true'\"\r\n          Inputs=\"@(NuGetPackInput)\" Outputs=\"@(NuGetPackOutput)\"\r\n          DependsOnTargets=\"$(GenerateNuspecDependsOn);_CalculateInputsOutputsForPack;_GetProjectReferenceVersions;_InitializeNuspecRepositoryInformationProperties\">\r\n\r\n    <ConvertToAbsolutePath Condition=\"$(NuspecFile) != ''\" Paths=\"$(NuspecFile)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"NuspecFileAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <!-- Call Pack -->\r\n    <PackTask PackItem=\"$(PackProjectInputFile)\"\r\n              PackageFiles=\"@(_PackageFiles)\"\r\n              PackageFilesToExclude=\"@(_PackageFilesToExclude)\"\r\n              PackageVersion=\"$(PackageVersion)\"\r\n              PackageId=\"$(PackageId)\"\r\n              Title=\"$(Title)\"\r\n              Authors=\"$(Authors)\"\r\n              Description=\"$(PackageDescription)\"\r\n              Copyright=\"$(Copyright)\"\r\n              RequireLicenseAcceptance=\"$(PackageRequireLicenseAcceptance)\"\r\n              LicenseUrl=\"$(PackageLicenseUrl)\"\r\n              ProjectUrl=\"$(PackageProjectUrl)\"\r\n              IconUrl=\"$(PackageIconUrl)\"\r\n              ReleaseNotes=\"$(PackageReleaseNotes)\"\r\n              Tags=\"$(PackageTags)\"\r\n              DevelopmentDependency=\"$(DevelopmentDependency)\"\r\n              BuildOutputInPackage=\"@(_BuildOutputInPackage)\"\r\n              ProjectReferencesWithVersions=\"@(_ProjectReferencesWithVersions)\"\r\n              TargetPathsToSymbols=\"@(_TargetPathsToSymbols)\"\r\n              TargetFrameworks=\"@(_TargetFrameworks)\"\r\n              FrameworksWithSuppressedDependencies=\"@(_FrameworksWithSuppressedDependencies)\"\r\n              AssemblyName=\"$(AssemblyName)\"\r\n              PackageOutputPath=\"$(PackageOutputAbsolutePath)\"\r\n              IncludeSymbols=\"$(IncludeSymbols)\"\r\n              IncludeSource=\"$(IncludeSource)\"\r\n              PackageTypes=\"$(PackageType)\"\r\n              IsTool=\"$(IsTool)\"\r\n              RepositoryUrl=\"$(RepositoryUrl)\"\r\n              RepositoryType=\"$(RepositoryType)\"\r\n              RepositoryBranch=\"$(RepositoryBranch)\"\r\n              RepositoryCommit=\"$(RepositoryCommit)\"\r\n              SourceFiles=\"@(_SourceFiles->Distinct())\"\r\n              NoPackageAnalysis=\"$(NoPackageAnalysis)\"\r\n              NoDefaultExcludes=\"$(NoDefaultExcludes)\"\r\n              MinClientVersion=\"$(MinClientVersion)\"\r\n              Serviceable=\"$(Serviceable)\"\r\n              FrameworkAssemblyReferences=\"@(_FrameworkAssemblyReferences)\"\r\n              ContinuePackingAfterGeneratingNuspec=\"$(ContinuePackingAfterGeneratingNuspec)\"\r\n              NuspecOutputPath=\"$(NuspecOutputAbsolutePath)\"\r\n              IncludeBuildOutput=\"$(IncludeBuildOutput)\"\r\n              BuildOutputFolders=\"$(BuildOutputTargetFolder)\"\r\n              ContentTargetFolders=\"$(ContentTargetFolders)\"\r\n              RestoreOutputPath=\"$(RestoreOutputAbsolutePath)\"\r\n              NuspecFile=\"$(NuspecFileAbsolutePath)\"\r\n              NuspecBasePath=\"$(NuspecBasePath)\"\r\n              NuspecProperties=\"$(NuspecProperties)\"\r\n              AllowedOutputExtensionsInPackageBuildOutputFolder=\"$(AllowedOutputExtensionsInPackageBuildOutputFolder)\"\r\n              AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder=\"$(AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder)\"\r\n              NoWarn=\"$(NoWarn)\"\r\n              WarningsAsErrors=\"$(WarningsAsErrors)\"\r\n              WarningsNotAsErrors=\"$(WarningsNotAsErrors)\"\r\n              TreatWarningsAsErrors=\"$(TreatWarningsAsErrors)\"\r\n              OutputFileNamesWithoutVersion=\"$(OutputFileNamesWithoutVersion)\"\r\n              InstallPackageToOutputPath=\"$(InstallPackageToOutputPath)\"\r\n              SymbolPackageFormat=\"$(SymbolPackageFormat)\"\r\n              PackageLicenseFile=\"$(PackageLicenseFile)\"\r\n              PackageLicenseExpression=\"$(PackageLicenseExpression)\"\r\n              PackageLicenseExpressionVersion=\"$(PackageLicenseExpressionVersion)\"\r\n              Readme=\"$(PackageReadmeFile)\"\r\n              Deterministic=\"$(Deterministic)\"\r\n              PackageIcon=\"$(PackageIcon)\"\r\n              />\r\n  </Target>\r\n\r\n  <!--\r\n    Initialize Repository* properties from properties set by a source control package, if available in the project.\r\n  -->\r\n  <Target Name=\"_InitializeNuspecRepositoryInformationProperties\"\r\n          DependsOnTargets=\"InitializeSourceControlInformation\"\r\n          Condition=\"'$(SourceControlInformationFeatureSupported)' == 'true'\">\r\n    <PropertyGroup>\r\n      <!-- The project must specify PublishRepositoryUrl=true in order to publish the URL, in order to prevent inadvertent leak of internal URL. -->\r\n      <RepositoryUrl Condition=\"'$(RepositoryUrl)' == '' and '$(PublishRepositoryUrl)' == 'true'\">$(PrivateRepositoryUrl)</RepositoryUrl>\r\n      <RepositoryCommit Condition=\"'$(RepositoryCommit)' == ''\">$(SourceRevisionId)</RepositoryCommit>\r\n    </PropertyGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _LoadPackGraphEntryPoints\r\n    Find project entry point and load them into items.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_LoadPackInputItems\">\r\n    <!-- Allow overriding items with PackProjectInputFile -->\r\n    <PropertyGroup Condition=\"'$(PackProjectInputFile)' == ''\">\r\n      <PackProjectInputFile>$(MSBuildProjectFullPath)</PackProjectInputFile>\r\n    </PropertyGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetProjectReferenceVersions\"\r\n          Condition=\"'$(NuspecFile)' == ''\"\r\n          DependsOnTargets=\"_GetAbsoluteOutputPathsForPack;$(GetPackageVersionDependsOn)\">\r\n\r\n    <!-- 'RestoreOutputAbsolutePath' will be provided by '_GetAbsoluteOutputPathsForPack' target -->\r\n\r\n    <ConvertToAbsolutePath Condition=\"'$(ProjectAssetsFile)' != ''\" Paths=\"$(ProjectAssetsFile)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"ProjectAssetsFileAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <GetProjectReferencesFromAssetsFileTask\r\n        RestoreOutputAbsolutePath=\"$(RestoreOutputAbsolutePath)\"\r\n        ProjectAssetsFileAbsolutePath=\"$(ProjectAssetsFileAbsolutePath)\">\r\n      <Output\r\n        TaskParameter=\"ProjectReferences\"\r\n        ItemName=\"_ProjectReferencesFromAssetsFile\" />\r\n    </GetProjectReferencesFromAssetsFileTask>\r\n\r\n    <MSBuild\r\n      Projects=\"@(_ProjectReferencesFromAssetsFile)\"\r\n      Targets=\"_GetProjectVersion\"\r\n      SkipNonexistentTargets=\"true\"\r\n      SkipNonexistentProjects=\"true\"\r\n      Properties=\"BuildProjectReferences=false;\">\r\n      <Output\r\n        TaskParameter=\"TargetOutputs\"\r\n        ItemName=\"_ProjectReferencesWithVersions\"/>\r\n    </MSBuild>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetProjectVersion\" DependsOnTargets=\"$(GetPackageVersionDependsOn)\"\r\n          Returns=\"@(_ProjectPathWithVersion)\">\r\n    <ItemGroup>\r\n      <_ProjectPathWithVersion Include=\"$(MSBuildProjectFullPath)\">\r\n        <ProjectVersion Condition=\"'$(PackageVersion)' != ''\">$(PackageVersion)</ProjectVersion>\r\n        <ProjectVersion Condition=\"'$(PackageVersion)' == ''\">1.0.0</ProjectVersion>\r\n      </_ProjectPathWithVersion>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_WalkEachTargetPerFramework\">\r\n    <MSBuild\r\n      Condition=\"'$(IncludeBuildOutput)' == 'true'\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetBuildOutputFilesWithTfm\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_BuildOutputInPackage\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Condition=\"'$(TargetsForTfmSpecificContentInPackage)' != ''\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetTfmSpecificContentForPackage\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_PackageFiles\"/>\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Condition=\"'$(IncludeBuildOutput)' == 'true'\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetDebugSymbolsWithTfm\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_TargetPathsToSymbols\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Condition=\"'$(IncludeSource)' == 'true'\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"SourceFilesProjectOutputGroup\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\r\n                  BuildProjectReferences=false;\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_SourceFiles\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetFrameworkAssemblyReferences\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\r\n                  BuildProjectReferences=false;\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_FrameworkAssemblyReferences\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetFrameworksWithSuppressedDependencies\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\r\n                  BuildProjectReferences=false;\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_FrameworksWithSuppressedDependencies\" />\r\n    </MSBuild>\r\n  </Target>\r\n\r\n  <Target Name =\"_GetFrameworksWithSuppressedDependencies\" Returns=\"@(_TfmWithDependenciesSuppressed)\">\r\n    <ItemGroup>\r\n      <_TfmWithDependenciesSuppressed Include=\"$(TargetFramework)\" Condition=\"'$(SuppressDependenciesWhenPacking)' == 'true'\"/>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name =\"_GetFrameworkAssemblyReferences\" DependsOnTargets=\"ResolveReferences\" Returns=\"@(TfmSpecificFrameworkAssemblyReferences)\">\r\n    <ItemGroup>\r\n      <TfmSpecificFrameworkAssemblyReferences Include=\"@(ReferencePath->'%(OriginalItemSpec)')\"\r\n        Condition=\"'%(ReferencePath.Pack)' != 'false' AND '%(ReferencePath.ResolvedFrom)' == '{TargetFrameworkDirectory}'\">\r\n        <TargetFramework>$(TargetFramework)</TargetFramework>\r\n      </TfmSpecificFrameworkAssemblyReferences>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetBuildOutputFilesWithTfm\"\r\n          DependsOnTargets=\"BuiltProjectOutputGroup;DocumentationProjectOutputGroup;SatelliteDllsProjectOutputGroup;_AddPriFileToPackBuildOutput;$(TargetsForTfmSpecificBuildOutput)\"\r\n          Returns=\"@(BuildOutputInPackage)\">\r\n    <ItemGroup Condition=\"'$(IncludeBuildOutput)' == 'true'\">\r\n      <BuildOutputInPackage Include=\"@(SatelliteDllsProjectOutputGroupOutput);\r\n                            @(BuiltProjectOutputGroupOutput);\r\n                            @(DocumentationProjectOutputGroupOutput);\r\n                            @(_PathToPriFile)\"/>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetTfmSpecificContentForPackage\"\r\n          DependsOnTargets=\"$(TargetsForTfmSpecificContentInPackage)\"\r\n          Returns=\"@(TfmSpecificPackageFileWithRecursiveDir)\">\r\n    <!-- The below workaround needs to be done due to msbuild bug https://github.com/Microsoft/msbuild/issues/3121 -->\r\n    <ItemGroup>\r\n      <TfmSpecificPackageFileWithRecursiveDir Include=\"@(TfmSpecificPackageFile)\">\r\n        <NuGetRecursiveDir>%(TfmSpecificPackageFile.RecursiveDir)</NuGetRecursiveDir>\r\n        <BuildAction>%(TfmSpecificPackageFile.BuildAction)</BuildAction>\r\n      </TfmSpecificPackageFileWithRecursiveDir>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetDebugSymbolsWithTfm\"\r\n          DependsOnTargets=\"DebugSymbolsProjectOutputGroup;$(TargetsForTfmSpecificDebugSymbolsInPackage)\" \r\n          Returns=\"@(_TargetPathsToSymbolsWithTfm)\">\r\n    <ItemGroup Condition=\"'$(IncludeBuildOutput)' == 'true'\">\r\n      <_TargetPathsToSymbolsWithTfm Include=\"@(DebugSymbolsProjectOutputGroupOutput)\">\r\n        <TargetFramework>$(TargetFramework)</TargetFramework>\r\n      </_TargetPathsToSymbolsWithTfm>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <_TargetPathsToSymbolsWithTfm Include=\"@(TfmSpecificDebugSymbolsFile)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--Projects with target framework like UWP, Win8, wpa81 produce a Pri file\r\n    in their bin dir. This Pri file is not included in the BuiltProjectGroupOutput, and\r\n    has to be added manually here.-->\r\n  <Target Name=\"_AddPriFileToPackBuildOutput\"\r\n          Returns=\"@(_PathToPriFile)\"\r\n          DependsOnTargets=\"$(AddPriFileDependsOn)\">\r\n    <ItemGroup Condition=\"'$(IncludeProjectPriFile)' == 'true'\">\r\n      <_PathToPriFile Include=\"$(ProjectPriFullPath)\">\r\n        <FinalOutputPath>$(ProjectPriFullPath)</FinalOutputPath>\r\n        <TargetPath>$(ProjectPriFileName)</TargetPath>\r\n      </_PathToPriFile>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetPackageFiles\r\n    Entry point for generating the project to project references.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetPackageFiles\" Condition=\"$(IncludeContentInPack) == 'true'\">\r\n    <ItemGroup>\r\n      <_PackageFilesToExclude Include=\"@(Content)\" Condition=\"'%(Content.Pack)' == 'false'\"/>\r\n    </ItemGroup>\r\n    <!-- Include PackageFiles and Content of the project being packed -->\r\n    <ItemGroup>\r\n      <_PackageFiles Include=\"@(Content)\" Condition=\" %(Content.Pack) != 'false' \">\r\n        <BuildAction Condition=\"'%(Content.BuildAction)' == ''\">Content</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(Compile)\" Condition=\" %(Compile.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(Compile.BuildAction)' == ''\">Compile</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(None)\" Condition=\" %(None.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(None.BuildAction)' == ''\">None</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(EmbeddedResource)\" Condition=\" %(EmbeddedResource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(EmbeddedResource.BuildAction)' == ''\">EmbeddedResource</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(ApplicationDefinition)\" Condition=\" %(ApplicationDefinition.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(ApplicationDefinition.BuildAction)' == ''\">ApplicationDefinition</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(Page)\" Condition=\" %(Page.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(Page.BuildAction)' == ''\">Page</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(Resource)\" Condition=\" %(Resource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(Resource.BuildAction)' == ''\">Resource</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(SplashScreen)\" Condition=\" %(SplashScreen.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(SplashScreen.BuildAction)' == ''\">SplashScreen</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(DesignData)\" Condition=\" %(DesignData.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(DesignData.BuildAction)' == ''\">DesignData</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(DesignDataWithDesignTimeCreatableTypes)\" Condition=\" %(DesignDataWithDesignTimeCreatableTypes.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(DesignDataWithDesignTimeCreatableTypes.BuildAction)' == ''\">DesignDataWithDesignTimeCreatableTypes</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(CodeAnalysisDictionary)\" Condition=\" %(CodeAnalysisDictionary.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(CodeAnalysisDictionary.BuildAction)' == ''\">CodeAnalysisDictionary</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(AndroidAsset)\" Condition=\" %(AndroidAsset.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(AndroidAsset.BuildAction)' == ''\">AndroidAsset</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(AndroidResource)\" Condition=\" %(AndroidResource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(AndroidResource.BuildAction)' == ''\">AndroidResource</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(BundleResource)\" Condition=\" %(BundleResource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(BundleResource.BuildAction)' == ''\">BundleResource</BuildAction>\r\n      </_PackageFiles>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n</Project>\r\n\r\n```\r\n\r\n  [1]: https://i.stack.imgur.com/akK15.png\r\n  [2]: https://i.stack.imgur.com/IvKfL.png\r\n  [3]: https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5030\r\n  [4]: https://i.stack.imgur.com/ny04I.png\n\n### Verbose Logs\n\n```shell\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU5030\tThe license file 'License.md' does not exist in the package.\tClassLibrary1\tC:\\Program Files\\dotnet\\sdk\\7.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets\tLine 221\n```\n"},{"Id":"27459389236","Type":"IssuesEvent","CreatedAt":"2023-03-03T01:19:56","Actor":"nat42","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12465","RelatedDescription":"Opened issue \"Support CMake C++ Projects (with Visual Studio Solution/Project)\" (#12465) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\n#12204 proposed changes to the Nuget CLI and was rejected. It looks like it was raised per issue https://gitlab.kitware.com/cmake/cmake/-/issues/24103 with CMake, where VS_PACKAGE_REFERENCES can not be made to work with native packages & C/C++.\r\n\r\nUntil today I didn't expect to have an easy time with CMake, Nuget and native C/C++ code, I just expect nuget to treat me right when I work within the .net ecosystem; however Microsoft tells me to use Nuget to use the Edge WebView2, even with native WIN32 C++ code https://learn.microsoft.com/en-us/microsoft-edge/webview2/get-started/win32\r\n\r\nI don't care about the Nuget CLI change specifically requested in #12204 but if Microsoft is endorsing Nuget as the way to get the libraries and headers needed to build against WebView2, I think it's reasonable to expect it (Nuget) to work with CMake, as CMake is otherwise encouraged / supported.\n\n### Additional Context and Details\n\nSee also open tickets #6731, #8874 and maybe #10144 I believe these were all raised before the CMake team added some support via the CMake VS_PACKAGE_REFERENCES property. Per the gitlab ticket referenced the CMake team appears to need some mechanism to make this work from the Microsoft / Nuget side of things, if not the change to the Nuget CLI suggested by [gh-andre](https://github.com/gh-andre) than I kindly ask the Nuget team proposes and implements an alternative for CMake support.\r\n\r\n"},{"Id":"27457776541","Type":"IssuesEvent","CreatedAt":"2023-03-02T23:05:35","Actor":"kpspence","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12464","RelatedDescription":"Opened issue \"NuGet.Commands.LockFileBuilder  KeyNotFoundException Exception\" (#12464) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 7.0.201; nuget 6.5.0.136\n\n### Worked before?\n\ndotnet 7.0.101; nuget 6.4.0.117\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n# Error\r\n\r\n- 7.0.201 sdk results in **System.Collections.Generic.KeyNotFoundException** exception during dotnet restore\r\n- NuGet.Commands.LockFileBuilder.GetLibraryDependenciesForCentralTransitiveDependencies\r\n- Cannot duplicate on windows docker build but repeatedly on Jenkins server instance\r\n- Always fails on same library System.Collections.Generic.KeyNotFoundException which has been downloaded per logs and file listing at end.\r\n\r\n# Failure Setup - Docker build\r\n\r\nFrom mcr.microsoft.com/dotnet/sdk:7.0.201-bullseye-slim\r\n\r\nStep 13/57 : RUN dotnet nuget --version\r\nNuGet Command Line\r\n6.5.0.136\r\nStep 14/57 : RUN dotnet --version\r\n7.0.201\r\n\r\nStep 56/57 : RUN dotnet restore -v diag \"Source/src/spc/SpcService/SpcService.csproj\"\r\n\r\n## Exception Details\r\n\r\n```\r\n21:07:13.724     1>/usr/share/dotnet/sdk/7.0.201/NuGet.targets(132,5): error : The given key 'System.Runtime.InteropServices' was not present in the dictionary. [/src/Source/src/spc/SpcService/SpcService.csproj]\r\n                     System.Collections.Generic.KeyNotFoundException: The given key 'System.Runtime.InteropServices' was not present in the dictionary.\r\n                        at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n                        at NuGet.Commands.LockFileBuilder.GetLibraryDependenciesForCentralTransitiveDependencies(RestoreTargetGraph targetGraph, TargetFrameworkInformation targetFrameworkInformation, Boolean centralPackageTransitivePinningEnabled)+MoveNext()\r\n                        at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n                        at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n                        at NuGet.Commands.LockFileBuilder.AddCentralTransitiveDependencyGroupsForPackageReference(PackageSpec project, LockFile lockFile, IEnumerable`1 targetGraphs)\r\n                        at NuGet.Commands.LockFileBuilder.CreateLockFile(LockFile previousLockFile, PackageSpec project, IEnumerable`1 targetGraphs, IReadOnlyList`1 localRepositories, RemoteWalkContext context, LockFileBuilderCache lockFileBuilderCache)\r\n                        at NuGet.Commands.RestoreCommand.BuildAssetsFile(LockFile existingLockFile, PackageSpec project, IEnumerable`1 graphs, IReadOnlyList`1 localRepositories, RemoteWalkContext contextForProject)\r\n                        at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, IRestoreProgressReporter progressReporter, CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n                        at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreArgs, CancellationToken token)\r\n                        at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n                        at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\n                        at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log) (TaskId:407)\r\n                   Done executing task \"RestoreTask\" -- FAILED. (TaskId:407)\r\n```\r\n\r\n# Successful Setup - Docker build\r\n\r\nmcr.microsoft.com/dotnet/sdk:7.0.101-bullseye-slim\r\nStep 13/57 : RUN dotnet nuget --version\r\nNuGet Command Line\r\n6.4.0.117\r\n\r\nStep 14/57 : RUN dotnet --version\r\n ---> Running in 3937be4b4697\r\n7.0.101\r\n\r\nStep 56/57 : RUN dotnet restore -v diag \"Source/src/spc/SpcService/SpcService.csproj\"\r\n\r\n```\r\nDone executing task \"RestoreTask\". (TaskId:357)\r\n22:32:24.804     1>Done building target \"Restore\" in project \"SpcService.csproj\".: (TargetId:411)\r\n22:32:24.804     1>Done Building Project \"/src/Source/src/spc/SpcService/SpcService.csproj\" (Restore target(s)).\r\n```\r\n[Failed-7.0.201.txt](https://github.com/NuGet/Home/files/10876534/Failed-7.0.201.txt)\r\n[Succeed-7.0.101.txt](https://github.com/NuGet/Home/files/10876535/Succeed-7.0.101.txt)\r\n\n\n### Verbose Logs\n\n```shell\nDiagnostic logs attached above\n```\n"},{"Id":"27455820240","Type":"IssuesEvent","CreatedAt":"2023-03-02T21:15:07","Actor":"Satancito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12463","RelatedDescription":"Opened issue \"NuGet Error NU5030 - The license file 'LICENSE.txt' does not exist in the package\" (#12463) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, Visual Studio Package Management UI\n\n### Product Version\n\nMsBuild 17.5.0.10706, Dotnet 7.0.201\n\n### Worked before?\n\nVisual Studio Community 17.4.5\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n**dotnet --info**\r\n\r\n```\r\nPS C:\\Users\\Megam> dotnet --info\r\n.NET SDK:\r\n Version:   7.0.201\r\n Commit:    68f2d7e7a3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.201\\\r\n\r\nHost:\r\n  Version:      7.0.3\r\n  Architecture: x64\r\n  Commit:       0a2bda10e8\r\n\r\n.NET SDKs installed:\r\n  6.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.114 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.309 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\n**msbuild.exe -version**\r\n\r\n```\r\nPS C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Msbuild\\Current\\Bin\\amd64> .\\MSBuild.exe -version\r\nMSBuild version 17.5.0+6f08c67f3 for .NET Framework\r\n17.5.0.10706\r\n```\r\n\r\nI have an error in **Visual Studio 17.5.1**. My Visual Studio is up to date.\r\n\r\n[![vs][1]][1]\r\n\r\n**The error**\r\n\r\n[![error][2]][2]\r\n\r\nThe license file \"LICENSE.md\" does not exists in the package. [NuGet Error NU5030][3]\r\n\r\n\r\n----------\r\n\r\n\r\n**My project file (.csproj)**\r\n\r\nThe files are located in a parent folder. **SolutionFolder**/ProjectFolder\r\n\r\nI tried \r\n\r\n1. From Microsoft [NuGet Error NU5030][3] ```<None Include=\"../LICENSE.md\" Pack=\"true\" Visible=\"true\" PackagePath=\"\" />```\r\n2. Worked before but now have this error \r\n```\r\n<None Include=\"../LICENSE.md\">\r\n        <Pack>True</Pack>\r\n        <PackagePath></PackagePath>\r\n</None>\r\n```\r\n3. 1 or 2. I copied the files in the same folder of project.\r\n\r\n```<None Include=\"LICENSE.md\" Pack=\"true\" Visible=\"true\" PackagePath=\"\" />```\r\n \r\nor\r\n\r\n```\r\n<None Include=\"LICENSE.md\">\r\n        <Pack>True</Pack>\r\n        <PackagePath></PackagePath>\r\n</None>\r\n```\r\n\r\n4. `<None Include=\"$(MSBuildThisFileDirectory)LICENSE.md\" Pack=\"true\" PackagePath=\"\" />`\r\n5. `<None Include=\"$(SolutionDir)LICENSE.md\" Pack=\"true\" PackagePath=\"\" />`\r\n\r\n**Project.csproj**\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\t<PropertyGroup>\r\n\t\t<Nullable>enable</Nullable>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<TargetFramework>net6.0</TargetFramework>\r\n\t\t<PackageId>$(AssemblyName)</PackageId>\r\n\t\t<GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n\t\t<PackageLicenseFile>License.md</PackageLicenseFile>\r\n\t\t<IncludeContentInPack>false</IncludeContentInPack>\r\n\t\t<VersionPrefix>27.0.0</VersionPrefix>\r\n\t\t<VersionSuffix></VersionSuffix>\r\n\t\t<Version>27.0.0</Version>\r\n\t\t<LangVersion>latest</LangVersion>\r\n\t</PropertyGroup>\r\n\t<ItemGroup>\r\n\t\t<None Include=\"License.md\" Pack=\"true\" PackagePath=\"\" />\r\n\t</ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Screenshots**\r\n\r\n[![fullcapture][4]][4]\r\n\r\n**Content of C:\\Program Files\\dotnet\\sdk\\7.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets** \r\n\r\n```\r\n\r\n<!--\r\n***********************************************************************************************\r\nNuGet.Build.Tasks.Pack.targets\r\n\r\nWARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have\r\n          created a backup copy.  Incorrect changes to this file will make it\r\n          impossible to load or build your projects from the command-line or the IDE.\r\n\r\nCopyright (c) .NET Foundation. All rights reserved.\r\n***********************************************************************************************\r\n-->\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\r\n  <!-- Load NuGet.Build.Tasks.Pack.dll, this can be overridden to use a different version with $(NuGetPackTaskAssemblyFile) -->\r\n  <PropertyGroup Condition=\"$(NuGetPackTaskAssemblyFile) == ''\">\r\n    <NuGetPackTaskAssemblyFile Condition=\"'$(MSBuildRuntimeType)' == 'Core'\">..\\CoreCLR\\NuGet.Build.Tasks.Pack.dll</NuGetPackTaskAssemblyFile>\r\n    <NuGetPackTaskAssemblyFile Condition=\"'$(MSBuildRuntimeType)' != 'Core'\">..\\Desktop\\NuGet.Build.Tasks.Pack.dll</NuGetPackTaskAssemblyFile>\r\n  </PropertyGroup>\r\n\r\n  <!-- Tasks -->\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.PackTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.GetPackOutputItemsTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.GetProjectTargetFrameworksTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n  <UsingTask TaskName=\"NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask\" AssemblyFile=\"$(NuGetPackTaskAssemblyFile)\" />\r\n\r\n  <PropertyGroup>\r\n    <PackageId Condition=\" '$(PackageId)' == '' \">$(AssemblyName)</PackageId>\r\n    <PackageVersion Condition=\" '$(PackageVersion)' == '' \">$(Version)</PackageVersion>\r\n    <IncludeContentInPack Condition=\"'$(IncludeContentInPack)'==''\">true</IncludeContentInPack>\r\n    <GenerateNuspecDependsOn>_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; $(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>\r\n    <PackageDescription Condition=\"'$(PackageDescription)'==''\">$(Description)</PackageDescription>\r\n    <PackageDescription Condition=\"'$(PackageDescription)'==''\">Package Description</PackageDescription>\r\n    <IsPackable Condition=\"'$(IsPackable)'=='' AND '$(IsTestProject)'=='true'\">false</IsPackable>\r\n    <IsPackable Condition=\"'$(IsPackable)'==''\">true</IsPackable>\r\n    <IncludeBuildOutput Condition=\"'$(IncludeBuildOutput)'==''\">true</IncludeBuildOutput>\r\n    <BuildOutputTargetFolder Condition=\"'$(BuildOutputTargetFolder)' == '' AND '$(IsTool)' == 'true'\">tools</BuildOutputTargetFolder>\r\n    <BuildOutputTargetFolder Condition=\"'$(BuildOutputTargetFolder)' == ''\">lib</BuildOutputTargetFolder>\r\n    <ContentTargetFolders Condition=\"'$(ContentTargetFolders)' == ''\">content;contentFiles</ContentTargetFolders>\r\n    <PackDependsOn>$(BeforePack); _IntermediatePack; GenerateNuspec; $(PackDependsOn)</PackDependsOn>\r\n    <IsInnerBuild Condition=\"'$(TargetFramework)' != '' AND '$(TargetFrameworks)' != ''\">true</IsInnerBuild>\r\n    <SymbolPackageFormat Condition=\"'$(SymbolPackageFormat)' == ''\">symbols.nupkg</SymbolPackageFormat>\r\n    <AddPriFileDependsOn Condition=\"'$(MicrosoftPortableCurrentVersionPropsHasBeenImported)' == 'true'\">DeterminePortableBuildCapabilities</AddPriFileDependsOn>\r\n    <WarnOnPackingNonPackableProject Condition=\"'$(WarnOnPackingNonPackableProject)' == ''\">false</WarnOnPackingNonPackableProject>\r\n    <ImportNuGetBuildTasksPackTargetsFromSdk Condition=\"'$(ImportNuGetBuildTasksPackTargetsFromSdk)' == ''\">false</ImportNuGetBuildTasksPackTargetsFromSdk>\r\n    <DefaultAllowedOutputExtensionsInPackageBuildOutputFolder Condition=\"'$(DefaultAllowedOutputExtensionsInPackageBuildOutputFolder)' == ''\">.dll; .exe; .winmd; .json; .pri; .xml</DefaultAllowedOutputExtensionsInPackageBuildOutputFolder>\r\n    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(DefaultAllowedOutputExtensionsInPackageBuildOutputFolder) ;$(AllowedOutputExtensionsInPackageBuildOutputFolder)</AllowedOutputExtensionsInPackageBuildOutputFolder>\r\n    <AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder Condition=\"'$(SymbolPackageFormat)' != 'snupkg'\">.pdb; .mdb; $(AllowedOutputExtensionsInPackageBuildOutputFolder); $(AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder)</AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder>\r\n    <AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder Condition=\"'$(SymbolPackageFormat)' == 'snupkg'\">.pdb</AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder>\r\n    <SuppressDependenciesWhenPacking Condition=\"'$(SuppressDependenciesWhenPacking)' == ''\">false</SuppressDependenciesWhenPacking>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(NoBuild)' == 'true' or '$(GeneratePackageOnBuild)' == 'true'\">\r\n    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(NoBuild)' != 'true' and '$(GeneratePackageOnBuild)' != 'true'\">\r\n    <GenerateNuspecDependsOn>Build;$(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectCapability Include=\"Pack\"/>\r\n  </ItemGroup>\r\n\r\n  <ItemDefinitionGroup>\r\n    <BuildOutputInPackage>\r\n      <TargetFramework>$(TargetFramework)</TargetFramework>\r\n    </BuildOutputInPackage>\r\n  </ItemDefinitionGroup>\r\n\r\n  <PropertyGroup>\r\n    <RestoreOutputPath Condition=\"'$(RestoreOutputPath)' == ''\">$(MSBuildProjectExtensionsPath)</RestoreOutputPath>\r\n    <PackageOutputPath Condition=\"'$(PackageOutputPath)' == ''\">$(BaseOutputPath)$(Configuration)\\</PackageOutputPath>\r\n    <NuspecOutputPath Condition=\"'$(NuspecOutputPath)' == ''\">$(BaseIntermediateOutputPath)$(Configuration)\\</NuspecOutputPath>\r\n  </PropertyGroup>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetAbsoluteOutputPathsForPack\r\n    Gets the absolute output paths for Pack.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetAbsoluteOutputPathsForPack\">\r\n    <ConvertToAbsolutePath Paths=\"$(RestoreOutputPath)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"RestoreOutputAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <ConvertToAbsolutePath Paths=\"$(PackageOutputPath)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"PackageOutputAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <ConvertToAbsolutePath Paths=\"$(NuspecOutputPath)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"NuspecOutputAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetOutputItemsFromPack\r\n    Gets the output '.nupkg' and '.nuspec' absolute file paths.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetOutputItemsFromPack\"\r\n          DependsOnTargets=\"_GetAbsoluteOutputPathsForPack\"\r\n          Returns=\"@(_OutputPackItems)\">\r\n\r\n    <!-- 'PackageOutputAbsolutePath' and 'NuspecOutputAbsolutePath' will be provided by '_GetAbsoluteOutputPathsForPack' target -->\r\n\r\n    <GetPackOutputItemsTask\r\n        PackageOutputPath=\"$(PackageOutputAbsolutePath)\"\r\n        NuspecOutputPath=\"$(NuspecOutputAbsolutePath)\"\r\n        PackageId=\"$(PackageId)\"\r\n        PackageVersion=\"$(PackageVersion)\"\r\n        IncludeSymbols=\"$(IncludeSymbols)\"\r\n        IncludeSource=\"$(IncludeSource)\"\r\n        SymbolPackageFormat=\"$(SymbolPackageFormat)\">\r\n\r\n      <Output\r\n        TaskParameter=\"OutputPackItems\"\r\n        ItemName=\"_OutputPackItems\" />\r\n    </GetPackOutputItemsTask>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetTargetFrameworksOutput\r\n    Read target frameworks from the project.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetTargetFrameworksOutput\"\r\n    Returns=\"@(_TargetFrameworks)\">\r\n\r\n    <PropertyGroup>\r\n      <_ProjectFrameworks/>\r\n    </PropertyGroup>\r\n\r\n      <GetProjectTargetFrameworksTask\r\n        ProjectPath=\"$(MSBuildProjectFullPath)\"\r\n        TargetFrameworks=\"$(TargetFrameworks)\"\r\n        TargetFramework=\"$(TargetFramework)\"\r\n        TargetFrameworkMoniker=\"$(TargetFrameworkMoniker)\"\r\n        TargetPlatformIdentifier=\"$(TargetPlatformIdentifier)\"\r\n        TargetPlatformVersion=\"$(TargetPlatformVersion)\"\r\n        TargetPlatformMinVersion=\"$(TargetPlatformMinVersion)\">\r\n      <Output\r\n        TaskParameter=\"ProjectTargetFrameworks\"\r\n        PropertyName=\"_ProjectFrameworks\" />\r\n    </GetProjectTargetFrameworksTask>\r\n\r\n    <ItemGroup Condition=\" '$(_ProjectFrameworks)' != '' \">\r\n      <_TargetFrameworks Include=\"$(_ProjectFrameworks.Split(';'))\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    Pack\r\n    Post Build Target\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_PackAsBuildAfterTarget\"\r\n          AfterTargets=\"Build\"\r\n          Condition=\"'$(GeneratePackageOnBuild)' == 'true' AND '$(IsInnerBuild)' != 'true'\"\r\n          DependsOnTargets=\"Pack\">\r\n  </Target>\r\n\r\n  <Target Name=\"_CleanPackageFiles\"\r\n          DependsOnTargets=\"_GetOutputItemsFromPack\"\r\n          AfterTargets=\"Clean\"\r\n          Condition=\"'$(GeneratePackageOnBuild)' == 'true' AND '$(IsInnerBuild)' != 'true'\">\r\n    <ItemGroup>\r\n      <_PackageFilesToDelete Include=\"@(_OutputPackItems)\"/>\r\n    </ItemGroup>\r\n    <Delete Files=\"@(_PackageFilesToDelete)\"/>\r\n  </Target>\r\n\r\n  <Target Name=\"_CalculateInputsOutputsForPack\" DependsOnTargets=\"_GetOutputItemsFromPack\">\r\n    <PropertyGroup Condition=\"$(ContinuePackingAfterGeneratingNuspec) == '' \">\r\n      <ContinuePackingAfterGeneratingNuspec>false</ContinuePackingAfterGeneratingNuspec>\r\n    </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n      <!--This catches changes to properties-->\r\n      <NuGetPackInput Include=\"$(MSBuildAllProjects)\"/>\r\n      <NuGetPackInput Include=\"@(_PackageFiles)\"/>\r\n      <NuGetPackInput Include=\"@(_PackageFilesToExclude)\"/>\r\n      <NuGetPackInput Include=\"@(_BuildOutputInPackage->'%(FinalOutputPath)')\"/>\r\n      <NuGetPackInput Include=\"@(_TargetPathsToSymbols->'%(FinalOutputPath)')\"/>\r\n      <NuGetPackInput Include=\"@(_SourceFiles)\"/>\r\n      <NuGetPackInput Include=\"@(_References)\"/>\r\n      <NuGetPackOutput Include=\"@(_OutputPackItems)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    Pack\r\n    Main entry point for packing packages\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"Pack\" DependsOnTargets=\"$(PackDependsOn)\">\r\n     <IsPackableFalseWarningTask Condition=\"'$(IsPackable)' == 'false' AND '$(WarnOnPackingNonPackableProject)' == 'true'\"/>\r\n  </Target>\r\n  <Target Name=\"_IntermediatePack\">\r\n    <PropertyGroup>\r\n      <ContinuePackingAfterGeneratingNuspec>true</ContinuePackingAfterGeneratingNuspec>\r\n    </PropertyGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"GenerateNuspec\"\r\n          Condition=\"'$(IsPackable)' == 'true'\"\r\n          Inputs=\"@(NuGetPackInput)\" Outputs=\"@(NuGetPackOutput)\"\r\n          DependsOnTargets=\"$(GenerateNuspecDependsOn);_CalculateInputsOutputsForPack;_GetProjectReferenceVersions;_InitializeNuspecRepositoryInformationProperties\">\r\n\r\n    <ConvertToAbsolutePath Condition=\"$(NuspecFile) != ''\" Paths=\"$(NuspecFile)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"NuspecFileAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <!-- Call Pack -->\r\n    <PackTask PackItem=\"$(PackProjectInputFile)\"\r\n              PackageFiles=\"@(_PackageFiles)\"\r\n              PackageFilesToExclude=\"@(_PackageFilesToExclude)\"\r\n              PackageVersion=\"$(PackageVersion)\"\r\n              PackageId=\"$(PackageId)\"\r\n              Title=\"$(Title)\"\r\n              Authors=\"$(Authors)\"\r\n              Description=\"$(PackageDescription)\"\r\n              Copyright=\"$(Copyright)\"\r\n              RequireLicenseAcceptance=\"$(PackageRequireLicenseAcceptance)\"\r\n              LicenseUrl=\"$(PackageLicenseUrl)\"\r\n              ProjectUrl=\"$(PackageProjectUrl)\"\r\n              IconUrl=\"$(PackageIconUrl)\"\r\n              ReleaseNotes=\"$(PackageReleaseNotes)\"\r\n              Tags=\"$(PackageTags)\"\r\n              DevelopmentDependency=\"$(DevelopmentDependency)\"\r\n              BuildOutputInPackage=\"@(_BuildOutputInPackage)\"\r\n              ProjectReferencesWithVersions=\"@(_ProjectReferencesWithVersions)\"\r\n              TargetPathsToSymbols=\"@(_TargetPathsToSymbols)\"\r\n              TargetFrameworks=\"@(_TargetFrameworks)\"\r\n              FrameworksWithSuppressedDependencies=\"@(_FrameworksWithSuppressedDependencies)\"\r\n              AssemblyName=\"$(AssemblyName)\"\r\n              PackageOutputPath=\"$(PackageOutputAbsolutePath)\"\r\n              IncludeSymbols=\"$(IncludeSymbols)\"\r\n              IncludeSource=\"$(IncludeSource)\"\r\n              PackageTypes=\"$(PackageType)\"\r\n              IsTool=\"$(IsTool)\"\r\n              RepositoryUrl=\"$(RepositoryUrl)\"\r\n              RepositoryType=\"$(RepositoryType)\"\r\n              RepositoryBranch=\"$(RepositoryBranch)\"\r\n              RepositoryCommit=\"$(RepositoryCommit)\"\r\n              SourceFiles=\"@(_SourceFiles->Distinct())\"\r\n              NoPackageAnalysis=\"$(NoPackageAnalysis)\"\r\n              NoDefaultExcludes=\"$(NoDefaultExcludes)\"\r\n              MinClientVersion=\"$(MinClientVersion)\"\r\n              Serviceable=\"$(Serviceable)\"\r\n              FrameworkAssemblyReferences=\"@(_FrameworkAssemblyReferences)\"\r\n              ContinuePackingAfterGeneratingNuspec=\"$(ContinuePackingAfterGeneratingNuspec)\"\r\n              NuspecOutputPath=\"$(NuspecOutputAbsolutePath)\"\r\n              IncludeBuildOutput=\"$(IncludeBuildOutput)\"\r\n              BuildOutputFolders=\"$(BuildOutputTargetFolder)\"\r\n              ContentTargetFolders=\"$(ContentTargetFolders)\"\r\n              RestoreOutputPath=\"$(RestoreOutputAbsolutePath)\"\r\n              NuspecFile=\"$(NuspecFileAbsolutePath)\"\r\n              NuspecBasePath=\"$(NuspecBasePath)\"\r\n              NuspecProperties=\"$(NuspecProperties)\"\r\n              AllowedOutputExtensionsInPackageBuildOutputFolder=\"$(AllowedOutputExtensionsInPackageBuildOutputFolder)\"\r\n              AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder=\"$(AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder)\"\r\n              NoWarn=\"$(NoWarn)\"\r\n              WarningsAsErrors=\"$(WarningsAsErrors)\"\r\n              WarningsNotAsErrors=\"$(WarningsNotAsErrors)\"\r\n              TreatWarningsAsErrors=\"$(TreatWarningsAsErrors)\"\r\n              OutputFileNamesWithoutVersion=\"$(OutputFileNamesWithoutVersion)\"\r\n              InstallPackageToOutputPath=\"$(InstallPackageToOutputPath)\"\r\n              SymbolPackageFormat=\"$(SymbolPackageFormat)\"\r\n              PackageLicenseFile=\"$(PackageLicenseFile)\"\r\n              PackageLicenseExpression=\"$(PackageLicenseExpression)\"\r\n              PackageLicenseExpressionVersion=\"$(PackageLicenseExpressionVersion)\"\r\n              Readme=\"$(PackageReadmeFile)\"\r\n              Deterministic=\"$(Deterministic)\"\r\n              PackageIcon=\"$(PackageIcon)\"\r\n              />\r\n  </Target>\r\n\r\n  <!--\r\n    Initialize Repository* properties from properties set by a source control package, if available in the project.\r\n  -->\r\n  <Target Name=\"_InitializeNuspecRepositoryInformationProperties\"\r\n          DependsOnTargets=\"InitializeSourceControlInformation\"\r\n          Condition=\"'$(SourceControlInformationFeatureSupported)' == 'true'\">\r\n    <PropertyGroup>\r\n      <!-- The project must specify PublishRepositoryUrl=true in order to publish the URL, in order to prevent inadvertent leak of internal URL. -->\r\n      <RepositoryUrl Condition=\"'$(RepositoryUrl)' == '' and '$(PublishRepositoryUrl)' == 'true'\">$(PrivateRepositoryUrl)</RepositoryUrl>\r\n      <RepositoryCommit Condition=\"'$(RepositoryCommit)' == ''\">$(SourceRevisionId)</RepositoryCommit>\r\n    </PropertyGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _LoadPackGraphEntryPoints\r\n    Find project entry point and load them into items.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_LoadPackInputItems\">\r\n    <!-- Allow overriding items with PackProjectInputFile -->\r\n    <PropertyGroup Condition=\"'$(PackProjectInputFile)' == ''\">\r\n      <PackProjectInputFile>$(MSBuildProjectFullPath)</PackProjectInputFile>\r\n    </PropertyGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetProjectReferenceVersions\"\r\n          Condition=\"'$(NuspecFile)' == ''\"\r\n          DependsOnTargets=\"_GetAbsoluteOutputPathsForPack;$(GetPackageVersionDependsOn)\">\r\n\r\n    <!-- 'RestoreOutputAbsolutePath' will be provided by '_GetAbsoluteOutputPathsForPack' target -->\r\n\r\n    <ConvertToAbsolutePath Condition=\"'$(ProjectAssetsFile)' != ''\" Paths=\"$(ProjectAssetsFile)\">\r\n      <Output TaskParameter=\"AbsolutePaths\" PropertyName=\"ProjectAssetsFileAbsolutePath\" />\r\n    </ConvertToAbsolutePath>\r\n\r\n    <GetProjectReferencesFromAssetsFileTask\r\n        RestoreOutputAbsolutePath=\"$(RestoreOutputAbsolutePath)\"\r\n        ProjectAssetsFileAbsolutePath=\"$(ProjectAssetsFileAbsolutePath)\">\r\n      <Output\r\n        TaskParameter=\"ProjectReferences\"\r\n        ItemName=\"_ProjectReferencesFromAssetsFile\" />\r\n    </GetProjectReferencesFromAssetsFileTask>\r\n\r\n    <MSBuild\r\n      Projects=\"@(_ProjectReferencesFromAssetsFile)\"\r\n      Targets=\"_GetProjectVersion\"\r\n      SkipNonexistentTargets=\"true\"\r\n      SkipNonexistentProjects=\"true\"\r\n      Properties=\"BuildProjectReferences=false;\">\r\n      <Output\r\n        TaskParameter=\"TargetOutputs\"\r\n        ItemName=\"_ProjectReferencesWithVersions\"/>\r\n    </MSBuild>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetProjectVersion\" DependsOnTargets=\"$(GetPackageVersionDependsOn)\"\r\n          Returns=\"@(_ProjectPathWithVersion)\">\r\n    <ItemGroup>\r\n      <_ProjectPathWithVersion Include=\"$(MSBuildProjectFullPath)\">\r\n        <ProjectVersion Condition=\"'$(PackageVersion)' != ''\">$(PackageVersion)</ProjectVersion>\r\n        <ProjectVersion Condition=\"'$(PackageVersion)' == ''\">1.0.0</ProjectVersion>\r\n      </_ProjectPathWithVersion>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_WalkEachTargetPerFramework\">\r\n    <MSBuild\r\n      Condition=\"'$(IncludeBuildOutput)' == 'true'\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetBuildOutputFilesWithTfm\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_BuildOutputInPackage\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Condition=\"'$(TargetsForTfmSpecificContentInPackage)' != ''\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetTfmSpecificContentForPackage\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_PackageFiles\"/>\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Condition=\"'$(IncludeBuildOutput)' == 'true'\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetDebugSymbolsWithTfm\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_TargetPathsToSymbols\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Condition=\"'$(IncludeSource)' == 'true'\"\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"SourceFilesProjectOutputGroup\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\r\n                  BuildProjectReferences=false;\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_SourceFiles\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetFrameworkAssemblyReferences\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\r\n                  BuildProjectReferences=false;\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_FrameworkAssemblyReferences\" />\r\n    </MSBuild>\r\n\r\n    <MSBuild\r\n      Projects=\"$(MSBuildProjectFullPath)\"\r\n      Targets=\"_GetFrameworksWithSuppressedDependencies\"\r\n      Properties=\"TargetFramework=%(_TargetFrameworks.Identity);\r\n                  BuildProjectReferences=false;\">\r\n\r\n      <Output\r\n          TaskParameter=\"TargetOutputs\"\r\n          ItemName=\"_FrameworksWithSuppressedDependencies\" />\r\n    </MSBuild>\r\n  </Target>\r\n\r\n  <Target Name =\"_GetFrameworksWithSuppressedDependencies\" Returns=\"@(_TfmWithDependenciesSuppressed)\">\r\n    <ItemGroup>\r\n      <_TfmWithDependenciesSuppressed Include=\"$(TargetFramework)\" Condition=\"'$(SuppressDependenciesWhenPacking)' == 'true'\"/>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name =\"_GetFrameworkAssemblyReferences\" DependsOnTargets=\"ResolveReferences\" Returns=\"@(TfmSpecificFrameworkAssemblyReferences)\">\r\n    <ItemGroup>\r\n      <TfmSpecificFrameworkAssemblyReferences Include=\"@(ReferencePath->'%(OriginalItemSpec)')\"\r\n        Condition=\"'%(ReferencePath.Pack)' != 'false' AND '%(ReferencePath.ResolvedFrom)' == '{TargetFrameworkDirectory}'\">\r\n        <TargetFramework>$(TargetFramework)</TargetFramework>\r\n      </TfmSpecificFrameworkAssemblyReferences>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetBuildOutputFilesWithTfm\"\r\n          DependsOnTargets=\"BuiltProjectOutputGroup;DocumentationProjectOutputGroup;SatelliteDllsProjectOutputGroup;_AddPriFileToPackBuildOutput;$(TargetsForTfmSpecificBuildOutput)\"\r\n          Returns=\"@(BuildOutputInPackage)\">\r\n    <ItemGroup Condition=\"'$(IncludeBuildOutput)' == 'true'\">\r\n      <BuildOutputInPackage Include=\"@(SatelliteDllsProjectOutputGroupOutput);\r\n                            @(BuiltProjectOutputGroupOutput);\r\n                            @(DocumentationProjectOutputGroupOutput);\r\n                            @(_PathToPriFile)\"/>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetTfmSpecificContentForPackage\"\r\n          DependsOnTargets=\"$(TargetsForTfmSpecificContentInPackage)\"\r\n          Returns=\"@(TfmSpecificPackageFileWithRecursiveDir)\">\r\n    <!-- The below workaround needs to be done due to msbuild bug https://github.com/Microsoft/msbuild/issues/3121 -->\r\n    <ItemGroup>\r\n      <TfmSpecificPackageFileWithRecursiveDir Include=\"@(TfmSpecificPackageFile)\">\r\n        <NuGetRecursiveDir>%(TfmSpecificPackageFile.RecursiveDir)</NuGetRecursiveDir>\r\n        <BuildAction>%(TfmSpecificPackageFile.BuildAction)</BuildAction>\r\n      </TfmSpecificPackageFileWithRecursiveDir>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"_GetDebugSymbolsWithTfm\"\r\n          DependsOnTargets=\"DebugSymbolsProjectOutputGroup;$(TargetsForTfmSpecificDebugSymbolsInPackage)\" \r\n          Returns=\"@(_TargetPathsToSymbolsWithTfm)\">\r\n    <ItemGroup Condition=\"'$(IncludeBuildOutput)' == 'true'\">\r\n      <_TargetPathsToSymbolsWithTfm Include=\"@(DebugSymbolsProjectOutputGroupOutput)\">\r\n        <TargetFramework>$(TargetFramework)</TargetFramework>\r\n      </_TargetPathsToSymbolsWithTfm>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <_TargetPathsToSymbolsWithTfm Include=\"@(TfmSpecificDebugSymbolsFile)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--Projects with target framework like UWP, Win8, wpa81 produce a Pri file\r\n    in their bin dir. This Pri file is not included in the BuiltProjectGroupOutput, and\r\n    has to be added manually here.-->\r\n  <Target Name=\"_AddPriFileToPackBuildOutput\"\r\n          Returns=\"@(_PathToPriFile)\"\r\n          DependsOnTargets=\"$(AddPriFileDependsOn)\">\r\n    <ItemGroup Condition=\"'$(IncludeProjectPriFile)' == 'true'\">\r\n      <_PathToPriFile Include=\"$(ProjectPriFullPath)\">\r\n        <FinalOutputPath>$(ProjectPriFullPath)</FinalOutputPath>\r\n        <TargetPath>$(ProjectPriFileName)</TargetPath>\r\n      </_PathToPriFile>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!--\r\n    ============================================================\r\n    _GetPackageFiles\r\n    Entry point for generating the project to project references.\r\n    ============================================================\r\n  -->\r\n  <Target Name=\"_GetPackageFiles\" Condition=\"$(IncludeContentInPack) == 'true'\">\r\n    <ItemGroup>\r\n      <_PackageFilesToExclude Include=\"@(Content)\" Condition=\"'%(Content.Pack)' == 'false'\"/>\r\n    </ItemGroup>\r\n    <!-- Include PackageFiles and Content of the project being packed -->\r\n    <ItemGroup>\r\n      <_PackageFiles Include=\"@(Content)\" Condition=\" %(Content.Pack) != 'false' \">\r\n        <BuildAction Condition=\"'%(Content.BuildAction)' == ''\">Content</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(Compile)\" Condition=\" %(Compile.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(Compile.BuildAction)' == ''\">Compile</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(None)\" Condition=\" %(None.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(None.BuildAction)' == ''\">None</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(EmbeddedResource)\" Condition=\" %(EmbeddedResource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(EmbeddedResource.BuildAction)' == ''\">EmbeddedResource</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(ApplicationDefinition)\" Condition=\" %(ApplicationDefinition.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(ApplicationDefinition.BuildAction)' == ''\">ApplicationDefinition</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(Page)\" Condition=\" %(Page.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(Page.BuildAction)' == ''\">Page</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(Resource)\" Condition=\" %(Resource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(Resource.BuildAction)' == ''\">Resource</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(SplashScreen)\" Condition=\" %(SplashScreen.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(SplashScreen.BuildAction)' == ''\">SplashScreen</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(DesignData)\" Condition=\" %(DesignData.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(DesignData.BuildAction)' == ''\">DesignData</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(DesignDataWithDesignTimeCreatableTypes)\" Condition=\" %(DesignDataWithDesignTimeCreatableTypes.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(DesignDataWithDesignTimeCreatableTypes.BuildAction)' == ''\">DesignDataWithDesignTimeCreatableTypes</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(CodeAnalysisDictionary)\" Condition=\" %(CodeAnalysisDictionary.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(CodeAnalysisDictionary.BuildAction)' == ''\">CodeAnalysisDictionary</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(AndroidAsset)\" Condition=\" %(AndroidAsset.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(AndroidAsset.BuildAction)' == ''\">AndroidAsset</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(AndroidResource)\" Condition=\" %(AndroidResource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(AndroidResource.BuildAction)' == ''\">AndroidResource</BuildAction>\r\n      </_PackageFiles>\r\n      <_PackageFiles Include=\"@(BundleResource)\" Condition=\" %(BundleResource.Pack) == 'true' \">\r\n        <BuildAction Condition=\"'%(BundleResource.BuildAction)' == ''\">BundleResource</BuildAction>\r\n      </_PackageFiles>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n</Project>\r\n\r\n```\r\n\r\n  [1]: https://i.stack.imgur.com/akK15.png\r\n  [2]: https://i.stack.imgur.com/IvKfL.png\r\n  [3]: https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5030\r\n  [4]: https://i.stack.imgur.com/ny04I.png\n\n### Verbose Logs\n\n```shell\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU5030\tThe license file 'License.md' does not exist in the package.\tClassLibrary1\tC:\\Program Files\\dotnet\\sdk\\7.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets\tLine 221\n```\n"},{"Id":"27452992057","Type":"IssuesEvent","CreatedAt":"2023-03-02T18:52:50","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11822","RelatedDescription":"Closed issue \"[DCR]: Issues with new NU1507 warning\" (#11822) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nWith the VS 2022 17.2 (.NET SDK 6.0.300) release, a change has been introduced in the handling of CentralPackageVersionManagement: if there are multiple package sources defined, a new warning, `NU1507`, is issued.\r\n\r\nNote: the current nuget.exe (6.1.0) _does not_ issue this warning (but I'm assuming the next version will?).\r\n\r\nThis warning is documented in https://docs.microsoft.com/en-us/nuget/consume-packages/central-package-management#warning-when-using-multiple-package-sources\r\n\r\nWhere the problems start is:\r\n- it is not uncommon for release builds to have warnings-are-errors set, so this change breaks such builds (and based on the\r\n  following points, apparently for no real reason)\r\n- there is no documentation regarding the rationale for the warning: is it really just a recommendation/best practice, or will\r\n  something break if each package does not resolve to exactly one source?\r\n  - this is important, because without that, it is hard to gauge whether simply adding `NU1507` to `NoWarn` is safe, or likely to\r\n    break things down the line\r\n- there is no command-line way for adding package source mappings yet, making it harder to configure a tree in CI context\r\n- it looks like adding package source mapping, using \"*\" as pattern for every source, shuts up the warning\r\n  - but isn't that essentially the same as not having explicit source mapping? then why is there no warning for this as well?\n\n### Desired Behavior\n\nThat depends on the reason for NU1507; if it's only a recommendation or best practice, then at a minimum it should be documented as such, potentially explicitly mentioning that it's safe to disable the warning, or that it can be avoided by mapping all sources to the \"*\" pattern. (But my absolute preference would be to drop it, or only issue it as part of some new \"nuget analyze-config\" command.)\r\n\r\nIf there's actual potential for breakage when multiple potential sources apply to a package, then that should be clearly documented (and perhaps briefly explained in the warning as well). And then a situation where the nuget.config specifies overlapping mapping patterns should likely trigger NU1507 too. Ideally, there would also be some sort of description of how to handle some relatively common scenarios, like having one \"real\" nuget feed (say, nuget.org), plus one local folder source (to make it easy to do testing with locally-built test packages). In such a case, there may not always be a usable prefix pattern, so using \"*\" for both would be reasonable.\n\n### Additional Context\n\n_No response_"},{"Id":"27452639569","Type":"IssuesEvent","CreatedAt":"2023-03-02T18:35:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7967","RelatedDescription":"Closed issue \"NuGetizer - Support for Visual Studio 2019\" (#7967) at NuGet/Home","RelatedBody":"Will this extension be updated to support VS2019 ?\r\n\r\nTried running the the installer and although VS2019 is displayed as an option it is greyed out an not selectable.  The message displayed next to the option is \"**The extension cannot be installed into this product due to prerequisites that cannot be resolved**\"\r\n\r\n![image](https://user-images.githubusercontent.com/2338522/55637382-d1647280-57bc-11e9-86d3-a0ac1eea13d4.png)\r\n\r\n"},{"Id":"27452632228","Type":"IssuesEvent","CreatedAt":"2023-03-02T18:35:19","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6977","RelatedDescription":"Closed issue \"Packaging multitargeting framework project results in one target framework package\" (#6977) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI have created .NET standard 2.0 class library project in my application. However I also need this library to be available in .NET Framework 4.7.1 project. To make it possible, I changed target framework to target frameworks of netstandard2.0;net471 to have this build two ways. Build/Rebuild itself in VS works fine - two folders for different frameworks are beeing generated. However, when I try to create nuget package using NuGet.Build.Packaging, it creates only one framework folder in the package. I was trying the version of 0.2.3 and latest release 0.2.5-pr160.1 of NuGet.Build.Packaging. What should I do to get package for both frameworks?\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.exe 4.5.1.4879\r\nVS UI 15.7.2\r\nPackage Manager Console 4.7.0.5212\r\n.NET Framework 4.7.2\r\nOS version: Win 10 v1803\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create .NetStandard 2.0 class library project\r\n\r\n2. Modify .csproj adding net471 to target framework (remember to rename TargetFramework to TargetFrameworks)\r\n\r\n3. Rebuild package\r\n\r\n4. Create Nuget package with Nuget.Build.Packaging\r\n\r\nRegards,\r\nAriel Zakrzewski\r\n"},{"Id":"27450124478","Type":"IssuesEvent","CreatedAt":"2023-03-02T16:47:21","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12322","RelatedDescription":"Closed issue \"Static graph restore failure when referencing unrestorable project\" (#12322) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\n.NET SDK 7.0.100; VS 17.5 internal preview\n\n### Worked before?\n\nNot a regression\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nGiven a project that has a `ProjectReference` to a project that doesn't import `NuGet.targets`, like `Something\\Something.csproj` referencing the empty project `asdf.proj` in [GraphRestoreFailsOnUnrestorableReference.zip](https://github.com/NuGet/Home/files/10239519/GraphRestoreFailsOnUnrestorableReference.zip), graph-based restore can fail when non-graph-based restore succeeds.\r\n\r\n```sh-session\r\n❯ dotnet restore  -p:RestoreUseStaticGraphEvaluation=true .\\Something\\\r\n  Determining projects to restore...\r\nS:\\play\\alkestj\\Something\\Something.csproj : error NU1105: Unable to find project information for 'S:\\play\\alkestj\\asdf.proj'. If you are using Visual Studio, this may be because the project is unloaded or not part of the current solution so run a restore from the command-line. Otherwise, the project file may be invalid or missing \r\ntargets required for restore.\r\n  Failed to restore S:\\play\\alkestj\\Something\\Something.csproj (in 54 ms).\r\n```\r\n\r\nLooking at the dgspec, non-graph restore elides the `projectReferences` entry for the reference to the non-restorable project, while graph restore includes it.\r\n\r\n```diff\r\ndiff --git \"a/.\\\\Something\\\\obj\\\\nongraph_Something.csproj.nuget.dgspec.json\" \"b/.\\\\Something\\\\obj\\\\Something.csproj.nuget.dgspec.json\"\r\nindex 3468b15..e9b26cf 100644\r\n--- \"a/.\\\\Something\\\\obj\\\\nongraph_Something.csproj.nuget.dgspec.json\"\r\n+++ \"b/.\\\\Something\\\\obj\\\\Something.csproj.nuget.dgspec.json\"\r\n@@ -32,7 +32,11 @@\r\n         \"frameworks\": {\r\n           \"net7.0\": {\r\n             \"targetAlias\": \"net7.0\",\r\n-            \"projectReferences\": {}\r\n+            \"projectReferences\": {\r\n+              \"S:\\\\play\\\\alkestj\\\\asdf.proj\": {\r\n+                \"projectPath\": \"S:\\\\play\\\\alkestj\\\\asdf.proj\"\r\n+              }\r\n+            }\r\n           }\r\n         },\r\n         \"warningProperties\": {\r\n```\r\n\r\nSince there is in fact no info for that project, this leads to a failure later.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":27,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-03-03T03:30:23.0637158Z","RunDurationInMilliseconds":1952}