{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37563973583","Type":"IssuesEvent","CreatedAt":"2024-04-18T01:44:55","Actor":"EdLichtman","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9821","RelatedDescription":"Closed issue \"[Self-hosted Bug]: Need guidance for mirroring\" (#9821) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nEvery time a new package comes out I have to manually delete it. I've tried creating my own mirror, but it's not very resource effective, and not easy to use. So I'd like to use NuGetMirror. However, NuGetMirror only allows me to download the packages to a folder, it doesn't \"relist\" or \"refresh the cache\" of the package.\r\n\r\nDo you have guidance on mirroring? and if it's not documented, could it be documented somewhere on the page that teaches you how to set up a NuGet Gallery yourself?\n\n### Repro Steps\n\nKind of self-explanatory. Not a bug, but there wasn't really another option that I could choose.\n\n### Expected Behavior\n\nI expect to not have to download and list each package the moment they come out manually. Obviously that's not guaranteed with your software. but I would like guidance on how I can use this in a sane fashion without creating a brand new mirror myself.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"37558053500","Type":"PullRequestEvent","CreatedAt":"2024-04-17T20:43:02","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9923","RelatedDescription":"Merged pull request \"Not publishing unsigned artifacts.\" (#9923) at NuGet/NuGetGallery","RelatedBody":"Not really using any of those, so not producing them in the first place."},{"Id":"37557852163","Type":"PullRequestEvent","CreatedAt":"2024-04-17T20:35:25","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9923","RelatedDescription":"Opened pull request \"Not publishing unsigned artifacts.\" (#9923) at NuGet/NuGetGallery","RelatedBody":"Not really using any of those, so not producing them in the first place."},{"Id":"37557166643","Type":"PullRequestEvent","CreatedAt":"2024-04-17T20:12:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9922","RelatedDescription":"Opened pull request \"Properly no-op deprecations and allow unlisting at the same time in API\" (#9922) at NuGet/NuGetGallery","RelatedBody":"There is continued internal success and growing interesting in the deprecation API. I would like to make progress on the public preview.\r\n\r\nSpec: https://github.com/NuGet/Engineering/pull/4709\r\n\r\nFor no-oping deprecations, I opted to not use the entity level change tracking API (e.g. https://stackoverflow.com/a/30235307) since it would mean a lot of changes to our abstractions. I think the current implementation is easier to understand anyway. \r\n\r\nSummary of changes:\r\n- Properly no-op package deprecations that have no difference\r\n   - https://github.com/NuGet/NuGetGallery/issues/9921\r\n- Allow packages to be unlisted or relisted at the same time as deprecation\r\n   - https://github.com/NuGet/NuGetGallery/issues/8873#issuecomment-2062110640\r\n- Fix a problem where API deprecations were being audited as via the web UI (incorrect)\r\n- Resolve some minor build warnings due to obsolete APIs and cases with no `await` in and `async` method\r\n   - Unrelated but small"},{"Id":"37556663230","Type":"IssuesEvent","CreatedAt":"2024-04-17T19:55:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9921","RelatedDescription":"Opened issue \"[NuGet.org Bug]: many catalog package details leaves are redundant (duplicate) because of improper deprecation no-oping\" (#9921) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nAs part of https://github.com/NuGet/NuGetGallery/issues/8873, I was interested in implementing proper no-oping for deprecation. This is to ensure that redundant API calls do not easily cause many unnecessary V3 catalog leaves and therefore load on the DB.\r\n\r\nI did a data investigation with NuGet.Insights to see how often duplicate catalog leaves occurred. It turns out... a lot!\r\n\r\nOf catalog leaves with deprecation information, over 15% are duplicate, i.e. their mutable metadata (listed, vulnerabilities, and deprecation) are the same as the previous leaf for that same package.\r\n\r\n<!-- csl: https://ddteldata.kusto.windows.net/ClientToolsInsights -->\r\n```kusto\r\nlet SameAsPreviousLeaves = NiCatalogLeafItems\r\n| where isnotempty(Deprecation)\r\n| order by Identity asc, CommitTimestamp asc\r\n| project LowerId, Identity, CommitTimestamp, IsListed, Deprecation = tostring(Deprecation), Vulnerabilities = tostring(Vulnerabilities)\r\n| extend SameAsPrevious = Identity == prev(Identity) and Deprecation == prev(Deprecation) and IsListed == prev(IsListed) and Vulnerabilities == prev(Vulnerabilities)\r\n| project-reorder Identity, CommitTimestamp, SameAsPrevious, Deprecation, LowerId;\r\nlet LeafCount = toscalar(NiCatalogLeafItems | count);\r\nSameAsPreviousLeaves\r\n| summarize LeavesWithDeprecation = count(), DuplicateLeaves = countif(SameAsPrevious)\r\n| extend TotalLeaves = LeafCount\r\n| extend ['Duplicate % of total'] = round(100.0 * DuplicateLeaves / TotalLeaves, 2)\r\n| extend ['Duplicate % of deprecated'] = round(100.0 * DuplicateLeaves / LeavesWithDeprecation, 2)\r\n```\r\n\r\n|LeavesWithDeprecation|DuplicateLeaves|TotalLeaves|Duplicate % of total|Duplicate % of deprecated|\r\n|---|---|---|---|---|\r\n|684887|103619|12725635|0.81|15.13|\r\n\r\nI believe this is made even worse for users that have access to the deprecation API private preview. It's easy to re-request deprecation of a growing set of versions with the API and cause a growing wave of duplicate deprecations. `azure-sdk` is at the top of the deprecation list because it is enabled for the deprecation API.\r\n\r\n<!-- csl: https://ddteldata.kusto.windows.net/ClientToolsInsights -->\r\n```kusto\r\nlet SameAsPreviousLeaves = NiCatalogLeafItems\r\n| where isnotempty(Deprecation)\r\n| order by Identity asc, CommitTimestamp asc\r\n| project LowerId, Identity, CommitTimestamp, IsListed, Deprecation = tostring(Deprecation), Vulnerabilities = tostring(Vulnerabilities)\r\n| extend SameAsPrevious = Identity == prev(Identity) and Deprecation == prev(Deprecation) and IsListed == prev(IsListed) and Vulnerabilities == prev(Vulnerabilities)\r\n| project-reorder Identity, CommitTimestamp, SameAsPrevious, Deprecation, LowerId;\r\nSameAsPreviousLeaves\r\n| summarize DeprecationCount = count(), DuplicateCount = countif(SameAsPrevious) by Identity, LowerId\r\n| join kind=inner NiPackageOwners on LowerId\r\n| project LowerId, Identity, Owners, DeprecationCount, DuplicateCount\r\n| mv-expand Owner = Owners to typeof(string)\r\n| summarize DeprecationCount = sum(DeprecationCount), DuplicateCount = sum(DuplicateCount) by Owner\r\n| order by DuplicateCount desc\r\n| extend ['Duplicate %'] = round(100.0 * DuplicateCount / DeprecationCount, 2)\r\n| take 10\r\n```\r\n\r\n|Owner|DeprecationCount|DuplicateCount|Duplicate %|\r\n|---|---|---|---|\r\n|Microsoft|112632|55381|49.17|\r\n|azure-sdk|74116|52725|71.14|\r\n|monk.soul|73453|21262|28.95|\r\n|chinadotnet|61946|17637|28.47|\r\n|dotnetchina|61946|17637|28.47|\r\n|Thinkka|3860|3497|90.6|\r\n|nugetservicebus|4296|3030|70.53|\r\n|AppInsightsSdk|4168|2770|66.46|\r\n|RabbitFoot|15833|1990|12.57|\r\n|furion.net|6501|1847|28.41|\r\n\r\nWe should implement proper no-oping in `PackageDeprecationService`. Currently the code updates the `LastEdited` field on ALL packages in the deprecation batch if there is ANY change (rather than no-oping on a package-by-package basis).\r\nhttps://github.com/NuGet/NuGetGallery/blob/f58a360a3e081f633eb7b0791b0de625d2bb9399/src/NuGetGallery/Services/PackageDeprecationService.cs#L103-L110\n\n### Repro Steps\n\n1. Deprecate version X and Y of a package via the UI.\r\n2. Deprecate version X, Y, and Z of a package via the UI, carefully selecting the same deprecation settings as the previous step.\r\n\n\n### Expected Behavior\n\nVersion Z should only have it's `LastEdited` value updated.\r\n\r\nActual: X, Y, and Z have their `LastEdited` value updated.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"37522347229","Type":"PullRequestEvent","CreatedAt":"2024-04-17T01:51:52","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9920","RelatedDescription":"Opened pull request \"Solve Table Text Getting Truncated Issue\" (#9920) at NuGet/NuGetGallery","RelatedBody":"Make the tables scrollable, remove all the css making the text  truncated. \r\nBug link:\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1980703\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1980707\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/3402134d-c239-4d18-8838-f59efa18536e)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/be77b5ff-fab9-4125-a00c-3131691dee13)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37555735250","Type":"IssuesEvent","CreatedAt":"2024-04-17T19:23:17","Actor":"carstencodes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13397","RelatedDescription":"Opened issue \"dotnet list packages should consider msbuild variables\" (#13397) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n8.0.204\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\nThis issue has already been created in [.NET SDK](https://github.com/dotnet/sdk/issues/40255), but was closed There with the hint that It's more likely to be a NuGet issue.\r\n\r\n### Describe the bug\r\n\r\nWhen I run `dotnet list package` for a solution where \r\n\r\na) Non-project MsBuild-Properties are used, e.g. `SolutionDir`\r\nb) Directories are not defaulted, e.g. `BaseIntermediateOutputPath`\r\n\r\nthe command exits with an error, saying that \r\n\r\n- A file/directory cannot be found files, as $(SolutionDir) resolves to an empty string and hence is rooted erroneously\r\n- The project.assets.json cannot be found, as it is not stored in `$(MSBuildProjectDirectory)obj\\`\r\n\r\nIn our solution we have > 200 projects. These projects use a common base intermediate output path set to `$(SolutionDir)obj\\$(MSBuildProjectName)\\` as it makes it easier to reset the files.\r\n\r\n### To Reproduce\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\nAn example can be found at this [gist](https://gist.github.com/carstencodes/005eabdce817023fd77eb14494fa399e)\r\n\r\n#### Expected output\r\n\r\n```shell\r\n$ dotnet list package --outdated\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nProject `sample` has the following updates to its packages\r\n   [net8.0]:\r\n   Top-level Package      Requested   Resolved   Latest\r\n   > Grpc.Tools           [2.51.0]    2.51.0     2.62.0\r\n```\r\n\r\n#### Actual output\r\n\r\n```shell\r\n$ dotnet list package --outdated\r\n dotnet list package --outdated\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nNo assets file was found for `C:\\myprojects\\temp\\dotnet-sdk-tests\\test-projects\\sample\\sample.csproj`. Please run restore before running this command.\r\n```\r\n\r\nDiagnostic output is not helpful: \r\n\r\n```shell\r\n$ dotnet list package --outdated -v diag \r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nNo assets file was found for `C:\\myprojects\\temp\\dotnet-sdk-tests\\test-projects\\sample\\sample.csproj`. Please run restore before running this command.\r\n```\r\n\r\n#### Workarounds\r\n\r\nNone applicable. From my point of view, it would be applicable to pass MsBuildVarialbles to `dotnet list package`, e.g.\r\n\r\n```shell\r\n$ dotnet list package --outdated -p:SolutionDir=${PWD} -p:BaseIntermediateOutputPath='$(SolutionDir)obj\\$(MSBuildProjectName)'\r\n```\r\n\r\n### Exceptions (if any)\r\n<!-- \r\nInclude the exception you get when facing this issue\r\n-->\r\n\r\nNo exception to be found.\r\n\r\n### Further technical details\r\n```shell \r\n$ dotnet --info\r\n.NET SDK:\r\n Version:           8.0.204\r\n Commit:            c338c7548c\r\n Workload version:  8.0.200-manifests.7d36c14f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.204\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.4\r\n  Architecture: x64\r\n  Commit:       2d7eea2529\r\n\r\n.NET SDKs installed:\r\n  6.0.129 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.321 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.421 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.408 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.104 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.204 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\n- VS Code 1.88.1\n\n### Verbose Logs\n\n```shell\n$ dotnet list package --outdated -v diag \r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nNo assets file was found for `C:\\myprojects\\temp\\dotnet-sdk-tests\\test-projects\\sample\\sample.csproj`. Please run restore before running this command.\n```\n"},{"Id":"37551954539","Type":"IssuesEvent","CreatedAt":"2024-04-17T17:21:48","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13396","RelatedDescription":"Opened issue \"Add `--allow-insecure-connections` option to dotnet SDK\" (#13396) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nAdd the option to the following commands\r\n- `dotnet nuget add`\r\n- `dotnet nuget update`\n\n### Additional Context and Details\n\n_No response_"},{"Id":"37550721733","Type":"IssuesEvent","CreatedAt":"2024-04-17T16:44:03","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13342","RelatedDescription":"Closed issue \"Promote from warning to error in push operations\" (#13342) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\n`nuget push` using an http shows a warning. \n\n### Desired Behavior\n\nShow an error message when http source is used\n\n### Additional Context\n\n_No response_"},{"Id":"37550718969","Type":"IssuesEvent","CreatedAt":"2024-04-17T16:43:59","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13341","RelatedDescription":"Closed issue \"Promote from warning to error in `delete` operations\" (#13341) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe\r\n\r\n### Current Behavior\r\n\r\n`nuget delete` using an http shows a warning. \r\n\r\n### Desired Behavior\r\n\r\nshow an error message instead.\r\n\r\n### Additional Context\r\n\r\n_No response_"},{"Id":"37550687929","Type":"IssuesEvent","CreatedAt":"2024-04-17T16:43:02","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13378","RelatedDescription":"Closed issue \"Add `allowinsecureconnections` option to nuget add and nuget update\" (#13378) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\n`nuget add` and `nuget update` commands do not allow for adding a new package source with an attribute `allowInsecureConnections`.  Users would have to go to the config file manually to add this attribute. Add a `-allowInsecureConeections` option to these commands.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"37536632051","Type":"IssuesEvent","CreatedAt":"2024-04-17T10:41:34","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13395","RelatedDescription":"Opened issue \"[Bug Bash] The status of the select-all-project checkbox become incorrect in the solution-level PM UI after switching back to “Updates” tab for the second time\" (#13395) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.11.0.26\n\n### Worked before?\n\nIt’s not a regression since it reproes on both D16.11\\34601.136 and D17.9\\34601.282. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:       \r\n\r\n1. Create a solution with two C# Console App (.NET Core) -- .NET 8.0 projects in VS. \r\n\r\n2. Right-click the solution in the Solution Explorer and select the “Mange NuGet Packages for Solution”. \r\n\r\n3. Go to “Browse” tab and search for a package (e.g. “Newtonsoft.Json”). \r\n\r\n4. Install version “12.0.3” into the first project and version “11.0.2” into the second project. \r\n\r\n5. Click the checkbox on the left of every project to make sure every project is selected. [Now the status of the select-all-project checkbox is correct with a check mark] \r\n\r\n6. Switch to “Updates” tab, then switch to “Installed” tab. \r\n\r\n7. Re-switch back to “Updates\" tab and observe the checkbox on the right panel. \r\n\r\n \r\n\r\n#### Expected: \r\n\r\nThe status of the select-all-project checkbox should be checked with a check mark since all the projects below are selected. \r\n\r\n#### Actual:        \r\n\r\nThe status of the select-all-project checkbox become unchecked as below: \r\n![image](https://github.com/NuGet/Home/assets/84695155/b7cc0f53-1f7b-47ff-89bb-b495a72020bf)\r\n\r\n#### Notes:    \r\n\r\n1. The repro rate is 100%. \r\n\r\n2. It also repro’s on “Consolidate” tab.  \r\n\r\n3. The status is correct when switching between all the tabs for the first time. \n\n### Verbose Logs\n\n_No response_"},{"Id":"37519176434","Type":"PullRequestEvent","CreatedAt":"2024-04-16T22:45:38","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/13379","RelatedDescription":"Merged pull request \"Update 'dotnet nuget why' output format\" (#13379) at NuGet/Home","RelatedBody":"[Rendered spec](https://github.com/NuGet/Home/blob/e83e772d7372288fc4475ba8b511dca97768a006/accepted/2022/dotnet-nuget-why-proposal.md)\r\n\r\nThe output of `dotnet nuget why` would be easier to read if we printed it as a tree, rather than as individual paths.\r\n\r\nWe will also deduplicate graphs when multiple frameworks have the same dependency graph.\r\n\r\n![SolutionWithMultipleProjects](https://github.com/NuGet/Home/assets/82980589/3bb13bda-8464-4092-af8b-7cb3ac0daea6)\r\n\r\nThe spec contains more examples."},{"Id":"37518808917","Type":"IssuesEvent","CreatedAt":"2024-04-16T22:26:06","Actor":"alanssitis","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13394","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Build on Linux breaks due to untrusted signer.\" (#13394) at NuGet/Home","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org in GitHub Actions\r\n\r\n### Describe the bug\r\n\r\nA CI pipeline running on Linux was breaking, and I encountered the following error: `error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer.` This looked very suspect as it was an official Microsoft package, and the certificate looked like it belonged to Microsoft. This was also seen locally until the \"build button\" was used in an IDE.\r\n\r\n### Repro Steps\r\n\r\nI was able to recreate this behavior and bug in a repo which runs it in a container (Work repo is private).\r\n\r\n1. Clone the following repo https://github.com/alanssitis/reproduce-dotnet-bug.\r\n2. In the project root, run `docker build .`.,\r\n\r\n### Expected Behavior\r\n\r\nThe build should fail with a untrusted signer error.\r\n\r\nInterestingly enough, I could \"fix\" this locally by building the project using an IDE (Rider), which I'd assume did something under the hood with the `dotnet` CLI to resolve this. I was not able to replicate the behavior carried out by the IDE, and therefore, I still cannot use NuGet.org in my CI, which is blocking my work.\r\n\r\nI have only verified this behavior on PopOS! 22.04, Ubuntu 22.04, and Debian Bookworm.\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\nBuilding the container locally netted the following logs:\r\n```\r\n$ docker build . -t test\r\n[+] Building 4.0s (8/8) FINISHED                                                                                                                                           docker:default\r\n => [internal] load build definition from Dockerfile                                                                                                                                 0.0s\r\n => => transferring dockerfile: 148B                                                                                                                                                 0.0s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim                                                                                                      0.1s\r\n => [internal] load .dockerignore                                                                                                                                                    0.0s\r\n => => transferring context: 57B                                                                                                                                                     0.0s\r\n => [1/4] FROM mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim@sha256:7861b15f318949cf9214d9ad5382b680a0e22e3b8673180707aa0c594ab75656                                                0.0s\r\n => [internal] load build context                                                                                                                                                    0.0s\r\n => => transferring context: 53.19kB                                                                                                                                                 0.0s\r\n => CACHED [2/4] WORKDIR /src/                                                                                                                                                       0.0s\r\n => [3/4] COPY . .                                                                                                                                                                   0.1s\r\n => ERROR [4/4] RUN dotnet build ./test/test.csproj                                                                                                                                  3.7s\r\n------\r\n > [4/4] RUN dotnet build ./test/test.csproj:\r\n0.482 MSBuild version 17.9.8+b34f75857 for .NET\r\n0.830   Determining projects to restore...\r\n2.968 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n2.968   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n2.968   Signature type: Author\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.153 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.153   Signature type: Author\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.158   Failed to restore /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj (in 1.51 sec).\r\n3.178 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.178   Signature type: Author\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.561 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.578\r\n3.579 Build FAILED.\r\n3.579\r\n3.579 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.579     0 Warning(s)\r\n3.579     4 Error(s)\r\n3.579\r\n3.579 Time Elapsed 00:00:02.99\r\n------\r\nDockerfile:4\r\n--------------------\r\n   2 |     WORKDIR /src/\r\n   3 |     COPY . .\r\n   4 | >>> RUN dotnet build ./test/test.csproj\r\n   5 |\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c dotnet build ./test/test.csproj\" did not complete successfully: exit code: 1\r\n```"},{"Id":"37515575964","Type":"IssuesEvent","CreatedAt":"2024-04-16T20:05:19","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13382","RelatedDescription":"Closed issue \"Failed to patch the .NET SDK with NuGet Dev latest build\" (#13382) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet SDK\r\n\r\n### Product Version\r\n\r\nDev\\6.11.0.9\r\n\r\n### Worked before?\r\n\r\nIt is a regression since the issue doesn’t repro on patching Dotnet SDK with NuGet Client Dev\\6.11.0.6.\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n    ` .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 8.0.3xx -Quality daily`\r\n#### Expected Result: \r\nThe patching is successful.\r\n#### Actual Result:\r\nThe patching failed as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/bda2be69-0c71-4d35-8c1d-b0f5b750999e)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It also reproes with “-SDKChannel 9.0.1xx” in the step4.\r\n3.It doesn’t repro on patching Dotnet SDK 8.0.300-preview.24179.1 patched with NuGet Client Dev\\6.11.0.3.\r\n4.After verifying the NuGet build one by one, the issue starts to repro from NuGet Client Dev\\6.11.0.8, doesn't repro on NuGet Client Dev\\6.11.0.6."},{"Id":"37512239226","Type":"IssuesEvent","CreatedAt":"2024-04-16T17:59:29","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13361","RelatedDescription":"Closed issue \"CA2022 errors\" (#13361) at NuGet/Home","RelatedBody":"New SDK introduces new warnings that turn into errors in VMR build - see https://github.com/dotnet/installer/pull/19145#issuecomment-2027844450\r\n\r\n```\r\n/vmr/src/nuget-client/src/NuGet.Core/NuGet.Packaging/Signing/Archive/SignedPackageArchiveUtility.cs(107,13): error CA2022: Avoid inexact read with 'System.IO.Stream.Read(byte[], int, int)' (https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2022) [/vmr/src/nuget-client/src/NuGet.Core/NuGet.Packaging/NuGet.Packaging.csproj::TargetFramework=net9.0]\r\n/vmr/src/nuget-client/src/NuGet.Core/NuGet.ProjectModel/Utf8JsonStreamReader.cs(55,13): error CA2022: Avoid inexact read with 'System.IO.Stream.Read(byte[], int, int)' (https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2022) [/vmr/src/nuget-client/src/NuGet.Core/NuGet.ProjectModel/NuGet.ProjectModel.csproj::TargetFramework=net9.0]\r\n```\r\n\r\nI'm going to patch to disable this warning, in VMR builds. However this needs to be properly fixed."},{"Id":"37511169137","Type":"IssuesEvent","CreatedAt":"2024-04-16T17:21:22","Actor":"dfederm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13393","RelatedDescription":"Opened issue \"PackagingException thrown due to non-existing package fallback folder\" (#13393) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS: 17.10, .NET SDK: 8.0.300-preview.24203.14\n\n### Worked before?\n\nNot sure\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn a fresh machine after installing VS and trying to build the PowerToys repo I get:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly. [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: NuGet.Packaging.Core.PackagingException: Unable to find fallback package folder 'C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages'. [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at NuGet.Packaging.FallbackPackagePathResolver..ctor(String userPackageFolder, IEnumerable`1 fallbackPackageFolders) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.NuGetPackageResolver.CreateResolver(IEnumerable`1 packageFolders) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: at Microsoft.NET.Build.Tasks.TaskBase.Execute() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\n```\r\n\r\nAfter digging in, it appears that the `ResolvePackageAssets` task from the SDK doesn't do much but does call into the NuGet libraries, which then end up blowing up when searching through fallback package folders.\r\n\r\nSpecifically, `C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config` and `C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config` both exist and contain a reference to `C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages`, which does *not* exist. The parent directory \"Shared\" does, but the \"NuGetPackages\" dir does not.\r\n\r\nCreating the \"NuGetPackages\" dir manually, and just leaving it empty, is a workaround to this issue.\r\n\r\nMy recommendation would be to simply remove this throw: https://github.com/NuGet/NuGet.Client/blob/d01e48ace560689897c1c642591659126736feb8/src/NuGet.Core/NuGet.Packaging/FallbackPackagePathResolver.cs#L60. Instead I think it should just ignore the non-existing directories since an existing empty dir effectively is also just ignored (no packages will be found there).\r\n\r\nAlternately, the VS installation process which generates the `Microsoft.VisualStudio.FallbackLocation.config` and `Microsoft.VisualStudio.Offline.config` files needs to create the directory they reference.\n\n### Verbose Logs\n\n_No response_"},{"Id":"37510759901","Type":"PullRequestEvent","CreatedAt":"2024-04-16T17:07:23","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13376","RelatedDescription":"Closed pull request \"load package source attributes in PMUI.\" (#13376) at NuGet/Home","RelatedBody":"This proposal aims to enable the PMUI to load package source attributes. Consequently, users will have the capability to view and modify these values.\r\nRendered: https://github.com/NuGet/Home/blob/697beb7ea1c8e320004591bfceb0989c45cdb060/accepted/2024/PMUI-packagesource-option.md"},{"Id":"37510602513","Type":"IssuesEvent","CreatedAt":"2024-04-16T17:01:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/13334","RelatedDescription":"Reopened issue \"\"nuget install -ExcludeVersion\" inaccurate reports \"already installed\" when trying to install older version\" (#13334) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\n6.9.1.3\r\n\r\n### Repro Steps & Context\r\n\r\nAll command use `-ExcludeVersion` \r\n\r\n1. Install a package such as Moq 4.8.0 `nuget install -ExcludeVersion \"Moq\" -Version \"4.8.0\"`. Installation succeeds.\r\n2. Install a later version of that package such as Moq 4.9.0 `nuget install -ExcludeVersion \"Moq\" -Version \"4.9.0\"`. Installation suceeds.\r\n3. Try to install an _older_ version such as Moq 4.7.0 `nuget install -ExcludeVersion \"Moq\" -Version \"4.7.0\"`.\r\n\r\nExpected:\r\n\r\nYou get a error message such as:\r\n\r\n> Unable to install package \"Moq.4.7.0\" because package \"Moq.4.9.0\" is already installed.\r\n\r\nWhat actually happens: you get an inaccurate message:\r\n\r\n> Package \"Moq.4.7.0\" is already installed.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\n>nuget install -ExcludeVersion \"Moq\" -Version \"4.8.0\"\r\nFeeds used:\r\n  C:\\Users\\me\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nAttempting to gather dependency information for package 'Moq.4.8.0' with respect to project 'c:\\code\\nuget-playground', targeting 'Any,Version=v0.0'\r\nGathering dependency information took 440 ms\r\nAttempting to resolve dependencies for package 'Moq.4.8.0' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'Moq.4.8.0'\r\nResolved actions to install package 'Moq.4.8.0'\r\nRetrieving package 'Castle.Core 4.2.1' from 'C:\\Users\\me\\.nuget\\packages\\'.\r\nRetrieving package 'Moq 4.8.0' from 'nuget.org'.\r\nRetrieving package 'System.Threading.Tasks.Extensions 4.4.0' from 'nuget.org'.\r\nAdding package 'Castle.Core.4.2.1' to folder 'c:\\code\\nuget-playground'\r\n  GET https://api.nuget.org/v3-flatcontainer/system.threading.tasks.extensions/4.4.0/system.threading.tasks.extensions.4.4.0.nupkg\r\n  GET https://api.nuget.org/v3-flatcontainer/moq/4.8.0/moq.4.8.0.nupkg\r\nAdded package 'Castle.Core.4.2.1' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Castle.Core 4.2.1' to c:\\code\\nuget-playground\r\n  OK https://api.nuget.org/v3-flatcontainer/moq/4.8.0/moq.4.8.0.nupkg 77ms\r\n  OK https://api.nuget.org/v3-flatcontainer/system.threading.tasks.extensions/4.4.0/system.threading.tasks.extensions.4.4.0.nupkg 81ms\r\nInstalled System.Threading.Tasks.Extensions 4.4.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\system.threading.tasks.extensions\\4.4.0 with content hash SPKfFGbpQsK5Srz2Kq3URgvC90yoOyBE8H1quDA2+MAJ2HAzFmV3biOgPv2Ck3mPAvdKngo3QHi2BNwUQDRVvA==.\r\nAdding package 'System.Threading.Tasks.Extensions.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nInstalled Moq 4.8.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\moq\\4.8.0 with content hash VuChZExXSmTs24aW72Fy3IeQvgD0GgZlr4wFBnXDWj1CHlz4kAYEegIU3dXmJNYMhcJU/L0QAU9CF5Or5eVlwA==.\r\nAdded package 'System.Threading.Tasks.Extensions.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'System.Threading.Tasks.Extensions 4.4.0' to c:\\code\\nuget-playground\r\nAdding package 'Moq.4.8.0' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'Moq.4.8.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Moq 4.8.0' to c:\\code\\nuget-playground\r\nExecuting nuget actions took 290 ms\r\n\r\n>nuget install -ExcludeVersion \"Moq\" -Version \"4.9.0\"\r\nFeeds used:\r\n  C:\\Users\\me\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\n\r\n\r\nAttempting to gather dependency information for package 'Moq.4.9.0' with respect to project 'c:\\code\\nuget-playground', targeting 'Any,Version=v0.0'\r\nGathering dependency information took 137 ms\r\nAttempting to resolve dependencies for package 'Moq.4.9.0' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'Moq.4.9.0'\r\nResolved actions to install package 'Moq.4.9.0'\r\nRetrieving package 'Castle.Core 4.3.1' from 'nuget.org'.\r\nRetrieving package 'Moq 4.9.0' from 'nuget.org'.\r\nRetrieving package 'System.ValueTuple 4.4.0' from 'nuget.org'.\r\n  GET https://api.nuget.org/v3-flatcontainer/system.valuetuple/4.4.0/system.valuetuple.4.4.0.nupkg\r\n  GET https://api.nuget.org/v3-flatcontainer/castle.core/4.3.1/castle.core.4.3.1.nupkg\r\n  GET https://api.nuget.org/v3-flatcontainer/moq/4.9.0/moq.4.9.0.nupkg\r\n  OK https://api.nuget.org/v3-flatcontainer/moq/4.9.0/moq.4.9.0.nupkg 79ms\r\n  OK https://api.nuget.org/v3-flatcontainer/system.valuetuple/4.4.0/system.valuetuple.4.4.0.nupkg 95ms\r\n  OK https://api.nuget.org/v3-flatcontainer/castle.core/4.3.1/castle.core.4.3.1.nupkg 118ms\r\nInstalled Moq 4.9.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\moq\\4.9.0 with content hash QoAFgbywBhbWdxs4vEJ/OWTFZCKaTSK25+PP3KTyIhxKN1byGx8sO0RjFY1XCDuurIDdBg4TcA6TsJxGVSo2Sw==.\r\nInstalled System.ValueTuple 4.4.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\system.valuetuple\\4.4.0 with content hash BahUww/+mdP4ARCAh2RQhQTg13wYLVrBb9SYVgW8ZlrwjraGCXHGjo0oIiUfZ34LUZkMMR+RAzR7dEY4S1HeQQ==.\r\nInstalled Castle.Core 4.3.1 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\castle.core\\4.3.1 with content hash 8Y/eTr6GTElAGV7eAmJuhfLhGdFpNvaNrQ9UQYDScziLmX+/BLGM+9eQr0IcdNDcPN0ADmbtwT6MgecGKy4obw==.\r\nSuccessfully uninstalled 'Castle.Core.4.2.1' from c:\\code\\nuget-playground\r\nSuccessfully uninstalled 'Moq.4.8.0' from c:\\code\\nuget-playground\r\nAdding package 'Castle.Core.4.3.1' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'Castle.Core.4.3.1' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Castle.Core 4.3.1' to c:\\code\\nuget-playground\r\nAdding package 'System.ValueTuple.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'System.ValueTuple.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'System.ValueTuple 4.4.0' to c:\\code\\nuget-playground\r\nAdding package 'Moq.4.9.0' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'Moq.4.9.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Moq 4.9.0' to c:\\code\\nuget-playground\r\nExecuting nuget actions took 999 ms\r\n\r\n>nuget install -ExcludeVersion \"Moq\" -Version \"4.7.0\"\r\nFeeds used:\r\n  C:\\Users\\me\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nPackage \"Moq.4.7.0\" is already installed.\r\n```\r\n"},{"Id":"37479827152","Type":"IssuesEvent","CreatedAt":"2024-04-15T21:19:34","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13392","RelatedDescription":"Closed issue \"UIActionEngine test assuming task cancellation is flaky\" (#13392) at NuGet/Home","RelatedBody":"`CreateInstallAction_OnInstallingProject_EmitsPkgWasTransitiveTelemetryAndTabAndIsSolutionPropertiesAsync` assumes it will generate a cancelled telemetry event, but can find a successful event."},{"Id":"37479827031","Type":"IssuesEvent","CreatedAt":"2024-04-15T21:19:34","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13186","RelatedDescription":"Closed issue \"Owner package metadata is an array in JSON but a string in Protocol types\" (#13186) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nOther/NA\n\n### Current Behavior\n\nOwner metadata is provided as an array, but Protocol immediately converts this to a comma-delmited string upon parsing the data.\n\n### Desired Behavior\n\nPreserve the array of owners so that the enumeration can be used by NuGet Client.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-18T03:30:17.4347251Z","RunDurationInMilliseconds":1020}