{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12907417918","Type":"PullRequestEvent","CreatedAt":"2020-07-15T04:53:22","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8088","RelatedDescription":"Merged pull request \"Replace permalink workaround with GitHub advisory permalink field\" (#8088) at NuGet/NuGetGallery","RelatedBody":"Field is now available in GitHub GraphQL API, so using it now and removing extension method. We no longer need GhsaId so I'm removing it from our types.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/2890"},{"Id":"12906109407","Type":"PullRequestEvent","CreatedAt":"2020-07-15T00:33:05","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8107","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.07.14]RI dev into master\" (#8107) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12905494119","Type":"PullRequestEvent","CreatedAt":"2020-07-14T22:38:23","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8107","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.07.14]RI dev into master\" (#8107) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12905485710","Type":"PullRequestEvent","CreatedAt":"2020-07-14T22:36:55","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8106","RelatedDescription":"Closed pull request \"[ReleasePrep][2020.07.14]FI of master into dev\" (#8106) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12907191377","Type":"IssuesEvent","CreatedAt":"2020-07-15T04:07:14","Actor":"santoshi12","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9768","RelatedDescription":"Closed issue \"Nuget Restore says all packages are already installed and there is nothing to restore but iam getting an error during build\" (#9768) at NuGet/Home","RelatedBody":"Getting the below error during build in vs 2019\r\nThis project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is ..\\packages\\Microsoft.Gsl.0.1.2.1\\build\\native\\Microsoft.Gsl.targets.\r\n\r\nThe packages folder in the solution is getting updated with that particular package whenever I restore but facing the above issue during build"},{"Id":"12905182842","Type":"IssuesEvent","CreatedAt":"2020-07-14T21:51:05","Actor":"ChadNedzlek","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9797","RelatedDescription":"Opened issue \"Produce warning when a IsPackableProject=true references IsPackable=false project\" (#9797) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet.exe\r\ndotnet.exe --version (if appropriate): 3.1.200\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create two projects, Packable and NonPackable\r\n\r\nPackable.csproj\r\n```\r\n<IsPackable>true</IsPackable>\r\n<ProjectReference Include=\"NonPackable.csproj\" />\r\n```\r\n\r\nNonPackable.csproj\r\n<IsPackable>false</IsPackable>\r\n\r\nThis configuration will produce a \"Packable.nupkg\" that can't ever work, because \"NonPackable\" doesn't (and won't ever) exist, because it's not packable.  But the build doesn't produce any sort of warning, and everything works fine locally because of the PackagReference.  The only time you notice it fails is when it gets pushed to a feed, like nuget.org, and then tries to resolve the NonPackable package.  That's really late in the process to get notified of such a dangerous issue.\r\n\r\nIt would be great if the build could product a warning when this happens.  It happens a lot in a repository I manage, because we have a service, as well as some utility DLL's for accessing that server, in the same repository. The service DLL's are not packable, but the helper DLL's go to a feed.  But it's easy in VS to accidentally add a reference to a \"shared\" DLL that contains some utilities or something, that was previously only referenced by the service, so wasn't packable, and then publish bad packages to the feed, and I had to scramble to fix that.\r\n\r\n"},{"Id":"12903350050","Type":"IssuesEvent","CreatedAt":"2020-07-14T18:17:30","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9507","RelatedDescription":"Closed issue \"Improve the CPVM Visual Studio experience for the case when PackageReference items have version.\" (#9507) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nIf a project is opt in CPVM and has a PR item with Version defined the restore fails silently in Visual Studio. The user should be notified regarding the failure reason.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"12902940109","Type":"IssuesEvent","CreatedAt":"2020-07-14T17:32:23","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9757","RelatedDescription":"Closed issue \"Reduce NuGetVersion/VersionRange duplication in PM UI\" (#9757) at NuGet/Home","RelatedBody":"I decided to create separate ticket from [#9731.](https://github.com/nuget/home/issues/9731) \r\nThis one is for UI mostly.\r\nReproduce: \r\n1. Open solution in \"Experimental  Instance\".\r\n2. Open PM UI go to \"Browse\", \"Updates\", \"Consolidate\" tabs then close it. Next close whole project.\r\n3.  As you can see 2 attached images there are 3228 pcs of `NuGetVersion` and 1748 pcs of `VersionRange` items are stayes even though PM UI is closed. \r\n![image](https://user-images.githubusercontent.com/8766776/86664932-06eda200-bfa4-11ea-82e5-7ffcc543f64c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8766776/86665171-3f8d7b80-bfa4-11ea-9a05-538b4ef4e9be.png)\r\n\r\n4.  Repeat from 1 to 2. As you can see below `NuGetVersion` number increased from 3228 to 4260 and `VersionRange` number increased from 1748 to 3491.\r\n\r\n![image](https://user-images.githubusercontent.com/8766776/86667205-41583e80-bfa6-11ea-969c-704452d438b7.png)\r\n![image](https://user-images.githubusercontent.com/8766776/86667277-546b0e80-bfa6-11ea-8b53-de63f6e43b24.png)\r\n\r\n\r\n"},{"Id":"12902645311","Type":"IssuesEvent","CreatedAt":"2020-07-14T17:01:00","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9796","RelatedDescription":"Opened issue \"Investigate which Extensions are commonly used with NuGet and their effects\" (#9796) at NuGet/Home","RelatedBody":"Which VS Extensions appear most commonly used with NuGet, and which look possibly responsible for crashes/hangs, or other problems?\r\n\r\nA user reported NuGet crashing after some arbitrary amount of time. One commonality that users with similar problems have is that they have the ReSharper extension installed.  We should see how common this extension is, and I propose we involve it and other extensions when testing NuGet to see how other extensions affect our perf/reliability.\r\n\r\nhttps://developercommunity.visualstudio.com/content/problem/1092423/nuget-package-install-crashes-vs.html\r\n"},{"Id":"12901243819","Type":"IssuesEvent","CreatedAt":"2020-07-14T14:49:40","Actor":"ghelyar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9795","RelatedDescription":"Opened issue \"dotnet list package suggests packages that are not compatible with the target framework\" (#9795) at NuGet/Home","RelatedBody":"NuGet product used:\r\ndotnet cli\r\n\r\ndotnet.exe --version:\r\n3.1.301\r\n\r\nWorked before? If so, with which NuGet version:\r\nno\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nThis can be reproduced with the [System.Management.Automation](https://www.nuget.org/packages/System.Management.Automation) package, which has an [unlisted version](https://www.nuget.org/packages/System.Management.Automation/6.1.7601.17515) that works on the full .net framework, although any package that has dropped support for an older framework in newer versions would work. The 6.x.x versions of this package target netcoreapp2.1 while 7.0.x target netcoreapp3.1, for example.\r\n\r\n1. `dotnet new console`\r\n2. change the target framework to net48\r\n3. `dotnet add package System.Management.Automation -v 6.1.7601.17515`\r\n4. `dotnet list package --outdated`\r\n\r\n## Actual output:\r\nThe tool suggests upgrading to [7.0.2](https://www.nuget.org/packages/System.Management.Automation/7.0.2), which targets netcoreapp3.1, and is therefore not compatible with this project.\r\n```\r\nProject `...` has the following updates to its packages\r\n   [net48]:\r\n   Top-level Package                   Requested        Resolved         Latest\r\n   > System.Management.Automation      6.1.7601.17515   6.1.7601.17515   7.0.2\r\n```\r\n\r\n## Expected output\r\nThe tool should suggest package versions that are compatible with the target framework."},{"Id":"12896590357","Type":"IssuesEvent","CreatedAt":"2020-07-14T06:51:08","Actor":"papanito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9794","RelatedDescription":"Closed issue \"(Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED)) nuget restore failed\" (#9794) at NuGet/Home","RelatedBody":"# Details about Problem\r\n\r\nWe run nuget restore on a Windows slave using Jenkins as build server. When the slave service runs as a user instead System account then the `nuget restore` may fail with\r\n\r\n```\r\nError parsing solution file at d:\\jenkins\\tools\\ci-home\\workspace\\t_im-server_feature_os-jenkins_2\\IM-Server.sln: Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED)) nuget restore failed \r\n```\r\n\r\nThe solution file is fine, cause if login to the build server and run `nuget restore` this simply works fine. I thought the jenkins-user might not have permissions on the folder but he has full control over the complete folder.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): `5.3.1.6268`\r\n\r\nVS version (if appropriate):\r\n\r\nMsBuild `15.9.21.664`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWindows 2016\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Followin command is run `%NuGetExe% restore \"%PathServer%SC.InputManagement.sln\" -PackagesDirectory \"%PathServer%packages\" 1>%LogFile% 2>&1`\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n```\r\nMSBuild auto-detection: using msbuild version '15.9.21.664' from 'D:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin'. Error parsing solution file at d:\\jenkins\\tools\\ci-home\\workspace\\t_im-server_feature_os-jenkins_2\\SC.InputManagement.sln: Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED)) nuget restore failed\r\n```\r\n\r\n### Sample Project\r\n\r\nN/A\r\n"},{"Id":"12896468204","Type":"IssuesEvent","CreatedAt":"2020-07-14T06:34:00","Actor":"papanito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9794","RelatedDescription":"Opened issue \"(Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED)) nuget restore failed\" (#9794) at NuGet/Home","RelatedBody":"# Details about Problem\r\n\r\nWe run nuget restore on a Windows slave using Jenkins as build server. When the slave service runs as a user instead System account then the `nuget restore` may fail with\r\n\r\n```\r\nError parsing solution file at d:\\jenkins\\tools\\ci-home\\workspace\\t_im-server_feature_os-jenkins_2\\IM-Server.sln: Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED)) nuget restore failed \r\n```\r\n\r\nThe solution file is fine, cause if login to the build server and run `nuget restore` this simply works fine. I thought the jenkins-user might not have permissions on the folder but he has full control over the complete folder.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): `5.3.1.6268`\r\n\r\nVS version (if appropriate):\r\n\r\nMsBuild `15.9.21.664`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWindows 2016\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Followin command is run `%NuGetExe% restore \"%PathServer%SC.InputManagement.sln\" -PackagesDirectory \"%PathServer%packages\" 1>%LogFile% 2>&1`\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n```\r\nMSBuild auto-detection: using msbuild version '15.9.21.664' from 'D:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin'. Error parsing solution file at d:\\jenkins\\tools\\ci-home\\workspace\\t_im-server_feature_os-jenkins_2\\SC.InputManagement.sln: Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED)) nuget restore failed\r\n```\r\n\r\n### Sample Project\r\n\r\nN/A\r\n"},{"Id":"12896173821","Type":"IssuesEvent","CreatedAt":"2020-07-14T05:51:15","Actor":"fdevGit","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9793","RelatedDescription":"Opened issue \"How to authenticate to the custom nuget repository feed with programming?\" (#9793) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI am creating a project and the task of this project is to get the packages and their versions from a private nuget server. I can get data from nuget's own public servers. I cannot authenticate on a private server. How to authenticate to the custom nuget repository feed with programming?\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nAssembly NuGet.Protocol.Core.v3, Version=4.2.0.0,\r\n\r\ndotnet.exe --version (if appropriate):\r\n3.1.301\r\n\r\nVS version (if appropriate):\r\nMicrosoft Visual Studio Enterprise 2019 Version 16.6.3\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nwindows 10 Enterprise 1909\r\n\r\nWorked before? If so, with which NuGet version:\r\nNuget is actively working. As I mentioned above, I can't be authenticate when using it in my project\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.You will see the problem in the sample project\r\n\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n{\"Response status code does not indicate success: 401 (Unauthorized).\"}\r\n   \r\nat NuGet.Protocol.ServiceIndexResourceV3Provider.<GetServiceIndexResourceV3>d__9.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<TryCreate>d__8.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.PackageSearchResourceV3Provider.<TryCreate>d__1.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__15`1.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NugetPackageVersionResolver.Program.<V4>d__5.MoveNext() in C:\\Users\\x\\source\\repos\\NugetPackageVersionResolver\\NugetPackageVersionResolver\\Program.cs:line 124\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NugetPackageVersionResolver.Program.<Main>d__0.MoveNext() in C:\\Users\\x\\source\\repos\\NugetPackageVersionResolver\\NugetPackageVersionResolver\\Program.cs:line 38\r\n\r\n### Sample Project\r\nhttps://github.com/fdevGit/NugetPackageVersionResolver\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-15T05:30:42.5077002Z","RunDurationInMilliseconds":2382}