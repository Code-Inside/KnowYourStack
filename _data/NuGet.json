{"Data":{"Blog":{"FeedItems":[{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"30912600007","Type":"PullRequestEvent","CreatedAt":"2023-08-04T23:56:09","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9605","RelatedDescription":"Opened pull request \"Not tracking package push failures when package is a duplicate.\" (#9605) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4867"},{"Id":"30910978723","Type":"PullRequestEvent","CreatedAt":"2023-08-04T21:17:51","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9604","RelatedDescription":"Merged pull request \"Some build warnings addressed\" (#9604) at NuGet/NuGetGallery","RelatedBody":"Added dispose for some tests.\r\nRemoved direct dependency on xunit.core, xunit brings what it wants [implicitly](https://www.nuget.org/packages/xunit#dependencies-body-tab).\r\n"},{"Id":"30910636556","Type":"PullRequestEvent","CreatedAt":"2023-08-04T20:54:23","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9604","RelatedDescription":"Opened pull request \"Some build warnings addressed\" (#9604) at NuGet/NuGetGallery","RelatedBody":"Added dispose for some tests.\r\nRemoved direct dependency on xunit.core, xunit brings what it wants [implicitly](https://www.nuget.org/packages/xunit#dependencies-body-tab).\r\n"},{"Id":"30909542796","Type":"IssuesEvent","CreatedAt":"2023-08-04T19:46:50","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9603","RelatedDescription":"Closed issue \"[Feature]: expose repository information via v3 API\" (#9603) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\r\n\r\nMost of the package metadata is exposed in the `PackageDetail` object. The [API documentation](https://learn.microsoft.com/en-us/nuget/api/catalog-resource#item-types) doesn't mention it, but the server is also returning a `repository` string, but it seems like it's always empty.\r\n\r\n### The Elevator Pitch\r\n\r\nThe [`PackageDetail`](https://learn.microsoft.com/en-us/nuget/api/catalog-resource#item-types) object should contain the repository information as well so that it is available without having to download and parse the nuspec file inside the nupkg file. It already contains the license, project URL, description, etc.\r\n\r\n### Additional Context and Details\r\n\r\nIn my case, I have the nuspec file, but it's inconsistent that I need to parse the repository URL out of the nuspec XML when the project URL and everything else is given to me in the API JSON.\r\n\r\nThis seems like it would be required for NuGet/Home#8584. The client can't cache all packages that the user might click on just to display the repository URL."},{"Id":"30882674867","Type":"IssuesEvent","CreatedAt":"2023-08-03T18:54:41","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9426","RelatedDescription":"Closed issue \"Revoke button besides delete button for api keys\" (#9426) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nHi.\r\nI would be nice if there's `Revoke` button next to `Delete` so I don't have to delete the key after finish uploading the package.\r\nThat way I keep packaging globing pattern for next time. If I delete it, then I have to use my memory muscle to figure out correct pattern each time.\r\n![image](https://user-images.githubusercontent.com/8766776/223483195-2d359990-dfe7-4873-bb43-09df3f654f62.png)\r\n\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"30857481480","Type":"PullRequestEvent","CreatedAt":"2023-08-02T22:04:50","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9601","RelatedDescription":"Merged pull request \"[Admin] Added change username admin panel.\" (#9601) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Added Change Username admin panel.\r\n* Added 2 helper forms.\r\n  * Verify account: Helps verifying SR information.\r\n  * Validate new username: Helps validating if the new username can be created.\r\n* Added audit when a change username action is performed.\r\n\r\n# Screenshots\r\n<details><summary>Admin panel</summary>\r\n\r\n![Change username - 0](https://github.com/NuGet/NuGetGallery/assets/17834924/2c71166b-9818-4fee-b9e7-ba8a1bc239f0)\r\n</details> \r\n\r\n<details><summary>Change username forms</summary>\r\n\r\n![Change username - 1](https://github.com/NuGet/NuGetGallery/assets/17834924/38bdef35-073d-40c2-89b5-fbff66453742)\r\n</details> \r\n\r\n<details><summary>Verify account examples</summary>\r\nIndividual account\r\n\r\n![Change username - verify account individual](https://github.com/NuGet/NuGetGallery/assets/17834924/22d94d5f-15f4-4cfa-a13a-9a4e6c9cce32)\r\n\r\nOrganization account\r\n\r\n![Change username - verify account organization](https://github.com/NuGet/NuGetGallery/assets/17834924/749e0d51-7932-47ad-8b6e-e697806b5469)\r\n</details> \r\n\r\n<details><summary>Validate new username</summary>\r\n\r\n![Change username - validate new username](https://github.com/NuGet/NuGetGallery/assets/17834924/090bc38c-9254-4217-a544-c857f0c680ef)\r\n</details> \r\n\r\n<details><summary>Change username</summary>\r\n\r\n![Change Username - change successful](https://github.com/NuGet/NuGetGallery/assets/17834924/bc527760-9846-4a4b-923c-adb761ef1aa6)\r\n</details> \r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4883"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"30901951160","Type":"IssuesEvent","CreatedAt":"2023-08-04T13:44:06","Actor":"WenningQiu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12798","RelatedDescription":"Opened issue \"Symbols package is missing some content when custom nuspec file is used\" (#12798) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS2022, 17.6.5\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI opened https://github.com/dotnet/project-system/issues/9188, but was advised to raise the issue here instead.\r\n\r\n## Visual Studio Version\r\n\r\nVersion 17.6.5\r\n\r\n## Summary\r\n\r\nI am using a custom nuspec file to build NuGet package for my application. When \"IncludeSymbols\" is set to true, one file listed in nuspec file is missing in the symbols package that is produced; the other package is fine.\r\n\r\n## Steps to Reproduce\r\n\r\nThe nuspec file:\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd\">\r\n  <metadata>\r\n    <id>$Id$</id>\r\n    <version>$Version$</version>\r\n    <authors>$Authors$</authors>\r\n    <description>CommandControl command line tools.</description>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"$OutputPath$\\net48\\CSG.Framework.CommandController.exe\" target=\"tools\" />\r\n    <file src=\"$ProjectDirectory$\\..\\..\\..\\Scripts\\ServiceControl.ps1\" target=\"tools\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nSDK csproj file snippet that sets package building properties:\r\n\r\n```\r\n    <NoWarn>NU5111</NoWarn>\r\n    <DebugType>embedded</DebugType>\r\n\r\n    <IsPackable>true</IsPackable>\r\n    <NuspecFile>$(MSBuildProjectName).nuspec</NuspecFile>\r\n    <NuspecBasePath>$(MSBuildProjectDirectory)</NuspecBasePath>\r\n    <NuspecProperties>Id=$(AssemblyName);Version=$(Version);Authors=$(Authors);ProjectDirectory=$(MSBuildProjectDirectory);OutputPath=$(OutputPath)</NuspecProperties>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <IncludeSymbols>true</IncludeSymbols>\r\n```\r\n\r\n## Expected Behavior\r\n\r\nNuGet package's tools folder contains two files.\r\n\r\n## Actual Behavior\r\n\r\nServiceControl.ps1 is missing from the tools folder of the symbols package:\r\n```\r\nListing archive: CSG.Framework.CommandController.23.3.0.symbols.nupkg\r\n\r\n--\r\nPath = CSG.Framework.CommandController.23.3.0.symbols.nupkg\r\nType = zip\r\nPhysical Size = 682463\r\n\r\n   Date      Time    Attr         Size   Compressed  Name\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 15:59:52 .....          525          291  _rels\\.rels\r\n2023-07-26 15:59:52 .....          409          255  CSG.Framework.CommandController.nuspec\r\n2023-07-26 20:59:52 .....      1883648       680504  tools\\CSG.Framework.CommandController.exe\r\n2023-07-26 15:59:52 .....          465          206  [Content_Types].xml\r\n2023-07-26 15:59:52 .....          717          425  package\\services\\metadata\\core-properties\\51518f895ddb457ab0cc0aedc65a7ba6.psmdcp\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 20:59:52            1885764       681681  5 files\r\n```\r\n\r\nThe non-symbols package has the correct content:\r\n```\r\nListing archive: CSG.Framework.CommandController.23.3.0.nupkg\r\n\r\n--\r\nPath = CSG.Framework.CommandController.23.3.0.nupkg\r\nType = zip\r\nPhysical Size = 683522\r\n\r\n   Date      Time    Attr         Size   Compressed  Name\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 15:59:52 .....          525          292  _rels\\.rels\r\n2023-07-26 15:59:52 .....          409          255  CSG.Framework.CommandController.nuspec\r\n2023-07-26 20:59:52 .....      1883648       680504  tools\\CSG.Framework.CommandController.exe\r\n2017-11-07 13:39:06 .....         3922          929  tools\\ServiceControl.ps1\r\n2023-07-26 15:59:52 .....          528          211  [Content_Types].xml\r\n2023-07-26 15:59:52 .....          717          425  package\\services\\metadata\\core-properties\\823d253a9625412ab9f984f4a3efd42c.psmdcp\r\n------------------- ----- ------------ ------------  ------------------------\r\n2023-07-26 20:59:52            1889749       682616  6 files\r\n```\r\n\r\n## User Impact\r\n\r\nThe symbols package has incorrect content.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"30886189850","Type":"IssuesEvent","CreatedAt":"2023-08-03T22:07:26","Actor":"McDoit","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12797","RelatedDescription":"Opened issue \"`dotnet nuget add source` with credentials adds source to local nuget.config but credentials to user level\" (#12797) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet sdk 7.0.306\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nAdding a nuget source with login to a local Nuget.config using `dotnet nuget add source` adds source to local nuget.config but credentials to user level NuGet.config\r\n\r\nCan be solved by using the --configfile parameter but just strange to have this behavior\r\n\r\nRepro:\r\nCheck user level config\r\n\r\n`mkdir C:/nugetsourcebug`\r\n\r\n`cd C:/nugetsourcebug`\r\n\r\n`dotnet new nugetconfig`\r\n\r\n`dotnet nuget add source \"https://feed/v3/index.json\" -n \"source\" --username \"user\" --password \"pass\"`\r\n\r\nCheck local nuget.config and user level config, source is added to local and credentials is added to the user level\n\n### Verbose Logs\n\n_No response_"},{"Id":"30885225848","Type":"IssuesEvent","CreatedAt":"2023-08-03T21:06:14","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12782","RelatedDescription":"Closed issue \"Nuget restore symbolic or hard links to nuget cach\" (#12782) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\n![image](https://github.com/NuGet/Home/assets/3629489/ebfb40d2-5754-40ba-b64d-d6e017ef9da0)\r\nWhy can't restoring packages create hard/symbolic links and build systems understand the link and use the resolved data?  Why am I required to have package cache files and local project files?  The cache has the files and nuget restore could fixup symbolic links as needed if I copied repo for example.  \n\n### Additional Context and Details\n\n_No response_"},{"Id":"30884772046","Type":"IssuesEvent","CreatedAt":"2023-08-03T20:41:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6849","RelatedDescription":"Closed issue \"NuGet.exe install without a project should not validate the PackageType metadata\" (#6849) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe): **NuGet.exe**\r\n\r\nNuGet version (x.x.x.xxx): **4.6.2.5055**\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): **win10 1709 16299.309**\r\n\r\nWorked before? If so, with which NuGet version: haven't had the need before. I know it works when using the nuget package manager console in VS\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. nuget.exe install NupkgWrench -IgnoreDependencies\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n```\r\nD:\\test> nuget install nupkgwrench -source nuget.org -IgnoreDependencies -Verbosity detailed\r\nUnknown option: '-IgnoreDependencies'\r\nNuGet.CommandLine.CommandLineException: Unknown option: '-IgnoreDependencies'\r\n   at NuGet.CommandLine.CommandLineParser.GetPartialOptionMatch[TVal](IEnumerable`1 source, Func`2 getDisplayName, Func`2 getAltName, String option, String value)\r\n   at NuGet.CommandLine.CommandLineParser.ExtractOptions(ICommand command, IEnumerator`1 argsEnumerator)\r\n   at NuGet.CommandLine.CommandLineParser.ParseCommandLine(IEnumerable`1 commandLineArgs)\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\nD:\\test>\r\n```\r\n### Sample Project\r\n\r\nNot applicable, any nuget package will do\r\n\r\n**Update by @nkolev92 **\r\n\r\nRunning\r\n> nuget install nupkgwrench -DependencyVersion Ignore \r\nerrors out with \r\n> Error NU5000: Package 'NupkgWrench 1.3.0' has a package type 'DotnetCliTool' that is not supported by project 'E:\\tmp'.\r\n\r\nThis is probably not needed because the intention here is to just download said nupkg, and there's no project or a packages.config. \r\n"},{"Id":"30867275683","Type":"IssuesEvent","CreatedAt":"2023-08-03T08:55:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12775","RelatedDescription":"Closed issue \"Add nullable annotations to NuGet.Common\" (#12775) at NuGet/Home","RelatedBody":"NuGet.Common is [a package on nuget.org](https://www.nuget.org/packages/NuGet.Common/), and is part of the [NuGet Client SDK](https://learn.microsoft.com/nuget/reference/nuget-client-sdk). We are adding null annotations, so projects using [nullable reference types](https://learn.microsoft.com/dotnet/csharp/nullable-references) will benefit from compiler null checking, leading to improved software reliability (fewer NullReferenceExceptions).\r\n\r\nHowever, projects that use NuGet.Common's APIs, and have `nullable` enabled, may encounter compiler errors when upgrading to a version of the package with annotations.\r\n\r\nThe work to annotate the package is intended not to have binary (ABI) breaking changes, and we won;t be changing any method signatures. However, while annotating we might find bugs that need small changes in behaviour in order to fix any compiler errors preventing NuGet itself from building."},{"Id":"30863849626","Type":"IssuesEvent","CreatedAt":"2023-08-03T06:30:21","Actor":"chucklu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12796","RelatedDescription":"Closed issue \"The nuget.info site is broken, blocked by CORS policy\" (#12796) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n1.0.0\n\n### Worked before?\n\nnot sure \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nDid you update the policy on nuget.info site? Now when I try to access the package info of nuget package, such as https://nuget.info/packages/Microsoft.AspNetCore.Identity.UI/7.0.9.\r\nThe link is dead, and got console error as:\r\n\r\nAccess to fetch at 'https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.identity.ui/7.0.9/microsoft.aspnetcore.identity.ui.7.0.9.nupkg' from origin 'https://nuget.info' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\n\n### Verbose Logs\n\n_No response_"},{"Id":"30863261701","Type":"IssuesEvent","CreatedAt":"2023-08-03T05:58:07","Actor":"chucklu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12796","RelatedDescription":"Opened issue \"The nuget.info site is broken, blocked by CORS policy\" (#12796) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n1.0.0\n\n### Worked before?\n\nnot sure \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nDid you update the policy on nuget.info site? Now when I try to access the package info of nuget package, such as https://nuget.info/packages/Microsoft.AspNetCore.Identity.UI/7.0.9.\r\nThe link is dead, and got console error as:\r\n\r\nAccess to fetch at 'https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.identity.ui/7.0.9/microsoft.aspnetcore.identity.ui.7.0.9.nupkg' from origin 'https://nuget.info' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\n\n### Verbose Logs\n\n_No response_"},{"Id":"30854329740","Type":"IssuesEvent","CreatedAt":"2023-08-02T19:16:47","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12794","RelatedDescription":"Closed issue \"`PackageSourceMapping` API doesn't follow best practices for returning lists\" (#12794) at NuGet/Home","RelatedBody":"Ideally, return empty lists, not `null` lists which must be checked for `null` & empty by callers.\r\nThere's also missing test coverage for `PackageDownloader`."},{"Id":"30850749236","Type":"IssuesEvent","CreatedAt":"2023-08-02T16:32:40","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12737","RelatedDescription":"Closed issue \"Lock contention thread pool issues caused by LoadSettings not passing settingsLoadingContext to LoadSettingsForSpecificConfigs\" (#12737) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVisual Studio 17.6\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nThread pool exhaustion issue eventType=threadpool&failureHash=8c6a84c3-cc30-9e23-84e0-7b34342ef23c (PRISM)\r\n\r\nI believe the source of this problem is that LoadSettings function shown below hasn't passed settingsLoadingContext to LoadSettingsForSpecificConfigs. This leads the machine level settings file is not cached during project evaluation, so each time it is read again, and when we have multiple evaluations on the same time in the thread pool, it leads bad contention to wait on this to be read and blocks multiple threads at the same time.\r\n\r\nIt seems important to cache the machine level cache as it is commonly used.\r\n\r\n![image](https://github.com/NuGet/Home/assets/11638466/576122fd-cd0e-4578-af40-cc4234efa461)\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"30830493672","Type":"IssuesEvent","CreatedAt":"2023-08-02T01:03:14","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12794","RelatedDescription":"Opened issue \"`PackageSourceMapping` API doesn't follow best practices for returning lists\" (#12794) at NuGet/Home","RelatedBody":"Ideally, return empty lists, not `null` lists which must be checked for `null` & empty by callers.\r\nThere's also missing test coverage for `PackageDownloader`."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-05T03:30:22.1221025Z","RunDurationInMilliseconds":1029}