{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25189941304","Type":"PullRequestEvent","CreatedAt":"2022-11-11T22:51:34","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9306","RelatedDescription":"Merged pull request \"[A11y] Change role attribute of Recaptcha iframe\" (#9306) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9300\r\n\r\n**Problem:**\r\n \r\nTh Recaptcha iframes on pages like the Forgot Password page and the Report Abuse page were marked with the role `presentation` by default, but this role (as well as the `none` role) disables some accessibility properties, which is why FastPass was flagging it.\r\n\r\n**Previously,**\r\n![iframe before](https://user-images.githubusercontent.com/82980589/201232922-9f0d581a-d2bb-400a-9ebb-be28953b73fa.png)\r\n\r\n**Fix:**\r\n\r\nIframes are only allowed to be marked with the roles `document`, `application` or `img` (also `presentation` or `none`, but that causes other a11y problems). I changed the role of this iframe to `document`, and it clears FastPass checks now (on both the pages flagged in the bug, the Forgot Password page and the Report Abuse page).\r\n\r\n**After the changes,**\r\n![iframe after](https://user-images.githubusercontent.com/82980589/201232966-a09a6b89-88b7-4a41-b343-d8d0a7f223e1.png)"},{"Id":"25189938536","Type":"PullRequestEvent","CreatedAt":"2022-11-11T22:51:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9303","RelatedDescription":"Merged pull request \"[A11y] Correct role attribute for package lists\" (#9303) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9301\r\n\r\n**Problem:**\r\n \r\nOn the Profiles page and the List Packages page, the lists of packages were flagged for not having the appropriate role on the individual list items. These were already marked with role=\"listitem\" and the enclosing div was marked with role=\"list\", so I'm unsure why this was flagged. However, we can bypass the need for these manual role attributes by using `<ul>` and `<li>` tags directly instead.\r\n\r\n**Previously,**\r\n![image](https://user-images.githubusercontent.com/82980589/200703988-0ba5e6c3-e113-492c-a6ef-1f0823520af8.png)\r\n\r\n**Fix:**\r\n\r\nThese package lists now use `<ul>` and `<li>` tags, which do not require additional role attributes. I also had to remove the bullet and left padding from these package list `<ul>`s.\r\n\r\n**After the changes,**\r\n![image](https://user-images.githubusercontent.com/82980589/200704058-7c7f400a-3ffe-420b-8ddc-94f21097d35b.png)\r\n"},{"Id":"25168994997","Type":"PullRequestEvent","CreatedAt":"2022-11-11T00:19:55","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9306","RelatedDescription":"Opened pull request \"[A11y] Change role attribute of Recaptcha iframe\" (#9306) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9300\r\n\r\n**Problem:**\r\n \r\nTh Recaptcha iframes on pages like the Forgot Password page and the Report Abuse page were marked with the role `presentation` by default, but this role (as well as the `none` role) disables some accessibility properties, which is why FastPass was flagging it.\r\n\r\n**Previously,**\r\n![iframe before](https://user-images.githubusercontent.com/82980589/201232922-9f0d581a-d2bb-400a-9ebb-be28953b73fa.png)\r\n\r\n**Fix:**\r\n\r\nIframes are only allowed to be marked with the roles `document`, `application` or `img` (also `presentation` or `none`, but that causes other a11y problems). I changed the role of this iframe to `document`, and it clears FastPass checks now (on both the pages flagged in the bug, the Forgot Password page and the Report Abuse page).\r\n\r\n**After the changes,**\r\n![iframe after](https://user-images.githubusercontent.com/82980589/201232966-a09a6b89-88b7-4a41-b343-d8d0a7f223e1.png)"},{"Id":"25143108526","Type":"PullRequestEvent","CreatedAt":"2022-11-10T01:29:57","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9305","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.11.09]RI of dev into main\" (#9305) at NuGet/NuGetGallery","RelatedBody":"Please verify changes."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25191001045","Type":"IssuesEvent","CreatedAt":"2022-11-12T00:56:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12238","RelatedDescription":"Closed issue \"VS Contributing Guide still references VS 2019\" (#12238) at NuGet/Home","RelatedBody":"The requirement is no longer VS 2019 in order to contribute to our repo."},{"Id":"25190085303","Type":"IssuesEvent","CreatedAt":"2022-11-11T23:05:20","Actor":"mattiaskagstrom","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12240","RelatedDescription":"Opened issue \"dotnet publish -r win10-x64 restores vulnerable package\" (#12240) at NuGet/Home","RelatedBody":"Issue copied from: https://github.com/dotnet/sdk/issues/29028\r\n\r\nDescribe the bug\r\nMy organization blocks downloads of packages with known vulnerabilities.\r\nThe application is buildable and publishable, ut as soon as you ad -r win10-x64 it tries to restore runtime.win7.System.Private.Uri/4.3.0.\r\nThe package is blocked due to: https://github.com/dotnet/announcements/issues/112\r\n\r\nRunning sdk 6.0.x on the build agents, and 7.0.0 locally\r\n\r\nTo Reproduce\r\nThe app has this csproj:\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net6.0</TargetFramework>\r\n\t\t<RollForward>LatestMinor</RollForward>\r\n\t\t<Nullable>enable</Nullable>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n\t\t<AspNetCoreModuleName>AspNetCoreModuleV2</AspNetCoreModuleName>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Hangfire\" Version=\"1.7.31\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Server.IIS\" Version=\"2.2.6\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"7.0.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"7.0.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"7.0.0\">\r\n\t\t  <PrivateAssets>all</PrivateAssets>\r\n\t\t  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n\t\t</PackageReference>\r\n\t\t<PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.1\" />\r\n\t\t<PackageReference Include=\"NLog.Web.AspNetCore\" Version=\"5.1.5\" />\r\n\t\t<PackageReference Include=\"System.Data.SqlClient\" Version=\"4.8.5\" />\r\n\t\t<PackageReference Include=\"System.DirectoryServices.Protocols\" Version=\"7.0.0\" />\r\n\t\t<PackageReference Include=\"Trafikverket.PMSCore.Lib\" Version=\"1.8.0.547\" PrivateAssets=\"All\" />\r\n\t\t<PackageReference Include=\"System.Text.Encodings.Web\" Version=\"7.0.0\" />\r\n\t</ItemGroup>\r\n</Project>\r\n#> dotnet publish -r win10-x64\r\nMSBuild version 17.4.0+18d5aef85 for .NET\r\nDetermining projects to restore...\r\nFailed to download package 'runtime.win7.System.Private.Uri.4.3.0' from 'https://********/nuget/Defa\r\nultSafe/package/runtime.win7.System.Private.Uri/4.3.0'.\r\nResponse status code does not indicate success: 400 (Bad Request).\r\n\r\nExceptions (if any)\r\nFailed to download package 'runtime.win7.System.Private.Uri.4.3.0'\r\n\r\nFurther technical details\r\ndotnet --info\r\n.NET SDK:\r\nVersion: 7.0.100\r\nCommit: e12b7af219\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.19042\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\7.0.100\\\r\n\r\nHost:\r\nVersion: 7.0.0\r\nArchitecture: x64\r\nCommit: d099f075e4\r\n\r\n.NET SDKs installed:\r\n5.0.102 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n7.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 7.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 3.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 6.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 7.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.22 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 6.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 6.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 7.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\nx86 [C:\\Program Files (x86)\\dotnet]\r\nregistered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\nNot set\r\n\r\nglobal.json file:\r\nNot found"},{"Id":"25189665841","Type":"IssuesEvent","CreatedAt":"2022-11-11T22:25:37","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12239","RelatedDescription":"Opened issue \"Nuget Package Manager Won't Let You Uninstall a Project During Downgrade\" (#12239) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Nuget-Package-Manager-Wont-Let-You-Unin/10190064)._\n\n---\nI tried .NET 7, but one of my projects is having problems after converting. I converted all my projects back to .NET6.\n\nWhen I go to remove a package that was installed for .NET 7, you tell me 'Package is not compatible with .NET6'.\n\nI am uninstalling, I know it is not compatible. That is why I am uninstalling.\n\n![image.png](https://aka.ms/dc/image?name=B7a065a50abd246aea1401c4fd5146dd5638031085604523153_20221103-164239-image.png&tid=7a065a50abd246aea1401c4fd5146dd5638031085604523153)\n\nPlease make it easier to downgrade versions.\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/3/2022, 06:51 PM: \n\n(private comment, text removed)\n#### kapenaga [MSFT] on 11/4/2022, 11:05 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"25185786812","Type":"IssuesEvent","CreatedAt":"2022-11-11T17:49:02","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12238","RelatedDescription":"Opened issue \"VS Contributing Guide still references VS 2019\" (#12238) at NuGet/Home","RelatedBody":"The requirement is no longer VS 2019 in order to contribute to our repo."},{"Id":"25179938049","Type":"IssuesEvent","CreatedAt":"2022-11-11T12:44:56","Actor":"richard-post","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12237","RelatedDescription":"Opened issue \"long numeric \"<pre-release identifier>\" not supported\" (#12237) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.100 e12b7af219\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n**Context**\r\nIt seems that NuGetVersion does not support a long numeric <pre-release identifier>.  I think this is valid according to semver2:\r\n```\r\n<dot-separated pre-release identifiers> ::= <pre-release identifier>\r\n                                          | <pre-release identifier> \".\" <dot-separated pre-release identifiers>\r\n\r\n<pre-release identifier> ::= <alphanumeric identifier>\r\n                           | <numeric identifier>\r\n```\r\n\r\n\r\n**Repro**\r\nBuild any project using version _0.12.0-SOF-628.**0410957**+1021_\r\n`dotnet publish src/server/server.csproj /p:Version=0.12.0-SOF-628.0410957+1021`\n\n### Verbose Logs\n\n```shell\n(in) RestorePackagesConfig 'False' (TaskId:39)\r\n13:25:37.498     1>C:\\Program Files\\dotnet\\sdk\\7.0.100\\NuGet.targets(132,5): error : '0.12.0-SOF-628.0410957+1021' is not a valid version string. (Parameter 'value') [C:\\source\\repo\\server\\src\\server\\server.csproj]\r\n                     System.ArgumentException: '0.12.0-SOF-628.0410957+1021' is not a valid version string. (Parameter 'value')\r\n                        at NuGet.Versioning.NuGetVersion.Parse(String value)\r\n                        at NuGet.Commands.MSBuildRestoreUtility.GetVersion(IMSBuildItem item)\r\n                        at NuGet.Commands.MSBuildRestoreUtility.GetPackageSpec(IEnumerable`1 items)\r\n                        at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n                        at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n                        at NuGet.Commands.MSBuildRestoreUtility.GetDependencySpec(IEnumerable`1 items)\r\n                        at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log) (TaskId:39)\r\n                   Done executing task \"RestoreTask\" -- FAILED. (TaskId:39)\r\n\r\nFull log:\r\nhttps://gist.github.com/richard-post/c5974a89e3e2a7b978a265082b516eef\n```\n"},{"Id":"25176188861","Type":"IssuesEvent","CreatedAt":"2022-11-11T09:28:06","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12236","RelatedDescription":"Opened issue \"[Bug Bash] Some transitive packages that can be search and install successfully under “nuget.org” feed show “not available in this source” incorrectly in “Installed” tab\" (#12236) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.5.0.75\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Details about Problem\r\nVS Version: Main\\33110.265\r\nNuGet Version: Dev\\6.5.0.75\r\nOS Version: Windows-11-Enterprise-22H2 ENU\r\n\r\n#### Repro Steps:\r\n1.\tOpen VS, click menu File->New Project, create a C# Blank App (Universal Windows) project.\r\n2.\tRight-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n3.\tGo to “Installed” tab and observe the transitive packages.\r\n#### Expected:\r\nSome transitive packages that can be search and install successfully under “nuget.org” feed should not show “not available in this source” in “Installed” tab.\r\n\r\n#### Actual:\r\nSome transitive packages that can be search and install successfully under “nuget.org” feed show “not available in this source” incorrectly in “Installed” tab as below.\r\n![image](https://user-images.githubusercontent.com/20632625/201309645-a21f1f4b-94fc-4cf9-931e-d5fc07cffe07.png)\r\n\r\n#### Note: It is a regression from the feature “Transitive Package”.\n\n### Verbose Logs\n\n_No response_"},{"Id":"25176154516","Type":"IssuesEvent","CreatedAt":"2022-11-11T09:26:22","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12235","RelatedDescription":"Opened issue \"[Bug Bash] “Prerelease” tag shows for transitive packages when the “Include prerelease” checkbox is not checked\" (#12235) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.5.0.75\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n#### Details about Problem\r\nVS Version: Main\\33110.265\r\nNuGet Version: Dev\\6.5.0.75\r\nOS Version: Windows-11-Enterprise-22H2 ENU\r\n\r\n#### Repro Steps:\r\n1.\tOpen VS, click menu File->New Project, create a C# Blank App (Universal Windows) project.\r\n2.\tRight-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n3.\tGo to “Installed” tab and observe (please do not check the “Include prerelease” checkbox).\r\n#### Expected:\r\n“Prerelease” tag for transitive packages will not show because the “Include prerelease” checkbox is not checked.\r\n\r\n#### Actual:\r\n“Prerelease” tag shows for transitive packages when the “Include prerelease” checkbox is not checked as below.\r\n![image](https://user-images.githubusercontent.com/20632625/201309183-0f4080ee-bdb0-485c-a824-8f1dbb9ca23d.png)\r\n#### Note: It is a regression from the feature “Transitive Package” merged in.\n\n### Verbose Logs\n\n_No response_"},{"Id":"25176089519","Type":"IssuesEvent","CreatedAt":"2022-11-11T09:23:25","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12234","RelatedDescription":"Opened issue \"[Bug Bash] “Prerelease” tag under package icon in the “Browse” tab and “Installed” tab will not show in real time after checking “Include prerelease” checkbox\" (#12234) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.5.0.75\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Details about Problem\r\nVS Version: Main\\33110.265\r\nNuGet Version: Dev\\6.5.0.75\r\nOS Version: Windows-11-Enterprise-22H2 ENU\r\n\r\n#### Repro Steps:\r\n1.\tOpen VS, click menu File->New Project, create a Console App (.Net Core) project.\r\n2.\tRight-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n3.\tClick the “Browse” tab and check the “Include prerelease” checkbox.\r\n4.\tInstall a package (which has prerelease version) into the project and click the “Installed” tab.\r\n#### Expected:\r\n“Prerelease” tag under package icon in the “Browse” tab (step3) and “Installed” tab (step4) will show in real time after checking “Include prerelease” checkbox. Same with the showing in the “Updates” tab as below.\r\n![image](https://user-images.githubusercontent.com/20632625/201308421-d7233a91-9864-4bbe-9e56-0e3966b5e646.png)\r\n#### Actual:\r\n“Prerelease” tag under package icon in the “Browse” tab (step3) and “Installed” tab (step4) will not show in real time after checking “Include prerelease” checkbox.\r\n![image](https://user-images.githubusercontent.com/20632625/201308496-d50a7b37-2061-47f1-ae1a-504631b49d02.png) \r\n#### Note: It is not a regression since it reproes on VS D16.11\\33027.164.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"25174778085","Type":"IssuesEvent","CreatedAt":"2022-11-11T08:14:13","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12233","RelatedDescription":"Opened issue \"[Push] The duplicated package was pushed again to the specific source using command “dotnet nuget push \"*. nupkg\" --skip-duplicate” \" (#12233) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nNuGet Client Dev\\6.5.0.75\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro steps:  \r\n\r\n1. Open VS and create a C# Class Library (.Net Framework) project. \r\n\r\n2. Type project name as “[Package01]” in “Project name” text box and click “Next” button. \r\n\r\n3. Build solution and make sure compilation succeeds.  \r\n\r\n4. Open “Developer Command Prompt”, cd to Package01 project path and execute execute “nuget spec”. \r\n\r\n5.  Execute “dotnet nuget pack Package01.csproj –include-symbols”. \r\n\r\n6.  Cd to “C:\\Users\\v-minlon\\source\\repos\\Package01\\Package01\\bin\\Debug”   \r\n\r\n7. Execute command “dotnet nuget push \"*. nupkg\" --skip-duplicate -s \\\\ddfiles\\Drops\\NuGet\\PushTest\\Aimee” \r\n\r\n#### Expected: \r\n\r\nThe duplicated package “Package01.1.0.0. nupkg” should be skipped under the specified source as the doc said as below. \r\n\r\n![MicrosoftTeams-image (4)](https://user-images.githubusercontent.com/84695155/201295232-81d4badc-6fab-4354-9fed-5c96f7b70c81.png)\r\n\r\n#### Actual: \r\n\r\nThere is a warning that said the option is not currently supported and the duplicated package “Package01.1.0.0. nupkg” was pushed successfully as below screenshot. \r\n![MicrosoftTeams-image (6)](https://user-images.githubusercontent.com/84695155/201295339-288783f7-e998-4d54-a593-0454827dce78.png)\r\n\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"25173103427","Type":"IssuesEvent","CreatedAt":"2022-11-11T06:22:23","Actor":"ranjeetkpGit","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12232","RelatedDescription":"Opened issue \"Changes in Project Reference (Project B) is not reflecting in Referencing Project (Project A)\" (#12232) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet core pack command\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI have two projects in .net standard 2.0, ProjectA and ProjectB. ProjectA referencing ProjectB.\r\n\r\nI am trying to create a a nuget package of ProjectA. \r\n\r\nWhen I make some changes in ProjectB and package ProjectA with new version, changes are not reflecting in new package.\r\n\r\nIf I make changes in ProjectB, upgrade package version of both ProjectA and ProjectB and create nuget package for both the projects then it worked.\n\n### Verbose Logs\n\n```shell\nHi,\r\nI have two projects in .net standard 2.0, ProjectA and ProjectB. ProjectA referencing ProjectB.\r\nI am trying to create a a nuget package of ProjectA. \r\n\r\nIssue- \r\nWhen I make some changes in ProjectB and package ProjectA with new version, changes are not reflecting in new package.\r\n\r\nIf I make changes in ProjectB, upgrade package version of both ProjectA and ProjectB and create nuget package for both the projects then it worked.\r\n\r\nI don't want to create package for ProjectB.\n```\n"},{"Id":"25169001445","Type":"IssuesEvent","CreatedAt":"2022-11-11T00:20:28","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12231","RelatedDescription":"Opened issue \"[Epic]: Add support for central package management to Visual Studio Package Manager UI\" (#12231) at NuGet/Home","RelatedBody":"This is a tracking epic for work related to adding support for CPM in PM UI\r\n\r\n- [ ] https://github.com/NuGet/Home/issues/11826\r\n- [ ] https://github.com/NuGet/Home/issues/12229\r\n- [ ] https://github.com/NuGet/Home/issues/12230"},{"Id":"25168998179","Type":"IssuesEvent","CreatedAt":"2022-11-11T00:20:11","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12230","RelatedDescription":"Opened issue \"[Bug]: Disable the option to update version when using VersionOverride in CPM\" (#12230) at NuGet/Home","RelatedBody":"If you use the PM UI to update a version of a package that is using VersionOverride it will succeed. VersionOverride wont change, only the version in Directory.Packages.props"},{"Id":"25168922488","Type":"IssuesEvent","CreatedAt":"2022-11-11T00:13:48","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12229","RelatedDescription":"Opened issue \"[Bug]: Disable the Update/Install button for floating versions in CPM in PMUI\" (#12229) at NuGet/Home","RelatedBody":"CPM doesn't allow the usage of Floating Versions, disable this in the PM UI "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2022-11-12T03:30:25.5851904Z","RunDurationInMilliseconds":1612}