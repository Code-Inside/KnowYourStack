{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24939408981","Type":"PullRequestEvent","CreatedAt":"2022-10-31T17:37:07","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9281","RelatedDescription":"Merged pull request \"Upload page UX polish\" (#9281) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add feature flag\r\n  * Add warning when package without readme\r\n  * Reword warning when package without license, align with readme\r\n  * Upload collapse hide when there is metadata display in verify\r\n* Display unnecessary metadata when is not specified\r\n* Remove Italic font \r\n\r\n**Additionally** UX is reviewed by UX team\r\n\r\nBefore: \r\n![Screenshot 2022-10-24 150028](https://user-images.githubusercontent.com/64443925/198160929-acc37a67-acb7-4281-848f-eceb9730e3ab.png)\r\n\r\nAfter: \r\nFeature flag is off: \r\n![Screenshot 2022-10-26 160341](https://user-images.githubusercontent.com/64443925/198159666-dc07f9cd-459f-4f36-84a7-ea8a1c0561ca.png)\r\n\r\nFeature flag is on\r\n![Screenshot 2022-10-26 160308](https://user-images.githubusercontent.com/64443925/198159688-6f6f24a0-3be2-4f80-81f4-71504a432318.png)\r\n\r\nAddresses \r\n\r\n- [x] https://github.com/NuGet/NuGetGallery/issues/9183\r\n- [x] https://github.com/NuGet/NuGetGallery/issues/9224\r\n- [x] https://github.com/NuGet/NuGetGallery/issues/9223"},{"Id":"24933196384","Type":"IssuesEvent","CreatedAt":"2022-10-31T13:19:52","Actor":"nil4","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9290","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Download package Microsoft.Extensions.Configuration.Abstractions v6.0.0 returns a zero-length `.nupkg`\" (#9290) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Describe the bug\r\n\r\nWe use Sonatype Nexus Repository Manager to fetch packages from `nuget.org` and make them available in an on-premises development environment.\r\n\r\nToday, Nexus logs indicated issues downloading the package [`Microsoft.Extensions.Configuration.Abstractions v6.0.0`](https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0) from nuget.org. Specifically, the error message is:\r\n\r\n```\r\norg.apache.http.ConnectionClosedException: Premature end of Content-Length delimited message body (expected: 67,830; received: 0), Cause: Premature end of Content-Length delimited message body (expected: 67,830; received: 0)\r\n```\r\n\r\nThe issue is not specific to Nexus RM. It can be also observed by attempting to download the specific version of the package from a browser. \r\n\r\nOn the package page at https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0, clicking the *Download package* link in the sidebar point to https://www.nuget.org/api/v2/package/Microsoft.Extensions.Configuration.Abstractions/6.0.0. \r\n\r\nThis redirects to https://globalcdn.nuget.org/packages/microsoft.extensions.configuration.abstractions.6.0.0.nupkg, which responds with these headers:\r\n\r\n```\r\ncontent-length: 67830\r\ncontent-md5: AEtFGYgfyXDXs/Svsym4yw==\r\ncontent-type: application/octet-stream\r\ndate: Fri, 28 Oct 2022 15:10:10 GMT\r\netag: 0x8D9A2821DFD2A82\r\n```\r\n\r\nNote, in particular, `content-length` indicates a response body of `67830` should follow. However, the response size is actually zero.\r\n\r\nThis confirms the HTTP protocol violation reported by Nexus RM, and results in the download of a zero-sized `microsoft.extensions.configuration.abstractions.6.0.0.nupkg` file.\r\n\r\nIn case it matters, the server IP address that returns the zero-length response is 52.240.159.111.\r\n\r\n\r\n### Repro Steps\r\n\r\n1. On this page https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0\r\n2. Open the browser developer tools, and click the *Download package* link in the sidebar.\r\n3. The initial request to https://www.nuget.org/api/v2/package/Microsoft.Extensions.Configuration.Abstractions/6.0.0 is redirected to https://globalcdn.nuget.org/packages/microsoft.extensions.configuration.abstractions.6.0.0.nupkg\r\n4. Note in the browser developer tools that the final response includes a `content-length: 67830` header.\r\n5. Examine the `microsoft.extensions.configuration.abstractions.6.0.0.nupkg` as saved by the browser, and note that its size is zero.\r\n\r\nThe mismatch between the declared `content-length` and actual response body size is an HTTP protocol violation. The impact is that an invalid NuGet package file is served to clients.\r\n\r\n### Expected Behavior\r\n\r\nA 66.24 KB `microsoft.extensions.configuration.abstractions.6.0.0.nupkg` to be served, matching the information shown at https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\nResponse metadata and headers as captured by browser developer tools:\r\n\r\nRequest URL: https://globalcdn.nuget.org/packages/microsoft.extensions.configuration.abstractions.6.0.0.nupkg\r\nRequest Method: GET\r\nStatus Code: 200 \r\nRemote Address: 152.199.23.209:443\r\nReferrer Policy: strict-origin-when-cross-origin\r\n\r\naccept-ranges: bytes\r\naccess-control-allow-origin: *\r\naccess-control-expose-headers: x-ms-request-id,Server,x-ms-version,Content-Length,Date,Transfer-Encoding\r\nage: 28866\r\ncache-control: max-age=86400\r\ncontent-length: 67830\r\ncontent-md5: AEtFGYgfyXDXs/Svsym4yw==\r\ncontent-type: application/octet-stream\r\ndate: Fri, 28 Oct 2022 15:26:08 GMT\r\netag: 0x8D9A2821DFD2A82\r\nexpires: Sat, 29 Oct 2022 15:26:08 GMT\r\nlast-modified: Mon, 08 Nov 2021 06:36:38 GMT\r\nserver: ECAcc (via/F3B3)\r\nstrict-transport-security: max-age=31536000; includeSubDomains\r\nx-cache: HIT\r\nx-cdn-rewrite: Root path in dist\r\nx-content-type-options: nosniff\r\nx-ms-blob-type: BlockBlob\r\nx-ms-lease-status: unlocked\r\nx-ms-meta-da7b2905_0f3c_4262_921c_b1593d1336f1_esrp_requestid: e657510e-e51e-4997-9f0e-f1a9f17c75dc\r\nx-ms-meta-sha512: gl/XhBjDcfWRQwcPt4jgOBz4pSzY/lHTTDE8XRgH77WX3pf6iGDdNDpiHg4fAbcL0Hq83rA4UNyMfsEPbgnWrQ==\r\nx-ms-request-id: 00e02cfe-d01e-0011-069e-ea2743000000\r\nx-ms-version: 2009-09-19"},{"Id":"24909484577","Type":"IssuesEvent","CreatedAt":"2022-10-29T17:30:31","Actor":"erikbartlow","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9292","RelatedDescription":"Opened issue \"[Question]. Are there plans for a .net core 6+ version?\" (#9292) at NuGet/NuGetGallery","RelatedBody":"Since .NET 4.5.2 is soon to be out of support is there a plan to support .NET Core?"},{"Id":"24908989784","Type":"IssuesEvent","CreatedAt":"2022-10-29T16:19:19","Actor":"shps951023","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9291","RelatedDescription":"Opened issue \"[Question] How to get repository commit property?\" (#9291) at NuGet/NuGetGallery","RelatedBody":"My project MiniExcel on nuget will feedback missing repository commit information, link : https://nuget.info/packages/MiniExcel/1.28.2\r\n\r\n![image](https://user-images.githubusercontent.com/12729184/198841871-ad5b1a8b-bcb3-4f95-8719-d05d1599dd5e.png)\r\n\r\nbut dapper nuget project can have it, why? really appreciate!\r\n\r\n![image](https://user-images.githubusercontent.com/12729184/198841805-aa6dee35-0278-4e37-8b3a-b0325f502ae9.png)\r\n"},{"Id":"24895370888","Type":"IssuesEvent","CreatedAt":"2022-10-28T15:21:07","Actor":"nil4","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9290","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Download package Microsoft.Extensions.Configuration.Abstractions v6.0.0 returns a zero-length `.nupkg`\" (#9290) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWe use Sonatype Nexus Repository Manager to fetch packages from `nuget.org` and make them available in an on-premises development environment.\r\n\r\nToday, Nexus logs indicated issues downloading the package `Microsoft.Extensions.Configuration.Abstractions v6.0.0`[https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0] from nuget.org. Specifically, the error message is:\r\n\r\n```\r\norg.apache.http.ConnectionClosedException: Premature end of Content-Length delimited message body (expected: 67,830; received: 0), Cause: Premature end of Content-Length delimited message body (expected: 67,830; received: 0)\r\n```\r\n\r\nThe issue is not specific to Nexus RM. It can be also observed by attempting to download the specific version of the package from a browser. \r\n\r\nOn the package page at https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0, clicking the *Download package* link in the sidebar point to https://www.nuget.org/api/v2/package/Microsoft.Extensions.Configuration.Abstractions/6.0.0. \r\n\r\nThis redirects to https://globalcdn.nuget.org/packages/microsoft.extensions.configuration.abstractions.6.0.0.nupkg, which responds with these headers:\r\n\r\n```\r\ncontent-length: 67830\r\ncontent-md5: AEtFGYgfyXDXs/Svsym4yw==\r\ncontent-type: application/octet-stream\r\ndate: Fri, 28 Oct 2022 15:10:10 GMT\r\netag: 0x8D9A2821DFD2A82\r\n```\r\n\r\nNote, in particular, `content-length` indicates a response body of `67830` should follow. However, the response size is actually zero.\r\n\r\nThis confirms the HTTP protocol violation reported by Nexus RM, and results in the download of a zero-sized `microsoft.extensions.configuration.abstractions.6.0.0.nupkg` file.\r\n\r\nIn case it matters, the server IP address that returns the zero-length response is 52.240.159.111.\r\n\n\n### Repro Steps\n\n1. On this page https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0\r\n2. Open the browser developer tools, and click the *Download package* link in the sidebar.\r\n3. The initial request to https://www.nuget.org/api/v2/package/Microsoft.Extensions.Configuration.Abstractions/6.0.0 is redirected to https://globalcdn.nuget.org/packages/microsoft.extensions.configuration.abstractions.6.0.0.nupkg\r\n4. Note in the browser developer tools that the final response includes a `content-length: 67830` header.\r\n5. Examine the `microsoft.extensions.configuration.abstractions.6.0.0.nupkg` as saved by the browser, and note that its size is zero.\r\n\r\nThe mismatch between the declared `content-length` and actual response body size is an HTTP protocol violation. The impact is that an invalid NuGet package file is served to clients.\n\n### Expected Behavior\n\nA 66.24 KB `microsoft.extensions.configuration.abstractions.6.0.0.nupkg` to be served, matching the information shown at https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/6.0.0\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24880558370","Type":"IssuesEvent","CreatedAt":"2022-10-28T00:22:38","Actor":"Zettersten","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9289","RelatedDescription":"Opened issue \"[Feature]: Facet or categorical searches based on package \"type\" or \"sdk type\"\" (#9289) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nMy peers and I would love to discover new Blazor related packages. For me, that involves going to Nuget.org and typing \"Blazor\" before the rest of my query. \r\n\r\nThis type of search query will return results where the term \"Blazor\" exists in some form or fashion within the readme, description, or title (and more I'm sure). However, I've seen cases where packages do not include the word \"Blazor\" in the aforementioned places. for them, they are excluded from results.\n\n### The Elevator Pitch\n\nTired of prepending the word \"Blazor\" to the search box on Nuget.org? Me too! \r\n\r\nLet's introduce a search feature that allows users to check a box to \"fine tune\" the result set. A user can check (for example) Blazor, MVC, Razor Component, MVC API, Minimal API, etc... And only results that fit the criteria are returned.\r\n\r\n1. It's a better UX\r\n2. Has discoverability side-effects\r\n3. Elevates authors in their respective \"category\"\n\n### Additional Context and Details\n\nI'm a tinkerer and I enjoy trying new things and identifying potential technology trends. I want to find packages relevant to the codes bases I'm working in.\r\n\r\n1. Github has a page dedicated to exploring. They have highlights, trending repos, language specific filtering, etc...\r\n2. NPM is more convention based. If I want to search all things related to gulp. I'd search \"gulp-*\". Or something specific to the world of express. I'd search \"express-*\". Or another approach would be \"@vercel/*\" where this query implies that I want all packages related to vercel.\r\n\r\nFFT"},{"Id":"24879754903","Type":"IssuesEvent","CreatedAt":"2022-10-27T23:05:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9269","RelatedDescription":"Closed issue \"[A11y]Syntax highlighting in Read Mes does not have sufficient contrast.\" (#9269) at NuGet/NuGetGallery","RelatedBody":"Environment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org/packages/AutoMapper/\r\nWindows version: Windows 10\r\nChromiumEdge Version: 105.0.1343.42 (Official Build) (64-bit)\r\n\r\nChecking the URL above, the syntax highlighting in the readme does not meet sufficient contrast requirements."},{"Id":"24879753612","Type":"IssuesEvent","CreatedAt":"2022-10-27T23:05:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9258","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The generated link for owner request is broken.\" (#9258) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Describe the bug\r\n\r\nThe link in the email doesn't point to www.nuget.org.\r\n\r\n### Repro Steps\r\n\r\nAdd a package owner and check the generated link in the email.\r\n\r\n### Expected Behavior\r\n\r\nThe link should be workable. What about other scenarios?\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24944143151","Type":"IssuesEvent","CreatedAt":"2022-10-31T21:47:31","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12208","RelatedDescription":"Opened issue \"SettingsLoadingContext can throw an exception when multiple threads are loading settings files concurrently\" (#12208) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n6.5\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nIn https://github.com/NuGet/NuGet.Client/pull/4852 I changed `SettingsLoadingContext` to use a simple `lock()` and `Dictionary` but have started to notice a few places where `Dictionary<TKey, TValue>.TryGetValue()` is throwing an `ArgumentNullException` in our unit tests:\r\n\r\nhttps://dev.azure.com/devdiv/DevDiv/_build/results?buildId=6896050&view=logs&j=0c83083a-a889-573e-9424-8b6429fd5d0d&t=c1fa11d9-86bf-5319-ffe4-e757a6307585\r\n\r\n```\r\nat System.Collections.Generic.Dictionary`2.FindEntry(TKey key)\r\nat System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue & value)\r\nat NuGet.Configuration.SettingsLoadingContext.GetOrCreateSettingsFile(String filePath, Boolean isMachineWide, Boolean isReadOnly) in / Users / runner / work / 1 / s / src / NuGet.Core / NuGet.Configuration / Settings / SettingsLoadingContext.cs:line 62\r\nat NuGet.Configuration.Test.SettingsLoadingContextTests.<> c__DisplayClass0_0.< GetOrCreateSettingsFile_OnlyReadsFileOnce_WhenAlreadyExists > b__1(Int32 i) in / Users / runner / work / 1 / s / test / NuGet.Core.Tests / NuGet.Configuration.Test / SettingsLoadingContextTests.cs:line 31\r\nat System.Threading.Tasks.Parallel.<> c__DisplayClass19_0`1.< ForWorker > b__1(RangeWorker & currentWorker, Int32 timeout, Boolean & replicationDelegateYieldedBeforeCompletion)\r\n```\r\n\r\nThe prevailing theory is that `Dictionary<TKey, TValue>` does not support any concurrency so one thread can't call `Add()` while another is calling `TryGetValue()`.  \n\n### Verbose Logs\n\n_No response_"},{"Id":"24943764695","Type":"IssuesEvent","CreatedAt":"2022-10-31T21:23:07","Actor":"vritant24","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12207","RelatedDescription":"Opened issue \"when net*-windows is specified in a nuspec, nuget pack fails with NU1012\" (#12207) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild, visualstudio\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nWhen creating a nuspec for a package that includes support for `net6.0-windows`, pack fails with [NU1012](https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu1012). \r\n1. The page doesn't clearly specify what a `TargetPlatformVersion` here means and doesn't provide examples on how to solve it\r\n2. A project built for net6.0-windows builds and runs fine without specifying a targetPlatformVersion as it defaults to net6.0-windows7.0 by default (Acc to this [issue](https://github.com/dotnet/sdk/issues/14553#issuecomment-730574926))\r\n\r\nIt would be great if more specific ways to solve this are provided in the error page. \r\nIt would also be great if the default tfm used by most works in a nuspec as is without needing to specify a platform version.\n\n### Verbose Logs\n\n_No response_"},{"Id":"24941839415","Type":"IssuesEvent","CreatedAt":"2022-10-31T19:38:56","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12062","RelatedDescription":"Closed issue \"[Bug]: Visual Studio Credential Provider is not invoked when users fix their stale accounts by signing into their account unless VS is restarted.\" (#12062) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nVisual Studio 17.3\r\n\r\n### Worked before?\r\n\r\nN/A\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n1. Configure a private Azure DevOps feed in NuGet.Config file.\r\n2. Open Visual Studio and navigate to PM UI\r\n3. VS credential provider is invoked for credentials.\r\n4. Imagine there are stale accounts in the VS keychain.\r\n5. Package source returns 401 response because the credentials are stale. VS displays an error message in `View -> Output` window and adds an error entry in the error list window.\r\n6. User then sign in into Visual Studio using Account Settings window which should fix stale credentials issue.\r\n7. Navigate to browse tab again.\r\n\r\n**Actual:**\r\nCredential provider is not invoked during step 7. Hence VS continues to display an error message in `View -> Output` window and adds an error entry in the error list window saying unable to access a source. Current behavior is users have to restart Visual Studio for NuGet to invoke Credential Provider again.\r\n\r\n**Expected:**\r\nCredential provider should be invoked in step 7 so that NuGet can obtain the latest valid credentials to access the package source.\r\n\r\nContext - NuGet starts a new activity id for every operation such as browsing packages, installing packages. Hence, I assume activity id to be different for every activity. AFAIK ActivityCorrelationId.StartNew() [Search · ActivityCorrelationId (github.com)](https://github.com/NuGet/NuGet.Client/search?q=ActivityCorrelationId) is invoked before every NuGet operation. Hence credential provider should be invoked every time as long as activity id is different.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24913938291","Type":"IssuesEvent","CreatedAt":"2022-10-30T06:52:28","Actor":"amir4q","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12205","RelatedDescription":"Opened issue \"nt\" (#12205) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK, Other/NA\n\n### The Elevator Pitch\n\nad\n\n### Additional Context and Details\n\nad"},{"Id":"24908129381","Type":"IssuesEvent","CreatedAt":"2022-10-29T14:21:40","Actor":"gh-andre","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12204","RelatedDescription":"Opened issue \"Please provide capability in Nuget CLI to add packages into projects\" (#12204) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\n`nuget.exe` is missing a chunk of package management functionality in that can download and unpack packages with `nuget install`, but it won't modify C/C++ project files, which makes it impossible to automate adding packages to generated projects, such as those generated by CMake.\r\n\r\nPlease provide a way to invoke `nuget install` in a way that can update `.vcxproj` files to propagate `.props` and `.targets` from packages into project files, including per-project configurations, such as `packages.<project-name>.config`.\n\n### Additional Context and Details\n\nOne use of this is to allow installing Nuget dependencies for CMake-generated projects, which lack support for C/C++ Nuget packages. With this feature, it would be possible to run these commands to resolve all project dependencies:\r\n```\r\ncmake -S . -B build -G \"Visual Studio 17 2022\"\r\n\r\nnuget install package-X --project-name project-A\r\nnuget install package-Y --project-name project-A\r\nnuget install package-X --project-name project-B\r\n\r\ncmake --build build --config Debug\r\ncmake --build build --config Release\r\n```\r\nBeing able to modify project files also will provide a more complete solution for package management, which now is scattered between various Nuget tools and Visual Studio UI."},{"Id":"24907982162","Type":"IssuesEvent","CreatedAt":"2022-10-29T14:00:48","Actor":"gh-andre","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12203","RelatedDescription":"Opened issue \"Nuget package console fails to install packages for projects in the same directory\" (#12203) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nVisual Studio 2022 x64\n\n### Worked before?\n\ndon't know\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nUse the provided sample solution that has two .vcxproj files in the same directory as the solution - `proj-A.vcxproj` and `proj-B.vcxproj`. Install a Nuget package into `proj-A` via Nuget package console:\r\n```\r\nInstall-Package StoneSteps.zLib.Static -ProjectName proj-A\r\n```\r\nIt will install the package and `proj-A` will be able to use zLib from the package.\r\n\r\nAttempt to install the same package for `proj`-B`:\r\n```\r\nInstall-Package StoneSteps.zLib.Static -ProjectName proj-B\r\n```\r\nNuget refuses to do so with this message:\r\n```\r\nPackage 'StoneSteps.zLib.Static.1.2.12.1' already exists in project 'proj-B'\r\n```\r\nHowever, because `proj-B.vcxproj` wasn't modified to add `.props` and `.targets` from the package, it won't build. Moving projects into their own directories seems to make it work, but project file location shouldn't be dictated by a bug in the packager.\r\n\r\nThis is the sample solution. It requires C++ installed to build the solution, but the bug probably can be reproduced without it.\r\n\r\n[bug-nuget-2-projects.zip](https://github.com/NuGet/Home/files/9893827/bug-nuget-2-projects.zip)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"24902765056","Type":"IssuesEvent","CreatedAt":"2022-10-28T23:33:20","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12196","RelatedDescription":"Closed issue \"[Bug]: Can not recognize Password start with symbol @\" (#12196) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuGet Version: 5.10.0.7240\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nhttps://learn.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-sources\r\n\r\nupdate the nuget source with user name and password \r\n1.add it successfully\r\nnuget sources add -name foo.bar -source C:\\NuGet\\local -username foo -password bar\r\n2.update it successfully\r\nnuget sources update -name foo.bar -source C:\\NuGet\\local -username foo -password bar\r\n3.failed with password start with @\r\nnuget sources update -name foo.bar -source C:\\NuGet\\local -username foo -password @bar\r\n\r\n> Missing option value for: '-password'\r\n> NuGet.Commands.CommandException: Missing option value for: '-password'\r\n>    at NuGet.CommandLine.CommandLineParser.ExtractOptions(ICommand command, IEnumerator`1 argsEnumerator)\r\n>    at NuGet.CommandLine.CommandLineParser.ParseCommandLine(IEnumerable`1 commandLineArgs)\r\n>    at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\n4.failed evenif I quote password\r\n nuget sources update -name foo.bar -source C:\\NuGet\\local -username foo -password \"@bar\"\r\n\r\n> Unhandled Exception: System.FormatException: Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n>    at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n>    at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n>    at System.String.Format(String format, Object[] args)\r\n>    at NuGet.Common.CommandLineResponseFile.ParseArgsResponseFiles(String[] args, Int32 parseArgsResponseFileRecursionDepth)\r\n>    at NuGet.CommandLine.Program.Main(String[] args)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"24902578944","Type":"IssuesEvent","CreatedAt":"2022-10-28T23:10:25","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12202","RelatedDescription":"Closed issue \"Multi \"TargetFrameworks\" and multiple <AssemblyName conditioned elements does not create project.assets.json file properly\" (#12202) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Multi-TargetFrameworks-and-multiple-A/10151923)._\n\n---\n[severity:It's more difficult to complete my work]\r\nSystem:\nWindows 11 Enterprise, Version 21H2 (Build 22000.795)\nVisual Studio 2022 (Version 17.3.4)\nProject: Class Library, DotNet 6.0\nNo Nuget packages used\n\nI'm trying to target both Net47 and DotNet 6.0 with a class library while assigning a different AssemblyName to each target. I've created a simple empty sample project (attached) with the following project file contents. I get errors when I try to build/rebuild/clean in VS2022. (Note: typing ```dotnet build``` works fine from the \"Developer PowerShell\" console within VS. When I remove ```net47``` from the TargetFrameworks list, it works fine even with the below ```AssemblyNames``` elements in place.\n\n```\n\n\n  \n    net47;net6.0\n    disable\n    disable\n    $(MSBuildProjectName)_Framework\n    $(MSBuildProjectName)\n  \n\n\n```\n\nError:\n\n```\nBuild started...\n1>------ Build started: Project: Multi_TargetFrameworks_ProjectAssetsJsonBug, Configuration: Debug Any CPU ------\nFailed to restore C:\\Users\\mweintraub\\source\\repos\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug.csproj (in 2 ms).\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\n1>C:\\Program Files\\dotnet\\sdk\\6.0.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(267,5): error NETSDK1005: Assets file 'C:\\Users\\mweintraub\\source\\repos\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\obj\\project.assets.json' doesn't have a target for 'net6.0'. Ensure that restore has run and that you have included 'net6.0' in the TargetFrameworks for your project.\n1>Done building project \"Multi_TargetFrameworks_ProjectAssetsJsonBug.csproj\" -- FAILED.\n1>C:\\Program Files\\dotnet\\sdk\\6.0.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(267,5): error NETSDK1005: Assets file 'C:\\Users\\mweintraub\\source\\repos\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\obj\\project.assets.json' doesn't have a target for 'net47'. Ensure that restore has run and that you have included 'net47' in the TargetFrameworks for your project.\n1>Done building project \"Multi_TargetFrameworks_ProjectAssetsJsonBug.csproj\" -- FAILED.\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n```\n\nI've also tried separating out the ```AssemblyName``` values into separately conditioned ```PropertyGroups``` without any changes.\n\n---\n### Original Comments\n\n#### Feedback Bot on 9/19/2022, 06:56 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"24900744503","Type":"IssuesEvent","CreatedAt":"2022-10-28T20:35:21","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12202","RelatedDescription":"Opened issue \"Multi \"TargetFrameworks\" and multiple <AssemblyName conditioned elements does not create project.assets.json file properly\" (#12202) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Multi-TargetFrameworks-and-multiple-A/10151923)._\n\n---\n[severity:It's more difficult to complete my work]\r\nSystem:\nWindows 11 Enterprise, Version 21H2 (Build 22000.795)\nVisual Studio 2022 (Version 17.3.4)\nProject: Class Library, DotNet 6.0\nNo Nuget packages used\n\nI'm trying to target both Net47 and DotNet 6.0 with a class library while assigning a different AssemblyName to each target. I've created a simple empty sample project (attached) with the following project file contents. I get errors when I try to build/rebuild/clean in VS2022. (Note: typing ```dotnet build``` works fine from the \"Developer PowerShell\" console within VS. When I remove ```net47``` from the TargetFrameworks list, it works fine even with the below ```AssemblyNames``` elements in place.\n\n```\n\n\n  \n    net47;net6.0\n    disable\n    disable\n    $(MSBuildProjectName)_Framework\n    $(MSBuildProjectName)\n  \n\n\n```\n\nError:\n\n```\nBuild started...\n1>------ Build started: Project: Multi_TargetFrameworks_ProjectAssetsJsonBug, Configuration: Debug Any CPU ------\nFailed to restore C:\\Users\\mweintraub\\source\\repos\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug.csproj (in 2 ms).\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\n1>C:\\Program Files\\dotnet\\sdk\\6.0.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(267,5): error NETSDK1005: Assets file 'C:\\Users\\mweintraub\\source\\repos\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\obj\\project.assets.json' doesn't have a target for 'net6.0'. Ensure that restore has run and that you have included 'net6.0' in the TargetFrameworks for your project.\n1>Done building project \"Multi_TargetFrameworks_ProjectAssetsJsonBug.csproj\" -- FAILED.\n1>C:\\Program Files\\dotnet\\sdk\\6.0.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(267,5): error NETSDK1005: Assets file 'C:\\Users\\mweintraub\\source\\repos\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\Multi_TargetFrameworks_ProjectAssetsJsonBug\\obj\\project.assets.json' doesn't have a target for 'net47'. Ensure that restore has run and that you have included 'net47' in the TargetFrameworks for your project.\n1>Done building project \"Multi_TargetFrameworks_ProjectAssetsJsonBug.csproj\" -- FAILED.\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n```\n\nI've also tried separating out the ```AssemblyName``` values into separately conditioned ```PropertyGroups``` without any changes.\n\n---\n### Original Comments\n\n#### Feedback Bot on 9/19/2022, 06:56 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":13,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-11-01T03:30:25.3777342Z","RunDurationInMilliseconds":1487}