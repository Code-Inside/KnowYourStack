{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31464017016","Type":"IssuesEvent","CreatedAt":"2023-08-29T23:27:36","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9608","RelatedDescription":"Closed issue \"[Usability]Search Results are difficult to navigate\" (#9608) at NuGet/NuGetGallery","RelatedBody":"Copies from: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1853049/\r\n\r\nSteps to reproduce:\r\nTask 7: Search for packages\r\n\r\nBL1 Details:\r\nDevice Type: Windows 11 Professional Version 22H2 (OS Build 22621.1555), Chrome Version 114.0.5735.110\r\nScreen Reader: JAWS Professional Edition Version 2023.2212.23\r\n\r\nBL2 Details:\r\nDevice Type: Windows 11 Home Version 22H2 (OS Build 22621.1848), Microsoft Edge version 116.0.1908.0\r\nScreen Reader: NVDA version 2023.1\r\n\r\nIssue Details:\r\nParticipant was uncertain where second result started. He stated that these results would be better in a tabular form.\r\nParticipant stated that each search result should be a heading, which would allow her to navigate to each result easily.\r\n\r\nRecommendation:\r\nConsider showing results in a table that would allow the advantages of table navigation for screen reader users."},{"Id":"31464015750","Type":"IssuesEvent","CreatedAt":"2023-08-29T23:27:30","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9609","RelatedDescription":"Closed issue \"[Usability]Missing Confirmation after adding Members to organization\" (#9609) at NuGet/NuGetGallery","RelatedBody":"Copied from: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1853045/\r\nSteps to reproduce:\r\n\r\nTask 6: Add a member to your organization\r\nIssue Details:\r\nParticipant was unsure if he had added a member and would like a confirmation message after Add"},{"Id":"31464014824","Type":"IssuesEvent","CreatedAt":"2023-08-29T23:27:25","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9607","RelatedDescription":"Closed issue \"[Usability]Package Details Tabs read as collapsed\" (#9607) at NuGet/NuGetGallery","RelatedBody":"Copied from: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1853052/\r\n\r\nSteps to reproduce:\r\nTask 8: View package details\r\n\r\nBL1 Details:\r\nDevice Type: Windows 11 Professional Version 22H2 (OS Build 22621.1555), Chrome Version 114.0.5735.110\r\nScreen Reader: JAWS Professional Edition Version 2023.2212.23\r\n\r\nBL2 Details:\r\nDevice Type: Windows 11 Home Version 22H2 (OS Build 22621.1848), Microsoft Edge version 116.0.1908.0\r\nScreen Reader: NVDA version 2023.1\r\n\r\nIssue Details:\r\nParticipant doesn’t like the fact that all the tabs, except Readme, are collapsed even when selected.\r\nParticipant noted that the tabs read as “collapsed” when selected\r\n\r\nRecommendation:\r\nConsider by default, expanding a tab’s content when that tab is selected."},{"Id":"31384230481","Type":"PullRequestEvent","CreatedAt":"2023-08-25T20:08:57","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9635","RelatedDescription":"Merged pull request \"[ReleasePrep][2023.08.24]RI of dev into main\" (#9635) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"31382412657","Type":"IssuesEvent","CreatedAt":"2023-08-25T18:27:18","Actor":"jsmarble","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9636","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Badges blocked for dl.circleci.com\" (#9636) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe [documentation for badges](https://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges) does not include the current subdomain for CircleCI badges.\r\n\r\nPlease add dl.circleci.com to the allowed list.\n\n### Repro Steps\n\n1. Modify a nuget package listing with a readme containing a CircleCI badge\r\n2. Notice the badge is blocked\r\n\n\n### Expected Behavior\n\nThe badge is loaded and displayed\n\n### Screenshots\n\n![Screenshot 2023-08-25 132635](https://github.com/NuGet/NuGetGallery/assets/351694/cef17b5e-dfa0-4e40-a8bb-780ec88d5fde)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31360358740","Type":"PullRequestEvent","CreatedAt":"2023-08-24T23:11:46","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9635","RelatedDescription":"Opened pull request \"[ReleasePrep][2023.08.24]RI of dev into main\" (#9635) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"31331445765","Type":"PullRequestEvent","CreatedAt":"2023-08-24T00:12:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9605","RelatedDescription":"Merged pull request \"Not tracking package push failures when package is a duplicate.\" (#9605) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4867"},{"Id":"31325325034","Type":"IssuesEvent","CreatedAt":"2023-08-23T18:17:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9634","RelatedDescription":"Opened issue \"[NuGet.org Bug]: V3 monitoring gets stuck on a deletion of a package with SemVer 2 metadata\" (#9634) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nThe package \"MySql.EntityFrameworkCore\" \"6.0.16+MySQL8.1.0\" went through the following steps:\r\n\r\n1. It was uploaded by the author.\r\n2. It failed validation due to an incorrect signing certificate.\r\n3. It was pushed again with a proper signing certificate. This resulted in a delete audit entry for the previous copy of that package, which resulted in a delete catalog leaf item because a delete audit was created. Having a delete audit is reasonable. Having a delete leaf is questionable since the package never existed in the catalog to begin with. It's generally harmless though since it is a delete of a non-existent package.\r\n4. The package was then successfully validated resulting in a PackageDetails catalog leaf.\r\n\r\nThe V3 monitoring job \"monitoringprocessing\" produced an \"unknown\" validation record for the queue message produced by \"db2monitoring\" after it saw the delete leaf created in step 3. The problem is that the record had the version \"6.0.16\" in the blob name. It should have had the lowercase full version \"6.0.16+mysql8.1.0\".\r\n\r\nThe effect of this is that the V3 monitoring was stuck on this \"unknown\" blob indefinitely. Unfortunately, the V3 monitoring pipeline uses the full version for its blob names causing build full version and normalized version differences (i.e. versions with metadata like `1.0.0+foo` or `6.0.16+MySQL8.1.0`) to potentially get stuck.\r\n\r\nThis is the root cause: https://github.com/NuGet/NuGetGallery/issues/9633\n\n### Repro Steps\n\nThis should be do-able on DEV.\r\n\r\nProduce a delete leaf for a package version build metadata. You should be able to soft delete a validating package for this.\r\n\r\nVerify that there is an \"unknown\" blob saved to the V3 monitoring container. The blob should not have build metadata in the name.\r\n\r\nUpload a package with that version containing build metadata (`+foo` in `1.0.0+foo` for example).\r\n\r\nThe \"unknown\" blob should remain stuck there forever.\n\n### Expected Behavior\n\nPackages should not be stuck in V3 monitoring for any reason aside from invalid metadata.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31325091785","Type":"IssuesEvent","CreatedAt":"2023-08-23T18:07:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9633","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Delete catalog leaves use normalized version for \"version\" attribute, not full version\" (#9633) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nCurrently, the `PackageDetails` catalog leaf documents have the full version as their `version` property. This behavior is undocumented (the docs just say \"version\" leaving the full version vs. normalized vs. original, non-normalized version decision undefined). It is implemented here: \r\nhttps://github.com/NuGet/NuGet.Jobs/blob/5e425c7c3dbc8fbfcbafebdc0638babfa449f69f/src/Catalog/xslt/nuspec.xslt#L178-L180\r\n\r\nThe `PackageDelete` catalog leaf document uses normalized version:\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/5e425c7c3dbc8fbfcbafebdc0638babfa449f69f/src/Catalog/DeleteCatalogItem.cs#L22\r\n\r\nThe effect of this is that any catalog reader than needs the full version for it's work will potentially skip or incorrectly process deleted packages where the full version diverges from the normalized version.\n\n### Repro Steps\n\nLook at the delete catalog leaf for this package:\r\nhttps://api.nuget.org/v3/catalog0/data/2023.07.18.13.25.35/mysql.entityframeworkcore.6.0.16.json\r\n\r\nNow look at the details leaf:\r\nhttps://api.nuget.org/v3/catalog0/data/2023.07.18.13.26.57/mysql.entityframeworkcore.6.0.16.json\r\n\r\nThe `version` attribute is different.\n\n### Expected Behavior\n\nWe should consistently put normalized, full, or original version string in given properties.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31299469214","Type":"PullRequestEvent","CreatedAt":"2023-08-22T21:42:17","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9632","RelatedDescription":"Merged pull request \"Added bootstrap file\" (#9632) at NuGet/NuGetGallery","RelatedBody":"I didn't know that I was also supposed to add bootstrap-theme.css with my UI changes. Adding it now."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"31463769211","Type":"IssuesEvent","CreatedAt":"2023-08-29T23:08:07","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12789","RelatedDescription":"Closed issue \"Opt-out of \"HTTPS everywhere\" : do not warn for HTTP sources when http sources are used in push/delete operations\" (#12789) at NuGet/Home","RelatedBody":"When `allowInsecureConnections` property in packageSources section is set to true in NuGet.Config files, suppress warnings for HTTP sources when http sources are used in push/delete operations.\r\n\r\nThe PR enable the HTTP warnings in this scenario is: https://github.com/NuGet/NuGet.Client/pull/4552"},{"Id":"31463242020","Type":"IssuesEvent","CreatedAt":"2023-08-29T22:29:09","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12862","RelatedDescription":"Opened issue \"Solution Explorer info bar that warns of vulnerabilities persists after vulnerable package is uninstalled\" (#12862) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nlatest in dev\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nRepro:\r\n1. Create or open a project or solution, such as a .NET 7.0 Console App.\r\n2. Right click project and click Manage NuGet Packages\r\n3. On Browse tab, search for vulnerable package such as NewtsonSoft.Json version 6.0.x\r\n4. Click Install\r\n5. Note: Warning shows in Solution Explorer saying there's a package vulnerability.\r\n6. Now uninstall the vulnerable package.\r\n\r\nExpected:\r\nInfo bar warning goes away in Solution Explorer\r\n\r\nActual:\r\n![image](https://github.com/NuGet/Home/assets/10777837/eb1c5901-c56b-465b-8141-bfd14354c3ce)\r\n\r\nWarning message on Solution Explorer persists even after vulnerable package has been uninstalled.\n\n### Verbose Logs\n\n_No response_"},{"Id":"31461744374","Type":"PullRequestEvent","CreatedAt":"2023-08-29T21:02:55","Actor":"paulnsac","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12860","RelatedDescription":"Opened pull request \"Paulnsac patch 8\" (#12860) at NuGet/Home","RelatedBody":"~P"},{"Id":"31460402253","Type":"IssuesEvent","CreatedAt":"2023-08-29T19:58:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12859","RelatedDescription":"Opened issue \"Stop continuously creating SourceCacheContext in PM UI scenarios\" (#12859) at NuGet/Home","RelatedBody":"  The purpose of source cache context is to tell a source where and for how long to cache certain files. \r\n\r\nRestore ensures that the caching is shared across the whole operation through https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommandProviders.cs#L86. \r\n\r\nUnfortunately that pattern is not applied everywhere. \r\n\r\nThis leads to needless allocations and could potentially make things more difficult should we want to change the cache time."},{"Id":"31456738564","Type":"IssuesEvent","CreatedAt":"2023-08-29T17:12:55","Actor":"mthalman","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12858","RelatedDescription":"Opened issue \"Upgrade Newtonsoft.Json reference to 13.0.3\" (#12858) at NuGet/Home","RelatedBody":".NET repos currently have a mix of Newtonsoft.Json versions that we're trying to get consolidated into the latest version. This is particularly necessary for the .NET's [source-build](https://github.com/dotnet/source-build) which can only reference one version of a dependency. The latest patch version of Newtonsoft.Json is 13.0.3.\r\n\r\nCurrently, NuGet.Client is referencing 13.0.1:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/e4a9922edc29c36e6458bc5d3b68a04e0ea14b91/Directory.Packages.props#L6"},{"Id":"31456075421","Type":"PullRequestEvent","CreatedAt":"2023-08-29T16:44:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/12853","RelatedDescription":"Merged pull request \"Update the spec template\" (#12853) at NuGet/Home","RelatedBody":"- Added a special note to set the correct expectations that the title should be amended to better reflect the proposal.\r\n- Removed Start Date - Not sure what value this carries\r\n- Removed GitHub PR - Which PR? Product PR? Usually that comes after the design. Spec repo PR? A bit of chicken and egg problem here. "},{"Id":"31453374597","Type":"IssuesEvent","CreatedAt":"2023-08-29T15:04:36","Actor":"AR-May","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12857","RelatedDescription":"Opened issue \"NuGet Source Transformation (.pp) not working as expected\" (#12857) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#8322**\r\n- Please respond to @Aragas.\r\n\r\n---\r\n\r\n_From @Aragas on Thursday, January 19, 2023 4:33:16 PM_\r\n\r\n<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\nAs I understand, MSBuild 17.5 might have broken the transformation.\r\nThe `obj` folder that should contain the transformed source code (`.cs.pp`) of a nuget package is empty - it doesn't contain the final `.cs` files where things like `$rootnamespace$` are resolved.\r\nAs an example, I have a NuGet Source Package (`BUTR.DependencyInjection` version 2.0.0.43) that stopped working.\r\nThe workarounds I saw while browsing source codes were basically \"get rid of the .pp ending\", since `.pp` was just used to hide the additional files. But how to fix it when it was used for the actual transformations?\r\n\r\n## Steps to Reproduce\r\n1. Create an empty C# project\r\n2. Add `BUTR.DependencyInjection` version 2.0.0.43\r\n\r\n## Expected Behavior\r\n`.pp` files should be correctly transformed into `.cs` files\r\n\r\n\r\n## Actual Behavior\r\n`.pp` files are not correctly transformed into `.cs` files\r\n\r\n### Versions & Configurations\r\nVS2022\r\nMSBuild version 17.4.1+9a89d02ff for .NET Framework\r\n17.4.1.60106\r\n\r\nVS2022 Preview\r\nMSBuild version 17.5.0-preview-23053-01+ac0911a00 for .NET Framework\r\n17.5.0.5301\r\n\r\nVS2019\r\nMicrosoft (R) Build Engine version 16.11.2+f32259642 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nHappens in VS2019/VS2022/VS2022 Preview.\r\nHappens on Rider too when MSBuild is used.\r\n\r\nThe computer I'm using is a fresh install. It does work still on my older one, ~~but it's I guess because I didn't upgrade yet, it's version is 17.4+9a89d02ff~~\r\n\r\nEDIT:\r\nThe version of MSBuild seems to be the same for the working one and the broken one when using VS2022, the MSBuild versions of VS2019 is 16.\r\nAfter verifying this, I have no idea what is causing this.\r\nAlso, to add to the confusion, when Rider is switched to use MSBuild, the same issue happens there too."},{"Id":"31448357403","Type":"IssuesEvent","CreatedAt":"2023-08-29T12:23:45","Actor":"InfoSec812","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12856","RelatedDescription":"Opened issue \"Add support for sigstore as signing method for NuGet packages\" (#12856) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\n[sigstore](https://www.sigstore.dev/) is gaining traction as a method of enabling validation of development artifacts across many different language/framework ecosystems (Java, Python, JS, etc...) and it would be very useful to have sigstore signature/validation support in NuGet. The upside is that it validates identity using OpenID instead of requiring that individuals/organizations get a code signing certificate from an approved certificate authority. This would make it easier for both project maintainers and consumers of NuGet artifacts to validate that they are getting the software they expect.\n\n### Additional Context and Details\n\nThe sigstore [cosign](https://github.com/sigstore/cosign) makes it relatively simple to sign and validate artifacts. There are well documented protocols which could be integrated into artifact repositories and it is already being integrated into many of the [most popular offerings](https://docs.sigstore.dev/system_config/registry_support/) (Sonatype Nexus, JFrog Artifactory, etc...)"},{"Id":"31447575531","Type":"IssuesEvent","CreatedAt":"2023-08-29T11:55:06","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12855","RelatedDescription":"Opened issue \"NuGetAudit: read vulnerability files with System.Text.Json\" (#12855) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nThe initial implementation of NuGetAudit was done quickly, to meet shipping dates. This meant using Newtonsoft.Json to read the vulnerability files, since we don't yet use System.Text.Json anywhere in NuGet.Protocol.\n\n### Desired Behavior\n\nHere's the results of a quick benchmark I put together:\r\n\r\n|        Method |              Runtime |       Mean |    Error |   StdDev |     Gen0 |    Gen1 |  Allocated |\r\n|-------------- |--------------------- |-----------:|---------:|---------:|---------:|--------:|-----------:|\r\n|  NJ  |             .NET 8.0 | 1,819.6 us |  5.19 us |  4.86 us |  68.3594 | 37.1094 |  707.38 KB |\r\n| STJ|             .NET 8.0 |   954.7 us | 18.84 us | 23.82 us |  15.6250 |  4.8828 |  168.33 KB |\r\n|  NJ | .NET Framework 4.7.2 | 3,653.8 us | 19.91 us | 16.62 us | 183.5938 | 66.4063 | 1146.55 KB |\r\n| STJ | .NET Framework 4.7.2 | 2,126.5 us |  8.92 us |  7.91 us |  66.4063 | 19.5313 |  419.91 KB |\r\n\r\nRestore is optimized to read the file once per restore, no matter how many projects in the solution. So, a once-off 1ms saving isn't going to be noticeable to anyone. However, perhaps in a real restore, when other work is happening on other threads, reducing GC pauses will have a more significant impact.\r\n\n\n### Additional Context\n\nThings to check:\r\n\r\n* Does MSBuild already ship System.Text.Json.dll, or do we have to include it in our VSIX for MSBuild CLI scenarios?\r\n* Risk of VS perf test regression if nothing else loads System.Text.Json.dll in a measured scenario. It's not feasible to port ALL Newtonsoft.Json usage to System.Text.Json in one PR, so from NuGet's perspective it will be an additional assembly loaded. However, there is a very good chance that some VS platform component, like settings, accounts, etc, already uses System.Text.Json, so the assembly will probably be loaded already.\r\n* Any other compliance work?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-30T03:30:23.3312709Z","RunDurationInMilliseconds":951}