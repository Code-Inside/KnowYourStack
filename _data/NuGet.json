{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27687663501","Type":"PullRequestEvent","CreatedAt":"2023-03-13T18:13:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9425","RelatedDescription":"Merged pull request \"add domain avatars.githubusercontent.com\" (#9425) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9330"},{"Id":"27620881159","Type":"PullRequestEvent","CreatedAt":"2023-03-10T00:01:00","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9408","RelatedDescription":"Merged pull request \"[2FA] Update link msa/aad account page with legacy password account information.\" (#9408) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n* Updated wording of the \"Link Microsoft Account\" page to include Legacy Account information.\r\n* Legacy account page: This page will show when users have password account and are not part of the exception list.\r\n* Link Microsoft account page: After a user with a legacy account issue sends a SR to us, we will verify the request and ownership. Once we approve it using our processes, the user will see this page and will be able to link their MSA if they know their password, otherwise they will be able to use the **Forgot your password?** link.\r\n\r\n### Screenshot\r\n#### Legacy account page\r\n![Legacy Account](https://user-images.githubusercontent.com/17834924/223597221-14a360b6-7ddc-48d3-97ac-7b8398fe6788.png)\r\n\r\n#### Link MSA account page\r\n![Linking account](https://user-images.githubusercontent.com/17834924/223597400-5abed200-6841-4bfb-9ee2-9c3fa30e1a78.png)\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4617"},{"Id":"27615325462","Type":"IssuesEvent","CreatedAt":"2023-03-09T18:53:10","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9428","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Status page should show the time zone of a timestamp.\" (#9428) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nStatus page shows the timeline, but it is not clear about the time zone. It is better that a timestamp is marked with the time zone.\n\n### Repro Steps\n\n1. On this URL: https://status.nuget.org/\r\n2. The time zone used in history is unclear.\n\n### Expected Behavior\n\nStatus page lists the time zone of a timestamp.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/41028779/224125738-6ee7add3-bedb-4642-856d-502dca48bc72.png)\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27555018628","Type":"IssuesEvent","CreatedAt":"2023-03-07T17:17:08","Actor":"JanKrivanek","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9427","RelatedDescription":"Opened issue \"[NuGet.org Bug]: top 100 Community packages include MSFT packages\" (#9427) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nsome Microsoft packages (specifically Xamarin ones) showing up on the galley as community ones:\r\n\r\n<img width=\"578\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3809076/223497680-553458e3-64f9-42ba-9dc9-280373df9a9c.png\">\r\n...\r\n<img width=\"515\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3809076/223497749-64c1eb84-bb70-4344-9aa7-630bd1bebcd7.png\">\r\n\r\n\r\nThose are not showing up when querying the `ddteldata` DS excluding the MSFT packages ([internal][query as link](https://dataexplorer.azure.com/clusters/ddteldata/databases/ClientToolsInsights?query=H4sIAAAAAAAAA23NMQvCQAyG4V3wP4TSoQURHRy7uQhaHdwl9tL22iOBXOAo+OOlUAXB9eN9+Gp/w2bEjo6SOAi6uF69wPlonhuDsyTSk9vAXQzDTzOIZ6g//JqYNIIw5IFa2y4Qqgpy9V3/XWaaelICFisW1mN8IE9FdvGNSpTWsrKcS1FHCs/pz7/hSLA/7N5FCuTRwgAAAA==)): \r\n\r\n```\r\nNiPackageDownloads\r\n| distinct LowerId, TotalDownloads\r\n| join NiPackageOwners on $left.LowerId == $right.LowerId\r\n| where not(Owners has_any(\"Microsoft\"))\r\n| order by TotalDownloads| take 150\r\n```\n\n### Repro Steps\n\n1. Visit https://www.nuget.org/stats/packages\r\n2. do not check 'Show all packages' checkbox\r\n3. search for 'microsoft'\n\n### Expected Behavior\n\nMicrosoft packages are not part of the community overview\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27553470634","Type":"IssuesEvent","CreatedAt":"2023-03-07T16:20:47","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9426","RelatedDescription":"Opened issue \"Revoke button besides delete button for api keys\" (#9426) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nHi.\r\nI would be nice if there's `Revoke` button next to `Delete` so I don't have to delete the key after finish uploading the package.\r\nThat way I keep packaging globing pattern for next time. If I delete it, then I have to use my memory muscle to figure out correct pattern each time.\r\n![image](https://user-images.githubusercontent.com/8766776/223483195-2d359990-dfe7-4873-bb43-09df3f654f62.png)\r\n\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27535928743","Type":"PullRequestEvent","CreatedAt":"2023-03-07T03:26:55","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9425","RelatedDescription":"Opened pull request \"add domain avatars.githubusercontent.com\" (#9425) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9330"},{"Id":"27529146858","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:31:38","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9424","RelatedDescription":"Opened issue \"[A11y]Tooltip for \"Package has Vulnerabilities\" icon in version list renders offscreen when screen is narrow\" (#9424) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744522\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nPre-Requisites:\r\nPress \"Ctrl+Shift+I\" to open developer tool.\r\nNow in dock side click on \"undock into separate window\" so that developer tool will get open in separate window.\r\nZoom the browser of the screen to be tested to 200%.\r\nAdjust the screen to 320px*256px.\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"Version History\" control and hit enter.\r\nApply reflow and observe whether \"Version history\" tooltip is not visible.\r\n\r\nActual Result:\r\nOn applying reflow, Version history tooltip in \"Version\" tab is not visible.\r\n\r\nExpected Result:\r\nOn applying reflow, \"Version history\" tooltip in \"Version\" tab content should be completely visible.\r\n\r\nNotes:\r\nThis tooltip is a custom (I believe Bootstrap) control and thus doesn't always follow browser expectation when rendering. As such, I believe it is rendering outside of the viewport when it renders on a narrow screen. Not 100% sure what the best option here is. One option is to have it render on the other side (left instead of right) when screen is narrow)."},{"Id":"27528961555","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:22:50","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9423","RelatedDescription":"Opened issue \"[A11y][ScreenReader]More Information link on search results page is ambiguous\" (#9423) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745384\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nCheck whether \"More Information\" link is descriptive or not.\r\n\r\nNotes:\r\nIt should be sufficient for us to augment the More Information link to read \"More Information about {PackageId}\""},{"Id":"27528863887","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:18:12","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9422","RelatedDescription":"Opened issue \"[A11y]Screen reader starts over from beginning when applying filters.\" (#9422) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1749979\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nTab till filter present at left side of screen and apply any filter.\r\nObserve that screen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nActual Result:\r\nScreen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nExpected Result:\r\nScreen reader should not announce all the details from the beginning when we apply filter, it should only announce the status message that \"812 packages returned for json\"\r\n\r\nNotes:\r\nUnfortunately, I believe this is relatively nontrivial to fix on our side. From my understanding of this issue and the feature, this is caused by the fact that hitting applying appear to redo the search with filters enabled, causing a page refresh. When the page refreshes, context on keyboard nav etc is lost. In theory, it should be possible to pass context to the next page, but I am unsure that this the right fix long term."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27695127164","Type":"IssuesEvent","CreatedAt":"2023-03-14T01:09:31","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12123","RelatedDescription":"Closed issue \"[Bug]: [Cross-platform Dotnet NuGet Sign] The message “Package(s) signed successfully” lost after signing a package successfully with “dotnet nuget sign” command\" (#12123) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.100-rc.1.22431.12\r\n\r\n### Worked before?\r\n\r\nWorked well on .NET SDK 6.0.400\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps\r\n1. Execute the [Dotnet nuget sign pre-step](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FDotnet%20nuget%20sign%20pre-step%7C708e56b6-a296-493e-a615-e0e18c55f96f%2F%29&wdorigin=703).\r\n2. On Windows: Create a new test certificate: ` .\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile` (in the powershell \"Developer Command Prompt\"). \r\n3. On macOS: Copy the .cer file and the .pfx file from the above Windows machine to macOS machine. \r\n4. Where <CertificateFilePath> is the file path to the long-lived .cer or .pem file and <VersionedSdkDirectoryPath> is the directory path for the patched versioned .NET SDK directory (e.g.:  ./patchedSDK/sdk/7.0.100), add trust for the certificate: \r\n    On macOS: ` ./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> -vsd <VersionedSdkDirectoryPath> `\r\n5. Use the patched \"dotnet.exe\" to sign a package. Where <PackageFilePath> is the test package path and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\nOn macOS: ` ./patchedSDK ./dotnet nuget sign <PackageFilePath> --overwrite --certificate-path <PfxFilePath> --certificate-password password -v n`\r\n\r\n#### Expected \r\nThere is a message “Package(s) signed successfully” after signing a package successfully.\r\n\r\n#### Actual\r\nThe message “Package(s) signed successfully” lost after signing a package successfully with “dotnet nuget sign” command on MacBook as below.\r\n![image](https://user-images.githubusercontent.com/20632625/192995784-b870257b-643a-47e1-b7ee-d80863a67ba3.png)\r\n#### Note\r\n1. It is not a regression.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27691807014","Type":"IssuesEvent","CreatedAt":"2023-03-13T21:27:17","Actor":"dfederm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12482","RelatedDescription":"Opened issue \"Difference in transitivity behavior between graph and non-graph restore\" (#12482) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n17.6\n\n### Worked before?\n\nProbably not\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nWhen a project in a graph doesn't support restore, it seems that transitivity effectively stops for non-graph restores, but is allowed for graph restores. The referenced project does not get added to `project.assets.json`, and thus its dependencies (transitive dependencies for the main project) are missed.\r\n\r\nAttached repro: [graph-restore-repro.zip](https://github.com/NuGet/Home/files/10962055/graph-restore-repro.zip)\r\n\r\nNon-graph:\r\n![image](https://user-images.githubusercontent.com/6445614/224835345-61600b21-76a2-4d64-84bd-4f58bfe36310.png)\r\n\r\nGraph:\r\n![image](https://user-images.githubusercontent.com/6445614/224835406-3fb48ac2-028f-4f96-a801-fa363b23f9ba.png)\r\n\r\nI haven't been able to reason about this situation enough, but it seems like the non-graph restore is \"wrong\" here.\r\n\r\nThis is a simple graph of A -> B -> C. B here has restore disabled (in my real scenario, B and C here were vcxproj which do not support `PackageReference`). All 3 are restored (or not) properly, but in the non-graph case C is missing as a direct project reference to A due to the missing transitivity.\n\n### Verbose Logs\n\n_No response_"},{"Id":"27690829394","Type":"IssuesEvent","CreatedAt":"2023-03-13T20:38:30","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12479","RelatedDescription":"Closed issue \"dotnet list return code changed\" (#12479) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nIt appears the return codes for dotnet list have been changed to return 1 instead of 0 if there is a failure to list packages for an project in a solution. Previously this was not the case. The behavior change is breaking and has implications for build automation using dotnet list.\r\n\r\n`src/MySln.sln package --vulnerable --include-transitive`\n\n### Desired Behavior\n\nPreviously the command would return a 0 exit node. It would print something like The project DockerCompose\\docker-compose.dcproj uses package.config for NuGet packages, while the command works only with package reference projects. for any projects it could not list. Recently it has been changed to return a non zero exit code which is breaking existing build automation logic.\n\n### Additional Context\n\nOriginally Reported Here https://github.com/dotnet/sdk/issues/30975"},{"Id":"27671571160","Type":"IssuesEvent","CreatedAt":"2023-03-13T08:20:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12472","RelatedDescription":"Closed issue \"NRE raised when trying to collect the existing packages during an Update operation\" (#12472) at NuGet/Home","RelatedBody":"1. Launch exp instance in debug mode\r\n2. Set a breakpoint in https://github.com/NuGet/NuGet.Client/blob/f49ca00e27297fe7b4b82a2557d5b0caad907a06/src/NuGet.Clients/NuGet.PackageManagement.UI/Actions/UIActionEngine.cs#L327.\r\n3. Open a project with at least package that needs update.\r\n4. CLick update\r\n5. See breakpoint get hit.\r\n\r\nThe effect of this is that the telemetry does not get sent, but the try/catch hides it."},{"Id":"27670818997","Type":"IssuesEvent","CreatedAt":"2023-03-13T07:44:46","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12481","RelatedDescription":"Opened issue \"VS crashed when installing a package with “package config” format in C# Class Library (.NET Framework) project \" (#12481) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nNuGet Client Dev\\6.6.0.44\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps:    \r\n\r\n1. Create a C# Class Library (.NET Framework) project in VS.  \r\n\r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.  \r\n\r\n3. Click settings button (top-right of right panel), check \"Allow format selection on first package install\" in \"General\" tab and click “OK” button.  \r\n\r\n4. Go to \"Browse\" tab, select a package (for example \"Newtonsoft.Json\") and click install button. \r\n\r\n5. Check \"packages.config\" in \"Choose NuGet Package Manager Format\", click “OK” button and click “OK” button in the \"Preview Changes\" window. \r\n\r\n#### Expected:    \r\n\r\nThe package should be installed successfully. \r\n\r\n#### Actual:    \r\n\r\nVS crashed when installing a package with “package config” format as below screenshot:  \r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/84695155/224635331-5e98a8aa-c3e0-48bb-9088-b978387a855a.png)\r\n#### Notes: \r\n\r\n1.It doesn’t repro on VS Main\\33508.150 + NuGet Client Dev\\6.6.0.43 \r\n\r\n2.It still reproes when using PMC install package. \r\n\r\n3.The repro rate is 100%. \r\n\r\n4.[Dump file](\\\\mlangfs1\\public\\v-cicili\\Bug0313)\r\n\r\n\r\n#### Verbose Logs:\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.AccessViolationException\r\n   at VSLangProj157.References3.AddFiles(System.Array, System.Array ByRef)\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem+<>c__DisplayClass76_0+<<AddReferenceAsync>b__0>d.MoveNext()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at Microsoft.VisualStudio.Threading.JoinableTaskFactory+SingleExecuteProtector.TryExecute()\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\r\n```\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27663271322","Type":"IssuesEvent","CreatedAt":"2023-03-12T19:14:18","Actor":"Youssef1313","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12480","RelatedDescription":"Opened issue \"[Bug]: CPM fails with NU1008 but none of the package references contain an explicit version\" (#12480) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS 17.6 P1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nhttps://github.com/MartinZikmund/uno-11641-repro\r\n\r\nBuilding in Visual Studio shows:\r\n\r\n```\r\nProjects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items:\r\n Microsoft.Windows.SDK.BuildTools;Uno.Core.Extensions.Logging.Singleton;Microsoft.WindowsAppSDK;Uno.WinUI;Microsoft.Extensions.Logging.Console.\r\n```\r\n\r\nHowever, none of the `PackageReference`s contain an explicit version.\r\n\r\ncc @MartinZikmund\n\n### Verbose Logs\n\n_No response_"},{"Id":"27660377349","Type":"IssuesEvent","CreatedAt":"2023-03-12T13:01:06","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12420","RelatedDescription":"Closed issue \"NuGet/Dotnet restore leaves files behind in /tmp/NuGetScratch\" (#12420) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nLatest version of .NET 6.0, .NET 7.0, and pre-release versions of .NET 8.0\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n1. Build the following Dockerfile (ex. `docker build -t nuget-test -f .\\Dockerfile .`)\r\n\r\n```Dockerfile\r\nFROM mcr.microsoft.com/dotnet/sdk:6.0 AS build\r\nWORKDIR /source\r\nRUN dotnet new console --no-restore\r\nRUN dotnet restore --use-current-runtime\r\n```\r\n\r\n2. Run the created image: `docker run -it --rm nuget-test /bin/sh`\r\n3. Inspect the `/tmp` directory to see the files left behind: `ls -lah /tmp/NuGetScratch/lock/`\r\n\r\nIs this the expected result? These files left behind by NuGet are causing us permission issues when switching between root and non-root users in .NET docker containers. When a NuGet/dotnet restore is run as root, future NuGet commands ran by other users will fail. Is there a build server of sort that we accidentally terminate early in the container build?\r\n\r\nThanks.\r\n\r\n### Verbose Logs\r\nThe following are the files left behind by NuGet in an example image that I built using the instructions above (some of the files are not due to NuGet restore like `.dotnet/shm`, while others like MSBuildTemproot are left behind by powershell installation):\r\n\r\n```\r\ndrwxrwxrwx         0:0        0 B  ├── tmp                                                                                                                                                                                                                                    drwxrwxrwx         0:0        0 B  │   ├── .dotnet                                                                                     drwxrwxrwx         0:0        0 B  │   │   └── shm                                                                                         drwx------         0:0        0 B  │   ├── 82d9253f-fac5-4dd9-863e-e95ad886c6f0                                                            drwx------         0:0        0 B  │   ├── MSBuildTemproot                                                                                 drwxrwxrwx         0:0        0 B  │   ├── NuGetScratch                                                                                    drwxrwxrwx         0:0        0 B  │   │   └── lock                                                                                        -rw-r--r--         0:0        0 B  │   │       ├── 02c1a6b1e6a189adc09794fab6791bf24a1841dd                                                -rw-r--r--         0:0        0 B  │   │       ├── 3b3fba4ea8f8b14f53e82a125bf28c4a69896605                                                -rw-r--r--         0:0        0 B  │   │       ├── 6f70e9594edbb2d12174c395fa5596b59259ef3e                                                -rw-r--r--         0:0        0 B  │   │       ├── 910ee62b266dc259a5a66981bebe7d3cd7cc2a82                                                -rw-r--r--         0:0        0 B  │   │       ├── ad41768f5ec8770e070473ab153efe7a828bba73                                                -rw-r--r--         0:0        0 B  │   │       ├── b5470a0e371577b0df3c0b80c7c2bc6849cd2ca6                                                -rw-r--r--         0:0        0 B  │   │       ├── b5f9502d257d6ab45cab231e13e8c7dd39c7d3a4                                                -rw-r--r--         0:0        0 B  │   │       ├── ed9ecc1f06bc6d3cb9e44cb780575b171eaf893e                                                -rw-r--r--         0:0        0 B  │   │       ├── effbb02e5017975996b2720d0dde89125b10edcc                                                -rw-r--r--         0:0        0 B  │   │       ├── f1cb54aa7ea80f31ab84d0bf6120755929641ad2                                                -rw-r--r--         0:0        0 B  │   │       └── ff442a5005e856d0388cb8daf4c3340cc673f37a                                                drwx------         0:0        0 B  │   ├── c8c62065-522d-429f-b05b-2e52c3084165                                                            drwx------         0:0        0 B  │   └── de16094a-128e-48a0-8ae3-033310547545\r\n```\r\n\r\n(The logs don't seem to show up correctly - maybe inspect the raw post to see them)"},{"Id":"27660376904","Type":"IssuesEvent","CreatedAt":"2023-03-12T13:01:03","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12425","RelatedDescription":"Closed issue \"Icon is not shown for self hosted package\" (#12425) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\n17.4.1+9a89d02ff \r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create your own package with an icon defined in the MyLib.csproj\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n   <PropertyGroup>\r\n      ...\r\n      <PackageIcon>icon.png</PackageIcon>\r\n      ...\r\n   </PropertyGroup>\r\n\r\n   <ItemGroup>\r\n      ...\r\n      <None Include=\"icon.png\" Pack=\"true\" Visible=\"false\" PackagePath=\"\" />\r\n      ...\r\n   </ItemGroup>\r\n</Project>\r\n```\r\n\r\n2. Restore all project dependencies using NuGet v6.4.0\r\n\r\n`nuget restore .\\MyLib.csproj -PackagesDirectory .\\packages`\r\n\r\n3. Use MSBuild for packaging\r\n`MSBuild .\\MyLib.csproj -t:Pack -p:Configuration=Release`\r\n\r\n4. Publish the package to JFrog Artifactory using JFrog CLI\r\n\r\n```\r\ncd bin/Release\r\njf rt u \"*.nupkg\" myrepo-nuget/MyLib/\r\njf rt u \"*.snupkg\" myrepo-nuget/MyLib/\r\n```\r\n\r\n5. Icon does not show up neither in JFrog Artifactory nor in the package list in JetBrains Rider.\r\n\r\n6. icon.png file is included into the .nupkg archive\r\n\r\n7. The resulting MyLib.nuspec includes  <icon>icon.png</icon> in the metadata section, and is missing any files or contentFiles sections.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27636483979","Type":"IssuesEvent","CreatedAt":"2023-03-10T14:49:03","Actor":"groogiam","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12479","RelatedDescription":"Opened issue \"dotnet list return code changed\" (#12479) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nIt appears the return codes for dotnet list have been changed to return 1 instead of 0 if there is a failure to list packages for an project in a solution. Previously this was not the case. The behavior change is breaking and has implications for build automation using dotnet list.\r\n\r\n`src/MySln.sln package --vulnerable --include-transitive`\n\n### Desired Behavior\n\nPreviously the command would return a 0 exit node. It would print something like The project DockerCompose\\docker-compose.dcproj uses package.config for NuGet packages, while the command works only with package reference projects. for any projects it could not list. Recently it has been changed to return a non zero exit code which is breaking existing build automation logic.\n\n### Additional Context\n\nOriginally Reported Here https://github.com/dotnet/sdk/issues/30975"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":23,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-03-14T03:30:25.2067944Z","RunDurationInMilliseconds":1410}