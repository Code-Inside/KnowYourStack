{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"36110157513","Type":"PullRequestEvent","CreatedAt":"2024-02-29T02:45:11","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9839","RelatedDescription":"Merged pull request \"Revert \"Downloads page changed\"\" (#9839) at NuGet/NuGetGallery","RelatedBody":"This reverts commit acb9dab68e367b0caef379c0911fb4ed9aacc074."},{"Id":"36109452770","Type":"PullRequestEvent","CreatedAt":"2024-02-29T02:01:49","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9839","RelatedDescription":"Opened pull request \"Revert \"Downloads page changed\"\" (#9839) at NuGet/NuGetGallery","RelatedBody":"This reverts commit acb9dab68e367b0caef379c0911fb4ed9aacc074."},{"Id":"36105521640","Type":"PullRequestEvent","CreatedAt":"2024-02-28T22:28:02","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9835","RelatedDescription":"Merged pull request \"Update Frameworks table to use clearer \"Included/Compatible framework\" framing\" (#9835) at NuGet/NuGetGallery","RelatedBody":"- The idea of \"compatible\" and \"computed\" is an odd distinction\r\n- \"Compatible\" and \"included\" seems much more useful, with the former being the high-value distinction\r\n- More generally, we should ensure that we have common developer workflows that align with this checkerbox display.\r\n- Sure would be nice to get EOL information in here\r\n\r\nExample: https://www.nuget.org/packages/Microsoft.Extensions.Logging/9.0.0-preview.1.24080.9#supportedframeworks-body-tab"},{"Id":"36105151015","Type":"PullRequestEvent","CreatedAt":"2024-02-28T22:12:49","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9826","RelatedDescription":"Merged pull request \"Fix Framework Filter Mode tooltip colors\" (#9826) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9818\r\n\r\nThe bootstrap popover on the Framework Filter Mode tooltip had different colors within it:\r\n<img src=\"https://github.com/NuGet/NuGetGallery/assets/82980589/a6ec1bb3-331e-4644-8323-da8e97d8d074\" width=\"600px\"></img>\r\n\r\nWe were using a `title` attribute for the text earlier. Switching to a `data-content` attribute fixes this issue:\r\n<img src=\"https://github.com/NuGet/NuGetGallery/assets/82980589/41e67f92-401a-4f06-a2f0-5e771c40fa9c\" width=\"600px\"></img>"},{"Id":"36104140705","Type":"PullRequestEvent","CreatedAt":"2024-02-28T21:30:54","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9838","RelatedDescription":"Merged pull request \"[ReleasePrep][2024.02.27] RI of man into dev\" (#9838) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"36105911056","Type":"IssuesEvent","CreatedAt":"2024-02-28T22:46:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13003","RelatedDescription":"Closed issue \"NuGetAuditMode doesn't work for SDK style projects in VS 17.8\" (#13003) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVS 17.8\n\n### Worked before?\n\nIt's a new feature\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nThe way that NuGet & the .NET SDK works in Visual Studio is that https://github.com/dotnet/project-system sends NuGet project information (via an API called `NominateProjectAsync`, so we typically call it a \"nomination\"), which NuGet then uses in order to perform the restore.  Unfortunately I forgot to add `NuGetAuditMode` to the list of properties sent to NuGet, so NuGet has no way of knowing this property value in VS 17.8:\r\n\r\n* https://github.com/dotnet/project-system/pull/9320\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"36101863562","Type":"IssuesEvent","CreatedAt":"2024-02-28T20:04:02","Actor":"meziantou","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13275","RelatedDescription":"Closed issue \"Cannot install globally a .NET tool on Linux when the version contains uppercase\" (#13275) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n8.0.200\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nBe sure to run `dotnet tool update` on Linux or a case-sensitive file-system\r\n\r\n````\r\ndotnet new console\r\ndotnet pack /p:PackAsTool=true /p:version=1.0.0-abc\r\ndotnet pack /p:PackAsTool=true /p:version=1.0.0-Dummy\r\n\r\n# works\r\ndotnet tool update test --version 1.0.0-abc --global --add-source ./bin/Release/\r\n\r\n# crash\r\ndotnet tool update test --version 1.0.0-Dummy --global --add-source ./bin/Release/\r\n````\r\n\r\n### Verbose Logs\r\n\r\n```\r\nSkipping NuGet package signature verification.\r\nUnhandled exception: System.IO.FileNotFoundException: Could not find file '/home/repro/.dotnet/tools/.store/.stage/pfgaxwyq.dh2/test/1.0.0-dummy/test.1.0.0-dummy.nupkg'.\r\nFile name: '/home/repro/.dotnet/tools/.store/.stage/pfgaxwyq.dh2/test/1.0.0-dummy/test.1.0.0-dummy.nupkg'\r\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)\r\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.File.Open(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at NuGet.Protocol.LocalFolderUtility.<>c__DisplayClass48_0.<GenerateNupkgMetadataFile>b__0()\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLocked(String filePath, Action action)\r\n   at NuGet.Repositories.NuGetv3LocalRepository.GetPackage(String packageId, NuGetVersion version, String path)\r\n   at NuGet.Repositories.NuGetv3LocalRepository.FindPackageImpl(String packageId, NuGetVersion version)\r\n   at NuGet.Repositories.NuGetv3LocalRepository.FindPackage(String packageId, NuGetVersion version)\r\n   at Microsoft.DotNet.Cli.ToolPackage.ToolPackageDownloader.CreateAssetFile(PackageId packageId, NuGetVersion version, DirectoryPath packagesRootPath, DirectoryPath assetFileDirectory, String runtimeJsonGraph, String targetFramework)\r\n   at Microsoft.DotNet.Cli.ToolPackage.ToolPackageDownloader.<>c__DisplayClass8_0.<InstallPackage>b__0()\r\n   at Microsoft.DotNet.Cli.TransactionalAction.Run[T](Func`1 action, Action commit, Action rollback)\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.<>c__DisplayClass18_0.<Execute>b__1()\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.RunWithHandlingInstallError(Action installAction)\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Tool.Update.ToolUpdateGlobalOrToolPathCommand.Execute()\r\n   at System.CommandLine.Invocation.InvocationPipeline.Invoke(ParseResult parseResult)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, TimeSpan startupTime, ITelemetry telemetryClient)\r\n```\r\n"},{"Id":"36091609395","Type":"IssuesEvent","CreatedAt":"2024-02-28T14:45:43","Actor":"meziantou","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13275","RelatedDescription":"Opened issue \"Cannot install globally a .NET tool on Linux when the version is contain uppercase\" (#13275) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n8.0.200\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n````\r\ndotnet new console\r\ndotnet pack /p:PackAsTool=true /p:version=1.0.0-abc\r\ndotnet pack /p:PackAsTool=true /p:version=1.0.0-Dummy\r\n\r\n# works\r\ndotnet tool update test --version 1.0.0-abc --global --add-source ./bin/Release/\r\n\r\n# crash\r\ndotnet tool update test --version 1.0.0-Dummy --global --add-source ./bin/Release/\r\n````\n\n### Verbose Logs\n\n```shell\n`\r\nSkipping NuGet package signature verification.\r\nUnhandled exception: System.IO.FileNotFoundException: Could not find file '/home/repro/.dotnet/tools/.store/.stage/pfgaxwyq.dh2/test/1.0.0-dummy/test.1.0.0-dummy.nupkg'.\r\nFile name: '/home/repro/.dotnet/tools/.store/.stage/pfgaxwyq.dh2/test/1.0.0-dummy/test.1.0.0-dummy.nupkg'\r\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)\r\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.File.Open(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at NuGet.Protocol.LocalFolderUtility.<>c__DisplayClass48_0.<GenerateNupkgMetadataFile>b__0()\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLocked(String filePath, Action action)\r\n   at NuGet.Repositories.NuGetv3LocalRepository.GetPackage(String packageId, NuGetVersion version, String path)\r\n   at NuGet.Repositories.NuGetv3LocalRepository.FindPackageImpl(String packageId, NuGetVersion version)\r\n   at NuGet.Repositories.NuGetv3LocalRepository.FindPackage(String packageId, NuGetVersion version)\r\n   at Microsoft.DotNet.Cli.ToolPackage.ToolPackageDownloader.CreateAssetFile(PackageId packageId, NuGetVersion version, DirectoryPath packagesRootPath, DirectoryPath assetFileDirectory, String runtimeJsonGraph, String targetFramework)\r\n   at Microsoft.DotNet.Cli.ToolPackage.ToolPackageDownloader.<>c__DisplayClass8_0.<InstallPackage>b__0()\r\n   at Microsoft.DotNet.Cli.TransactionalAction.Run[T](Func`1 action, Action commit, Action rollback)\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.<>c__DisplayClass18_0.<Execute>b__1()\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.RunWithHandlingInstallError(Action installAction)\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Tool.Update.ToolUpdateGlobalOrToolPathCommand.Execute()\r\n   at System.CommandLine.Invocation.InvocationPipeline.Invoke(ParseResult parseResult)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, TimeSpan startupTime, ITelemetry telemetryClient)\r\n````\n```\n"},{"Id":"36080511151","Type":"IssuesEvent","CreatedAt":"2024-02-28T09:22:06","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13268","RelatedDescription":"Closed issue \"Reduce allocations in calling IVsProjectAdpater.IsCapabilityMatchAsync\" (#13268) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\n17.9\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nOther\r\n\r\n### Repro Steps & Context\r\n\r\nWhile investigating a customer issue last week, I noticed that `VsProjectAdapter.IsCapabilityMatchAsync` is an async method, only because it used `SwitchToMainThreadAsync`, but it was only called from places which already switched to the main thread.\r\n\r\nThis will only reduce two heap allocations per project in the solution, but it's a trivial improvement.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"36075663191","Type":"IssuesEvent","CreatedAt":"2024-02-28T06:17:28","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13274","RelatedDescription":"Opened issue \"Add event tracing to restore to make it possible to measure performance\" (#13274) at NuGet/Home","RelatedBody":"In order to profile restores and take measurements on timing of particular actions, we should add more ETW events to the restore functionality."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-29T03:30:19.5728077Z","RunDurationInMilliseconds":1031}