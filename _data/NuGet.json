{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"NuGet 5.9 is a great release that brings a refined experience to everything package management. We’ve added a bunch of exciting quality of life improvements while also bringing you a more performant...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21387389656","Type":"PullRequestEvent","CreatedAt":"2022-04-21T01:07:25","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9104","RelatedDescription":"Opened pull request \"[A11y Bug] TFM remove role button from badges.\" (#9104) at NuGet/NuGetGallery","RelatedBody":"## Changes\r\n* `role=\"button\"` removed from badges.\r\n* Added aria-label to badges for screen reader.\r\n* Fixed screen reader not announcing popover content on focus/click.\r\n\r\n## Addresses\r\nhttps://github.com/nuget/engineering/issues/4352"},{"Id":"21383655987","Type":"PullRequestEvent","CreatedAt":"2022-04-20T19:47:51","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9102","RelatedDescription":"Merged pull request \"Merge branch main into dev\" (#9102) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21382901827","Type":"IssuesEvent","CreatedAt":"2022-04-20T18:59:09","Actor":"lavareas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9103","RelatedDescription":"Opened issue \"[NuGet.org Bug]: NuGet Restore encountering intermittent Timeout/SSL/TLS issue\" (#9103) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nCurrently while trying to restore NuGet packages, the project requires both internal business NuGets as well as agi.nuget.org nugets.\r\n\r\nWhile building we are attempting to restore, and it attempts api.nuget.org first.  Normally we would expect 404s for NuGets not there, but existing inside of our Local Network.\r\n\r\nIntermittently instead of getting the expected 404 response, we are seeing \r\n\r\nAn error occurred while sending the request.\r\n  The underlying connection was closed: An unexpected error occurred on a send.\r\n  Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n\r\nThe StackTrace itself from ADO pipelines shows \r\n\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Failed to retrieve information about 'xxxxxxxxxx' from remote source 'https://api.nuget.org/v3-flatcontainer/xxxxxxxxxx/index.json'. ---> System.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Net.WebException: The underlying connection was closed: An unexpected error occurred on a send. ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at System.Net.Sockets.Socket.EndReceive(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.NetworkStream.EndRead(IAsyncResult asyncResult)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.TlsStream.EndWrite(IAsyncResult asyncResult)\r\n   at System.Net.ConnectStream.WriteHeadersCallback(IAsyncResult ar)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.HttpWebRequest.EndGetResponse(IAsyncResult asyncResult)\r\n   at System.Net.Http.HttpClientHandler.GetResponseCallback(IAsyncResult ar)\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.ServerWarningLogHandler.<SendAsync>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.StsAuthenticationHandler.<SendAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.<SendAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.TimeoutUtility.<StartWithTimeout>d__0`1.MoveNext()\r\n\r\nWe have tested this also by calling the URL via Postman, and would regularly see failed calls due to timeouts.  We have tried this both on and off of our company VPN so as to rule out our own internal systems.\n\n### Repro Steps\n\nCall any api.nuget.org/v3-flatcontainer/*/index.json that you expect to not be there.\r\n\r\nCould take multiple attempts to fail as this is an intermittent, but regular  issue.\r\n\r\nShould see a 404 exception message without the call failing in Azure DevOps Pipelines.\n\n### Expected Behavior\n\nExpecting non-relevant nugets to return 404 as expected, then fall into searching the next repo without breaking active directory build tasks.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21381304439","Type":"PullRequestEvent","CreatedAt":"2022-04-20T17:23:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9102","RelatedDescription":"Opened pull request \"Merge branch main into dev\" (#9102) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"21381255539","Type":"PullRequestEvent","CreatedAt":"2022-04-20T17:20:23","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9101","RelatedDescription":"Merged pull request \"Resolve Bootstrap dependency alerts\" (#9101) at NuGet/NuGetGallery","RelatedBody":"The lock file version was automatically updated by the tooling.\r\nSwitched to a maintained fork for grunt-postcss."},{"Id":"21381243768","Type":"PullRequestEvent","CreatedAt":"2022-04-20T17:19:42","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9099","RelatedDescription":"Merged pull request \"Increase search engine indexing blocking duration to 90 days\" (#9099) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4350"},{"Id":"21380461969","Type":"PullRequestEvent","CreatedAt":"2022-04-20T16:33:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9101","RelatedDescription":"Opened pull request \"Resolve Bootstrap dependency alerts\" (#9101) at NuGet/NuGetGallery","RelatedBody":"The lock file version was automatically updated by the tooling"},{"Id":"21379154877","Type":"IssuesEvent","CreatedAt":"2022-04-20T15:27:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9100","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Missing Laserfiche 10.0.0 package\" (#9100) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWe're getting build errors that point to the LaserFiche 10.0.0 package missing from nuget.org.  This package was active on Monday, April 18th at 8:39 AM CST, which was the last time a successful build for our project ran in Azure DevOps.  Can we get this package restored so that we can finish our build for this legacy application until we have a chance to upgrade the functionality that depends on this package?\n\n### Repro Steps\n\nSearch for package named \"LaserFiche 10.0.0\" and view that no results come back.\n\n### Expected Behavior\n\nPackage should be available\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/15343115/164252515-630262ea-2e11-4366-9f0c-883d931d8b43.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21377734437","Type":"IssuesEvent","CreatedAt":"2022-04-20T14:23:13","Actor":"aptivadave","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9100","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Missing Laserfiche 10.0.0 package\" (#9100) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWe're getting build errors that point to the LaserFiche 10.0.0 package missing from nuget.org.  This package was active on Monday, April 18th at 8:39 AM CST, which was the last time a successful build for our project ran in Azure DevOps.  Can we get this package restored so that we can finish our build for this legacy application until we have a chance to upgrade the functionality that depends on this package?\n\n### Repro Steps\n\nSearch for package named \"LaserFiche 10.0.0\" and view that no results come back.\n\n### Expected Behavior\n\nPackage should be available\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/15343115/164252515-630262ea-2e11-4366-9f0c-883d931d8b43.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21363741288","Type":"PullRequestEvent","CreatedAt":"2022-04-19T21:54:16","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9099","RelatedDescription":"Opened pull request \"Increase search engine indexing blocking duration to 90 days\" (#9099) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4350"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21387496582","Type":"IssuesEvent","CreatedAt":"2022-04-21T01:19:46","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10758","RelatedDescription":"Closed issue \"Enhance the experimentation infrastructure in NuGet code to support transitive dependencies\" (#10758) at NuGet/Home","RelatedBody":""},{"Id":"21386883046","Type":"IssuesEvent","CreatedAt":"2022-04-21T00:14:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11761","RelatedDescription":"Opened issue \"Restore with static graph evaluation fails with an NRE when a `TargetFramework` is specified\" (#11761) at NuGet/Home","RelatedBody":"Take the following project for example: \r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;net5.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n\r\n```\r\nRun the following command: \r\n\r\n> msbuild /t:restore /p:TargetFramework=\"net5.0\" /p:RestoreUseStaticGraphEvaluation=\"true\"\r\n\r\n### Actual \r\n\r\nSee output below. \r\n```console\r\nC:\\Code\\Temp\\MultiTargetted [master]> msbuild /t:restore /p:TargetFramework=\"net5.0\" /p:RestoreUseStaticGraphEvaluation=\"true\"\r\nMicrosoft (R) Build Engine version 17.2.0-preview-22116-01+7d926d7ab for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 20-Apr-22 5:09:34 PM.\r\nProject \"C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.csproj\" on node 1 (Restore target(s)).\r\nRestore:\r\n  Determining projects to restore...\r\n  Evaluated 1 project(s) in 1259ms (1 builds, 0 failures).\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.RestoreEx.targets(19,5): error : Object reference not set to an instance of an object. [C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.\r\ncsproj]\r\nDone Building Project \"C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.csproj\" (Restore target(s)) -- FAILED.\r\n\r\n\r\nBuild FAILED.\r\n\r\n\"C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.csproj\" (Restore target) (1) ->\r\n(Restore target) ->\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.RestoreEx.targets(19,5): error : Object reference not set to an instance of an object. [C:\\Code\\Temp\\MultiTargetted\\MultiTargette\r\nd.csproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.11\r\n```\r\n\r\nRun it without static graph, and note that there's no failure. \r\n\r\n> msbuild /t:restore /p:TargetFramework=\"net5.0\"\r\n\r\n### Expected\r\n\r\n```\r\nC:\\Code\\Temp\\MultiTargetted [master]> msbuild /t:restore /p:TargetFramework=\"net5.0\"\r\nMicrosoft (R) Build Engine version 17.2.0-preview-22116-01+7d926d7ab for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 20-Apr-22 5:09:39 PM.\r\nProject \"C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.csproj\" on node 1 (Restore target(s)).\r\n_GetAllRestoreProjectPathItems:\r\n  Determining projects to restore...\r\nRestore:\r\n  Assets file has not changed. Skipping assets file writing. Path: C:\\Code\\Temp\\MultiTargetted\\obj\\project.assets.json\r\n  Restored C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.csproj (in 81 ms).\r\n\r\n  NuGet Config files used:\r\n      C:\\Code\\NuGet.Config\r\n      C:\\Users\\Roki2\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n      C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config\r\n      C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n  Feeds used:\r\n      https://api.nuget.org/v3/index.json\r\n      C:\\Program Files\\dotnet\\library-packs\r\n  All projects are up-to-date for restore.\r\nDone Building Project \"C:\\Code\\Temp\\MultiTargetted\\MultiTargetted.csproj\" (Restore target(s)).\r\n\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.79\r\n```\r\n\r\n\r\nDiscovered this while working on https://github.com/NuGet/Home/issues/11653. \r\n\r\nNote that when fixing this, we might need to do the same thing as the fix in https://github.com/NuGet/Home/issues/11653"},{"Id":"21381944088","Type":"IssuesEvent","CreatedAt":"2022-04-20T18:02:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11733","RelatedDescription":"Closed issue \"Large number of allocations while processing package references\" (#11733) at NuGet/Home","RelatedBody":"When calling `GetPackageReferenceUtility.GetInstalledVersion()` and `GetPackageReferenceUtility.GetTransitivePackagesForLibrary()` large amounts of memory are allocated to execute LINQ queries; primarily due to capture classes, delegates, and enumerators. In the case of OrchardCore, this totals to ~22MB. By unrolling these LINQ queries, we can eliminate these allocations and get a small reduction in CPU usage too."},{"Id":"21374928904","Type":"IssuesEvent","CreatedAt":"2022-04-20T12:11:16","Actor":"marcin-krystianc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11760","RelatedDescription":"Opened issue \"[Bug]: Package version downgrade is not detected due to invalid transitive pinning\" (#11760) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.100-preview.3.22179.4\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nThere are some correctness issues when restoring packages for a solution in which projects specify different versions using CPVM and transitive pinning\r\nAs in the [attached example](https://github.com/NuGet/Home/files/8521262/MissingDowngradeCentralisedLib.zip), the `App` project specifies a lower version of a dependency than the `Lib1` and the `Lib2` projects. However, the restore operation is still successful and no version downgrades are being reported.\r\n\r\n**Solution.sln:**\r\n```\r\nApp -> Lib1 {{Newtonsoft.Json 12.0.2}} -> Lib2 -> Newtonsoft.Json 12.0.2\r\n    -> Newtonsoft.Json 12.0.1\r\n```\r\n\r\n**Output of dotnet restore:**\r\n```\r\n  Determining projects to restore...\r\n  The project _\\Lib1\\Lib1.csproj is using CentralPackageVersionManagement, a NuGet preview feature.\r\n  The project _\\App\\App.csproj is using CentralPackageVersionManagement, a NuGet preview feature.\r\n  Restored _\\Lib2\\Lib2.csproj (in 158 ms).\r\n  Restored _\\App\\App.csproj (in 158 ms).\r\n  Restored _\\Lib1\\Lib1.csproj (in 158 ms).\r\n```\r\n\r\n**Output of dotnet list package:**\r\n```\r\ndotnet list package\r\nProject 'App' has the following package references\r\n   [net5.0]:\r\n   Top-level Package      Requested   Resolved\r\n   > Newtonsoft.Json                  12.0.1\r\n\r\nProject 'Lib1' has the following package references\r\n   [net5.0]: No packages were found for this framework.\r\nProject 'Lib2' has the following package references\r\n   [net5.0]:\r\n   Top-level Package      Requested   Resolved\r\n   > Newtonsoft.Json      12.0.2      12.0.2\r\n```\r\n\r\n**App:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" />\r\n    <ProjectReference Include=\"..\\Lib1\\Lib1.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Directory.Packages.props (App):**\r\n```\r\n<Project>\r\n  <ItemGroup>\t\t\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.1\"  />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Lib1:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Lib2\\Lib2.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Directory.Packages.props (Lib1):**\r\n```\r\n<Project>\r\n  <ItemGroup>\t\t\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.2\"  />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Lib2:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Attachements:**\r\n- [MissingDowngradeCentralisedLib.zip](https://github.com/NuGet/Home/files/8521262/MissingDowngradeCentralisedLib.zip)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"21366332329","Type":"IssuesEvent","CreatedAt":"2022-04-20T02:20:50","Actor":"kellielellie1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11759","RelatedDescription":"Opened issue \"[Feature]: Retain Command History After Closing and Opening Visual Studio\" (#11759) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Manager Console\n\n### The Elevator Pitch\n\nPackage Manager Console does retain command history in a temporary manner but in between closing and opening of Visual Studio that history is gone. \r\n\r\nPlease can the command history be retained after closing and opening of Visual Studio.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"21364300361","Type":"IssuesEvent","CreatedAt":"2022-04-19T22:44:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9190","RelatedDescription":"Closed issue \"CommandRunnerResult works differently with dotnet.exe vs nuget.exe?\" (#9190) at NuGet/Home","RelatedBody":"In dotnetsourcestests.cs needed to use item2, where item3 worked in nuget.exe based tests\n\n```\n                // TODO: Item2 in dotnet, vs Item3 in nuget.exe -- switched\n                result.Item2.Contains(expectedErrorMessage),\n                \"Expected error is \" + expectedErrorMessage + \". Actual error is \" + result.Item2);\n```\n\nFigure out difference that causes that...in order to simplify porting any tests from nuget.exe to dotnet.exe"},{"Id":"21359318912","Type":"IssuesEvent","CreatedAt":"2022-04-19T17:06:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4183","RelatedDescription":"Closed issue \"Remove V2 NuGet.Core dependency from the tests\" (#4183) at NuGet/Home","RelatedBody":"Currently part of test bed heavily depends on NuGet.Core V2 code. \r\nSpecifically the NuGet.Commandline.Test.\r\n\r\nThis needs to be removed and the functionality ported. "},{"Id":"21358943320","Type":"IssuesEvent","CreatedAt":"2022-04-19T16:45:03","Actor":"xPaw","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11758","RelatedDescription":"Opened issue \"[Bug]: Package restore errors should mention which dependant package it came from\" (#11758) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.1.0.103\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n`dotnet restore` and nuget in Visual Studio 2022.\r\n\r\nIn my project I have `SkiaSharp.Views.WindowsForms` package, which depends on OpenTK (>= 3.1.0), OpenTK.GLControl (>= 3.1.0).\r\n\r\nMy project itself also depended on OpenTK.GLControl, while attempting an upgrade I briefly uninstalled this package, but nuget keeps saying that it fails to restore it.\r\n\r\nIt's not obvious that it's still trying to restore it because another package depends on it. This error message should print the dependency path.\n\n### Verbose Logs\n\n```shell\nDetermining projects to restore...\r\nGUI.csproj : error NU1701: Package 'OpenTK.GLControl 3.1.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8' instead of the project target framework 'net6.0-windows7.0'. This package may not be fully compatible with your project. [ValveResourceFormat.sln]\r\n```\n```\n"},{"Id":"21352739186","Type":"IssuesEvent","CreatedAt":"2022-04-19T11:40:37","Actor":"v-crchang","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11757","RelatedDescription":"Opened issue \"[Bug]: There is no black arrow install button on the right of custom feed package when hovering on the package in “Browse” tab of PM UI\" (#11757) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.3.0.24\n\n### Worked before?\n\nDev\\6.3.0.12\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. File->New Project->Visual F#, create a Console Application project. \r\n2. Open Package Manager Settings dialog (Tools->NuGet Package Manager->Package Manager Settings). \r\n3. Add a custom feed source, type in the name is 'Myget' and the source is https://www.myget.org/F/andy-nuget-project/api/v2. \r\n4. Start NuGet Package Manager dialog and select the ‘Myget’ package source. \r\n5. Go to “Browse” tab and hover on the package 'knockoutjs'.\r\n\r\n## Expected\r\nThere is a black download arrow on the right of package list in “Browse” Tab when hovering on the package as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/163995283-6912e272-5c15-4f2a-8c76-c78dac2462b0.png)\r\n\r\n## Actual\r\nThere is no black arrow install button on the right of custom feed package when hovering on the package as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/163995344-9660c421-f5f3-4f8d-8df5-f33b70eedba9.png)\r\n\r\n## Notes\r\n1. This issue does not repro on NuGet Client Dev\\6.3.0.12.\r\n2. This issue does not repro on NuGet public feed.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21341436970","Type":"IssuesEvent","CreatedAt":"2022-04-18T20:45:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11750","RelatedDescription":"Closed issue \"Package manager UI should be only updated only when there is an important state change\" (#11750) at NuGet/Home","RelatedBody":"Track https://github.com/NuGet/NuGet.Client/pull/4535#discussion_r848924794. Package manager UI should be only updated only when there is an important state change.\r\n\r\nAlso https://github.com/NuGet/NuGet.Client/pull/4535#discussion_r848675522 and https://github.com/NuGet/NuGet.Client/pull/4535#discussion_r848675567"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":246,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-04-21T03:30:25.7258219Z","RunDurationInMilliseconds":1533}