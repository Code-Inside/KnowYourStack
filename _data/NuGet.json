{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35892840969","Type":"PullRequestEvent","CreatedAt":"2024-02-22T01:28:51","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9819","RelatedDescription":"Opened pull request \"Update NuGet Jobs packages\" (#9819) at NuGet/NuGetGallery","RelatedBody":"NuGet gallery and NuGet jobs are dependency packages for each other.  we updated NuGet.jobs with latest NuGetGallery.  Need update the NuGet Jobs again in Gallery.\r\n\r\nAlert: https://nuget.visualstudio.com/NuGetBuild/_componentGovernance/113192/alert/10834413?typeId=568825&pipelinesTrackingFilter=0 \r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/5251"},{"Id":"35892665331","Type":"IssuesEvent","CreatedAt":"2024-02-22T01:18:13","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9818","RelatedDescription":"Opened issue \"[Bug Bash] Fix Framework Filter Mode tooltip colors\" (#9818) at NuGet/NuGetGallery","RelatedBody":"The Framework Filter Mode tooltip has two colors. It's gray, but there's also a bit of white on the arrow on the left, as well as a white strip at the bottom.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/6c3e7228-ab51-4787-8096-f92856553f2f)\r\n\r\nWe should try to use only one color.\r\n"},{"Id":"35892606371","Type":"IssuesEvent","CreatedAt":"2024-02-22T01:14:41","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9817","RelatedDescription":"Opened issue \"[Feature]: Show how a computed framework was computed\" (#9817) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nIt would be cool to see how a computed framework was actually computed, i.e. which asset framework did it come from?\r\n\r\nWe could add this information as a tooltip when we hover over the badges: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9836394f-19b3-49af-936a-dcda09bce8c5)\n\n### Additional Context and Details\n\n_No response_"},{"Id":"35892560726","Type":"IssuesEvent","CreatedAt":"2024-02-22T01:12:01","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9816","RelatedDescription":"Opened issue \"[Bug Bash] Frameworks tooltip is not bootstrap\" (#9816) at NuGet/NuGetGallery","RelatedBody":"## Problem\r\n\r\nWe're using bootstrap tooltips everywhere else, but the tooltip next to the 'Frameworks' header in the Filter Panel is browser-native.\r\n\r\n## Solution\r\n\r\nMake the Frameworks header tooltip use bootstrap too, i.e. like this one: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/b606ba6c-76dc-4666-a01d-8301a283542e)\r\n\r\nThe Frameworks tooltip also acts as a link, so the TFM badges may be a better example:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/62b6ea67-6602-48d6-83c0-b6519da6fe27)\r\n\r\n"},{"Id":"35892431929","Type":"IssuesEvent","CreatedAt":"2024-02-22T01:04:26","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9815","RelatedDescription":"Opened issue \"[Bug Bash] Show the full framework name when you hover over the TFMs in the Filter Panel\" (#9815) at NuGet/NuGetGallery","RelatedBody":"## Problem\r\n\r\nWe're showing the full framework name in the framework badges (**\".NET Framework 4.5\"**), but only the TFM short name in the Filter Panel (**\"net45\"**).\r\n\r\n## Solution\r\n\r\nShow the full framework name if you hover above the TFM in the filter panel."},{"Id":"35892347193","Type":"IssuesEvent","CreatedAt":"2024-02-22T00:59:48","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9814","RelatedDescription":"Opened issue \"Improve tooltip information on TFM badges\" (#9814) at NuGet/NuGetGallery","RelatedBody":"* The two colors on the badges can be confusing, so we need to make the asset/computed difference clearer\r\n    - Even asset framework badges say \"this package is **compatible** with this framework or higher\". The word 'compatible' might imply it's a computed framework, so we should use clearer language.\r\n* Show the framework name in the tooltip \r\n    - From an accessibility bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1970927/?view=edit\r\n    - We can fix this here since we're already working on it."},{"Id":"35883279077","Type":"PullRequestEvent","CreatedAt":"2024-02-21T18:37:17","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9813","RelatedDescription":"Merged pull request \"update the NuGet package\" (#9813) at NuGet/NuGetGallery","RelatedBody":"Update package vulnerability.  \r\n\r\n\r\nAddresses : https://github.com/NuGet/Engineering/issues/5251"},{"Id":"35859125019","Type":"PullRequestEvent","CreatedAt":"2024-02-21T06:25:20","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9813","RelatedDescription":"Opened pull request \"update the NuGet package.\" (#9813) at NuGet/NuGetGallery","RelatedBody":"Update package vulnerability.  \r\n\r\n\r\nAddresses : https://github.com/NuGet/Engineering/issues/5251"},{"Id":"35852164848","Type":"IssuesEvent","CreatedAt":"2024-02-21T00:03:59","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9812","RelatedDescription":"Opened issue \"Add tooltip for TFM generation checkbox in search\" (#9812) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nIn the selection below, it would consider any of `net5.0, net6.0, net7.0, net8.0`, and `netcoreapp2.0` for filtering. filter(any(net5.0, net6.0, net7.0, net8.0) && (netcoreapp2.0)). I think we need to have a tooltip to clarify this behavior; otherwise, it's hard for customers to decipher and understand how this generation selection works.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/0e561dc2-5560-4688-86c9-99f3b8bdbe1a)\r\n\n\n### Repro Steps\n\n1\n\n### Expected Behavior\n\n1\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35851378408","Type":"IssuesEvent","CreatedAt":"2024-02-20T23:20:19","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9531","RelatedDescription":"Closed issue \"[NuGet.org Bug]: More Download Count Issues?\" (#9531) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nMy SoftCircuits.Wordify package has been climbing quickly in download counts relative to my other packages. But it seemed to suddenly stopped climbing.\r\n\r\nAs I review the package information, it says the package averages 11 downloads per day. But the download count shown on nuget.org has increased about 10 over the past month.\r\n\r\nI understand that people just may have suddenly just lost interest in my package. But then why does it say I'm averaging 11 downloads per day? Clearly something is off here. And I know there has been issues with the download counts in the past.\r\n\r\nIs there anyway to get this checked?\n\n### Repro Steps\n\nView the average downloads per day vs how fast the total download count grows.\n\n### Expected Behavior\n\nI expected the total download count to grow roughly by the average daily download count each day.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35850665405","Type":"IssuesEvent","CreatedAt":"2024-02-20T22:44:50","Actor":"ElanHasson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9811","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9811) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nPer https://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges\r\n\r\nI'd like to request that images served from `https://discordapp.com/api/guilds/` be allowed to be displayed by the readme.\r\n\r\nThe discord banner is what i'd like displayed.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/234704/79644b26-3e8f-46d0-96a1-d51acfa411e2)\r\n\n\n### Repro Steps\n\nSee https://github.com/InfinityFlowApp/aspire-temporal/blob/main/README.md for the Discord banner.\n\n### Expected Behavior\n\nThe image should appear on the nuget.org site\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35849223792","Type":"PullRequestEvent","CreatedAt":"2024-02-20T21:43:26","Actor":"dependabot[bot]","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9810","RelatedDescription":"Opened pull request \"Bump ip from 1.1.5 to 1.1.9 in /src/Bootstrap\" (#9810) at NuGet/NuGetGallery","RelatedBody":"Bumps [ip](https://github.com/indutny/node-ip) from 1.1.5 to 1.1.9.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/indutny/node-ip/commit/1ecbf2fd8c0cc85e44c3b587d2de641f50dc0217\"><code>1ecbf2f</code></a> 1.1.9</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894\"><code>6a3ada9</code></a> lib: fixed CVE-2023-42282 and added unit test</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/5dc3b2f3f4b4690fa9a918fa5085b6fca9979fca\"><code>5dc3b2f</code></a> 1.1.8</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/8e6f28b23a89245eeac74ad2ef9eb0d27cb27e1c\"><code>8e6f28b</code></a> lib: even better node 6 support</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/088c9e5664e43cda2a43c1e5b4acf921bb6613a9\"><code>088c9e5</code></a> 1.1.7</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/1a4ca35ddc55d2987bb1a7e38e9a729a59174611\"><code>1a4ca35</code></a> lib: add back support for Node.js 6</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/af82ef42adc513b20f7d1213421ca4b901d10f3d\"><code>af82ef4</code></a> 1.1.6</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/dba19f6c0c6560bbc5bc18ad12976005900def87\"><code>dba19f6</code></a> package: exclude test folder from publishing</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/7cd7f30991363d818cb0c6718a1ad5473c795b12\"><code>7cd7f30</code></a> ci: use github workflows</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/4de50aec875d12b004849e11e19d6daf68b50c2d\"><code>4de50ae</code></a> lib: node 18 support</li>\n<li>See full diff in <a href=\"https://github.com/indutny/node-ip/compare/v1.1.5...v1.1.9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ip&package-manager=npm_and_yarn&previous-version=1.1.5&new-version=1.1.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"},{"Id":"35741198416","Type":"IssuesEvent","CreatedAt":"2024-02-16T14:47:05","Actor":"toras9000","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9789","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The primary search feed for api.nuget.org may be staying.\" (#9789) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe primary SearchQueryService and secondary SearchQueryService presented in the following feeds return different numbers of downloads.\r\nThe primary SearchQueryService appears to be lagging behind.\r\nhttps://api.nuget.org/v3/index.json\r\n\r\nI do not know if this is the planned behavior.\r\n\n\n### Repro Steps\n\nI compared the following two results (usnc and ussc)\r\n\r\n- Primary SearchQueryService\r\n    - https://azuresearch-usnc.nuget.org/query?q=packageid:System.Data.SQLite.Core\r\n- Secondary SearchQueryService\r\n    - https://azuresearch-ussc.nuget.org/query?q=packageid:System.Data.SQLite.Core\r\n\r\nThe following web page display is close to the secondary\r\n\r\n- Web page\r\n    - https://www.nuget.org/packages/System.Data.SQLite.Core\r\n\n\n### Expected Behavior\n\nIf this is the response for the intended reason, then this is not a particular problem.\r\nI created this issue because I had a question about the fact that the primary appears to return old results.\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35721510674","Type":"PullRequestEvent","CreatedAt":"2024-02-15T23:40:57","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9809","RelatedDescription":"Opened pull request \"[UI] New theme for home page \" (#9809) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9807\r\nFigma: https://www.figma.com/file/ZaAD9rDujh8JDkRF4q9Fd8/NuGet---Simple-theme-updates?type=design&node-id=61%3A9109&mode=design&t=Urj8iIoXc4thBO3E-1\r\n\r\n\r\n#### Light (background looks\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/744ac884-991f-4920-be94-fc6a9231b14a)\r\n\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/54bffe69-85d8-4e60-a477-e8ba78adf897)\r\n\r\n\r\n\r\n## Button\r\n#### Light\r\n![button-light-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/f71844a1-3217-4b0f-b2a4-a5fa01dfb2af)\r\n#### Dark\r\n![button-dark-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/547c772c-a874-4dd8-86d2-b44d92e7df51)\r\n\r\n### Navbar\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/16ed675a-1613-4786-bd7f-f3f584eebd11)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/182bea3c-9748-4564-8bc2-d9e29877905a)\r\n\r\n### Circuit image\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/8519c001-3bbc-442d-9d82-6b32dd0a51f4)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/09581ea0-3abe-4adc-b305-ceb3ea8f60ed)\r\n\r\n### What is nuget?\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/d452412b-30fb-4f4b-a149-479a49cac7be)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/c2c3ea58-8b34-418d-a95c-5e872079f6b3)\r\n\r\n### Footer\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/6b17cdd6-d5f7-4016-b7ac-a7e622832449)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/745eeaa6-b084-4f5f-be1b-1721cedea542)\r\n\r\n"},{"Id":"35721493692","Type":"PullRequestEvent","CreatedAt":"2024-02-15T23:39:58","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9808","RelatedDescription":"Closed pull request \"[UI] New theme for home page\" (#9808) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9807\r\nFigma: https://www.figma.com/file/ZaAD9rDujh8JDkRF4q9Fd8/NuGet---Simple-theme-updates?type=design&node-id=61%3A9109&mode=design&t=Urj8iIoXc4thBO3E-1\r\n\r\n\r\n#### Light (background looks\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/744ac884-991f-4920-be94-fc6a9231b14a)\r\n\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/54bffe69-85d8-4e60-a477-e8ba78adf897)\r\n\r\n\r\n\r\n## Button\r\n#### Light\r\n![button-light-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/f71844a1-3217-4b0f-b2a4-a5fa01dfb2af)\r\n#### Dark\r\n![button-dark-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/547c772c-a874-4dd8-86d2-b44d92e7df51)\r\n\r\n### Navbar\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/16ed675a-1613-4786-bd7f-f3f584eebd11)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/182bea3c-9748-4564-8bc2-d9e29877905a)\r\n\r\n### Circuit image\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/8519c001-3bbc-442d-9d82-6b32dd0a51f4)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/09581ea0-3abe-4adc-b305-ceb3ea8f60ed)\r\n\r\n### What is nuget?\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/d452412b-30fb-4f4b-a149-479a49cac7be)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/c2c3ea58-8b34-418d-a95c-5e872079f6b3)\r\n\r\n### Footer\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/6b17cdd6-d5f7-4016-b7ac-a7e622832449)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/745eeaa6-b084-4f5f-be1b-1721cedea542)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35891708585","Type":"IssuesEvent","CreatedAt":"2024-02-22T00:23:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13253","RelatedDescription":"Opened issue \"Warn when vulnerabilities are detected during packages.config restore in CLI scenarios.\" (#13253) at NuGet/Home","RelatedBody":""},{"Id":"35890066197","Type":"IssuesEvent","CreatedAt":"2024-02-21T22:52:33","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13158","RelatedDescription":"Closed issue \"[Dotnet Package Search] The search result of the package should be “version” instead of “latestVersion” when executing command “dotnet package search <Package Name> --exact-match --format json”\" (#13158) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK 9.0.100-alpha.1.24062.11\r\n\r\n### Worked before?\r\n\r\nIt’s not a regression issue since it is a new feature.\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:  \r\n1.Patch the latest .NET SDK version ([9.0.100-alpha.1.24062.11](https://github.com/dotnet/installer?tab=readme-ov-file#use-dotnet---help-to-see-available-commands-or-visit-httpsakamsdotnet-cli)) with NuGet Client [Pipelines - Run 6.9.0.86 artifacts (visualstudio.com)](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8897544&view=artifacts&pathAsName=false&type=publishedArtifacts). \r\n   1.1 Download the [Entropy](https://github.com/NuGet/Entropy.git) to the desktop of test machine.\r\n   1.2 Download and extract the NuGet Client build “[6.9.0.86](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8897544&view=artifacts&pathAsName=false&type=publishedArtifacts)->nupkgs - NonRTM” (named to “nupkgs”) to the desktop of test machine.\r\n   1.3 Update the $SDKChannel = \"LTS\" and $SDKVersion = \"9.0.100-alpha.1.24062.11\" in the “patchOnWindows.ps1” file of the downloaded “Entropy\\SDKPatchTool”.\r\n   1.4 Modify the $patchSDKFolder = \"C:\\Users\\[UserName]\\Desktop\\PatchedSDK\" and $nupkgsPath = \"C:\\Users\\v-luzh\\Desktop\\nupkgs\" (the path of downloaded nupkgs in step 1.2) in the “patchOnWindows.ps1” file of the downloaded “Entropy\\SDKPatchTool”.\r\n2. After patching finished, go to the patchedSDK folder and execute the command `.\\dotnet package search NUnit --exact-match --format json` in powershell.\r\n\r\n#### Expected Results:  \r\nThe search result of the package should be “version” instead of “latestVersion” since one package only has one latest version. Like the result of the searching the same package with “--format table” by default as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/dd4211bb-ffc6-4b55-9111-8caaf9d1086b)\r\n\r\n#### Actual Results:\r\nThe search result of the package shows a lot of “latestVersion” which does not make sense as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/20632625/913aea90-1fdc-4063-88b7-cc8d48b36cf9)\r\n\r\n#### Note:\r\nRepro rate: 100%"},{"Id":"35890066087","Type":"IssuesEvent","CreatedAt":"2024-02-21T22:52:33","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13165","RelatedDescription":"Closed issue \"The search result of the package should be “totalDownloads” instead of “total downloads” when executing command “dotnet package search <Package Name> --format json”\" (#13165) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 9.0.100-alpha.1.24062.11\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n.\\dotnet.exe package search <package_name> --format json\r\n(also repros with --exact-match)\r\n\r\nThe json output of the dotnet package search should have total downloads be a single word, rather than two words with a space. This would allow accessing the property with dot notation rather than having to rely on deferencing the parsed json with brackets.\r\n\r\nThis issue occurs both when running with and without the --exact-match flag.\r\n\r\nExpected:\r\noutput would have \"totalDownloads\", \"total_downloads\" or something similar, that is a single word.\r\n\r\nActual:\r\n![image](https://github.com/NuGet/Home/assets/10777837/88fdf29e-be8e-4ff6-bef0-8e22c7ce5dee)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"35884837047","Type":"IssuesEvent","CreatedAt":"2024-02-21T19:30:55","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7912","RelatedDescription":"Closed issue \"Deprecate NuGet.exe list in favor of NuGet.exe search\" (#7912) at NuGet/Home","RelatedBody":"Following the deprecation effort in commands to avoid ambiguity, the `nuget.exe list` command will be renamed to `nuget.exe search`.\r\n\r\n## Why we are renaming?\r\n1. The `dotnet.exe list` command lists package or project references in projects or solutions, which is different from listing packages from a feed in the actual `nuget.exe list` behavior. To avoid confusion between those commands, we want to set a more adequate verb for describing the actual `nuget.exe list` behavior.\r\n2. We want to implement new search filters.\r\n\r\n## How this will be?\r\nFirst we'll both commands available in nuget.exe; both of them will have the same functionality, except for `nuget.exe list`, that will display a deprecation warning message each time the command is invoked.\r\n\r\nIn the upcoming releases, we will remove the `nuget.exe list` command.\r\n\r\nThe issue tracking all the deprecated commands is : https://github.com/NuGet/Home/issues/7753\r\n"},{"Id":"35855886537","Type":"IssuesEvent","CreatedAt":"2024-02-21T03:25:41","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13206","RelatedDescription":"Closed issue \"Caching task results can cause all continuations to occur on the same thread\" (#13206) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe, dotnet.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nDuring a restore, NuGet's code has several places where it caches a task for reuse by graph walks.  Some large restores which normally take 30 minutes are taking up to 3 hours.  Analysis of the memory dump shows thousands of tasks waiting to be scheduled and only one task running at a time.\n\nOne such code path is here: https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.DependencyResolver.Core/ResolverUtility.cs#L238\n\nThe issue is around how we're using a `Dictionary<TKey, Task<TValue>` or `ConcurrentDictionary<TKey, Task<TValue>>`.\n\nConsider the following code:\n\n```C#\nConcurrentDictionary<string, Task> taskCache = new ConcurrentDictionary<string, Task>(StringComparer.OrdinalIgnoreCase);\n\nfor (int i = 0; i < Iterations; i++)\n{\n    int num = i;\n    Task.Run(() => WorkerTask(num, taskCache));\n}\n\nConsole.ReadLine();\n\nvoid CachedTask()\n{\n    LogCacheTaskStart();\n    Thread.Sleep(DelayInMilliseconds);\n    LogCacheTaskStop();\n}\n\nasync Task WorkerTask(int iteration, ConcurrentDictionary<string, Task> taskCache)\n{\n    await Task.Delay(Random.Next(100, 400));\n    LogWorkerTaskStart(iteration);\n    if (!taskCache.TryGetValue(\"1\", out Task task))\n    {\n        task = taskCache.GetOrAdd(\"1\", Task.Run(CachedTask));\n    }\n    await task;\n    LogWorkerTaskWorking(iteration);\n    Thread.Sleep(DelayInMilliseconds);\n    LogWorkerTaskStop(iteration);\n}\n```\n\nThis will spawn N threads which all are waiting for a Task in the cache to complete.  All worker threads receive the same Task and all of them resume on the same thread, causing execution to all happen on the same CPU core.\n\nOutput:\n```\nWorker task 2 started, waiting on cached task (Thread 13)...\nStarting caching task (Thread 14)...\nWorker task 8 started, waiting on cached task (Thread 5)...\nWorker task 7 started, waiting on cached task (Thread 7)...\nWorker task 4 started, waiting on cached task (Thread 4)...\nWorker task 5 started, waiting on cached task (Thread 8)...\nWorker task 6 started, waiting on cached task (Thread 12)...\nWorker task 9 started, waiting on cached task (Thread 6)...\nWorker task 0 started, waiting on cached task (Thread 9)...\nWorker task 1 started, waiting on cached task (Thread 3)...\nWorker task 3 started, waiting on cached task (Thread 11)...\nCached task complete (Thread 14).\nCached task complete, worker task 2 doing work (Thread 14)...\nWorker task 2 complete (Thread 14)\nCached task complete, worker task 8 doing work (Thread 14)...\nWorker task 8 complete (Thread 14)\nCached task complete, worker task 7 doing work (Thread 14)...\nWorker task 7 complete (Thread 14)\nCached task complete, worker task 4 doing work (Thread 14)...\nWorker task 4 complete (Thread 14)\nCached task complete, worker task 5 doing work (Thread 14)...\nWorker task 5 complete (Thread 14)\nCached task complete, worker task 6 doing work (Thread 14)...\nWorker task 6 complete (Thread 14)\nCached task complete, worker task 9 doing work (Thread 14)...\nWorker task 9 complete (Thread 14)\nCached task complete, worker task 0 doing work (Thread 14)...\nWorker task 0 complete (Thread 14)\nCached task complete, worker task 1 doing work (Thread 14)...\nWorker task 1 complete (Thread 14)\nCached task complete, worker task 3 doing work (Thread 14)...\nWorker task 3 complete (Thread 14)\n```\n\nYou can clearly see that each worker task is resuming on the same thread at the cached task completed on and the worker threads all execute serially.\n\nThe problem seems to be how the continuations happen on the same thread.  The solution is to use a `TaskCompletionSource<TValue>` instead.\n\n```c#\nDictionary<string, Task> taskCache = new Dictionary<string, Task>(StringComparer.OrdinalIgnoreCase);\n\nfor (int i = 0; i < Iterations; i++)\n{\n    int num = i;\n    Task.Run(() => WorkerTask(num, taskCache));\n}\n\nConsole.ReadLine();\n\nreturn Task.CompletedTask;\n\nasync Task CachedTaskAsync()\n{\n    LogCacheTaskStart();\n    await Task.Delay(DelayInMilliseconds);\n    LogCacheTaskStop();\n}\n\nasync Task WorkerTask(int iteration, Dictionary<string, Task> taskCache)\n{\n    LogWorkerTaskStart(iteration);\n\n    if (!taskCache.TryGetValue(\"1\", out Task task))\n    {\n        lock (taskCache)\n        {\n            if (!taskCache.TryGetValue(\"1\", out task))\n            {\n                TaskCompletionSource<int> taskCompletionSource = new TaskCompletionSource<int>(TaskCreationOptions.RunContinuationsAsynchronously);\n\n                CachedTaskAsync().ContinueWith((task) =>\n                {\n                    if (task.IsCanceled)\n                    {\n                        taskCompletionSource.SetCanceled();\n                    }\n                    else if (task.IsFaulted)\n                    {\n                        taskCompletionSource.SetException(task.Exception);\n                    }\n                    else\n                    {\n                        taskCompletionSource.SetResult(0);\n                    }\n                });\n\n                task = taskCache[\"1\"] = taskCompletionSource.Task;\n            }\n        }\n    }\n    await task;\n    LogWorkerTaskWorking(iteration);\n    Thread.Sleep(DelayInMilliseconds);\n    LogWorkerTaskStop(iteration);\n}\n```\n\nThat code uses `ContinueWith()` and a `TaskCompletionSource` which specifies that continuations should happen asynchronously and has the following output:\n```\nWorker task 7 started, waiting on cached task (Thread 4)...\nWorker task 0 started, waiting on cached task (Thread 3)...\nWorker task 2 started, waiting on cached task (Thread 5)...\nWorker task 6 started, waiting on cached task (Thread 12)...\nWorker task 3 started, waiting on cached task (Thread 7)...\nWorker task 8 started, waiting on cached task (Thread 11)...\nWorker task 4 started, waiting on cached task (Thread 10)...\nWorker task 5 started, waiting on cached task (Thread 8)...\nWorker task 9 started, waiting on cached task (Thread 14)...\nWorker task 1 started, waiting on cached task (Thread 6)...\nStarting caching task (Thread 4)...\nCached task complete (Thread 13).\nCached task complete, worker task 0 doing work (Thread 12)...\nCached task complete, worker task 4 doing work (Thread 10)...\nCached task complete, worker task 7 doing work (Thread 13)...\nCached task complete, worker task 2 doing work (Thread 11)...\nCached task complete, worker task 3 doing work (Thread 9)...\nCached task complete, worker task 6 doing work (Thread 7)...\nCached task complete, worker task 5 doing work (Thread 3)...\nCached task complete, worker task 8 doing work (Thread 4)...\nCached task complete, worker task 9 doing work (Thread 5)...\nCached task complete, worker task 1 doing work (Thread 8)...\nWorker task 5 complete (Thread 3)\nWorker task 4 complete (Thread 10)\nWorker task 1 complete (Thread 8)\nWorker task 9 complete (Thread 5)\nWorker task 6 complete (Thread 7)\nWorker task 3 complete (Thread 9)\nWorker task 2 complete (Thread 11)\nWorker task 7 complete (Thread 13)\nWorker task 8 complete (Thread 4)\nWorker task 0 complete (Thread 12)\n```\n\nNow all worker tasks resume on a different thread and continue to execute in parallel.\n\n### Verbose Logs\n\n_No response_"},{"Id":"35844209244","Type":"IssuesEvent","CreatedAt":"2024-02-20T18:37:30","Actor":"totszwai","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13252","RelatedDescription":"Opened issue \"NU3028 NU3037\" (#13252) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, Other/NA\n\n### Product Version\n\n6.9.1.3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nOn a freshly installed Windows 11 laptop, installed latest Visual Studio 2022, installed latest .NET SDK.\r\nLoaded an old project (from 2 months ago) and tried to restore the NuGet packages, nothing worked!\r\n\r\nRan the command\r\n`dotnet nuget locals --clear all`\r\n\r\nTried to restore again, and same result. This seems to be come kind of common reoccurring bug/issue with NuGet???? \r\n\r\n\r\n![image](https://github.com/NuGet/Home/assets/4440365/dcda3fe9-ebf0-47d0-9089-fd4c9c884079)\r\n\r\n![image](https://github.com/NuGet/Home/assets/4440365/c3a5d7b1-cef7-46b6-8cdb-7f63e4fdf57a)\r\n\r\n\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.201\r\n Commit:            4c2d78f037\r\n Workload version:  8.0.200-manifests.e575128c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.201\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.2\r\n  Architecture: x64\r\n  Commit:       1381d5ebd2\r\n\r\n.NET SDKs installed:\r\n  8.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 8.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 8.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 8.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"35827199043","Type":"IssuesEvent","CreatedAt":"2024-02-20T10:20:35","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13251","RelatedDescription":"Opened issue \"`dotnet` commands should not output usage information on all errors\" (#13251) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\n```console\r\n> dotnet nuget remove source ashjdfsbf\r\nerror: Unable to find any package source(s) matching name: ashjdfsbf.\r\n\r\n\r\nUsage: dotnet nuget remove source [arguments] [options]\r\n\r\nArguments:\r\n  name  Name of the source.\r\n\r\nOptions:\r\n  --configfile  The NuGet configuration file. If specified, only the settings from this file will be used. If not specified, the hierarchy of configuration files from the current directory will be used. For more information, see https://docs.microsoft.com/nuget/consume-packages/configuring-nuget-behavior.\r\n  -h|--help     Show help information\r\n```\r\n\r\nHowever, a scenario that is more likely to confuse customers is:\r\n\r\n```console\r\n> dotnet add package snjfbdujfbdf\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\zivkan\\AppData\\Local\\Temp\\tmp255fey.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET for code signing.\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET for timestamping.\r\ninfo : Adding PackageReference for package 'snjfbdujfbdf' into project 'D:\\src\\test\\wtf\\wtf.csproj'.\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/snjfbdujfbdf/index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/snjfbdujfbdf/index.json 238ms\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/snjfbdujfbdf/index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/snjfbdujfbdf/index.json 162ms\r\nerror: There are no versions available for the package 'snjfbdujfbdf'.\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\n\n### Desired Behavior\n\nOnly show usage/help information when command line parsing fails, not on all failures.\r\n\r\nFor example, run `dotnet add package Some.Package.That.Does.Not.Exist`. If done in a directory that does not contain any `*.*proj` file it outputs:\r\n\r\n```console\r\nCould not find any project in `D:\\src\\test\\`.\r\n```\r\n\r\nThat's it, no usage information. Whereas, if I add `--arg-that-does-not-exist`, then I get an error message saying the argument is not recognised, followed by the usage/help information.\r\n\r\nThis is a pattern that most CLI apps use.\n\n### Additional Context\n\nI believe that customers are getting confused by the extra verbosity in the error message, especially in the `dotnet add package` scenario where neither the first line nor the last line of the message output to customers is an error message. We have gotten github issues and VS feedback where the error message states what the problem is, but customers don't seem to notice and report the issue to us rather than fixing the issue themselves."},{"Id":"35791422787","Type":"IssuesEvent","CreatedAt":"2024-02-19T09:30:40","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6645","RelatedDescription":"Closed issue \"csproj: document how to properly pack platform-specific native assemblies\" (#6645) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet.exe\r\n\r\ndotnet.exe --version (if appropriate): 2.1.4\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1709 (16299.248)\r\n\r\n## Description\r\n\r\nWe've got rid and tfm specific native assemblies in a package but until very recently I haven't find enough documentation about how to pack them and let the runtime pick the appropriate native library automatically.\r\n\r\nRelevant links:\r\n- [New csproj additions](https://docs.microsoft.com/en-us/dotnet/core/tools/csproj) -- I find the IncludeAssets value \"Native\" which says \"native assemblies\" will be copied over. So where are they?\r\n- [Nuget MSBuild targets](https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets) -- traditional folders like build/, tools/, lib/, etc.\r\n- Fragmented information about project.json, mentioning `runtimes/win-x64` and so on -- , but how am I supposed to know that this convention is carried over to the new csproj?\r\n\r\nI have to look into the Nuget code repo, and here: https://github.com/NuGet/NuGet.Client/blob/023fe7670796a8986bbfdc520029e4cf0a6bbfda/src/NuGet.Core/NuGet.Packaging/ContentModel/ManagedCodeConventions.cs#L452\r\n\r\nThat's it, now I know it's `runtimes/{rid}/native/{any?}`. Searching for a [concrete example](https://www.google.com.hk/search?ei=iyegWqX2J4y50AScyqzQDw&q=runtimes%2Fwin-x64%2Fnative&oq=runtimes%2Fwin-x64%2Fnative&gs_l=psy-ab.3...54192.57534.0.57637.16.16.0.0.0.0.326.1791.12j1j0j2.15.0....0...1c.1.64.psy-ab..1.6.749...0i30k1j35i39k1j0i8i30k1j0i8i10i30k1j0i10i30k1.0.EBSRCYq3iEM) on the internet: \r\nI get issues, not documentation.\r\nSearching for \"nuget pack native assemblies\" did not work either..\r\nIt turns out, the correct information is located here: - [Bingo!](https://docs.microsoft.com/en-us/nuget/create-packages/supporting-multiple-target-frameworks)\r\nHowever, this page is advertised as \"Supporting multiple .NET framework versions\", which is really orthogonal to what I want. Multi-targeting is about `tfm`, and platform-specific stuff are about `rid` -- I have never found a single page that connects all these dots together.\r\n\r\nSo I suggest documenting such behavior at the following docs sites:\r\n1. \"Additions to the csproj format\" -- https://docs.microsoft.com/en-us/dotnet/core/tools/csproj\r\n2. \"Package creation workflow\" -- https://docs.microsoft.com/en-us/nuget/create-packages/overview-and-workflow -- there's multi-targeting page, and a native packages page, and I think it's better to create a new page \"platform-specific native libraries\" to avoid confusion.\r\n3. Also, document that `runtimes/{rid}/native` _does not_ work with `netfx` -- you have to place native dlls in the lib/ folder (risky, could cause msbuild warnings/errors), or embed the dlls and release them at runtime."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-22T03:30:17.5316457Z","RunDurationInMilliseconds":992}