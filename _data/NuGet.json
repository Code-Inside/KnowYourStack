{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23414980926","Type":"PullRequestEvent","CreatedAt":"2022-08-12T22:47:29","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9190","RelatedDescription":"Opened pull request \"[A11y] Read warning when tabbing to Paket CLI tab\" (#9190) at NuGet/NuGetGallery","RelatedBody":"Added `role = alert` to the warning below the Paket CLI command so that the screen reader will read the warning out to the user without having to tab to the warning element itself. \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9172"},{"Id":"23414260624","Type":"IssuesEvent","CreatedAt":"2022-08-12T21:30:48","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9170","RelatedDescription":"Closed issue \"[A11y]API Keys button is rendered using the wrong HTML Element type.\" (#9170) at NuGet/NuGetGallery","RelatedBody":"Original: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1554272\r\n\r\nRepro Steps:\r\n - Hit https://www.nuget.org and press Enter key.\r\n - Navigate to \"Sign in\" control and hit enter.\r\n - Navigate to \"Sign in with Microsoft\" control and hit enter.\r\n - Select “API Keys” from the Profile Dropdown and hit enter.\r\n - Navigate to \"Create\" button and hit enter.\r\n - Enter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\n - Navigate to \"Manage\" control and hit enter.\r\n - Verify that whether the API keys are defined as button or heading.\r\n\r\nActual Result:\r\nFor 'API keys' button, it was defined as a H1 heading instead of button.\r\n\r\nExpected result:\r\nFor API keys, it should be defined as button only.\r\n\r\nUser Impact:\r\nUsers might be able to get confused that the button is defined as heading.\r\n\r\nNotes:\r\nUpdating this to a button and restyling to match should be sufficient."},{"Id":"23413025077","Type":"PullRequestEvent","CreatedAt":"2022-08-12T19:51:01","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9189","RelatedDescription":"Opened pull request \"[2022-08-12] RI of dev to main for NuGetGallery\" (#9189) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23413008960","Type":"PullRequestEvent","CreatedAt":"2022-08-12T19:49:49","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9184","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.08.03] FI of main into dev for NuGetGallery\" (#9184) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23412021648","Type":"PullRequestEvent","CreatedAt":"2022-08-12T18:39:10","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9188","RelatedDescription":"Closed pull request \"Increase Payload Size\" (#9188) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23411557662","Type":"PullRequestEvent","CreatedAt":"2022-08-12T18:08:21","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9188","RelatedDescription":"Opened pull request \"Increase Payload Size\" (#9188) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23413950752","Type":"IssuesEvent","CreatedAt":"2022-08-12T21:03:11","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10159","RelatedDescription":"Closed issue \"[Feature]: Add ability to designate a package reference as used by every project in the repo\" (#10159) at NuGet/Home","RelatedBody":"We're looking at migrating from https://github.com/microsoft/MSBuildSdks/tree/master/src/CentralPackageVersions to the built-in central package versioning feature, and (unless I missed it) I didn't see an equivalent of `GlobalPackageReference`.\r\n\r\nI'm guessing that for all of our (many) build/analyzer packages, we can do the equivalent and manually add both `PackageVersion` and `PackageReference` (with IncludeAssets and PrivateAssets set as `GlobalPackageReference` does)? Is there any reason we shouldn't add the `PackageReference`s directly in Directory.Packages.props? "},{"Id":"23413646669","Type":"IssuesEvent","CreatedAt":"2022-08-12T20:38:38","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12020","RelatedDescription":"Closed issue \"[Bug]: Build failures in dev branch due to renaming of parameter from cpvmEnabled to centralPackageTransitivePinningEnabled \" (#12020) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nIn https://github.com/NuGet/NuGet.Client/commit/5957409d5b0316962864951c0295cae05ef24f46#diff-8de78cd9e645067e064929ca49f121aa8a1994934726e4bfdf1f4fd2a84522b7R2916 commit, parameter name was changed from cpvmEnabled to centralPackageTransitivePinningEnabled which is causing dev build failures.\n\n### Verbose Logs\n\n_No response_"},{"Id":"23413639996","Type":"IssuesEvent","CreatedAt":"2022-08-12T20:38:07","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12020","RelatedDescription":"Opened issue \"[Bug]: Build failures in dev branch due to renaming of parameter from cpvmEnabled to centralPackageTransitivePinningEnabled \" (#12020) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nIn https://github.com/NuGet/NuGet.Client/commit/5957409d5b0316962864951c0295cae05ef24f46#diff-8de78cd9e645067e064929ca49f121aa8a1994934726e4bfdf1f4fd2a84522b7R2916 commit, parameter name was changed from cpvmEnabled to centralPackageTransitivePinningEnabled which is causing dev build failures.\n\n### Verbose Logs\n\n_No response_"},{"Id":"23412240826","Type":"IssuesEvent","CreatedAt":"2022-08-12T18:54:08","Actor":"belav","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12019","RelatedDescription":"Opened issue \"RestoreUseStaticGraphEvaluation is reporting changes\" (#12019) at NuGet/Home","RelatedBody":"I ran the following on a large solution\r\n```\r\nmsbuild.exe -t:restore -p:RestoreUseStaticGraphEvaluation=true\r\nmsbuild.exe -t:restore\r\n```\r\n\r\nThe second command shows that 1 project needed to be updated\r\n```\r\n  Writing assets file to disk. Path: C:\\projects\\insite-commerce\\Src\\Backend\\Modules\\JobQuote\\Insite.JobQuote.Tests\\obj\r\n  \\project.assets.json\r\n  Restored C:\\projects\\insite-commerce\\Src\\Backend\\Modules\\JobQuote\\Insite.JobQuote.Tests\\Insite.JobQuote.Tests.csproj\r\n  (in 645 ms).\r\n```\r\n\r\nI diffed the whole `obj` after the first command to after the second command, and there is just a single line change in `project.assets.json` and `Insite.JobQuote.Tests.csproj.nuget.dgspec.json`\r\n```diff\r\n      \"warningProperties\": {\r\n+       \"allWarningsAsErrors\": true,\r\n        \"noWarn\": [\r\n          \"NU1608\"\r\n        ],\r\n        \"warnAsError\": [\r\n          \"NU1605\"\r\n        ]\r\n      }\r\n```\r\n\r\nDigging through the other project `obj` folders, none of them include `\"allWarningsAsErrors\": true,` and we have this in a `Directory.Build.props`\r\n```\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n  </PropertyGroup>\r\n```\r\n\r\nI don't believe this would prevent us from using RestoreUseStaticGraphEvaluation, but I am not really sure what to make of it. It almost seems like p:RestoreUseStaticGraphEvaluation is correct and the regular restore shouldn't be including that line."},{"Id":"23410197707","Type":"IssuesEvent","CreatedAt":"2022-08-12T16:38:17","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8605","RelatedDescription":"Closed issue \"Regenerate dgspec when customer triggers VS Feedback\" (#8605) at NuGet/Home","RelatedBody":"The initial implementation of NuGetFeedbackDiagnosticFileProvider just replicated what was being done before: include a static file.\r\n\r\nThis has the risk that if multiple solutions were restored, the static file might not be related to the VS instance that is being used to report a problem with the feedback tool.\r\n\r\nIdeas for improvement:\r\n* Regen dgspec with static filename when feedback triggered\r\n* Regen dgspec with unique filename when feedback triggered\r\n* Only write dgspec when feedback triggered, not on every PR restore\r\n"},{"Id":"23397543005","Type":"IssuesEvent","CreatedAt":"2022-08-12T02:33:49","Actor":"sify21","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12018","RelatedDescription":"Opened issue \"[Bug]: A typo in NuGet.Client LockFileFormat.cs\" (#12018) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nNuGet.Client repo dev branch\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nIt's a typo in source code. I just found it when reading the code. `ServicableProperty` missing a letter `e`\n\n### Verbose Logs\n\n_No response_"},{"Id":"23394740897","Type":"IssuesEvent","CreatedAt":"2022-08-11T21:42:34","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11760","RelatedDescription":"Closed issue \"[Bug]: Package version downgrade is not detected due to invalid transitive pinning\" (#11760) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.100-preview.3.22179.4\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nThere are some correctness issues when restoring packages for a solution in which projects specify different versions using CPVM and transitive pinning\r\nAs in the [attached example](https://github.com/NuGet/Home/files/8521262/MissingDowngradeCentralisedLib.zip), the `App` project specifies a lower version of a dependency than the `Lib1` and the `Lib2` projects. However, the restore operation is still successful and no version downgrades are being reported.\r\n\r\n**Solution.sln:**\r\n```\r\nApp -> Lib1 {{Newtonsoft.Json 12.0.2}} -> Lib2 -> Newtonsoft.Json 12.0.2\r\n    -> Newtonsoft.Json 12.0.1\r\n```\r\n\r\n**Output of dotnet restore:**\r\n```\r\n  Determining projects to restore...\r\n  The project _\\Lib1\\Lib1.csproj is using CentralPackageVersionManagement, a NuGet preview feature.\r\n  The project _\\App\\App.csproj is using CentralPackageVersionManagement, a NuGet preview feature.\r\n  Restored _\\Lib2\\Lib2.csproj (in 158 ms).\r\n  Restored _\\App\\App.csproj (in 158 ms).\r\n  Restored _\\Lib1\\Lib1.csproj (in 158 ms).\r\n```\r\n\r\n**Output of dotnet list package:**\r\n```\r\ndotnet list package\r\nProject 'App' has the following package references\r\n   [net5.0]:\r\n   Top-level Package      Requested   Resolved\r\n   > Newtonsoft.Json                  12.0.1\r\n\r\nProject 'Lib1' has the following package references\r\n   [net5.0]: No packages were found for this framework.\r\nProject 'Lib2' has the following package references\r\n   [net5.0]:\r\n   Top-level Package      Requested   Resolved\r\n   > Newtonsoft.Json      12.0.2      12.0.2\r\n```\r\n\r\n**App:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" />\r\n    <ProjectReference Include=\"..\\Lib1\\Lib1.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Directory.Packages.props (App):**\r\n```\r\n<Project>\r\n  <ItemGroup>\t\t\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.1\"  />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Lib1:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Lib2\\Lib2.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Directory.Packages.props (Lib1):**\r\n```\r\n<Project>\r\n  <ItemGroup>\t\t\r\n    <PackageVersion Include=\"Newtonsoft.Json\" Version=\"12.0.2\"  />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Lib2:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Attachements:**\r\n- [MissingDowngradeCentralisedLib.zip](https://github.com/NuGet/Home/files/8521262/MissingDowngradeCentralisedLib.zip)\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":52,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":49,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2022-08-14T03:30:26.2310966Z","RunDurationInMilliseconds":2878}