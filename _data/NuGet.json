{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13876870604","Type":"PullRequestEvent","CreatedAt":"2020-10-17T01:07:13","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8274","RelatedDescription":"Opened pull request \"Enabling word wrapping for tags in all layouts\" (#8274) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8186\r\n\r\nCurrently, unless we are in \"smartphone\" layout tags, package details (download count, last updated, latest version, tags) are forced into single line, which can lead to tags not showing at all (if the latest version is very long) or tag list cut at different places depending on zoom and window size.\r\n\r\nThe code changes the behavior to always showing the first 10 tags wrapping on the second (and third) lines if needed, making the amount of displayed content constant. \"View more\" link (currently a double chevron, open for suggestions) is shown when there are more than 10 tags. The link points to a package details page.\r\n\r\nScreenshots:\r\n\r\n![image](https://user-images.githubusercontent.com/102933/96325107-040a4080-0fda-11eb-8868-0b1b23ed8fc9.png)\r\n![image](https://user-images.githubusercontent.com/102933/96325114-11272f80-0fda-11eb-856d-2e2461c34c9e.png)\r\n"},{"Id":"13876595183","Type":"PullRequestEvent","CreatedAt":"2020-10-16T23:57:08","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8273","RelatedDescription":"Opened pull request \"[ReleasePrep][10.16.2020] NuGetGallery of dev into master\" (#8273) at NuGet/NuGetGallery","RelatedBody":"@lyndaidaii\r\nAdd roslyn analyzer and fix security warning issue (#8214) …\r\n\r\n@agr\r\nFix for overflowing api key hint text on certain zoom levels. (#8215) …\r\n\r\n@loic-sharma\r\n[A11y] Improve color contrast of grey buttons (#8259) …\r\n\r\n@loic-sharma\r\nTweak the orange button color (#8266) …\r\n\r\n@joelverhagen\r\nMake the ESLint ignore pattern more generic (#8267) …\r\n\r\n@lyndaidaii\r\nadd underline for banner (#8261)\r\n\r\n@lyndaidaii\r\nChange httpPost to httpGet (#8269)\r\n"},{"Id":"13876582816","Type":"PullRequestEvent","CreatedAt":"2020-10-16T23:54:13","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8271","RelatedDescription":"Closed pull request \"[ReleasePrep][10.16.2020] NuGetGallery of master into dev\" (#8271) at NuGet/NuGetGallery","RelatedBody":"Changes: \r\n\r\n@lyndaidaii\r\nRevert \"survey banner (#8249)\" (#8262) \r\n"},{"Id":"13876576439","Type":"PullRequestEvent","CreatedAt":"2020-10-16T23:52:34","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8272","RelatedDescription":"Merged pull request \"Revert \"Revert \"survey banner (#8249)\"\"\" (#8272) at NuGet/NuGetGallery","RelatedBody":"Reverts NuGet/NuGetGallery#8262"},{"Id":"13876471506","Type":"PullRequestEvent","CreatedAt":"2020-10-16T23:29:27","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8272","RelatedDescription":"Opened pull request \"Revert \"Revert \"survey banner (#8249)\"\"\" (#8272) at NuGet/NuGetGallery","RelatedBody":"Reverts NuGet/NuGetGallery#8262"},{"Id":"13876348540","Type":"PullRequestEvent","CreatedAt":"2020-10-16T23:05:09","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8269","RelatedDescription":"Merged pull request \"Change httpPost to httpGet\" (#8269) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\n"},{"Id":"13876327224","Type":"PullRequestEvent","CreatedAt":"2020-10-16T23:01:10","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8271","RelatedDescription":"Opened pull request \"[ReleasePrep][10.16.2020] NuGetGallery of master into dev\" (#8271) at NuGet/NuGetGallery","RelatedBody":"Changes: \r\n\r\n@lyndaidaii\r\nRevert \"survey banner (#8249)\" (#8262) \r\n"},{"Id":"13876207624","Type":"PullRequestEvent","CreatedAt":"2020-10-16T22:39:09","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8261","RelatedDescription":"Merged pull request \"Add underline for banner\" (#8261) at NuGet/NuGetGallery","RelatedBody":"Add underline with survey link\r\nLess space between like you and the link\r\n\r\nUI: \r\n![bannerfinal](https://user-images.githubusercontent.com/64443925/95898745-5f230580-0d44-11eb-8a1b-acdff84a3f55.PNG)\r\n\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8225"},{"Id":"13874362810","Type":"IssuesEvent","CreatedAt":"2020-10-16T18:50:56","Actor":"zcsizmadia","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8270","RelatedDescription":"Opened issue \"Unsupported floating NuGet version: 1.0.0+*\" (#8270) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nBased on SemVer 2.0.0 (semver.org), <major> \".\" <minor> \".\" <patch> \"+\" <build> is a valid version string. When I try to use wildchar on the build number with <PackageReference> e.g. `1.0.0+*`, NuGet.Versoning.dll reports a 'not a valid version string'\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nAdd <PackageReference Include=\"A.B.C\" Version=\"1.0.0+*\">  to msbuild project file e.g. .csproj\r\n\r\n### Expected behavior\r\nFloating should be valid on <major> \".\" <minor> \".\" <patch> \"+\" <build> build numbers.\r\n\r\n### Screenshots\r\n\r\n### Additional context\r\n1>C:\\Program Files\\dotnet\\sdk\\5.0.100-rc.1.20452.10\\NuGet.targets(130,5): error : '1.0.0+*' is not a valid version string. [C:\\Users\\ReferenceTest\\ReferenceTest.sln]\r\n         System.ArgumentException: '1.0.0+*' is not a valid version string.\r\n            at NuGet.Versioning.VersionRange.\r\nParse(String value, Boolean allowFloating)\r\n            at NuGet.Versioning.VersionRange.Parse(String value)\r\n            at NuGet.Commands.MSBuildRestoreUtility.AddPackageReferences(PackageSpec spec, IEnumerable`1 items, Boolean isCpvmEnabled)\r\n            at NuGet.Commands.MSBuildRestoreUtility.GetPackageSpec(IEnumerable`1 items)\r\n            at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n            at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n            at NuGet.Commands.MSBuildRestoreUtility.GetDependencySpec(IEnumerable`1 items)\r\n            at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n       Done executing task \"RestoreTask\" -- FAILED.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13881659482","Type":"IssuesEvent","CreatedAt":"2020-10-18T01:45:59","Actor":"glopesdev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10137","RelatedDescription":"Opened issue \"Include search term ranking in IPackageSearchMetadata\" (#10137) at NuGet/Home","RelatedBody":"Correct aggregation of results across multiple package sources in the client side relies on correct ranking of packages by relevance to the specified search term.\r\n\r\nIncluding the package ranking in the search metadata response would make it much easier to implement query aggregators and drastically reduce the complexity on the client side.\r\n\r\nCurrently clients are left to replicate the same search tokenization, parsing and evaluation which is done on the server, which is not only wasteful, but brings additional dependencies (e.g. Lucene.Net), and raises all manner of inconsistencies in situations where different sources might have ranked the packages differently for different reasons (e.g. NuGet v2 vs NuGet v3).\r\n\r\nIt also makes it virtually impossible to build reliable NuGet search aggregators outside of C#, due to the impracticality of keeping up with all the changes in the server ranking rules.\r\n\r\n**Summary:**\r\nAdd a new optional integer field **`Ranking`** to the NuGet protocol and `IPackageSearchMetadata`, similar to `DownloadCount`, which would contain the ranking computed by the server when evaluating the query response."},{"Id":"13880190577","Type":"IssuesEvent","CreatedAt":"2020-10-17T17:39:26","Actor":"Rick-Anderson","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10136","RelatedDescription":"Opened issue \"New feature: floating versions (wildcarding) with PMC installing NuGet packages\" (#10136) at NuGet/Home","RelatedBody":"We’d like to use CLI style wildcards in Program Manager to install NuGet packages.\r\n\r\nFor the CLI, we use the following to get the latest version:\r\n\r\ndotnet add package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore -v 5.0.0-*\r\n\r\nFor VS, the PM is the preferred mechanism, but it doesn’t accept CLI style wild-cards\r\n\r\nPM> Install-Package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore -Version 5.0.0-*\r\nInstall-Package : Failed to parse the input of Version parameter: 5.0.0-* to a valid Semantic version. \r\nAt line:1 char:1\r\n+ Install-Package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore  ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], InvalidOperationException\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n\r\n\r\nPer @zivkan\r\n\r\n> We have a tracking issue to add support into the package manager UI: NuGet/Home#9829 An intern had started the implementation but was unable to finish before they left, and the rest of the team have other priorities, so this work unfortunately is stalled at this time."},{"Id":"13876886722","Type":"IssuesEvent","CreatedAt":"2020-10-17T01:11:34","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9955","RelatedDescription":"Closed issue \"Parallelize create actions before preview for PreviewBuildIntegratedProjectsActionsAsync  method\" (#9955) at NuGet/Home","RelatedBody":"## Details about Problem\nDuring my performance improvement effort Nikolche [pointed out](https://github.com/NuGet/NuGet.Client/pull/3559/files#r479564095) I can parallelize create actions before preview. Since I agree with him creating this follow up issue.\n`I think this whole loop can be parallelized too. The bottleneck in particular is the LockFile.Read.\nI don't think you should do it now do, I'd create a future task if you agree with my suggestion.`\n"},{"Id":"13876226514","Type":"IssuesEvent","CreatedAt":"2020-10-16T22:42:20","Actor":"vatsan-madhavan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10135","RelatedDescription":"Opened issue \"Generating MSBuild Binary log from nuget restore command\" (#10135) at NuGet/Home","RelatedBody":"How can I generate MSBuild Binary log from nuget client commands like restore ? \r\n\r\n`nuget restore` resolves into something like `msbuild.exe \"%temp%\\NuGetScratch\\ro0d0kct.z0t.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"%temp%\\NuGetScratch\\w3s4ivaf.f43.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"<path to nuget.exe>\" /p:RestoreSolutionDirectory=\"<path to sln directory>\" /p:SolutionDir=\"<path to solution dir>\" /p:SolutionNam=<solution name>`\r\n\r\nHow can I get it to pass `/bl` to msbuild so that a binary log is output at the end of nuget restore? "},{"Id":"13875311326","Type":"PullRequestEvent","CreatedAt":"2020-10-16T20:34:53","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/10131","RelatedDescription":"Merged pull request \"Add Test Strategy section to our Spec template\" (#10131) at NuGet/Home","RelatedBody":"This year, at least three features could have benefited from defining Test scenarios and test cases up-front.  Therefore, adding a Test Strategy section to our spec template."},{"Id":"13875296715","Type":"IssuesEvent","CreatedAt":"2020-10-16T20:33:07","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10097","RelatedDescription":"Closed issue \"Warning for warning NU5128 when packastool with targetframework alias\" (#10097) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#13928**\r\n- Please respond to @wli3.\r\n\r\n---\r\n\r\n_From @wli3 on Wednesday, September 30, 2020 9:03:56 PM_\r\n\r\nGiven\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>targetframeworkAlias</TargetFramework>\r\n    <PackAsTool>true</PackAsTool>\r\n    <OutputType>exe</OutputType>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'targetframeworkAlias' \">\r\n    <TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v3.1</TargetFrameworkVersion>\r\n    <TargetFrameworkMoniker>.NETCoreApp,Version=v3.1</TargetFrameworkMoniker>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nrun dotnet pack. There will be an extra necessary warning:\r\n```\r\nC:\\work\\sdk3\\artifacts\\bin\\redist\\Debug\\dotnet\\sdk\\5.0.100-dev\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(207,5): warning NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below: [C:\\work\\temp\\nugetalias\\nugetalias.csproj]\r\nC:\\work\\sdk3\\artifacts\\bin\\redist\\Debug\\dotnet\\sdk\\5.0.100-dev\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(207,5): warning NU5128: - Add lib or ref assemblies for the netcoreapp3.1 target framework [C:\\work\\temp\\nugetalias\\nugetalias.csproj]\r\n```"},{"Id":"13873458300","Type":"IssuesEvent","CreatedAt":"2020-10-16T17:19:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10119","RelatedDescription":"Closed issue \"(MSBuild) Restore does not respect BaseIntermediateOutputPath\" (#10119) at NuGet/Home","RelatedBody":"When a csproj has the `BaseIntermediateOutputPath` property set (so that instead of `obj` a different folder will be used) the restore target will produce temporary files in `obj` instead of the declared `BaseIntermediateOutputPath`.\r\n\r\nThis is not a problem for projects using `packages.config`. But it is for those using the `PackageReference` format.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: **MSBuild**\r\n\r\nNuGet Version: 5.6.0.6591\r\n\r\nVS version: 16.7.5\r\n\r\nOS version: win10 v2004\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Clone and check out https://github.com/ite-klass/TestNugetRestoreBaseIntermediatePath\r\n2. Execute `msbuild -t:restore TestNugetRestoreBaseIntermediatePath.sln`\r\n\r\nThe result is a dirty workspace. VS will also show the obj folder and files.\r\n"},{"Id":"13873076397","Type":"IssuesEvent","CreatedAt":"2020-10-16T16:44:34","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10077","RelatedDescription":"Closed issue \"[CPVM Perf] - CommitAsync perf improvements for the large CPVM files\" (#10077) at NuGet/Home","RelatedBody":"CommitAsync is still area where the perf of CPVM scenarios can be improved.\r\n\r\nThe CPV information is serialized to the dgspec files to be available for nuget.exe scenarios.\r\n\r\nExperiment and prototype a  possible solution to support faster Commit for msbuild scenarios without affecting the functionality of the nuget.exe. Document pros and cons. \r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-18T05:30:37.2437523Z","RunDurationInMilliseconds":1623}