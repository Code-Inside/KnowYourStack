{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29199781003","Type":"PullRequestEvent","CreatedAt":"2023-05-20T16:51:07","Actor":"mert019","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9509","RelatedDescription":"Opened pull request \"Mert019 9426\" (#9509) at NuGet/NuGetGallery","RelatedBody":"* Revoke button added for api keys.\r\n* Existing revocation mechanism used.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9426"},{"Id":"29193777351","Type":"PullRequestEvent","CreatedAt":"2023-05-19T23:51:46","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9507","RelatedDescription":"Merged pull request \"minClientVersion update\" (#9507) at NuGet/NuGetGallery","RelatedBody":"NuGet.exe 6.6.0 was released. Updating Gallery to support it."},{"Id":"29181708749","Type":"PullRequestEvent","CreatedAt":"2023-05-19T12:27:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9505","RelatedDescription":"Merged pull request \"Don't use the default error page on API responses since this can hide essential error details\" (#9505) at NuGet/NuGetGallery","RelatedBody":"For HTTP 404 and HTTP 500 errors, we have a default response page, which is a pretty HTML thing. It looks like this:\r\n404: https://dev.nugettest.org/dsfsdfseg\r\n500: https://dev.nugettest.org/pages/simulate-error?type=Exception\r\n\r\nUnfortunately, this is returned for API response pages. The effect of this is that if we try to return an HTTP 404 from an API response (such as the unlist API or the deprecate API), we get the HTML page for that 404 instead of a response message that has the reason phrase containing the error details. In other words, the pretty HTML page clobbers code that we put in there intentionally.\r\n\r\nI want to fix this to a) improve error handling on NuGet.org API responses and b) allow me to adhere to our deprecation API spec.\r\n\r\nExample for unlist before the change (note the HTML response body and no helpful reason phrase)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/099aaba8-9953-4ee7-92ba-86f25ca69b18)\r\n\r\nAfter my change:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/0bc82aca-d944-4b86-ab66-f748b3ac0c30)\r\n\r\nEssentially the reason phrase (nice error message) provided here became useless long ago when we added pretty default error pages:\r\nhttps://github.com/NuGet/NuGetGallery/blob/912cd3bd73432f6edf8a9e20106d3cc635ca99df/src/NuGetGallery/Controllers/ApiController.cs#L876-L877\r\n\r\nI made the change for HTTP 500 as well since I don't believe a full rich HTML page should be returned for exceptions on API endpoints. The alternative (a simple, small text response without full exception details) is better, and tested in the functional test suite also included in this PR.\r\n\r\nThis can be shown in the client's support for reason phrase error messages:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/7e92aad3-0c29-45c4-8bb9-d2528e3ed947)\r\n\r\nResolves https://github.com/NuGet/NuGetGallery/issues/9504"},{"Id":"29167012436","Type":"IssuesEvent","CreatedAt":"2023-05-18T20:34:33","Actor":"Eptagone","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9500","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Download count is not updating\" (#9500) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhile checking the download statistics for my package, I noticed that the counter stopped and on the search page, it even decreased. I checked other packages and the same thing happens.\n\n### Repro Steps\n\nGo to the [search results page](https://www.nuget.org/packages?q=Vite.AspNetCore).  The count decreased and stayed at 1,618.\r\nGo to the [package page](https://www.nuget.org/packages/Vite.AspNetCore). The count is stuck at 1.8k\r\nYou can try with other packages.\n\n### Expected Behavior\n\nThe count in results page and package page should be the same. Until a few days ago it was working.\n\n### Screenshots\n\n<img width=\"464\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/23562885/78abd313-7985-4413-a573-806a94e253fb\">\r\n<img width=\"798\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/23562885/41c13eb6-9593-41af-b451-d2ba8d61b496\">\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29151454411","Type":"IssuesEvent","CreatedAt":"2023-05-18T08:53:50","Actor":"Mih4n","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9508","RelatedDescription":"Opened issue \"Wrong showing of menu on the page https://www.nuget.org/account/Packages\" (#9508) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\n![Screenshot_20230518_113638](https://github.com/NuGet/NuGetGallery/assets/50325226/d4b60c7a-0c75-4dbe-b322-3b64238e06d3)\r\n\n\n### Repro Steps\n\n1. https://www.nuget.org/account/Packages\r\n2. Clicked on published packages and in unlisted packages te same issue on mobile phone \r\n3. Site width changed you can see it on the picture above\n\n### Expected Behavior\n\nAs expected it your block of text in this menus is statick and cant be addited. That bag can be slowed by edditing width parameter to width:100% or by adding new parametr display:flex\n\n### Screenshots\n\n![Screenshot_20230518_113638](https://github.com/NuGet/NuGetGallery/assets/50325226/025794c2-d4e8-4563-aaad-f5d0c950a394)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29197141692","Type":"IssuesEvent","CreatedAt":"2023-05-20T09:58:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12610","RelatedDescription":"Opened issue \"NuGetAudit should warn when no vulnerability data available\" (#12610) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWith the newly available NuGetAudit feature, it gets package vulnerability data from package sources. However, if none of the package sources contain vulnerability information (for example, a package source that upstreams to nuget.org, but doesn't yet know about the brand new vulnerability info server resource), then the initial implementation of the feature will succeed without any warnings. This is indistinguishable from none of the packages having known vulnerabilities, and therefore gives a false sense of security.\r\n\r\nIn this scenario, restore should raise a warning that no package sources provide vulnerability data.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29193443648","Type":"IssuesEvent","CreatedAt":"2023-05-19T23:08:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12609","RelatedDescription":"Opened issue \"There are no visual indicators for the Package Source Mapping status in details pane\" (#12609) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nPM UI now shows a string detailing the Package Source Mapping status (off / found / requires a mapping), but there are no visual indicators/icons to reflect that status.\n\n### Desired Behavior\n\nShow icons along with the status strings to emphasize the status.\n\n### Additional Context\n\n_No response_"},{"Id":"29193419980","Type":"IssuesEvent","CreatedAt":"2023-05-19T23:05:53","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12608","RelatedDescription":"Opened issue \"VS Options shortcut from PMUI for PackageSourceMappings doesn't scroll to or select the Package\" (#12608) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nThe shortcut (`Configure` button) in PM UI for Package Source Mapping settings opens the VS Options dialog. The default behavior is to show the list scrolled to the top with nothing selected.\n\n### Desired Behavior\n\nWould be handy if the dialog scrolled down to and selected the Package in the VS Options PackageSourceMapping dialog for the package that was selected in the PMUI.\n\n### Additional Context\n\n_No response_"},{"Id":"29193373517","Type":"IssuesEvent","CreatedAt":"2023-05-19T23:01:22","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12607","RelatedDescription":"Opened issue \"Install/Update buttons are enabled in Details Pane when the PackageSourceMapping is not found\" (#12607) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nInstall/Update buttons are enabled in Details Pane when the PackageSourceMapping is not found.\r\nThis leads to NU1100 errors from Restore. \r\nRelated: [NU1100 is used for both TFM incompatibility and for an unresolved PackageSourceMapping · Issue #12606 · NuGet/Home (github.com)](https://github.com/NuGet/Home/issues/12606)\n\n### Desired Behavior\n\nInstall/Update buttons should be disabled in Details Pane when the PackageSourceMapping is not found\n\n### Additional Context\n\n_No response_"},{"Id":"29193334368","Type":"IssuesEvent","CreatedAt":"2023-05-19T22:57:38","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12606","RelatedDescription":"Opened issue \"NU1100 is used for both TFM incompatibility and for an unresolved PackageSourceMapping\" (#12606) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### Current Behavior\n\nWhen an install fails, the message I get is this: \"Error    NU1100    Unable to resolve 'Swashbuckle.Core (>= 5.6.0)' for '.NETFramework,Version=v4.7.2/win-x86'. PackageSourceMapping is enabled, the following source(s) were not considered: nuget, nuget-build. \"\r\n\r\nI don't know if the failure is because of TFM incompatibility, or because I forgot to add source mapping\n\n### Desired Behavior\n\nSpecific messages for either scenario. \r\nSpecify whether the TFM not compatible, or is the PackageSourceMapping not configured?\n\n### Additional Context\n\n_No response_"},{"Id":"29193301370","Type":"IssuesEvent","CreatedAt":"2023-05-19T22:53:57","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12599","RelatedDescription":"Closed issue \"[PM UI] Transitive dependencies list is not updated after direct dependency update\" (#12599) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVersion 17.6.0 Preview 3.0 [33520.578.main]\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Create a new project\r\n2. Install package NuGet.Packaging version 6.6.0\r\n3. Open PM UI. Checkout the transitive dependencies list. The tooltip for the transitive origins correctly shows NuGet.Packaging version 6.6.0. The version number of the transitive package also is correct (for example NuGet.Common version 6.6.0).\r\n4.  Downgrade NuGet.Packaging to version 5.0.2\r\n5. Now look at the list of transitive packages again. The tooltip for transitive origins still shows NuGet.Packaging version 6.6.0 (which is now wrong). The version of the transitive package is also outdated (for example, NuGet.Common version 6.6.0).\r\n\r\n![image](https://github.com/NuGet/Home/assets/16807822/14e2259e-ac09-4d01-ae4c-38440d4b0318)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"29193290631","Type":"IssuesEvent","CreatedAt":"2023-05-19T22:52:41","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12597","RelatedDescription":"Closed issue \"Wrong product version values in nuget.exe 6.6\" (#12597) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.6.0\n\n### Worked before?\n\n6.5\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nInside nuget.exe 6.6 from https://dist.nuget.org/win-x86-commandline/v6.6.0/nuget.exe version.txt file contains:\r\n\r\n`PRODUCTVERSION 0,0,0,0` and `VALUE \"ProductVersion\",    \"6.6.0-preview.3+0fa557836fa35aee7d60776ef0c88176dbcd22ac.0fa557836fa35aee7d60776ef0c88176dbcd22ac\"`\r\n\r\nI think they cause issues in azure pipelines using NuGetCommand@2. \r\n\r\nSorry for creating issue if release is not finished yet.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29193039019","Type":"IssuesEvent","CreatedAt":"2023-05-19T22:25:57","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12601","RelatedDescription":"Closed issue \"help\" (#12601) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\ni dunno\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n the NuGet Package Manager isn't showing up when i right click on the project in visual studio code\n\n### Verbose Logs\n\n```shell\ni dunno\n```\n"},{"Id":"29185596349","Type":"IssuesEvent","CreatedAt":"2023-05-19T15:10:43","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12605","RelatedDescription":"Opened issue \"Accessing request body in HttpSource throws NullReferenceException \" (#12605) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n6.6.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nAccessing `HttpResponseMessage.RequestMessage.Content.SerializeToStream()` in the delegate passed to `HttpSource.ProcessResponseAsync` throws a `NullReferenceException`. This makes it harder to provide diagnostic logging on the HTTP session (i.e. logging request and response). A workaround I found is rerunning the `HttpRequestMessage` factory to get another copy of the request. This feels wrong since this pattern is quite possible with vanilla `HttpClient` as shown in the sample below. Also, an NRE feels wrong :)\r\n\r\nHere is a full repro:\r\n```csharp\r\nusing NuGet.Common;\r\nusing NuGet.Protocol;\r\nusing NuGet.Protocol.Core.Types;\r\n\r\n// HttpClient -- works\r\nusing var httpClient = new HttpClient();\r\nvar response = await httpClient.SendAsync(new HttpRequestMessage(HttpMethod.Delete, \"https://www.nuget.org/api/v2/package/Knapcode.TorSharp/2.14.0\")\r\n{\r\n    Content = new StringContent(\"some content\"),\r\n});\r\nConsole.WriteLine(\"HttpClient: \" + await response.RequestMessage!.Content!.ReadAsStringAsync());\r\n\r\n// NuGet client SDK -- throws NRE\r\nusing var cache = new SourceCacheContext();\r\nvar repository = Repository.Factory.GetCoreV3(\"https://api.nuget.org/v3/index.json\");\r\nvar resource = await repository.GetResourceAsync<HttpSourceResource>();\r\n\r\nvar requestBody = await resource.HttpSource.ProcessResponseAsync(\r\n    new HttpSourceRequest(() => new HttpRequestMessage(HttpMethod.Delete, \"https://www.nuget.org/api/v2/package/Knapcode.TorSharp/2.14.0\")\r\n    {\r\n        Content = new StringContent(\"some content\"),\r\n    }),\r\n    async response =>\r\n    {\r\n        return await response.RequestMessage!.Content!.ReadAsStringAsync();\r\n    },\r\n    NullLogger.Instance,\r\n    CancellationToken.None);\r\n\r\nConsole.WriteLine(\"NuGet client SDK: \" + requestBody);\r\n```\n\n### Verbose Logs\n\n```shell\nOutput is here:\r\n\r\nHttpClient: some content\r\nUnhandled exception. System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NuGet.Protocol.HttpRequestMessageExtensions.HttpContentWrapper.SerializeToStreamAsync(Stream stream, TransportContext context)\r\n   at System.Net.Http.HttpContent.SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpContent.LoadIntoBufferAsync(Int64 maxBufferSize, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpContent.ReadAsStringAsync(CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpContent.ReadAsStringAsync()\r\n   at Program.<>c.<<<Main>$>b__0_1>d.MoveNext() in C:\\Users\\jver\\Desktop\\ConsoleApp2\\ConsoleApp2\\Program.cs:line 25\r\n--- End of stack trace from previous location ---\r\n   at NuGet.Protocol.HttpSource.ProcessResponseAsync[T](HttpSourceRequest request, Func`2 processAsync, SourceCacheContext cacheContext, ILogger log, CancellationToken token)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\jver\\Desktop\\ConsoleApp2\\ConsoleApp2\\Program.cs:line 18\r\n   at Program.<Main>(String[] args)\r\n```\n```\n"},{"Id":"29185537691","Type":"IssuesEvent","CreatedAt":"2023-05-19T15:08:13","Actor":"NikolaMilosavljevic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12604","RelatedDescription":"Opened issue \"New prebuilt package in .NET source-build: ilmerge.3.0.21.nupkg\" (#12604) at NuGet/Home","RelatedBody":"New prebuilt package was introduced by `nuget/nuget.client`  repo, in latest flow to `installer`: https://github.com/dotnet/installer/pull/16391\r\n\r\n```\r\nilmerge.3.0.21.nupkg\r\n```\r\n\r\nThis needs to be fixed asap."},{"Id":"29185513865","Type":"IssuesEvent","CreatedAt":"2023-05-19T15:07:13","Actor":"NikolaMilosavljevic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12603","RelatedDescription":"Opened issue \"New prebuilt package in .NET source-build: microsoft.visualstudioeng.microbuild.core.1.0.0.nupkg\" (#12603) at NuGet/Home","RelatedBody":"New prebuilt package was introduced by `nuget/nuget.client`  repo, in latest flow to `installer`: https://github.com/dotnet/installer/pull/16391\r\n\r\n```\r\nmicrosoft.visualstudioeng.microbuild.core.1.0.0.nupkg\r\n```\r\n\r\nThis needs to be fixed asap."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-05-21T03:30:23.7500467Z","RunDurationInMilliseconds":1408}