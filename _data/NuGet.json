{"Data":{"Blog":{"FeedItems":[{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15915952728","Type":"IssuesEvent","CreatedAt":"2021-04-13T04:20:30","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8515","RelatedDescription":"Closed issue \"GitHubVulnerabilties2Db build break due to DI change\" (#8515) at NuGet/NuGetGallery","RelatedBody":"Including the feature flag service in the constructor of the package service has broken dependency injection in GitHubVulnerabilities2Db."},{"Id":"15915836141","Type":"PullRequestEvent","CreatedAt":"2021-04-13T04:02:45","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8516","RelatedDescription":"Merged pull request \"Fix break in githubvulnerabilities2db dependency injection\" (#8516) at NuGet/NuGetGallery","RelatedBody":"Address: https://github.com/NuGet/NuGetGallery/issues/8515\r\n\r\nDependency injection was broken by the inclusion of the feature flag service in the package service constructor. Added a fake type for this and moved it and an additional fake into a fakes directory.\r\n\r\n[this surfaced in BCDR analysis]"},{"Id":"15915704916","Type":"IssuesEvent","CreatedAt":"2021-04-13T03:41:57","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8519","RelatedDescription":"Opened issue \"Improve error message when uploading package with poorly formed TFMs\" (#8519) at NuGet/NuGetGallery","RelatedBody":"We currently see this when a poorly formed TFM is included in a package:\r\n![image](https://user-images.githubusercontent.com/14225979/114493318-b0617280-9c5d-11eb-807e-d12907c984b9.png)\r\n\r\nLet's give it more descriptive text. The code that validates TFMs is here: https://github.com/NuGet/NuGetGallery/blob/c71e12429b108c4d87e2da41790b164149a43389/src/NuGetGallery.Services/PackageManagement/PackageService.cs#L67-L96\r\n\r\nWe can respond to specific exceptions from `ToShortNameOrNull` etc and throw appropriately.\r\n"},{"Id":"15915512413","Type":"IssuesEvent","CreatedAt":"2021-04-13T03:13:04","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8481","RelatedDescription":"Closed issue \"Improved the #r directive instructions\" (#8481) at NuGet/NuGetGallery","RelatedBody":"This issue is to track pull request: https://github.com/NuGet/NuGetGallery/pull/8405 created by @filipw :\r\n \r\nThis is a follow up to #8375\r\n\r\nSince #r is not exclusive to F#, it is a bit inaccurate to use the current header for the instructions - it would make sense to use a more generic name for it.\r\nTherefore I propose to rename F# Interactive to .NET Interactive as it then correctly captures both C# and F#.\r\n\r\n"},{"Id":"15915511695","Type":"IssuesEvent","CreatedAt":"2021-04-13T03:12:57","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8489","RelatedDescription":"Closed issue \"[A11y]Manage Organisation_Reflow: On zooming the screen content to 400% both the scrollbar appear to view the screen.\" (#8489) at NuGet/NuGetGallery","RelatedBody":"Link: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1294821\r\n\r\n## Environment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org\r\nOperating System: Windows 10\r\nBrowser Version: Chrome Version 85.0.4183.121 (Official Build) (64-bit),\r\nChromium Edge Version 87.0.637.0 (Official build) dev (64-bit)\r\n\r\n## Repro Steps:​\r\n Hit the URL \" https://www.nuget.org\" and login with appropriate credentials.\r\nTab Navigate to \"Sign in\" control and hit enter.\r\n Tab Navigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “Manage Organizations” from the Profile Dropdown and hit enter.\r\nTab navigate to browser setting and zoom the screen content at400% and observe horizontal/vertical scroll bar present to view the content.\r\n## Actual:​\r\nWhen the users zoom the screen content to 400% the data on the screen can be viewed with both the scrollbar i.e. Vertical and Horizontal which is incorrect as just one of the scrollbar show be available.\r\n## Expected:​\r\nThe data on the screen should be viewed with only one of the scrollbar when zoomed to 400%.\r\n## ​User Impact:​\r\nWhen users zoom the screen content to 400% and if they have to view the screen content with both the scrollbar then they will find difficulty in viewing and reading the content present on the screen.\r\n\r\n### Notes\r\nThere was a similar bug filed a while back that was fixed by moving the overflow on the to table, since scrollbar on page is the issue, not scrollbar on particular content."},{"Id":"15915508065","Type":"IssuesEvent","CreatedAt":"2021-04-13T03:12:24","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8492","RelatedDescription":"Closed issue \"[A11y]Organization name and email fields are mandatory but not represented as mandatory fields.\" (#8492) at NuGet/NuGetGallery","RelatedBody":"Link: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1296190\r\n\r\n​## Environment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org\r\nOperating System: Windows 10\r\nBrowser Version: Chrome Version 85.0.4183.121 (Official Build) (64-bit),\r\nChromium Edge Version 87.0.637.0 (Official build) dev (64-bit)\r\n\r\n## Repro Steps:​\r\n Hit the URL \" https://www.nuget.org\" and login with appropriate credentials.\r\nTab Navigate to \"Sign in\" control and hit enter.\r\n Tab Navigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “Manage Organizations” from the Profile Dropdown and hit enter.\r\nTab navigate to Add new link and hit enter.\r\nTab navigate to Organization name and email fields and observe these fields are mandatory but not provided as required field.\r\n## Actual:​\r\nTab navigate to Organization name and email fields are mandatory but not represented as mandatory fields.\r\n## Expected:​\r\nTab navigate to Organization name and email fields should be represented as mandatory fields with the required keyword.\r\n​## User Impact:​\r\nKeyboard only user will not not understand that field is mandatory if field is not marked with required keyword.\r\n\r\n### Notes\r\nWe should update these fields to follow whatever pattern we use for other required field (asterisk, etc)"},{"Id":"15914584261","Type":"IssuesEvent","CreatedAt":"2021-04-13T00:59:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8373","RelatedDescription":"Closed issue \"Add instructions to install .NET Tools as local\" (#8373) at NuGet/NuGetGallery","RelatedBody":"The current NuGet Gallery UI for .NET Tools shows instructions on how to install them as global tools, but doesn't have instructions for installing as a local tool.\r\n\r\n![image](https://user-images.githubusercontent.com/177608/104142779-5d90ca00-5393-11eb-8113-10cf8bb1fa47.png)\r\n\r\n---\r\n\r\n### Proposed UI\r\n\r\nI suggest adding a new tab for instructions on how to install it as a local tool, including creating the tool manifest, as that's currently required.\r\n\r\n![2021-01-10_22-26-15 (1)](https://user-images.githubusercontent.com/177608/104142789-67b2c880-5393-11eb-9c55-bfd58d8526bd.gif)\r\n\r\n- Rename the existing \".NET CLI\" tab to \".NET CLI (Global)\"\r\n- Update the info text at the bottom to `This package contains a .NET Tool you can call from the shell/command line.`\r\n- Add new tab \".NET CLI (Local)\" with the following instructions:\r\n```powershell\r\n> dotnet new tool-manifest\r\n> dotnet tool install --local <ToolName> --version <ToolVersion>\r\n```"},{"Id":"15914342182","Type":"IssuesEvent","CreatedAt":"2021-04-13T00:24:15","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3349","RelatedDescription":"Closed issue \"The correct ID casing should be displayed for the selected version\" (#3349) at NuGet/NuGetGallery","RelatedBody":"# Problem \r\n\r\nIt seems like the casing of a package ID in the package web page is determined by the first version's ID casing. For example, consider the \"sqlite\" package ID.\r\n\r\nID | Version\r\n---|---------\r\nsqlite | 3.8.4.2\r\nSQLite |3.9.1-test\r\nSQLite | 3.12.2-alpha\r\nSQLite | 3.12.2\r\nSQLite | 3.12.3\r\nSQLite | 3.13.0\r\n\r\nIf you go to a specific version on NuGet.org (e.g. https://www.nuget.org/packages/sqlite/3.13.0) the ID casing in the page's heading and example install command is not `SQLite`. It is `sqlite`. \r\n\r\nThe package author's intended case is apparent in the .nuspec contained in the .nupkg.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/94054/20278933/6ef51a48-aa5b-11e6-8cb8-5ff85bb8d5e2.png)\r\n\r\nPackage IDs are case insensitive, but the package author's intended case is still important.\r\n\r\nHere is a list of popular packages affected by this bug:\r\n\r\nLatestId | TotalDownloads\r\n-- | --\r\nSwashbuckle.AspNetCore.SwaggerUI | 96334268\r\nNpgsql | 54283023\r\nHangfire.Core | 30446646\r\nSendGrid | 25779632\r\nMicrosoft.Data.Sqlite | 20418313\r\nSharpCompress | 19417928\r\nNCrontab.Signed | 17268104\r\nHangfire.SqlServer | 17034720\r\nStructureMap | 14500086\r\nSerilog.Sinks.Elasticsearch | 14448135\r\nmorelinq | 14230167\r\niTextSharp | 13785720\r\nNCrontab | 13670550\r\nHangfire | 12792338\r\nRefit | 12481531\r\nTopshelf | 11030897\r\nMongoDB.LibMongocrypt | 10757761\r\nNServiceBus | 9493951\r\nNuGet.Core | 7609245\r\nPDFsharp | 7562855\r\n\r\n# Solution\r\n\r\n1. Add a nullable `Id` column to the `Packages` table.\r\n1. On package upload, store the package Id in the new column\r\n1. Anywhere the package ID is displayed, display the `Package.Id` value if it is non-null, otherwise display the `PackageRegistration.Id` value.\r\n1. Update reflow to set the `Package.Id` value if it is null.\r\n1. Update Db2AzureSearch to use the `Package.Id` value if it is non-null, otherwise use the `PackageRegistration.Id` value. See:  https://github.com/NuGet/NuGetGallery/issues/3349#issuecomment-730649782"},{"Id":"15888060609","Type":"PullRequestEvent","CreatedAt":"2021-04-10T05:25:41","Actor":"AndreyAkinshin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/4089","RelatedDescription":"Closed pull request \"Update Semver2 package details message (add Rider)\" (#4089) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15914575496","Type":"IssuesEvent","CreatedAt":"2021-04-13T00:58:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10744","RelatedDescription":"Closed issue \"MsBuild restore task doesn't use packages.config path from RestorePackagesConfigPath\" (#10744) at NuGet/Home","RelatedBody":"I use the latest MSBuild version to restore NuGet packages from the packages.config file. There are a lot of properties Restore* that I can manage to change needed fields. One of this property is RestorePackagesConfigPath but as it turned out this property doesn't matter at all, since the path to this file is hardcoded as project folder path + \"packages.config\" constant (see line 477 NuGet.Client/src/NuGet.Core/NuGet.Build.Tasks/BuildTasksUtility.cs)\r\n\r\nСan we add the use of this property or this is intentional and there is a kinda special reason not to do that?"},{"Id":"15913829748","Type":"IssuesEvent","CreatedAt":"2021-04-12T23:11:30","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10695","RelatedDescription":"Closed issue \"NuGet restore failing on .NET 5 for Archlinux\" (#10695) at NuGet/Home","RelatedBody":"disclaimer: seems related to *NuGet restore failing on .NET 5 for Debian-based OSes (CA trust changed)* aka #10491 \r\n\r\n## Details about Problem\r\nUsing the archlinux package: `community/dotnet-sdk 5.0.4.sdk104-1` (47.3 MiB 165.6 MiB)\r\n\r\n## Repro steps and/or sample project\r\nHere a simple exe to create snk key (since this tools is still not available on MacOS and Linux dotnet cli)\r\nsee: https://github.com/dotnet/docs/issues/7183\r\n\r\n```sh\r\n$ cd ortools/dotnet/CreateSigningKey\r\n$ cat CreateSigningKey.csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <!-- see https://github.com/dotnet/docs/issues/12237 -->\r\n    <RollForward>LatestMajor</RollForward>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nsrc: https://github.com/google/or-tools/blob/stable/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj\r\n\r\n### Verbose Logs\r\nWhen trying to restore\r\n```sh\r\n$ dotnet restore\r\n  Determining projects to restore...\r\n/home/mizux/work/master/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj : error NU3028: Package 'Microsoft.NETCore.App.Ref 3.1.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/home/mizux/work/master/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj : error NU3028: Package 'Microsoft.AspNetCore.App.Ref 3.1.10' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/home/mizux/work/master/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj : error NU3037: Package 'Microsoft.NETCore.App.Ref 3.1.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/home/mizux/work/master/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj : error NU3037: Package 'Microsoft.AspNetCore.App.Ref 3.1.10' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/home/mizux/work/master/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj : error NU3028: Package 'Microsoft.NETCore.App.Ref 3.1.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/home/mizux/work/master/ortools/dotnet/CreateSigningKey/CreateSigningKey.csproj : error NU3028: Package 'Microsoft.AspNetCore.App.Ref 3.1.10' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nFYI \r\n```sh\r\n$ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.104\r\n Commit:    ca6b6acadb\r\n\r\nRuntime Environment:\r\n OS Name:     arch\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         arch-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.104/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.4\r\n  Commit:  269e323b5f\r\n\r\n.NET SDKs installed:\r\n  5.0.104 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.NETCore.App 5.0.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nMaybe should be added to https://github.com/NuGet/Announcements/issues/49 in \"Other distros\" ?\r\nEDIT: This issue is added to https://github.com/NuGet/Announcements/issues/56"},{"Id":"15913825753","Type":"IssuesEvent","CreatedAt":"2021-04-12T23:10:58","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10684","RelatedDescription":"Closed issue \"NU3028, NU3037 when trying to restore a project\" (#10684) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#16482**\r\n- Please respond to @IdkGoodName.\r\n\r\n---\r\n\r\n_From @IdkGoodName on Tuesday, March 23, 2021 5:00:59 PM_\r\n\r\nI seem to have issues trying to restore a C# or F# project. I get tons of NuGet signature errors and I don't know what it is caused by. I tried completely reinstalling .NET, but it doesn't seem to work.\r\n\r\n# Errors\r\n\r\nThis is what I get when trying to build C# console project:\r\n```\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\nC# library project:\r\n```\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Channels 4.7.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Tasks.Extensions 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Runtime.CompilerServices.Unsafe 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Runtime.CompilerServices.Unsafe 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Runtime.CompilerServices.Unsafe 4.5.2' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.csproj : error NU3037: Package 'System.Threading.Tasks.Extensions 4.5.2' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.csproj : error NU3028: Package 'System.Threading.Tasks.Extensions 4.5.2' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nF# console project:\r\n```\r\n/.../ProjectName.fsproj : error NU3028: Package 'FSharp.Core 5.0.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/.../ProjectName.fsproj : error NU3037: Package 'FSharp.Core 5.0.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n/.../ProjectName.fsproj : error NU3028: Package 'FSharp.Core 5.0.0' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\n# Info\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.201\r\n Commit:    a09bd5c86c\r\n\r\nRuntime Environment:\r\n OS Name:     artix\r\n OS Version:  20201128\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.201/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.4\r\n  Commit:  f27d337295\r\n\r\n.NET SDKs installed:\r\n  5.0.201 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```"},{"Id":"15912253503","Type":"IssuesEvent","CreatedAt":"2021-04-12T20:28:09","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10693","RelatedDescription":"Closed issue \"Upload nuget package to nuget.org tip NU3018\" (#10693) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):\r\nNuGet.exe\r\nProduct version: \r\n5.9.0.7134\r\n\r\n## Repro steps and/or sample project\r\n### Command line :\r\n````\r\nPS E:\\xxx\\.Repositories\\NuGet> .\\nuget.exe verify -Signatures .\\Signs\\A123.1.0.0.nupkg\r\n\r\nVerifying A123.1.0.0\r\nE:\\xxx\\.Repositories\\NuGet\\.\\Signs\\A123.1.0.0.nupkg\r\n\r\nSignature Hash Algorithm: SHA256\r\nTimestamp: 2021/3/25 17:59:26\r\n\r\nVerifying author primary signature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=DigiCert Timestamp 2021, O=\"DigiCert, Inc.\", C=US\r\n  SHA1 hash: E1D782A8E191BEEF6BCA1691B5AAB494A6249BF3\r\n  SHA256 hash: B3109006BC0AD98307915729E04403415C83E3292B614F26964C8D3571ECF5A9\r\n  Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 2021/1/1 8:00:00 to 2031/1/6 8:00:00\r\n\r\nSignature type: Author\r\nVerifying the author primary signature with certificate:\r\n  Subject Name: CN=NuGet Package Developer Cert, OU=xxx\r\n  SHA1 hash: E955B4389511Fxxxxxxxxxxxxxxx001BBD5B1236A7F\r\n  SHA256 hash: 1748F56443DEACF7xxxxxxxxxxxxxxxxxxxxx497D685FC18A07B83D99776A389\r\n  Issued by: CN=NuGet Package Developer Cert, OU=xxx\r\n  Valid from: 2021/3/25 15:36:24 to 2022/3/25 15:56:24\r\n\r\nSuccessfully verified package 'RMBer.1.0.0'.\r\n````\r\nThe signature and verification are successful, but the upload message is **NU3018**.\r\n\r\n### Verbose Logs\r\n````\r\nPackage publishing failed. This package could not be published due to the following reason(s):\r\nNU3018: The author primary signature found a chain building issue: UntrustedRoot: A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.\r\n````\r\n"},{"Id":"15908727925","Type":"IssuesEvent","CreatedAt":"2021-04-12T15:51:37","Actor":"mattleibow","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10766","RelatedDescription":"Opened issue \"Improve error messaging for projects with multiple AssemblyNames\" (#10766) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThis is directly this issue: https://github.com/NuGet/Home/issues/5226\r\n\r\nJust opening this issue for the simple reason that this got me for a few days as I was unable to find exactly what was causing the issues.\r\n\r\nIf there is a way to have an actual error message that could effectively mean \"Unable to find unique ID for project when restoring. Either use the same AssemblyName for all TFMs or add a PackageId.\"\r\n\r\nOr something like that. This looks like some internal error that gets out and there is no ay to figure it out. I had to add back my project line by line and it was time consuming as I have quite a few projects and quite a few TFMs in there.\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): all\r\n\r\nProduct version: all\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15904758168","Type":"IssuesEvent","CreatedAt":"2021-04-12T11:33:55","Actor":"PawcioCNCProfi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10765","RelatedDescription":"Opened issue \"How to include files that are not part of the \"contentFiles\" folder?\" (#10765) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\nI'm not sure if I understand this part https://docs.microsoft.com/en-us/nuget/reference/nuspec#including-content-files correctly but nuget assumes I have folder named \"contentFiles\" within my project?\r\n\r\nI only have \"icon\" folder directly in folder of my project.\r\n\r\nSo, if paths in `include` attribute suppose to be relative to that folder I should be able to write following?\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package>\r\n  <metadata>\r\n    <contentFiles>\r\n      <files include=\"..\\icons\\**\" buildAction=\"None\" copyToOutput=\"true\" />\r\n    </contentFiles>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\nUnfortunately this doesn't work for me :( It does not include anything. How can include my files?\r\nI also don't get what even is this \"contentFiles\" directory structure for...\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):\r\n\r\nProduct version: 5.6.9\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15789095683","Type":"IssuesEvent","CreatedAt":"2021-04-01T22:00:20","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/57","RelatedDescription":"Opened issue \"NuGet.org temporarily down due to Azure services outage\" (#57) at NuGet/Announcements","RelatedBody":"NuGet.org is being affected by an outage due to issues affecting the Azure Portal and Azure services, but the team is on it. We appreciate your patience and we will keep you updated as soon as we get more information.\r\n\r\nIn the meantime, check https://status2.azure.com/ for Azure updates and find work-arounds in this thread https://github.com/NuGet/NuGetGallery/issues/8480."},{"Id":"15770729318","Type":"IssuesEvent","CreatedAt":"2021-03-31T19:45:05","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/56","RelatedDescription":"Opened issue \"Notice: NuGet Restore Failures on Linux distributions using NSS or Mozilla root CA list\" (#56) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nUsers of .NET 5.0+ will receive error messages when running `dotnet restore` on Linux distros that use [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages maintained by Mozilla's root CA list. The root cause is due to the certificate used for signed NuGet packages recently expiring and as a result the validation for packages uses a timestamp provider chain that has a root certificate that has been [removed by Network Security Services (NSS)](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) which is a popular alternative to [OpenSSL](https://github.com/openssl/openssl).\r\n\r\n- [NuGet Microsoft Author Signing Certificate Update](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/) - Expires January 27th, 2021\r\n- [NuGet.org Repository Signing Certificate Update](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/) - Expires April 14th, 2021\r\n\r\nFor more information, please read the [Distrust of Symantec TLS Certificates](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/) on the Mozilla Security Blog, [Mozilla Root Store Policy](https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/policy/) on Mozilla.org, and [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues) on the Mozilla Wiki Page.\r\n\r\n## Affected Environments\r\n\r\n.NET 5.0+ SDK on Linux distros that use [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). \r\n\r\nAt this time, we are not sure of every distro that may be affected. If you're aware of an affected distro, please let us know!\r\n\r\nBelow is a table that includes .NET support for Linux distros:\r\n\r\n### Linux\r\n\r\nOS                                    | Version               | Affected          |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Alpine Linux][Alpine]                | N/A                 | ❓ |\r\n[CentOS][CentOS]                      | N/A                    | ❓ |\r\n[Debian][Debian]                      | N/A                    | ❓ |\r\n[Fedora][Fedora]                      | N/A                   | ❓ |\r\n[Linux Mint][Linux-Mint]              | N/A                   | ❓ |\r\n[openSUSE][OpenSUSE]                  | N/A                   | ❓ |\r\n[Red Hat Enterprise Linux][RHEL]      | N/A                    | ❓ |\r\n[SUSE Enterprise Linux (SLES)][SLES]  | N/A               | ❓ |\r\n[Ubuntu][Ubuntu]                      | N/A   | ❓ |\r\n\r\n[Alpine]: https://alpinelinux.org/\r\n[CentOS]: https://www.centos.org/\r\n[Debian]: https://www.debian.org/\r\n[Fedora]: https://getfedora.org/\r\n[Linux-Mint]: https://linuxmint.com/\r\n[OpenSUSE]: https://opensuse.org/\r\n[RHEL]: https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\r\n[SLES]: https://www.suse.com/products/server/\r\n[Ubuntu]: https://ubuntu.com/\r\n\r\nAdditionally, here is a table of other Linux variants that may be affected but are not officially supported by .NET.\r\n\r\nOS                                    | Version               | Affected       |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Arch Linux](https://archlinux.org/)                          | 20210328+                 | ✅[Issue](https://github.com/NuGet/Home/issues/10695)             |\r\n[Artix Linux](https://artixlinux.org/)                         | 20201128+                    | ✅[Issue](https://github.com/NuGet/Home/issues/10684)             |\r\n\r\n### Other Linux distros\r\n\r\n- At the time of writing, we believe other distributions will not be affected until a distribution is updated to include [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes).\r\n\r\n## Mitigation\r\n\r\n### .NET Core 3.1\r\n\r\n.NET 5 introduces a signing verification mechanism that promotes warnings to throw an error at `dotnet restore` time. To work around this, you can temporarily target against .NET Core 3.1.\r\n\r\n### Modify CA Certificate Store\r\n\r\nDepending on your Linux distro, you can modify your CA certificate store by taking on an earlier version of your `ca-certificates` package.\r\n\r\nFor reference, the affected version is [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). `nss` includes a hard-coded list of trusted CA certificates and therefore can be modified to include and trust the `Verisign Universal Root Certificate Authority` again.\r\n\r\nMany Linux distros can leverage `dpkg-reconfigure` to check for the entry and enable trust for it. As a manual workaround, you may need to remove a `leading !` from the certificate line & update your CA certificates package.\r\n\r\n**Note:** Doing this is considered a bad security practice & should only be done if you understand the security implications of doing so.\r\n\r\n## Solution\r\n\r\nDue to existing issues with the .NET 5 signing verification feature & fallback of timestamp verification, we have decided to revoke this feature for Unix-based systems within .NET 5 SDK. Therefore your experience of using `dotnet restore` will remain largely the same as it was in .NET Core 3.1. Stay tuned for an updated .NET SDK version that will include this change.\r\n\r\n### Stay updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We will also continue posting updates on [NuGet Status](https://status.nuget.org/) and [@NuGet on Twitter](https://twitter.com/nuget)."},{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1379845663807188996","CreatedAt":"2021-04-07T17:16:57+00:00","UserScreenname":"nuget","Text":"🙌New mockup just dropped🙌\n\n@jiachenjiang_  is reading all the feedback and iterating daily 💪\n\nWe want you to be inv… https://t.co/HMOopaJPDN","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1377764630769008640","CreatedAt":"2021-04-01T23:27:40+00:00","UserScreenname":"nuget","Text":"Our monitoring and tests indicate that the incident related to DNS has been mitigated. We are waiting for more info… https://t.co/Oz3vtCPt0K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":4,"RawContent":null},{"Id":"1377743615422685191","CreatedAt":"2021-04-01T22:04:09+00:00","UserScreenname":"nuget","Text":"Check our announcement here for additional resources as well as a Github thread for us to share work-arounds.… https://t.co/j0UWauYtq3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1377737823994802182","CreatedAt":"2021-04-01T21:41:09+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi is being affected by this outage, but the team is on it. We appreciate your patience and we… https://t.co/ESWjKBbpYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":16,"FavoriteCount":7,"RawContent":null},{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"👏Contributor appreciation time👏\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t… https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":86,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2021-04-13T05:30:32.3307864Z","RunDurationInMilliseconds":1642}