{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"38662697078","Type":"IssuesEvent","CreatedAt":"2024-05-23T22:45:09","Actor":"nkolev92","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9959","RelatedDescription":"Opened issue \"[Feature]: README, render images from within the  nupkg\" (#9959) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nI have a README for my tool, DependencyVisualizerTool, and in there I link an image. \r\n\r\nApparently the image contained within the nupkg doesn't get rendered because it's not from a trusted domain. \r\n\r\nI'm guessing the concern is storage of that image, because images within the nupkg, are from a \"trusted\", they're local, so there's nothing going on there. \r\n\n\n### Additional Context and Details\n\nSample package: https://www.nuget.org/packages/DependencyVisualizerTool/1.0.0-beta.2#readme-body-tab. \r\n\r\nHow the readme should look like: https://github.com/nkolev92/dependencyvisualizer?tab=readme-ov-file#dependency-graph-visualizer-tool."},{"Id":"38662071138","Type":"IssuesEvent","CreatedAt":"2024-05-23T22:09:41","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9958","RelatedDescription":"Opened issue \"Admin >> Clear content cache click not working anymore\" (#9958) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nGo to the admin menu of the development environment and click on `Clear content cache`. Observe the network calls - no network call is made.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/a4d83200-76c2-4004-aa47-6b5fb82a153b)\r\n\r\n Now repeat the same thing in the `INT` environment. You will see a network call is made to `ClearContentCache` and `Admin` API.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/4b6bff54-7453-4396-8d8c-d5e1457d6df7)\r\n\r\n\n\n### Repro Steps\n\nEdge browser go to dev env\n\n### Expected Behavior\n\nIt should make network call\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"38661299698","Type":"IssuesEvent","CreatedAt":"2024-05-23T21:30:28","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9957","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Dark mode contrast with dark images\" (#9957) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n<img width=\"1465\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/1288848/045b30d8-d834-4f61-b4ae-ceba634662cb\">\r\n\r\nSome package icons and backgrounds are a bit hard to see in dark mode compared to light mode.\n\n### Repro Steps\n\n1. Open https://dev.nugettest.org/packages/Newtonsoft.Json\n\n### Expected Behavior\n\nNuGet.org sidebar should contrast well regardless of theme. Background on prefix reservation is just a nit in dark mode.\r\n\r\nPackage icons may encourage authors to update their icons to be light/dark theme compatible.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"38661091086","Type":"IssuesEvent","CreatedAt":"2024-05-23T21:20:38","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9956","RelatedDescription":"Opened issue \"Dark them extra copy button creates extra `Copy` text\" (#9956) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nEdge browser\r\n1. Enable dark theme and go to package then press copy\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/4effe44e-f53d-4940-9f4c-98d0a3ce2225)\r\n2. Paste in Notepad, you'll see extra `Copy` text, but you wouldn't see it if you do it on nuget.org with the current theme.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/c5dafd10-a07e-4cf6-bfa2-e6acf74efcfc)\r\n\r\n\n\n### Repro Steps\n\nEdge browser with dark theme https://dev.nugettest.org/packages/e2e.semver2prerel.240506.234617.5383287/ or any other package\n\n### Expected Behavior\n\nNo extra `Copy` text in new line besides `dotnet add package xxx`\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"38626498867","Type":"PullRequestEvent","CreatedAt":"2024-05-23T00:43:29","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9948","RelatedDescription":"Merged pull request \"Add cloudback.it to trusted image domains list\" (#9948) at NuGet/NuGetGallery","RelatedBody":"Cloudback is a SaaS providing automatic daily backups and instant restores of GitHub repositories, metadata, and LFS. The service is  available via [GitHub Marketplace](https://github.com/marketplace/cloudback). The domain of the service is [cloudback.it](https://cloudback.it/).\r\n\r\nOne of the features of Cloudback is a [backup status badge](https://cloudback.it/docs/status-badge), which is used to display the repository backup status. Please see the badge example below:\r\n\r\n[![Backup Status](https://cloudback.it/badge/cloudback/docs)](https://cloudback.it)\r\n\r\nAccording to the NuGet documentation, there is [a list of allowed domains](https://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges) for images and badges. \r\n\r\nWe would like to add the `cloudback.it` domain to the allowed domains list.\r\n\r\nThank you!\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9942"},{"Id":"38625790514","Type":"PullRequestEvent","CreatedAt":"2024-05-22T23:56:02","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9947","RelatedDescription":"Merged pull request \"Allow images from infragistics.com\" (#9947) at NuGet/NuGetGallery","RelatedBody":"Addresses #9910"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"38697470239","Type":"IssuesEvent","CreatedAt":"2024-05-24T21:48:29","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13460","RelatedDescription":"Opened issue \"MSB4181: The \"Restore Task\" task returned false but did not log an error.\" (#13460) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe, Visual Studio Package Management UI\n\n### Product Version\n\nRepro'd at least back to 17.9\n\n### Worked before?\n\nYes, not sure\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nParticular restore errors are no longer being logged, so it's very difficult for customers to know why restore is failing.\r\nIn my case, I can repro this by adding a package reference for a package which exists on a feed, but I'm not authorized to download.\r\n\r\n1. Add an Azure DevOps feed to your config.\r\n2. Configure an upstream feed which requires authentication.\r\n3. Remove any credentials that would authenticate your account on the upstream feed.\r\n4. Add a PackageReference for a package version that is on the Upstream feed but not the Main feed.\r\n5. Attempt to restore - even with detailed verbosity - and the following error results:\r\n  `msbuild src\\NuGet.Clients\\NuGet.PackageManagement.PowerShellCmdlets\\NuGet.PackageManagement.PowerShellCmdlets.csproj /t:restore /clp:v=n`\r\n    > error MSB4181: The \"Restore Task\" task returned false but did not log an error.\r\n\r\nThe actual error I found while debugging, which I expect to be logged, is:\r\n\r\n> NuGet.Protocol.Core.Types.FatalProtocolException: 'The feed 'vside [https://pkgs.dev.azure.com/azure-public/vside/_packaging/msft_consumption/nuget/v3/index.json]' lists package 'Microsoft.Internal.VisualStudio.Shell.Framework.17.8.37385' but multiple attempts to download the nupkg have failed. The feed is either invalid or required packages were removed while the current operation was in progress. Verify the package exists on the feed and try again.'\r\n\r\n> Unable to find package 'Microsoft.Internal.VisualStudio.Shell.Framework.17.8.37385'.\r\n>    at NuGet.Protocol.FindPackagesByIdNupkgDownloader.<GetNuspecReaderFromNupkgAsync>d__7.MoveNext() in C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\FindPackagesByIdNupkgDownloader.cs:line 90\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n>    at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResource.<GetDependencyInfoAsync>d__12.MoveNext() in C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Protocol\\RemoteRepositories\\HttpFileSystemBasedFindPackageByIdResource.cs:line 200\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n>    at NuGet.Commands.SourceRepositoryDependencyProvider.<GetDependenciesCoreAsync>d__26.MoveNext() in C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Commands\\RestoreCommand\\SourceRepositoryDependencyProvider.cs:line 369\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n>    at NuGet.TaskResultCache`2.<>c__5`1.<GetOrAddAsync>b__5_1(Task`1 task) in C:\\NuGet.Client\\build\\Shared\\TaskResultCache.cs:line 98\r\n>    at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n>    at System.Threading.Tasks.Task.Execute()\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"38669677285","Type":"IssuesEvent","CreatedAt":"2024-05-24T06:09:41","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13403","RelatedDescription":"Closed issue \"Unable to upload package via .NET CLI (403 Error)\" (#13403) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Other/NA\n\n### Product Version\n\nlatest\n\n### Worked before?\n\nNo\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nFollow the steps [here](https://learn.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-visual-studio?tabs=netcore-cli) to upload a package.\r\n\r\nOn the section labeled \"Publish with the .NET CLI or NuGet CLI\", copy the code snippet:\r\n'''dotnet nuget push Contoso.08.28.22.001.Test.1.0.0.nupkg --api-key qz2jga8pl3dvn2akksyquwcs9ygggg4exypy3bhxy6w6x6 --source https://api.nuget.org/v3/index.json'''. This is the .NET CLI snippet. Replace the values as indicated (ID, API key, etc).\r\n\r\nConsole outputs: \"error: Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\"/\r\n\r\nFor context, yes I verified the API key is correct, and yes I ensured that my package ID was globally unique. I triple checked, repackaged, and retried several times at different times of day, just in case.\r\n\r\nUpload via the CLI did not work. \r\n\r\nI tried uploading through the web interface. Worked on first try, as expected.\n\n### Verbose Logs\n\n_No response_"},{"Id":"38661791696","Type":"IssuesEvent","CreatedAt":"2024-05-23T21:55:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13450","RelatedDescription":"Closed issue \"NU1202 Package Framework Compatiblity Error Emitted on Precisely Compatible Framework (Windows Only?)\" (#13450) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI\n\n### Product Version\n\ndotnet CLI 8.0.204 (Windows), Nuget Package Manager 6.9.2\n\n### Worked before?\n\ndotnet CLI 8.0.204 (macOS)\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n```\r\ndotnet new classlib -f net6.0\r\ndotnet add package Microsoft.EntityFrameworkCore -v 6.0.7\r\n```\r\n\r\nFound today trying to load a project I'm working on using .NET 6 that a package which here clearly states it is compatible with net6.0 (and we have indeed had in a few net6.0 projects for a long time) is now not compatible with net6.0: https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/6.0.7#supportedframeworks-body-tab\r\n\r\nFor the record, the latest 6.0.x version does restore, as do the 6.0.6 and 6.0.8 versions right around this one. Additionally, doing this very same, with the same version of the dotnet CLI tool actually does work on macOS. Thus far this appears to strictly be happening with package version 6.0.7 of this package on Windows.\r\n\r\nI don't have a means at present to contact the package authors but I wanted to get this visible to folks here as everything on the published package that I can see indicates net6.0 should be very much supported.\r\n\r\nFor the record both the link above and the NuGet Package Manager in Visual Studio display net6.0 as the compatible framework for this package:\r\n\r\n![image](https://github.com/NuGet/Home/assets/36053668/e71cadc5-87ee-4e6e-93be-9591be8ad470)\r\n\r\nUpgrading package is fine in my personal use case, but still this seems pretty contradictory and may indicate some deeper issue. I want to make sure I document this in case anyone else runs into this sort of problem where the package add/restore operation directly contradicts the package metadata on Windows.\n\n### Verbose Logs\n\n```shell\nerror: NU1202: Package Microsoft.EntityFrameworkCore 6.0.7 is not compatible with net6.0 (.NETCoreApp,Version=v6.0). Package Microsoft.EntityFrameworkCore 6.0.7 does not support any target frameworks.\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-05-25T03:30:18.3151918Z","RunDurationInMilliseconds":905}