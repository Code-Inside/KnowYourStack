{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21128550049","Type":"PullRequestEvent","CreatedAt":"2022-04-05T19:32:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9086","RelatedDescription":"Opened pull request \"SQL connection creation duration tracking\" (#9086) at NuGet/NuGetGallery","RelatedBody":"Added a client-side aggregated metric for SQL connection creation duration.\r\n"},{"Id":"21128444941","Type":"PullRequestEvent","CreatedAt":"2022-04-05T19:25:24","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9038","RelatedDescription":"Merged pull request \"[Upload UI]: Improve experience when package has no license\" (#9038) at NuGet/NuGetGallery","RelatedBody":"The web UI shows a warning if you upload a package without a license:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/157503952-c57bf021-8f57-44c0-ab07-68c1d5ddd7f6.png)\r\n\r\nThis switches the `Learn more` URL from https://aka.ms/deprecateLicenseUrl to https://aka.ms/nuget/authoring-best-practices#licensing as that's a more helpful guide in this scenario.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9037\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5859049&view=results\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1282731\r\n\r\n/cc @agr @chgill-MSFT "},{"Id":"21108307110","Type":"IssuesEvent","CreatedAt":"2022-04-04T21:15:51","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8920","RelatedDescription":"Closed issue \"[NuGet.org Bug]: A11y_NuGet Service_.Json_InfoSection_Reflow : On Zooming the screen to 400% \"Graph section\" is not visible.\" (#8920) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nSource: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1439345\n\n### Repro Steps\n\n1. Hit the URL: https://www.nuget.org/\r\n2. Tab navigate to \"Sign in\" control and hit enter.\r\n3. Tab navigate to \"Sign in with Microsoft\" control and hit enter.\r\n4. Tab navigate to search box and search for a key term (say “json”).\r\n5. Tab navigate and click on \"Newtonsoft.json\" control and hit enter.\r\n6. Tab navigate to \"Info\" and \"Statistics\" section present on right of the screen.\r\n7. Zoom the screen to 400% observe that \"graph section\" is not visible.\r\n\r\nWhen we zoom the screen to 400% the \"Graph section\" present on the \"Statistics\" page is not visible. \n\n### Expected Behavior\n\nThe \"Graph section\" should be completely visible when we zoom the screen to 400%.\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21106649045","Type":"IssuesEvent","CreatedAt":"2022-04-04T19:29:28","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9084","RelatedDescription":"Closed issue \"[NuGet.org Bug]: \" (#9084) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen trying to convert CloudStorageAccount from Microsoft.Azure.Storage.CloudStorageAccount to Microsoft.WindowsAzure.Storage.CloudStorageAccount based on storage credentials for emulator based accounts, we are seeing the following error when trying to access it _The remote server returned an error: (403) Forbidden._ \n\n### Repro Steps\n\nLet Microsoft.Azure.Storage.CloudStorageAccount acc be an emulator based cloudstorageaccount. \r\n\r\nusing Microsoft.WindowsAzure.Storage;\r\nusing Microsoft.WindowsAzure.Storage.Auth;\r\nStorageCredentials cred =\r\nnew StorageCredentials(acc.Credentials.AccountName, acc.Credentials.ExportKey());\r\nCloudStorageAccount storageAccount = new CloudStorageAccount(cred, true);\r\nvar blobClient = storageAccount.CreateCloudBlobClient();\r\nvar v = blobClient.ListContainers();\r\nvar t = storageAccount.CreateCloudTableClient().ListTables();\r\n\r\nThe variable 't' is giving 403 exception when trying to access it.\n\n### Expected Behavior\n\nFor non-emulator accounts, the cloudstorageaccount conversion is fine and we are able to access the cloudstorageaccount. We expect the same behaviour for emulator based accounts also without any 403 exceptions.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21105804038","Type":"IssuesEvent","CreatedAt":"2022-04-04T18:38:08","Actor":"jzabroski","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9085","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Code Fixer nuget packages don't have framework metadata\" (#9085) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nProject-level code analysis and code fixers don't have framework target metadata provided on nuget.org\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/packages/AsyncFixer\r\n2. See screenshot below, which says \"There are no supported framework assets in this package.\"\n\n### Expected Behavior\n\nCode analysis packages likely have both an expected Framework to target and language version number.  At least supporting Framework details would be a good first start.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/447485/161609036-880df69f-871a-4567-9b60-87f9f17e561b.png)\n\n### Additional Context and logs\n\nRelated theme to #9015 and #9081 but most likely not the same exact bug"},{"Id":"21093728947","Type":"IssuesEvent","CreatedAt":"2022-04-04T08:21:22","Actor":"ShreeShivaTejaJuluri","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9084","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9084) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen trying to convert CloudStorageAccount from Microsoft.Azure.Storage.CloudStorageAccount to Microsoft.WindowsAzure.Storage.CloudStorageAccount based on storage credentials for emulator based accounts, we are seeing the following error when trying to access it _The remote server returned an error: (403) Forbidden._ \n\n### Repro Steps\n\nLet Microsoft.Azure.Storage.CloudStorageAccount acc be an emulator based cloudstorageaccount. \r\n\r\nusing Microsoft.WindowsAzure.Storage;\r\nusing Microsoft.WindowsAzure.Storage.Auth;\r\nStorageCredentials cred =\r\nnew StorageCredentials(acc.Credentials.AccountName, acc.Credentials.ExportKey());\r\nCloudStorageAccount storageAccount = new CloudStorageAccount(cred, true);\r\nvar blobClient = storageAccount.CreateCloudBlobClient();\r\nvar v = blobClient.ListContainers();\r\nvar t = storageAccount.CreateCloudTableClient().ListTables();\r\n\r\nThe variable 't' is giving 403 exception when trying to access it.\n\n### Expected Behavior\n\nFor non-emulator accounts, the cloudstorageaccount conversion is fine and we are able to access the cloudstorageaccount. We expect the same behaviour for emulator based accounts also without any 403 exceptions.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21070622701","Type":"PullRequestEvent","CreatedAt":"2022-04-01T18:39:28","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9083","RelatedDescription":"Merged pull request \"[README] Improve blockquote styling\" (#9083) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8505\r\n\r\nbefore: \r\n\r\n![Screenshot 2022-04-01 104023](https://user-images.githubusercontent.com/64443925/161315038-2c72f6a5-57fc-42ce-8e59-17f78d791cd7.png)\r\n\r\n\r\nafter:\r\n![Screenshot 2022-04-01 104210](https://user-images.githubusercontent.com/64443925/161314991-c762e471-2ed8-4e2a-9d61-53f175135f3b.png)\r\n "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21130883242","Type":"PullRequestEvent","CreatedAt":"2022-04-05T22:13:31","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11719","RelatedDescription":"Opened pull request \"Add a proposal for issue triaging\" (#11719) at NuGet/Home","RelatedBody":"The purpose of this proposal is to help establish issue triaging policy for NuGet/Home.\r\nThis proposal is influenced by https://github.com/microsoft/vscode/wiki/Issues-Triaging and https://github.com/dotnet/runtime/blob/main/docs/issues-pr-management.md."},{"Id":"21130608428","Type":"IssuesEvent","CreatedAt":"2022-04-05T21:51:36","Actor":"AArnott","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10311","RelatedDescription":"Closed issue \"CPVM: PrivateAssets=all show up as dependencies anyway\" (#10311) at NuGet/Home","RelatedBody":"Tested and verified to repro on .NET Core SDK versions: 3.1.401, 5.0.100\r\nThis is an **adoption blocker** for our teams.\r\n\r\nWhen CPVM is active, package dependencies are retained to _transitive_ references with pinned versions even if their direct reference had `PrivateAssets=\"all\"` set on them.\r\n\r\nGiven this simple csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MicroBuild.VisualStudio\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nand a `Directory.Packages.props` file with this content:\r\n\r\n```xml\r\n<Project>\r\n    <ItemGroup>\r\n        <PackageVersion Include=\"MicroBuild\" Version=\"2.0.61\" />\r\n        <PackageVersion Include=\"MicroBuild.VisualStudio\" Version=\"2.0.61\" />\r\n\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**EXPECTED**\r\n\r\nThe packed project contains no dependency because its only `PackageReference` has `PrivateAssets=\"all\"` metadata.\r\n\r\n**ACTUAL**\r\n\r\nThe resulting package has a nuspec that expresses a dependency on a transitively referenced package:\r\n\r\n```xml\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"MicroBuild\" version=\"2.0.61\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n```\r\n\r\n### Sample Project\r\n\r\nMinimal repro: [cpvm.zip](https://github.com/NuGet/Home/files/5574381/cpvm.zip)\r\n\r\n\r\n"},{"Id":"21129742605","Type":"IssuesEvent","CreatedAt":"2022-04-05T20:50:01","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9829","RelatedDescription":"Closed issue \"Allow to user to input custom (floating) versions through the PM UI\" (#9829) at NuGet/Home","RelatedBody":"Change version input to a Combo Box displaying available version depending on the user input. This will allow users to select a floating version to install."},{"Id":"21127588855","Type":"IssuesEvent","CreatedAt":"2022-04-05T18:32:12","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11696","RelatedDescription":"Closed issue \"[Bug]: Central package management breaks no-op restores\" (#11696) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 6.0.100\n\n### Worked before?\n\ndotnet 5.0.100\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Checkout project that uses central package management, e.g.: [NoOpIssue.zip](https://github.com/NuGet/Home/files/8365994/NoOpIssue.zip)\r\n\r\n2. Run `dotnet restore` twice.\r\n\r\n3. The second restore should be no-op restore (\"All projects are up-to-date for restore.\" in the command output), but it is not the case for `dotnet 6.0.100`\r\n\r\n\r\n\r\n\n\n### Verbose Logs\n\n```shell\nd:\\workspace\\TestSolutions\\NoOpIssue\\App>dotnet --version\r\n6.0.100\r\n\r\nd:\\workspace\\TestSolutions\\NoOpIssue\\App>dotnet restore\r\n  Determining projects to restore...\r\n  The project d:\\workspace\\TestSolutions\\NoOpIssue\\App\\App.csproj is using CentralPackageVersionManagement, a NuGet preview feature.\r\n  Restored d:\\workspace\\TestSolutions\\NoOpIssue\\App\\App.csproj (in 187 ms).\r\n\r\nd:\\workspace\\TestSolutions\\NoOpIssue\\App>dotnet restore\r\n  Determining projects to restore...\r\n  The project d:\\workspace\\TestSolutions\\NoOpIssue\\App\\App.csproj is using CentralPackageVersionManagement, a NuGet preview feature.\r\n  Restored d:\\workspace\\TestSolutions\\NoOpIssue\\App\\App.csproj (in 161 ms).\r\n```\n```\n"},{"Id":"21127439377","Type":"IssuesEvent","CreatedAt":"2022-04-05T18:23:17","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11718","RelatedDescription":"Closed issue \"Remove InteractiveLoginProvider from NuGet Client repo\" (#11718) at NuGet/Home","RelatedBody":"Follow-up for https://github.com/NuGet/Home/issues/8577 issue.  We removed `VisualStudioAccountProvider` from the repo in https://github.com/NuGet/NuGet.Client/pull/4482 PR. However, I forgot to remove NuGet's implementation of `InteractiveLoginProvider` which is causing some RPS test failures for VS Team explorer team. `InteractiveLoginProvider` implementation in partner team's repo can be found in this [internal link](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_git/VSTeamExplorer?path=/VSIntegration/Client/Nuget/CredentialProvider/InteractiveLoginProvider.cs). cc @crmann1 @clboles\r\n\r\nhttps://github.com/NuGet/NuGet.Client/search?q=InteractiveLoginProvider\r\n![image](https://user-images.githubusercontent.com/52756182/161804534-f5f89ad3-bda7-4864-8378-eec2baf60143.png)"},{"Id":"21125827615","Type":"IssuesEvent","CreatedAt":"2022-04-05T16:50:47","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11718","RelatedDescription":"Opened issue \"Remove InteractiveLoginProvider from NuGet Client repo\" (#11718) at NuGet/Home","RelatedBody":"Follow-up for https://github.com/NuGet/Home/issues/8577 issue.  We removed `VisualStudioAccountProvider` from the repo in https://github.com/NuGet/NuGet.Client/pull/4482 PR. However, I forgot to remove NuGet's implementation of `InteractiveLoginProvider` which is causing some RPS test failures for VS Team explorer team. `InteractiveLoginProvider` implementation in partner team's repo can be found in this [internal link](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_git/VSTeamExplorer?path=/VSIntegration/Client/Nuget/CredentialProvider/InteractiveLoginProvider.cs). cc @crmann1 @clboles\r\n\r\nhttps://github.com/NuGet/NuGet.Client/search?q=InteractiveLoginProvider\r\n![image](https://user-images.githubusercontent.com/52756182/161804534-f5f89ad3-bda7-4864-8378-eec2baf60143.png)"},{"Id":"21109593493","Type":"IssuesEvent","CreatedAt":"2022-04-04T23:01:19","Actor":"0liver","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11717","RelatedDescription":"Opened issue \"[Bug]: dotnet pack: IncludeAssets and ExcludeAssets on PackageReference differ in generated .nuspec file\" (#11717) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 6.0.201\n\n### Worked before?\n\nN/A\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nCreate a project file [like this](https://github.com/Lombiq/NodeJs-Extensions/blob/a6b3353235bc56613ff792bfc7b743a99fb48617/Lombiq.NodeJs.Extensions/Lombiq.NodeJs.Extensions.csproj); in short:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <!-- more details here -->\r\n  <ItemGroup Condition=\"'$(NuGetBuild)' == 'true'\">\r\n    <PackageReference Include=\"Lombiq.Npm.Targets\" Version=\"1.0.1-alpha.6\">\r\n      <IncludeAssets>build</IncludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter running [`build`](https://github.com/Lombiq/GitHub-Actions/blob/issue/OSOE-83/.github/workflows/publish.yml#L125) and [`pack`](https://github.com/Lombiq/GitHub-Actions/blob/issue/OSOE-83/.github/workflows/publish.yml#L134) using:\r\n\r\n```PowerShell\r\ndotnet build --configuration Release --no-restore -p:NuGetBuild=true -p:LangVersion=Latest -p:GenerateDocumentationFile=True -p:NoWarn=CS1573%3BCS1591%3BVSTHRD002%3BVSTHRD200 -p:EnableNETAnalyzers=false -p:ContinuousIntegrationBuild=true -p:DebugSymbols=true -p:DebugType=portable\r\n```\r\nand\r\n\r\n```PowerShell\r\ndotnet pack --output artifacts --configuration Release --no-restore --no-build -p:NuGetBuild=true -p:Version=${{ steps.get_version.outputs.VERSION }} -p:GenerateDocumentationFile=True -p:NoWarn=NU5104 -p:TreatWarningsAsErrors=true -warnaserror -p:WarnOnPackingNonPackableProject=True -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:NoDefaultExcludes=true\r\n```\r\n\r\n... the resulting package contains the following _lombiq.nodejs.extensions.nuspec_ file:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <!-- more details here -->\r\n    <repository type=\"git\" url=\"https://github.com/Lombiq/NodeJs-Extensions/\" commit=\"a6b3353235bc56613ff792bfc7b743a99fb48617\" />\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"Lombiq.Npm.Targets\" version=\"1.0.1-alpha.6\" exclude=\"Runtime,Compile,Build,Native,Analyzers,BuildTransitive\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\nAs you can see - the dependency assets changed from `<IncludeAssets>build</IncludeAssets>` to `exclude=\"Runtime,Compile,Build,Native,Analyzers,BuildTransitive\"`. This leads to the `.props` and `.targets` files of the dependency not being included in any consumer of this package. But that's exactly what I want to achieve.\r\n\r\nI have verified that the `.props` and `.targets` files are correctly imported after changing the `<dependency>` element to contain `include=\"Build\"` instead of the `exclude` attribute and installing that modified package.\r\n\r\nThe problem is with the `IncludeAssets` and `ExcludeAssets` elements.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21107376068","Type":"IssuesEvent","CreatedAt":"2022-04-04T20:15:27","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11716","RelatedDescription":"Opened issue \"17.3 Tenet Pass for World Readiness\" (#11716) at NuGet/Home","RelatedBody":"[Copy from 17.0 tests]\n\n- GB18030\n- Localization \n- Globalization\n"},{"Id":"21106214547","Type":"IssuesEvent","CreatedAt":"2022-04-04T19:03:10","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11715","RelatedDescription":"Opened issue \"[DCR]: Print sources in NU1507\" (#11715) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nAs part of https://github.com/NuGet/Home/issues/11505, we emit a warning that only displays the number of sources in use.  \n\n### Desired Behavior\n\nWe should just print the sources themselves in the warning because the sources can come from lots of places and at the moment its hard to determine what sources are in use and from where.\n\n### Additional Context\n\n_No response_"},{"Id":"21106040355","Type":"IssuesEvent","CreatedAt":"2022-04-04T18:52:40","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11709","RelatedDescription":"Closed issue \"[Bug]: new warning for package source mappings doesn't pass a value for the resource string placeholder\" (#11709) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMicrosoft (R) Build Engine version 17.2.0-preview-22178-03+1160f4e0e for .NET Framework\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nUpdated to a VS build containing #11505.  Someone on my team started seeing this error (because we have Warnings As Errors, it broke the build):\r\n\r\n> error NU1507: There are {0} package sources defined in your configuration. When using central package management, please map your package sources with package source mapping (https://aka.ms/nuget-package-source-mapping) or specify a single package source. [d:\\dd\\WebTools\\WebTools.sln]\r\n\r\nNote: the string still has {0} because it doesn't pass a value to the placeholder.  [Source](https://github.com/NuGet/NuGet.Client/blob/b30bcfb30ffa5d6fad591737fe6055b6ff6d01b7/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L476)\r\n\r\nAdditional comments:\r\n* Our nuget.config only has a single source.  We're perplexed about why we're even getting this warning.  Maybe some additional info about which feeds are being detected would also be helpful?  NuGet.config contents:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"WebTools VSTS Feed\" value=\"https://devdiv.pkgs.visualstudio.com/...snip...\" />\r\n  </packageSources>\r\n\r\n  <!-- Don't let user disabled sources in VS prevent us from restoring -->\r\n  <disabledPackageSources>\r\n    <clear />\r\n  </disabledPackageSources>\r\n</configuration>\r\n```\r\n* This isn't happening consistently.  I couldn't repro on my machine, same VS build, same repo. 🤷‍♂️ There may be something different in our environments, but the message isn't helpful for us to figure out what.\n\n### Verbose Logs\n\n_No response_"},{"Id":"21104285029","Type":"IssuesEvent","CreatedAt":"2022-04-04T17:09:55","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11714","RelatedDescription":"Opened issue \"[Bug]: dotnet nuget push --help does not show proper help text \" (#11714) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.300-preview.22154.4\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n`dotnet nuget push --help`\r\n\r\n```\r\nPS C:\\z\\GitHub\\NuGet> dotnet nuget push --help\r\nDescription:\r\n\r\nUsage:\r\n  dotnet nuget push <ienumerable`1>... [options]\r\n\r\nArguments:\r\n  <ienumerable`1>\r\n\r\nOptions:\r\n  --force-english-output\r\n  -s, --source <source>\r\n  -ss, --symbol-source <symbol-source>\r\n  -t, --timeout <timeout>\r\n  -k, --api-key <api-key>\r\n  -sk, --symbol-api-key <symbol-api-key>\r\n  -d, --disable-buffering\r\n  -n, --no-symbols\r\n  --no-service-endpoint\r\n  --interactive\r\n  --skip-duplicate\r\n  -?, -h, --help                          Show command line help.\r\n```\r\n\r\nStrangely, this works:\r\n```\r\nPS C:\\z\\GitHub\\NuGet> dotnet nuget push --info\r\nSpecify --help for a list of available options and commands.\r\nerror: Unrecognized option '--info'\r\n\r\n\r\nUsage: dotnet nuget push [arguments] [options]\r\n\r\nArguments:\r\n  [root]  Specify the path to the package and your API key to push the package to the server.\r\n\r\nOptions:\r\n  -h|--help                      Show help information\r\n  --force-english-output         Forces the application to run using an invariant, English-based culture.\r\n  -s|--source <source>           Package source (URL, UNC/folder path or package source name) to use. Defaults to DefaultPushSource if specified in NuGet.Config.\r\n  -ss|--symbol-source <source>   Symbol server URL to use.\r\n  -t|--timeout <timeout>         Timeout for pushing to a server in seconds. Defaults to 300 seconds (5 minutes).\r\n  -k|--api-key <apiKey>          The API key for the server.\r\n  -sk|--symbol-api-key <apiKey>  The API key for the symbol server.\r\n  -d|--disable-buffering         Disable buffering when pushing to an HTTP(S) server to decrease memory usage.\r\n  -n|--no-symbols                If a symbols package exists, it will not be pushed to a symbols server.\r\n  --no-service-endpoint          Does not append \"api/v2/package\" to the source URL.\r\n  --interactive                  Allow the command to block and require manual action for operations like authentication.\r\n  --skip-duplicate               If a package and version already exists, skip it and continue with the next package in the push, if any.\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"21103656197","Type":"IssuesEvent","CreatedAt":"2022-04-04T16:34:23","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/11453","RelatedDescription":"Reopened issue \"Floating Versions in PM UI, define manual test cases for vendors \" (#11453) at NuGet/Home","RelatedBody":"With the implementation of Floating Versions, the behavior of the PM UI for installing/updating a package will change, that's why we need to update the manual test cases for our vendors so they know the new behavior and can test it to ensure there are no regressions on basic functionality."},{"Id":"21103654921","Type":"IssuesEvent","CreatedAt":"2022-04-04T16:34:19","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11453","RelatedDescription":"Closed issue \"Floating Versions in PM UI, define manual test cases for vendors \" (#11453) at NuGet/Home","RelatedBody":"With the implementation of Floating Versions, the behavior of the PM UI for installing/updating a package will change, that's why we need to update the manual test cases for our vendors so they know the new behavior and can test it to ensure there are no regressions on basic functionality."},{"Id":"21096238024","Type":"IssuesEvent","CreatedAt":"2022-04-04T10:33:33","Actor":"timmkrause","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11713","RelatedDescription":"Opened issue \"[Bug]: NuGet package update reformats multi-line \"Exec Command\" string in project files\" (#11713) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 2022 (17.1.3)\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n- Have some kind of multi-line exec command in the project file, e.g.:\r\n\r\n```\r\n\t<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n\t\t<Exec Command=\"\r\n\t\t\t$(NSwagExe_Net60) openapi2csclient ^\r\n\t\t\t    /input:Infrastructure/Clients/Something/something.json ^\r\n\t\t            /output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^\r\n\t\t\t    /classname:SomethingApiClient ^\r\n\t\t\t    /namespace:Something ^\r\n\t\t\t    /GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^\r\n\t\t\t    /JsonLibrary:SystemTextJson ^\r\n\t\t\" />\r\n\t</Target>\r\n```\r\n\r\n- Update a NuGet package via the VS package management UI.\r\n- Observe, that the exec command string gets reformatted into a single-line representation:\r\n\r\n```\r\n<Target Name=\"NSwag\" AfterTargets=\"Build\">\r\n    <Exec Command=\"&#xD;&#xA;\t\t\t$(NSwagExe_Net60) openapi2csclient ^&#xD;&#xA;\t\t\t    /input:Infrastructure/Clients/Something/something.json ^&#xD;&#xA;\t\t\t\t/output:Infrastructure/Clients/Something/SomethingApiClient.generated.cs ^&#xD;&#xA;\t\t\t\t/classname:SomethingApiClient ^&#xD;&#xA;\t\t\t\t/namespace:Something ^&#xD;&#xA;\t\t\t\t/GeneratePrepareRequestAndProcessResponseAsAsyncMethods:True ^&#xD;&#xA;\t\t\t\t/JsonLibrary:SystemTextJson ^&#xD;&#xA;\t\t\" />\r\n</Target>\r\n```\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":172,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-04-06T03:30:24.2635305Z","RunDurationInMilliseconds":1432}