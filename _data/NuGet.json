{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13916090571","Type":"PullRequestEvent","CreatedAt":"2020-10-21T02:25:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8287","RelatedDescription":"Opened pull request \"Version history table rendering update for accessibility\" (#8287) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8196\r\n\r\nPreviously, version history table always had 2 hardly visible columns: 1 for signature information and another for deprecation information. When user is not authenticated on the web site, we never show the package signature information, so the cells although exist are always empty. The deprecation information is present, but most of the time packages are not deprecated and empty cells do not have any narrator markup, so are not read (but headers are).\r\n\r\nThis change moves the `Model.IsCertificatesUIEnabled` check up to the lines that generate column header, causing the certificate column to be completely absent for unauthenticated users. Same is done for `Model.IsPackageDeprecationEnabled` but it is always `true` in our case. Also `aria-label` properties added for empty cells when those are rendered."},{"Id":"13915240026","Type":"IssuesEvent","CreatedAt":"2020-10-21T00:06:03","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8192","RelatedDescription":"Closed issue \"[A11y][Contrast]Color contrast for 'Cancel' button foreground with background is 1.099:1 which is less than 3:1\" (#8192) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1188116\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450) \r\n\r\n\r\n## Note:\r\nSame issue is observed for throughout the application on 'Cancel\" button\r\n## Repro Steps:\r\n\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"Open Profile drop down\" and press enter\r\n    Tab till \"API Keys\" and Press enter\r\n    Tab till \"Create button\" and press enter\r\n    Tab till \"Cancel button\" under the 'Select packages'  \r\n    Check whether color contrast for 'Cancel' button's foreground with page background is meeting the required 3:1 ratio or not \r\n\r\n## Actual Results:\r\n\r\nColor contrast for 'Cancel' button foreground with background is 1.099:1 which is less than 3:1\r\n## Expected Results:\r\nLow vision user  should be able to identify the button, so it should meet the required color contrast ratio 3:1\r\n## User Impact:\r\nLow vision users may not be able to identify the button if it is not meeting the required color contrast ratio.\r\n\r\n## Notes\r\nLooks like this will need a global fix. I believe we use a single set of CSS for the cancel button, so it should be sufficient to change this one time."},{"Id":"13915094479","Type":"IssuesEvent","CreatedAt":"2020-10-20T23:42:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8265","RelatedDescription":"Closed issue \"[A11y] The header's orange \"search\" button does not have a contrast ratio of 3:1 or higher\" (#8265) at NuGet/NuGetGallery","RelatedBody":"Follow up to https://github.com/NuGet/NuGetGallery/issues/8195\r\n\r\nAzDO work item: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1188278"},{"Id":"13912659012","Type":"IssuesEvent","CreatedAt":"2020-10-20T19:12:46","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8286","RelatedDescription":"Opened issue \"[A11y][WCAG2.1][Contrast]The color contrast ratio for the stars under \"Stars\" column is < 3:1\" (#8286) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1069750\r\n\r\n# Environment Details:\r\n#URL:https://www.nuget.org/​\r\n ​\r\n## OS Details:​\r\nWindows 10 Version 1909 Build 18363.657​\r\n​\r\n## Browser and Version:​\r\nChromium Edge Version 80.0.361.51​\r\n​\r\n# Repro Steps:​\r\n1.Hit the URL \"https://www.nuget.org\" \r\n2.Tab till \"Packages\" link in the top navigation and press enter​\r\n3.Tab till any existing package and press enter​\r\n4.Tab till \"GitHub Usage\" section and press enter​\r\n5.Using color contrast analyzer, verify the color contrast ratio for the stars under \"Stars\" column header\r\n​\r\n## Actual Result:​\r\nThe color contrast ratio for the stars under \"Stars\" column is 2.51:1 which is < 3:1\r\n\r\n## Expected Result:​\r\nThe color contrast ratio for non-text content should be >= 3:1\r\n​\r\n## User Impact:​\r\nUsers with visual impairments will find it difficult to access the content\r\n​\r\n# Notes:\r\nDepending on how these stars are rendered, this will either be very simple, or very not simple."},{"Id":"13912216925","Type":"IssuesEvent","CreatedAt":"2020-10-20T18:32:08","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8285","RelatedDescription":"Opened issue \"[A11y][WCAG2.1][Reflow]Dropdown information is cut off when zoomed in.\" (#8285) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1188115\r\n\r\n# Environment Details:\r\n#URL:Application URL for NuGet Service\r\nBrowser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n# OS Details\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450) \r\n\r\n\r\n\r\n# Note: \r\nUnder 'Members' Administrator dropdown is not visible clearly after applying reflow\r\n# Repro Steps:\r\nChange the Display resolution to 1280*1024 in System display settings\r\nHit the URL and login with appropriate credentials\r\nTab till \"Open Profile drop down\" and press enter\r\nTab till \"Manage organizations\" and Press enter\r\nTab till \"Edit \" present in any record the table and press enter\r\nTab till Certificates and expand it \r\nApply reflow and Check whether data is missing or not  \r\n### Actual Results:\r\n\r\nSome of the data is missing when reflow is applied under the Certificates\r\n### Expected Results:\r\nUser should be able to view the data without missing and all the information should be visible clearly with one scrollbar after applying reflow\r\n### User Impact:\r\nUsers will not be able to see the information if it gets overlapped in reflow\r\n\r\n# Notes:\r\nWe will probably want to update the layout to move the dropdown to the next line when the horizontal width is below a certain amount."},{"Id":"13912156024","Type":"IssuesEvent","CreatedAt":"2020-10-20T18:26:42","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8284","RelatedDescription":"Opened issue \"[A11y][WCAG2.1][ARIA]Some status/alert messages are not being read out.\" (#8284) at NuGet/NuGetGallery","RelatedBody":"Concerning the following:\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1061326\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1061322\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1069948\r\n\r\nFixes  need to be made for the following pages/scenarios:\r\n1. Copy for install instructions on package details page\r\nSteps to Reproduce :\r\n    1. Launch application using provided URL.(https://www.nuget.org/)\r\n    2. Navigated to Home page\r\n    3. Search for a key term (say “json”)\r\n    4. Look at the package search results and select any package.\r\n    5. Navigate till \"Package Manager\" and select it.\r\n    6. Start Narrator and navigate till \"Copy\" control.\r\n    7. Hit enter on the \"Copy\" control and observe the announcement by screen reader.\r\n2. API Key Generation success message\r\nSteps to Reproduce :\r\n    1. Launch application using provided URL.(https://www.nuget.org/)\r\n    2. Navigated to Home page\r\n    3. Click on “Sign in” option (top right) and click on “Sign in with Microsoft” button\r\n    4. Sign in using MSA on the common Microsoft sign-in page\r\n    5. Go to “API Keys” from the context menu (top left menu dropdown).\r\n    6. Navigate till \"Create Control\" and expand it.\r\n    7. Fill all the data in the editing fields.\r\n    8. Start Narrator, click on the \"Create\" button and observe the announcement by screen reader.\r\n3. Deprecation dialog status messages\r\nRepro Steps:​ Note Same issue was observed on \"GitHub Usage\" page\r\n    1. Start Screen Reader. Hit the URL \"https://www.nuget.org\" and sign in with valid credentials​\r\n    2. Tab till \"Sign In\" link in the top navigation and press enter​\r\n    3. Tab till \"Sign in with Microsoft\" button and press enter​\r\n    4. Select valid user id and press enter​\r\n    5. Enter any Username, tab till \"Register\" button and press enter​\r\n    6. Tab till the user menu button and press enter to expand it. Select \"Manage Packages\" and press enter​\r\n    7. Tab till \"Published Packages\", expand it and select any existing package.(If no packages are available, add a new package)​\r\n    8. Tab till \"Manage Package\" link under \"Info\" and press enter​\r\n    9. Tab till \"Deprecation\" section and press enter to expand it​\r\n    10. Tab till \"Select reason(s)\" and uncheck all the check boxes. A status message will be displayed on the screen\r\n    11. Check if the screen reader is reading the status message​\r\n\r\nNotes:\r\nAll of these are likely missing aria-live regions describing them. Including an aria-live and role to the respective elements that need to be read out should be sufficient. See https://github.com/NuGet/NuGetGallery/pull/8238 for an example of a fix."},{"Id":"13911837327","Type":"IssuesEvent","CreatedAt":"2020-10-20T17:58:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8283","RelatedDescription":"Opened issue \"Provide a mechanism to validate packages against nuget.org prior to upload\" (#8283) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nThe validations performed by NuGet client at pack time are different than those that are performed by nuget.org at upload time. This is unavoidable for some long running validations (consider virus scanning or package repository signing) or validations that require online data (consider namespace reservation or API key scopes).\r\n\r\nMany teams, both internal and external, have run into problems where they are trying to release packages on an important Release Day but are blocked because nuget.org validations fail at the last minute.\r\n\r\nThis last minute failure is hugely painful because:\r\n\r\n1. It may require the team to recreate the packages with a small tweak (perhaps a metadata fix-up)\r\n1. It may require a whole _wave_ of packages to be republished. Consider A depends on B depends on C and B fails validation.\r\n    - This gets even more complicated if A is already published and nuget.org does not allow deletion... but A must be republished!\r\n1. It may delay a Release Date due to this extra scramble. This can be really bad if the release is security critical or already communicated to other partners/customers in branding/blog/etc.\r\n\r\n### Describe the solution you'd like\r\n\r\nThere should be a way to validate packages in advanced. One more complicated solution would be a staging feature described by https://github.com/NuGet/NuGetGallery/issues/3931, but other cheaper solutions exists:\r\n\r\nFor example:\r\n1. Provide a magic push endpoint that performs all synchronous validation\r\n    - Pros: could perform API key, ID prefix, metadata etc validation\r\n    - Cons: misses author signing validation and virus scanning which must be done asynchronously\r\n1. Provide an offline tool that performs all of the same validations as the push endpoint\r\n    - Pros: relative cheap to implement\r\n    - Cons: does not account for online data like ID prefix reservation, can drift over time (e.g. new validation online, old tool)\r\n\r\nI propose that we should consider a solution cheaper than staging that allows a package owner to push a package in a \"validation\" mode such that all of the synchronous validations are done but the package is not committed. This seems like a reasonable balance between implementation cost and validation coverage. We could consider a ticket-based approach in the future where asynchronous validations are completed as well but the package is still not committed. Imagine pushing to this validation endpoint and receiving a GUID which can be used to check the status of the asynchronous validation step at a later time (client responsibility to poll).\r\n\r\n### Additional context\r\n\r\nThe [NuGet.VerifyMicrosoftPackage](https://github.com/NuGet/NuGetGallery/tree/master/src/VerifyMicrosoftPackage) tool was implemented to address part of these concerns, specifically for Microsoft-specific metadata validations.\r\n\r\nSome teams have taken the approach of pushing their packages to https://int.nugettest.org/ (\"INT\" environment) in advance. This is a decent workaround but has some drawbacks.\r\n- Pros: provides online validation that can closely mimic nuget.org, such as virus scanning\r\n- Cons: data on INT is independent from PROD meaning namespace reservation or author signature validation might succeed on INT but fail on PROD. Also, INT could have a newer version of code than PROD since it is our pro-PROD validation environment.\r\n\r\n### Examples of \"surprise\" validation failures\r\n\r\n- License file encoding: https://github.com/NuGet/Home/issues/7733\r\n- Case sensitivity of license file path: https://github.com/NuGet/Home/issues/9817\r\n- Specific SPDX identifier requirements: https://github.com/NuGet/NuGetGallery/issues/8280\r\n\r\n... and many more."},{"Id":"13899806729","Type":"IssuesEvent","CreatedAt":"2020-10-19T22:45:29","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8281","RelatedDescription":"Closed issue \"[A11y][WCAG2.1]Some of the contents of API Key page get overlapped when screen is zoom to 400%.\" (#8281) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1061307\r\n​\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\nApplication URL:https://www.nuget.org/\r\nWindows Version - Windows10 \r\nEdge Version-Microsoft Edge 44.18362.449.0\r\nChrome Version- Version 79.0.3945.130 (Official Build) (64-bit)\r\n\r\nPre-requisite:\r\nSet the desktop size value to 1280 x 1024.\r\n\r\nNote:\r\nSame issue is observed in Upload packages page\r\n\r\nSteps to Reproduce :\r\n1.Launch application using provided URL.(https://www.nuget.org/)\r\n2.Navigated to Home page\r\n3.Click on “Sign in” option (top right) and click on “Sign in with Microsoft” button\r\n4.Sign in using MSA on the common Microsoft sign-in page\r\n5.Go to “API Keys” from the context menu (top left menu dropdown).\r\n6.Navigate till \"Create Control\" and expand it.\r\n7.Observe that some of the contents get overlapped when the screen is zoom to 400%.\r\n\r\nActual: \r\nWhen the screen is zoomed to 400%,  Some of the contents present on the screen get overlapped.\r\nThe below data shown in the screenshot gets overlapped after zooming the screen :\r\nImage\r\n\r\nExpected: \r\nWhen screen is zoomed to 400%, all the contents present on the screen should not get overlapped and should appear properly on the screen.\r\n\r\nUser Impact: \r\nLow vision users will find difficulty in viewing and reading the content present on the screen when zoomed to 400%.\r\n\r\nNotes:\r\nSee this screenshot:\r\n![image](https://user-images.githubusercontent.com/11051729/96502433-a0188f80-1206-11eb-89ea-6097e412051e.png)\r\n\r\n"},{"Id":"13899334579","Type":"PullRequestEvent","CreatedAt":"2020-10-19T21:47:10","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8263","RelatedDescription":"Merged pull request \"[Cookies] Expire and set the domain of Google Analytics cookies\" (#8263) at NuGet/NuGetGallery","RelatedBody":"- Expire Google Analytics cookies in a year;\r\n- Set the domain as 'none', to avoid sharing Google Analytics cookies with the status page.\r\nReferences:\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/cookies-user-id\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieDomain\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieExpires"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13913801470","Type":"IssuesEvent","CreatedAt":"2020-10-20T21:01:39","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10132","RelatedDescription":"Closed issue \"[CPVM] Disable pinning of the central transitive dependencies \" (#10132) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nPer request  from internal and external customers, disable the enforcing/pinning of package versions for transitive dependencies defined in the CentralManagement file.\r\n\r\n\r\n\r\n"},{"Id":"13912951511","Type":"IssuesEvent","CreatedAt":"2020-10-20T19:40:33","Actor":"ncook-hxgn","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10162","RelatedDescription":"Opened issue \"NU5129 is not so clever to detect a file renamed by the nuspec\" (#10162) at NuGet/Home","RelatedBody":"This warning confused me because it is straight up gaslighting me.\r\n\r\n`WARNING: NU5129: - At least one .props file was found in 'build/native/include/', but 'build/native/BCGControlBarPro-Win32.props' was not.`\r\n\r\nExcept, it was:\r\n![image](https://user-images.githubusercontent.com/36889813/96605612-51debb80-12ee-11eb-9897-26d32c745cc2.png)\r\n\r\n```xml\r\n    <file src=\"build\\BCGControlBarPro.props\" target=\"build\\BCGControlBarPro-Win32.props\"/>\r\n    <file src=\"build\\BCGControlBarPro.targets\" target=\"build\\BCGControlBarPro-Win32.targets\"/>\r\n```\r\nCould you please either get nuget.exe to acknowledge my nuspec has renamed the file appropriately, or make `build\\BCGControlBarPro-Win32.props` a folder, not a file, so that the warning is accurate?\r\n\r\n[The docs say I'm doing the right thing](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5129#solution)\r\n\r\nTa.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 81f342a2-c4fa-9704-bf6d-c739d974eb6e\r\n* Version Independent ID: f5f90f1e-9d35-c109-aff3-2f657eaa0c57\r\n* Content: [NuGet Warning NU5129](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5129)\r\n* Content Source: [docs/reference/errors-and-warnings/NU5129.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/reference/errors-and-warnings/NU5129.md)\r\n* Product: **nuget**\r\n* GitHub Login: @zivkan\r\n* Microsoft Alias: **karann**"},{"Id":"13905618609","Type":"IssuesEvent","CreatedAt":"2020-10-20T10:06:58","Actor":"ComanderKai77","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10161","RelatedDescription":"Opened issue \"Using NuGet offline | Disable certificate check\" (#10161) at NuGet/Home","RelatedBody":"I'm using NuGet on a Windows maschine without internet connection and a local repository manager (Nexus).\r\nThe problem is that NuGet tries to verify the certificates even if the repository is trusted.\r\n\r\nFor example I want to download Newtensoft.Json from my repository server.\r\nThe download is fast but after the download NuGet tries to verify the certificat / signing and contacts digicert.com in this case resulting in a timeout.\r\nThe hole proccess to download and trying to verify the package takes nearly 3 minutes which is way too much.\r\n\r\nIs there a way to disable certificate checking completly and speed up the proccess?"},{"Id":"13903330396","Type":"IssuesEvent","CreatedAt":"2020-10-20T07:04:47","Actor":"juanan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10160","RelatedDescription":"Opened issue \"Avoid cache with local sources\" (#10160) at NuGet/Home","RelatedBody":"Hi,\r\n\r\nWe have nuget packages from 2 sources: nuget.org and local machine. I have noticed that the command \"nuget restore '*.sln' Nocache\" continues getting packages from my local source, is it a bug?Its like the parameter \"NoCache\" doesnt apply for local sources.\r\n\r\nI have to run before \"nuget locals all -clear\" to make it work.\r\n\r\nI am running Nuget 5.7.0.\r\n\r\nMany thanks.\r\n\r\n"},{"Id":"13900515709","Type":"IssuesEvent","CreatedAt":"2020-10-20T00:31:22","Actor":"vatsan-madhavan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10135","RelatedDescription":"Closed issue \"Generating MSBuild Binary log from nuget restore command\" (#10135) at NuGet/Home","RelatedBody":"How can I generate MSBuild Binary log from nuget client commands like restore ? \r\n\r\n`nuget restore` resolves into something like `msbuild.exe \"%temp%\\NuGetScratch\\ro0d0kct.z0t.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"%temp%\\NuGetScratch\\w3s4ivaf.f43.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"<path to nuget.exe>\" /p:RestoreSolutionDirectory=\"<path to sln directory>\" /p:SolutionDir=\"<path to solution dir>\" /p:SolutionNam=<solution name>`\r\n\r\nHow can I get it to pass `/bl` to msbuild so that a binary log is output at the end of nuget restore? "},{"Id":"13900440385","Type":"IssuesEvent","CreatedAt":"2020-10-20T00:19:26","Actor":"zarenner","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10159","RelatedDescription":"Opened issue \"CPVM equivalent of GlobalPackageReference?\" (#10159) at NuGet/Home","RelatedBody":"We're looking at migrating from https://github.com/microsoft/MSBuildSdks/tree/master/src/CentralPackageVersions to the built-in central package versioning feature, and (unless I missed it) I didn't see an equivalent of `GlobalPackageReference`.\r\n\r\nI'm guessing that for all of our (many) build/analyzer packages, we can do the equivalent and manually add both `PackageVersion` and `PackageReference` (with IncludeAssets and PrivateAssets set as `GlobalPackageReference` does)? Is there any reason we shouldn't add the `PackageReference`s directly in Directory.Packages.props? "},{"Id":"13900407703","Type":"IssuesEvent","CreatedAt":"2020-10-20T00:14:28","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9971","RelatedDescription":"Closed issue \"unit test to compare lock file target libraries in project.assets.json file with Dependencies tree\" (#9971) at NuGet/Home","RelatedBody":"This issue has been created to develop a unit test to compare lock file target libraries in `project.assets.json` file with Dependencies tree. Inspired by [this](https://github.com/NuGet/NuGet.Client/pull/3598#discussion_r475776278) code review comment.\r\n"},{"Id":"13900278394","Type":"IssuesEvent","CreatedAt":"2020-10-19T23:55:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8738","RelatedDescription":"Closed issue \"Use LazyIntializer API to initialize a target type in a multi threaded environment\" (#8738) at NuGet/Home","RelatedBody":"## Details about Problem\r\nIn the current [implementation](https://github.com/NuGet/NuGet.Client/blob/c1f6915918b82c096bbd666bd9c18528f1f70630/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/IDE/ExtensibleSourceRepositoryProvider.cs#L54) object is always locked even-though target type is already initialized.  Learnt from this [doc](https://github.com/microsoft/referencesource/blob/17b97365645da62cf8a49444d979f94a59bbb155/mscorlib/system/threading/LazyInitializer.cs#L197) that there is a .NET framework implementation to accomplish the same logic. `This issue is created to track other lazy initializations which rely on a similar pattern`.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI"},{"Id":"13899571525","Type":"IssuesEvent","CreatedAt":"2020-10-19T22:14:54","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10158","RelatedDescription":"Opened issue \"Pushing multiple packages in CI is causing a file lock, failing 2nd push\" (#10158) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWhen using CI (GitHub Actions and `dotnet nuget push` with *.nupkg, the files are found and a first package is pushed, but then the second fails.\r\n\r\nExample: https://github.com/timheuer/strava-net/runs/1243834288#step:7:19\r\n\r\n```\r\nPushing strava-net.1.0.0.symbols.nupkg to '/home/runner/work/strava-net/strava-net/published/'...\r\nYour package was pushed.\r\nPushing strava-net.1.0.0.nupkg to '/home/runner/work/strava-net/strava-net/published/'...\r\nerror: The process cannot access the file '/home/runner/work/strava-net/strava-net/published/strava-net.1.0.0.nupkg' because it is being used by another process.\r\n```"},{"Id":"13899556330","Type":"IssuesEvent","CreatedAt":"2020-10-19T22:13:00","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10157","RelatedDescription":"Opened issue \"Cannot use relative URLs in dotnet push\" (#10157) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI’m trying to use `dotnet nuget push` with *.nupkg and 1) the docs are wrong (I submitted a bug) 2) the source parameter seems to require a fully-qualified source and cannot use relative roots?\r\n \r\nI’m doing this in CI and am trying to basically use “.” As the source directory but looks like the CLI treats this as too literally and doesn’t like that.\r\n\r\nFrom conversation it appears it could be \r\nhttps://github.com/NuGet/NuGet.Client/blob/65abcc61f73ab3d87928495f789ec74011edde7f/src/NuGet.Core/NuGet.Commands/Utility/PackageSourceProviderExtensions.cs#L47\r\nVersus using `RelativeOrAbsolute`\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-21T05:30:36.5542777Z","RunDurationInMilliseconds":1358}