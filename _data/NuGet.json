{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13135575188","Type":"PullRequestEvent","CreatedAt":"2020-08-07T03:16:53","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8144","RelatedDescription":"Opened pull request \"When V1 Odata requests OrderBy is invalid, return 400\" (#8144) at NuGet/NuGetGallery","RelatedBody":"Fixes: https://github.com/NuGet/Engineering/issues/3308\r\n\r\nThis causes monitoring noise."},{"Id":"13133893267","Type":"PullRequestEvent","CreatedAt":"2020-08-06T21:55:42","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8140","RelatedDescription":"Merged pull request \"Fix PackageVulnerability indexing uniqueness error\" (#8140) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/3211\r\n\r\nMove VulnerablePackageVersionRange entity update to after its vulnerability is correct. This stops a multiplicity issue which results in an INSERT sent by EF for a record which already exists.\r\n"},{"Id":"13133248226","Type":"PullRequestEvent","CreatedAt":"2020-08-06T20:31:50","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8141","RelatedDescription":"Merged pull request \"Fix for: Malicious OData requests trigger exception monitoring\" (#8141) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/3303\r\n\r\nNo need to log exceptions for user input errors. Those are not \"exceptional\". "},{"Id":"13131610431","Type":"PullRequestEvent","CreatedAt":"2020-08-06T17:20:05","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8143","RelatedDescription":"Opened pull request \"Preview readme when uploading packages\" (#8143) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes:\r\n\r\n* UI to display preview of readme content \r\n\r\nUploading packages with feature flag on\r\n![NuGet Gallery _ Upload Package (1)](https://user-images.githubusercontent.com/64443925/89562077-48a18080-d7ce-11ea-8a00-c293efe111b2.gif)\r\n\r\n\r\nAddresses :https://github.com/NuGet/Engineering/issues/3267"},{"Id":"13130329502","Type":"IssuesEvent","CreatedAt":"2020-08-06T15:12:25","Actor":"nbelley","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8142","RelatedDescription":"Opened issue \"nuget server packagesPath using a URL\" (#8142) at NuGet/NuGetGallery","RelatedBody":"I would love to be able to give my local nuget server an url for its packages source, could it be possible? My packages would be hosted on a s3 bucket."},{"Id":"13125427116","Type":"PullRequestEvent","CreatedAt":"2020-08-06T06:38:51","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8141","RelatedDescription":"Opened pull request \"Fix for: Malicious OData requests trigger exception monitoring\" (#8141) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/3303\r\n\r\nNo need to log exceptions for user input errors. Those are not \"exceptional\". "},{"Id":"13125049564","Type":"IssuesEvent","CreatedAt":"2020-08-06T05:42:28","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8102","RelatedDescription":"Closed issue \"Hard package deletes don't remove vulnerability data from gallery db\" (#8102) at NuGet/NuGetGallery","RelatedBody":"In this code:\r\nhttps://github.com/NuGet/NuGetGallery/blob/master/src/NuGetGallery/Services/PackageDeleteService.cs#L321\r\nthere is no removal of related vulnerability rows.\r\nSpecifics:\r\n* There is a potential cascading delete of rows in `VulnerablePackageVersionRangePackages` (the m:m table which connects Packages rows to `VulnerablePackageVersionRanges` rows). This needs to be confirmed, but it seems to be the case, as we don't have orphaned rows occurring here.\r\n* If a row in `VulnerablePackageVersionRanges` no longer has any package/version rows in Packages associated with it by a row in `VulnerablePackageVersionRangePackages`, it should be removed explicitly.\r\n* If a row in `PackageVulnerabilities` no longer has entries in `VulnerablePackageVersionRanges` with links to it, it should be deleted explicitly.\r\nHaving orphaned rows has resulted in ingress job fails (which can also be made more robust).\r\nIf a package with vulnerabilities has been hard-deleted and is reintroduced into the database, the GitHub data can be re-polled as if it were a new package.\r\n/cc @xavierdecoster "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13135486815","Type":"IssuesEvent","CreatedAt":"2020-08-07T02:59:40","Actor":"AndyTian-Devops","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9882","RelatedDescription":"Opened issue \"NuGet.PackageManagement.UI.UIActionEngine.<>c.<ResolveActionsForUpdateAsync>b__11_0(PackageIdentity package)\" (#9882) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0.6726\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):  Dev16 16.7.0\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): 18363.959\r\n\r\nInstall SpecFlow extension for VS 2019\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a .net framework 4.7.2 class library\r\n\r\n2. Open Package manage UI, install following package.\r\n\r\n- SpecFlow 3.3.74\r\n- SpecFlow.Nunit 3.3.74\r\n- SpecFlow.Tools.MSbuild.Generation.3.3.74\r\n- NUnit 3.12.0\r\n- NUnit3TestAdapter 3.17.0\r\n- NUnit.ConsoleRuner 3.11.1\r\n\r\n3. Updates tab.\r\nSelect all packages -> Update\r\n\r\nError: object reference not set to an instance of an object\r\n\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NuGet.PackageManagement.UI.UIActionEngine.<>c.<ResolveActionsForUpdateAsync>b__11_0(PackageIdentity package)\r\n   at System.Linq.Enumerable.WhereListIterator`1.MoveNext()\r\n   at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source)\r\n   at NuGet.PackageManagement.UI.UIActionEngine.<ResolveActionsForUpdateAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.PackageManagement.UI.UIActionEngine.<>c__DisplayClass12_0.<<PerformActionImplAsync>b__0>d.MoveNext()\r\nTime Elapsed: 00:00:00.0005881\r\n========== Finished ==========\r\n\r\n\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13135178581","Type":"IssuesEvent","CreatedAt":"2020-08-07T01:58:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9881","RelatedDescription":"Opened issue \"Static graph restore is inconsistent wrt to the CrossTargeting property in compared to VS & regular msbuild evaluation restore \" (#9881) at NuGet/Home","RelatedBody":"Take the following project: \r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net5.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRun all three restores and look at the dgspec json\r\n\r\n* Regular restore => crossTargeting=\"true\" \r\n* Static Graph restore => crossTargeting=\"false\"\r\n* VS restore => crossTargeting=\"false\"\r\n\r\nIn fact VS has a specific check for that: https://github.com/NuGet/NuGet.Client/blob/0b2568615d61e9f9393d597cb806f02af1b40a78/src/NuGet.Clients/NuGet.SolutionRestoreManager/VsSolutionRestoreService.cs#L233-L242. \r\n\r\nNow the impact here is minor given that static graph is experimental & occasions of project files like the above are rare, but still worth fixing. "},{"Id":"13134866736","Type":"IssuesEvent","CreatedAt":"2020-08-07T00:54:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9880","RelatedDescription":"Opened issue \"Package Manager Console Depends on Solution Start-up Project\" (#9880) at NuGet/Home","RelatedBody":"@BrianBu01 commented on [Tue, 03 Mar 2020 18:27:14 GMT](https://github.com/dotnet/roslyn/issues/42137)\r\n**Version Used**: \r\n\r\nVS Professional 2019 v 16.4.5\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Select a start up project\r\n2. In Package Manager Console, select a default project different from startup\r\n3. Run a command that depends on building of projects or even code with in such as Scaffold-DbContext.\r\n\r\n**Expected Behavior**:\r\n\r\nThe command runs in context of the default project\r\n\r\n**Actual Behavior**:\r\n\r\nThe command run on the default project but in the context of the start-up project\r\n**Notes**\r\n\r\nNot really sure that this is a bug, but it is a confusing coupling between two different concepts.   "},{"Id":"13134771819","Type":"IssuesEvent","CreatedAt":"2020-08-07T00:34:37","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8836","RelatedDescription":"Closed issue \"[Centrally managing NuGet packages and versions] Implement the changes necessary for the Restore\" (#8836) at NuGet/Home","RelatedBody":""},{"Id":"13134770525","Type":"IssuesEvent","CreatedAt":"2020-08-07T00:34:20","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9520","RelatedDescription":"Reopened issue \"MVP - Centrally manage NuGet package versions for a solution or a repo\" (#9520) at NuGet/Home","RelatedBody":"An Epic relevant with the MVP only functionality for Centrally manage NuGet package versions for a solution or a repo\r\n\r\n"},{"Id":"13134769368","Type":"IssuesEvent","CreatedAt":"2020-08-07T00:34:08","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9520","RelatedDescription":"Closed issue \"MVP - Centrally manage NuGet package versions for a solution or a repo\" (#9520) at NuGet/Home","RelatedBody":"An Epic relevant with the MVP only functionality for Centrally manage NuGet package versions for a solution or a repo\r\n\r\n"},{"Id":"13134253515","Type":"IssuesEvent","CreatedAt":"2020-08-06T22:54:00","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9877","RelatedDescription":"Closed issue \"Managed NuGet Package designer doesn't let you cut from the search field\" (#9877) at NuGet/Home","RelatedBody":"# Version\r\n\r\n: Version 16.8.0 Preview 2.0 [30404.163.master]\r\n\r\n# Repro\r\n\r\n1. Highlight the text and press CTRL+X in the search box for this designer:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/89485368-fbc8a480-d7e3-11ea-83d3-4bc1a4f9991e.png)\r\n\r\nExpected: For the text to be cut\r\nActual: Nothing\r\n\r\n\r\n"},{"Id":"13133874177","Type":"IssuesEvent","CreatedAt":"2020-08-06T21:52:52","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9872","RelatedDescription":"Closed issue \"recommend packages for 'All' sources\" (#9872) at NuGet/Home","RelatedBody":"## Details about Problem\r\nThe package recommender currently only works when the package source is nuget.org in Package Manager. We should expand this to include the case where 'All' is selected and nuget.org is included as one of the sources.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2020-08-07T05:30:41.6790298Z","RunDurationInMilliseconds":1880}