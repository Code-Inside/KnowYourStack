{"Data":{"Blog":{"FeedItems":[{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40205170294","Type":"PullRequestEvent","CreatedAt":"2024-07-16T22:35:05","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10063","RelatedDescription":"Merged pull request \"Bump Azure.Identity from 1.11.3 to 1.11.4 in /src/NuGetGallery.Core\" (#10063) at NuGet/NuGetGallery","RelatedBody":"Bumps Azure.Identity from 1.11.3 to 1.11.4.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Azure.Identity&package-manager=nuget&previous-version=1.11.3&new-version=1.11.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"},{"Id":"40198300054","Type":"IssuesEvent","CreatedAt":"2024-07-16T17:42:39","Actor":"dtivel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10073","RelatedDescription":"Opened issue \"Replace SHA-1 fingerprints with SHA-256 fingerprints\" (#10073) at NuGet/NuGetGallery","RelatedBody":"SHA-1 fingerprints should not be used.  Use SHA-256 fingerprints instead.  This is for SDL compliance.\r\n\r\nFrom https://github.com/search?q=repo%3ANuGet%2FNuGetGallery%20SHA-1&type=code\r\n\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/src/NuGetGallery/Views/Packages/_ValidationIssue.cshtml#L56\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/src/NuGetGallery.Core/Extensions/ValidationIssueExtensions.cs#L55\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/tests/NuGetGallery.Facts/Infrastructure/Mail/MarkdownMessageServiceFacts.cs#L1375\r\n- https://github.com/NuGet/NuGetGallery/blob/27cbca36096af5897d3d034ec495c37cd110a1c6/tests/NuGetGallery.Facts/Infrastructure/Mail/MarkdownMessageServiceFacts.cs#L2318"},{"Id":"40163256206","Type":"IssuesEvent","CreatedAt":"2024-07-15T18:45:14","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10067","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Alternating table row styling in Dark Mode\" (#10067) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nThe markdown rendering of alternating table row styling doesn't work well in dark mode\r\n\r\nhttps://www.nuget.org/packages/Azure.Identity#credential-classes\r\n\r\n<img width=\"872\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/1288848/726a229d-4736-44d5-9e9d-f9a617f30d4d\">\r\n\n\n### Repro Steps\n\n1. Open https://www.nuget.org/packages/Azure.Identity#credential-classes\r\n2. See the screenshot from above\n\n### Expected Behavior\n\nThe alternate table row styling should work in dark mode.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"40122548114","Type":"PullRequestEvent","CreatedAt":"2024-07-13T18:49:27","Actor":"guibranco","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10072","RelatedDescription":"Opened pull request \"Update Trusted-Image-Domains.json\" (#10072) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add `app.deepsource.com` domain to the trusted image domains list.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9953"},{"Id":"40118296344","Type":"IssuesEvent","CreatedAt":"2024-07-13T10:26:20","Actor":"o-l-a-v","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10071","RelatedDescription":"Opened issue \"[Feature]: Add hosting of PowerShell modules\" (#10071) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nPowerShell Gallery runs NuGet v2 and has various API issues that does not seem to get attention.\r\n\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/267>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/268>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/269>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/270>\r\n* <https://github.com/PowerShell/PowerShellGallery/issues/273>\r\n\r\nPowerShell Gallery seems to be maintained by a small team. I absolutely believe they are doing what they can, with the time and resources they have. But limited resources hurts speed of fixing issues, and thus reliability and quality.\r\n\r\nInstead of keeping the PowerShell Gallery as a separate thing, why not just add PowerShell modules support to nuget.org?\n\n### The Elevator Pitch\n\nPowerShell modules and script are also `.nupkg` files, only with a tag `PSModule` if a module, and `PSScript` if a script, to tell PSResourceGet & PowerShellGet that \"this particular `.nupkg` file is indeed a PowerShell resource\".\r\n\r\n* Let the PowerShell community piggyback nuget.org, and thus get a much better API experience, better reliability, NuGet v3 backend etc.\r\n* Let Microsoft maintain less public infrastructure. Probably can't kill PowerShell Gallery in a heartbeat though.\r\n\r\nCan it be that much work to add that ability to the NuGet Gallery? 🤔 I don't know, which is why I ask.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40113829454","Type":"IssuesEvent","CreatedAt":"2024-07-13T00:50:51","Actor":"donnie-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10070","RelatedDescription":"Opened issue \"De-emphasize Nuspec authors references to nuget.org\" (#10070) at NuGet/NuGetGallery","RelatedBody":"The documentation for `.nuspec` authors indicates that cross-referencing is done between `authors` and NuGet Gallery. See https://learn.microsoft.com/en-us/nuget/reference/nuspec#authors\r\n\r\n> A comma-separated list of packages authors, **matching the profile names on nuget.org**. These are displayed in the NuGet Gallery on nuget.org **and are used to cross-reference packages by the same authors**.\r\n\r\nMy observation is that author is displayed in the Copyright in the footer of the package details page.\r\n\r\nI'd like to remove this verbiage entirely from the document, and focus instead on authors being a freeform metadata. Wanted to verify first whether any cross-referencing is done for other reasons I'm not aware of currently."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40169476113","Type":"IssuesEvent","CreatedAt":"2024-07-15T23:30:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13610","RelatedDescription":"Closed issue \"NU1903 is logged twice\" (#13610) at NuGet/Home","RelatedBody":"```\r\nC:\\Users\\vihofer\\Downloads\\testapp>..\\dotnet-sdk-9.0.100-preview.7.24358.3-win-x64\\dotnet.exe build\r\nRestore succeeded with 2 warning(s) in 0.3s\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Net.Http' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-7jgj-8wvc-jh57\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Text.RegularExpressions' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-cmhx-cq75-c4mj\r\nYou are using a preview version of .NET. See: https://aka.ms/dotnet-support-policy\r\n  testapp succeeded with 2 warning(s) (0.3s) → bin\\Debug\\netstandard1.6\\testapp.dll\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Net.Http' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-7jgj-8wvc-jh57\r\n    C:\\Users\\vihofer\\Downloads\\testapp\\testapp.csproj : warning NU1903: Package 'System.Text.RegularExpressions' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-cmhx-cq75-c4mj\r\n```\r\n\r\nI assume the warning is logged both during restore and during the build target."},{"Id":"40166726060","Type":"IssuesEvent","CreatedAt":"2024-07-15T21:01:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13627","RelatedDescription":"Opened issue \"Package Manager UI fails to load with a NRE due to restore errors\" (#13627) at NuGet/Home","RelatedBody":"Affected Branch: main\r\nAffected Build: Version 17.12.0 Preview 1.0 [35110.85.main]\r\nAffected Product Language: English/All\r\n\r\nSteps to reproduce:\r\n\r\n1.  Construct a package using Central Package Management but miss a PackageVersion for one of the PackageReference items\r\n2. Open in Visual Studio\r\n3. Solution Explorer -> Right click on Solution node -> Manage Nuget Packages for Solution...\r\n4. Displayed yellow bar for \"Error Occurred\"\r\n![a84f0746-a42c-4932-9edf-b8b7f3b6fdc8](https://github.com/user-attachments/assets/61a3e033-4ba6-4efe-8191-1755fe0c4420)\r\n\r\n5. Click on \"Show Errors in Output\"\r\nRESULT:\r\n![d589c0b5-b09a-496a-869d-53eda3f23316](https://github.com/user-attachments/assets/c62cc054-f2d7-4bea-bf22-97b19a9ff9c6)\r\n\r\nEXPECT:\r\n\r\nI see errors in several places in this condition, but for all of them, they say \"Value cannot be null, Parameter name: versionRange\".  If they included what package was the issue, then I can track it down.  In fact, because the version is empty/null/not displayed, the only piece of information I have to track this down is the packageName.  If it had a version and the version was simply not valid SemVer or not found in a source, I could look at the small set of packages with that version to find the cause.\r\n\r\nNOTE\r\nThere is a warning in the Error List: \r\nSeverity Code Description Project File Line Suppression State Details\r\nError NU1010 The PackageReference items Microsoft.VisualStudio.Editor do not have corresponding PackageVersion. EntityDesigner D:\\dd\\ef6tools\\src\\EFTools\\EntityDesignEntityDesigner\\EntityDesigner.csproj 1\r\n\r\nBut the link in the UI brings me to the Package Manager Output window, which doesn't have such a clear message.\r\n\r\n\r\n"},{"Id":"40163236555","Type":"IssuesEvent","CreatedAt":"2024-07-15T18:44:32","Actor":"dylrich","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13626","RelatedDescription":"Opened issue \"dotnet nuget verify doesn't seem to match the checks run on nuget.org\" (#13626) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n8.0.105\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI was attempting to use an alternative nuget signing implementation from jsign when I ran into an issue uploading my nuget package to nuget.org that did *not* appear when I ran `dotnet nuget verify ./mypackage.nupkg`. As a user I would expect that if my package passes the checks in `verify` and my publish operation succeeds, my package should be well-formed and I should not receive a validation error later on from nuget.org. In order to prevent future bugs like https://github.com/ebourg/jsign/issues/234, could the logic used for validation between nuget.org and `dotnet nuget verify` be kept in sync?\n\n### Verbose Logs\n\n_No response_"},{"Id":"40161765700","Type":"IssuesEvent","CreatedAt":"2024-07-15T17:49:53","Actor":"MattKotsenas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13625","RelatedDescription":"Opened issue \"Map branch name from sourcelink to RepositoryBranch for NuGet pack\" (#13625) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nThis is a companion issue for https://github.com/dotnet/sourcelink/issues/1243.\r\n\r\nOnce sourcelink emits the source branch name, NuGet should map that value to `RepositoryBranch` (and follow the existing rules around allowing the user to override).\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40161669031","Type":"IssuesEvent","CreatedAt":"2024-07-15T17:46:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13622","RelatedDescription":"Closed issue \"Possible NuGet vulnerability false positive when transitive package conflicts with BCL?\" (#13622) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 9 SDK Preview 6\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\ncsproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.Common\" Version=\"2.10.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\nBuild from command-line with `dotnet build` (somehow, building from VS succeeds for me):\r\n\r\n```\r\n    C:\\Users\\PC\\source\\repos\\ConsoleApp40\\ConsoleApp40.csproj : error NU1903: Wa\r\nrning As Error: Package 'System.Text.RegularExpressions' 4.3.0 has a known high\r\nseverity vulnerability, https://github.com/advisories/GHSA-cmhx-cq75-c4mj\r\n```\r\n\r\nThis message feels weird, because as I'm on net8.0, the System.Text.RegularExpressions from BCL should be used instead of the one from NuGet package.\n\n### Verbose Logs\n\n_No response_"},{"Id":"40155513141","Type":"IssuesEvent","CreatedAt":"2024-07-15T14:30:15","Actor":"meziantou","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13624","RelatedDescription":"Opened issue \"Define `AuditSources` from an MSBuild property \" (#13624) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe\n\n### The Elevator Pitch\n\nYou recently added the capability to define `<auditSources>` in the NuGet.config file (https://github.com/NuGet/NuGet.Client/pull/5708). \r\n\r\nWe like sharing most project configuration as part of MSBuild files. Would it be possible to be provide an MSBuild property, similar to `RestoreAdditionalProjectSources`, to define the AuditSources?\r\n\r\nAnother point is that we share some properties between multiple projects by using a NuGet package. This package contains MSBuild props/targets that are automatically imported by NuGet (More info about this strategy in this post https://www.meziantou.net/sharing-coding-style-and-roslyn-analyzers-across-projects.htm).\r\nWould it be possible to set the AuditSources in this package?\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40146603390","Type":"IssuesEvent","CreatedAt":"2024-07-15T09:58:12","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13623","RelatedDescription":"Opened issue \"Update dotnet nuget why docs with assets file info\" (#13623) at NuGet/Home","RelatedBody":"When this is complete:\r\n* https://github.com/NuGet/Home/issues/13576\r\n\r\nWe need to update the docs for dotnet nuget why so that we can explain that non-sdk projects can restore with `msbuild -t:restore`, then use `msbuild path\\to\\project.csproj -getProperty:ProjectAssetsFile`, and then pass that assets file path to `dotnet nuget why`."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-17T03:30:19.6437597Z","RunDurationInMilliseconds":933}