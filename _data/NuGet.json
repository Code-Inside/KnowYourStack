{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"26482831618","Type":"IssuesEvent","CreatedAt":"2023-01-17T15:49:59","Actor":"mariuszgromada","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9352","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Download statistics are not updated\" (#9352) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nFor many days now, for some packages, the download statistics show the same value. \r\n\r\n![image](https://user-images.githubusercontent.com/16277367/212944506-2c434a9c-0cbf-4d2c-8b4c-55a65654583e.png)\r\n\r\nConfirmation can also be found in Nuget Trends.\r\n\r\n![image](https://user-images.githubusercontent.com/16277367/212944848-ddf90b75-f300-4598-8d51-8c7b79a11faa.png)\r\n\n\n### Repro Steps\n\nOn this URL: https://www.nuget.org/packages?q=math\r\nOn this URL: https://nugettrends.com/packages?months=24&ids=MathParser.org-mXparser\n\n### Expected Behavior\n\nMathParser.org-mXparser package has c.a. 1500-2000 downloads daily.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"26424199539","Type":"IssuesEvent","CreatedAt":"2023-01-14T01:07:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9336","RelatedDescription":"Closed issue \"[NuGet.org Bug]: HTTP responses aren't reported to user\" (#9336) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIf a package author tries to upload\r\na) a signed package without a registered signing key, or\r\nb) an unsigned package when a signing key is registered,\r\n...the package will not be uploaded and no error message will be shown to the author.\r\n\r\nThe only way to find any kind of information is to open the DevTools and inspect the HTTP response. The HTTP response will look something like\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/209454605-bf34c11d-20f9-4ae3-b557-ced11ce2c24b.png)\r\n\n\n### Repro Steps\n\nSee above\n\n### Expected Behavior\n\nThe error message is shown to the user, and it clearly explains what the author must do in order to upload the package. The error message in the HTTP response **is not** be sufficient.\r\nLinks to documentation that articulates the necessity would also be helpful.\r\n\r\nA slight necessary OT: our organisation maintains several packages some of which are signed and some of which aren't. We can't sign all of the packages (and it's besides the point). Up until recently we published all packages without issues, and now when I tried to upload a new version of the signed package I couldn't do it. After some head scratching and investigations, essentially I was forced to register the signing key. And after that I could no longer upload a new version of the unsigned package....\r\n_If_ this is now \"by design\" this has to be explained, as well as steps to resolve such situations should be provided. \"Sign all your packages\" may not be an option.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"26514197395","Type":"IssuesEvent","CreatedAt":"2023-01-18T19:27:46","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12373","RelatedDescription":"Opened issue \"Static graph-based restore crashes on systems with alternate console encodings\" (#12373) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\nVisual Studio 17.5 and above\n\n### Worked before?\n\nYes, Visual Studio 17.4\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIn Windows Region settings, enable \"Use Unicode UTF-8 for worldwide language support\"\r\n\r\n![image](https://user-images.githubusercontent.com/17556515/213275269-9fd1c932-a002-4da7-9dd1-786230fb913e.png)\r\n\r\nThis seems to make Console.StandardInput have a 3-byte preamble, causing the logic that read the static graph restore arguments to not work correctly.\r\n\r\nReported by @vlada-shubina\r\n\r\nCaused by https://github.com/NuGet/NuGet.Client/pull/4772\n\n### Verbose Logs\n\n_No response_"},{"Id":"26511901794","Type":"IssuesEvent","CreatedAt":"2023-01-18T17:45:03","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12372","RelatedDescription":"Opened issue \"Static graph-based restore should always log an error on failure\" (#12372) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nWhen static graph-based restore runs, the restore is run in a different process.  The logic in this process has a few spots where something can go wrong and the EXE will not log an error.  In rare cases, no error is logged and restore appears to succeed.\n\n### Desired Behavior\n\nAll places in the EXE's code where something can go wrong should log an error and the RestoreTaskEx should consider looking at the exit code in case its non-zero instead of only determining success/failure based on if any errors were logged.\n\n### Additional Context\n\n_No response_"},{"Id":"26504684670","Type":"IssuesEvent","CreatedAt":"2023-01-18T13:00:58","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12324","RelatedDescription":"Closed issue \"Central Package Management restore fails for solutions containing .sfproj project\" (#12324) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, MSBuild.exe, NuGet.exe, Other/NA\r\n\r\n### Product Version\r\n\r\ndotnet 6.0.4, msbuild 17.4, nuget 6.4\r\n\r\n### Worked before?\r\n\r\nUsing packages.props instead Directory.Packages.props\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nConsider an application consisting of a project based on .net6 and a .sfproj project:\r\n\r\n- src\r\n  - Lib1\r\n    - Lib1.csproj (using .NET6 and package reference )\r\n  - App1\r\n    - App1.sfproj (using .NET48 and packages.config)\r\n    - packages.config   \r\n  - Directory.Packages.props\r\n  - App1.sln\r\n\r\nThe solution builds fine form Visual Studio. But when trying to restore the solution from tools like **dotnet, msbuild, nuget** it returns an error similar to this:\r\n**error : Invalid restore input. Invalid target framework 'unsupported'. Input files: **..\\src\\App\\*.sfproj.****\r\nA sample command used:\r\n**C:\\ag\\_work\\_tool\\dotnet\\dotnet.exe restore C:\\src\\App1.sln --packages C:\\src\\App1\\packages --configfile C:\\ag\\_work\\278\\Nuget\\tempNuGet_697647.config --verbosity Detailed /p:Configuration=Debug /p:Platform=x64**\r\n\r\nWhen using the Microsoft.Build.CentralPackageVersions and Packages.props than everything works fine. It works also fine when there are project files targeting .net48 of csproj type instead of sfproj type.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nC:\\ag\\_work\\_tool\\dotnet\\dotnet.exe restore C:\\src\\App1.sln --packages C:\\src\\App1\\packages --configfile C:\\ag\\_work\\278\\Nuget\\tempNuGet_697647.config --verbosity Detailed /p:Configuration=Debug /p:Platform=x64\r\n\r\n2:5>Done building target \"_GenerateProjectRestoreGraphCurrentProject\" in project \"App1.sfproj\".\r\n   2:5>Target \"_GenerateRestoreDependencies\" in file \"C:\\ag\\_work\\_tool\\dotnet\\sdk\\6.0.404\\NuGet.targets\" from project \"C:\\src\\App1\\App1.sfproj\" (target \"_GenerateProjectRestoreGraph\" depends on it):\r\n   2:5>Done building target \"_GenerateRestoreDependencies\" in project \"App1.sfproj\".\r\n   2:5>Target \"_GenerateProjectRestoreGraph\" in file \"C:\\ag\\_work\\_tool\\dotnet\\sdk\\6.0.404\\NuGet.targets\" from project \"C:\\src\\App1\\App1.sfproj\" (entry point):\r\n   2:5>Done building target \"_GenerateProjectRestoreGraph\" in project \"App1.sfproj\".\r\n   2:5>Done Building Project \"C:\\src\\App1\\App1.sfproj\" (_GenerateProjectRestoreGraph target(s)).\r\n     1>Done executing task \"MSBuild\".\r\n     1>Done building target \"_GenerateRestoreGraph\" in project \"App1.sln\".\r\n     1>Target \"Restore\" in file \"C:\\ag\\_work\\_tool\\dotnet\\sdk\\6.0.404\\NuGet.targets\" from project \"C:\\src\\App1\\App1.sfproj\" (entry point):\r\n       Task \"RemoveDuplicates\"\r\n       Done executing task \"RemoveDuplicates\".\r\n       Using \"RestoreTask\" task from assembly \"C:\\ag\\_work\\_tool\\dotnet\\sdk\\6.0.404\\NuGet.Build.Tasks.dll\".\r\n       Task \"RestoreTask\"\r\n         (in) RestoreGraphItems Count '96'\r\n         (in) RestoreDisableParallel 'False'\r\n         (in) RestoreNoCache 'False'\r\n         (in) RestoreIgnoreFailedSources 'False'\r\n         (in) RestoreRecursive 'True'\r\n         (in) RestoreForce 'False'\r\n         (in) HideWarningsAndErrors 'False'\r\n         (in) RestoreForceEvaluate 'False'\r\n         (in) RestorePackagesConfig 'False'\r\n         X.509 certificate chain validation will use the default trust store selected by .NET.\r\n1>C:\\ag\\_work\\_tool\\dotnet\\sdk\\6.0.404\\NuGet.targets(132,5): error : Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\src\\App1\\App1.sfproj. [C:\\src\\App1.sln]\r\n         NuGet.Commands.RestoreSpecException: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\src\\App1\\App1.sfproj.\r\n            at NuGet.Commands.SpecValidationUtility.ValidateFrameworks(PackageSpec spec, IEnumerable`1 files)\r\n            at NuGet.Commands.SpecValidationUtility.ValidateProjectSpecPackageReference(PackageSpec spec, IEnumerable`1 files)\r\n            at NuGet.Commands.SpecValidationUtility.ValidateProjectSpec(PackageSpec spec)\r\n            at NuGet.Commands.SpecValidationUtility.ValidateDependencySpec(DependencyGraphSpec spec, HashSet`1 projectsToSkip)\r\n            at NuGet.Commands.DependencyGraphSpecRequestProvider.GetRequestsFromItems(RestoreArgs restoreContext, DependencyGraphSpec dgFile)\r\n            at NuGet.Commands.DependencyGraphSpecRequestProvider.CreateRequests(RestoreArgs restoreContext)\r\n            at NuGet.Commands.RestoreRunner.CreatePreLoadedRequests(RestoreArgs restoreContext)\r\n            at NuGet.Commands.RestoreRunner.GetRequests(RestoreArgs restoreContext)\r\n            at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n            at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\n            at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n       Done executing task \"RestoreTask\" -- FAILED.\r\n     1>Done building target \"Restore\" in project \"App1.sln\" -- FAILED.\r\n```\r\n"},{"Id":"26503580854","Type":"IssuesEvent","CreatedAt":"2023-01-18T12:12:35","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11262","RelatedDescription":"Closed issue \"Signing:  re-enable signed package verification on Linux and macOS\" (#11262) at NuGet/Home","RelatedBody":"[Design specification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md)\r\n[Technical specification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification-technical.md)"},{"Id":"26501403445","Type":"IssuesEvent","CreatedAt":"2023-01-18T10:32:48","Actor":"Tibe31","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12371","RelatedDescription":"Opened issue \"Central Package Management warning NU1507\" (#12371) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 7\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nI'm trying out the new [Central Package Management](https://devblogs.microsoft.com/nuget/introducing-central-package-management/) feature in NuGet.\r\n\r\nAs stated in the documentation, if you use multiple NuGet sources (which I use), it is now required to configure the Package Source Mapping in a nuget.config file, otherwise you should get a NU1507 warning.\r\n\r\nMy simplified file tree is this:\r\n\r\n- **MySolution.sln**\r\n- **Proj1.csproj**\r\n- **MyLibrary\\\\** (this is an external repository with all my shared projects)\r\n         - **Directory.Packages.props**\r\n         - **nuget.config**\r\n         -  **Proj2\\\\** (an example library project)\r\n         - **Proj2\\\\Proj2.csproj**\r\n\r\nHere is the **Proj1.csproj** content:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <OutputType>Exe</OutputType>\r\n        <TargetFramework>net7.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n    </PropertyGroup>\r\n    <PropertyGroup>\r\n        <DefaultItemExcludes>$(DefaultItemExcludes);MyLibrary\\**\\*</DefaultItemExcludes>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nHere is **Directory.Packages.props**:\r\n\r\n```\r\n<Project>\r\n    <PropertyGroup>\r\n        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <PackageVersion Include=\"JetBrains.Annotations\" Version=\"2022.1.0\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\n\r\nHere is **nuget.config**:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n        <clear/>\r\n        <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\"/>\r\n        <add key=\"Custom NuGet\" value=\"https://nuget.mydomain.net/\"/>\r\n    </packageSources>\r\n\r\n    <packageSourceMapping>\r\n        <packageSource key=\"nuget.org\">\r\n            <package pattern=\"*\"/>\r\n        </packageSource>\r\n        <packageSource key=\"Custom NuGet\">\r\n            <package pattern=\"MyNamespace.*\"/>\r\n        </packageSource>\r\n    </packageSourceMapping>\r\n</configuration>\r\n```\r\n\r\n\r\nand **Proj2.csproj**:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>net7.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n\r\nIn the [official documentation](https://learn.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#how-settings-are-applied) the **MyLibrary\\nuget.config** should be used when restoring the packages because it is in the parent directory of **Proj2.csproj**, and actually it works when I build the solution via dotnet build, but when I build it in Visual Studio I still get the NU1507 warning.\r\n\r\nI know that I could work around the issue by copying the nuget.config file in the same directory as the solution file (the warning goes away), but I have hundreds of projects that include the MyLibrary directory and I'd like to keep all the configuration centralized.\r\n\r\nMoreover it works as expected when it's built from the command line, so what am I doing wrong?\n\n### Verbose Logs\n\n_No response_"},{"Id":"26499442337","Type":"IssuesEvent","CreatedAt":"2023-01-18T09:09:48","Actor":"AndyButland","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12370","RelatedDescription":"Opened issue \"Retrieve only listed versions of a package\" (#12370) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nI might be missing something here, but it doesn't seem that I can use the SDK to retrieve only listed versions of a package.\r\n\r\nUsing `FindPackageByIdResource.GetAllVersionsAsync` you can retrieve all versions of a package, which includes listed and unlisted versions.\r\n\r\nThat would be OK if there was a property on the returned list of `NuGetVersion` objects, that could be used to determine if the version is listed.  For example there's an `IsPrerelease` that can be used to determine which versions are pre-releases, and filter on that if you needed to.  However I don't see anything that can be used to distinguish listed and unlisted versions.\r\n\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"26496940425","Type":"IssuesEvent","CreatedAt":"2023-01-18T06:55:21","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12369","RelatedDescription":"Opened issue \"[Cross-platform Dotnet NuGet Sign] An error occurred when adding the trust for certificate on Mac\" (#12369) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.Net SDK 7.0.102\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. [Patched dotnet SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703).\r\n2. Create a new test certificate: ` .\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile `(in the powershell \"Developer Command Prompt\") on Windows.\r\n3. Copy the .cer file(should be generated under the same path with .pfx file) and the .pfx file from the above Windows machine to macOS machine.\r\n4. Add the trust for certificate: `./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> -vsd <VersionedSdkDirectoryPath>`  on Mac.\r\n\r\n#### Expected:\r\nAdding the trust for certificate is successful.\r\n\r\n#### Actual:\r\nAn error occurred when adding the trust for certificate as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/213104277-5cf743dc-3db0-4a5b-b948-4adf77bba291.png)\r\n#### Notes:\r\n1. The issue doesn’t repro on Windows & Linux.\r\n2. The issue doesn’t repro on .NET SDK Version: 7.0.101 patched with Dev\\6.5.0.136.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"26488550663","Type":"IssuesEvent","CreatedAt":"2023-01-17T20:16:53","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11991","RelatedDescription":"Closed issue \"[Bug]: [Bug Bash] Second-opening the “Version” drop-down list will show the bottom instead of the top after selecting a version in the custom version drop-down box\" (#11991) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nDev\\6.4.0.22\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Details about Problem\r\nVS Version: Main\\32726.62\r\nNuGet Version: Dev\\6.4.0.22\r\nOS Version: Windows-11-Enterprise-21H2 ENU\r\n\r\n#### Detailed repro steps\r\n1. Create a C# Console App (.NET 7.0) in VS and open the PM UI of the project. \r\n2. Click the “Browse” tab and click a package (e.g. “Microsoft.EntityFrameworkCore”) in the list. \r\n3. Click the down-arrow button of the “Version” drop-down box and select a package version (not the latest version) in the “Version” drop-down list. \r\n4. Click the down-arrow button of the “Version” drop-down box again to reopen the version list.\r\n#### Expected\r\nIt will show the top of the version list.\r\n\r\n#### Actual\r\nIt shows the bottom instead of the top as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/181232477-7d0b5a25-013c-4d0f-915c-9b2c02cda5f9.png)\r\n#### Notes:\r\n1.\tIt does not repro for the non-sdk style project [e.g. C# Console App (.NET Framework)] with the same steps.\r\n2.     It reproes on NuGet 6.2.0.131."},{"Id":"26487063415","Type":"IssuesEvent","CreatedAt":"2023-01-17T18:58:34","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10276","RelatedDescription":"Closed issue \"PackageSource:  returns possibly incorrect hash code\" (#10276) at NuGet/Home","RelatedBody":"`NuGet.Configuration.PackageSource` [computes its hash code in its constructor](https://github.com/NuGet/NuGet.Client/blob/788bc01a1b063a37841cdd6d035feb320e90e475/src/NuGet.Core/NuGet.Configuration/PackageSource/PackageSource.cs#L128) based on `name` and `source` values.  However, [the `Source` property is read-write](https://github.com/NuGet/NuGet.Client/blob/788bc01a1b063a37841cdd6d035feb320e90e475/src/NuGet.Core/NuGet.Configuration/PackageSource/PackageSource.cs#L26), which means that the hash code may be incorrect after a new source is set."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-01-19T03:31:54.3165692Z","RunDurationInMilliseconds":1524}