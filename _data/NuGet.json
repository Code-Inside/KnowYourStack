{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"19934885234","Type":"PullRequestEvent","CreatedAt":"2022-01-26T22:24:47","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8957","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.01.25]RI of dev into main\" (#8957) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/8955"},{"Id":"19933133373","Type":"IssuesEvent","CreatedAt":"2022-01-26T20:17:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8961","RelatedDescription":"Opened issue \"[Feature]: Enhance the NuGetGallery backfill tools to allow a specific set of packages to be reprocessed\" (#8961) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nCurrent the backfill tool only allows the full DB to be reprocess via a \"collect\" command then an \"update\" command.\r\n\n\n### The Elevator Pitch\n\nLet's add a way to provide a big list of package IDs and versions to reprocess. These IDs and versions can be sourced from NuGet.Insights or Gallery DB depending on the situation. \n\n### Additional Context and Details\n\nIt looks like we may have some data issues in the package compatible frameworks data. This will allow us to fix bugs and reprocess select packages which is much faster than a full backfill."},{"Id":"19933101330","Type":"PullRequestEvent","CreatedAt":"2022-01-26T20:14:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8960","RelatedDescription":"Opened pull request \"Add option to backfill tools for specific IDs list\" (#8960) at NuGet/NuGetGallery","RelatedBody":"We have found some cases in the TFM data where we may need to reprocess several thousand packages to fix their data. \r\n\r\nThis update to the backfill tool allows a list of package IDs to be provided instead of backfilling everything in the DB.\r\n\r\nSee the README changes for more information.\r\n\r\n/cc @dannyjdev "},{"Id":"19931139813","Type":"PullRequestEvent","CreatedAt":"2022-01-26T18:04:50","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8958","RelatedDescription":"Merged pull request \"[DB Migration] Fix the tool\" (#8958) at NuGet/NuGetGallery","RelatedBody":"Following the similar solution as https://github.com/NuGet/NuGetGallery/pull/8930, we need to add the project dependency of \"NuGet.Services.Entities\" as the direct dependency of \"DatabaseMigrationTools\". Without this direct dependency, DLL doesn't seem being generated or placed after the build on CI.\r\n\r\nThe issue should be related to the mixed dependences of projects and packages and some client's edge cases.\r\n\r\nMain dependency chains:\r\n\r\n**Project Reference**:\r\n1. DatabaseMigrationTools -> NuGetGallery -> NuGetGallery.Core -> NuGet.Services.Entities\r\n2. DatabaseMigrationTools -> NuGetGallery -> NuGet.Services.Entities\r\n\r\n**Package Reference**:\r\n1. DatabaseMigrationTools -> NuGet.Services.DatabaseMigration -> NuGet.Jobs.Common ->                                 NuGetGallery.Core -> NuGet.Services.Entities\r\n\r\n\"NuGet.Services.Validation\" is added to support the migration of Validation DB as before.\r\n\r\ncc @shishirx34 \r\n\r\n"},{"Id":"19929563705","Type":"IssuesEvent","CreatedAt":"2022-01-26T16:35:14","Actor":"repelentosa","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8959","RelatedDescription":"Opened issue \"[NuGet.org Bug]: A lot of SPAM - PHISHING websites into NUGET!\" (#8959) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nHello DEVs.\r\n\r\nI am user of NUGET since 5 months, but i found a LOT OF SPAMMY/PISHING WEBSITES!\r\nHow it is possible?\r\nPart of links:\r\nhttps://www.nuget.org/packages/Unused-Free-PSN-Codes-Generator-App-2022-XtC/\r\nhttps://www.nuget.org/packages/Hack-Among.Us.Hack.Unlimited.2022/3.0.2\r\nhttps://www.nuget.org/packages/BUXFLY-ROBUX-HACK-2022-JANUARY-28-2022/\r\n\r\n\r\nand more more.\r\n\r\nHOW TO FIX IT?\r\n\r\nThanks for review, best regards.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nhttps://www.myget.org/feed/verified/package/nuget/Free-PSN-Codes-List-2022-Unused-Codes-For-Playstation-Plus-PS4-Sh9d\n\n### Repro Steps\n\nspammy links\n\n### Expected Behavior\n\nspammy links\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"19918865993","Type":"PullRequestEvent","CreatedAt":"2022-01-26T04:02:14","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8958","RelatedDescription":"Opened pull request \"[Db Migration] Fix the tool\" (#8958) at NuGet/NuGetGallery","RelatedBody":"Following the similar solution as https://github.com/NuGet/NuGetGallery/pull/8930, we need to add the project dependency of \"NuGet.Services.Entities\" as the direct dependency of \"DatabaseMigrationTools\". Without this direct dependency, DLL doesn't seem being generated or placed after the build on CI.\r\n\r\nThe issue should be related to the mixed dependences of projects and packages and some client's edge cases.\r\n\r\nMain dependency chains:\r\n**Project Reference**: 1. DatabaseMigrationTools -> NuGetGallery -> NuGetGallery.Core -> NuGet.Services.Entities\r\n                              2. DatabaseMigrationTools -> NuGetGallery -> NuGet.Services.Entities\r\n**Package Reference**: 3. DatabaseMigrationTools -> NuGet.Services.DatabaseMigration -> NuGet.Jobs.Common -> \r\n                                NuGetGallery.Core -> NuGet.Services.Entities\r\n\r\n\"NuGet.Services.Validation\" is added to support the migration of Validation DB as before.\r\n\r\ncc @shishirx34 \r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"19935427067","Type":"IssuesEvent","CreatedAt":"2022-01-26T23:12:32","Actor":"SimonCropp","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11527","RelatedDescription":"Opened issue \"[Feature]: Add an option for packages to have a \"requires payment\" setting\" (#11527) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nThis setting would be a key to a known list of \"payed license\" providers. For example GitHub, OpenCollective, Patreon etc. Each of these providers would implement a convention based web API. When someone adds or updates the package, their id is validated against the providers API. If it fails the API returns a url that can be shown to the user so they can purchase a license or otherwise resolve the issue.\r\n\r\nPackage restore would bypass this process.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"19935282845","Type":"IssuesEvent","CreatedAt":"2022-01-26T22:59:49","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11401","RelatedDescription":"Closed issue \"PackageSearchMetadata allocates PackageIdentity on every access to the identity property. \" (#11401) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/blame/dev/src/NuGet.Core/NuGet.Protocol/Model/PackageSearchMetadata.cs#L47\r\n![image](https://user-images.githubusercontent.com/8766776/142551366-e449fe70-5a26-454d-85ae-514e5cffba8d.png)"},{"Id":"19934978450","Type":"IssuesEvent","CreatedAt":"2022-01-26T22:32:36","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11521","RelatedDescription":"Closed issue \"[Bug]: VS package source options clears all checkboxes when adding or removing sources\" (#11521) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\n17.1 preview 4\r\n\r\n### Worked before?\r\n\r\n17.1 preview 3\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\nOpen Visual Studio's Options, and go to NuGet Package Manger/Package Sources. If you click the + or - buttons to add or remove a source, all the enabled sources will have their checkboxs cleared. Note that the enabled state is unchanged, so if you save changes, close the options window, then come back, they show as enabled again. Just the checkbox state is temporarily reset to off.\r\n\r\n\r\n### Verbose Logs\r\n\r\n"},{"Id":"19930803171","Type":"IssuesEvent","CreatedAt":"2022-01-26T17:44:12","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11526","RelatedDescription":"Opened issue \"[Bug]: Extracting package with NuGet.Packaging throws ArgumentNullException when `ILogger` is null\" (#11526) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n6.2 preview\n\n### Worked before?\n\n6.1\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nSee https://github.com/dotnet/sdk/pull/23563\n\n### Verbose Logs\n\n_No response_"},{"Id":"19929078165","Type":"IssuesEvent","CreatedAt":"2022-01-26T16:11:19","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10011","RelatedDescription":"Closed issue \"nuget verify ignores NuGet.Config file or trusted-signers list\" (#10011) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 v19041\r\n\r\nWorked before? If so, with which NuGet version: No.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Generated a self-signed certificate using script found in [docs](https://docs.microsoft.com/en-us/nuget/create-packages/sign-a-package#create-a-test-certificate)\r\n\r\n2. Executed following command to sign the package\r\n\r\n`nuget sign \"<Package-Path>\" -CertificateStoreLocation CurrentUser -CertificateStoreName My -CertificateSubjectName 'NuGet Test Developer' -OutputDirectory \"<Output-Path>\" -verbosity detailed`\r\n\r\n3. Added a [trusted signer](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-trusted-signers) using CLI command to NuGet.Config file (path = `%AppData%\\NuGet\\NuGet.Config`). `allowUntrustedRoot` is set to `true`.\r\n``` xml\r\n  <trustedSigners>\r\n    <author name=\"ClassLibrary16\">\r\n      <certificate fingerprint=\"<Removed>\" hashAlgorithm=\"SHA256\" allowUntrustedRoot=\"true\" />\r\n    </author>\r\n  </trustedSigners>\r\n```\r\n4. Executed `nuget verify \"<Package-Path>\" -Signatures -ConfigFile \"<Path to Config File>\"` and `nuget verify \"<Package-Path>\" -Signatures` commands which failed to verify the package with the following error message.\r\n\r\n```\r\nSignature Hash Algorithm: SHA256\r\nWARNING: NU3027: The signature should be timestamped to enable long-term signature validity after the certificate has expired.\r\nSignature type: Author\r\nVerifying the author primary signature with certificate:\r\n  Subject Name: CN=NuGet Test Developer, OU=Use for testing purposes ONLY\r\n  SHA1 hash: <Removed>\r\n  SHA256 hash: <Removed>\r\n  Issued by: CN=NuGet Test Developer, OU=Use for testing purposes ONLY\r\n  Valid from: <Removed>\r\n\r\nNU3018: The author primary signature found a chain building issue: UntrustedRoot: A certificate chain processed but terminated in a root certificate which is not trusted by the trust provider.\r\nThe author primary signature's certificate chain validation failed with error(s): UntrustedRoot\r\nFinished with 1 error and 1 warning.\r\n``` \r\n@heng-liu pointed me to a similar issue reported in [stackoverflow ](https://stackoverflow.com/questions/59179504/cant-verify-signatures-with-nuget)\r\n\r\n/cc @dtivel @zkat @aortiz-msft"},{"Id":"19929078093","Type":"IssuesEvent","CreatedAt":"2022-01-26T16:11:19","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10774","RelatedDescription":"Closed issue \"dotnet nuget verify command is not using the nuget.config\" (#10774) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\n\n## Details about Problem\n\nNuGet product used (dotnet.exe):\n\nProduct version: 5.9\n\nWorked before? If so, with which NuGet version: n/a\n\n## Repro steps and/or sample project\n\nLet we have broken/missing tag in nuget.config file, then `nuget.exe` check it before doing verify but dotnet.exe start doing verify action without checking it. I believe we should check integrity of nuget.config before doing any action since so many logics depend on it.\n\n`nuget59 verify -all ..\\TestSigned\\TestSigned.1.0.0.nupkg`\n\nNuGet.Config is not valid XML. Path: 'C:\\Users\\eryondon\\source\\repos\\SigningDemo\\nuget.config'.\n  The 'trustedSigners' start tag on line 15 position 4 does not match the end tag of 'trustedSigner'. Line 21, position 5.\n\n`dotnet nuget verify ..\\TestSigned\\TestSigned.1.0.0.nupkg`\n\nerror: NU3018: The author primary signature found a chain building issue: UntrustedRoot: A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.\nerror:\nerror: Package signature validation failed.\n### Verbose Logs\n\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\n"},{"Id":"19916921467","Type":"IssuesEvent","CreatedAt":"2022-01-26T00:17:05","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11476","RelatedDescription":"Closed issue \"[Bug]: IVsPackageInstaller sometimes deadlocks when called on background thread\" (#11476) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nall?\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nVisual Studio extensions can reference `NuGet.VisualStudio` to use NuGet's APIs in Visual Studio, including `IVsPackageInstaller(2)` which can install packages in projects programatically.  In NuGet 6.0.0 (VS 17.0), [we documented that these APIs can be called from a background thread](https://github.com/NuGet/NuGet.Client/pull/4209). However, under the following scenario there can be a deadlock:\r\n\r\n1. The extension uses JTF.Run to run some async code that switches to a background thread and blocks the UI thread until this background thread work completes\r\n2. The background thread work calls into `IVsPackageInstaller.InstallPackage`\r\n3. NuGet's `VsPackageInstaller` uses `PumpingJTF`, but on the background thread, not the UI thread\r\n4. When the project uses packages.config and the package contains `tools/install.ps1`, NuGet runs the powershell script, also on a background thread\r\n5. Since NuGet passes `DTE.Project` to the script, the .NET runtime wants to do COM RPC on the UI thread, but the .NET runtime doesn't know anything about JTF and therefore deadlocks the code blocking in step 1.\r\n\r\nThe deadlock doesn't happen when none of the packages being installed contain a powershell files, or if the project uses `PackageReference` (since any powershell scripts aren't run).\r\n\r\n**mitigation**: If the VS extension calling NuGet either does not block the UI thread (don't do step 1 above), or calls NuGet on the UI thread, then this will not deadlock.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"19916915250","Type":"IssuesEvent","CreatedAt":"2022-01-26T00:16:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9745","RelatedDescription":"Closed issue \"INuGetProjectService.GetInstalledPackagesAsync should return the actual version installed rather than the requested one\" (#9745) at NuGet/Home","RelatedBody":"Self explanatory - currently the version return is requested one. The versions are the same *most* of the time and the old service has this issue too.\r\n\r\nRelated: https://github.com/NuGet/Home/issues/9702\r\n\r\nFYI @zivkan \r\n@aortiz-msft Marking this as 5.8, should be made easy by @martinrrm's work. "},{"Id":"19916915184","Type":"IssuesEvent","CreatedAt":"2022-01-26T00:16:21","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9746","RelatedDescription":"Closed issue \"INuGetProjectService.GetInstalledPackagesAsync should return the transitive packages\" (#9746) at NuGet/Home","RelatedBody":"Self explanatory - the model already has already contains a bool.\r\n\r\nRelated: https://github.com/NuGet/Home/issues/9702\r\n\r\nFYI @zivkan \r\n@aortiz-msft Marking this as 5.8, should be made easy by @martinrrm's work. "},{"Id":"19916837336","Type":"IssuesEvent","CreatedAt":"2022-01-26T00:08:07","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11521","RelatedDescription":"Opened issue \"[Bug]: VS package source options clears all checkboxes when adding or removing sources\" (#11521) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.1 preview\n\n### Worked before?\n\n17.0\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nOpen Visual Studio's Options, and go to NuGet Package Manger/Package Sources. If you click the + or - buttons to add or remove a source, all the enabled sources will have their checkboxs cleared. Note that the enabled state is unchanged, so if you save changes, close the options window, then come back, they show as enabled again. Just the checkbox state is temporarily reset to off.\r\n\n\n### Verbose Logs\n\n```shell\nThis probably only happens on Microsoft internal builds of VS. The commit that introduced the regression hasn't yet shipped in a public preview.\n```\n"},{"Id":"19913113765","Type":"PullRequestEvent","CreatedAt":"2022-01-25T19:19:01","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11374","RelatedDescription":"Merged pull request \"Search by Target Framework & Supported Platforms on NuGet.org\" (#11374) at NuGet/Home","RelatedBody":"Introduction to a filtering concept on NuGet.org to allow filtering for target framework monikers and supported platforms of various generations of .NET.\r\n\r\n[Rendered Spec](https://github.com/NuGet/Home/blob/c07fe38f029f5dd78c4ae264fc28e954b398f93b/proposed/2021/TargetFrameworkAndPlatformsFilters.md)\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2022-01-27T03:30:26.1517731Z","RunDurationInMilliseconds":1440}