{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27535928743","Type":"PullRequestEvent","CreatedAt":"2023-03-07T03:26:55","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9425","RelatedDescription":"Opened pull request \"add domain avatars.githubusercontent.com\" (#9425) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9330"},{"Id":"27529146858","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:31:38","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9424","RelatedDescription":"Opened issue \"[A11y]Tooltip for \"Package has Vulnerabilities\" icon in version list renders offscreen when screen is narrow\" (#9424) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744522\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nPre-Requisites:\r\nPress \"Ctrl+Shift+I\" to open developer tool.\r\nNow in dock side click on \"undock into separate window\" so that developer tool will get open in separate window.\r\nZoom the browser of the screen to be tested to 200%.\r\nAdjust the screen to 320px*256px.\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"Version History\" control and hit enter.\r\nApply reflow and observe whether \"Version history\" tooltip is not visible.\r\n\r\nActual Result:\r\nOn applying reflow, Version history tooltip in \"Version\" tab is not visible.\r\n\r\nExpected Result:\r\nOn applying reflow, \"Version history\" tooltip in \"Version\" tab content should be completely visible.\r\n\r\nNotes:\r\nThis tooltip is a custom (I believe Bootstrap) control and thus doesn't always follow browser expectation when rendering. As such, I believe it is rendering outside of the viewport when it renders on a narrow screen. Not 100% sure what the best option here is. One option is to have it render on the other side (left instead of right) when screen is narrow)."},{"Id":"27528961555","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:22:50","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9423","RelatedDescription":"Opened issue \"[A11y][ScreenReader]More Information link on search results page is ambiguous\" (#9423) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745384\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nCheck whether \"More Information\" link is descriptive or not.\r\n\r\nNotes:\r\nIt should be sufficient for us to augment the More Information link to read \"More Information about {PackageId}\""},{"Id":"27528863887","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:18:12","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9422","RelatedDescription":"Opened issue \"[A11y]Screen reader starts over from beginning when applying filters.\" (#9422) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1749979\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nTab till filter present at left side of screen and apply any filter.\r\nObserve that screen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nActual Result:\r\nScreen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nExpected Result:\r\nScreen reader should not announce all the details from the beginning when we apply filter, it should only announce the status message that \"812 packages returned for json\"\r\n\r\nNotes:\r\nUnfortunately, I believe this is relatively nontrivial to fix on our side. From my understanding of this issue and the feature, this is caused by the fact that hitting applying appear to redo the search with filters enabled, causing a page refresh. When the page refreshes, context on keyboard nav etc is lost. In theory, it should be possible to pass context to the next page, but I am unsure that this the right fix long term."},{"Id":"27528683909","Type":"IssuesEvent","CreatedAt":"2023-03-06T20:09:56","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9421","RelatedDescription":"Opened issue \"[A11y][ScreenReader]Compatible Framework tab does not convery compatible vs computed additional frameworks\" (#9421) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1746058\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: https://dev.nugettest.org/\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen Reader: JAWS.\r\n\r\nRepro Steps:\r\nHit the URL: https://dev.nugettest.org/\r\n\"NuGet\" screen will open.\r\nTab to search button and press enter.\r\n\"Packages\" screen will open then tab to any package like \"Newtonsoft.Json \" and select it by pressing enter key.\r\n\"Newtonsoft.Json \" package screen will open.\r\nTab to \"Frameworks\" tab and press enter.\r\nObserve whether screen reader is not announcing as a Compatible target framework(s) for dark blue color version.\r\n\r\nActual Result:\r\nScreen reader is not announcing category of framework for version which are differentiated with color. For ex. Compatible target framework(s) for dark blue color version.\r\n\r\nExpected Result:\r\nScreen reader should announce category of framework for version which are differentiated with color.\r\n\r\nNotes:\r\nThe screen reader on this is already fairly verbose. I am unsure how we would do this without making even more verbose. It may be ok to increase the verbosity, but it doesn't feel like a good solution to me."},{"Id":"27528270667","Type":"IssuesEvent","CreatedAt":"2023-03-06T19:50:37","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9420","RelatedDescription":"Opened issue \"[A11y]Focus order on Organization Management is not correct.\" (#9420) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744473\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “Manage Organizations” from the Profile Dropdown and hit enter.\r\nNavigate to \"Add New\" control and hit enter.\r\nEnter values in \"Organization Name\" and \"Organization Email Address\" and hit enter on \"Add\" Control.\r\nAgain Select “Manage Organizations” from the Profile Dropdown and hit enter.\r\n\"Organizations\" screen gets opened.\r\nNavigate to Member and press enter.\r\nObserve whether the focus order is incorrect after pressing \"View Member Profile\"\r\n\r\nActual Result:\r\nThe focus order is not in left to right order after expanding \"View Member Profile\"\r\n\r\nExpected Result:\r\nKeyboard focus order should move in logical order after pressing tab key \"View member profile, Combo box and then Close button\".\r\n\r\nNotes:\r\nThis is probably due to the order of the elements in the DOM not matching the displayed order, as tab order is handled by browser (unless we explicitly override it)"},{"Id":"27528142010","Type":"IssuesEvent","CreatedAt":"2023-03-06T19:44:17","Actor":"salem84","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9419","RelatedDescription":"Opened issue \"[Feature]: Allow images from https://betterplaceholder.com/\" (#9419) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nAllow images from [betterplaceholder](https://betterplaceholder.com/). This domain can be useful for creating a color table as:\r\n\r\n![image](https://user-images.githubusercontent.com/219757/223213608-a7848f0e-b22a-46b2-821f-56596911a27e.png)\r\n\r\nImages are available on _via.placeholder.com_ domain.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27527570576","Type":"IssuesEvent","CreatedAt":"2023-03-06T19:16:25","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9418","RelatedDescription":"Opened issue \"[A11y][ScreenReader]Package Manager tab on Package details reads as both selected and expanded\" (#9418) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744434\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen Reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"PackageReference\" control and hit enter.\r\nObserve whether screen reader should announce only one state as 'selected' or not.\r\n\r\nActual Result:\r\nScreen reader is announcing two states as 'selected and expanded' for \"package reference\" tab item.\r\n\r\nExpected Result:\r\nScreen reader should announce only one states as 'selected' for \"package reference\" tab item.\r\n\r\nNotes:\r\nThese controls appears to have aria-expanded defined on them for some reason. I am unsure why this is the case, but it seems like removing it will address the issue here. However, I don't know what other issues it might introduce."},{"Id":"27527461885","Type":"IssuesEvent","CreatedAt":"2023-03-06T19:11:39","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9417","RelatedDescription":"Opened issue \"[A11y]Add appropriate heading tags to elements\" (#9417) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1743931\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter and Unselect Push Checkbox\r\nRun AI4W and check the heading tags are provided or not\r\nCheck whether heading level tag is provided to the text \"Select Scopes and Select Packages\" or not.\r\n\r\nNOTE: Similar issue is observed for below screen also.\r\n\r\nHit the URL:https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter.\r\nEnter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\nNavigate to \"Manage\" control and hit enter on \"Edit\" control.\r\nObserve that No heading tag is provided to the text \"Select Package\".\r\n\r\nActual Result:\r\nNo heading tag is provided to the text \"Select Scopes and Select Packages\"\r\n\r\nExpected Result:\r\nH3 Heading level should be assigned to text \"Select Scopes and Select Packages\"\r\n\r\nNotes:\r\nThis SHOULD be as simple as changing the element to a H3 and applying the relevant styles."},{"Id":"27527172018","Type":"IssuesEvent","CreatedAt":"2023-03-06T18:59:12","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9416","RelatedDescription":"Opened issue \"[A11y]Keyboard Focus is not visible in some locations\" (#9416) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1743910\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise Insider Preview\r\nOS build 25275.1000.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter.\r\nEnter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\nNavigate to \"Manage\" control and hit enter.\r\nObserve whether \"edit, Regenerate, delete\" keyboard focus is clearly visible or not visible.\r\n\r\nSimilar issue is observed for below screen also.\r\n\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"Owners\" section present on bottom right of the screen.\r\nObserve whether \"Profile\" keyboard focus is clearly visible or not visible.\r\n\r\nActual Result:\r\nKeyboard focus on \"Edit, Regenerate, delete\" is not clearly visible.\r\n\r\nExpected Result:\r\nKeyboard focus should be completely visible on the control wherever focus lands. It should be visible on all four sides on \"Edit, Regenerate, Delete\".\r\n\r\nNotes:\r\nThe display (inline) and the packing of the elements around these appear to be covering the area that they keyboard focus border is highlighting. Unfortunately, it is not as easy as adding additional padding/margin around the elements as the inline display prevents some of the height changes. We will need to experiment with this a bit more to figure out a view with enough spacing to be able to see our keyboard focus."},{"Id":"27526918202","Type":"IssuesEvent","CreatedAt":"2023-03-06T18:47:08","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9415","RelatedDescription":"Opened issue \"[A11y]Ensure Aria Attributes are allowed for an element's role\" (#9415) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1743237\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise Insider Preview\r\nOS build 25275.1000\r\nChrome version: 109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL:https://www.nuget.org/\r\n Navigate to \"Sign in\" control and hit enter.\r\n Navigate to \"Sign in with Microsoft\" control and hit enter.\r\n Select “API Keys” from the Profile Dropdown and hit enter.\r\n Navigate to \"Create\" button and hit enter and Unselect Push Checkbox.\r\nRun AI4W and observe that Ensures ARIA attributes are allowed for an element's role (#create-container)\r\nSimilar issue is observed for below screen also.\r\n\r\nHit the URL:https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter.\r\nEnter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\nNavigate to \"Manage\" control and hit enter.\r\nNote: Similar issue observed in throughout application.\r\n\r\nIssue: \r\nEnsures ARIA attributes are allowed for an element's role (aria-allowed-attr - https://accessibilityinsights.io/info-examples/web/aria-allowed-attr)\r\n\r\nNotes:\r\nWe have had to fix this kind of issue in the past. The best thing to do here is likely going to be to select an aria-role that will correctly allow assistive technologies to identify this as a control and not a div. See https://www.w3.org/TR/wai-aria/#roles_categorization"},{"Id":"27526771029","Type":"IssuesEvent","CreatedAt":"2023-03-06T18:40:07","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9414","RelatedDescription":"Opened issue \"[A11y][TFM] Tooltip icon present beside Frameworks label is defined as both 'frameworks filter information' link and tooltip info button.\" (#9414) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745398\r\n\r\nEnvironment Details:\r\nApplication Name: Filtering by Target Frameworks\r\n#URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nWindows Version: Win11\r\nOS Version: 22621.1105\r\nChromium Edge Version: Version 109.0.1518.78 (Official build) (64-bit)\r\n\r\nRepro Steps: \r\nHit the URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nTab to Frameworks section.\r\nTab to the tooltip icon present beside Frameworks label.\r\nPress Enter and observe that tooltip info icon is behaving as a Link.\r\nAgain Tab to the same tooltip icon present beside Frameworks label .\r\nPress Tab again.\r\nObserve that now tooltip information appears on the same icon.\r\n\r\nActual Result:\r\nTooltip icon present beside Frameworks label is defined as both 'frameworks filter information' link and tooltip info button.\r\n\r\nExpected Result:\r\nTooltip icon present beside Frameworks label should be defined only as Tooltip info button and 'frameworks filter information' link should be separated from that control.\r\n\r\nNotes:\r\nThe observed keyboard interaction is a bit confusing. The cleanest thing to do there is likely going to be to separate the hover tooltip information and the link to additional information."},{"Id":"27526678670","Type":"IssuesEvent","CreatedAt":"2023-03-06T18:35:40","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9413","RelatedDescription":"Opened issue \"[A11y][TFM]Name defined for the buttons 'shows and hides TFM filters' is not descriptive enough\" (#9413) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745270\r\n\r\nEnvironment Details:\r\nApplication Name: Filtering by Target Frameworks\r\n#URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nWindows Version: Win11\r\nOS Version: 22621.1105\r\nChromium Edge Version: Version 109.0.1518.78 (Official build) (64-bit)\r\n\r\nRepro Steps: \r\nHit the URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nTab to Frameworks section.\r\nTab to the collapse/expand buttons present in the Frameworks section.\r\nInspect the name of the buttons using developer tools options (ctrl+shift+I).\r\nObserve that name for all the collapse/expand buttons is 'shows and hides TFM filters' which is not descriptive enough.\r\n\r\nActual Result:\r\nName defined for the buttons 'shows and hides TFM filters' is not descriptive enough as there are 4 buttons with the same name in frameworks section.\r\n\r\nExpected Result:\r\nName defined for the buttons 'shows and hides TFM filters' should be descriptive enough as there are 4 buttons with the same name in frameworks section.\r\n\r\nNotes:\r\nI think these buttons should read \"Shows and Hides TFM filters for {Framework}\" assuming that I have understood the feature correctly. Updating labels should be sufficient to fix this."},{"Id":"27526636122","Type":"IssuesEvent","CreatedAt":"2023-03-06T18:33:35","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9412","RelatedDescription":"Opened issue \"[A11y][TFM]Narrator/NVDA is not announcing the state for the control 'shows and hides TFM filters' \" (#9412) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1751374\r\n\r\n\r\nEnvironment Details:\r\nApplication Name: Filtering by Target Frameworks\r\n#URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nWindows Version: Win11\r\nOS Version: 22621.1105\r\nChromium Edge Version: Version 109.0.1518.78 (Official build) (64-bit)\r\nChrome Version: Version 110.0.5481.77 (Official Build) (64-bit)\r\nScreen reader version: Narrator/ NVDA 2022.2\r\n\r\nRepro Steps: \r\nHit the URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nTab to Frameworks section.\r\nTab to the collapse/expand buttons present in the Frameworks section.\r\nTurn on Narrator/NVDA.\r\nObserve that screen reader is not announcing the state whether collapsed/expanded or hidden/shown for the control 'shows and hides TFM filter'.\r\n\r\nActual Result:\r\nNarrator/NVDA is not announcing the state for the control 'shows and hides TFM filters'  whether it is collapsed/expanded or hidden/shown.\r\nExpected Result:\r\nNarrator/NVDA should announce the state for the control 'shows and hides TFM filters' whether it is collapsed/expanded or hidden/shown.\r\n\r\nNotes:\r\nThe expander on the TFM filters doesn't appear to be marked as a control with a state. We have other custom expander controls on other pages and should be able to fix this by replicating the aria state on those controls."},{"Id":"27525748595","Type":"IssuesEvent","CreatedAt":"2023-03-06T17:55:50","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9183","RelatedDescription":"Closed issue \"[Readme] Add warning on NuGet.org for no Readme\" (#9183) at NuGet/NuGetGallery","RelatedBody":"Add info/warm message on NuGet.org for no Readme\n\n\nNuGet upload UI shows a friendly message encouraging users to adopt best practices (license, README) | Package publishers who us the NuGet.org publish UI (~50%) "},{"Id":"27525746667","Type":"IssuesEvent","CreatedAt":"2023-03-06T17:55:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9223","RelatedDescription":"Closed issue \"[License]Add warning/info message about missing License on upload page\" (#9223) at NuGet/NuGetGallery","RelatedBody":"Add warning/info message about missing License on upload page to encourage package authoring best practices."},{"Id":"27496151979","Type":"IssuesEvent","CreatedAt":"2023-03-05T06:29:28","Actor":"WhiteBlackGoose","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9411","RelatedDescription":"Opened issue \"[Feature]: Option to enable international ISO date time format\" (#9411) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nRandom order of day, month, and year is not very helpful. From my understanding, the fix [has already existed](https://github.com/NuGet/NuGetGallery/commit/bd01fbe251b0929bc31c743d94a54415048b9bfb), but now it's back to showing locale settings.\n\n### The Elevator Pitch\n\nOption to enable ISO8601 date format, as it already is on hover\r\n\r\n![image](https://user-images.githubusercontent.com/31178401/222945377-72e134ac-eb4b-4275-baf8-1b40cdb48949.png)\r\n\r\n(honestly, it should be a default, like it is on many other websites, but anyway, an option would at least make a step towards it)\r\n\r\nThanks\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27488309302","Type":"PullRequestEvent","CreatedAt":"2023-03-04T10:04:13","Actor":"knocte","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9409","RelatedDescription":"Closed pull request \"Fix Script & Interactive tab #r nuget clause\" (#9409) at NuGet/NuGetGallery","RelatedBody":"It was missing the `Version=` part so it would have never worked like that."},{"Id":"27484127931","Type":"IssuesEvent","CreatedAt":"2023-03-04T00:08:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9410","RelatedDescription":"Opened issue \"[Search-by-TFM] Allow users to OR multiple framework selections in addition to existing AND behavior\" (#9410) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\n\r\nThe default filtering behavior when multiple Framework Generations or TFMs are selected is to **AND** the selections and show packages that fall in the intersection of these frameworks (i.e. packages targeting both 'net472' _AND_ 'netcoreapp3.1').\r\n\r\nUsers may want to combine multiple selections with an **OR** (i.e. packages targeting either 'net6.0' _OR_ 'net7.0').\r\n\r\n### Solution\r\n\r\nWe could allow users to toggle a switch choosing how to combine their Frameworks filters, with OR and AND as the two options.\r\n\r\nCan we have more complex combination logic, something like:  ('net6.0' _OR_ 'net7.0') _AND_ 'netstandard2.1'?"},{"Id":"27483938388","Type":"PullRequestEvent","CreatedAt":"2023-03-03T23:51:25","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9398","RelatedDescription":"Merged pull request \"URL redirect and ValidateIssuer CodeQL bugs\" (#9398) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4790\r\nPart of https://github.com/NuGet/Engineering/issues/4593\r\n\r\nThis PR addresses 4 NuGetGallery CodeQL issues.\r\n\r\n1. **AuthenticationController.cs (2)**\r\n    - _Problem:_ Untrusted URL redirection due to user-provided value. ([Bug #1632796](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632796), [Bug #1632797](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632797))\r\n    -  _Solution:_ The redirect URLs used here are relative site URLs generated by us, and do not use any user-provided values. **To avoid unwanted redirection, we now check that the returnUrl is a relative Url, and redirect to the 'Home' page if it isn't.**\r\n3. **ValidateRecaptchaResponseAttribute.cs (1)**\r\n    - _Problem:_ Potential server side request forgery due to a user-provided value flowing to a constructor or method from class \r\n                         System.Net.Http.HttpClient. ([Bug #1632800](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632800))\r\n    -  _Solution:_ The Recaptcha validation URL flagged here does not use any user-provided values either. These values are generated by client-side reCAPTCHA code. The mitigation here is that the validation Url is limited to a specific host, which should prevent unwanted redirection. **Added a suppression comment.**\r\n5. **AzureActiveDirectoryV2Authenticator.cs (1)**\r\n    - _Problem:_ \"The security sensitive property ValidateIssuer is being disabled by the followign value: false.\" We were disabling \r\n                         the ValidateIssuer flag in our AAD auth. When Issuer Validation is turned on, the issuer in the token is compared \r\n                         against a list of accepted tenants. ([Bug #1632802](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632802))\r\n    -  _Solution:_  We have a multi-tenant app, and do not restrict token issuers to a limited set of tenants, so we can keep this \r\n                         flag off. **Added a suppression comment.**\r\n\r\n"},{"Id":"27459279654","Type":"IssuesEvent","CreatedAt":"2023-03-03T01:09:50","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8877","RelatedDescription":"Closed issue \"[README]: Allow Azure Pipelines Badge Images in README.md\" (#8877) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI use badge images from Azure Pipelines like this:\r\n\r\n[![Serilog.Enrichers.Span package in serilog-exceptions feed in Azure Artifacts](https://feeds.dev.azure.com/serilog-exceptions/_apis/public/Packaging/Feeds/8479813c-da6b-4677-b40d-78df8725dc9c/Packages/3f8a2a7e-8124-4987-9c44-916dba83b9d6/Badge)](https://dev.azure.com/serilog-exceptions/Serilog.Enrichers.Span/_packaging?_a=package&feed=8479813c-da6b-4677-b40d-78df8725dc9c&package=3f8a2a7e-8124-4987-9c44-916dba83b9d6&preferRelease=true)\r\n\r\nThey currently show like this on NuGet:\r\n\r\n![image](https://user-images.githubusercontent.com/2270364/141500441-233dfdef-4ab9-4db8-b4e0-c957e7d207ac.png)\r\n\r\nHere is a link to the package:\r\n\r\nhttps://www.nuget.org/packages/Serilog.Enrichers.Span/\n\n### The Elevator Pitch\n\nAzure Pipelines badges needs proper support.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27533051139","Type":"IssuesEvent","CreatedAt":"2023-03-07T00:07:10","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12471","RelatedDescription":"Opened issue \"[Feature]: add command dotnet config paths\" (#12471) at NuGet/Home","RelatedBody":""},{"Id":"27530972307","Type":"IssuesEvent","CreatedAt":"2023-03-06T22:05:00","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12470","RelatedDescription":"Opened issue \"Attribute TargetFramework errors to the offending project\" (#12470) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nIt's possible to get an error like this:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\7.0.100\\NuGet.targets(132,5): error : Invalid framework identifier ''. [S:\\play\\missingtf_restore\\Referencing\\Referencing.csproj]\r\n```\r\n\r\nwhen the invalid framework identifier is in fact coming from another project, here `S:\\play\\missingtf_restore\\Referenced\\Referenced.csproj`.\r\n\r\nIt'd be nice if this error had\r\n\r\n1. A unique error code, and\r\n2. Attribution to the offending project.\r\n\r\nLike\r\n\r\n```\r\nS:\\play\\missingtf_restore\\Referenced\\Referenced.csproj: error NU1234: Invalid framework identifier ''. [S:\\play\\missingtf_restore\\Referencing\\Referencing.csproj]\r\n```\n\n### Additional Context and Details\n\nSmall repro: [missing_tf_in_ref.zip](https://github.com/NuGet/Home/files/10903248/missing_tf_in_ref.zip). Restore from `Referencing`."},{"Id":"27530961658","Type":"IssuesEvent","CreatedAt":"2023-03-06T22:04:26","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12469","RelatedDescription":"Opened issue \"[Feature]: NuGet configuration CLI for dotnet.exe\" (#12469) at NuGet/Home","RelatedBody":"Feature work for https://github.com/NuGet/Home/blob/dev/proposed/2022/dotnet-nuget-config-spec.md"},{"Id":"27529757078","Type":"PullRequestEvent","CreatedAt":"2023-03-06T21:00:58","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12354","RelatedDescription":"Closed pull request \"Allow unecrypted API keys in nuget.config\" (#12354) at NuGet/Home","RelatedBody":"Without this API keys saved in nuget.config files can't work on Linux and Mac, unless https://github.com/NuGet/Home/issues/1851 is implemented."},{"Id":"27528340541","Type":"IssuesEvent","CreatedAt":"2023-03-06T19:54:04","Actor":"jaredpar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12437","RelatedDescription":"Closed issue \"Restore not re-generating project.assets.json \" (#12437) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\nmsbuild 17.5 \r\n\r\n### Worked before?\r\n\r\nmsbuild 17.4 (caveats below) \r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nThis is an involved discussion that is hard to boil down to a simple repro. Have lots of internal data, logs, etc ... to help track this down. Whomever ends up looking at this can reach me internally at jaredpar@microsoft.com and I can help walk you through the situation if this isn't clear. \r\n\r\nThe rough order of events happening is the following. \r\n\r\n1. `msbuild.exe /t:restore Roslyn.sln`. \r\n2. `msbuild.exe /restore src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\n`\r\n3. `msbuild.exe /t:Clean src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\n`\r\n4. `msbuild.exe /t:build /restore /p:BootstrapBuildPath=D:\\a\\_work\\1\\s\\artifacts\\Bootstrap Roslyn.sln`\r\n\r\nThe actual commands are significantly more involved (included in verbose section) but that is the gist of commands. The key is the presence of `/p:BootstrapBuildPath`. When this is empty then every project in the solution will have a reference to `Microsoft.Net.Compilers.Toolset` ([source](https://github.com/dotnet/arcade/blob/8811477dfe2434bbe3a834ec16eafbb22a298e9e/src/Microsoft.DotNet.Arcade.Sdk/tools/Compiler.props#L5)). \r\n\r\nThe practical end effect here is that the project.assets.json file produced in step 1 and 2 should be different than the one produced in step 4 as the `<PackageReference>` set is different. The vast majority of projects do restore this way and show the correct values. The bug is that on every run there are a few projects that do not do this and end up with the version from step 1/2. This results in build breaks for us. \r\n\r\nThe easiest demonstration of this behavior is the PR: https://github.com/dotnet/roslyn/pull/66864. \r\n\r\nNotice that when we use [commit b8ffff](https://github.com/dotnet/roslyn/pull/66864/commits/b8ffff6677c92be2b15f4183401c1c6080213d55) the [build fails](https://dev.azure.com/dnceng-public/public/_build/results?buildId=170544&view=results) with `ValidateBootstrap` errors (this means restore failed). This failure will go away if we do either of the following:\r\n\r\n1. Before step 4 completely delete the `obj` and `bin` directories. This forces all project.assets.json files to be regenerated and they are done so correctly. To us this suggests there is some timestamp / caching bug at play here. \r\n2. Merge steps 1 + 2 into the same `msbuild.exe` command. I have no explanation for this but it's very easy to demonstrate.\r\n\r\nThis is **very** hard to reproduce locally. To the point we've not been able to successfully do it. We've only been able to observe this via CI but it reproduces 100% there. \r\n\r\nIt's unclear how long this bug has existed. What spawned this investigation is our response to #12373 was to delete static graph restore from our pipelines. The moment we did that we started running into this bug. After a few days of investigation we decided to combine steps 1 and 2 together on a whim and the issue went away. It's taken another week of digging to get to this particular point. \r\n\r\nPlease let us know if you need any other data to help track this down, we have lots. \r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nActual MSBuild commands executed in sequence\r\n\r\n\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Debug\\Restore.binlog /clp:Summary /logger:C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\net472\\Microsoft.DotNet.ArcadeLogging.dll /m /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=false /p:Configuration=Debug /p:Projects=D:\\a\\_work\\1\\s\\Roslyn.sln /p:RepoRoot=D:\\a\\_work\\1\\s\\ /p:Restore=True /p:Build=False /p:Rebuild=False /p:Pack=False /p:Sign=False /p:Publish=False /p:ContinuousIntegrationBuild=True /p:OfficialBuildId= /p:RunAnalyzersDuringBuild=False /p:BootstrapBuildPath= /p:TreatWarningsAsErrors=False /p:EnableNgenOptimization=False /p:IbcOptimizationDataDir=D:\\a\\_work\\1\\s\\.o%5c /p:RestoreUseStaticGraphEvaluation=False /p:VisualStudioIbcDrop= /p:VisualStudioDropAccessToken= /p:DeployExtension=false /p:ROSLYNUSEHARDLINKS=true /v:m C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\Build.proj\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Release\\Bootstrap.binlog /nodeReuse:false /p:TreatWarningsAsErrors=true /p:Configuration=Release /p:RunAnalyzersDuringBuild=true /p:ContinuousIntegrationBuild=true /p:RestoreUseStaticGraphEvaluation=false /p:RoslynEnforceCodeStyle=false /p:RunAnalyzersDuringBuild=false /p:DotNetUseShippingVersions=true /p:InitialDefineConstants=BOOTSTRAP /p:PackageOutputPath=D:\\a\\_work\\1\\s\\artifacts\\Bootstrap /p:EnableNgenOptimization=false /p:PublishWindowsPdb=false /restore /t:Pack src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Release\\BootstrapClean.binlog /nodeReuse:false /p:TreatWarningsAsErrors=true /p:Configuration=Release /p:ContinuousIntegrationBuild=true /p:RestoreUseStaticGraphEvaluation=false /t:Clean src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Release\\Build.binlog /clp:Summary /logger:C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\net472\\Microsoft.DotNet.ArcadeLogging.dll /m /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=false /p:Configuration=Release /p:Projects=D:\\a\\_work\\1\\s\\Roslyn.sln /p:RepoRoot=D:\\a\\_work\\1\\s\\ /p:Restore=True /p:Build=True /p:Rebuild=False /p:Pack=True /p:Sign=False /p:Publish=False /p:ContinuousIntegrationBuild=True /p:OfficialBuildId= /p:RunAnalyzersDuringBuild=False /p:BootstrapBuildPath=D:\\a\\_work\\1\\s\\artifacts\\Bootstrap /p:TreatWarningsAsErrors=False /p:EnableNgenOptimization=False /p:IbcOptimizationDataDir=D:\\a\\_work\\1\\s\\.o%5c /p:RestoreUseStaticGraphEvaluation=False /p:VisualStudioIbcDrop= /p:VisualStudioDropAccessToken= /p:DeployExtension=false /p:ROSLYNUSEHARDLINKS=true /v:m C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\Build.proj\r\n```\r\n\r\nThe associated binlogs for each command are available in the [published artifacts](https://artprodcus3.artifacts.visualstudio.com/A6fcc92e5-73a7-4f88-8d13-d9045b45fb27/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy1wdWJsaWMvcHJvamVjdElkL2NiYjE4MjYxLWM0OGYtNGFiYi04NjUxLThjZGNiNTQ3NDY0OS9idWlsZElkLzE3MDU0NC9hcnRpZmFjdE5hbWUvQ29ycmVjdG5lc3NfUmVidWlsZCtBdHRlbXB0KzErTG9ncw2/content?format=zip). Contact me if the artifacts have expired as I have local copies.\r\n\r\n"},{"Id":"27517743022","Type":"IssuesEvent","CreatedAt":"2023-03-06T13:08:55","Actor":"lhalleyvzc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12457","RelatedDescription":"Closed issue \"dotnet nuget hangs when ran as non-root user\" (#12457) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet SDK\r\n\r\n### Product Version\r\n\r\ndotnet sdk 6.0.405\r\n\r\n### Worked before?\r\n\r\ndotnet sdk 3.1.426\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nRunning Amazon Linux 2\r\n\r\n### Working\r\nAs a root user:\r\n```\r\n> whoami\r\nroot\r\n```\r\n![image](https://user-images.githubusercontent.com/119940912/221855129-86d76848-7bc4-4bdd-a590-ccf27f58bd16.png)\r\n\r\nCheck if dotnet is available, which works:\r\n```\r\n> dotnet --version\r\n6.0.405\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/119940912/221855217-339c2e99-9c51-4d46-a569-ec8bbfde6adc.png)\r\n\r\nSimply run dotnet nuget to check if its available, which it does \r\n```\r\n> dotnet nuget\r\nNuGet Command Line 6.3.1.1\r\n\r\nUsage: dotnet nuget [options] [command]\r\n\r\nOptions:\r\n  -h|--help  Show help information\r\n  --version  Show version information\r\n\r\nCommands:\r\n  add      Add a NuGet source.\r\n  delete   Deletes a package from the server.\r\n  disable  Disable a NuGet source.\r\n  enable   Enable a NuGet source.\r\n  list     List configured NuGet sources.\r\n  locals   Clears or lists local NuGet resources such as http requests cache, packages folder, plugin operations cache  or machine-wide global packages folder.\r\n  push     Pushes a package to the server and publishes it.\r\n  remove   Remove a NuGet source.\r\n  sign     Signs NuGet package(s) at <package-paths> with the specified certificate.\r\n  trust    Manage the trusted signers.\r\n  update   Update a NuGet source.\r\n  verify   Verifies a signed NuGet package.\r\n\r\nUse \"dotnet nuget [command] --help\" for more information about a command.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/119940912/221855314-1c7da2de-c60d-4020-8b56-b7216fb198f2.png)\r\n\r\n\r\n### Not Working:\r\nAs a non-root user -Check if dotnet is available, which works:\r\n```\r\n> dotnet --version\r\n6.0.405\r\n```\r\nAs a non-root user - dotnet nuget, and it will hang indefinitely \r\n```\r\n> dotnet nuget\r\n```\r\n![image](https://user-images.githubusercontent.com/119940912/221852545-df038a2f-37e3-46de-882c-9e860e9a9559.png)\r\n\r\nIf ran as a background task, it will max the CPU out at 100%\r\n![image](https://user-images.githubusercontent.com/119940912/221853038-742a6710-e2a1-4860-b533-ed447a9bc5ab.png)\r\n\r\nThe non-root user, has ownership of the /usr/share/dotnet/ folder and all files within it, user name blurred out but it is the users name and group.\r\n![image](https://user-images.githubusercontent.com/119940912/221853591-2fa8995c-1ea1-4ee8-9fe3-8b22908a7383.png)\r\n\r\n### Conclusion\r\nAfter we added dotnet 6 to our servers, any dotnet nuget commands are hanging, we have the following versions installed:\r\n```\r\n2.1.818 [/usr/share/dotnet/sdk]\r\n3.1.426 [/usr/share/dotnet/sdk]\r\n6.0.405 [/usr/share/dotnet/sdk]\r\n```\r\n\r\nNote: I tested the following commands and they are NOT hanging for both and non-root users:\r\n- [dotnet build](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-build)\r\n- [dotnet build-server](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-build-server)\r\n- [dotnet clean](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-clean)\r\n- [dotnet dev-certs](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-dev-certs)\r\n- [dotnet format](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-format)\r\n- [dotnet help](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-help)\r\n- [dotnet migrate](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-migrate)\r\n- [dotnet msbuild](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-msbuild)\r\n- [dotnet pack](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-pack)\r\n- [dotnet publish](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-publish)\r\n- [dotnet restore](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-restore)\r\n- [dotnet run](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-run)\r\n- [dotnet sdk check](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-sdk-check)\r\n- [dotnet sln](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-sln)\r\n- [dotnet store](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-store)\r\n- [dotnet test](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-test)\r\n- [dotnet vstest](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-vstest)\r\n- [dotnet watch](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-watch)\r\n- [dotnet tool](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-install)\r\n\r\nFrom what I can see this looks like a permission issue but all relevant directory and files are owned by the non-root user so I am not sure what else to do.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27500447293","Type":"IssuesEvent","CreatedAt":"2023-03-05T16:33:49","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12456","RelatedDescription":"Reopened issue \"dotnet list package --vulnerable requires constant login to 3rd party nuget feed\" (#12456) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK  7.0.200\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn calling `dotnet list package --interactive --vulnerable` I have to constantly sign in via the web browser for an internal nuget feed.\r\n\r\nWithout the `--vulnerable` switch it seems to use my cached login and I don't even need to login once.\r\n\r\nExpected behavior:\r\n\r\nI would expect to login at most once for the command to finish.\r\n\r\nLog Output:\r\n[log.txt](https://github.com/NuGet/Home/files/10848428/log.txt)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27499529056","Type":"IssuesEvent","CreatedAt":"2023-03-05T14:38:23","Actor":"mrEDitor","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12467","RelatedDescription":"Opened issue \"dotnet restore hangs\" (#12467) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK:  Version:   7.0.103  Commit:    276c71d299\n\n### Worked before?\n\nworked on same version earlier; works on fresh archlinux installation\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n```console\r\n$ dotnet new console -o myproj1\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring /home/edward/myproj1/myproj1.csproj:\r\n  Determining projects to restore...\r\n```\r\n\r\n-or-\r\n\r\n```console\r\n$ dotnet restore # also hangs on existing projects\r\n  Determining projects to restore...\r\n```\r\n\r\n<details>\r\n\r\n<summary>dotnet dump > clrstack -all</summary>\r\n\r\n```console\r\n$ clrstack -all                                                                    \r\nOS Thread Id: 0xadbe\r\n        Child SP               IP Call Site\r\n00007FFD16FFCC50 00007fe714db3766 [HelperMethodFrame: 00007ffd16ffcc50] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FFD16FFCD80 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FFD16FFCDC0 00007FE697B40A24 Microsoft.Build.Execution.BuildSubmission.Execute()\r\n00007FFD16FFCDF0 00007FE6978062CC Microsoft.Build.CommandLine.MSBuildApp.ExecuteBuild(Microsoft.Build.Execution.BuildManager, Microsoft.Build.Execution.BuildRequestData)\r\n00007FFD16FFCE40 00007FE697806561 Microsoft.Build.CommandLine.MSBuildApp.ExecuteRestore(System.String, System.String, Microsoft.Build.Execution.BuildManager, System.Collections.Generic.Dictionary`2<System.String,System.String>)\r\n00007FFD16FFCEC0 00007FE6978058D1 Microsoft.Build.CommandLine.MSBuildApp.BuildProject(System.String, System.String[], System.String, System.Collections.Generic.Dictionary`2<System.String,System.String>, System.Collections.Generic.Dictionary`2<System.String,System.String>, Microsoft.Build.Framework.ILogger[], Microsoft.Build.Framework.LoggerVerbosity, Microsoft.Build.CommandLine.DistributedLoggerRecord[], Int32, Boolean, System.IO.TextWriter, System.IO.TextWriter, Boolean, System.Collections.Generic.ISet`1<System.String>, System.Collections.Generic.ISet`1<System.String>, System.Collections.Generic.ISet`1<System.String>, Boolean, Microsoft.Build.Logging.ProfilerLogger, Boolean, Boolean, Boolean, Microsoft.Build.Graph.GraphBuildOptions, Boolean, System.String[], System.String, System.String[])\r\n00007FFD16FFD040 00007FE6978043CD Microsoft.Build.CommandLine.MSBuildApp.Execute(System.String[])\r\n00007FFD16FFD2E0 00007FE697803459 Microsoft.Build.CommandLine.MSBuildApp.Main(System.String[])\r\n00007FFD16FFD340 00007FE6967DB2EE Microsoft.DotNet.Cli.Utils.MSBuildForwardingAppWithoutLogging.ExecuteInProc(System.String[])\r\n00007FFD16FFD420 00007FE6961E878C Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingApp.Execute()\r\n00007FFD16FFD460 00007FE696AB65E2 System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d.MoveNext()\r\n00007FFD16FFD4A0 00007FE69608C5DD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d, System.CommandLine]](<<BuildInvocationChain>b__0>d ByRef)\r\n00007FFD16FFD4E0 00007FE69608C54C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d, System.CommandLine]](<<BuildInvocationChain>b__0>d ByRef)\r\n00007FFD16FFD500 00007FE696AB175D System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0.<BuildInvocationChain>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD550 00007FE6962351C2 Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d.MoveNext()\r\n00007FFD16FFD5F0 00007FE69608C49D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d, dotnet]](<<UseParseErrorReporting>b__0>d ByRef)\r\n00007FFD16FFD630 00007FE69608C40C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d, dotnet]](<<UseParseErrorReporting>b__0>d ByRef)\r\n00007FFD16FFD650 00007FE69622EC7C Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0.<UseParseErrorReporting>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD6B0 00007FE696AB51A3 System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d.MoveNext()\r\n00007FFD16FFD6E0 00007FE69608C35D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d, System.CommandLine]](<<UseHelp>b__0>d ByRef)\r\n00007FFD16FFD720 00007FE69608C2CC System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d, System.CommandLine]](<<UseHelp>b__0>d ByRef)\r\n00007FFD16FFD740 00007FE696AAE37B System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0.<UseHelp>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD7A0 00007FE696AB506F System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d.MoveNext()\r\n00007FFD16FFD7E0 00007FE69608C21D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d, System.CommandLine]](<<UseSuggestDirective>b__17_0>d ByRef)\r\n00007FFD16FFD820 00007FE69608C18C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d, System.CommandLine]](<<UseSuggestDirective>b__17_0>d ByRef)\r\n00007FFD16FFD840 00007FE696AAE1DE System.CommandLine.CommandLineBuilderExtensions+<>c.<UseSuggestDirective>b__17_0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD890 00007FE696AB5454 System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d.MoveNext()\r\n00007FFD16FFD8C0 00007FE69608C0DD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d, System.CommandLine]](<<UseParseDirective>b__0>d ByRef)\r\n00007FFD16FFD900 00007FE69608C04C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d, System.CommandLine]](<<UseParseDirective>b__0>d ByRef)\r\n00007FFD16FFD920 00007FE696AAE49B System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0.<UseParseDirective>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD980 00007FE696AB609C System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d.MoveNext()\r\n00007FFD16FFD9D0 00007FE69608BF9D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d, System.CommandLine]](<<UseExceptionHandler>b__0>d ByRef)\r\n00007FFD16FFDA10 00007FE69608BF0C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d, System.CommandLine]](<<UseExceptionHandler>b__0>d ByRef)\r\n00007FFD16FFDA30 00007FE696AAEAEB System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0.<UseExceptionHandler>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFDA90 00007FE696AA8960 System.CommandLine.Invocation.InvocationPipeline.<Invoke>g__FullInvocationChain|3_0(System.CommandLine.Invocation.InvocationContext)\r\n00007FFD16FFDB10 00007FE696AA8700 System.CommandLine.Invocation.InvocationPipeline.Invoke(System.CommandLine.IConsole)\r\n00007FFD16FFDB40 00007FE69620DB6F Microsoft.DotNet.Cli.Program.ProcessArgs(System.String[], System.TimeSpan, Microsoft.DotNet.Cli.Telemetry.ITelemetry)\r\n00007FFD16FFDC70 00007FE69620D214 Microsoft.DotNet.Cli.Program.Main(System.String[])\r\nOS Thread Id: 0xadc3\r\n        Child SP               IP Call Site\r\n00007FE68EFFCD10 00007fe714db3766 [DebuggerU2MCatchHandlerFrame: 00007fe68effcd10] \r\nOS Thread Id: 0xadc6\r\n        Child SP               IP Call Site\r\n00007FA5DF9FE968 00007fe714db3766 [HelperMethodFrame: 00007fa5df9fe968] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DF9FEA90 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DF9FEB00 00007FE697BA78E8 Microsoft.Build.BackEnd.Logging.LoggingService.<StartLoggingEventProcessing>g__LoggingEventProc|135_0()\r\n00007FA5DF9FEB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DF9FECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5df9fecd0] \r\nOS Thread Id: 0xadc7\r\n        Child SP               IP Call Site\r\n00007FA5DF1FD968 00007fe714db3766 [HelperMethodFrame: 00007fa5df1fd968] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DF1FDA90 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DF1FDB00 00007FE697BA78E8 Microsoft.Build.BackEnd.Logging.LoggingService.<StartLoggingEventProcessing>g__LoggingEventProc|135_0()\r\n00007FA5DF1FDB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DF1FDCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5df1fdcd0] \r\nOS Thread Id: 0xadc8\r\n        Child SP               IP Call Site\r\n00007FA5DE9FC978 00007fe714db3766 [InlinedCallFrame: 00007fa5de9fc978] \r\n00007FA5DE9FC978 00007fe6956edb4a [InlinedCallFrame: 00007fa5de9fc978] \r\n00007FA5DE9FC970 00007FE6956EDB4A System.Threading.LowLevelLifoSemaphore.<WaitNative>g____PInvoke|3_0(IntPtr, Int32)\r\n00007FA5DE9FCA10 00007FE6956ED669 System.Threading.LowLevelLifoSemaphore.WaitNative(Microsoft.Win32.SafeHandles.SafeWaitHandle, Int32)\r\n00007FA5DE9FCA40 00007FE6956EDA86 System.Threading.LowLevelLifoSemaphore.WaitForSignal(Int32)\r\n00007FA5DE9FCA70 00007FE6956ED963 System.Threading.LowLevelLifoSemaphore.Wait(Int32, Boolean)\r\n00007FA5DE9FCAC0 00007FE69570378E System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\r\n00007FA5DE9FCCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5de9fccd0] \r\nOS Thread Id: 0xadc9\r\n        Child SP               IP Call Site\r\n00007FE68DB0C8E0 00007fe714db3766 [HelperMethodFrame: 00007fe68db0c8e0] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FE68DB0CA10 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FE68DB0CA50 00007FE695701241 System.Threading.PortableThreadPool+GateThread.GateThreadStart()\r\n00007FE68DB0CCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fe68db0ccd0] \r\nOS Thread Id: 0xadca\r\n        Child SP               IP Call Site\r\n00007FA5DE1FB978 00007fe714db3766 [InlinedCallFrame: 00007fa5de1fb978] \r\n00007FA5DE1FB978 00007fe6956edb4a [InlinedCallFrame: 00007fa5de1fb978] \r\n00007FA5DE1FB970 00007FE6956EDB4A System.Threading.LowLevelLifoSemaphore.<WaitNative>g____PInvoke|3_0(IntPtr, Int32)\r\n00007FA5DE1FBA10 00007FE6956ED669 System.Threading.LowLevelLifoSemaphore.WaitNative(Microsoft.Win32.SafeHandles.SafeWaitHandle, Int32)\r\n00007FA5DE1FBA40 00007FE6956EDA86 System.Threading.LowLevelLifoSemaphore.WaitForSignal(Int32)\r\n00007FA5DE1FBA70 00007FE6956ED963 System.Threading.LowLevelLifoSemaphore.Wait(Int32, Boolean)\r\n00007FA5DE1FBAC0 00007FE69570378E System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\r\n00007FA5DE1FBCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5de1fbcd0] \r\nOS Thread Id: 0xadcb\r\n        Child SP               IP Call Site\r\n00007FA5DD9FA938 00007fe714db3766 [HelperMethodFrame: 00007fa5dd9fa938] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DD9FAA60 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DD9FAAD0 00007FE697B7E1A1 Microsoft.Build.BackEnd.InProcNode.Run(System.Exception ByRef)\r\n00007FA5DD9FAB10 00007FE697BFE69B Microsoft.Build.BackEnd.NodeProviderInProc+<>c__DisplayClass30_0.<InstantiateNode>b__0()\r\n00007FA5DD9FAB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DD9FACD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5dd9facd0] \r\nOS Thread Id: 0xadcd\r\n        Child SP               IP Call Site\r\n00007FA5DC9F76E0 00007fe714db3766 [HelperMethodFrame_1OBJ: 00007fa5dc9f76e0] System.Threading.Monitor.ObjWait(Int32, System.Object)\r\n00007FA5DC9F7810 00007FE6956F4636 System.Threading.ManualResetEventSlim.Wait(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F7890 00007FE695708FFC System.Threading.Tasks.Task.SpinThenBlockingWait(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F78F0 00007FE695708E8E System.Threading.Tasks.Task.InternalWaitCore(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F7940 00007FE69581A468 System.Threading.Tasks.Task`1[[System.Boolean, System.Private.CoreLib]].GetResultCore(Boolean)\r\n00007FA5DC9F7960 00007FE699E66675 NuGet.Build.Tasks.RestoreTask.Execute()\r\n00007FA5DC9F7BA0 00007FE697B9244D Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n00007FA5DC9F7BD0 00007FE697BFB68B Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25.MoveNext()\r\n00007FA5DC9F7CE0 00007FE6999EFB8D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25, Microsoft.Build]](<ExecuteInstantiatedTask>d__25 ByRef)\r\n00007FA5DC9F7D20 00007FE6999EFB00 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25, Microsoft.Build]](<ExecuteInstantiatedTask>d__25 ByRef)\r\n00007FA5DC9F7D50 00007FE697B89A66 Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(Microsoft.Build.BackEnd.ITaskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext, Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.ItemBucket, Microsoft.Build.BackEnd.TaskExecutionMode)\r\n00007FA5DC9F7DF0 00007FE697BFCD14 Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23.MoveNext()\r\n00007FA5DC9F7E40 00007FE6999EFA4D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23, Microsoft.Build]](<InitializeAndExecuteTask>d__23 ByRef)\r\n00007FA5DC9F7E80 00007FE6999EF230 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23, Microsoft.Build]](<InitializeAndExecuteTask>d__23 ByRef)\r\n00007FA5DC9F7EB0 00007FE697B8970F Microsoft.Build.BackEnd.TaskBuilder.InitializeAndExecuteTask(Microsoft.Build.BackEnd.Logging.TaskLoggingContext, Microsoft.Build.BackEnd.ItemBucket, System.Collections.Generic.IDictionary`2<System.String,System.String>, Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.TaskExecutionMode)\r\n00007FA5DC9F7F40 00007FE697BFAA74 Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19.MoveNext()\r\n00007FA5DC9F8020 00007FE6999EBC1D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19, Microsoft.Build]](<ExecuteBucket>d__19 ByRef)\r\n00007FA5DC9F8060 00007FE6999EBB90 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19, Microsoft.Build]](<ExecuteBucket>d__19 ByRef)\r\n00007FA5DC9F8090 00007FE697B8929B Microsoft.Build.BackEnd.TaskBuilder.ExecuteBucket(Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.ItemBucket, Microsoft.Build.BackEnd.TaskExecutionMode, System.Collections.Generic.Dictionary`2<System.String,System.String>)\r\n00007FA5DC9F8120 00007FE697BFC959 Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18.MoveNext()\r\n00007FA5DC9F81E0 00007FE6999EBADD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18, Microsoft.Build]](<ExecuteTask>d__18 ByRef)\r\n00007FA5DC9F8220 00007FE6999EBA50 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18, Microsoft.Build]](<ExecuteTask>d__18 ByRef)\r\n00007FA5DC9F8250 00007FE697B891F3 Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup)\r\n00007FA5DC9F82D0 00007FE697BFC53D Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13.MoveNext()\r\n00007FA5DC9F8310 00007FE6999EB99D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13, Microsoft.Build]](<ExecuteTask>d__13 ByRef)\r\n00007FA5DC9F8350 00007FE6999EB910 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13, Microsoft.Build]](<ExecuteTask>d__13 ByRef)\r\n00007FA5DC9F8380 00007FE697B88CEE Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.Logging.TargetLoggingContext, Microsoft.Build.BackEnd.BuildRequestEntry, Microsoft.Build.BackEnd.ITargetBuilderCallback, Microsoft.Build.Execution.ProjectTargetInstanceChild, Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup, Microsoft.Build.BackEnd.Lookup, System.Threading.CancellationToken)\r\n00007FA5DC9F8420 00007FE697BFA406 Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51.MoveNext()\r\n00007FA5DC9F84A0 00007FE6999EB85D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51, Microsoft.Build]](<ProcessBucket>d__51 ByRef)\r\n00007FA5DC9F84E0 00007FE6999EB7D0 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51, Microsoft.Build]](<ProcessBucket>d__51 ByRef)\r\n00007FA5DC9F8510 00007FE697B86396 Microsoft.Build.BackEnd.TargetEntry.ProcessBucket(Microsoft.Build.BackEnd.ITaskBuilder, Microsoft.Build.BackEnd.Logging.TargetLoggingContext, Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup, Microsoft.Build.BackEnd.Lookup)\r\n00007FA5DC9F85B0 00007FE697BF988D Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44.MoveNext()\r\n00007FA5DC9F8730 00007FE6999EB71D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44, Microsoft.Build]](<ExecuteTarget>d__44 ByRef)\r\n00007FA5DC9F8770 00007FE6999EB68C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44, Microsoft.Build]](<ExecuteTarget>d__44 ByRef)\r\n00007FA5DC9F8790 00007FE697B85CA4 Microsoft.Build.BackEnd.TargetEntry.ExecuteTarget(Microsoft.Build.BackEnd.ITaskBuilder, Microsoft.Build.BackEnd.BuildRequestEntry, Microsoft.Build.BackEnd.Logging.ProjectLoggingContext, System.Threading.CancellationToken)\r\n00007FA5DC9F8850 00007FE697BF8753 Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23.MoveNext()\r\n00007FA5DC9F88E0 00007FE6999FDA53 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].ExecutionContextCallback(System.Object)\r\n00007FA5DC9F8900 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DC9F8950 00007FE6999FD90F System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].MoveNext(System.Threading.Thread)\r\n00007FA5DC9F89A0 00007FE6999FD78A System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].MoveNext()\r\n00007FA5DC9F89C0 00007FE69570E47E System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation+<>c.<Run>b__2_0(System.Object)\r\n00007FA5DC9F89E0 00007FE695708372 System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n00007FA5DC9F8AE0 00007FE69570808E System.Threading.Tasks.Task.ExecuteEntry()\r\n00007FA5DC9F8B00 00007FE697BF50EC Microsoft.Build.BackEnd.RequestBuilder+DedicatedThreadsTaskScheduler.<InjectThread>b__6_0()\r\n00007FA5DC9F8B30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DC9F8CD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5dc9f8cd0] \r\nOS Thread Id: 0xadcf\r\n        Child SP               IP Call Site\r\n00007FA5BB1FE850 00007fe714db3766 [HelperMethodFrame_1OBJ: 00007fa5bb1fe850] System.Threading.Monitor.ObjWait(Int32, System.Object)\r\n00007FA5BB1FE980 00007FE6956F7F65 System.Threading.SemaphoreSlim.WaitUntilCountOrTimeout(Int32, UInt32, System.Threading.CancellationToken)\r\n00007FA5BB1FE9C0 00007FE6956F7D41 System.Threading.SemaphoreSlim.Wait(Int32, System.Threading.CancellationToken)\r\n00007FA5BB1FEA40 00007FE696D07A55 System.Collections.Concurrent.BlockingCollection`1[[System.__Canon, System.Private.CoreLib]].TryTakeWithNoTimeValidation(System.__Canon ByRef, Int32, System.Threading.CancellationToken, System.Threading.CancellationTokenSource)\r\n00007FA5BB1FEAB0 00007FE696D0941F System.Collections.Concurrent.BlockingCollection`1+<GetConsumingEnumerable>d__68[[System.__Canon, System.Private.CoreLib]].MoveNext()\r\n00007FA5BB1FEB00 00007FE697BF5105 Microsoft.Build.BackEnd.RequestBuilder+DedicatedThreadsTaskScheduler.<InjectThread>b__6_0()\r\n00007FA5BB1FEB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5BB1FECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5bb1fecd0] \r\nOS Thread Id: 0xadd0\r\n        Child SP               IP Call Site\r\n00007FA5B9DFE990 00007fe714db3766 [HelperMethodFrame: 00007fa5b9dfe990] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FA5B9DFEAC0 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FA5B9DFEB00 00007FE6956FD5CD System.Threading.TimerQueue.TimerThread()\r\n00007FA5B9DFECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5b9dfecd0] \r\nOS Thread Id: 0xadd1\r\n        Child SP               IP Call Site\r\n00007FA5B95FDA90 00007fe714e391b6 [InlinedCallFrame: 00007fa5b95fda90] \r\n00007FA5B95FDA90 00007fe69c19f38f [InlinedCallFrame: 00007fa5b95fda90] \r\n00007FA5B95FDA80 00007FE69C19F38F Interop+Sys.WaitForSocketEvents(IntPtr, SocketEvent*, Int32*)\r\n00007FA5B95FDB30 00007FE69C1C4E84 System.Net.Sockets.SocketAsyncEngine.EventLoop()\r\n00007FA5B95FDCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5b95fdcd0] \r\n```\r\n</details>\r\n\r\n<details>\r\n\r\n<summary>Eliminating the need to restore packages eliminates the hang as well</summary>\r\n\r\n```console\r\n$ cat myproj.csproj\r\n<Project>\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n$ dotnet build\r\n/usr/share/dotnet/sdk/7.0.103/MSBuild.dll -nologo -maxcpucount -target:Restore -verbosity:m -verbosity:diag ./myproj.csproj\r\nBuild started 3/5/2023 4:24:48PM.\r\nEnvironment at start of build:\r\nDOTNET_HOST_PATH = /usr/share/dotnet/dotnet\r\nDOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/edward/.cache/dotnet_bundle_extract\r\nMSBUILDUSESERVER = 0\r\nDOTNET_ROOT = /usr/share/dotnet\r\n\r\n16:24:48.559     0>Process = \"/usr/share/dotnet/dotnet\"\r\n                   MSBuild executable path = \"/usr/share/dotnet/sdk/7.0.103/MSBuild.dll\"\r\n                   Command line arguments = \"/usr/share/dotnet/sdk/7.0.103/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore -verbosity:diag\"\r\n                   Current directory = \"/home/edward/myproj\"\r\n                   MSBuild version = \"17.4.1+fedecea9d\"\r\n16:24:48.608     0>Initial Properties:\r\n                   DOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/edward/.cache/dotnet_bundle_extract\r\n                   DOTNET_HOST_PATH = /usr/share/dotnet/dotnet\r\n                   DOTNET_ROOT = /usr/share/dotnet\r\n                   ImplicitUsings = enable\r\n                   MSBuildAllProjects = /home/edward/myproj/myproj.csproj\r\n                   MSBuildAssemblyVersion = 17.0\r\n                   MSBuildBinPath = /usr/share/dotnet/sdk/7.0.103\r\n                   MSBuildDisableFeaturesFromVersion = 999.999\r\n                   MSBuildFileVersion = 17.4.1.12801\r\n                   MSBuildFrameworkToolsRoot = /usr/share/dotnet/shared/Microsoft.NETCore.App\r\n                   MSBuildNodeCount = 8\r\n                   MSBuildProgramFiles32 = \r\n                   MSBuildProjectDirectory = /home/edward/myproj\r\n                   MSBuildProjectDirectoryNoRoot = home/edward/myproj\r\n                   MSBuildProjectExtension = .csproj\r\n                   MSBuildProjectFile = myproj.csproj\r\n                   MSBuildProjectFullPath = /home/edward/myproj/myproj.csproj\r\n                   MSBuildProjectName = myproj\r\n                   MSBuildRestoreSessionId = a0b4dfe1-050c-4e79-9e5f-bb0e95e67126\r\n                   MSBuildRuntimeType = Core\r\n                   MSBuildSDKsPath = /usr/share/dotnet/sdk/7.0.103/Sdks\r\n                   MSBuildSemanticVersion = 17.4.1+fedecea9d\r\n                   MSBuildStartupDirectory = /home/edward/myproj\r\n                   MSBuildToolsPath = /usr/share/dotnet/sdk/7.0.103\r\n                   MSBuildToolsVersion = Current\r\n                   MSBUILDUSESERVER = 0\r\n                   MSBuildVersion = 17.4.1\r\n                   Nullable = enable\r\n                   OS = Unix\r\n                   OutputType = Exe\r\n                   RoslynTargetsPath = /usr/share/dotnet/sdk/7.0.103/Roslyn\r\n                   TargetFramework = net7.0\r\n                   VisualStudioVersion = 17.0\r\n\r\n16:24:48.609     1>Project \"/home/edward/myproj/myproj.csproj\" on node 1 (Restore target(s)).\r\n16:24:48.609     1>Target \"Restore\" skipped. The target does not exist in the project and SkipNonexistentTargets is set to true.\r\n16:24:48.610     1>Done Building Project \"/home/edward/myproj/myproj.csproj\" (Restore target(s)).\r\nDeferred Messages\r\n16:24:48.612     0>\r\nDetailed Build Summary\r\n======================\r\n     (TaskId:0)\r\n                     \r\n                     ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n                     Id                  : Exclusive Time   Total Time   Path (Targets)\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     0                   : 0.029s           0.029s       /home/edward/myproj/myproj.csproj (Restore)  (TaskId:0)\r\n                     \r\n                     ============================== Node Utilization (IDs represent configurations) ====================================================\r\n                     Timestamp:            1        Duration   Cumulative\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     638136194885800927:   0        0.032s     0.032s  (TaskId:0)\r\n                     -----------------------------------------------------------------------------------------------------------------------------------\r\n                     Utilization:          100.0    Average Utilization: 100.0 (TaskId:0)\r\n\r\nProject Evaluation Performance Summary:\r\n        4 ms  /home/edward/myproj/myproj.csproj          1 calls\r\n\r\nProject Performance Summary:\r\n        2 ms  /home/edward/myproj/myproj.csproj          1 calls\r\n                  2 ms  Restore                                    1 calls\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.06\r\n```\r\n\r\n</details>\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27496300421","Type":"IssuesEvent","CreatedAt":"2023-03-05T06:56:47","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12456","RelatedDescription":"Closed issue \"dotnet list package --vulnerable requires constant login to 3rd party nuget feed\" (#12456) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK  7.0.200\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn calling `dotnet list package --interactive --vulnerable` I have to constantly sign in via the web browser for an internal nuget feed.\r\n\r\nWithout the `--vulnerable` switch it seems to use my cached login and I don't even need to login once.\r\n\r\nExpected behavior:\r\n\r\nI would expect to login at most once for the command to finish.\r\n\r\nLog Output:\r\n[log.txt](https://github.com/NuGet/Home/files/10848428/log.txt)\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":22,"FavoriteCount":11,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-03-07T03:30:25.4903541Z","RunDurationInMilliseconds":1492}