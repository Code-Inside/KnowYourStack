{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"34558827465","Type":"PullRequestEvent","CreatedAt":"2024-01-04T01:29:30","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9771","RelatedDescription":"Merged pull request \"update allowlist\" (#9771) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nremove following domain since they are no longer active: \r\n`api.travis-ci.org` to `app.travis-ci.com` sine they migrated from .org to .com, remove api.travis-ci.org from list since `app.travis-ci.com` already in list\r\n`bettercodehub.com` is retired\r\n`bintray` is no longer active\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9693"},{"Id":"34555611478","Type":"IssuesEvent","CreatedAt":"2024-01-03T21:42:20","Actor":"304NotModified","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9772","RelatedDescription":"Opened issue \"[NuGet.org Bug] Stats: Community Packages shows non-Community Packages #3\" (#9772) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n\r\n\r\nThe Community Packages shows non-Community Packages, see screenshot\r\n\r\n\r\n### To Reproduce\r\n\r\n\r\nrelated: https://github.com/NuGet/NuGetGallery/issues/8456\n\n### Repro Steps\n\nSteps to reproduce the behavior:\r\n1. go to https://www.nuget.org/stats/packages\r\n\n\n### Expected Behavior\n\nNot showing Microsoft packages when \"Show all packages\" isn't checked. Currently multiple microsoft.* packages are shown\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"34554477734","Type":"IssuesEvent","CreatedAt":"2024-01-03T20:41:03","Actor":"Javidleo","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9770","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Face with 504 Gateway Timeout while Restore Packages\" (#9770) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nuntil yesterday(last time I build up my application) everything was ok, \r\nbut now I'm facing with 504 and 502 errors while building my dotnet application via docker compose.\r\nI hope following info will help: (names and project routes are fake)\r\n\r\n`Determining projects to restore...\r\n  Restored /home/project/backend/src/Common/EventBus/Project.EventBus/Project..EventBus.csproj (in 116 ms).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.fileproviders.physical/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.entityframeworkcore.abstractions/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.authentication.cookies/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/system.threading.channels/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/swashbuckle.aspnetcore.swaggerui/index.json'.\r\n  Response status code does not indicate success: 502 (Bad Gateway).\r\n  Restored /route-to-project/src/Common/classlib/classlib.csproj (in 2.93 sec).\r\n  Restored /route-to-project/src/Common/classlib/classlib.csproj (in 3.98 sec).\r\n  Restored \r\n  Restored /route-to-project/src/Common/serviceclasslib/serviceclasslib.csproj (in 5.88 sec).\r\n  Failed to download package 'Geocoding.Microsoft.4.0.1' from 'https://api.nuget.org/v3-flatcontainer/geocoding.microsoft/4.0.1/geocoding.microsoft.4.0.1.nupkg'.\r\n  Response status code does not indicate success: 504 (Gateway Time-out).\r\n  Restored /route-to-project/src/Common/service/service.csproj (in 8.96 sec).\r\n  Failed to download package 'Geocoding.Microsoft.4.0.1' from 'https://api.nuget.org/v3-flatcontainer/geocoding.microsoft/4.0.1/geocoding.microsoft.4.0.1.nupkg'.\r\n  Response status code does not indicate success: 504 (Gateway Time-out).\r\n/usr/lib/dotnet/sdk/6.0.125/NuGet.targets(130,5): error : Failed to download package 'Geocoding.Microsoft.4.0.1' from 'https://api.nuget.org/v3-flatcontainer/geocoding.microsoft/4.0.1/geocoding.microsoft.4.0.1.nupkg'. `\r\n\r\nmore details : \r\n- I recently updated my gitlab and its ssl certificate, is there any related stuff between downloading/restoring packages and ssl certificates? if it is, please someone share a blog post or a document about it.\r\n\r\n\n\n### Repro Steps\n\nI don't know how this error produced at first time, but something that might help is \r\n- I was working on updating my gitlab and its ssl certificate\r\n- I'm using .NET 6 on this project \r\n- this project uses docker-compose and builds as a set of containers.\r\n- I also tried to restore just one of the projects with dotnet cli 'restore' command but it also failed.\n\n### Expected Behavior\n\nas normal restore process I should be able to build my application as usual.  \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"34559554222","Type":"IssuesEvent","CreatedAt":"2024-01-04T02:27:44","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13110","RelatedDescription":"Closed issue \"[NETSDKE2E][Unstable]Failed to download package 'Microsoft.NETCore.app.Runtime.win-x64.8.0.0' from ...\" message displays during publish project in CLI. \" (#13110) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nSDK version from dotnet --info: 8.0.200-preview.23624.5\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nNone\r\n\r\n### Repro Steps & Context\r\n\r\n1.install 8.0.200-preview.23624.5 sdk from https://aka.ms/dotnet/8.0.2xx/daily/dotnet-sdk-win-x64.exe\r\nin CLI, dotnet new console and then dotnet publish -r win-x64 --self-contained\r\n\r\n**Expected Result:**\r\nPublish successfully.\r\n**Actual Result:**\r\nPublish successfully, but \"Failed to download package 'Microsoft.NETCore.app.Runtime.win-x64.8.0.0' from ...\" message displays during publish project in CLI.\r\n![image](https://github.com/NuGet/Home/assets/65637796/72f4f68c-10dd-42ae-bdb5-e4e17358b09f)\r\n**dotnet --info:**\r\n.NET SDK:\r\nVersion: 8.0.200-preview.23624.5\r\nCommit: 8065b9770c\r\nWorkload version: 8.0.200-manifests.9f3f18d7\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.19043\r\nOS Platform: Windows\r\nRID: win-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\8.0.200-preview.23624.5\\\r\n\r\n.NET workloads installed:\r\nWorkload version: 8.0.200-manifests.9f3f18d7\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\nVersion: 8.0.0\r\nArchitecture: x64\r\nCommit: 5535e31a71\r\n\r\n.NET SDKs installed:\r\n8.0.200-preview.23624.5 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\nNone\r\n\r\nEnvironment variables:\r\nNot set\r\n\r\nglobal.json file:\r\nNot found\r\n\r\nLearn more:\r\nhttps://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\nhttps://aka.ms/dotnet/download\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"34558888210","Type":"IssuesEvent","CreatedAt":"2024-01-04T01:34:40","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13124","RelatedDescription":"Closed issue \"Use string.Contains instead of IEnumerable.Contains in VersionRange parsing\" (#13124) at NuGet/Home","RelatedBody":""},{"Id":"34558884184","Type":"IssuesEvent","CreatedAt":"2024-01-04T01:34:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13124","RelatedDescription":"Opened issue \"Use string.Contains instead of IEnumerable.Contains in VersionRange parsing\" (#13124) at NuGet/Home","RelatedBody":""},{"Id":"34549893887","Type":"IssuesEvent","CreatedAt":"2024-01-03T17:05:11","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13123","RelatedDescription":"Opened issue \"Transitive Origins ToolTip in PM UI could be more discoverable\" (#13123) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nWhen hovering over a package under the \"Transitive packages\" group in PM UI, a tooltip indicates the \"Transitively referenced\" version and package ID. \n\n### Desired Behavior\n\nConsider how to make the transitive origins more discoverable. There's no indication that the tooltip is different from the Top-level group, and customers who have used the UI for many years probably would expect it hasn't changed.\r\n\r\nDocumentation for VS and dotnet CLI around listing transitive packages could also highlight this VS PM UI feature.\n\n### Additional Context\n\nMotivation from VS Feedback Ticket: https://developercommunity.visualstudio.com/t/Visual-studio-Package-Manager-vulnerabil/10549919\r\n\r\nDotnet CLI has a feature request to show Transitive Origins here: https://github.com/NuGet/Home/issues/11625"},{"Id":"34543320029","Type":"IssuesEvent","CreatedAt":"2024-01-03T13:00:34","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13054","RelatedDescription":"Closed issue \"PackageReference to native code does not error when it's absent\" (#13054) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.0-alpha.1.23577.7\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nCopy the contents of [this folder](https://github.com/dotnet/sdk/tree/bd786cf2963e46fe866e80d1803b717d79806b1b/src/Assets/TestProjects/DesktopMinusRid).\r\nBuild it with `dotnet build /p:RuntimeIdentifier=win-x86`\r\n\r\nThat csproj has `<PackageReference Include=\"Libuv\" Version=\"1.9.1\" />`. Libuv version 1.9.1 doesn't have a win-x86 version, so it fails to copy Libuv to the output directory. When you run the exe, it fails.\r\n\r\ndotnet build, however, succeeds with no errors. This led me to hours of head-scratching.\n\n### Verbose Logs\n\n_No response_"},{"Id":"34526659408","Type":"IssuesEvent","CreatedAt":"2024-01-02T19:51:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13088","RelatedDescription":"Closed issue \"Visual Studio 17.8 browse tab never scrolls down past the first page.\" (#13088) at NuGet/Home","RelatedBody":"Body from the feedback ticket: There is a problem with the NuGet Package Manager UI in 17.8.0.  When trying to browse for packages it only returns the first 25 and won’t refresh when scrolling down to the bottom of the page.  I have rolled back to 17.7.7 and confirmed that it is working correctly in that version.  I then updated to 17.8.0 and confirmed that it is working as described of only getting the first 25 and not getting more.\r\n\r\n[Developer Community Issue](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1924207?src=WorkItemMention&src-action=artifact_link), [Developer Community bug](https://developercommunity.visualstudio.com/t/Problem-with-NuGet-Package-Manager-UI-af/10530864)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-04T03:30:19.0621005Z","RunDurationInMilliseconds":1067}