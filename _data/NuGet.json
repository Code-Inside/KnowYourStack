{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39722512703","Type":"IssuesEvent","CreatedAt":"2024-06-28T21:40:54","Actor":"thaiknguyen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10053","RelatedDescription":"Opened issue \"Can not get API key with glob pattern to work\" (#10053) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nnuget.exe\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nCreate an API key with glob pattern: *alpha*\r\n\r\n\r\nI'm unable to push packages with that pattern in the name.. for example:\r\n\r\n>nuget push thaitest.alpha.AppLogger.3.0.0.nupkg -Source https://api.nuget.org/v3/index.json\r\nPushing thaitest.alpha.AppLogger.3.0.0.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 268ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n\r\nI'm actually trying to only allow pushing '-alpha' version packages for this API key, but also tried the package name; both failed.  If I changed the glob pattern to just *, then the above works.\r\n\n\n### Verbose Logs\n\n```shell\nnuget push thaitest.alpha.AppLogger.3.0.0.nupkg -Source https://api.nuget.org/v3/index.json -verbosity detailed\r\nNuGet Version: 6.10.0.107\r\nPushing thaitest.alpha.AppLogger.3.0.0.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  Forbidden https://www.nuget.org/api/v2/package/ 311ms\r\nResponse status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\nSystem.Net.Http.HttpRequestException: Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n   at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.EnsureSuccessStatusCode(HttpResponseMessage response, Nullable`1 codeNotToThrow, ILogger logger)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<>c__DisplayClass26_0.<PushPackageToServer>b__0(HttpResponseMessage response)\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__20`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageToServer>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageCore>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackagePath>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<Push>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.PushRunner.<Run>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.PushCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\n```\n"},{"Id":"39722490598","Type":"PullRequestEvent","CreatedAt":"2024-06-28T21:39:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10052","RelatedDescription":"Merged pull request \"More arguments for `UsingMsi` method.\" (#10052) at NuGet/NuGetGallery","RelatedBody":"Added `readAccessGeoRedundant` and `requestTimeout` arguments to `UsingMsi`."},{"Id":"39721301761","Type":"PullRequestEvent","CreatedAt":"2024-06-28T20:34:52","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10052","RelatedDescription":"Opened pull request \"More arguments for `UsingMsi` method.\" (#10052) at NuGet/NuGetGallery","RelatedBody":"Added `readAccessGeoRedundant` and `requestTimeout` arguments to `UsingMsi`."},{"Id":"39715444140","Type":"PullRequestEvent","CreatedAt":"2024-06-28T16:08:41","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9986","RelatedDescription":"Merged pull request \"move to 8.0.301 sdk\" (#9986) at NuGet/NuGetGallery","RelatedBody":"Tracking issue: https://github.com/NuGet/Engineering/issues/5505"},{"Id":"39710006263","Type":"IssuesEvent","CreatedAt":"2024-06-28T13:11:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10047","RelatedDescription":"Closed issue \"activePackageSource should be removed since it's deprecated\" (#10047) at NuGet/NuGetGallery","RelatedBody":"Per https://learn.microsoft.com/en-us/nuget/reference/nuget-config-file#activepackagesource"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39782441592","Type":"IssuesEvent","CreatedAt":"2024-07-01T23:04:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8072","RelatedDescription":"Closed issue \"Deprecation Mechanism for nuget.exe commands\" (#8072) at NuGet/Home","RelatedBody":"Some `nuget.exe` commands will be deprecated. We need something to mark as deprecated and show warning messages in proper places.\r\n\r\n## Why not `Obsolete` c# attribute ?\r\n\r\n- You cannot provide an alternative command with the message parameter. \r\n- The message is almost the same for deprecation commands\r\n- You cannot inherit the `Obsolete` to make your custom deprecation attributes\r\n\r\n## Scenarios\r\n\r\nSuppose `command` is the command to deprecate. The following scenarios must show a warning message:\r\n\r\n`nuget.exe command`\r\n\r\n`nuget.exe command -h`\r\n\r\n`nuget.exe help command`\r\n\r\n`nuget.exe help -all`\r\n\r\n`nuget.exe help -all -markdown`\r\n\r\n"},{"Id":"39782424102","Type":"IssuesEvent","CreatedAt":"2024-07-01T23:03:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9088","RelatedDescription":"Closed issue \"Investigate possible file locks in Embedded Icons PM UI\" (#9088) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3153#discussion_r368098129\r\n\r\nInvestigate file open/close events in PerfView"},{"Id":"39782129091","Type":"IssuesEvent","CreatedAt":"2024-07-01T22:43:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12210","RelatedDescription":"Closed issue \"Json output localization\" (#12210) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\ndotnet.exe\r\n\r\n### Repro Steps & Context\r\n\r\nFollow up on [comment](https://github.com/NuGet/NuGet.Client/pull/4855#discussion_r1009977670\r\n).   It's more important for problems>>security section. \r\nIf it's localized, then json processing should be aware of localization. Let's say we filter for `Error` or `Critical` then if it's in different languages may not notice there was an `error`/`vulnerability`.\r\nPlease note it's not localized for console output yet. \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/ee9ef1f0e1a256a6d215669256576320a02fb0ac/src/NuGet.Core/NuGet.CommandLine.XPlat/Utility/ProjectPackagesPrintUtility.cs#L213-L216\r\n\r\nFyi @dominoFire \r\n"},{"Id":"39782029994","Type":"IssuesEvent","CreatedAt":"2024-07-01T22:37:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10308","RelatedDescription":"Closed issue \"Enrich Testing Guidelines in docs/coding-guidelines.md\" (#10308) at NuGet/Home","RelatedBody":"Follow up on comment https://github.com/NuGet/NuGet.Client/pull/3716#pullrequestreview-525229595"},{"Id":"39781983430","Type":"IssuesEvent","CreatedAt":"2024-07-01T22:34:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11009","RelatedDescription":"Closed issue \"[DCR]: Support TargetFramework/TargetFrameworkIdentifier/TargetFrameworkVersion for vcxproj if PackageReference capability is set.\" (#11009) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nNuGet currently ignores any set TargetFramework/TargetFrameworkIdentifier/TargetFrameworkVersion etc if the project extension is vcxproj, and always returns Native, v0.0.\r\n\r\nTeams that want to enable PackageReference support for UAP projects using the project system support as explained in https://github.com/dotnet/project-system/issues/2491 would be better suited by setting the TargetFrameworkMoniker to UAP,Version=v10.0 but this is currently not possible.\n\n### Desired Behavior\n\nIf the PackageReference capability is set, NuGet doesn't always ignore TargetFramework/TargetFrameworkIdentifier/TargetFrameworkVersion etc if the project extension is vcxproj.\n\n### Additional Context\n\nInternal Microsoft teams have been struggling with the lack of proper Nuget PackageReference support. The limited support that seems to be available through the project system is great. This change would make the experience just a little bit better."},{"Id":"39778319313","Type":"IssuesEvent","CreatedAt":"2024-07-01T19:39:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13578","RelatedDescription":"Closed issue \"Some errors encountered when patching the .NET SDK with NuGet Dev latest build\" (#13578) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet SDK\r\n\r\n### Product Version\r\n\r\nDev\\6.11.0.113 \r\n\r\n### Worked before?\r\n\r\nIt is a regression since the issue doesn’t repro on patching Dotnet SDK with NuGet Client Dev\\6.11.0.110.\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n**Repro Steps:**\r\n       1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n       2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with \r\n           administrative privileges” checked.\r\n       3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test \r\n           machine and named \"nupkgs\".\r\n       4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script \r\n           with the commands:\r\n      ` .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-ssue\\Desktop\\PatchedSDK\\ -NupkgsPath C:\\Users\\v-ssue\\Desktop\\Nupkgs\\ -SDKChannel 8.0.4xx -Quality daily`\r\n\r\n**Expected Result:**\r\n\r\nThe patching is successful with no error.\r\n\r\n**Actual Result:**\r\n\r\nThe patching failed with the following errors as screenshot below:\r\n![image](https://github.com/NuGet/Home/assets/149561645/c2cb6f82-998c-4820-ac1f-27cbeb512614)\r\n\r\n\r\n**Error messages:**\r\n```\r\nCopy-Item : Cannot bind argument to parameter 'Path' because it is null.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:102 char:15\r\n+     Copy-Item $nupkg -Destination $tempExtractFolder\r\n+               ~~~~~~\r\n    + CategoryInfo          : InvalidData: (:) [Copy-Item], ParameterBindingValidationException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CopyItemCommand\r\n\r\nRename-Item : Source and destination path must be different.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:110 char:12\r\n+     $zip = Rename-Item -Path $nupkgTemp -NewName ($nupkgTemp -replace ...\r\n+            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : WriteError: (C:\\Users\\v-ssue....Packaging.Core:String) [Rename-Item], IOException\r\n    + FullyQualifiedErrorId : RenameItemIOError,Microsoft.PowerShell.Commands.RenameItemCommand\r\n\r\nExpand-Archive : Cannot validate argument on parameter 'LiteralPath'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:112 char:33\r\n+     Expand-Archive -LiteralPath $zip.FullName -DestinationPath $tempE ...\r\n+                                 ~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidData: (:) [Expand-Archive], ParameterBindingValidationException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationError,Expand-Archive\r\n\r\nGet-ChildItem : Cannot find path 'C:\\Users\\v-ssue\\AppData\\Local\\Temp\\PatchTempFolder\\NuGet.Packaging.Core\\lib' because it does not exist.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:120 char:23\r\n+ ...   $tfmFolderNet8 =  Get-ChildItem -Path \"$libPath$delimeter*\" | Where ...\r\n+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\v-ssue...kaging.Core\\lib:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n\r\nGet-ChildItem : Cannot find path 'C:\\Users\\v-ssue\\AppData\\Local\\Temp\\PatchTempFolder\\NuGet.Packaging.Core\\lib' because it does not exist.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:122 char:23\r\n+ ...   $tfmFolderNet7 =  Get-ChildItem -Path \"$libPath$delimeter*\" | Where ...\r\n+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\v-ssue...kaging.Core\\lib:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n\r\nGet-ChildItem : Cannot find path 'C:\\Users\\v-ssue\\AppData\\Local\\Temp\\PatchTempFolder\\NuGet.Packaging.Core\\lib' because it does not exist.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:124 char:23\r\n+ ...   $tfmFolderNet5 =  Get-ChildItem -Path \"$libPath$delimeter*\" | Where ...\r\n+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\v-ssue...kaging.Core\\lib:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n\r\nGet-ChildItem : Cannot find path 'C:\\Users\\v-ssue\\AppData\\Local\\Temp\\PatchTempFolder\\NuGet.Packaging.Core\\lib' because it does not exist.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:126 char:31\r\n+ ... lderNetcoreapp50 =  Get-ChildItem -Path \"$libPath$delimeter*\" | Where ...\r\n+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\v-ssue...kaging.Core\\lib:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n\r\nGet-ChildItem : Cannot find path 'C:\\Users\\v-ssue\\AppData\\Local\\Temp\\PatchTempFolder\\NuGet.Packaging.Core\\lib' because it does not exist.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:128 char:32\r\n+ ... derNetstandard20 =  Get-ChildItem -Path \"$libPath$delimeter*\" | Where ...\r\n+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\v-ssue...kaging.Core\\lib:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n\r\nGet-ChildItem : Cannot find path 'C:\\Users\\v-ssue\\AppData\\Local\\Temp\\PatchTempFolder\\NuGet.Packaging.Core\\lib' because it does not exist.\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:130 char:31\r\n+ ... lderNetcoreapp21 =  Get-ChildItem -Path \"$libPath$delimeter*\" | Where ...\r\n+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\v-ssue...kaging.Core\\lib:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n\r\nPatchNupkgs : No dlls found in any TFM folder!\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:363 char:19\r\n+ ...   $result = PatchNupkgs -nupkgId $nupkgId -suffix $suffix -tempFolder ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,PatchNupkgs\r\n\r\nPatch : Failed to patch NuGet.Packaging.Core!\r\nAt C:\\Users\\v-ssue\\Desktop\\SDKPatchTool\\SDKPatch.ps1:415 char:15\r\n+     $result = Patch $SDKPath $SDKVersion $NupkgsPath\r\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Patch\r\n```\r\n**Notes:**\r\n1.The repro rate is 100%.\r\n2.It also repro with “-SDKChannel 9.0.1xx” in the step4.\r\n3.It blocked Package Signing Test & Dotnet Package Search Test & Dotnet List Package Test.\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"39776853603","Type":"IssuesEvent","CreatedAt":"2024-07-01T18:38:50","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13559","RelatedDescription":"Closed issue \"PERF: Version and VersionRange allocations are very prevalent in profiles of Roslyn solution load\" (#13559) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS17\n\n### Worked before?\n\nN/A\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nSee https://github.com/NuGet/NuGet.Client/pull/5862 for more details\r\n\r\nOpen VS\r\nWait for things to calm down\r\nStart profiling\r\nOpen Roslyn.sln, open a file it none opened\r\nWait for things to calm down\r\nStop profiling\n\n### Verbose Logs\n\n_No response_"},{"Id":"39774885943","Type":"IssuesEvent","CreatedAt":"2024-07-01T17:21:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13600","RelatedDescription":"Opened issue \"Docs: Update the documentation for NU1603 to make it current to the NU1603 wording in 6.11\" (#13600) at NuGet/Home","RelatedBody":"Related: https://github.com/NuGet/NuGet.Client/pull/5812."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-02T03:30:18.3301875Z","RunDurationInMilliseconds":970}