{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12683760737","Type":"IssuesEvent","CreatedAt":"2020-06-19T20:34:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8067","RelatedDescription":"Opened issue \"[Search] Add an \"Include deprecated\" filter\" (#8067) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nI suspect that users prefer to install the latest stable non-deprecated version of a package. Furthermore, I suspect users avoid packages if all its versions are deprecated. These are hypotheses that need to be validated.\r\n\r\n### Describe the solution you'd like\r\nWe should consider adding an \"Include deprecated\" filter, similar to the \"Include prerelease\" filter. This would be a natural extension to the Advanced Search feature.\r\n\r\n/cc @t-mog-msft  @chgill-MSFT  @joelverhagen  "},{"Id":"12683730390","Type":"PullRequestEvent","CreatedAt":"2020-06-19T20:30:00","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8065","RelatedDescription":"Merged pull request \"UI Polish\" (#8065) at NuGet/NuGetGallery","RelatedBody":"\r\n* Removed \"+\" signs from total number of dependents.\r\n* Removed number if there are 0 dependents \r\n* Added \"popular\" to text for GitHub dependents, i.e. \"Showing the top 5 popular GitHub repositories that depend on Newtonsoft.Json:\"\r\n\r\nBefore:\r\n![Before(Zero)](https://user-images.githubusercontent.com/63263324/85172300-499f4280-b260-11ea-845d-d0230802b7da.png)\r\nAfter:\r\n![After(zero)](https://user-images.githubusercontent.com/63263324/85172317-502dba00-b260-11ea-8018-df26e8d54386.png)\r\nBefore:\r\n![Before(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172403-82d7b280-b260-11ea-88bd-bc83236db58e.png)\r\nAfter:\r\n![After(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172412-89662a00-b260-11ea-90e9-2ed95f212cad.png)\r\nProgress on: https://github.com/NuGet/NuGetGallery/issues/8063"},{"Id":"12683459557","Type":"IssuesEvent","CreatedAt":"2020-06-19T19:48:38","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8066","RelatedDescription":"Opened issue \"Add documentation for advanced search\" (#8066) at NuGet/NuGetGallery","RelatedBody":"Add the documentation about the new sorting and filtering features on https://docs.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages"},{"Id":"12683424079","Type":"IssuesEvent","CreatedAt":"2020-06-19T19:43:27","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8000","RelatedDescription":"Closed issue \"[Search sorting] Create engineering spec\" (#8000) at NuGet/NuGetGallery","RelatedBody":"Create an engineering spec containing all gallery, search, and protocol changes. Review this with the nuget server and client team (client since there are protocol changes). "},{"Id":"12683216752","Type":"PullRequestEvent","CreatedAt":"2020-06-19T19:12:26","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8065","RelatedDescription":"Opened pull request \"UI Polish\" (#8065) at NuGet/NuGetGallery","RelatedBody":"\r\n* Removed \"+\" signs from total number of dependents.\r\n* Removed number if there are 0 dependents \r\n* Added \"popular\" to text for GitHub dependents, i.e. \"Showing the top 5 popular GitHub repositories that depend on Newtonsoft.Json:\"\r\n\r\nBefore:\r\n![Before(Zero)](https://user-images.githubusercontent.com/63263324/85172300-499f4280-b260-11ea-845d-d0230802b7da.png)\r\nAfter:\r\n![After(zero)](https://user-images.githubusercontent.com/63263324/85172317-502dba00-b260-11ea-8018-df26e8d54386.png)\r\nBefore:\r\n![Before(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172403-82d7b280-b260-11ea-88bd-bc83236db58e.png)\r\nAfter:\r\n![After(Plus and popular)](https://user-images.githubusercontent.com/63263324/85172412-89662a00-b260-11ea-90e9-2ed95f212cad.png)\r\nProgress on: https://github.com/NuGet/NuGetGallery/issues/8063"},{"Id":"12683092874","Type":"IssuesEvent","CreatedAt":"2020-06-19T18:54:43","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8064","RelatedDescription":"Opened issue \"Improve end-to-end autocomplete tests \" (#8064) at NuGet/NuGetGallery","RelatedBody":"The DEV china service index had the incorrect autocomplete endpoint. Our end-to-end tests should catch this issue in the future."},{"Id":"12683011219","Type":"IssuesEvent","CreatedAt":"2020-06-19T18:42:52","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8063","RelatedDescription":"Opened issue \"[Dependents] Polish current UI\" (#8063) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12682172971","Type":"PullRequestEvent","CreatedAt":"2020-06-19T16:49:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8060","RelatedDescription":"Merged pull request \"Don't track the package push failure if the client has disconnected\" (#8060) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8022\r\n\r\nI was unable to reproduce the issue with many wild attempts (local devbox, app service directly, APIM, custom HTTP client implementation, raising firewall in the middle of request, killing connection via external tools, etc) but from reading online this seems like the recommended implementation. See https://stackoverflow.com/questions/4772597 for some recommendations. We can't use the cancellation token approach because the API that is throwing does not accept a token. It's this line that throws:\r\nhttps://github.com/NuGet/NuGetGallery/blob/84ea5890b77e79b1f218521f2c031f8ee6c311f5/src/NuGetGallery/Controllers/ApiController.cs#L984"},{"Id":"12674942013","Type":"IssuesEvent","CreatedAt":"2020-06-18T23:59:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8062","RelatedDescription":"Opened issue \"Investigate blob storage retries in Catalog2Registration\" (#8062) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nCatalog2Registration should have retries on Blob Storage. This exception was logged:\r\n\r\n```\r\n\"Job Failed to Run\": \"Microsoft.WindowsAzure.Storage.StorageException: The client could not finish the operation within specified timeout. ---> System.TimeoutException: The client could not finish the operation within specified timeout.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.WindowsAzure.Storage.Core.Executor.Executor.EndExecuteAsync[T](IAsyncResult result) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Executor\\Executor.cs:line 51\r\n   at Microsoft.WindowsAzure.Storage.Core.Util.AsyncExtensions.<>c__DisplayClass7.<CreateCallbackVoid>b__5(IAsyncResult ar) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Util\\AsyncExtensions.cs:line 121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.AzureStorage.<OnLoadAsync>d__19.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\AzureStorage.cs:line 356\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.Storage.<LoadAsync>d__17.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\Storage.cs:line 107\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.Storage.<LoadStringAsync>d__19.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\Storage.cs:line 152\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.DurableCursor.<LoadAsync>d__5.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\DurableCursor.cs:line 34\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Catalog2Registration.Catalog2RegistrationCommand.<ExecuteAsync>d__9.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Catalog2RegistrationCommand.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Catalog2Registration.Catalog2RegistrationCommand.<ExecuteAsync>d__8.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Catalog2RegistrationCommand.cs:line 49\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Job.<Run>d__1.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Job.cs:line 23\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.JobRunner.<JobLoop>d__14.MoveNext() in E:\\A\\_work\\3286\\s\\src\\NuGet.Jobs.Common\\JobRunner.cs:line 265\r\nRequest Information\r\nRequestID:\r\nRequestDate:\r\nStatusMessage:\r\nErrorCode:\r\n\"\r\n```\r\n\r\n### To Reproduce\r\n\r\nSee if you can put a delegating handler in the request pipeline.\r\nAdd a host name mapping for the Azure Blob Storage to 192.168.255.255. \r\n\r\n### Expected behavior\r\n\r\nThere should be retries. It's not clear that there are retries implemented in the code. Let's verify retries occur for exceptions like these."},{"Id":"12674894546","Type":"PullRequestEvent","CreatedAt":"2020-06-18T23:49:34","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8061","RelatedDescription":"Merged pull request \"Update `websocket-extensions` dependency\" (#8061) at NuGet/NuGetGallery","RelatedBody":"Bump `websocket-extensions` to the latest version. This is pulled in transitively by the `grunt-contrib-watch` development dependency. I verified this change by ensuring `grunt` still ran fine.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/network/alert/src/Bootstrap/package-lock.json/websocket-extensions/open\r\nAddresses https://github.com/nuget/engineering/issues/3231"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12704367161","Type":"IssuesEvent","CreatedAt":"2020-06-23T01:11:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9707","RelatedDescription":"Closed issue \"Use old NuGet.Build.Tasks.Pack package in our repo will pack incorrect nupkgs\" (#9707) at NuGet/Home","RelatedBody":"In dev, we use 4.9.2 for package NuGet.Build.Tasks.Pack. \r\nBut it doesn't contain the right logic in recognizing net5.0 TFM. So the nupkgs we generated and shipped to dotnet are incorrect (treating net5.0 as full framework)"},{"Id":"12704292464","Type":"IssuesEvent","CreatedAt":"2020-06-23T00:57:02","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9707","RelatedDescription":"Opened issue \"Use old NuGet.Build.Tasks.Pack package in our repo will pack incorrect nupkgs\" (#9707) at NuGet/Home","RelatedBody":"In dev, we use 4.9.2 for package NuGet.Build.Tasks.Pack. \r\nBut it doesn't contain the right logic in recognizing net5.0 TFM. So the nupkgs we generated and shipped to dotnet are incorrect (treating net5.0 as full framework)"},{"Id":"12703692717","Type":"IssuesEvent","CreatedAt":"2020-06-22T23:01:24","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9706","RelatedDescription":"Opened issue \"adding or updating nuget packages creates app.config files for dll projects\" (#9706) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1057603/adding-or-updating-nuget-packages-creates-appconfi.html)._\n\n---\nadding or updating nuget packages creates app.config files for dll projects. \n\ndll projects dont need app.config files. These files cause needless source control churn, so I delete them before commit.  I dont want to keep deleting these files. Please stop creating them when they arent needed.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/1/2020, 01:03 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Fernando Aguilar [MSFT] on 6/5/2020, 01:29 PM: \n\n<p>â€‹Thanks for your feedback, Andrew.</p>\n<p>I imagine NuGet is trying to add binding redirects to the projects, as documented <a target='_blank' href=\"https://docs.microsoft.com/en-us/nuget/reference/ps-reference/ps-ref-add-bindingredirect\">here</a>.</p>\n<p>Are you using packages.config-styled NuGet references? If thatâ€™s the case, is it possible to <a target='_blank' href=\"https://docs.microsoft.com/en-us/nuget/consume-packages/migrate-packages-config-to-package-reference\">migrate to PackageReference</a>? That way, all binding redirects are managed by NuGet at build time, eliminating the need of binding redirects provided in config files.</p>\n\n#### Andrew Stanton on 6/6/2020, 02:37 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n\n#### Nikolche Kolev [MSFT] solved on 6/19/2020, 05:25 PM, 0 votes: \n\n<p>Thank you for filling this issue. This behavior is by design.</p>\n<p>In packages.config NuGet is in charge of managing the binding redirects. Whenever a package change happens, NuGet determines whether a binding redirect is needed. NuGet will only apply the binding redirects when they are deemed necessary.</p>\n<p>A sample that I tried out.</p>\n<ol>\n<li>Create a .NET Framework Class Library (.NET Framework 4.7.2)</li>\n<li>Observe that there is no app.config</li>\n<li>Install the Newtonsoft.Json package, version 12.0.3.</li>\n<li>Observe that there is no app.config.</li>\n<li>Install NuGet.Protocol 5.6.0.</li>\n<li>Because NuGet.Protocol itself depends on Newtonsoft.Json 9.0.1, NuGet decides to add a binding redirect.</li>\n</ol><p>You can consider disabling the NuGet application of binding redirects altogether with a NuGet.Config setting, see <a target='_blank' href=\"https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#bindingredirects-section\">https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#bindingredirects-section</a> </p>\n\n#### Andrew Stanton on 6/20/2020, 06:20 PM: \n\n<p><a rel=\"user\" href=\"https://developercommunity.visualstudio.com/users/3982/7c949e63-2007-471d-9103-3b5b5c8989eb.html\" nodeid=\"3982\">@Nikolche Kolev [MSFT]</a> - does step 6 include creating an app.config file for a project type that does not make use of this file?</p><p>This behavior creates work churn (have to remember to delete it from the project before checkin) and source control churn (someone forgot to delete it and checked it in) for projects.that cant even use this file. Having to also deal with all of the vspscc and vssscc related churn that nuget creates is already a pain. Adding app.configs just piles on. Reformatting our config files when they didn't need it also piles on (i even offered working code - without condition - to fix that reformatting).<br><br>I hope you understand why I dont think that the intention of the design is to make more work for users by junking up the project files, and why this truly seems like an unintended side effect. I'm asking (again) to please fix some of these unintended side effects that constantly nag in my daily work and steal my time and attention.</p>\n"},{"Id":"12701672299","Type":"IssuesEvent","CreatedAt":"2020-06-22T18:37:32","Actor":"dseefeld","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9705","RelatedDescription":"Opened issue \"Invalid Nuget.Build.Tasks.Console package when building from source\" (#9705) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nBuilding Nuget.Build.Tasks.Console in source-build results in invalid contentFiles in the generated package.  Trailing backslashes in the PackagePath on the two lines linked below cause a double slash in the output package.  Related to https://github.com/NuGet/Home/issues/7004\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/784274cc9b2002ca73055e8134064261118d8a01/src/NuGet.Core/NuGet.Build.Tasks.Console/NuGet.Build.Tasks.Console.csproj#L67-L68\r\n\r\ndotnet.exe --version (if appropriate): 5.0.100-preview.4.20258.7\r\nOS version (i.e. win10 v1607 (14393.321)): CentOS Linux 8 (Core)\r\n\r\nWorked before? Not sure\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Build Nuget.Build.Tasks.Console on a non-windows OS\r\n\r\n2. Inspect the resulting nuspec in Nuget.Build.Tasks.Console.*.nupkg (Note the double slash in contentFiles entries)\r\n\r\n\r\n\r\n"},{"Id":"12701547550","Type":"IssuesEvent","CreatedAt":"2020-06-22T18:22:47","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9704","RelatedDescription":"Opened issue \"Search CLI Tool for NuGet.exe and Dotnet.exe\" (#9704) at NuGet/Home","RelatedBody":"This project is a search tool available through the command line for NuGet.exe and Dotnet.exe that allows users to query the NuGet API and see its search results.\r\n\r\n- [ ] Learning how to query a NuGet server endpoint\r\n\r\n- [ ] Writing a feature spec for this issue\r\n\r\n- [ ] Figuring out how to consolidate and display search results from the queries\r\n\r\n- [ ] Figure out how to handle search results from multiple sources\r\n\r\n- [ ] Refactoring code to fit into the codebase properly\r\n\r\n- [ ] Writing tests for the new feature"},{"Id":"12701159561","Type":"IssuesEvent","CreatedAt":"2020-06-22T17:37:59","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9681","RelatedDescription":"Closed issue \"Rebase xplat feature branch from dev\" (#9681) at NuGet/Home","RelatedBody":"When all the rest PRs got merged. Rebase xplat feature branch from dev.\r\nFixing all the broken tests after rebasing:\r\n1.two restore tests related to CPVM are recently added, and they doesn't add creating global.json. \r\n2.20+pack tests failure still needs investigation."},{"Id":"12701147989","Type":"IssuesEvent","CreatedAt":"2020-06-22T17:36:42","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8940","RelatedDescription":"Closed issue \"Broken tests in NuGet.CommandLine.Test for Mono on Mac\" (#8940) at NuGet/Home","RelatedBody":"There're 2 broken tests for mono on Mac:\r\nNuGetListCommandTest.ListCommand_InvalidInput_V3_NotFound(invalidInput: \"https://api.nuget.org/v4/index.json\")\r\nNuGetVerifyCommandTest.VerifyCommand_WithAuthorSignedPackage_FailsGracefully"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-23T05:30:40.7470594Z","RunDurationInMilliseconds":1457}