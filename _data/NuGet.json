{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24125959881","Type":"PullRequestEvent","CreatedAt":"2022-09-21T00:25:05","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9245","RelatedDescription":"Merged pull request \"Adding Migrations for AnonymousUpload support.\" (#9245) at NuGet/NuGetGallery","RelatedBody":"Adding columns to support anonymous upload and claim."},{"Id":"24125948665","Type":"PullRequestEvent","CreatedAt":"2022-09-21T00:24:00","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9240","RelatedDescription":"Merged pull request \"[hackathon 2022] Add anon uploads feature flag support to packages controller\" (#9240) at NuGet/NuGetGallery","RelatedBody":"This will get us into the UploadPackage get action with a null user (at which point it will NRE)."},{"Id":"24125926414","Type":"PullRequestEvent","CreatedAt":"2022-09-21T00:21:52","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9245","RelatedDescription":"Opened pull request \"Adding Migrations for AnonymousUpload support.\" (#9245) at NuGet/NuGetGallery","RelatedBody":"Adding columns to support anonymous upload and claim."},{"Id":"24125716605","Type":"IssuesEvent","CreatedAt":"2022-09-21T00:01:35","Actor":"Gsonovb","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9244","RelatedDescription":"Opened issue \"[NuGet.org Bug]: can't download \"OrchardCore.Rules\" Package in China\" (#9244) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nHi,\r\n\r\nI tried to create Orchard CMS project,\r\nAdding ”OrchardCore.Application.Cms.Targets“  package, error \"not found\".\r\n![image](https://user-images.githubusercontent.com/3164300/191384840-fb7a6169-b5d7-4acb-b5d2-eaa55aa78183.png)\r\n\r\nUsing Fiddler to view the request,\r\n\r\n\"GET, https://api.nuget.org/v3-flatcontainer/orchardcore.rules/index.json” return is 404.\r\n\r\nUsing Fiddler's AutoResponder, send the correct response\r\n\r\nAnd then you see the request\r\n“GET https://api.nuget.org/v3-flatcontainer/orchardcore.rules/1.4.0/orchardcore.rules.1.4.0.nupkg” return  404.\r\n\r\n![image](https://user-images.githubusercontent.com/3164300/191384854-694004c1-1c70-44ea-a94c-786e9836123e.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3164300/191384862-86244abc-f4a2-47b1-849b-0b4f6bae9598.png)\r\n\r\n\r\nhttps://github.com/OrchardCMS/OrchardCore/discussions/12455\n\n### Repro Steps\n\n1. dotnet new web \r\n2.  dotnet add package OrchardCore.Application.Cms.Targets\n\n### Expected Behavior\n\nSuccessfully adding \"OrchardCore.Application.Cms.Targets“ and compile successfully\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24105473248","Type":"PullRequestEvent","CreatedAt":"2022-09-20T07:03:31","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9243","RelatedDescription":"Opened pull request \"Add \"special user\" logic for anonymous uploads\" (#9243) at NuGet/NuGetGallery","RelatedBody":"WIP"},{"Id":"24105377804","Type":"IssuesEvent","CreatedAt":"2022-09-20T06:58:28","Actor":"SharonTancy","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9242","RelatedDescription":"Opened issue \"[Feature]: Getting complete data of a package from database\" (#9242) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nHi,\r\n\r\nI'm wondering where does NuGetGallery store the package data at backend? Or which **database** is used to hold the metadata of these packages? Kusto DB or SQL DB or any other databases?\r\n\r\nThe most important thing I want to consult is that **can we access these databases to get the complete data of a given package** without downloading and write into DB by ourselves? We want not only the basic metadata(which can be fetched through RestAPI I think), but also some other thing like the **folder structure, assemblies contained** etc.\r\n\r\nThanks in advance!\n\n### The Elevator Pitch\n\nMaybe let us get the complete data of a package by accessing the DB?\n\n### Additional Context and Details\n\n_No response_"},{"Id":"24100435934","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:41:00","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9241","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Include a warning to 'add a backup admin' to your organization account\" (#9241) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nUsers often create company organizations to upload packages, and do not add any other Admins to the org. They then leave the company, leaving the company's organization account and its packages without an owner, and we aren't always able to restore the company's access to its resources.\r\n\r\nWe should add a warning/suggestion for a user to add multiple Admins to their organization account.\n\n### Repro Steps\n\n-\n\n### Expected Behavior\n\nUsers are advised to add backup Admins to their organization accounts.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24126780988","Type":"IssuesEvent","CreatedAt":"2022-09-21T01:44:23","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12103","RelatedDescription":"Opened issue \"[Bug]: IVsPackageInstallerServices APIs sometimes throw ProjectNotNominatedException\" (#12103) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nVS 17.2 and higher\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nNote, this affects developers of VS extensions, not directly customers using VS (unless the extension calls the NuGet API and doesn't handle this scenario).\r\n\r\nWe detected this via telemetry, so I'm not entirely sure under what scenarios it happens (I was unable to reproduce, doing some quick tests). Anyway, VS extension developers can call into NuGet's IVsPackageInstallerServices APIs, but under (known) scenarios, it will throw a ProjectNotNominatedException (which is private/internal to NuGet, so extension developers need to catch InvalidOperationException). Before VS17.2, the same scenario likely also threw an InvalidOperationException, but the exception type & message might not have been so clear why.\r\n\r\nThis happens because of the way that CPS PackageReference projects work in Visual Studio. CPS is (or was) the Common Project System (now just called the [Visual Studio Project System](https://github.com/microsoft/VSProjectSystem)). The design, in order to reduce UI delays and do more work in parallel on background threads, is much more async than previous project systems. The flow is that the project system does the minimal synchronous project loading on the UI thread, then does more project loading on a background thread, then when it's ready it notifies NuGet about the project, and all relevant NuGet properties and items, via an API called `IVsSolutionRestoreService3.NominateProjectAsync`. Until this time NuGet doesn't know that the project supports Nuget, it doesn't know what TFMs the project has, it doesn't know which, if any, packages it references. Therefore, there's a lot of NuGet functionality, like `GetInstalledPackages()` that can't work until the project is nominated.\r\n\r\nNote, there are APIs that allow extensions to get notifications that the project is ready, so extension developers should design their extension to handle this asynchronous nature of Visual Studio, even if it does make the code more complex. NuGet will stop collecting telemetry when this scenario is encountered, since it's, unfortunately, not actionable by us given the synchronous nature of the current APIs.\n\n### Verbose Logs\n\n_No response_"},{"Id":"24126760962","Type":"IssuesEvent","CreatedAt":"2022-09-21T01:42:24","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6051","RelatedDescription":"Closed issue \"Localize string resources in nuget.exe\" (#6051) at NuGet/Home","RelatedBody":"we are currently adding new commands to nuget.exe. Currently these strings are not being localized. we should fix this before shipping.\r\n\r\n**Epic tasks**\r\n\r\n- https://github.com/NuGet/Client.Engineering/issues/1757\r\n- https://github.com/NuGet/Client.Engineering/issues/1804\r\n- https://github.com/NuGet/Client.Engineering/issues/1771\r\n- https://github.com/NuGet/Home/issues/12066\r\n- https://github.com/NuGet/Home/issues/12067"},{"Id":"24120458525","Type":"IssuesEvent","CreatedAt":"2022-09-20T18:13:03","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9619","RelatedDescription":"Closed issue \"Replace BrowseObjectBase with LocalizableProperties once updated shell package available\" (#9619) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392#discussion_r431179016\r\n\r\nOnce the new package is available, this class can be removed."},{"Id":"24110240944","Type":"IssuesEvent","CreatedAt":"2022-09-20T10:43:44","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12102","RelatedDescription":"Opened issue \"[Bug]: The transitive package doesn’t show in “Installed” tab until reopening the solution\" (#12102) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.4.0.92\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n## Repro steps: \r\n1.  Set the environment Variable NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI=1.\r\n2. Create a new C# Console App (.Net Core) project.\r\n3. Right-click the project in Solution Explorer and select ‘Manage NuGet Packages…’ menu item to open PM UI. \r\n 4. Click “Browse” tab, search a package (e.g. “Microsoft.EntityFrameworkCore”) that has dependencies, select a package version [6.0.4] in the \"Version\" drop-down list in the right panel and click the “Install” button on the right.\r\n5. Switch to “Installed” tab.\r\n\r\n## Expected:\r\nThe transitive package should show in “Installed” tab.\r\n\r\n## Actual:\r\nThe transitive package doesn’t show in “Installed” tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/191237740-12394cc1-993a-4a62-b872-9c40c42ff462.png)\r\n\r\n## Notes: \r\n1. The transitive package can be show in “Installed” tab after closing solution/VS and reopening the same solution.\r\n2. The issue starts from NuGet Client Dev\\6.4.0.90.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"24100469418","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:44:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12003","RelatedDescription":"Closed issue \"[Bug]: [Pack] The error “NU5017: Cannot create a package that has no dependencies nor content” occurs when the NuspecBathPath is more than 5 layers\" (#12003) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nDev\\6.4.0.33\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n#### Details about Problem\r\nVS Version: Main\\32803.137\r\nNuGet Version: Dev\\6.4.0.33\r\nOS Version: Windows-11-Enterprise-21H2 ENU\r\n\r\n#### Detailed repro steps\r\n1. Create a C# Class Library (.NET 7.0) in VS. \r\n2. Put a nuspec file called \"Package.nuspec\" (the content is valid and correct) under a long path like C:\\Users\\v-luzh\\Source\\Repos.\r\n3. Run `“dotnet pack -p:NuspecFile=\"C:\\Users\\v-luzh\\Source\\Repos\\Package.nuspec\" -p:NuspecBasePath=C:\\Users\\v-luzh\\Source\\Repos”`, the packing is successful without any error.\r\n4. Run `“dotnet pack -p:NuspecFile=\"C:\\Users\\v-luzh\\Source\\Repos\\SpecFile\\Package.nuspec\" -p:NuspecBasePath=C:\\Users\\v-luzh\\Source\\Repos\\SpecFile”`.\r\n\r\n#### Expected\r\nThe package can be packed successfully (like the result of step3). \r\n\r\n#### Actual\r\nThe error “NU5017: Cannot create a package that has no dependencies nor content” occurs as below.\r\n![image](https://user-images.githubusercontent.com/20632625/182815733-9d32e686-617c-429c-850a-8b9c1191642e.png)\r\n\r\n#### Note:\r\n1.It seems not a regression since it reproes on NuGet Client 5.11.2.2.\r\n2.It reproes when the NuspecBasePath 5 layers, doesn't repro when the NuspecBasePath <5 layers."},{"Id":"24100088710","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:09:42","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12101","RelatedDescription":"Closed issue \"[Bug]: ArgumentNullException in PackTaskLogic.GetPackArgs\" (#12101) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\nMSBuild 17.3\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\nRepro:\r\n1. git clone https://github.com/KirillOsenkov/MetadataTools\r\n2. msbuild /r /m /bl /p:Configuration=Release src\\BinaryCompatChecker\\BinaryCompatChecker.csproj\r\n\r\nThis PackTask fails:\r\nhttps://github.com/KirillOsenkov/MetadataTools/blob/cd53fdadc350aef6c7334d5eb2cadfb9eb566b68/src/BinaryCompatChecker/BinaryCompatChecker.csproj#L22-L36\r\n\r\nArgumentNullException during packing of a .nuspec file because RootDir and Directory are not available off the Nuspec file request:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3827ea2b26476e65513514130cdcaf0166f337d8/src/NuGet.Core/NuGet.Build.Tasks.Pack/PackTaskLogic.cs#L558-L559\r\n\r\nneed to get the RootDir and Directory and handle them being null.\r\n\r\n```\r\n \tmscorlib.dll!System.IO.Path.Combine(string path1, string path2) Line 1199\tC#\r\n>\tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.InitCurrentDirectoryAndFileName(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request, NuGet.Commands.PackArgs packArgs) Line 557\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackArgs(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) Line 69\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTask.Execute() Line 128\tC#\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24100002267","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:02:22","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12101","RelatedDescription":"Opened issue \"[Bug]: ArgumentNullException in PackTaskLogic.GetPackArgs\" (#12101) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild 17.3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nArgumentNullException during packing of a .nuspec file because RootDir and Directory are not available off the Nuspec file request:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3827ea2b26476e65513514130cdcaf0166f337d8/src/NuGet.Core/NuGet.Build.Tasks.Pack/PackTaskLogic.cs#L558-L559\r\n\r\nneed to get the RootDir and Directory and handle them being null.\r\n\r\n```\r\n \tmscorlib.dll!System.IO.Path.Combine(string path1, string path2) Line 1199\tC#\r\n>\tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.InitCurrentDirectoryAndFileName(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request, NuGet.Commands.PackArgs packArgs) Line 557\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackArgs(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) Line 69\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTask.Execute() Line 128\tC#\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"24099791705","Type":"IssuesEvent","CreatedAt":"2022-09-19T22:43:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11618","RelatedDescription":"Closed issue \"[Bug]: Private NuGet Feed errors with `dotnet new --update-check`\" (#11618) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.101\n\n### Worked before?\n\nno\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nFeedback ticket: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1460341\r\n\r\nSimilar to https://github.com/NuGet/Home/issues/11169...\r\n>  For some reason nuget makes multiple calls to the credprovider and every next call starting from 2nd passes IsRetry: true as request argument, which invalidates cached token. \r\n\r\nTo reproduce:\r\n1. Clear nuget cache (dotnet nuget locals all -c) and credprovider cache ([clear this folder](https://github.com/microsoft/artifacts-credprovider/blob/master/README.md#session-token-cache-locations))\r\n2. Set nuget.config to use exclusively private feed in ADO\r\n3. dotnet new --uninstall Microsoft.DotNet.Web.Spa.ProjectTemplates (remove template for repro if it's already installed) \r\n4. Run `dotnet new --install Microsoft.DotNet.Web.Spa.ProjectTemplates --interactive`\r\n5. Observe multiple sequential interactive prompts\n\n### Verbose Logs\n\n_No response_"},{"Id":"24098596021","Type":"IssuesEvent","CreatedAt":"2022-09-19T21:17:33","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11918","RelatedDescription":"Closed issue \"[Bug]: NuGet.VisualStudio.Implementation.Extensibility.VsPathContextProvider.TryCreateContext fault\" (#11918) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS 2022 Enterprise, Version 17.3 Preview 3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nDisable the option to download missing packages\r\n\r\n1. Create a new WPF solution\r\n2. Open the Toolbox while in the .xaml file\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":126,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2022-09-21T03:30:25.9984391Z","RunDurationInMilliseconds":1577}