{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37386891919","Type":"PullRequestEvent","CreatedAt":"2024-04-11T20:42:24","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9903","RelatedDescription":"Merged pull request \"Fix Link Screen Reading Issue On Upload Package Page And About Page\" (#9903) at NuGet/NuGetGallery","RelatedBody":"Remove aria-label and alt from links for bug # 1979902\r\nBug link:\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1979902"},{"Id":"37386887529","Type":"PullRequestEvent","CreatedAt":"2024-04-11T20:42:13","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9901","RelatedDescription":"Merged pull request \"Remove aria-expanded Attribute from Div\" (#9901) at NuGet/NuGetGallery","RelatedBody":"Remove aria-expanded=\"true\" from div id=\"upload-package-form\" from UploadPackage.cshtml to fix accessibility bug #1979939\r\nBug link:\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1979939\r\n"},{"Id":"37386857150","Type":"IssuesEvent","CreatedAt":"2024-04-11T20:40:59","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9866","RelatedDescription":"Closed issue \"[UI] Add new theme to Admin pages\" (#9866) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37382806350","Type":"PullRequestEvent","CreatedAt":"2024-04-11T18:05:17","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9914","RelatedDescription":"Opened pull request \"Dev martinrrm dark theme user pages\" (#9914) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Detail 1\r\n* Detail 2\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123\r\n\r\n#### User Packages\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/98de0142-7506-4ec5-bf18-8264479c595b)\r\n\r\n#### Manage Organizations\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/e7d497dd-49b7-4d42-901e-2a61502d25ea)\r\n\r\n#### Api Keys\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/4726a434-34c1-482e-b84c-3870f8d84c65)\r\n\r\n"},{"Id":"37381294936","Type":"PullRequestEvent","CreatedAt":"2024-04-11T17:09:27","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9891","RelatedDescription":"Merged pull request \"[UI] Add new theme to Admin pages (part 3)\" (#9891) at NuGet/NuGetGallery","RelatedBody":"Adds new theme to Admin pages Verify API, Feature Flags, Flights, Lucene, Popularity Transfers, Namespaces, Unlist/Relist packages and Validate/Revalidate packages.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9866\r\nSpec: https://github.com/NuGet/Engineering/pull/5209\r\nMain Issue: https://github.com/NuGet/NuGetGallery/issues/8773\r\n\r\n#### Verify API\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/cf9ecdc8-bc5d-47f9-84ac-988901891452)\r\n\r\n#### Feature Flags \r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/34ed20ca-44e9-4fd2-96ac-53421bffd32a)\r\n\r\n#### Flights\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/510176d0-29fb-4e99-989c-8ea2f9518cd7)\r\n\r\n#### Lucene \r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/243c9b2f-1751-4468-b664-e6b26d332699)\r\n\r\n#### Popularity Transfers\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/36199cad-ac71-45d6-abac-aadae788ac45)\r\n\r\n#### Namespaces\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/b401df6f-48d1-4ce9-a1c0-c5287b71afe2)\r\n\r\n#### Unlist/relist packages\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/18e241e2-3f52-40c7-bbd0-ee51fda11097)\r\n"},{"Id":"37380016733","Type":"IssuesEvent","CreatedAt":"2024-04-11T16:22:32","Actor":"alanssitis","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9913","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Build on Linux breaks due to untrusted signer.\" (#9913) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nA CI pipeline running on Linux was breaking, and I encountered the following error: `error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer.` This looked very suspect as it was an official Microsoft package, and the certificate looked like it belonged to Microsoft. This was also seen locally until the \"build button\" was used in an IDE.\n\n### Repro Steps\n\nI was able to recreate this behavior and bug in a repo which runs it in a container (Work repo is private).\r\n\r\n1. Clone the following repo https://github.com/alanssitis/reproduce-dotnet-bug.\r\n2. In the project root, run `docker run .`.,\n\n### Expected Behavior\n\nThe build should fail with a untrusted signer error.\r\n\r\nInterestingly enough, I could \"fix\" this locally by building the project using an IDE (Rider), which I'd assume did something under the hood with the `dotnet` CLI to resolve this. I was not able to replicate the behavior carried out by the IDE, and therefore, I still cannot use NuGet.org in my CI, which is blocking my work.\r\n\r\nI have only verified this behavior on PopOS! 22.04, Ubuntu 22.04, and Debian Bookworm.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\nBuilding the container locally netted the following logs:\r\n```\r\n$ docker build . -t test\r\n[+] Building 4.0s (8/8) FINISHED                                                                                                                                           docker:default\r\n => [internal] load build definition from Dockerfile                                                                                                                                 0.0s\r\n => => transferring dockerfile: 148B                                                                                                                                                 0.0s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim                                                                                                      0.1s\r\n => [internal] load .dockerignore                                                                                                                                                    0.0s\r\n => => transferring context: 57B                                                                                                                                                     0.0s\r\n => [1/4] FROM mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim@sha256:7861b15f318949cf9214d9ad5382b680a0e22e3b8673180707aa0c594ab75656                                                0.0s\r\n => [internal] load build context                                                                                                                                                    0.0s\r\n => => transferring context: 53.19kB                                                                                                                                                 0.0s\r\n => CACHED [2/4] WORKDIR /src/                                                                                                                                                       0.0s\r\n => [3/4] COPY . .                                                                                                                                                                   0.1s\r\n => ERROR [4/4] RUN dotnet build ./test/test.csproj                                                                                                                                  3.7s\r\n------\r\n > [4/4] RUN dotnet build ./test/test.csproj:\r\n0.482 MSBuild version 17.9.8+b34f75857 for .NET\r\n0.830   Determining projects to restore...\r\n2.968 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n2.968   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n2.968   Signature type: Author\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.153 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.153   Signature type: Author\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.158   Failed to restore /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj (in 1.51 sec).\r\n3.178 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.178   Signature type: Author\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.561 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.578\r\n3.579 Build FAILED.\r\n3.579\r\n3.579 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.579     0 Warning(s)\r\n3.579     4 Error(s)\r\n3.579\r\n3.579 Time Elapsed 00:00:02.99\r\n------\r\nDockerfile:4\r\n--------------------\r\n   2 |     WORKDIR /src/\r\n   3 |     COPY . .\r\n   4 | >>> RUN dotnet build ./test/test.csproj\r\n   5 |\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c dotnet build ./test/test.csproj\" did not complete successfully: exit code: 1\r\n```"},{"Id":"37360302118","Type":"PullRequestEvent","CreatedAt":"2024-04-11T05:26:38","Actor":"v-manil2","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9881","RelatedDescription":"Merged pull request \"[ReleasePrep][2024.03.26] RI of dev into main\" (#9881) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37358954408","Type":"PullRequestEvent","CreatedAt":"2024-04-11T04:01:21","Actor":"v-manil2","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9912","RelatedDescription":"Merged pull request \"[ReleasePrep][2024.04.10]FI of main into dev\" (#9912) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37391599634","Type":"IssuesEvent","CreatedAt":"2024-04-12T01:11:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13389","RelatedDescription":"Opened issue \"Update the NuGet.Client infrastructure to ensure we're always testing against the versions of the .NET SDK we insert into.\" (#13389) at NuGet/Home","RelatedBody":"Follow-up for https://github.com/NuGet/Client.Engineering/issues/2681. \r\n\r\n- Update the NuGet.Client infrastructure to ensure we're always testing against the versions of the .NET SDK we insert into.\r\n  - The .NET integration should test against both current minor and next major version of the SDK.\r\n- Update the branching checklist with instructions for testing against the correct .NET SDK.\r\n"},{"Id":"37391585035","Type":"IssuesEvent","CreatedAt":"2024-04-12T01:10:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13388","RelatedDescription":"Opened issue \"Add relative path tests for dotnet list package\" (#13388) at NuGet/Home","RelatedBody":"Follow up for https://github.com/NuGet/Home/issues/12954 and https://github.com/NuGet/Client.Engineering/issues/2681. \r\n\r\n- Add relative path tests to the NuGet.Client repository\r\n- Add more extensive validation of dotnet list package inputs on the NuGet.Client side. (For example, path has to be a full path)."},{"Id":"37365850741","Type":"IssuesEvent","CreatedAt":"2024-04-11T09:04:58","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13312","RelatedDescription":"Closed issue \"\"Duplicate frameworks found\" when restoring using static graph\" (#13312) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n17.9\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nRestoring a minimal Microsoft.Net.Sdk project succeeds when RestoreUseStaticGraphEvaluation is false but fails with `Duplicate frameworks found: 'net40, net40'` when RestoreUseStaticGraphEvaluation is true.\n\n### Repro\n\n1. Copy the following to \"Project.proj\"\n```xml\n<Project Sdk=\"Microsoft.Net.Sdk\">\n  <PropertyGroup>\n    <TargetFrameworks>net472;net48</TargetFrameworks>\n    <CopyBuildOutputToOutputDirectory>false</CopyBuildOutputToOutputDirectory>\n  </PropertyGroup>\n  <Target Name=\"CreateManifestResourceNames\" />\n  <Target Name=\"CoreCompile\" />\n</Project>\n```\n2. Run `msbuild /restore /p:RestoreUseStaticGraphEvaluation=false Project.proj` which results in `Build succeeded`\n3. Run `msbuild /restore /p:RestoreUseStaticGraphEvaluation=true Project.proj` which results in `Invalid restore input. Duplicate frameworks found: 'net40, net40'. Input files: Project.proj`\n\n### Verbose Logs\n\n_No response_"},{"Id":"37354968422","Type":"PullRequestEvent","CreatedAt":"2024-04-10T23:51:26","Actor":"skofman1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/13386","RelatedDescription":"Merged pull request \"Update CONTRIBUTING.md - Fix link to Issue-Triage-Policy\" (#13386) at NuGet/Home","RelatedBody":"Fix link to Issue-Triage-Policy"},{"Id":"37354743037","Type":"PullRequestEvent","CreatedAt":"2024-04-10T23:36:47","Actor":"skofman1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13386","RelatedDescription":"Opened pull request \"Update CONTRIBUTING.md - Fix link to Issue-Triage-Policy\" (#13386) at NuGet/Home","RelatedBody":"Fix link to Issue-Triage-Policy"},{"Id":"37354699249","Type":"IssuesEvent","CreatedAt":"2024-04-10T23:34:07","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13385","RelatedDescription":"Opened issue \"Remove NuGet.Packaging.Core code\" (#13385) at NuGet/Home","RelatedBody":"Follow-up to https://github.com/NuGet/Home/issues/12495.\r\n\r\nOnce https://github.com/NuGet/Home/issues/12495 is done without repercussions, we can remove the code as well."},{"Id":"37345292029","Type":"IssuesEvent","CreatedAt":"2024-04-10T16:56:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13055","RelatedDescription":"Closed issue \"Vulnerability InfoBar remains visible in the Solution Explorer after closing solution\" (#13055) at NuGet/Home","RelatedBody":"When closing a solution when the vulnerability infobar was shown, I noticed that the infobar remains visible. When solutions are closed, this infobar should be removed since the context is no longer present in VS.\r\n\r\n![image](https://github.com/NuGet/Home/assets/49205731/06527807-1b3b-4b1f-aa45-f2cdaf9adaf0)\r\n"},{"Id":"37331323302","Type":"IssuesEvent","CreatedAt":"2024-04-10T10:05:54","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13384","RelatedDescription":"Opened issue \"[Bug Bash] The vulnerable warning flashed and disappeared in the Error List window when reloading the solution which had installed vulnerable package\" (#13384) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.11.0.9\n\n### Worked before?\n\nIt’s not a regression since it is a new feature.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Create a C# Console App (.NET Core 8.0) project.\r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.\r\n3. Select the package source: “nuget.org” near the gear button.\r\n4. Go to the \"Browse\" tab and search for a package (e.g. \"Newtonsoft.Json\").\r\n5. Select a vulnerable package version (e.g. 12.0.1) and install the package.\r\n6. Close VS with the solution saved and reload that solution again.\r\n#### Expected Result: \r\nThe vulnerable warning should be showing in the Error List window.\r\n#### Actual Result:\r\nThe vulnerable warning flashed and disappeared immediately in the Error List window as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/6213ef92-8d8e-4326-8425-6a4bc04240d8)\r\n#### Notes:\r\n1.Repro rate: 100%.\r\n2.It is not a regression since it is a new feature.\r\n3.Building the solution will get the warning back.\n\n### Verbose Logs\n\n_No response_"},{"Id":"37327811425","Type":"IssuesEvent","CreatedAt":"2024-04-10T08:12:33","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11694","RelatedDescription":"Closed issue \"[Bug Bash] The installed package from local path disappears in the auto-restore/NuGet restore/dotnet restore when reopening the solution\" (#11694) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.2.0.127\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n### Details about Problem\r\nVS Version: Main\\32324.52\r\nNuGet Version: Dev\\6.2.0.127\r\nOS Version: Windows-11-Enterprise-21H2\r\n### Repro steps:\r\n1.Only enable one package source which point to local path (have some packages) in the Options->NuGet Package Manager->Package Sources.\r\n2.Create a C# Console App (.NET Core 6.0) project in VS.\r\n3.Right-Click the project in the Solution Explorer window, select ‘Manage NuGet Packages…’ and select the package source (which I set in step1) in the Package source drop-down box.\r\n4.Click “Browse” tab and install a package from the local path.\r\n5.Save the solution and close VS.\r\n6.Delect the package cache from “C:\\Users\\UserName\\.nuget\\packages” and reopen the solution.\r\n7.Run “dotnet restore” in PMC or select “Restore NuGet Packages” from the solution context menu.\r\n### Expected:\r\nThe installed package should not disappear.\r\n### Actual:\r\nThe installed package from local path disappears as below.\r\n![image](https://user-images.githubusercontent.com/20632625/160149052-164554e4-03b7-4bde-b915-b6992731ab88.png)\r\n### Notes:\r\n1.It is found in the simulative offline environment.\r\n2.It doesn’t repro if the package is installed from online sources like “nuget.org”.\r\n3.It doesn’t repro on VS 16.11.12 Preview 1.0 [32311.313.d16.11].\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"37326406433","Type":"IssuesEvent","CreatedAt":"2024-04-10T07:23:01","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12490","RelatedDescription":"Closed issue \"[Bug Bash][ARM64] The left border of the searched result list doesn’t left-align with the left border of the search box on VS ARM64 \" (#12490) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.6.0.52\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:  \r\n1. Create a new C# console App (.NET Core) project on VS ARM 64. \r\n2. Open the PM UI of the project and go to the “Browse” tab. \r\n3. Search “AutoMapper” package in Browse tab. (The string has been searched before.) \r\n4. Click drop-down and observe the position of the left border of the searched result list. \r\n#### Expected:  \r\nThe left border of the searched result list should be left-align with the left border of the search box.  \r\n#### Actual:  \r\nThe left border of the searched result list doesn’t left-align with the left border of the search box as below screenshot. \r\n![image](https://user-images.githubusercontent.com/40230425/225850718-e26db2c3-cbfe-40e7-af64-0f3324b4bf6a.png)\r\n#### Note: \r\n1.The issue doesn’t repro on VS x64. \r\n2.It’s not a regression since it reproduced on D17.3\\32611.02. \r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-12T03:30:17.2812172Z","RunDurationInMilliseconds":1029}