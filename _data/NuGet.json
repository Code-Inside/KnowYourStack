{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40840516792","Type":"IssuesEvent","CreatedAt":"2024-08-07T23:06:30","Actor":"jgonz120","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10117","RelatedDescription":"Opened issue \"[Feature]: Enable downloading non-embedded README from the server\" (#10117) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nThe current implementation of flat container allows us to download README from `{@id}/{LOWER_ID}/{LOWER_VERSION}/readme`.  However, this only works for embedded README. In order to ensure all README are visible in the PM UI we want all of the README to be available from this URL. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"40840435834","Type":"IssuesEvent","CreatedAt":"2024-08-07T23:01:10","Actor":"jgonz120","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10116","RelatedDescription":"Opened issue \"[Feature]: Provide ability to download README from the server\" (#10116) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nIn order to enable [Rendering REAME for packages in PMUI](https://github.com/orgs/NuGet/projects/13/views/5?pane=issue&itemId=47510039) we need the ability to download the README from the server.\n\n### The Elevator Pitch\n\nImplement a new resource type `PackageBaseAddress/6.12.0`. This will indicate to clients that the server has implemented the ability to download the README using the following pattern `{@id}/{LOWER_ID}/{LOWER_VERSION}/readme`. An example of this url would be https://api.nuget.org/v3-flatcontainer/newtonsoft.json/13.0.3/readme. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"40838497385","Type":"PullRequestEvent","CreatedAt":"2024-08-07T21:15:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10115","RelatedDescription":"Opened pull request \"Add auth to V3 monitoring search cursor URLs\" (#10115) at NuGet/NuGetGallery","RelatedBody":"Currently the storage containers for our regional search instances are public. This is okay from a privacy standpoint (all of the content in there is public package metadata). But it is unnecessary. They are really internal storage accounts that should not have external callers. It will make our compliance simpler if we just lock these storage accounts down and use auth in the places that allow access.\r\n\r\nCurrently, this is our V3 monitoring pipeline, our cursor monitoring system (Synthetics), and NuGet Insights.\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/5576.\r\n\r\nThis PR adds support for using SAS or managed identity for accessing the Azure Search cursor URLs in the V3 monitoring pipeline. \r\n\r\nSummary of changes:\r\n- Add `AzureBlobCursor` which is a `ReadCursor` implementation using `BlobClient`. This allows auth'd scenarios.\r\n- Fix default storage suffix for creating storage queues. This was broken before.\r\n- Add `-searchCursorSasValue-*` and `-searchCursorStorageClientId-*` arguments to MonitoringProcessor and CatalogToMonitoring so that credentials can be plumbed in for accessing the search cursors. \r\n- Refactor `SearchEndpointConfiguration` and related types to allow the various search cursor read scenarios.\r\n- Improve UT coverage for `CommandHelpers`."},{"Id":"40836417414","Type":"PullRequestEvent","CreatedAt":"2024-08-07T19:50:11","Actor":"clairernovotny","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10114","RelatedDescription":"Opened pull request \"UserAgentParser parsing\" (#10114) at NuGet/NuGetGallery","RelatedBody":"A building block for https://github.com/NuGet/Engineering/issues/5082"},{"Id":"40833889222","Type":"IssuesEvent","CreatedAt":"2024-08-07T18:13:31","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10113","RelatedDescription":"Opened issue \"[Feature]: Provide a way for any user to understand if a Prefix ID is already reserved.\" (#10113) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nOne challenge with Prefix ID reservations today is that there isn't a very empowering experience if something is reserved even if no packges exist or who is the current owner of a package prefix ID when there may be challenges with potential disputes.\r\n\r\nA transparent way to view these through some type of NuGet.org page to search and see which owner currently owns an ID would be very helpful so that users can negotiate terms between each other before needing to get NuGet support involved.\r\n\r\nPyPi uses a Github Repository to track these requests which provides some transparency:\r\n\r\nhttps://github.com/pypi/support/issues?q=is%3Aissue+is%3Aopen+label%3A%22PEP+541%22\r\n\r\nThis would also be an interesting tool for inactive prefix ID owners and redistributing if they aren't used.\r\n\r\nExperience: A user would be able to anonymously go to a NuGet.org page and type in a Prefix ID into a searchbox with the respective glob syntax that is supported. The search results would return with who the current owner is, when they requested that prefix ID, the status of the prefix ID (active, inactive, etc), and any request history showing actions done previously.\r\n\r\nIf a user is logged in and would like to reserve a Prefix ID that is unclaimed, there is a UI that allows them to easily claim ownership so long as their packages meets the criteria instead of having to reach out to a support resource.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40832998246","Type":"PullRequestEvent","CreatedAt":"2024-08-07T17:40:42","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10112","RelatedDescription":"Merged pull request \"Fix endpoint suffix (Azure China) not being used\" (#10112) at NuGet/NuGetGallery","RelatedBody":"This is blocking `catalog2dnx` job from running against Azure China storage."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40840096994","Type":"IssuesEvent","CreatedAt":"2024-08-07T22:38:47","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13686","RelatedDescription":"Opened issue \"Owner profile hyperlinks needed in Details Pane of PM UI\" (#13686) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nSee [Spec](https://github.com/NuGet/Home/blob/dev/accepted/2023/owner-author-pmui.md#details-pane-ui-for-ownerauthor)\r\n\r\nThe Details Pane will show both the Known Owner and the Author. Historically, Owner has not been shown in the details pane at all. If Owner is not available, the Owner field will be shown with an indication that the metadata is not specified.\r\n\r\nThe PM UI Details Pane showing a few package Owners with hyperlinks to the owner profile on NuGet.org.\r\n![The PM UI Details Pane showing a few package Owners with hyperlinks to the owner profile on NuGet.org.](https://github.com/user-attachments/assets/17fd4419-979d-4b51-8ffc-11ebd17b131a)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40839206056","Type":"IssuesEvent","CreatedAt":"2024-08-07T21:49:25","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13685","RelatedDescription":"Opened issue \"NU1008 incorrectly logged if no central package versions are defined\" (#13685) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nCreate a project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAnd an \"empty\" Directory.Packages.props:\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nYou get the incorrect error:\r\n```\r\nerror NU1008: Projects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items: Newtonsoft.Json.\r\n```\r\n\r\nThis is because `ApplyCentralVersionInformation()` has a check for any versions defined:  https://github.com/NuGet/NuGet.Client/blob/9fbabf9a119599b62824f676407c5611c0542781/src/NuGet.Core/NuGet.LibraryModel/LibraryDependency.cs#L173\r\n\r\nSince there are no PackageVersion items, the ones missing versions aren't marked as \"managed centrally\" so later on in the validation code we mistake the error condition and log `NU1008` instead of `NU1010`.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"40828111936","Type":"IssuesEvent","CreatedAt":"2024-08-07T14:59:54","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13684","RelatedDescription":"Opened issue \"[Feature] Allow vulnerability auditing from OSV .json feeds\" (#13684) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nI should be able to override or append to the NuGet vulnerability auditing functionality a feed that I'd like to check for vulnerabilities with.\r\n\r\nThis feed is typically an OSV .json format - https://ossf.github.io/osv-schema/\r\n\r\nThe use case for this could be companies that have not yet disclosed vulnerabilities but would like to audit them internally or for customers to use other feeds they prefer.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"40821640517","Type":"IssuesEvent","CreatedAt":"2024-08-07T12:02:05","Actor":"Lofter1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13683","RelatedDescription":"Opened issue \"NU3037 and NU2028 when installing packages\" (#13683) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\ndotnet 8.0.303, dotnet nuget 6.10.0.97, VS 17.10.5\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nHappens for Visual Studio 2022 (fresh reinstall) and the dotnet tools that shipped with it (dotnet nuget). Doesn't happen for all packages, for every project I create regardless of template.\r\n\r\n### Packages I tested that it happens to:\r\n- Microsoft.EntityFrameworkCore.SqlServer\r\n- Microsoft.EntityFrameworkCore.Design\r\n\r\n### Packages I tested it doesn't happen for:\r\n- Microsoft.EntityFrameworkCore\r\n- Microsoft.AspNetCore.Authentication.JwtBearer\r\n\r\n\r\n### Steps I already took to try to fix this:\r\n- Check if System Time is correct (forced a synchronization)\r\n- Reinstalled Visual Studio\r\n- Check if a corporate firewall is the problem (co-worker can install packages fine within the same network)\r\n- Verify all nupkg files in `~/.nuget` and inside the `C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages` folder (reduced the numbers of errors)\r\n- Use dotnet 7 instead of 8 and use the appropriate package version\r\n- Delete folders like `~/.nuget` and delete NuGet cache\r\n- Update Windows\r\n- `<add key=\"signatureValidationMode\" value=\"accept\"/>`\r\n- Waiting a day\r\n\r\n\r\nPossibly interesting addition: for the Microsoft.EntityFrameworkCore.Design package, an installation through the dotnet CLI adds the package, but builds afterwards will fail with the same error as during the installation attempt through the VS NuGet UI\n\n### Verbose Logs\n\n```shell\nVS 2022 NuGet UI Output for Microsoft.EntityFrameworkCore.SqlServer (similar output for Microsoft.EntityFrameworkCore.Design) (Shortened)\r\n\r\n\r\nPakete für \"<path to>.csproj\" werden wiederhergestellt...\r\n  [...]\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 23:54:33\r\n\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 18.12.2018 01:10:38\r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 22:58:10\r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256-Hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 02.01.2017 01:00:00 bis 02.04.2028 01:59:59\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.05.2018 22:37:18\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft, RoslynTeam\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 18.12.2018 00:57:03\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:53\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:33\r\n\r\n[...]\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: azure-sdk, dotnetframework, Microsoft\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.04.2021 19:59:36\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.04.2020 01:49:51\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 12.05.2020 16:57:09\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.01.2022 18:20:31\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: Microsoft, nugetsqltools\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 29.01.2022 01:50:56\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:54\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:27\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 26.08.2022 00:27:56\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.09.2022 15:45:35\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:33:51\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 22:58:38\r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256-Hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 02.01.2017 01:00:00 bis 02.04.2028 01:59:59\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:53\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:12\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:55\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:06\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:58:00\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: aspnet, dotnetframework, Microsoft\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:41:17\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.11.2019 10:52:53\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 03.12.2019 17:42:05\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 19.02.2020 19:10:28\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.04.2020 01:49:53\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 12.05.2020 16:57:01\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 19.02.2020 19:10:28\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 24.03.2020 18:10:21\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 24.03.2020 18:10:23\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.07.2022 05:13:05\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: AzureAD, Microsoft\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.07.2022 06:09:30\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:41:20\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n[...]\r\n\r\n```\n```\n"},{"Id":"40814470752","Type":"IssuesEvent","CreatedAt":"2024-08-07T08:19:18","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13599","RelatedDescription":"Closed issue \"UpdatePackage Exception ((https://nuget.pkg.github.com)\" (#13599) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\ndornet 8.0.200 nuget 6.10.0.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nTrying update a prerelease package from github (https://nuget.pkg.github.com) for the first time. \r\nUpdate from nuget (api.nuget.org) does work.\r\nFirst using visual stufio UI, then package manager console. both logs appended\r\n\n\n### Verbose Logs\n\n```shell\nRestoring packages for D:\\Develop\\Extern\\GitHub.xxxxxx\\xxxxxxxxxxxxxxxxxx\\src\\xxxxxxxxxxxxxxxxxx.csproj...\r\n  GET https://api.nuget.org/v3/vulnerabilities/index.json\r\n  OK https://api.nuget.org/v3/vulnerabilities/index.json 53ms\r\n  GET https://api.nuget.org/v3-vulnerabilities/2024.06.28.05.31.02/vulnerability.base.json\r\n  GET https://api.nuget.org/v3-vulnerabilities/2024.06.28.05.31.02/2024.06.29.11.31.04/vulnerability.update.json\r\n  OK https://api.nuget.org/v3-vulnerabilities/2024.06.28.05.31.02/vulnerability.base.json 50ms\r\n  OK https://api.nuget.org/v3-vulnerabilities/2024.06.28.05.31.02/2024.06.29.11.31.04/vulnerability.update.json 108ms\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteBuildIntegratedProjectActionsAsync>d__93.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__86.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__85.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.VisualStudio.NuGetProjectManagerService.<>c__DisplayClass20_0.<<ExecuteActionsAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.VisualStudio.NuGetProjectManagerService.<CatchAndRethrowExceptionAsync>d__32.MoveNext()\r\nTime Elapsed: 00:00:01.2737315\r\n========== Finished ==========\r\n\r\n\r\nPM> Update-Package xxxxxx.xxxxxxxxxxxx -Verbose -IncludePrerelease\r\nNo package updates are available from the current package source for project 'xxxxxxxxxxxxxxxxxx.Tests'.\r\n  GET https://api.nuget.org/v3/registration5-gz-semver2/xxxxxx.xxxxxxxxxxxx/index.json\r\n  GET https://nuget.pkg.github.com/xxxxxx/xxxxxx.xxxxxxxxxxxx/index.json\r\n  OK https://nuget.pkg.github.com/xxxxxx/xxxxxx.xxxxxxxxxxxx/index.json 407ms\r\n  OK https://api.nuget.org/v3/registration5-gz-semver2/xxxxxx.xxxxxxxxxxxx/index.json 524ms\r\nRunning restore with 24 concurrent jobs.\r\nReading project file D:\\Develop\\Extern\\xxxxxxxx\\xxxxxxxxxxxxxxxxxx\\src\\xxxxxxxxxxxxxxxxxx.csproj.\r\nRestoring packages for D:\\Develop\\Extern\\xxxxxxxx\\xxxxxxxxxxxxxxxxxx\\src\\xxxxxxxxxxxxxxxxxx.csproj...\r\nRestoring packages for .NETCoreApp,Version=v8.0...\r\nResolving conflicts for net8.0-windows7.0...\r\n  CACHE https://api.nuget.org/v3/vulnerabilities/index.json\r\n  CACHE https://api.nuget.org/v3-vulnerabilities/2024.06.28.05.31.02/vulnerability.base.json\r\n  CACHE https://api.nuget.org/v3-vulnerabilities/2024.06.28.05.31.02/2024.06.29.11.31.04/vulnerability.update.json\r\nAll packages and projects are compatible with net8.0-windows7.0.\r\nUpdate-Package : Object reference not set to an instance of an object.\r\nAt line:1 char:1\r\n+ Update-Package xxxxxx.xxxxxxxxxxxx -Verbose -IncludePrerelease\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Update-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.UpdatePackageCommand\r\n \r\nTime Elapsed: 00:00:02.0589993\n```\n"},{"Id":"40814428133","Type":"IssuesEvent","CreatedAt":"2024-08-07T08:18:03","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13682","RelatedDescription":"Opened issue \"[Suggestion] Error List Window should not show duplicated NuGet warnings or errors when installing package or editing the ‘csproj’ file\" (#13682) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.12.0.58\n\n### Worked before?\n\nIt is not a regression since it reproes (just for NU1202 since we don’t have the feature ‘Vulnerable Package’ on 16.11) on D16.11\\34601.136.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1.\tCreate a project through menu ‘File -> New Project -> .NET Standard Class Library’ (with latest .NET Standard version). \r\n2.\tChange target framework to Netstandard 1.4. \r\n3.\tClose ‘Error List’ window and ‘Output’ windows if open. \r\n4.\tLaunch PM UI and install Microsoft.AspNetCore.Mvc.ViewFeatures/1.1.3. \r\n5.\tEdit the 'csproj' file to add the following:\r\n```\r\n <ItemGroup> \r\n     <PackageReference Include=\"Microsoft.AspNetCore.Mvc.ViewFeatures\" Version=\"1.1.3\"/> \r\n  </ItemGroup> \r\n```\r\n#### Expected Result:\r\nNo duplicated warnings or errors in step4 and step5.\r\n#### Actual Result:\r\nDuplicated NU1903 show in step4 and duplicated NU1202 show in step5.\r\n![image](https://github.com/user-attachments/assets/952ab4fa-142e-417f-9401-7701b41a8ea5)\r\n#### Note:\r\n1.\tRepro rate: 100%.\r\n2.\tIt would not repro after building the solution.\n\n### Verbose Logs\n\n_No response_"},{"Id":"40804855645","Type":"IssuesEvent","CreatedAt":"2024-08-06T23:57:55","Actor":"ocallesp","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13681","RelatedDescription":"Opened issue \"INuGetProjectService.GetInstalledPackagesAsync() returning result.Packages with empty InstallPath\" (#13681) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK, Other/NA\n\n### Product Version\n\n17.10.5\n\n### Worked before?\n\nYes\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nTest Explorer in Visual Studio 2022 is having pretty bad performance due to an issue in INuGetProjectService.GetInstalledPackagesAsync() returning result.Packages with empty InstallPath\r\n\r\nRepro:\r\n- Open VS 2022 (main)\r\n- Open Roslyn.sln https://github.com/dotnet/roslyn \r\n- Open Test Explorer\r\n- Run the test 'Interceptors'\r\n- Open the Output Window | Tests\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"40801544430","Type":"PullRequestEvent","CreatedAt":"2024-08-06T20:51:51","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13680","RelatedDescription":"Opened pull request \"[One Pager] Transitive origins paths in PM UI\" (#13680) at NuGet/Home","RelatedBody":"One pager for https://github.com/NuGet/Home/issues/13574"},{"Id":"40797432249","Type":"IssuesEvent","CreatedAt":"2024-08-06T18:09:50","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13539","RelatedDescription":"Closed issue \"Update nuget.exe docs for new eula command\" (#13539) at NuGet/Home","RelatedBody":""},{"Id":"40796266933","Type":"IssuesEvent","CreatedAt":"2024-08-06T17:26:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13677","RelatedDescription":"Closed issue \"ConvertToProjectPaths  causes extra allocations due to yield usage\" (#13677) at NuGet/Home","RelatedBody":""},{"Id":"40792956782","Type":"IssuesEvent","CreatedAt":"2024-08-06T15:34:41","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11312","RelatedDescription":"Closed issue \"Test_ExtractionHonorsFileTimestamp() and ExtractPackageAsync_PreservesZipEntryTimeAsync() should work on any timezone\" (#11312) at NuGet/Home","RelatedBody":"Test_ExtractionHonorsFileTimestamp() and ExtractPackageAsync_PreservesZipEntryTimeAsync() currently only work for the timezone used by our CI. These tests should be able to run on any timezone so that they can pass locally for any contributor."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-08T03:30:18.6999985Z","RunDurationInMilliseconds":825}