{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"19230451238","Type":"IssuesEvent","CreatedAt":"2021-12-08T02:29:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7441","RelatedDescription":"Closed issue \"Dispose DI container every job loop of JsonConfigurationJob\" (#7441) at NuGet/NuGetGallery","RelatedBody":"Today, every time `JsonConfigurationJob.Init` is called, a new DI container is created replacing the reference to the previous one in `_serviceProvider`:\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/1b6f4a0bf6605fb676cccca6a839cabdb5c17f2a/src/NuGet.Jobs.Common/JsonConfigurationJob.cs#L66\r\n\r\nThis is a pit to fall in because DI containers can contain `IDisposable` instances (in particular singletons) and if we never dispose the previous container then the `IDisposable` instances inside of it will never be disposed, leading to leaks.\r\n\r\nIn short, a DI container is considered to \"own\" instances and `IDisposable` instances handed out by the DI container are typically the container's job to dispose -- especially singletons.\r\n\r\nThe `AutofacServiceProvider` container from Autofac.Extensions.DependencyInjection 4.2.0 does not implement `IDisposable` but the Autofac `IContainer` inside of it does. We should:\r\n\r\n1. [x] Update to Autofac.Extensions.DependencyInjection version 4.3.0 or later\r\n    - See https://autofac.readthedocs.io/en/latest/integration/aspnetcore.html#id3. We need this to make `AutofacServiceProvider` disposable\r\n1. [x] Dispose the previous instance, if non-null. It will be non-null after the first job loop.\r\n\r\nAfter this is done we can safely put `IDisposable` things in the DI container.\r\n"},{"Id":"19230439464","Type":"IssuesEvent","CreatedAt":"2021-12-08T02:28:09","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8905","RelatedDescription":"Opened issue \"[Feature]: Put each job iteration into its own DI scope for JsonConfigurationJob descendants.\" (#8905) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nFollow up on https://github.com/NuGet/NuGetGallery/issues/7441.\n\n### The Elevator Pitch\n\nCurrently, DI container used in jobs that are based on `JsonConfigurationJob` is [disposed](https://github.com/NuGet/NuGet.Jobs/blob/af2c64924403c12ae45e5edb6012c23f052cea0e/src/NuGet.Jobs.Common/JsonConfigurationJob.cs#L83) on every job iteration. This may lead to an expensive object recreation on each iteration.\r\n\r\nInstead, we can consider introducing a scope for each job iteration which would allow jobs to specify which objects are to be recreated on each iteration and which ones to transcend them.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"19227048407","Type":"PullRequestEvent","CreatedAt":"2021-12-07T20:56:28","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8904","RelatedDescription":"Merged pull request \"Change to official NuGet.exe for tests (4.5.0 private build -> 4.5.3)\" (#8904) at NuGet/NuGetGallery","RelatedBody":"Before we moved to app services, we did not have a HTTPS-compatible domain name for staging slot on gallery. Now we do :). We can move away from a private build of nuget.exe which allowed for specific certificates to be trusted even for domain name mismatch.\r\n\r\nI tried moving to 5.11.0 but this caused some test failures which need not be investigated or fixed at this time.\r\n\r\nThe private build of nuget.exe that is being replaced here is only test signed which means that a strong name bypass must be installed on the test agent. This is not ideal for centrally managed test agents.\r\n\r\nWith this change, we can run Gallery functional tests on managed agents that have the proper dependencies installed (namely VS 2015)."},{"Id":"19226804649","Type":"PullRequestEvent","CreatedAt":"2021-12-07T20:36:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8904","RelatedDescription":"Opened pull request \"Change to official NuGet.exe for tests (4.5.0 private build -> 4.5.3)\" (#8904) at NuGet/NuGetGallery","RelatedBody":"Before we moved to app services, we did not have a HTTPS-compatible domain name for staging slot on gallery. Now we do :). We can move away from a private build of nuget.exe which allowed for specific certificates to be trusted even for domain name mismatch.\r\n\r\nI tried moving to 5.11.0 but this caused some test failures which need not be investigated or fixed at this time.\r\n\r\nThe private build of nuget.exe that is being replaced here is only test signed which means that a strong name bypass must be installed on the test agent. This is not ideal for centrally managed test agents.\r\n\r\nWith this change, we can run Gallery functional tests on managed agents that have the proper dependencies installed (namely VS 2015)."},{"Id":"19212615260","Type":"PullRequestEvent","CreatedAt":"2021-12-07T04:58:00","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8901","RelatedDescription":"Merged pull request \"Re-add a11y to checkmarks and bangs in package details page\" (#8901) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8897\r\n\r\n- Adds the popovers into the new v2 package details page for reserved checkmarks (including alt tag) and vulnerable/deprecated bangs. \r\n- Narrator support also restored.\r\n- There needed to be tab stops added to ID and version at the top. \r\n- I also removed a double tab stop on the versions in the version table.\r\n\r\nHere are the changes (I pause and point at them): \r\n![44leShd08k](https://user-images.githubusercontent.com/14225979/144372641-9bc76ea9-97ed-44c2-9621-578728ce0c0d.gif)\r\n  "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"19267861169","Type":"PullRequestEvent","CreatedAt":"2021-12-09T23:44:34","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11446","RelatedDescription":"Opened pull request \"Spec for machine readable json output for dotnet list package\" (#11446) at NuGet/Home","RelatedBody":"## Bug\r\n\r\nFixes: https://github.com/NuGet/Home/issues/7752\r\n\r\n## Description\r\n\r\nMany organization are required by [regulation](https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/) to audit packages that they're using in repository. It is difficult to parse the output of dotnet list package.  Without having a good way to parse the output of this command, it makes it difficult to structure the list of packages in a way that can be fed into another auditing system.\r\nIn this spec design proposal, I tried to address `json` output part, for \"parsable\" format output may need own spec.\r\nFor this purpose, I added below 2 new options for all `dotnet list package` commands.\r\n* `--json`\r\nAbility to use new `--json` option for all `dotnet list package` commands to ensure JSON-formatted output is emitted to the console.\r\n\r\n```dotnetcli\r\ndotnet list [<PROJECT>|<SOLUTION>] package [--config <SOURCE>]\r\n    [--deprecated]\r\n    [--framework <FRAMEWORK>] [--highest-minor] [--highest-patch]\r\n    [--include-prerelease] [--include-transitive] [--interactive]\r\n    [--outdated] [--source <SOURCE>] [-v|--verbosity <LEVEL>]\r\n    [--vulnerable]\r\n    [--json]\r\n\r\ndotnet list package -h|--help\r\n```\r\n\r\n* `--json --flatten`\r\nAbility to use new `--flatten` option conjunction with `--json` option for all `dotnet list package` commands to ensure JSON-formatted output is emitted to the console for multiproject solution(including multitarget projects)and all projects and target frameworks are flattened. Same package with multiple version entry is possible. It's useful more for SBOM than single `--json` option.\r\n\r\n```dotnetcli\r\ndotnet list [<PROJECT>|<SOLUTION>] package [--config <SOURCE>]\r\n    [--deprecated]\r\n    [--framework <FRAMEWORK>] [--highest-minor] [--highest-patch]\r\n    [--include-prerelease] [--include-transitive] [--interactive]\r\n    [--outdated] [--source <SOURCE>] [-v|--verbosity <LEVEL>]\r\n    [--vulnerable]\r\n    [--json]\r\n    [--flatten]"},{"Id":"19265987833","Type":"IssuesEvent","CreatedAt":"2021-12-09T21:25:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11438","RelatedDescription":"Closed issue \"Remove Mac Catalyst warning\" (#11438) at NuGet/Home","RelatedBody":"See https://github.com/NuGet/Home/issues/11338 for more details. \r\n\r\nmaccatalyst is no longer compatible with xamarin.ios"},{"Id":"19264024696","Type":"IssuesEvent","CreatedAt":"2021-12-09T19:14:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11426","RelatedDescription":"Closed issue \"[Bug]: Should \"nuget update --self\" update to version 6.0?\" (#11426) at NuGet/Home","RelatedBody":"The command \"nuget update --self\" only updated to the latest minor version 5.11.x.\r\nNot sure if that behaviour is desired or not."},{"Id":"19262109021","Type":"IssuesEvent","CreatedAt":"2021-12-09T17:07:15","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11445","RelatedDescription":"Opened issue \"[Feature]: Add more logging to NuGetSdkResolver\" (#11445) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nI'm adding more logging to the MSBuild APIs that call SDK resolvers which will also allow our SDK resolver to add more logging.\r\n\r\nDependent on https://github.com/dotnet/msbuild/issues/7136\n\n### Additional Context and Details\n\n_No response_"},{"Id":"19262055703","Type":"IssuesEvent","CreatedAt":"2021-12-09T17:04:11","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11444","RelatedDescription":"Opened issue \"Convert tests using TestDirectory to SimpleTestPathContext Part2\" (#11444) at NuGet/Home","RelatedBody":"It's related to https://github.com/NuGet/NuGet.Client/pull/4279\nWe have many tests using `TestDirectory` method which may pollute global packages folder since it doesn't clean up temporary created assets (causes flakiness). In order to onboard `PackageSourceMapping` we need to convert some to `SimpleTestPathContext` which is cleans up temporary created assets.  This will reduce overall flakiness of CI test pipeline.\nAbout 200 tests failing now: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5517484&view=results\n\nHere're about 64 of them, there're other tests from this same assembly I assigned to myself. So please focus only those 64 tests, please.\n\nMsbuild.Integration.Test.MsbuildRestoreTaskTests.MsbuildRestore_NoPackageSourceMappingsection_NoSourceRelatedLogMessage\nNuGet.CommandLine.Test.RestoreNetCoreTest.RestoreNetCore_VerifyOrderOfConfigsAsync\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_FromPackagesConfigFile_SpecifyingRelativeSolutionDir\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_FromPackagesConfigFile_SpecifyingSolutionDir\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_RunTwiceWithVersionSpecifiedVerifyExitCode\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_DependencyResolution\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_FromPackagesConfigFile\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_FromPackagesConfigFileWithExcludeVersion\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_WithVersionSpecified\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_WithPrereleaseVersionSpecified\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_FromPackagesConfigFile_VerifyNoopRestoreExitCode\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_GetLastestPrereleaseVersion\nNuGet.CommandLine.Test.NuGetInstallCommandTest.InstallCommand_GetLastestReleaseVersion\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_WithSubsequentRestores_PackageSaveModeIsObserved\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_LongPathPackage\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_SourceLoggingFileSource\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromSolutionFile_ProjectsInParentDir\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_LegacySolutionLevelPackages_DuplicatePackageIds\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_PackageSourceMappingEmptyPackageSource_Succeed\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_LegacySolutionLevelPackages_SolutionFile\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_PreservesPackageFilesTimestamps\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_NoPackageSourceMappingsection_NoSourceRelatedLogMessage\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromSolutionFile_ReportsNothingToDoWithoutError\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_SourceLoggingFromGlobalPackageCache\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromPackagesConfigFile\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_LegacySolutionLevelPackages_SolutionDirectory\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromSolutionFileWithMsbuildPath\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_LegacySolutionLevelPackages_NoArgument\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_ProjectContainsSolutionDirs\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromProjectJson_RelativeGlobalPackagesFolder\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_OneSolutionFileInDirectory\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromHttpSource\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_SourceLoggingFromV3FeedNoGlobalPackageCache\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_PackageSourceMappingFilter_Succeed\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_MissingNuspecFileInPackage_FailsWithNU5037\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromPackagesConfigFileWithOptionSolutionDir\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromProjectFile\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_FromSolutionFile\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_WithAuthorSignedPackage_Succeeds\nNuGet.CommandLine.Test.NuGetRestoreCommandTest.RestoreCommand_ProjectCannotBeLoaded\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_FromProjectConfig\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_ProjectFile_References\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_CustomPackagesFolder_AbsolutePath\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_Version_Downgrade\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_Prerelease_With_Id\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_Update_DeletedFile\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_NF_Project_Success\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_Prerelease\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_ContentFiles\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_DependencyResolution_Success\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_PackagesConfig_References\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_References_MultipleProjects\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_References\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_Version_Upgrade\nNuGet.CommandLine.Test.NuGetUpdateCommandTests.UpdateCommand_Success_CustomPackagesFolder_RelativePath\nNuGet.CommandLine.Test.RestoreRetryTests.RestoreRetry_ProjectJsonRetryOnFailingV3Source\nNuGet.CommandLine.Test.RestoreRetryTests.RestoreRetry_PackagesConfigRetryOnFailingV3Source\nNuGet.CommandLine.Test.RestoreRetryTests.RestoreRetry_ProjectJsonRetryOnFailingV2Source\nNuGet.CommandLine.Test.RestoreRetryTests.RestoreRetry_PackagesConfigRetryOnFailingV2Source\nNuGet.CommandLine.Test.RestoreProjectJsonTest.RestoreProjectJson_MinClientVersionFailAsync\nNuGet.CommandLine.Test.RestoreProjectJsonTest.RestoreProjectJson_RestoreFiltersToStablePackages\nNuGet.CommandLine.Test.RestoreProjectJsonTest.RestoreProjectJson_FloatReleaseLabelTakesStable\nNuGet.CommandLine.Test.RestoreProjectJsonTest.RestoreProjectJson_RestoreFromSlnUsesNuGetFolderSettingsAsync\nNuGet.CommandLine.Test.RestoreProjectJsonTest.RestoreProjectJson_GenerateTargetsFileFromNuProj"},{"Id":"19262041080","Type":"IssuesEvent","CreatedAt":"2021-12-09T17:03:21","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11443","RelatedDescription":"Opened issue \"[Bug]: NuGetSdkResolver does not support being called in parallel\" (#11443) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThe MSBuild SDK resolution APIs can call SDK resolvers multiple times in parallel for each unique SDK.  They can also call an SDK resolver for the same SDK if its part of two different builds (which happens in Visual Studio).\r\n\r\nThe NuGetSdkResolver should be updated to take into account that it can be called on different threads for the one or more SDKs.\r\n\r\nEpic: https://github.com/NuGet/Home/issues/11441\n\n### Verbose Logs\n\n_No response_"},{"Id":"19261957896","Type":"IssuesEvent","CreatedAt":"2021-12-09T16:58:45","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11442","RelatedDescription":"Opened issue \"Improve NuGetSdkResolver tests\" (#11442) at NuGet/Home","RelatedBody":"The NuGet SDK resolver unit tests are missing some scenarios and do not simulate calls from MSBuild.  Let's improve the code coverage and add more scenarios.\r\n\r\nEpic: https://github.com/NuGet/Home/issues/11441"},{"Id":"19261922998","Type":"IssuesEvent","CreatedAt":"2021-12-09T16:56:46","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11441","RelatedDescription":"Opened issue \"[Epic]: Improve NuGet-based MSBuild project SDK resolver\" (#11441) at NuGet/Home","RelatedBody":"Since its original development, the NuGet-based MSBuild project SDK resolver has needed some improvements.  Several fixes have been shipped over the years but there are still some issues that we should fix.  Other general improvements are also needed.\r\n\r\n- [ ] https://github.com/dotnet/msbuild/issues/7136\r\n- [ ] https://github.com/dotnet/msbuild/issues/7137"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1410695861508526080","CreatedAt":"2021-07-01T20:24:37+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠ \nHave you recently experienced issues interacting with https://t.co/KVB7werYQh's Search API?… https://t.co/3eM1gicePx","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2021-12-10T05:30:31.2802969Z","RunDurationInMilliseconds":1640}