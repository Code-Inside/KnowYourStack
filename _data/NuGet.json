{"Data":{"Blog":{"FeedItems":[{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14380669863","Type":"PullRequestEvent","CreatedAt":"2020-12-02T03:23:17","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8340","RelatedDescription":"Merged pull request \"[A11y]Enable horizontal scrollbar on cert table\" (#8340) at NuGet/NuGetGallery","RelatedBody":"This PR enables a scroll bar on the Certificates table.\r\nAccording to Accessibility team, it is ok to have the scrollbar on the table itself, but not on the page.\r\n\r\nPreview:\r\n![image](https://user-images.githubusercontent.com/11051729/100818448-03e5c900-33ff-11eb-85fe-ad1b07f72975.png)\r\n"},{"Id":"14380107909","Type":"PullRequestEvent","CreatedAt":"2020-12-02T02:00:12","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8340","RelatedDescription":"Opened pull request \"[A11y]Enable horizontal scrollbar on cert table\" (#8340) at NuGet/NuGetGallery","RelatedBody":"This PR enables a scroll bar on the Certificates table.\r\nAccording to Accessibility team, it is ok to have the scrollbar on the table itself, but not on the page.\r\n\r\nPreview:\r\n![image](https://user-images.githubusercontent.com/11051729/100818448-03e5c900-33ff-11eb-85fe-ad1b07f72975.png)\r\n"},{"Id":"14379649907","Type":"IssuesEvent","CreatedAt":"2020-12-02T00:51:54","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7532","RelatedDescription":"Closed issue \"MAS 2.5.3 - Label in Name\" (#7532) at NuGet/NuGetGallery","RelatedBody":"UI components with labels that include text or images of text should have names that contain the text that is presented visually. E.g. a button with the visible text \"submit\" must have an `aria-label` that contains \"submit\" such as \"submit the form\".\r\n\r\nI believe we are already compliant with this, but there may be some controls on the site that we need to fix.\r\n\r\nTerminology:\r\n- labels are the visible text used to identify control to all users\r\n- names are the programmatic or accessible name of a control for screen readers/assistive technology"},{"Id":"14379649908","Type":"IssuesEvent","CreatedAt":"2020-12-02T00:51:54","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7525","RelatedDescription":"Closed issue \"MAS 1.4.10 - Reflow\" (#7525) at NuGet/NuGetGallery","RelatedBody":"Our site should look good at 320 px by 256 px and users must not have to scroll horizontally to see any content.\r\n\r\nI believe, in general, we are compliant with this, thanks to Bootstrap, but there may be some things we need to fix."},{"Id":"14379649911","Type":"IssuesEvent","CreatedAt":"2020-12-02T00:51:54","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7524","RelatedDescription":"Closed issue \"MAS 1.3.5 - Identify Input Purpose\" (#7524) at NuGet/NuGetGallery","RelatedBody":"We should verify our site uses the autocomplete attribute wherever it makes sense.\r\n\r\nList of possible autocomplete attribute values: https://www.w3.org/TR/html52/sec-forms.html#autofill\r\n\r\nFor example, forms that accept email addresses should be configured to automatically fill in the user's email address."},{"Id":"14379649910","Type":"IssuesEvent","CreatedAt":"2020-12-02T00:51:54","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7529","RelatedDescription":"Closed issue \"MAS 1.4.12 - Text spacing\" (#7529) at NuGet/NuGetGallery","RelatedBody":"No loss of content or functionality should occur if\r\n- line height is set to 1.5em\r\n- spacing is set to 2 em\r\n- letter space is set to .12em\r\n- word spacing is set to .16em"},{"Id":"14379649900","Type":"IssuesEvent","CreatedAt":"2020-12-02T00:51:54","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7528","RelatedDescription":"Closed issue \"MAS 1.4.11 - Non-text contrast\" (#7528) at NuGet/NuGetGallery","RelatedBody":"UI components (anything that conveys information) needs to have color contrast of at least 3:1.\r\n\r\nFor context, previously only text needed to have proper contrast. We are now required to make sure graphs and other UI elements have proper contrast as well."},{"Id":"14379244977","Type":"PullRequestEvent","CreatedAt":"2020-12-01T23:55:09","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8338","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.12.01]RI of dev into master\" (#8338) at NuGet/NuGetGallery","RelatedBody":"11/04:\r\n[A11y] Manage members of an organization - responsive after reflowing(#8301)\r\n\r\n11/09:\r\nDropping the narration completely for absent signature and deprecation information (#8309)\r\nRemoved unused localIP member of CloudAuditingService. (#8306)\r\nAccept packages with a minClientVersion of 5.8.0 (#8317)\r\n\r\n11/10:\r\nJust break word (#8310)\r\n\r\n11/11:\r\nAdd netstandard2.1 support to NuGetGallery.Core and NuGet.Services.Entities (#8320)\r\n[SAS Token] Fallback when permissions cannot be use on container creation. (#8315)\r\n\r\n11/13:\r\nAdd restricted API for soft deleting packages (#8290)\r\nSwitch to NuGetTestData for static test packages (#8324)\r\n\r\n11/23:\r\nMove to new build tools (#8331)\r\nAdd * by required field (#8328)\r\nAdd description for readmore (#8333)\r\nOnly allowed one scroll bar when zooming in (#8330)\r\n\r\n12/01:\r\nLatest release version of NuGet.* (#8335) "},{"Id":"14377849453","Type":"PullRequestEvent","CreatedAt":"2020-12-01T21:17:46","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8335","RelatedDescription":"Merged pull request \"Latest release version of NuGet.*\" (#8335) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/8230\r\n\r\nTo enable Gallery to accept new OSI and FSF approved licenses need to bump NuGet.Packaging version.\r\nThe rest of NuGet.* packages were updated to align with NuGet.Packaging and get off preview version."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14380364844","Type":"IssuesEvent","CreatedAt":"2020-12-02T02:37:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10340","RelatedDescription":"Closed issue \"nuget.exe 'list' command doesn't work for authorized feeds(?)\" (#10340) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet.exe\r\n\r\n5.8.0.6930\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nRight now I can successfully do 'nuget.exe search FOO' against authenticated feeds (GitHub Packages and Azure Artifacts), but trying the same thing using 'nuget.exe list' throws a warning and doesn't return results.\r\n\r\nIf I was able to have the same control of the search query in 'nuget search' that I can with 'nuget list' (see [here](https://docs.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages#search-syntax) ) then I would be OK, but I don't AFAICT.\r\n\r\nThanks!\r\n\r\n\r\n"},{"Id":"14379201548","Type":"IssuesEvent","CreatedAt":"2020-12-01T23:48:41","Actor":"agr","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9897","RelatedDescription":"Closed issue \"NuGet CLI Bulk Unlister Tool\" (#9897) at NuGet/Home","RelatedBody":"## **Problem Background**\r\n\r\nWithin the NuGet CLI, authors can choose either to [unlist](https://docs.microsoft.com/en-us/nuget/nuget-org/policies/deleting-packages#unlisting-a-package) or [deprecate](https://docs.microsoft.com/en-us/nuget/nuget-org/deprecate-packages) particular versions of their published packages to limit public access. There does not currently exist an efficient way to deprecate or unlist multiple or all versions of a package. This presents a process inefficiency that can be potentially significant for customers who must often unlist versions of their package due to security or dependency concerns.  In addition, having to manually unlist package versions can result in human error and lack of thoroughness.\r\n\r\n## **Who are the customers**\r\n\r\nSpecific use cases are:\r\n\r\n1. Customers who want to unlist all versions of their published package efficiently.\r\n2. Customers who want to unlist most of the versions, with individual exceptions.\r\n3. Customers who want to unlist a certain range of versions (i.e. 3.x and lower)\r\n4. Customers who want to unlist versions with names that include a particular regular expression pattern. \r\n\r\n## Goals and Success Metrics\r\n\r\n**Process Efficiency**\r\n\r\n- Provide customers a faster and easier process for unlisting multiple or all versions of a package\r\n\r\n**Control**\r\n\r\n- Offer customers more control over the unlisting of their package versions.\r\n\r\n**Security**\r\n\r\n- Drive broader usage of the unlisting functionality to eliminate package vulnerabilities, bugs, and dependency errors across versions\r\n\r\n## **Non-Goals**\r\n\r\n**[NuGet.org](http://nuget.org) and Visual Studio**\r\n\r\nThis solution is for the NuGet CLI only. There will be no discussion surrounding UI on [NuGet.org](http://nuget.org) and the Visual Studio version of NuGet\r\n\r\n**Deprecation**\r\n\r\nThis solution is for the unlisting functionality only. There will be no work done on bulk-deprecation.\r\n\r\n## **Solution**\r\n\r\nThe solution will come in a form on a downloadable CLI tool. The first version of this tool will be straightforward and follows the following steps:\r\n\r\n1. User invokes \"unlist\" command \r\n2. Existing versions are checked against the criteria for unlisting provided by the user\r\n3. List of versions to be unlisted is printed to console. User is prompted to confirm.\r\n    1. If user confirms, the tool proceeds to unlist all versions agreed upon\r\n    2. If user does not confirm, the tool terminates and allows the user to revise their query\r\n4. Once the process is complete, a list of the unlisted files will be printed to console\r\n\r\n## **What:**\r\n\r\n[Very simplified architecture](https://www.notion.so/Architecture-for-Bulk-Unlister-f7b062984b07440ebade5a0693d6549e) can be found here\r\n\r\n[Specific CLI command examples to come]"},{"Id":"14378437786","Type":"IssuesEvent","CreatedAt":"2020-12-01T22:16:33","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10346","RelatedDescription":"Opened issue \"Dotnet pack command creates unwanted trash folders on Windows\" (#10346) at NuGet/Home","RelatedBody":"While investigating [issue#5127](https://github.com/NuGet/Home/issues/5127),  I ran `dotnet pack --include-symbols --output '../Nugets'` on my Windows machine. \nExpected bevahior is :\n1. `Nugets` folder on upper level \n2. Or simply fail due to bad formatted path.\n\nActual bevahior is: It did `Nugets` folder but also another broken folder for windows. It seems this command format is for MAC/Linux but nothing prevents it from running on Windows and create unwanted trash folder. Since name is not normal ASCII keys we can't easily delete it. I feel this one is polluting production or work environment, so we need to prevent it happening. It shouldn't  create this one or simply fail stating specified path is not valid.\n\n![image](https://user-images.githubusercontent.com/8766776/100678480-1f2ed680-3322-11eb-9033-600a149503ea.png)\n![image](https://user-images.githubusercontent.com/8766776/100678531-3e2d6880-3322-11eb-9045-a54887096e46.png)\n"},{"Id":"14378319242","Type":"IssuesEvent","CreatedAt":"2020-12-01T22:04:26","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10345","RelatedDescription":"Opened issue \"Dotnet add package doesn't record custom source feed was used during restore\" (#10345) at NuGet/Home","RelatedBody":"Hi.\nWhile I was investigating [#5127](https://github.com/NuGet/Home/issues/5127) I realized when user use custom source feed during `add package` then that information[ is not recorded into both asset and dpSpec files](https://github.com/NuGet/Home/issues/5127#issuecomment-736676045). Maybe it could become source of confusion or security hole if we don't know where did this package came from during restore specially when use private feeds.\n\n`>>dotnet add package Domain -s \"..\\Mypackages\" --version 1.0.0`\n\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/bc8e25c1-ed8c-41e8-a90d-952865d895ea)"},{"Id":"14376951992","Type":"IssuesEvent","CreatedAt":"2020-12-01T19:52:57","Actor":"geotinc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10344","RelatedDescription":"Opened issue \"FatalProtocolException in PackageSearchResource when deployed to Azure \" (#10344) at NuGet/Home","RelatedBody":"Hello, I have the following problem :\r\n\r\nNuGet product used NuGet.Protocol package version 5.8.0 :\r\n![image](https://user-images.githubusercontent.com/20421571/100789444-bf662780-3416-11eb-9709-260342e1b3f5.png)\r\n\r\nI have create an Asp.Net core 5 website that list nuget package from my private nuget serveur. It works great when running on my computer but when deployed to Azure, I have the following error\r\n\r\n![image](https://user-images.githubusercontent.com/20421571/100789604-f9372e00-3416-11eb-8532-f8b39e0c6340.png)\r\n\r\n![image](https://user-images.githubusercontent.com/20421571/100789222-731ae780-3416-11eb-97c5-212f71e97928.png)\r\n\r\nAny tips for solving this issues ?\r\n\r\nThanks\r\n"},{"Id":"14376404112","Type":"IssuesEvent","CreatedAt":"2020-12-01T19:01:24","Actor":"Anipik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10343","RelatedDescription":"Opened issue \"SuppressDependenciesWhenPacking requires not working for net6.0-windows during the pack task\" (#10343) at NuGet/Home","RelatedBody":"SuppressDependenciesWhenPacking is not working when we set this property for tfm net6.0-windows. \r\nI did a little investigation and it seems like it works when we specify the this tfm as net6.0-windows7.0. \r\ni tested this by adding this to the project.\r\n```\r\n <ItemGroup>\r\n    <_FrameworksWithSuppressedDependencies Include=\"net6.0-windows7.0\"/>\r\n  </ItemGroup> \r\n```\r\n\r\n\r\ncc @viktorHofer @ericst @safern\r\n\r\n"},{"Id":"14376093762","Type":"IssuesEvent","CreatedAt":"2020-12-01T18:32:29","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9919","RelatedDescription":"Closed issue \"resolve internal contracts assembly loading (fix RPS or get exception)\" (#9919) at NuGet/Home","RelatedBody":"See https://github.com/NuGet/NuGet.Client/pull/3485#discussion_r468528172"},{"Id":"14373800444","Type":"IssuesEvent","CreatedAt":"2020-12-01T15:32:22","Actor":"jpobst","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10342","RelatedDescription":"Opened issue \"VersionRange cannot parse single-digit ranges\" (#10342) at NuGet/Home","RelatedBody":"It would be nice if `NuGet.Versioning.VersionRange.Parse` could parse a single digit (like `NugetVersion.Parse`  can):\r\n\r\n```\r\nvar a = NuGetVersion.Parse (\"1.0\");\r\nvar b = NuGetVersion.Parse (\"1\");\r\n\r\nConsole.WriteLine (a == b);         // true\r\n\r\nvar c = VersionRange.Parse (\"1.0\");\r\nvar d = VersionRange.Parse (\"1\");   // System.ArgumentException: ''1' is not a valid version string.'\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-12-02T05:30:39.1400628Z","RunDurationInMilliseconds":1752}