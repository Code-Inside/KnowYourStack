{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13930050140","Type":"PullRequestEvent","CreatedAt":"2020-10-22T01:21:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8288","RelatedDescription":"Merged pull request \"[A11y] Darken the GitHub star icon\" (#8288) at NuGet/NuGetGallery","RelatedBody":"Darkens the orange GitHub star icon for 3:1 color contrast ratio.\r\n\r\n![image](https://user-images.githubusercontent.com/737941/96787480-ae051680-13a6-11eb-9416-e1ad91dc94fa.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8286"},{"Id":"13929295769","Type":"PullRequestEvent","CreatedAt":"2020-10-21T23:18:35","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8287","RelatedDescription":"Merged pull request \"Version history table rendering update for accessibility\" (#8287) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8196\r\n\r\nPreviously, version history table always had 2 hardly visible columns: 1 for signature information and another for deprecation information. When user is not authenticated on the web site, we never show the package signature information, so the cells although exist are always empty. The deprecation information is present, but most of the time packages are not deprecated and empty cells do not have any narrator markup, so are not read (but headers are).\r\n\r\nThis change moves the `Model.IsCertificatesUIEnabled` check up to the lines that generate column header, causing the certificate column to be completely absent for unauthenticated users. Same is done for `Model.IsPackageDeprecationEnabled` but it is always `true` in our case. Also `aria-label` properties added for empty cells when those are rendered."},{"Id":"13928347436","Type":"IssuesEvent","CreatedAt":"2020-10-21T21:18:55","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8245","RelatedDescription":"Closed issue \"Add a skip list when generating the \"Add Reference\" database\" (#8245) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nIf you reference a type from a package you haven't installed, Visual Studio can suggest installing that package. Today, there's no way to opt-out a package from being added to the \"Add Reference\" database. This is problematic as some recommendations are known to be incorrect (see https://github.com/NuGet/NuGetGallery/issues/8243). It would be better to simply skip recommendations from packages we index incorrectly.\r\n\r\n### Describe the solution you'd like\r\n\r\n* [x] Add a skip list for packages that shouldn't be added to the \"Add Reference\" database\r\n* [x] Add `System.Private.ServiceModel` to this list.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13931509536","Type":"IssuesEvent","CreatedAt":"2020-10-22T05:26:42","Actor":"MattiasEppler","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10172","RelatedDescription":"Opened issue \"flatten for content files not working\" (#10172) at NuGet/Home","RelatedBody":"Referring to the closed issue\r\n\r\nhttps://github.com/NuGet/Home/issues/6213\r\n\r\n```\r\n  <ItemGroup>\r\n    <Content Include=\"native\\*\">\r\n      <PackageCopyToOutput>true</PackageCopyToOutput>\r\n      <PackageFlatten>true</PackageFlatten>\r\n    </Content>\r\n  </ItemGroup>\r\n\r\n```\r\nPackageFlatten works only if the consuming project is a .net Framework Project. If you use the new core format csproject Fille (sdk) the files are not flatten in the output directory."},{"Id":"13930757271","Type":"IssuesEvent","CreatedAt":"2020-10-22T03:19:48","Actor":"tig","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10171","RelatedDescription":"Closed issue \"Can't install a pre-release package using Install-Package\" (#10171) at NuGet/Home","RelatedBody":"This package: https://www.nuget.org/packages/Terminal.Gui/1.0.0-pre.5\r\n\r\n`Find-Package` shows the pre-release versions if I use `-AllowPrereleaseVersions`.\r\n\r\n```powershell\r\nPS> Find-Package -AllowPrereleaseVersions terminal.gui -AllVersions\r\n\r\nName                           Version          Source           Summary\r\n----                           -------          ------           -------\r\nTerminal.Gui                   1.0.0-pre.5      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.4      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.3      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.2      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.1      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   0.90.3           nuget.org        Console user interface toolkit for .NET applications.\r\n\r\n...\r\n\r\n```\r\n\r\nHowever, `Install-Package` fails:\r\n\r\n```powershell\r\nPS> Install-Package Terminal.Gui -RequiredVersion 1.0.0-pre.5\r\nInstall-Package: No match was found for the specified search criteria and package name 'Terminal.Gui'. Try Get-PackageSource to see all available registered package sources.\r\n```\r\n\r\nThere is no `-AllowPrereleaseVersions` flag for `Install-Packages` when a `-Name` is provided!\r\n"},{"Id":"13930622494","Type":"IssuesEvent","CreatedAt":"2020-10-22T02:57:41","Actor":"tig","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10171","RelatedDescription":"Opened issue \"Can't install a pre-release package using Install-Package\" (#10171) at NuGet/Home","RelatedBody":"This package: https://www.nuget.org/packages/Terminal.Gui/1.0.0-pre.5\r\n\r\n`Find-Package` shows the pre-release versions if I use `-AllowPrereleaseVersions`.\r\n\r\n```powershell\r\nPS> Find-Package -AllowPrereleaseVersions terminal.gui -AllVersions\r\n\r\nName                           Version          Source           Summary\r\n----                           -------          ------           -------\r\nTerminal.Gui                   1.0.0-pre.5      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.4      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.3      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.2      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   1.0.0-pre.1      nuget.org        Console user interface toolkit for .NET applications.\r\nTerminal.Gui                   0.90.3           nuget.org        Console user interface toolkit for .NET applications.\r\n\r\n...\r\n\r\n```\r\n\r\nHowever, `Install-Package` fails:\r\n\r\n```powershell\r\nPS> Install-Package Terminal.Gui -RequiredVersion 1.0.0-pre.5\r\nInstall-Package: No match was found for the specified search criteria and package name 'Terminal.Gui'. Try Get-PackageSource to see all available registered package sources.\r\n```\r\n\r\nThere is no `-AllowPrereleaseVersions` flag for `Install-Packages` when a `-Name` is provided!\r\n"},{"Id":"13930083835","Type":"IssuesEvent","CreatedAt":"2020-10-22T01:27:38","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10170","RelatedDescription":"Opened issue \"Restore in VS: For CPS based PackageReference projects investigate improving the up to date check by utilizing the fact that the project cache + settings might not have changed since last restore\" (#10170) at NuGet/Home","RelatedBody":"Related to https://github.com/NuGet/Home/blob/dev/designs/VisualStudio-PartialRestoreOptimization.md, https://github.com/NuGet/Home/issues/9513. \r\n\r\nIn here we skip if the effective package spec + outputs are up to date and same as last time. \r\n\r\nA further optimization would be to *avoid* creating an effective dg spec (which combines the setting + package spec) if the settings are the project system cache are not updated. \r\n\r\n* At this point, it can/would only apply to SDK based projects/solutions\r\n* Note we can't skip it for mixed solutions because of transitivity\r\n"},{"Id":"13929689818","Type":"IssuesEvent","CreatedAt":"2020-10-22T00:19:56","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10169","RelatedDescription":"Opened issue \"Fix sfproj support\" (#10169) at NuGet/Home","RelatedBody":"Service Fabric projects (sfproj) use CPS, but do not advertise the `PackageReferences` capability.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/3644 changed our `CPSPackageReferenceProject` detection, and accidentally opted all CPS projects into CPSPackageReferenceProject support."},{"Id":"13929095916","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:49:24","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10163","RelatedDescription":"Closed issue \"Unexpected error occurs when trying to install a package having invalid client policies in PM UI\" (#10163) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Release-5.8.x\\5.8.0.6914\r\nVS Version: D16.8\\30620.203 \r\nOS Version: Windows-10-Enterprise-RS5\r\n## Detailed repro steps\r\n1. Create a clean machine OS: Windows-10-Enterprise-RS5. \r\n2. Create a new test certificate   `.\\CreateTestCertificate.ps1 –AddAsTrustedRootAuthority`\r\n3. Sign a package:  `NuGet.exe sign <PackageFilePath> -CertificatePath <PfxFilePath>`\r\n4. Create a Console App (.Net Core) project, add required mode in Nuget.config file with no trusted signers:\r\n  ```\r\n<config>\r\n     <add key=\"signatureValidationMode\" value=\"require\" />\r\n  </config>\r\n```\r\n5. Reload the solution, update the package source to above package path, and install the package into a project in PM UI.\r\n\r\n## Expected\r\nOnly error NU3034: signatureValidationMode is set to require, so packages are allowed only if signed by trusted signers; however, no trusted signers were specified occurred.\r\n \r\n## Actual\r\nUnexpected error occured as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/96694287-db5bbf80-13ba-11eb-9df6-2f5f314f5404.png)\r\n## Error Message\r\nSeverity | Code | Description | Project | File | Line | Suppression State\r\n-- | -- | -- | -- | -- | -- | --\r\nError |   | Package restore   failed. Rolling back package changes for 'LPR32'. |   |   |   |  \r\nError | NU3034 | Package 'Package32   1.0.0' from source 'C:\\Users\\v-crchang\\source\\repos\\Package32\\Package32':   signatureValidationMode is set to require, so packages are allowed only if   signed by trusted signers; however, no trusted signers were specified. | LPR32 | C:\\Users\\v-crchang\\source\\repos\\LPR32\\LPR32\\LPR32.csproj | 1 |  \r\nError | NU3034 | Package   'Microsoft.AspNetCore.App.Ref 3.1.2' from source   'https://api.nuget.org/v3/index.json': signatureValidationMode is set to   require, so packages are allowed only if signed by trusted signers; however,   no trusted signers were specified. | LPR32 | C:\\Users\\v-crchang\\source\\repos\\LPR32\\LPR32\\LPR32.csproj | 1 |  \r\nWarning | NU3027 | Package 'Package32   1.0.0' from source 'C:\\Users\\v-crchang\\source\\repos\\Package32\\Package32': The   signature should be timestamped to enable long-term signature validity after   the certificate has expired. | LPR32 | C:\\Users\\v-crchang\\source\\repos\\LPR32\\LPR32\\LPR32.csproj | 1 |  \r\n\r\n## Notes\r\n1. It starts to repro from Release-5.8.x\\5.9.0.6896.\r\n2. This issue **only** reproes on installing package into the project in PM UI. \r\n\r\n\r\n"},{"Id":"13929021679","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:39:01","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9550","RelatedDescription":"Closed issue \"PMUI Install Tab in VS.Oe\" (#9550) at NuGet/Home","RelatedBody":""},{"Id":"13929017222","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:38:23","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9609","RelatedDescription":"Closed issue \"Design proper session Permanence/Idempotency\" (#9609) at NuGet/Home","RelatedBody":"## Overview\nThere's currently a lot of uncertainty around multiple clients attaching to the same session.\n* Is it possible?\n* If so, what if someone does a restore while someone else is adding/removing packages?\n* What if multiple restores are started?\n\nWe need to investigate what's supported and how other teams have handled these issues - I'll work with Rob to flesh out this issue.\n\nPMUI for Codespaces"},{"Id":"13928985620","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:34:09","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9352","RelatedDescription":"Closed issue \"Better handling on unexpected error cases on the client side\" (#9352) at NuGet/Home","RelatedBody":"For diagnostics purposes, it's easier now if use the activity log. We should use the file and forget method in the future. "},{"Id":"13928872684","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:19:25","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10168","RelatedDescription":"Opened issue \"VS OE:  handle service unavailability changes and exceptions more centrally with better reporting\" (#10168) at NuGet/Home","RelatedBody":"Perhaps have a wrapper for each service and handle possible issues (like `ObjectDisposedException`) more gracefully."},{"Id":"13928855728","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:17:15","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10167","RelatedDescription":"Opened issue \"VS OE:  handle service version unavailable gracefully (and maybe try downgrading?)\" (#10167) at NuGet/Home","RelatedBody":"Use `ServiceBrokerExtensions.ReportMissingServiceAsync(...)` to report when a requested service version is unavailable.\r\n\r\nThis is important to do early so that in the future when service versions are removed, older clients with this feature can know that functionality is reduced."},{"Id":"13928783314","Type":"IssuesEvent","CreatedAt":"2020-10-21T22:08:14","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9441","RelatedDescription":"Closed issue \"net5 tfm: produce error when missing TPV\" (#9441) at NuGet/Home","RelatedBody":"Produce an error when a OS flavored .NET 5 TFM is consumed but the package has no TPV in either folder name of the manifest. Is this supposed to be during restore??"},{"Id":"13926995736","Type":"IssuesEvent","CreatedAt":"2020-10-21T19:07:54","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10166","RelatedDescription":"Opened issue \"Improve install new package performance for large solutions\" (#10166) at NuGet/Home","RelatedBody":"## Details about Problem\n\nWe made quite progress on performance improvement for update/downgrade, uninstall actions for existing package in large solution.\nBut I see installing new package into OrchardCore (158 projects) taking almost 10 minutes which is quite long. Since `upgrade/downgrade` actions are already 30-40seconds range `install` action could be improved, because they share much code base. Currently didn't investigate where is the bottleneck for that long 10 min install duration."},{"Id":"13926203020","Type":"IssuesEvent","CreatedAt":"2020-10-21T17:56:40","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10165","RelatedDescription":"Opened issue \"Prepare Slides for Sln Load Meeting\" (#10165) at NuGet/Home","RelatedBody":"- Data investigations"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-22T05:30:36.7318985Z","RunDurationInMilliseconds":1616}