{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12779525652","Type":"PullRequestEvent","CreatedAt":"2020-06-30T22:07:16","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8079","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.06.30]RI of dev into master\" (#8079) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12779487289","Type":"PullRequestEvent","CreatedAt":"2020-06-30T22:02:02","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8077","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.06.30]FI of master into dev - Gallery\" (#8077) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12779399636","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:50:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8078","RelatedDescription":"Opened issue \"[Dependents] Investigate query performance issue\" (#8078) at NuGet/NuGetGallery","RelatedBody":"We shipped the package dependents feature to PROD but noticed high query times. After some conversations with the SQL Server team this is related to the query plan that is being selected via parameter sniffing.\r\n\r\nWe got into a situation in PROD where there are at least two wildly different query plans that appropriate for their different parameter values. For example, the query plan of sniffed from Newtonsoft.Json looks totally different from BaseTestPackage and the performance when the query plans get mixed up is unacceptable.\r\n\r\nFor example, using a BaseTestPackage parameter value for the Newtonsoft.Json query plan results in a query that takes longer than 30 seconds.\r\n\r\nSome options:\r\n\r\n1. Use `OPTION ( OPTIMIZE FOR UNKNOWN )` - this will cause very depended upon packages like Newtonsoft.Json to take 1-3 seconds per query. Maybe this okay with caching.\r\n1. Use `OPTION ( RECOMPILE )` and allow every parameter value and query execution to evaluate its own query plan.\r\n1. Investigate other options with the SQL Server team (perhaps there are new options coming out or we are missing something)\r\n\r\nMy vote is to try option 2 in PROD and verify DB and App Service resource utilization is nominal."},{"Id":"12777774111","Type":"IssuesEvent","CreatedAt":"2020-06-30T18:40:42","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8069","RelatedDescription":"Closed issue \"Published package with wrong name.\" (#8069) at NuGet/NuGetGallery","RelatedBody":"I have published the package TheToolBox.Data.Contracts v1.0.0 with the wrong name.\r\nIt should be TheToolbox.Data.Contracts (with lower case \"b\").\r\n\r\nI contacted the support to remove the package but nothing happened.\r\nI've tried to upload a new version (1.0.1) with the new name (after unlisting the old one) but it is still shown the old name.\r\n\r\nPlease help!!!!!"},{"Id":"12777719640","Type":"PullRequestEvent","CreatedAt":"2020-06-30T18:34:35","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8077","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.06.30]FI of master into dev - Gallery\" (#8077) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12769872385","Type":"IssuesEvent","CreatedAt":"2020-06-30T05:05:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8076","RelatedDescription":"Opened issue \"Auxiliary2AzureSearch can fail if downloads.v1.json is being written\" (#8076) at NuGet/NuGetGallery","RelatedBody":"This is because it used `OpenReadAsync` to get a stream, which, in WindowsAzure.Storage, does sequential range requests with `If-Match`."},{"Id":"12767640391","Type":"IssuesEvent","CreatedAt":"2020-06-29T22:03:17","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7875","RelatedDescription":"Closed issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org - Stage 2\" (#7875) at NuGet/NuGetGallery","RelatedBody":"As announced in the blog post [here](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/), it's time to permanently remove support for TLS 1.0, 1.1.\r\nExact date in April is TBD and will be announced several weeks in advance."},{"Id":"12766471971","Type":"IssuesEvent","CreatedAt":"2020-06-29T19:38:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8038","RelatedDescription":"Closed issue \"[Dependents] Add configurable cache time\" (#8038) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12765837303","Type":"IssuesEvent","CreatedAt":"2020-06-29T18:25:59","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8075","RelatedDescription":"Opened issue \"Add 'Include verified packages' filter to Advanced Search\" (#8075) at NuGet/NuGetGallery","RelatedBody":"We received customer feedback about adding an option to only return verified packages from reserved namespaces in the advanced search panel.\n\ne.g, if a search for \"WebAPI\" is done, with that option enabled, only packages from Microsoft would be shown and not from other package authors.\n\nThis feature is related, yet not part of the #2636 Epic"},{"Id":"12765414847","Type":"IssuesEvent","CreatedAt":"2020-06-29T17:38:18","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7996","RelatedDescription":"Closed issue \"API key generation should highlight 'owner' selection\" (#7996) at NuGet/NuGetGallery","RelatedBody":"We have seen many support requests where authors were not able to push packages using API keys as those API keys were not scoped to the right owner. This happens when there are one or more orgs, the author belong to and want to publish the package against an organization account.\r\n\r\nWe would need to highlight the owner selection when there are ore than one owner to select from.\r\n\r\nMy recommendation is to make it an explicit selection without defaulting to the current owner. This way the author will be aware of the accounts options they want to select."},{"Id":"12765169214","Type":"IssuesEvent","CreatedAt":"2020-06-29T17:11:36","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8056","RelatedDescription":"Closed issue \"Rebuild Azure Search Index\" (#8056) at NuGet/NuGetGallery","RelatedBody":"Rebuild the index to be able to enable future advanced search features."},{"Id":"12757815620","Type":"PullRequestEvent","CreatedAt":"2020-06-28T23:17:52","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8039","RelatedDescription":"Merged pull request \"Make statistical significant figures formatting culture-sensitive\" (#8039) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8032\r\n\r\nAdds culture-awareness to string operations creating short numbers for Y-axis on graphs. Added culture cases to unit tests. Examples:\r\n\r\nfr-FR:\r\n![image](https://user-images.githubusercontent.com/14225979/84342945-33531000-abea-11ea-94c0-410558360bbe.png)\r\n\r\nen-US:\r\n![image](https://user-images.githubusercontent.com/14225979/84342961-3ea63b80-abea-11ea-80f8-9d4e900f3c5e.png)"},{"Id":"12757602141","Type":"IssuesEvent","CreatedAt":"2020-06-28T22:01:10","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8074","RelatedDescription":"Opened issue \"[Advanced search] Update .NET Core tool documentation\" (#8074) at NuGet/NuGetGallery","RelatedBody":"Current documentation says ([link](https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools#find-a-tool)):\r\n\r\n> Currently, .NET Core doesn't have a tool search feature. Here are some ways to find tools:\r\n> \r\n> * See the list of tools in the natemcmaster/dotnet-tools GitHub repository.\r\n> * Use ToolGet to search for .NET tools.\r\n> * See the source code for the tools created by the ASP.NET Core team in the Tools directory of the dotnet/aspnetcore GitHub repository.\r\n> * Learn about diagnostic tools at .NET Core dotnet diagnostic tools.\r\n> * Search the NuGet website. However, the NuGet site doesn't yet have a feature that lets you search only for tool packages.\r\n\r\nWe should update this once we release the advanced search feature."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12780582313","Type":"IssuesEvent","CreatedAt":"2020-07-01T01:12:24","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9738","RelatedDescription":"Opened issue \"Xplat verfication: after merging to dev\" (#9738) at NuGet/Home","RelatedBody":"There're some unfinished tasks after merging the xplat verification feature branch to dev."},{"Id":"12780182411","Type":"IssuesEvent","CreatedAt":"2020-06-30T23:55:20","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9725","RelatedDescription":"Closed issue \"Package signing with timestamp server does not work on .NET 5.0\" (#9725) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nPackage signing with timestamp server does not work in .NET 5. I have tracked down the issue to [this code](https://github.com/NuGet/NuGet.Client/blob/088004379cb99890f766e9b7a0a29f7b080f888b/src/NuGet.Core/NuGet.Packaging/Signing/Timestamp/Rfc3161TimestampRequestNetstandard21Wrapper.cs#L73-L76) which was recently added in https://github.com/NuGet/NuGet.Client/pull/3458\r\nThe timestamp server in my tests returned `application/timestamp-reply` as `Content-Type`.\r\nIf I comment this code out or accept both `application/timestamp-response` and `application/timestamp-reply` everything works fine.\r\n\r\n\r\nNuGet product used: Source Code / NuGet Package\r\n\r\nNuGet version: latest commit https://github.com/NuGet/NuGet.Client/commit/088004379cb99890f766e9b7a0a29f7b080f888b\r\n\r\ndotnet.exe --version: 5.0.100-preview.6.20318.15 / 5.0.100-preview.7\r\n\r\nVS version: 16.6.2\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 1909 Build 18363.778)\r\n\r\nWorked before? If so, with which NuGet version: Yes, before https://github.com/NuGet/NuGet.Client/pull/3458\r\n\r\n\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new test case in `NuGet.Client\\test\\NuGet.Core.Tests\\NuGet.Commands.Test\\SignCommandRunnerTests.cs`\r\n```c#\r\n[Fact]\r\npublic async Task ExecuteCommandAsync_WithCertificate()\r\n{\r\n    using (var test = await Test.CreateAsync(_fixture.GetDefaultCertificate()))\r\n    {\r\n        test.Args.CertificateSubjectName = \"your code signing certificate name\";\r\n        test.Args.CertificateStoreLocation = StoreLocation.CurrentUser;\r\n        test.Args.CertificateStoreName = StoreName.My;\r\n        test.Args.SignatureHashAlgorithm = HashAlgorithmName.SHA256;\r\n        test.Args.TimestampHashAlgorithm = HashAlgorithmName.SHA256;\r\n        test.Args.Timestamper = \"http://timestamp.digicert.com\";\r\n\r\n        var result = await test.Runner.ExecuteCommandAsync(test.Args);\r\n\r\n        Assert.Equal(0, result);\r\n    }\r\n}\r\n```\r\n\r\n2. Test should pass on platforms netframework, net 5.0.\r\n\r\n\r\nIssue first reported here: https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/issues/1050\r\n\r\ncc: @clairernovotny "},{"Id":"12780111649","Type":"IssuesEvent","CreatedAt":"2020-06-30T23:41:21","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9641","RelatedDescription":"Closed issue \"[Bug Bash][Test Failure] Error “Collection was modified; enumeration operation may not execute.” occurred when first updating package in PMC for the solution included multiple projects\" (#9641) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.7.0.6632\r\nVS Version: Master\\30202.132\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tCreate a solution with multiple projects included (e.g. C# Console Application(.NET Framework 4.7.2)).\r\n2.\tInstall a package (not the latest version) with PackageReference format into every project.\r\n3.\tOpen PMC and execute command “Update-package [PackageID]”.\r\n## Expected\r\nThe package updated successfully without any error.\r\n## Actual\r\nError “Collection was modified; enumeration operation may not execute.” occurred when first updating the package as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/83622972-4c910680-a5c3-11ea-844d-2f95e6876efe.png)\r\n## Note\r\n1. The error doesn’t repro and the package can be updated successfully when executing the same command for the second time.\r\n2. It only repro on the solution with multiple projects, doesn’t repro on single project.\r\n3. It only repro with PackageReference format, doesn’t repro on Packages.config format.\r\n4. It didn't repro on 16.6 Preview2 – D16.6\\29924.181 (implicit NuGet Client 5.6.0.6489).\r\n5. It **didn't repro** on 16.5 GA (implicit NuGet Client release-5.5.x\\5.5.0.6473), but **repro** on 16.6 Preview1 (implicit NuGet Client release-5.6.0-preview.1\\5.6.0.6483).\r\n\r\n"},{"Id":"12780084002","Type":"IssuesEvent","CreatedAt":"2020-06-30T23:36:03","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8611","RelatedDescription":"Closed issue \"nu5129 should check `buildMultiTargeting`\" (#8611) at NuGet/Home","RelatedBody":"The rule currently checks `build`, `buildTransitive` and `buildCrossTargeting`, but not `buildMultiTargeting`"},{"Id":"12780083983","Type":"IssuesEvent","CreatedAt":"2020-06-30T23:36:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8627","RelatedDescription":"Closed issue \"Possible bug in validation rule implementation of NU5129\" (#8627) at NuGet/Home","RelatedBody":"In WCF repo after [updating our dependency](https://github.com/dotnet/wcf/pull/3920) to Arcade one of our packages began producing this validation error...\r\n\r\n`\".dotnet\\sdk\\3.0.100-preview9-014004\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error NU5129: - At least one .props file was found in 'build/', but 'build/dotnet-svcutil.xmlserializer.props/dotnet-svcutil.xmlserializer.props' was not. - At least one .targets file was found in 'build/', but 'build/dotnet-svcutil.xmlserializer.targets/dotnet-svcutil.xmlserializer.targets' was not. \"`\r\n\r\nIt's evident from the logging that something strange is happening, as far as I can see we are following convention.\r\n[dotnet-svcutil.xmlserializer.props](https://github.com/dotnet/wcf/blob/master/src/svcutilcore/files/GenerateNupkgProps.targets#L9)\r\n[dotnet-svcutil.xmlserializer.targets](https://github.com/dotnet/wcf/blob/master/src/svcutilcore/src/dotnet-svcutil.xmlserializer.csproj#L87)\r\n\r\nI am suppressing the warning for now...\r\ndotnet/wcf#3928\r\n\r\nTo reproduce just checkout the master branch from the [dotnet/wcf repo](https://github.com/dotnet/wcf)\r\nRemove the [No Warn](https://github.com/dotnet/wcf/blob/master/src/svcutilcore/src/dotnet-svcutil.xmlserializer.csproj#L9)\r\n Run the following command from the root...\r\n`eng\\common\\cibuild.cmd -configuration Release -prepareMachine -- /p:Test=false /p:IntegrationTest=false /p:Pack=true`\r\n\r\nIt will build some other stuff as well but will reproduce the error for that specific project."},{"Id":"12780083973","Type":"IssuesEvent","CreatedAt":"2020-06-30T23:36:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8703","RelatedDescription":"Closed issue \"5.3.0 regression - Index was outside the bounds of the array with basic nuspec file (NU5129)\" (#8703) at NuGet/Home","RelatedBody":"Can anyone explain the following - I'm pretty sure something isn't right but can't figure out what.\r\n\r\nWe had a build failure on our CI server today caused by the release of `NuGet.CommandLine 5.3.0` - we have now pinned our build to `5.2.0` to work around the issue.\r\n\r\nHere's our `.nuspec` file:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Squid.FullDeploy</id>\r\n    <version>$version$</version>\r\n    <authors>My Team</authors>    \r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>BALH</description>\r\n    <tags>BLAH</tags>\r\n    <copyright>SOMETHING</copyright>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"*\" exclude=\"*.nuspec\" />\r\n    <file src=\"buildtime-vars.json\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nComparing the two versions, side-by-side:\r\n\r\n```\r\nC:\\Projects\\squid3\\src\\Squid.FullDeploy>..\\..\\tools\\NuGet.CommandLine.5.3.0\\tools\\NuGet.exe pack Squid.FullDeploy.nuspec -version 3.43.7\r\nAttempting to build package from 'Squid.FullDeploy.nuspec'.\r\nSuccessfully created package 'C:\\Projects\\squid3\\src\\Squid.FullDeploy\\Squid.FullDeploy.3.43.7.nupkg'.\r\nIndex was outside the bounds of the array.\r\n\r\nC:\\Projects\\squid3\\src\\Squid.FullDeploy>..\\..\\tools\\NuGet.CommandLine.5.2.0\\tools\\NuGet.exe pack Squid.FullDeploy.nuspec -version 3.43.7\r\nAttempting to build package from 'Squid.FullDeploy.nuspec'.\r\nWARNING: NU5119: File 'C:\\Projects\\squid3\\src\\Squid.FullDeploy\\Squid.FullDeploy.3.43.7.nupkg' was not added to the package. Files and folders starting with '.' or ending with '.nupkg' are excluded by default. To include this file, use -NoDefaultExcludes from the commandline\r\nSuccessfully created package 'C:\\Projects\\squid3\\src\\Squid.FullDeploy\\Squid.FullDeploy.3.43.7.nupkg'.\r\nWARNING: NU5110: The script file 'cakebootstrapper.ps1' is outside the 'tools' folder and hence will not be executed during installation of this package. Move it into the 'tools' folder.\r\nWARNING: NU5110: The script file 'deploy.ps1' is outside the 'tools' folder and hence will not be executed during installation of this package. Move it into the 'tools' folder.\r\nWARNING: NU5111: The script file 'cakebootstrapper.ps1' is not recognized by NuGet and hence will not be executed during installation of this package. Rename it to install.ps1, uninstall.ps1 or init.ps1 and place it directly under 'tools'.\r\nWARNING: NU5111: The script file 'deploy.ps1' is not recognized by NuGet and hence will not be executed during installation of this package. Rename it to install.ps1, uninstall.ps1 or init.ps1 and place it directly under 'tools'.\r\n```"},{"Id":"12780083952","Type":"IssuesEvent","CreatedAt":"2020-06-30T23:36:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8806","RelatedDescription":"Closed issue \"False NU5129 raised when a backward slash is involved in the path. \" (#8806) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\nAfter updating to 3.0.100, we get this in the [CI](https://dev.azure.com/dnceng/public/_build/results?buildId=422893). It is fine on mac and Windows \r\n\r\n```\r\n/usr/share/dotnet/sdk/3.0.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(198,5): error NU5129: - At least one .targets file was found in 'build/netstandard2.0//', but 'build/netstandard2.0/System.CommandLine.DragonFruit.targets' was not. [/home/vsts/work/1/s/src/System.CommandLine.DragonFruit/System.CommandLine.DragonFruit.csproj]\r\n/usr/share/dotnet/sdk/3.0.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(198,5): error NU5129: - At least one .props file was found in 'build/netstandard2.0//', but 'build/netstandard2.0/System.CommandLine.DragonFruit.props' was not. [/home/vsts/work/1/s/src/System.CommandLine.DragonFruit/System.CommandLine.DragonFruit.csproj]\r\n/usr/share/dotnet/sdk/3.0.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(198,5): error NU5129:  [/home/vsts/work/1/s/src/System.CommandLine.DragonFruit/System.CommandLine.DragonFruit.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nAnd [this ](https://github.com/dotnet/command-line-api/pull/680/files) fixed it. Looks like PackagePath no longer tolerate backward slash on ubuntu\r\n\r\n## Details about Problem\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\n"},{"Id":"12779942771","Type":"PullRequestEvent","CreatedAt":"2020-06-30T23:13:11","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/9736","RelatedDescription":"Closed pull request \"Create nut\" (#9736) at NuGet/Home","RelatedBody":""},{"Id":"12779290359","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:35:22","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9737","RelatedDescription":"Opened issue \"Bug in NuGet.CommandLine.Console's PrintJustified method\" (#9737) at NuGet/Home","RelatedBody":"The PrintJustified method in NuGet.CommandLine.Console does not account for newlines properly when wrapping. An example of this is:\r\n\r\nInput - \r\n```\r\nLogging abstractions for Microsoft.Extensions.Logging.\r\n\r\nCommonly Used Types:\r\nMicrosoft.Extensions.Logging\r\nMicrosoft.Extensions.Logging...\r\n```\r\nWhen we call Console.PrintJustified(2, text);\r\n\r\nActual Output - \r\n```\r\n  Logging abstractions for Microsoft.Extensions.Logging.\r\n\r\nCommonly Used Types:\r\nMicrosoft.Extensions.Lo...\r\n```\r\n\r\nExpected Output -\r\n```\r\n  Logging abstractions for Microsoft.Extensions.Logging.\r\n\r\n  Commonly Used Types:\r\n  Microsoft.Extensions.Lo...\r\n```"},{"Id":"12779205106","Type":"PullRequestEvent","CreatedAt":"2020-06-30T21:24:47","Actor":"IvanskyDev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9736","RelatedDescription":"Opened pull request \"Create nut\" (#9736) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-01T05:30:40.5487065Z","RunDurationInMilliseconds":1733}