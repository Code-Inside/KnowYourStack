{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24100435934","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:41:00","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9241","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Include a warning to 'add a backup admin' to your organization account\" (#9241) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nUsers often create company organizations to upload packages, and do not add any other Admins to the org. They then leave the company, leaving the company's organization account and its packages without an owner, and we aren't always able to restore the company's access to its resources.\r\n\r\nWe should add a warning/suggestion for a user to add multiple Admins to their organization account.\n\n### Repro Steps\n\n-\n\n### Expected Behavior\n\nUsers are advised to add backup Admins to their organization accounts.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24100159522","Type":"PullRequestEvent","CreatedAt":"2022-09-19T23:15:55","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9232","RelatedDescription":"Merged pull request \"Support more languages for syntax highlighting\" (#9232) at NuGet/NuGetGallery","RelatedBody":"Add syntax highlighting for supporting fsharp, dos, powershell. \r\n\r\nbefore: \r\n![before](https://user-images.githubusercontent.com/64443925/189755649-5fcbbee7-662b-47f6-b756-a0e35e82ce69.png)\r\n\r\nafter: \r\n![after](https://user-images.githubusercontent.com/64443925/189757365-b95c359f-bf86-43bc-ace9-25083355e580.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9125\r\n\r\nAdditional:\r\n1.  This is blocked by issue https://github.com/NuGet/NuGetGallery/issues/9226, need merge after. \r\n2.  We also want to support cshtml, razor, it is in separate library, we will support them later.  Track issue here: https://github.com/NuGet/NuGetGallery/issues/9231"},{"Id":"24096292595","Type":"PullRequestEvent","CreatedAt":"2022-09-19T19:04:09","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9239","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.09.16]RI of dev into main\" (#9239) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24081540171","Type":"PullRequestEvent","CreatedAt":"2022-09-19T07:07:34","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9240","RelatedDescription":"Opened pull request \"[hackathon 2022] Add anon uploads feature flag support to packages controller\" (#9240) at NuGet/NuGetGallery","RelatedBody":"This will get us into the UploadPackage get action with a null user (at which point it will NRE)."},{"Id":"24061274489","Type":"PullRequestEvent","CreatedAt":"2022-09-16T23:13:29","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9239","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.09.16]RI of dev into main\" (#9239) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24060753050","Type":"PullRequestEvent","CreatedAt":"2022-09-16T22:13:52","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9238","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.09.16]FI of main into dev\" (#9238) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24059627159","Type":"PullRequestEvent","CreatedAt":"2022-09-16T20:42:03","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9238","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.09.16]FI of main into dev\" (#9238) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24059549319","Type":"IssuesEvent","CreatedAt":"2022-09-16T20:36:22","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9237","RelatedDescription":"Opened issue \"[Deployment] 2022.09.16\" (#9237) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\n## Changes\r\n\r\n* https://github.com/NuGet/NuGetGallery/pull/9233 (tracked by https://github.com/NuGet/NuGetGallery/issues/9226) - **Hotfix into main**\r\n* https://github.com/NuGet/NuGetGallery/pull/9229 (tracked by https://github.com/NuGet/Engineering/issues/4566)\r\n* https://github.com/NuGet/NuGetGallery/pull/9228 (tracked by https://github.com/NuGet/Engineering/issues/4555)\r\n\r\n## Progress\r\n* [ ] Merge PRs: - x, x\r\n* [ ] Build: x\r\n* [ ] Release: x\r\n* [ ] DEV DB Migration - _skipped_\r\n* [ ] DEV\r\n* [ ] INT DB Migration - _skipped_\r\n* [ ] INT\r\n* [ ] PROD DB Migration - _skipped_\r\n* [ ] PROD\r\n"},{"Id":"24057892882","Type":"PullRequestEvent","CreatedAt":"2022-09-16T18:45:30","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9233","RelatedDescription":"Merged pull request \"[README] Hotfix for section links 500 error\" (#9233) at NuGet/NuGetGallery","RelatedBody":"Added a hotfix for the 500 internal server error resulting from the added support for section links.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9226"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24100469418","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:44:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12003","RelatedDescription":"Closed issue \"[Bug]: [Pack] The error “NU5017: Cannot create a package that has no dependencies nor content” occurs when the NuspecBathPath is more than 5 layers\" (#12003) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nDev\\6.4.0.33\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n#### Details about Problem\r\nVS Version: Main\\32803.137\r\nNuGet Version: Dev\\6.4.0.33\r\nOS Version: Windows-11-Enterprise-21H2 ENU\r\n\r\n#### Detailed repro steps\r\n1. Create a C# Class Library (.NET 7.0) in VS. \r\n2. Put a nuspec file called \"Package.nuspec\" (the content is valid and correct) under a long path like C:\\Users\\v-luzh\\Source\\Repos.\r\n3. Run `“dotnet pack -p:NuspecFile=\"C:\\Users\\v-luzh\\Source\\Repos\\Package.nuspec\" -p:NuspecBasePath=C:\\Users\\v-luzh\\Source\\Repos”`, the packing is successful without any error.\r\n4. Run `“dotnet pack -p:NuspecFile=\"C:\\Users\\v-luzh\\Source\\Repos\\SpecFile\\Package.nuspec\" -p:NuspecBasePath=C:\\Users\\v-luzh\\Source\\Repos\\SpecFile”`.\r\n\r\n#### Expected\r\nThe package can be packed successfully (like the result of step3). \r\n\r\n#### Actual\r\nThe error “NU5017: Cannot create a package that has no dependencies nor content” occurs as below.\r\n![image](https://user-images.githubusercontent.com/20632625/182815733-9d32e686-617c-429c-850a-8b9c1191642e.png)\r\n\r\n#### Note:\r\n1.It seems not a regression since it reproes on NuGet Client 5.11.2.2.\r\n2.It reproes when the NuspecBasePath 5 layers, doesn't repro when the NuspecBasePath <5 layers."},{"Id":"24100088710","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:09:42","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12101","RelatedDescription":"Closed issue \"[Bug]: ArgumentNullException in PackTaskLogic.GetPackArgs\" (#12101) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\nMSBuild 17.3\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\nRepro:\r\n1. git clone https://github.com/KirillOsenkov/MetadataTools\r\n2. msbuild /r /m /bl /p:Configuration=Release src\\BinaryCompatChecker\\BinaryCompatChecker.csproj\r\n\r\nThis PackTask fails:\r\nhttps://github.com/KirillOsenkov/MetadataTools/blob/cd53fdadc350aef6c7334d5eb2cadfb9eb566b68/src/BinaryCompatChecker/BinaryCompatChecker.csproj#L22-L36\r\n\r\nArgumentNullException during packing of a .nuspec file because RootDir and Directory are not available off the Nuspec file request:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3827ea2b26476e65513514130cdcaf0166f337d8/src/NuGet.Core/NuGet.Build.Tasks.Pack/PackTaskLogic.cs#L558-L559\r\n\r\nneed to get the RootDir and Directory and handle them being null.\r\n\r\n```\r\n \tmscorlib.dll!System.IO.Path.Combine(string path1, string path2) Line 1199\tC#\r\n>\tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.InitCurrentDirectoryAndFileName(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request, NuGet.Commands.PackArgs packArgs) Line 557\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackArgs(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) Line 69\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTask.Execute() Line 128\tC#\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24100002267","Type":"IssuesEvent","CreatedAt":"2022-09-19T23:02:22","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12101","RelatedDescription":"Opened issue \"[Bug]: ArgumentNullException in PackTaskLogic.GetPackArgs\" (#12101) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild 17.3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nArgumentNullException during packing of a .nuspec file because RootDir and Directory are not available off the Nuspec file request:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3827ea2b26476e65513514130cdcaf0166f337d8/src/NuGet.Core/NuGet.Build.Tasks.Pack/PackTaskLogic.cs#L558-L559\r\n\r\nneed to get the RootDir and Directory and handle them being null.\r\n\r\n```\r\n \tmscorlib.dll!System.IO.Path.Combine(string path1, string path2) Line 1199\tC#\r\n>\tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.InitCurrentDirectoryAndFileName(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request, NuGet.Commands.PackArgs packArgs) Line 557\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackArgs(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) Line 69\tC#\r\n \tNuGet.Build.Tasks.Pack.dll!NuGet.Build.Tasks.Pack.PackTask.Execute() Line 128\tC#\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"24099791705","Type":"IssuesEvent","CreatedAt":"2022-09-19T22:43:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11618","RelatedDescription":"Closed issue \"[Bug]: Private NuGet Feed errors with `dotnet new --update-check`\" (#11618) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.101\n\n### Worked before?\n\nno\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nFeedback ticket: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1460341\r\n\r\nSimilar to https://github.com/NuGet/Home/issues/11169...\r\n>  For some reason nuget makes multiple calls to the credprovider and every next call starting from 2nd passes IsRetry: true as request argument, which invalidates cached token. \r\n\r\nTo reproduce:\r\n1. Clear nuget cache (dotnet nuget locals all -c) and credprovider cache ([clear this folder](https://github.com/microsoft/artifacts-credprovider/blob/master/README.md#session-token-cache-locations))\r\n2. Set nuget.config to use exclusively private feed in ADO\r\n3. dotnet new --uninstall Microsoft.DotNet.Web.Spa.ProjectTemplates (remove template for repro if it's already installed) \r\n4. Run `dotnet new --install Microsoft.DotNet.Web.Spa.ProjectTemplates --interactive`\r\n5. Observe multiple sequential interactive prompts\n\n### Verbose Logs\n\n_No response_"},{"Id":"24098596021","Type":"IssuesEvent","CreatedAt":"2022-09-19T21:17:33","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11918","RelatedDescription":"Closed issue \"[Bug]: NuGet.VisualStudio.Implementation.Extensibility.VsPathContextProvider.TryCreateContext fault\" (#11918) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nVS 2022 Enterprise, Version 17.3 Preview 3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nDisable the option to download missing packages\r\n\r\n1. Create a new WPF solution\r\n2. Open the Toolbox while in the .xaml file\n\n### Verbose Logs\n\n_No response_"},{"Id":"24097630094","Type":"IssuesEvent","CreatedAt":"2022-09-19T20:19:21","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12093","RelatedDescription":"Closed issue \"[Bug]: [Bug Bash][Suggestion] Suggest to show a tooltip “Show existed version” when hovering on the arrow-down button of Version drop-down box on the right panel of the PM UI\" (#12093) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.4.0.85\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n## Repro steps:  \r\n1. Launch VS and create a solution [e.g. C# Console App (.NET Framework 4.8.1)].\r\n2. Open the PM UI.\r\n3. Hover-on the arrow-down button of Version drop-down box on the right panel of PM UI.\r\n\r\n## Expected:\r\nThere should be a tooltip like “Show existed version” when hovering on the arrow-down button of Version drop-down box on the right panel of the PM UI as below screenshot.\r\n![image](https://user-images.githubusercontent.com/71433406/190375072-e15342d1-fce1-46a0-8dd7-3e26730b66ad.png)\r\n## Actual: \r\nNo tooltip shows when hovering on the arrow-down button of Version drop-down box on the right panel of the PM UI as below screenshot. \r\n![image](https://user-images.githubusercontent.com/71433406/190375183-a7e77f3d-abcf-44c1-919e-b9c702af4cd4.png)\r\n## Notes:\r\n1. It is just a suggestion.\r\n2. It is not a regression.\n\n### Verbose Logs\n\n_No response_"},{"Id":"24094521583","Type":"IssuesEvent","CreatedAt":"2022-09-19T17:29:49","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12100","RelatedDescription":"Opened issue \"[DCR]: Static graph-based restore should handle an AggregateException from MSBuild\" (#12100) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe\n\n### Current Behavior\n\nAfter a behavior change in MSBuild done [here](https://github.com/dotnet/msbuild/pull/7831), static graph now throws an `AggregateException` instead of an `InvalidProjectFileException`.  This leads to a very useless error message since the inner exception messages aren't logged.\n\n### Desired Behavior\n\nNuGet needs to catch the AggregateException and handle each inner exception accordingly so that the user knows what's going on.\n\n### Additional Context\n\n_No response_"},{"Id":"24082081315","Type":"IssuesEvent","CreatedAt":"2022-09-19T07:37:23","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12040","RelatedDescription":"Reopened issue \"[Bug]: [Cross-platform Sign Verify] No “X.509” info shows after running command “dotnet restore”\" (#12040) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.100-rc.2.22417.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Detailed repro steps\r\n1.\tExecute the [Pre-testing steps](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FManual%20tests%2FTest%20Cases&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344A15B-01B1-4828-AF4C-63FE53687F8A%2FPre-testing%20steps%7C6E4370C3-C593-4B99-ABD8-908D0F9E002B%2F%29).\r\n2.\tWhere <NotBefore> and <NotAfter> are datetime values that mark a 10-minute period starting now, create a short-lived test code signing certificate that will expire 10 minutes from now. \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net7.0 -- -nb \"<NotBefore>\" -na \"<NotAfter>\"  `\r\n3.\tWhere <CertificateFilePath> is the file path to the .cer or .pem file in step 1 and <VersionedSdkDirectoryPath> is the directory path for the versioned .NET SDK directory (e.g.:  ./dotnet/dotnet/sdk/7.0.100), add trust for the certificate: \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> `\r\n4.\tWhere <PackageId> is the test package ID and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\n               On Windows: ` .\\dotnet\\dotnet nuget sign .\\<PackageId>\\bin\\Debug\\<PackageId>.1.0.0.nupkg --overwrite --certificate-path <PfxFilePath> `\r\n5.\tVerify that 1 warning displays in the output from the previous step: \r\nwarn : NU3002: The '--timestamper' option was not provided. The signed package will not be timestamped. To learn more about this option, please visit https://docs.microsoft.com/dotnet/core/tools \r\n6.\tCreate a test project: \r\nOn Windows:  `mkdir .\\test && pushd .\\test && ..\\dotnet\\dotnet new console && copy ..\\NuGet.config.template .\\NuGet.config  `\r\n7.\tUpdate NuGet.config to reference the SHA-256 fingerprint of the short-lived certificate created in step 2. \r\n8.\tClear local NuGet resources and previous restore results: \r\nOn Windows:  `rd /s /q .\\obj && ..\\dotnet\\dotnet nuget locals --clear all `\r\n9.\tWhere <PackageId> is the test package ID, add a package reference to the test package: \r\n        On Windows: ` ..\\dotnet\\dotnet add package <PackageId> --version 1.0.0 `\r\n10.\tVerify the results of the previous step.  \r\n               On Windows, the operation failed with the following messages: \r\n```\r\na.\tinfo : X.509 certificate chain validation will use the default trust store selected by .NET. \r\nb.\terror: NU3037: Package '<PackageId> 1.0.0' from source 'E:\\testpass\\<PackageId>\\bin\\Debug': The author primary \r\n```signature validity period has expired. \r\n11.\tRepeat step 8. \r\n12. Where <PackageId> is the test package ID, edit test.csproj to include the following element directly inside the root <configuration> element: \r\n```\r\n<ItemGroup> \r\n<PackageReference Include=\"<PackageId>\" Version=\"1.0.0\" /> \r\n</ItemGroup> \r\n```\r\n13.\tRestore: \r\nOn Windows:  `..\\dotnet\\dotnet restore -v detailed `\r\n\r\n#### Expected\r\nThe “X.509” info (as below on Windows) will show after running command “dotnet restore”. \r\n`info : X.509 certificate chain validation will use the default trust store selected by .NET. `\r\n#### Actual\r\nNo “X.509” info shows\r\n#### Notes\r\nIt also reproes on MacBook.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24065699964","Type":"IssuesEvent","CreatedAt":"2022-09-17T13:01:27","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12040","RelatedDescription":"Closed issue \"[Bug]: [Cross-platform Sign Verify] No “X.509” info shows after running command “dotnet restore”\" (#12040) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.100-rc.2.22417.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Detailed repro steps\r\n1.\tExecute the [Pre-testing steps](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FManual%20tests%2FTest%20Cases&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344A15B-01B1-4828-AF4C-63FE53687F8A%2FPre-testing%20steps%7C6E4370C3-C593-4B99-ABD8-908D0F9E002B%2F%29).\r\n2.\tWhere <NotBefore> and <NotAfter> are datetime values that mark a 10-minute period starting now, create a short-lived test code signing certificate that will expire 10 minutes from now. \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net7.0 -- -nb \"<NotBefore>\" -na \"<NotAfter>\"  `\r\n3.\tWhere <CertificateFilePath> is the file path to the .cer or .pem file in step 1 and <VersionedSdkDirectoryPath> is the directory path for the versioned .NET SDK directory (e.g.:  ./dotnet/dotnet/sdk/7.0.100), add trust for the certificate: \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> `\r\n4.\tWhere <PackageId> is the test package ID and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\n               On Windows: ` .\\dotnet\\dotnet nuget sign .\\<PackageId>\\bin\\Debug\\<PackageId>.1.0.0.nupkg --overwrite --certificate-path <PfxFilePath> `\r\n5.\tVerify that 1 warning displays in the output from the previous step: \r\nwarn : NU3002: The '--timestamper' option was not provided. The signed package will not be timestamped. To learn more about this option, please visit https://docs.microsoft.com/dotnet/core/tools \r\n6.\tCreate a test project: \r\nOn Windows:  `mkdir .\\test && pushd .\\test && ..\\dotnet\\dotnet new console && copy ..\\NuGet.config.template .\\NuGet.config  `\r\n7.\tUpdate NuGet.config to reference the SHA-256 fingerprint of the short-lived certificate created in step 2. \r\n8.\tClear local NuGet resources and previous restore results: \r\nOn Windows:  `rd /s /q .\\obj && ..\\dotnet\\dotnet nuget locals --clear all `\r\n9.\tWhere <PackageId> is the test package ID, add a package reference to the test package: \r\n        On Windows: ` ..\\dotnet\\dotnet add package <PackageId> --version 1.0.0 `\r\n10.\tVerify the results of the previous step.  \r\n               On Windows, the operation failed with the following messages: \r\n```\r\na.\tinfo : X.509 certificate chain validation will use the default trust store selected by .NET. \r\nb.\terror: NU3037: Package '<PackageId> 1.0.0' from source 'E:\\testpass\\<PackageId>\\bin\\Debug': The author primary \r\n```signature validity period has expired. \r\n11.\tRepeat step 8. \r\n12. Where <PackageId> is the test package ID, edit test.csproj to include the following element directly inside the root <configuration> element: \r\n```\r\n<ItemGroup> \r\n<PackageReference Include=\"<PackageId>\" Version=\"1.0.0\" /> \r\n</ItemGroup> \r\n```\r\n13.\tRestore: \r\nOn Windows:  `..\\dotnet\\dotnet restore -v detailed `\r\n\r\n#### Expected\r\nThe “X.509” info (as below on Windows) will show after running command “dotnet restore”. \r\n`info : X.509 certificate chain validation will use the default trust store selected by .NET. `\r\n#### Actual\r\nNo “X.509” info shows\r\n#### Notes\r\nIt also reproes on MacBook.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24063500587","Type":"IssuesEvent","CreatedAt":"2022-09-17T06:11:35","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12099","RelatedDescription":"Opened issue \"[Bug]: Download count in details pane dissappears intermitently\" (#12099) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVS 2022 17.4 Preview\n\n### Worked before?\n\nYes\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Open any SDK style project in VS\r\n2. Right click on the project in Solution Explorer and select 'Manage NuGet Packages...'\r\n3. In NuGet PM UI, go to Browse tab\r\n4. Scroll in packages list and select a Package\r\n\r\n\r\n#### Expected\r\n\r\nShow download count in Details pane in packages from nuget.org\r\n\r\n#### Actual\r\n\r\nSometimes, download count is visible, sometimes, don't\r\n\r\n\r\n![package-with-downloads-count](https://user-images.githubusercontent.com/1192347/190843164-68fd4d35-7b8a-4680-9996-a685cb7f06ff.png)\r\n\r\n![package-without-downloads-count](https://user-images.githubusercontent.com/1192347/190843180-8007a294-1d73-4378-9e68-a9e7b305b8fd.png)\r\n\r\n![previous-package-without-downloads-count](https://user-images.githubusercontent.com/1192347/190843237-0545ca33-b9fa-47a0-829a-82d0173ed95a.png)\r\n\n\n### Verbose Logs\n\n```shell\nN/A. Screenshots attached\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2022-09-20T03:30:27.4473566Z","RunDurationInMilliseconds":1639}