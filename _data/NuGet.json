{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25143108526","Type":"PullRequestEvent","CreatedAt":"2022-11-10T01:29:57","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9305","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.11.09]RI of dev into main\" (#9305) at NuGet/NuGetGallery","RelatedBody":"Please verify changes."},{"Id":"25138118382","Type":"PullRequestEvent","CreatedAt":"2022-11-09T20:26:10","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9305","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.11.09]RI of dev into main\" (#9305) at NuGet/NuGetGallery","RelatedBody":"Please verify changes."},{"Id":"25131389517","Type":"IssuesEvent","CreatedAt":"2022-11-09T15:22:50","Actor":"harshsikhwal","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9304","RelatedDescription":"Opened issue \"[NuGet V3 API] Need Assembly version in packageEntries present in catalogEntry\" (#9304) at NuGet/NuGetGallery","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nCurrently there is no way to decode assembly version published in NuGet package.\r\n\r\nThere are cases sometimes where application crashes, due to a change of packages in one module, as the build system has its own assembly set defined. We are not able to resolve NuGet packages with the assembly version. Having a section about version would be an amazing add on.\n\n### Additional Context and Details\n\nI have recently published my NuGet package dependency tool: [NuGet-Visualizer](https://github.com/harshsikhwal/nuget-visualizer)\r\n\r\nThe reason I created this was to know about all the dependencies, for both NuGet packages as well as Solution/Projects. \r\n\r\nAlso, I would want to add the assembly version, so that anyone who scans for a NuGet package, can also see the related assembly information, which would be hugely helpful.\r\n\r\n"},{"Id":"25127884268","Type":"IssuesEvent","CreatedAt":"2022-11-09T13:09:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9292","RelatedDescription":"Closed issue \"[Question]. Are there plans for a .net core 6+ version of NuGet.Server?\" (#9292) at NuGet/NuGetGallery","RelatedBody":"Since .NET 4.5.2 is soon to be out of support is there a plan to support .NET Core?"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25143411347","Type":"IssuesEvent","CreatedAt":"2022-11-10T01:53:50","Actor":"reduckted","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12226","RelatedDescription":"Opened issue \"Visual Studio Package Manager does not respect EditorConfig settings when editing Directory.Packages.props\" (#12226) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nv17.4.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nHere is an example solution: [DirectoryPropsEditorConfig.zip](https://github.com/NuGet/Home/files/9976557/DirectoryPropsEditorConfig.zip)\r\n\r\n1. Open the solution in Visual Studio.\r\n2. Open the `Directory.Packages.props` file. It looks like this (note that it ends with a blank line):\r\n```xml\r\n<Project>\r\n    <PropertyGroup>\r\n        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <PackageVersion Include=\"Moq\" Version=\"4.18.1\" />\r\n    </ItemGroup>\r\n</Project>\r\n\r\n```\r\n3. Open NuGet Package Manager for the solution.\r\n4. Update `Moq` to 4.18.2.\r\n5. The `Directory.Packages.props` file now looks like this (note that it does not end with a blank line):\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Moq\" Version=\"4.18.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n6. Save the `Directory.Packages.props` file. \r\n7. The `Directory.Packages.props` file now uses four spaces for indentation and ends with a new line like it originally did.\r\n\r\nSince this file has to be manually edited for some things (for example, to add the `CentralPackageTransitivePinningEnabled` property or add `GlobalPackageReference` items), I expect that any tools that automatically edit the file will respect the EditorConfig settings.\n\n### Verbose Logs\n\n_No response_"},{"Id":"25142556756","Type":"PullRequestEvent","CreatedAt":"2022-11-10T00:52:27","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12225","RelatedDescription":"Opened pull request \"Add a bot to Close stale icebox issues, with internal-debugging label\" (#12225) at NuGet/Home","RelatedBody":"This is the first step for https://github.com/NuGet/Client.Engineering/issues/1784\r\nThe added rulesets are tested in bot-testing repo(but with different waiting time, to shorten the testing period). \r\nYou may check the 1-4 rulesets of bot-testing repo in UI at: https://portal.fabricbot.ms/bot/   and enter \"NuGet/bot-testing\" and load config.\r\n\r\nThe testing example is: https://github.com/NuGet/bot-testing/issues/22\r\n1. The searching tasks will check issues with `Status:Inactive` and `internal-debugging`, but without `Status:Excluded from icebox cleanup`, `Triage:NeedsTriageDiscussion`, `Icebox cleanup candidate`, to add label `Icebox cleanup candidate`, and a [comment ](https://github.com/NuGet/bot-testing/issues/22#issuecomment-1300463845)\r\n2. After 14 days, if there is no activity on issues with `Icebox cleanup candidate` and `internal-debugging`, and without `Triage:NeedsTriageDiscussion`, the issue will be closed, and a [comment ](https://github.com/NuGet/bot-testing/issues/22#issuecomment-1302408238) will be added to notify people we will lock it after 30 days without any activity.\r\n3. During the 14 days, if there is any comment on the issue, a `Triage:NeedsTriageDiscussion` label will be added. So it won't be closed anymore, until we manually remove the `Triage:NeedsTriageDiscussion` label. And this label will lead to a discussion in triaging meeting.\r\n4. After another 30 days, we lock the closed issue, and no comment could be added into this issue( as it's difficult to monitor all comments from closed issues) .\r\n\r\nNote: the `internal-debugging` label is to narrow down the affected issues for the first step, just in case if we find anything wrong."},{"Id":"25142151155","Type":"IssuesEvent","CreatedAt":"2022-11-10T00:27:07","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12224","RelatedDescription":"Opened issue \"Remove NUGET_ENABLE_ENHANCED_HTTP_RETRY flag\" (#12224) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### Current Behavior\n\nIn [NuGet 6.0.0](https://learn.microsoft.com/en-us/nuget/release-notes/nuget-6.0#retry--backoff-behavior) (VS 17.0, .NET 6 SDK 6.0.100), an [\"enhanced retry\" feature](https://github.com/NuGet/Home/issues/11027) was added, but was opt-in via setting the environment variable `NUGET_ENABLE_ENHANCED_HTTP_RETRY` to `true`. (PR https://github.com/NuGet/NuGet.Client/pull/4220)\r\n\r\nIn [NuGet 6.2.0](https://learn.microsoft.com/en-us/nuget/release-notes/nuget-6.2) this feature was changed to be [enabled by default](https://github.com/NuGet/Home/issues/11498). (PR https://github.com/NuGet/NuGet.Client/pull/4403)\r\n\r\nAt the time this issue was created, `NUGET_ENABLE_ENHANCED_HTTP_RETRY` has the following effects:\r\n\r\n|What|true (default)|false|\r\n|--|--|--|\r\n|Max retries|6|3|\r\n|Delay between retries (1)|`pow(2, retryAttempt) * 1` second(s), plus `random(0, 200)` milliseconds|fixed 200 milliseconds|\r\n\r\n(1) There are some code paths (what NuGet.Protocol.dll calls \"resources\") that tell NuGet's main retry handler to only make 1 attempt, and it handles its own retries. In this case, the main retry handler will always think that `retryAttempt` is 0, and therefore there will always be a (1 + random(0, 0.2)) second delay.\r\n\r\nNote also that all these values are configurable by other environment variables.\n\n### Desired Behavior\n\nThe proposal is to remove checking `NUGET_ENABLE_ENHANCED_HTTP_RETRY`. If you use this environment variable, and therefore would be impacted if NuGet no longer checks it to fall back to pre-enhanced retry behaviour, please reply to this issue and explain why it would impact you.\r\n\r\nThe other environment variables will remain, to provide customers with flexibility to tweak HTTP retries and delays as needed by your package sources. If you use any of these environment variables, we'd appreciate being given feedback, to see if it's worthwhile changing default values.\r\n\r\n\n\n### Additional Context\n\nIf you are concerned about the removal of `NUGET_ENABLE_ENHANCED_HTTP_RETRY` to fall back to pre-\"enhanced\" behaviour, please reply to this issue and explain why this would impact you."},{"Id":"25136575372","Type":"IssuesEvent","CreatedAt":"2022-11-09T19:07:23","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12217","RelatedDescription":"Closed issue \"VS 2022 - Unable to load the service index for source feed\" (#12217) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nMicrosoft Visual Studio Professional 2022 (64-bit) - Current Version 17.3.6\n\n### Worked before?\n\nSame version but stopped working on Friday afternoon\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n![image](https://user-images.githubusercontent.com/50449453/200262810-e7f92265-0008-4027-bd09-45c27e79fbb0.png)\r\nI can't restore my VS solution at all. Workaround for me is to use VS 2019 only.\n\n### Verbose Logs\n\n```shell\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Dispatchers.PositionsSnapshot\\FlowBank.DataHub.Dispatchers.PositionsSnapshot.csproj (in 58,61 sec).\r\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nNU1301: Unable to load the service index for source https://pkgs.dev.azure.com/FlowBank/_packaging/FlowBank/nuget/v3/index.json.\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Injectors.RealtimeRisk.Common.UnitTests\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Injectors.RealtimeRisk.Trades\\FlowBank.DataHub.Injectors.RealtimeRisk.Trades.csproj (in 18 ms).\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Injectors.RealtimeRisk.Common.UnitTests\\FlowBank.DataHub.Tests.Injectors.RealtimeRisk.Common.UnitTests.csproj (in 58,62 sec).\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Extractors.BocoreClient.UnitTests\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Extractors.BocoreClient.UnitTests\\FlowBank.DataHub.Tests.Extractors.BocoreClient.UnitTests.csproj (in 58,63 sec).\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Dispatchers.Exante.PositionsSnapshots.UnitTests\\obj\\project.assets.json\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Extractors.BocoreClient\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Dispatchers.Exante.PositionsSnapshots.UnitTests\\FlowBank.DataHub.Tests.Dispatchers.Exante.PositionsSnapshots.UnitTests.csproj (in 58,64 sec).\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Injectors.RealtimeRisk.ClientPositionsSnapshots.UnitTests\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Extractors.BocoreClient\\FlowBank.DataHub.Extractors.BocoreClient.csproj (in 48 ms).\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Tests\\FlowBank.DataHub.Tests.Injectors.RealtimeRisk.ClientPositionsSnapshots.UnitTests\\FlowBank.DataHub.Tests.Injectors.RealtimeRisk.ClientPositionsSnapshots.UnitTests.csproj (in 58,65 sec).\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Injectors.RealtimeRisk.ClientPositionsSnapshots\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Injectors.RealtimeRisk.ClientPositionsSnapshots\\FlowBank.DataHub.Injectors.RealtimeRisk.ClientPositionsSnapshots.csproj (in 51,44 sec).\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Extractors.SymbolDb\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\Services\\FlowBank.DataHub.Extractors.SymbolDb\\FlowBank.DataHub.Extractors.SymbolDb.csproj (in 40,23 sec).\r\nWriting assets file to disk. Path: C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\_AppHosts\\WindowsService\\FlowBank.DataHub.Services.Host\\obj\\project.assets.json\r\nFailed to restore C:\\Users\\mkopac\\source\\repos\\DataHub Services\\Product\\_AppHosts\\WindowsService\\FlowBank.DataHub.Services.Host\\FlowBank.DataHub.Services.Host.csproj (in 1,17 min).\r\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\r\nTime Elapsed: 00:01:10.1743589\r\n========== Finished ==========\n```\n"},{"Id":"25136339366","Type":"IssuesEvent","CreatedAt":"2022-11-09T18:55:54","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8407","RelatedDescription":"Closed issue \"Issue saving settings in Visual Studio - adding a source throws an exception\" (#8407) at NuGet/Home","RelatedBody":"Root issue : https://developercommunity.visualstudio.com/content/problem/640886/failed-to-apply-nuget-package-manager-settings-vs.html\r\n\r\nThe customer has not provided additional feedback so it's a bit more difficult to investigate.\r\n\r\nRoot cause is: \r\n\r\n```xml\r\n<entry>\r\n    <record>917</record>\r\n    <time>2019/07/11 05:17:42.112</time>\r\n    <type>Error</type>\r\n    <source>NuGet Package Manager</source>\r\n    <description>System.ArgumentException: An item with the same key has already been added.&#x000D;&#x000A;   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)&#x000D;&#x000A;   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)&#x000D;&#x000A;   at System.Linq.Enumerable.ToDictionary[TSource,TKey,TElement](IEnumerable`1 source, Func`2 keySelector, Func`2 elementSelector, IEqualityComparer`1 comparer)&#x000D;&#x000A;   at NuGet.Configuration.PackageSourceProvider.SavePackageSources(IEnumerable`1 sources)&#x000D;&#x000A;   at NuGet.Options.PackageSourcesOptionsControl.ApplyChangedSettings()</description>\r\n  </entry>\r\n  <entry>\r\n    <record>918</record>\r\n    <time>2019/07/11 05:17:44.430</time>\r\n    <type>Error</type>\r\n    <source>NuGet Package Manager</source>\r\n    <description>System.ArgumentException: An item with the same key has already been added.&#x000D;&#x000A;   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)&#x000D;&#x000A;   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)&#x000D;&#x000A;   at System.Linq.Enumerable.ToDictionary[TSource,TKey,TElement](IEnumerable`1 source, Func`2 keySelector, Func`2 elementSelector, IEqualityComparer`1 comparer)&#x000D;&#x000A;   at NuGet.Configuration.PackageSourceProvider.SavePackageSources(IEnumerable`1 sources)&#x000D;&#x000A;   at NuGet.Options.PackageSourcesOptionsControl.ApplyChangedSettings()</description>\r\n  </entry>\r\n  <entry>\r\n    <record>919</record>\r\n    <time>2019/07/11 05:20:39.330</time>\r\n    <type>Error</type>\r\n    <source>NuGet Package Manager</source>\r\n    <description>System.ArgumentException: An item with the same key has already been added.&#x000D;&#x000A;   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)&#x000D;&#x000A;   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)&#x000D;&#x000A;   at System.Linq.Enumerable.ToDictionary[TSource,TKey,TElement](IEnumerable`1 source, Func`2 keySelector, Func`2 elementSelector, IEqualityComparer`1 comparer)&#x000D;&#x000A;   at NuGet.Configuration.PackageSourceProvider.SavePackageSources(IEnumerable`1 sources)&#x000D;&#x000A;   at NuGet.Options.PackageSourcesOptionsControl.ApplyChangedSettings()</description>\r\n  </entry>\r\n```\r\n\r\n![PackageSourcesIssue (1)](https://user-images.githubusercontent.com/2878341/62170361-faff5780-b2df-11e9-897f-df361fc292bc.png)\r\n"},{"Id":"25120873601","Type":"IssuesEvent","CreatedAt":"2022-11-09T08:01:24","Actor":"Y-Theta","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12223","RelatedDescription":"Opened issue \"Target Segment in . targets file in buildTransitive not work\" (#12223) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n nuget.exe 6.3.0.131\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\ncreate a package with struct like  \r\nmctech.lib.desktopcapture\r\n   -1.4.2\r\n        -buildTransitive\r\n             -net47\r\n                   -McTech.Lib.DesktopCapture.targets\r\n\r\nand in the targets \r\nhave a <target> \r\n```\r\n   <Target Name=\"T2\"\r\n        AfterTargets=\"Build\">\r\n        <Message Text=\"copy capture tool complate to '$(OutputPath)tools\\capture'\"\r\n            Importance=\"high\" />\r\n    </Target>\r\n```\r\ncreate a classlibrary project using netframework 4.7 named A\r\ncreate a winform project using netframework 4.7 named B\r\nin Project B make a project reference to A \r\nin Project A make a PackageReference to the package\r\n\r\nwhen rebuild Project B \r\nonly project A output has the message \r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"25115503588","Type":"IssuesEvent","CreatedAt":"2022-11-09T01:21:23","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12181","RelatedDescription":"Closed issue \"Environment variable `NUGET_CLI_LANGUAGE` to control language of nuget.exe command output\" (#12181) at NuGet/Home","RelatedBody":"To ease localization testing, a new environment variable `NUGET_CLI_LANGUAGE` is proposed.\r\n\r\nThis variable is inspired by `DOTNET_CLI_UI_LANGUAGE` in `dotnet.exe`.\r\n\r\nSetting this variable to a valid CultureInfo name, such as `en-US` or `fr-FR`, it will set that cultureInfo as the default to all threads running in nuget.exe; this will cause changing the language of all output messages of `nuget.exe`. \r\n\r\nUnlike dotnet.exe, setting this variable will not propagate all changes to nuget.exe child processes, if any. "},{"Id":"25111890740","Type":"IssuesEvent","CreatedAt":"2022-11-08T21:18:53","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10301","RelatedDescription":"Closed issue \"Design for analyzers as an asset in PackageReference\" (#10301) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/6279"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2022-11-10T03:31:54.8881439Z","RunDurationInMilliseconds":1679}