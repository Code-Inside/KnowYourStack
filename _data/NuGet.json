{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37926955044","Type":"PullRequestEvent","CreatedAt":"2024-04-29T18:19:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9938","RelatedDescription":"Merged pull request \"Add relist and deprecate to unlist scope\" (#9938) at NuGet/NuGetGallery","RelatedBody":"The existing unlist API key scope already has the relist and deprecate capabilities. This updates the supporting text used on the API keys page to mention these capabilities.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/8873.\r\n\r\nSummary of changes:\r\n- Add relist to the API key label since it's always been there\r\n- Make wording of package vs. package versions consistent (unlist/relist/deprecate is done at the version level)\r\n- Show deprecate capability on the API key if the user is in the flight\r\n- Delete some unused string in `src/NuGetGallery/Strings.resx`\r\n- Fix web.config indentation for binding redirects\r\n\r\n### Before\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/579b4830-f80d-4426-88e7-fbdb29c82cc8)\r\n\r\n### After\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/10942375-cc71-418b-905c-b88e204b50e2)\r\n"},{"Id":"37926904472","Type":"PullRequestEvent","CreatedAt":"2024-04-29T18:17:25","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9904","RelatedDescription":"Merged pull request \"Fixing JS exceptions on profiles page\" (#9904) at NuGet/NuGetGallery","RelatedBody":"We're seeing some javascript exceptions for the profiles page. We use the same scripts file on the search page and the profiles page, and need to deal with null values properly to avoid exceptions. This should be fixed now."},{"Id":"37917998881","Type":"PullRequestEvent","CreatedAt":"2024-04-29T14:11:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9938","RelatedDescription":"Opened pull request \"Add relist and deprecate to unlist scope\" (#9938) at NuGet/NuGetGallery","RelatedBody":"The existing unlist API key scope already has the relist and deprecate capabilities. This updates the supporting text used on the API keys page to mention these capabilities.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/8873.\r\n\r\nSummary of changes:\r\n- Add relist to the API key label since it's always been there\r\n- Make wording of package vs. package versions consistent (unlist/relist/deprecate is done at the version level)\r\n- Show deprecate capability on the API key if the user is in the flight\r\n- Delete some unused string in `src/NuGetGallery/Strings.resx`\r\n\r\n### Before\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/579b4830-f80d-4426-88e7-fbdb29c82cc8)\r\n\r\n### After\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/10942375-cc71-418b-905c-b88e204b50e2)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37935864853","Type":"IssuesEvent","CreatedAt":"2024-04-30T00:09:01","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13420","RelatedDescription":"Opened issue \"PackageSearchMetadataContextInfo should contain serializable data\" (#13420) at NuGet/Home","RelatedBody":"Follow-up on my change to use a service to calculate Known Owners in this Context class. I now understand this is actually a DTO that theoretically could be serialized and used in a service.\r\n\r\nDiscussion: https://github.com/NuGet/NuGet.Client/pull/5766#discussion_r1583830427"},{"Id":"37932842957","Type":"IssuesEvent","CreatedAt":"2024-04-29T21:39:38","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12501","RelatedDescription":"Closed issue \"Swap authors for owners in Visual Studio Package Manager UI\" (#12501) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\r\n\r\nVisual Studio Package Management UI\r\n\r\n### The Elevator Pitch\r\n\r\nCurrently in the Visual Studio Package Manager UI, we show the `authors` field which is a comma delimited list that is commonly used to help a developer know who \"authored\" the package.\r\n\r\nThis concept is a bit outdated as NuGet.org provides a `owners` field in the search service that provides an **up-to-date maintainer list that can be used as a primary and if a server doesn't provide it, can fallback on `authors`**. This is not to be confused with the local [`owners` nuspec field](https://learn.microsoft.com/en-us/nuget/reference/nuspec#owners).\r\n\r\nhttps://learn.microsoft.com/en-us/nuget/api/search-query-service-resource#search-result\r\n\r\nSome further details as pointed out by @zivkan might be that we would only display owners for sources that support it and are fetched from the remote and ignore some nuspec metadata in the global packages folder. \r\n\r\nThis will help reduce confusion of a field that is commonly used to impersonate notable entities or have changed in ownership in the years since it was published where the original author is still listed.\r\n\r\n![MicrosoftTeams-image (3)](https://user-images.githubusercontent.com/1288848/226624059-925af6f6-1422-4b4e-a070-7bb8283163fe.png)\r\n\r\nRelated: https://github.com/NuGet/Home/issues/10260\r\n\r\n### Additional Context and Details\r\n\r\n_No response_"},{"Id":"37930796706","Type":"IssuesEvent","CreatedAt":"2024-04-29T20:24:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13411","RelatedDescription":"Closed issue \"[Bug Bash] An error occurs when deleting the package and building solution at the second time after checking the “Automatically check for missing packages during build in Visual Studio” in Options dialog for UWP project\" (#13411) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.11.0.30\r\n\r\n### Worked before?\r\n\r\nIt is not a regression since it reproes on both D16.11\\34601.136 with implicit NuGet Client 5.11.6.4 and D17.9\\34601.282 with implicit NuGet Client 6.9.1.3. \r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a C# Blank App (Universal Windows) project in VS and open the PM UI or PMC window. \r\n\r\n2. Install a package (e.g. log4net) through PM UI. \r\n\r\n3. Click the settings button (gear button) on PM UI or PMC window. \r\n\r\n4. Click the NuGet Package Manager->General in the opened “Options” window. \r\n\r\n5. Check the “Automatically check for missing packages during build in Visual Studio” and click OK button. \r\n\r\n6. Go to the path “C:\\Users\\[username]\\.nuget\\packages” and delete the installed package “log4net”. \r\n\r\n7. Go back to VS and build the solution. \r\n\r\n8. Verify the package will be restored successfully to the path in step6 and there will be no error and warning in the Error List window in step7. \r\n\r\n9. Re-delete package “log4net” and build the solution. \r\n\r\n#### Expected:    \r\n\r\nThe package “log4net” is restored successfully again to the path “C:\\Users\\[username]\\.nuget\\packages” and there will be no error or warning in the Error List window. \r\n\r\n#### Actual: \r\n\r\nThe following error occurs, and the package has not been restored back.   \r\n![image](https://github.com/NuGet/Home/assets/84695155/fc9021bb-ee8b-451e-986c-ce1b5d5d169f)\r\n#### Notes:     \r\n\r\n1. The repro rate is 100%.     \r\n\r\n2. It doesn’t repro for non-SDK based projects. \r\n\r\n3. The error will disappear, and the package will be restored back after rebuilding solution. \r\n\r\n4. The error doesn’t disappear and the package doesn’t restored back according to error tips to run restore package. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"37929243534","Type":"IssuesEvent","CreatedAt":"2024-04-29T19:33:03","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13334","RelatedDescription":"Closed issue \"\"nuget install -ExcludeVersion\" inaccurate reports \"already installed\" when trying to install older version\" (#13334) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\n6.9.1.3\r\n\r\n### Repro Steps & Context\r\n\r\nAll command use `-ExcludeVersion` \r\n\r\n1. Install a package such as Moq 4.8.0 `nuget install -ExcludeVersion \"Moq\" -Version \"4.8.0\"`. Installation succeeds.\r\n2. Install a later version of that package such as Moq 4.9.0 `nuget install -ExcludeVersion \"Moq\" -Version \"4.9.0\"`. Installation suceeds.\r\n3. Try to install an _older_ version such as Moq 4.7.0 `nuget install -ExcludeVersion \"Moq\" -Version \"4.7.0\"`.\r\n\r\nExpected:\r\n\r\nYou get a error message such as:\r\n\r\n> Unable to install package \"Moq.4.7.0\" because package \"Moq.4.9.0\" is already installed.\r\n\r\nWhat actually happens: you get an inaccurate message:\r\n\r\n> Package \"Moq.4.7.0\" is already installed.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\n>nuget install -ExcludeVersion \"Moq\" -Version \"4.8.0\"\r\nFeeds used:\r\n  C:\\Users\\me\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nAttempting to gather dependency information for package 'Moq.4.8.0' with respect to project 'c:\\code\\nuget-playground', targeting 'Any,Version=v0.0'\r\nGathering dependency information took 440 ms\r\nAttempting to resolve dependencies for package 'Moq.4.8.0' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'Moq.4.8.0'\r\nResolved actions to install package 'Moq.4.8.0'\r\nRetrieving package 'Castle.Core 4.2.1' from 'C:\\Users\\me\\.nuget\\packages\\'.\r\nRetrieving package 'Moq 4.8.0' from 'nuget.org'.\r\nRetrieving package 'System.Threading.Tasks.Extensions 4.4.0' from 'nuget.org'.\r\nAdding package 'Castle.Core.4.2.1' to folder 'c:\\code\\nuget-playground'\r\n  GET https://api.nuget.org/v3-flatcontainer/system.threading.tasks.extensions/4.4.0/system.threading.tasks.extensions.4.4.0.nupkg\r\n  GET https://api.nuget.org/v3-flatcontainer/moq/4.8.0/moq.4.8.0.nupkg\r\nAdded package 'Castle.Core.4.2.1' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Castle.Core 4.2.1' to c:\\code\\nuget-playground\r\n  OK https://api.nuget.org/v3-flatcontainer/moq/4.8.0/moq.4.8.0.nupkg 77ms\r\n  OK https://api.nuget.org/v3-flatcontainer/system.threading.tasks.extensions/4.4.0/system.threading.tasks.extensions.4.4.0.nupkg 81ms\r\nInstalled System.Threading.Tasks.Extensions 4.4.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\system.threading.tasks.extensions\\4.4.0 with content hash SPKfFGbpQsK5Srz2Kq3URgvC90yoOyBE8H1quDA2+MAJ2HAzFmV3biOgPv2Ck3mPAvdKngo3QHi2BNwUQDRVvA==.\r\nAdding package 'System.Threading.Tasks.Extensions.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nInstalled Moq 4.8.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\moq\\4.8.0 with content hash VuChZExXSmTs24aW72Fy3IeQvgD0GgZlr4wFBnXDWj1CHlz4kAYEegIU3dXmJNYMhcJU/L0QAU9CF5Or5eVlwA==.\r\nAdded package 'System.Threading.Tasks.Extensions.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'System.Threading.Tasks.Extensions 4.4.0' to c:\\code\\nuget-playground\r\nAdding package 'Moq.4.8.0' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'Moq.4.8.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Moq 4.8.0' to c:\\code\\nuget-playground\r\nExecuting nuget actions took 290 ms\r\n\r\n>nuget install -ExcludeVersion \"Moq\" -Version \"4.9.0\"\r\nFeeds used:\r\n  C:\\Users\\me\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\n\r\n\r\nAttempting to gather dependency information for package 'Moq.4.9.0' with respect to project 'c:\\code\\nuget-playground', targeting 'Any,Version=v0.0'\r\nGathering dependency information took 137 ms\r\nAttempting to resolve dependencies for package 'Moq.4.9.0' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'Moq.4.9.0'\r\nResolved actions to install package 'Moq.4.9.0'\r\nRetrieving package 'Castle.Core 4.3.1' from 'nuget.org'.\r\nRetrieving package 'Moq 4.9.0' from 'nuget.org'.\r\nRetrieving package 'System.ValueTuple 4.4.0' from 'nuget.org'.\r\n  GET https://api.nuget.org/v3-flatcontainer/system.valuetuple/4.4.0/system.valuetuple.4.4.0.nupkg\r\n  GET https://api.nuget.org/v3-flatcontainer/castle.core/4.3.1/castle.core.4.3.1.nupkg\r\n  GET https://api.nuget.org/v3-flatcontainer/moq/4.9.0/moq.4.9.0.nupkg\r\n  OK https://api.nuget.org/v3-flatcontainer/moq/4.9.0/moq.4.9.0.nupkg 79ms\r\n  OK https://api.nuget.org/v3-flatcontainer/system.valuetuple/4.4.0/system.valuetuple.4.4.0.nupkg 95ms\r\n  OK https://api.nuget.org/v3-flatcontainer/castle.core/4.3.1/castle.core.4.3.1.nupkg 118ms\r\nInstalled Moq 4.9.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\moq\\4.9.0 with content hash QoAFgbywBhbWdxs4vEJ/OWTFZCKaTSK25+PP3KTyIhxKN1byGx8sO0RjFY1XCDuurIDdBg4TcA6TsJxGVSo2Sw==.\r\nInstalled System.ValueTuple 4.4.0 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\system.valuetuple\\4.4.0 with content hash BahUww/+mdP4ARCAh2RQhQTg13wYLVrBb9SYVgW8ZlrwjraGCXHGjo0oIiUfZ34LUZkMMR+RAzR7dEY4S1HeQQ==.\r\nInstalled Castle.Core 4.3.1 from https://api.nuget.org/v3/index.json to C:\\Users\\me\\.nuget\\packages\\castle.core\\4.3.1 with content hash 8Y/eTr6GTElAGV7eAmJuhfLhGdFpNvaNrQ9UQYDScziLmX+/BLGM+9eQr0IcdNDcPN0ADmbtwT6MgecGKy4obw==.\r\nSuccessfully uninstalled 'Castle.Core.4.2.1' from c:\\code\\nuget-playground\r\nSuccessfully uninstalled 'Moq.4.8.0' from c:\\code\\nuget-playground\r\nAdding package 'Castle.Core.4.3.1' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'Castle.Core.4.3.1' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Castle.Core 4.3.1' to c:\\code\\nuget-playground\r\nAdding package 'System.ValueTuple.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'System.ValueTuple.4.4.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'System.ValueTuple 4.4.0' to c:\\code\\nuget-playground\r\nAdding package 'Moq.4.9.0' to folder 'c:\\code\\nuget-playground'\r\nAdded package 'Moq.4.9.0' to folder 'c:\\code\\nuget-playground'\r\nSuccessfully installed 'Moq 4.9.0' to c:\\code\\nuget-playground\r\nExecuting nuget actions took 999 ms\r\n\r\n>nuget install -ExcludeVersion \"Moq\" -Version \"4.7.0\"\r\nFeeds used:\r\n  C:\\Users\\me\\.nuget\\packages\\\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nPackage \"Moq.4.7.0\" is already installed.\r\n```\r\n"},{"Id":"37904032263","Type":"IssuesEvent","CreatedAt":"2024-04-29T07:49:40","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13419","RelatedDescription":"Closed issue \"There is an error when patching .NET SDK with NuGet Dev latest build\" (#13419) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nEntropy\n\n### Worked before?\n\nIt’s not a regression since the patch tool was updated recently.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n     .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 8.0.3xx -Quality daily\r\n#### Expected Result: \r\nThe patching is successful with no error.\r\n#### Actual Result:\r\nThere is an error saying “A parameter cannot be found that matches parameter name ‘or’” as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ee9e1a69-a371-4d18-b528-61f5e503633a)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It also repro with “-SDKChannel 9.0.1xx” in the step4.But the error is different as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ca67cb9c-79dc-4c72-8ced-0a0c12bda8c3)\r\n3.It blocked all the test cases which try to run the command ‘dotnet.exe’ in the PatchedSDK folder with the error as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ed5cec48-780b-46b4-9080-70ee56656389)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"37886430571","Type":"IssuesEvent","CreatedAt":"2024-04-28T07:45:08","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13419","RelatedDescription":"Opened issue \"There is an error when patching .NET SDK with NuGet Dev latest build\" (#13419) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nEntropy\n\n### Worked before?\n\nIt’s not a regression since the patch tool was updated recently.\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n     .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 8.0.3xx -Quality daily\r\n#### Expected Result: \r\nThe patching is successful with no error.\r\n#### Actual Result:\r\nThere is an error saying “A parameter cannot be found that matches parameter name ‘or’” as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ee9e1a69-a371-4d18-b528-61f5e503633a)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It also repro with “-SDKChannel 9.0.1xx” in the step4.But the error is different as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ca67cb9c-79dc-4c72-8ced-0a0c12bda8c3)\r\n3.It blocked all the test cases which try to run the command ‘dotnet.exe’ in the PatchedSDK folder with the error as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/ed5cec48-780b-46b4-9080-70ee56656389)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"37872390922","Type":"IssuesEvent","CreatedAt":"2024-04-27T04:25:51","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13409","RelatedDescription":"Closed issue \"Consume the OwnerDetailsUriTemplate resource\" (#13409) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, dotnet.exe, NuGet SDK\r\n\r\n### Current Behavior\r\n\r\nThe OwnerDetailsUriTemplate resource is a new feature being added to NuGet.\r\n\r\n### Desired Behavior\r\n\r\nThe OwnerDetailsUriTemplate resource is consumed by NuGet.Protocol.\r\n\r\n### Additional Context\r\n\r\nPart of https://github.com/NuGet/Home/issues/12501\r\nResource documented in https://github.com/NuGet/docs.microsoft.com-nuget/pull/3282\r\nResource added to nuget.org service index in https://github.com/NuGet/NuGet.Services.Index/pull/235/files"},{"Id":"37868556314","Type":"PullRequestEvent","CreatedAt":"2024-04-26T22:15:20","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/13242","RelatedDescription":"Merged pull request \"Support for NuGet authentication plugins deployed via .NET tools\" (#13242) at NuGet/Home","RelatedBody":"Related - https://github.com/NuGet/Home/issues/12567\r\n\r\n[Rendered Spec](https://github.com/NuGet/Home/blob/dev-kpms-credentialproviders-.nettools/accepted/2024/support-nuget-authentication-plugins-dotnet-tools.md)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-30T03:30:17.3515453Z","RunDurationInMilliseconds":1083}