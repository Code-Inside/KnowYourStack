{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25114590805","Type":"PullRequestEvent","CreatedAt":"2022-11-09T00:14:03","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9303","RelatedDescription":"Opened pull request \"[A11y] Correct role attribute for package lists\" (#9303) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9301\r\n\r\n**Problem:**\r\n \r\nOn the Profiles page and the List Packages page, the lists of packages were flagged for not having the appropriate role on the individual list items. These were already marked with role=\"listitem\" and the enclosing div was marked with role=\"list\", so I'm unsure why this was flagged. However, we can bypass the need for these manual role attributes by using `<ul>` and `<li>` tags directly instead.\r\n\r\n**Previously,**\r\n![image](https://user-images.githubusercontent.com/82980589/200703988-0ba5e6c3-e113-492c-a6ef-1f0823520af8.png)\r\n\r\n**Fix:**\r\n\r\nThese package lists now use `<ul>` and `<li>` tags, which do not require additional role attributes. I also had to remove the bullet and left padding from these package list `<ul>`s.\r\n\r\n**After the changes,**\r\n![image](https://user-images.githubusercontent.com/82980589/200704058-7c7f400a-3ffe-420b-8ddc-94f21097d35b.png)\r\n"},{"Id":"25112005123","Type":"PullRequestEvent","CreatedAt":"2022-11-08T21:25:06","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9302","RelatedDescription":"Merged pull request \"Swap Package Manager and dotnet CLI tabs in display package UI\" (#9302) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/9288\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/200451702-1bddaa91-e0a4-4bc6-bb10-94909a01df40.png)\r\n\r\n@clairernovotny, I'd like your thoughts on this before merging."},{"Id":"25087306644","Type":"PullRequestEvent","CreatedAt":"2022-11-08T01:31:26","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9302","RelatedDescription":"Opened pull request \"Swap Package manager and dotnet CLI tabs in display package UI\" (#9302) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/9288\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/200451702-1bddaa91-e0a4-4bc6-bb10-94909a01df40.png)\r\n\r\n@clairernovotny, I'd like your thoughts on this before merging."},{"Id":"25085354605","Type":"PullRequestEvent","CreatedAt":"2022-11-07T23:16:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9298","RelatedDescription":"Merged pull request \"Change VerifyGitHubVulnerabilities into a job\" (#9298) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/4512\r\n\r\nThe job will run every 6 hours and report a metric which we will monitor on."},{"Id":"25084465175","Type":"IssuesEvent","CreatedAt":"2022-11-07T22:17:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9072","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The border can be thinner when clicking a link\" (#9072) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen clicking the link in nuget.org, it shows a wide border and sometimes covers the link text.\r\nWill it be better to make the border thinner?\r\n\r\n\n\n### Repro Steps\n\n1. Go to nuget.org;\r\n2. Click any link and you will see a wide border.\n\n### Expected Behavior\n\n A thinner border will be better.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/41028779/159977880-dde1ca6c-0b84-43ce-9986-c704211bd00f.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"25083755133","Type":"IssuesEvent","CreatedAt":"2022-11-07T21:42:22","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9301","RelatedDescription":"Opened issue \"[A11y]Ensures role attribute has an appropriate value for the element\" (#9301) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1656381\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org/profiles/Blazor.Components\r\nWindows version: Windows 10\r\nChromiumEdge Version: 105.0.1343.42 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nPlease do not close this bug. This bug should only be closed by TCS, C+AI Accessibility tester after verification of the fix\r\nLaunch the application URL: https://www.nuget.org/profiles/Blazor.Components\r\nRun the Accessibility insights for web \r\n\r\nIssue: \r\nEnsures role attribute has an appropriate value for the element (aria-allowed-role - https://dequeuniversity.com/rules/axe/4.4/aria-allowed-role?application=msftAI)\r\n\r\nTarget application: NuGet Gallery | Blazor.Components - https://www.nuget.org/profiles/Blazor.Components\r\n\r\nElement path: .package[role=\"listitem\"]:nth-child(1)\r\n\r\nSnippet: <article class=\"package\" role=\"listitem\">\r\n\r\nHow to fix:\r\nFix any of the following:\r\n  ARIA role listitem is not allowed for given element\r\n\r\nEnvironment: Microsoft Edge version 106.0.1370.52\r\n\r\nNote:\r\nThis also shows up in many places, and should be fixed in all locations with a template fix. Fix should hopefully be as simple as updating to a different element that allows listitem role."},{"Id":"25083707627","Type":"IssuesEvent","CreatedAt":"2022-11-07T21:39:52","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9300","RelatedDescription":"Opened issue \"[A11y]Flags elements whose role is none or presentation and which cause the role conflict resolution to trigger.\" (#9300) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1656375\r\n\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org/account/ForgotPassword\r\nWindows version: Windows 10\r\nChromiumEdge Version: 105.0.1343.42 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nPlease do not close this bug. This bug should only be closed by TCS, C+AI Accessibility tester after verification of the fix\r\nLaunch the application URL: https://www.nuget.org/account/ForgotPassword\r\nRun the Accessibility insights for web \r\nIssue: \r\nFlags elements whose role is none or presentation and which cause the role conflict resolution to trigger. (presentation-role-conflict - https://dequeuniversity.com/rules/axe/4.4/presentation-role-conflict?application=msftAI)\r\n\r\nTarget application: NuGet Gallery | Forgot Password - https://www.nuget.org/account/ForgotPassword\r\n\r\nElement path: iframe[title=\"reCAPTCHA\"]\r\n\r\nSnippet: <iframe title=\"reCAPTCHA\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6Lf4P10UAAAAAPp-L5yBSChLOGUdU4ci187t7JCv&amp;co=aHR0cHM6Ly93d3cubnVnZXQub3JnOjQ0Mw..&amp;hl=en&amp;v=vP4jQKq0YJFzU6e21-BGy3GP&amp;size=invisible&amp;cb=ioqna7bs53lh\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-le5htsccnaz0\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" tabindex=\"1\">\r\n\r\nSimilar issue observed in following scenarios:\r\nhttps://www.nuget.org/packages/Microsoft.Azure.Services.AppAuthentication/1.6.1/ReportAbuse\r\n\r\nHow to fix:\r\nFix all of the following:\r\n  Element is not focusable.\r\n\r\nEnvironment: Microsoft Edge version 106.0.1370.52\r\n\r\nNotes:\r\nThis appears to complain about the fix we made for tab ordering with the recaptcha iFrame. We should discuss what the proper tab ordering is here."},{"Id":"25083673513","Type":"IssuesEvent","CreatedAt":"2022-11-07T21:37:58","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9299","RelatedDescription":"Opened issue \"[A11y]Ensures aria-hidden elements do not contain focusable elements\" (#9299) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1656379\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\n#URL: https://www.nuget.org/packages/MySqlConnector\r\nWindows version: Windows 10\r\nChromiumEdge Version: 105.0.1343.42 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nPlease do not close this bug. This bug should only be closed by TCS, C+AI Accessibility tester after verification of the fix\r\nLaunch the application URL: https://www.nuget.org/packages/MySqlConnector\r\nRun the Accessibility insights for web \r\n\r\nIssue: \r\nEnsures aria-hidden elements do not contain focusable elements (aria-hidden-focus - https://accessibilityinsights.io/info-examples/web/aria-hidden-focus)\r\n\r\nTarget application: NuGet Gallery | MySqlConnector 2.1.13 - https://www.nuget.org/packages/MySqlConnector\r\n\r\nElement path: .prefix-reserve-title\r\n\r\nSnippet: <span class=\"prefix-reserve-title\" aria-hidden=\"true\">\r\n\r\nHow to fix:\r\nFix all of the following:\r\n  Focusable content should have tabindex='-1' or be removed from the DOM\r\n\r\nEnvironment: Microsoft Edge version 106.0.1370.52\r\n\r\nNote:\r\nThis appears to show up on many pages. As such, fixing it in the template should suffice to address all instances of this."},{"Id":"25083308613","Type":"IssuesEvent","CreatedAt":"2022-11-07T21:18:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9282","RelatedDescription":"Closed issue \"Problem reaching nuget urls from Azure virtual machines.\" (#9282) at NuGet/NuGetGallery","RelatedBody":"We started to have a problem a week ago where we cannot access the following URL **https://azuresearch-ussc.nuget.org** or the full URL **https://azuresearch-ussc.nuget.org/query?q=&skip=0&take=26&prerelease=false&supportedFramework=net6.0&semVerLevel=2.0.0** when using Visual Studio 2022 ONLY when inside any of our Azure virtual machines (servers). We did plenty of troubleshooting and found that we can only resolve this URL when we use Azure's DNS servers (example: 168.63.129.16). Any other DNS servers like Google or Level 3 do not resolve when inside Azure. However when we test on our local workstations or servers (outside of Azure) they work perfectly fine. We aren't doing anything fancy in Azure, we're running IaaS, so we are essentially using Azure for hosting our servers only. All the obvious troubleshooting has been complete i.e. firewall testing/disabling, NSG firewall rules in Azure are good, DNS, rebooting, etc etc.\r\n\r\nThe problem first started when we tried to add a Microsoft.Azure package to a .NET project in Visual Studio 2022. VS could not reach the **azuresearch-ussc.nuget.org** url. Not only were we unable to reach the azure url, all nuget package adds and updates began failing. We discovered that the VS nuget URL, **https://api.nuget.org/v3/index.json**, references **azuresearch-ussc.nuget.org** in the index.json file as indicated below:\r\n\r\n{\r\n  \"version\": \"3.0.0\",\r\n  \"resources\": [\r\n    {\r\n      \"@id\": \"https://azuresearch-usnc.nuget.org/query\",\r\n      \"@type\": \"SearchQueryService\",\r\n      \"comment\": \"Query endpoint of NuGet Search service (primary)\"\r\n    },\r\n    {\r\n      \"@id\": \"https://azuresearch-ussc.nuget.org/query\",\r\n      \"@type\": \"SearchQueryService\",\r\n      \"comment\": \"Query endpoint of NuGet Search service (secondary)\"\r\n    },\r\n    {\r\n      \"@id\": \"https://azuresearch-usnc.nuget.org/autocomplete\",\r\n      \"@type\": \"SearchAutocompleteService\",\r\n      \"comment\": \"Autocomplete endpoint of NuGet Search service (primary)\"\r\n    },\r\n    {\r\n      \"@id\": \"https://azuresearch-ussc.nuget.org/autocomplete\",\r\n      \"@type\": \"SearchAutocompleteService\",\r\n      \"comment\": \"Autocomplete endpoint of NuGet Search service (secondary)\"\r\n    },\r\n    {\r\n      \"@id\": \"https://azuresearch-usnc.nuget.org/\",\r\n      \"@type\": \"SearchGalleryQueryService/3.0.0-rc\",\r\n      \"comment\": \"Azure Website based Search Service used by Gallery (primary)\"\r\n    },\r\n    {\r\n      \"@id\": \"https://azuresearch-ussc.nuget.org/\",\r\n      \"@type\": \"SearchGalleryQueryService/3.0.0-rc\",\r\n      \"comment\": \"Azure Website based Search Service used by Gallery (secondary)\"\r\n    },\r\n    \r\nAny insights would be appreciated.\r\n\r\nThank You"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25115503588","Type":"IssuesEvent","CreatedAt":"2022-11-09T01:21:23","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12181","RelatedDescription":"Closed issue \"Environment variable `NUGET_CLI_LANGUAGE` to control language of nuget.exe command output\" (#12181) at NuGet/Home","RelatedBody":"To ease localization testing, a new environment variable `NUGET_CLI_LANGUAGE` is proposed.\r\n\r\nThis variable is inspired by `DOTNET_CLI_UI_LANGUAGE` in `dotnet.exe`.\r\n\r\nSetting this variable to a valid CultureInfo name, such as `en-US` or `fr-FR`, it will set that cultureInfo as the default to all threads running in nuget.exe; this will cause changing the language of all output messages of `nuget.exe`. \r\n\r\nUnlike dotnet.exe, setting this variable will not propagate all changes to nuget.exe child processes, if any. "},{"Id":"25111890740","Type":"IssuesEvent","CreatedAt":"2022-11-08T21:18:53","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10301","RelatedDescription":"Closed issue \"Design for analyzers as an asset in PackageReference\" (#10301) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/6279"},{"Id":"25109378591","Type":"PullRequestEvent","CreatedAt":"2022-11-08T19:10:13","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/12220","RelatedDescription":"Merged pull request \"Add all existing rulesets as a fabricbot.json file\" (#12220) at NuGet/Home","RelatedBody":"Fix: https://github.com/NuGet/Client.Engineering/issues/1972\r\n\r\nMove all existing rulesets in /home repo from config portal to .github/.fabricbot.json in the repository.\r\nThe .github/.fabricbot.json file is the same with what are exported from portal, except:\r\ntask names of type label reminder tasks (Removed \"Test: name\")"},{"Id":"25090962678","Type":"IssuesEvent","CreatedAt":"2022-11-08T06:10:27","Actor":"morgoved","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12221","RelatedDescription":"Opened issue \"restore want load through api.nuget.org except local mirorr\" (#12221) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndocker image mcr.microsoft.com/dotnet/core/sdk:3.1-alpine3.12\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n\r\nWe had internal mirrors repos on jfrog and we have this result.\r\n\r\ndotnet restore want go to api.nuget.org no matter what.\r\n\r\ni don't really know how, beacuse it's can reproduce not for all apps some others build well use mirros.\r\n\r\ndocker image mcr.microsoft.com/dotnet/core/sdk:3.1-alpine3.12\n\n### Verbose Logs\n\n```shell\n\"Step 15/38 : RUN cd XXX.XXX.XXXXXtool && dotnet nuget list source --configfile ../nuget.config && dotnet restore --configfile ../nuget.config && dotnet publish -c Release -o ../out/ \"\r\n\" ---> 071d44f3bab9 \"\r\n\" ---> Running in f33556e37bf5 \"\r\n\"Registered Sources: \"\r\n\" 1. artifactory [Enabled] \"\r\n\" https://xx.xxx-xxd.com/artifactory/api/nuget/Platform-NuGet \"\r\n\" 2. artifactory_nuget_org [Enabled] \"\r\n\" https://xx.xxx-xxd.com/artifactory/api/nuget/platform-nugetorg \"\r\n\" 3. ArtifactoryNuGetV3 [Enabled] \"\r\n\" https://xx.xxx-xxd.com/artifactory/api/nuget/v3/API-NugetOrg-cache \"\r\n\" Determining projects to restore... \"\r\n\"/app/XXX.XXX.XXXXXtool/XXX.XXX.XXXXXtool.csproj : warning NU1603: XXX.XXX.XXXXXtool depends on XXX.XXX.XXXXXtool.Models (>= 1.4.0) but XXX.XXX.XXXXXtool.Models 1.4.0 was not found. An approximate best match of XXX.XXX.XXXXXtool.Models 1.4.1 was resolved. \"\r\n\" Restored /app/XXX.XXX.XXXXXtool/XXX.XXX.XXXXXtool.csproj (in 4.29 sec). \"\r\n\"Microsoft (R) Build Engine version 16.7.2+b60ddb6f4 for .NET \"\r\n\" Determining projects to restore... \"\r\n\"Copyright (C) Microsoft Corporation. All rights reserved. \"\r\n\" \"\r\n\"The command '/bin/sh -c cd XXX.XXX.XXXXXtool && dotnet nuget list source --configfile ../nuget.config && dotnet restore --configfile ../nuget.config && dotnet publish -c Release -o ../out/' returned a non-zero code: 1 \"\r\n\"/usr/share/dotnet/sdk/3.1.410/NuGet.targets(128,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/app/XXX.XXX.XXXXXtool/XXX.XXX.XXXXXtool.csproj] \"\r\n\"/usr/share/dotnet/sdk/3.1.410/NuGet.targets(128,5): error : GSSAPI operation failed with error - Unspecified GSS failure. Minor code may provide more information (SPNEGO cannot find mechanisms to negotiate). [/app/XXX.XXX.XXXXXtool/XXX.XXX.XXXXXtool.csproj]\n```\n"},{"Id":"25087831417","Type":"IssuesEvent","CreatedAt":"2022-11-08T02:10:37","Actor":"gh-andre","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12203","RelatedDescription":"Closed issue \"Nuget package console fails to install packages for projects in the same directory\" (#12203) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\nVisual Studio 2022 x64\r\n\r\n### Worked before?\r\n\r\ndon't know\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nUse the provided sample solution that has two .vcxproj files in the same directory as the solution - `proj-A.vcxproj` and `proj-B.vcxproj`. Install a Nuget package into `proj-A` via Nuget package console:\r\n```\r\nInstall-Package StoneSteps.zLib.Static -ProjectName proj-A\r\n```\r\nIt will install the package and `proj-A` will be able to use zLib from the package.\r\n\r\nAttempt to install the same package for `proj`-B`:\r\n```\r\nInstall-Package StoneSteps.zLib.Static -ProjectName proj-B\r\n```\r\nNuget refuses to do so with this message:\r\n```\r\nPackage 'StoneSteps.zLib.Static.1.2.12.1' already exists in project 'proj-B'\r\n```\r\nHowever, because `proj-B.vcxproj` wasn't modified to add `.props` and `.targets` from the package, it won't build. Moving projects into their own directories seems to make it work, but project file location shouldn't be dictated by a bug in the packager.\r\n\r\nThis is the sample solution. It requires C++ installed to build the solution, but the bug probably can be reproduced without it.\r\n\r\n[bug-nuget-two-projects.zip](https://github.com/NuGet/Home/files/9956152/bug-nuget-two-projects.zip)\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2022-11-09T03:30:26.3676151Z","RunDurationInMilliseconds":1679}