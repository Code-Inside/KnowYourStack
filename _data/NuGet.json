{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25034483433","Type":"IssuesEvent","CreatedAt":"2022-11-04T14:57:26","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9291","RelatedDescription":"Closed issue \"[Question] How to get repository commit property?\" (#9291) at NuGet/NuGetGallery","RelatedBody":"My project MiniExcel on nuget will feedback missing repository commit information, link : https://nuget.info/packages/MiniExcel/1.28.2\r\n\r\n![image](https://user-images.githubusercontent.com/12729184/198841871-ad5b1a8b-bcb3-4f95-8719-d05d1599dd5e.png)\r\n\r\nbut dapper nuget project can have it, why? really appreciate!\r\n\r\n![image](https://user-images.githubusercontent.com/12729184/198841805-aa6dee35-0278-4e37-8b3a-b0325f502ae9.png)\r\n"},{"Id":"25016067356","Type":"PullRequestEvent","CreatedAt":"2022-11-03T18:55:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9297","RelatedDescription":"Merged pull request \"Return 404 when the null version is provided to the license endpoint\" (#9297) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/9295\r\n"},{"Id":"25016048806","Type":"PullRequestEvent","CreatedAt":"2022-11-03T18:54:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9298","RelatedDescription":"Opened pull request \"Change VerifyGitHubVulnerabilities into a job\" (#9298) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/4512\r\n\r\nThe job will run every 6 hours and report a metric which we will monitor on."},{"Id":"25013862435","Type":"PullRequestEvent","CreatedAt":"2022-11-03T17:09:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9296","RelatedDescription":"Merged pull request \"Merge branch \"main\" into dev\" (#9296) at NuGet/NuGetGallery","RelatedBody":"I had to use a custom branch for the merge since the last dev to main merge was a squash which results in Git thinking there are conflicts."},{"Id":"25009547914","Type":"PullRequestEvent","CreatedAt":"2022-11-03T14:21:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9297","RelatedDescription":"Opened pull request \"Return 404 when the null version is provided to the license endpoint\" (#9297) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/9295\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25043548795","Type":"IssuesEvent","CreatedAt":"2022-11-05T01:13:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11544","RelatedDescription":"Closed issue \"[Bug]: Enhanced HTTP retry does not respect cancellation\" (#11544) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nLatest\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nThe implementation of enhancing our HTTP retries in https://github.com/NuGet/NuGet.Client/pull/4220 unfortunately does not respect cancellation since the tokens aren't passed to the `Task.Delay()` calls.  When enabling this by default, some unit tests caught this problem.  \n\n### Verbose Logs\n\n_No response_"},{"Id":"25043530164","Type":"IssuesEvent","CreatedAt":"2022-11-05T01:09:53","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11578","RelatedDescription":"Closed issue \"[DCR]: Make enhanced HTTP retry the default, deprecate older retry logic\" (#11578) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nEnhanced HTTP retry [was added](https://github.com/NuGet/NuGet.Client/pull/4220) as an opt-in feature and will be turned on by default in https://github.com/NuGet/NuGet.Client/pull/4403.  Once released, we should get rid of the legacy retry logic that is superseded by it and clean up the code.  We'll also need to remove references to the environment variable to disable it here: \r\n\r\nhttps://github.com/NuGet/docs.microsoft.com-nuget/pull/2664\r\n\r\nWe should leave the env var that configures the retry count and delay.\n\n### Desired Behavior\n\nEnhanced HTTP retry becomes the default and the escape hatch to turn it off is removed along with the legacy code.\n\n### Additional Context\n\n_No response_"},{"Id":"25043021998","Type":"IssuesEvent","CreatedAt":"2022-11-04T23:54:58","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12183","RelatedDescription":"Closed issue \"Powershell Install-Package: Dependency loop detected for package 'MailKit'.\" (#12183) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nI don't know. NuGet via PowerShell \"Install-Package\" function\r\n\r\n### Product Version\r\n\r\nPowerShell 7.1.3\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nWhen I try to install \"MailKit\" Package in Powershell via:\r\n`Install-Package -Name MailKit -Force -Source \"https://www.nuget.org/api/v2\"`\r\nI receivce this error:\r\n```\r\nInstall-Package : Dependency loop detected for package 'MailKit'.\r\nIn Zeile:28 Zeichen:1\r\n+ Install-Package -Name Mailkit -Force -Source \"https://www.nuget.org/a ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : Deadlock detected: (MailKit:String) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : DependencyLoopDetected,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\n\r\nSeems like this error is caused by a false loops with .NETStandard 1.0:\r\n1. NETStandard.Library ->  System.Security.Cryptography.X509Certificates -> System.Security.Cryptography.Cng ->  System.Formats.Asn1 - > System.Memory ->  System.Numerics.Vectors -> (back to start)\r\n2. NETStandard.Library -> System.Security.Cryptography.X509Certificates -> System.Security.Cryptography.Cng ->  System.Formats.Asn1 - >  System.ValueTuple -> (back to start)\r\n3. NETStandard.Library -> System.Net.Http -> System.Security.Cryptography.X509Certificates -> (see 1./2.)\r\n4. NETStandard.Library -> System.Net.Http -> System.Diagnostics.DiagnosticSource -> System.Memory -> (see 1.)\r\n5. NETStandard.Library -> System.Net.Http -> System.Security.Cryptography.OpenSsl -> System.Formats.Asn1 -> (see 1./2.)\r\n\r\nHow can I solve this problem? I tried different PowerShell-Versions and also tried manuall install the required packages:\r\n# the dependency packages without a loop first:\r\n```\r\nInstall-Package -Name Portable.BouncyCastle -Force -Source \"https://www.nuget.org/api/v2\"\r\nInstall-Package -Name System.Data.DataSetExtensions -Force -Source \"https://www.nuget.org/api/v2\"\r\nInstall-Package -Name System.Security.Cryptography.Algorithms -Force -Source \"https://www.nuget.org/api/v2\"\r\nInstall-Package -Name System.Threading.Tasks.Extensions -Force -Source \"https://www.nuget.org/api/v2\"\r\nInstall-Package -Name System.Buffers -Force -Source \"https://www.nuget.org/api/v2\"\r\nInstall-Package -Name System.Runtime.CompilerServices.Unsafe -Force -Source \"https://www.nuget.org/api/v2\"\r\nInstall-Package -Name System.Runtime.Handles -Force -Source \"https://www.nuget.org/api/v2\"\r\n```\r\n\r\n# the dependency packages with loop issue one by one:\r\n```\r\nInstall-Package -Name System.Numerics.Vectors -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name System.Memory -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name System.ValueTuple -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name System.Formats.Asn1 -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name System.Text.Encoding.CodePages -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name System.Security.Cryptography.Cng -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name System.Security.Cryptography.Pkcs -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name MimeKit -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\nInstall-Package -Name MailKit -Force -Source \"https://www.nuget.org/api/v2\" -SkipDependencies\r\n```\r\n\r\nBut seams like something is missing.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"25041922372","Type":"IssuesEvent","CreatedAt":"2022-11-04T21:55:55","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12214","RelatedDescription":"Opened issue \"NuGet doesn't retry on HTTP 429 responses\" (#12214) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe\n\n### Product Version\n\nall\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis issue is different to https://github.com/NuGet/Home/issues/10558.  That one includes honoring the `Retry-After` header.  This is just about the fact that NuGet currently fails on the first HTTP 429.\n\n### Verbose Logs\n\n_No response_"},{"Id":"25036686704","Type":"IssuesEvent","CreatedAt":"2022-11-04T16:36:19","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11449","RelatedDescription":"Closed issue \"Create spec for machine readable json output for \"dotnet list package\"\" (#11449) at NuGet/Home","RelatedBody":"Sub issue of https://github.com/NuGet/Home/issues/7752, `json` output spec only.\r\n\r\nMany organizations are required by regulation to audit packages that they're using in a repository.\r\n\r\nCurrently there's no easy way to produce a Software Bill of Material (SBOM) output which can be consumed by another auditing system or kept for records.\r\nTo do:\r\n* Rename spec md file to `DotnetListPackageMachineReadableJsonOutput.md`"},{"Id":"25036608487","Type":"PullRequestEvent","CreatedAt":"2022-11-04T16:32:36","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/11983","RelatedDescription":"Closed pull request \"Add errors handling scenario for json output spec\" (#11983) at NuGet/Home","RelatedBody":"Fixes: https://github.com/NuGet/Home/issues/11449\r\nWith my previous https://github.com/NuGet/Home/pull/11446 spec proposal, I didn't take into account if there is an error, it only covers happy paths only.\r\nHere I'm adding section for unhappy paths by creating `problems` section, probably it can be named to `errors` instead. \r\n\r\n[Rendered](https://github.com/NuGet/Home/blob/04b3ebec7868c09054f800af8996148e4e3b15c8/proposed/2022/DotnetListPackageMachineReadableJsonOutput.md)"},{"Id":"25035104118","Type":"IssuesEvent","CreatedAt":"2022-11-04T15:24:07","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7752","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#7752) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIt is difficult to parse the output of `dotnet list package`. We have requirements in our organization to audit packages that we are using in our projects. Without having a good way to parse the output of this command, it makes it difficult to structure the list of packages in a way that can be fed into another auditing system. \r\n\r\nRunning the following command produces the following output:\r\n\r\n```\r\ndotnet list package --include-transitive\r\n```\r\n\r\n```\r\nProject 'UniversalDashboard' has the following package references\r\n   [net472]:\r\n   Top-level Package                                           Requested          Resolved\r\n   > Microsoft.AspNetCore                                      2.1.3              2.1.3\r\n   > Microsoft.AspNetCore.Authentication.Cookies               2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.Authentication.Facebook              2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.Authentication.Google                2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.Authentication.JwtBearer             2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.Authentication.MicrosoftAccount      2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.Authentication.Twitter               2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.Mvc                                  2.1.2              2.1.2\r\n   > Microsoft.AspNetCore.ResponseCompression                  2.1.1              2.1.1\r\n   > Microsoft.AspNetCore.Routing                              2.1.1              2.1.1\r\n   > Microsoft.AspNetCore.Server.Kestrel.Https                 2.1.3              2.1.3\r\n   > Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv       2.1.3              2.1.3\r\n   > Microsoft.AspNetCore.Session                              2.1.1              2.1.1\r\n   > Microsoft.AspNetCore.SignalR                              1.0.3              1.0.3\r\n   > Microsoft.AspNetCore.StaticFiles                          2.1.1              2.1.1\r\n   > Microsoft.AspNetCore.WebSockets                           2.1.1              2.1.1\r\n   > Microsoft.DotNet.PlatformAbstractions                     2.1.0              2.1.0\r\n   > Microsoft.Extensions.Caching.Memory                       2.1.2              2.1.2\r\n   > Microsoft.Extensions.Logging.Debug                        2.1.1              2.1.1\r\n   > Microsoft.Extensions.Logging.Filter                       1.1.2              1.1.2\r\n   > Newtonsoft.Json                                           11.0.2             11.0.2\r\n   > NLog                                                      4.5.8              4.5.8\r\n   > NLog.Web.AspNetCore                                       4.6.0              4.6.0\r\n   > PowerShellStandard.Library                                5.1.0-preview-06   5.1.0-preview-06\r\n   > Quartz                                                    3.0.6              3.0.6\r\n   > System.Net.NameResolution                                 4.3.0              4.3.0\r\n   > System.Reflection.Emit                                    4.3.0              4.3.0\r\n   > System.Runtime.Loader                                     4.3.0              4.3.0\r\n   > System.Security.Principal                                 4.3.0              4.3.0\r\n\r\n   Transitive Package                                                Resolved\r\n   > Libuv                                                           1.10.0\r\n   > Microsoft.AspNetCore.Antiforgery                                2.1.1\r\n   > Microsoft.AspNetCore.Authentication                             2.1.2\r\n   > Microsoft.AspNetCore.Authentication.Abstractions                2.1.1\r\n   > Microsoft.AspNetCore.Authentication.Core                        2.1.1\r\n   > Microsoft.AspNetCore.Authentication.OAuth                       2.1.2\r\n   > Microsoft.AspNetCore.Authorization                              2.1.1\r\n   > Microsoft.AspNetCore.Authorization.Policy                       2.1.1\r\n   > Microsoft.AspNetCore.Connections.Abstractions                   2.1.3\r\n   > Microsoft.AspNetCore.Cors                                       2.1.1\r\n   > Microsoft.AspNetCore.Cryptography.Internal                      2.1.1\r\n   > Microsoft.AspNetCore.DataProtection                             2.1.1\r\n   > Microsoft.AspNetCore.DataProtection.Abstractions                2.1.1\r\n   > Microsoft.AspNetCore.Diagnostics                                2.1.1\r\n   > Microsoft.AspNetCore.Diagnostics.Abstractions                   2.1.1\r\n   > Microsoft.AspNetCore.HostFiltering                              2.1.1\r\n   > Microsoft.AspNetCore.Hosting                                    2.1.1\r\n   > Microsoft.AspNetCore.Hosting.Abstractions                       2.1.1\r\n   > Microsoft.AspNetCore.Hosting.Server.Abstractions                2.1.1\r\n   > Microsoft.AspNetCore.Html.Abstractions                          2.1.1\r\n   > Microsoft.AspNetCore.Http                                       2.1.1\r\n   > Microsoft.AspNetCore.Http.Abstractions                          2.1.1\r\n   > Microsoft.AspNetCore.Http.Connections                           1.0.3\r\n   > Microsoft.AspNetCore.Http.Connections.Common                    1.0.3\r\n   > Microsoft.AspNetCore.Http.Extensions                            2.1.1\r\n   > Microsoft.AspNetCore.Http.Features                              2.1.1\r\n   > Microsoft.AspNetCore.HttpOverrides                              2.1.1\r\n   > Microsoft.AspNetCore.JsonPatch                                  2.1.1\r\n   > Microsoft.AspNetCore.Localization                               2.1.1\r\n   > Microsoft.AspNetCore.Mvc.Abstractions                           2.1.2\r\n   > Microsoft.AspNetCore.Mvc.ApiExplorer                            2.1.2\r\n   > Microsoft.AspNetCore.Mvc.Core                                   2.1.2\r\n   > Microsoft.AspNetCore.Mvc.Cors                                   2.1.2\r\n   > Microsoft.AspNetCore.Mvc.DataAnnotations                        2.1.2\r\n   > Microsoft.AspNetCore.Mvc.Formatters.Json                        2.1.2\r\n   > Microsoft.AspNetCore.Mvc.Localization                           2.1.2\r\n   > Microsoft.AspNetCore.Mvc.Razor                                  2.1.2\r\n   > Microsoft.AspNetCore.Mvc.Razor.Extensions                       2.1.1\r\n   > Microsoft.AspNetCore.Mvc.RazorPages                             2.1.2\r\n   > Microsoft.AspNetCore.Mvc.TagHelpers                             2.1.2\r\n   > Microsoft.AspNetCore.Mvc.ViewFeatures                           2.1.2\r\n   > Microsoft.AspNetCore.Razor                                      2.1.1\r\n   > Microsoft.AspNetCore.Razor.Design                               2.1.1\r\n   > Microsoft.AspNetCore.Razor.Language                             2.1.1\r\n   > Microsoft.AspNetCore.Razor.Runtime                              2.1.1\r\n   > Microsoft.AspNetCore.ResponseCaching.Abstractions               2.1.1\r\n   > Microsoft.AspNetCore.Routing.Abstractions                       2.1.1\r\n   > Microsoft.AspNetCore.Server.IISIntegration                      2.1.1\r\n   > Microsoft.AspNetCore.Server.Kestrel                             2.1.3\r\n   > Microsoft.AspNetCore.Server.Kestrel.Core                        2.1.3\r\n   > Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions      2.1.3\r\n   > Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets           2.1.3\r\n   > Microsoft.AspNetCore.SignalR.Common                             1.0.3\r\n   > Microsoft.AspNetCore.SignalR.Core                               1.0.3\r\n   > Microsoft.AspNetCore.SignalR.Protocols.Json                     1.0.3\r\n   > Microsoft.AspNetCore.WebUtilities                               2.1.1\r\n   > Microsoft.CodeAnalysis.Analyzers                                1.1.0\r\n   > Microsoft.CodeAnalysis.Common                                   2.8.0\r\n   > Microsoft.CodeAnalysis.CSharp                                   2.8.0\r\n   > Microsoft.CodeAnalysis.Razor                                    2.1.1\r\n   > Microsoft.CSharp                                                4.5.0\r\n   > Microsoft.DiaSymReader.Native                                   1.7.0\r\n```\r\n\r\nThe problem with this type of output is that it is difficult to parse. npm provides two options that make this easier when listing packages. They include both a `-parsable` and a `-json` parameter. I think `dotnet list package` should provide something similar. \r\n\r\nI think that `dotnet list package` should do something similar. \r\n\r\n```\r\nF:\\universal-dashboard\\src\\UniversalDashboard>dotnet --version\r\n2.2.102\r\n```\r\n\r\nI'm happy to work on a PR for this. I've found the responsible code and could implement a \"parse-friendly\" version but wanted feedback from the community\\team before doing anything. \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Utility/ProjectPackagesPrintUtility.cs\r\n\r\n------------------------------\r\n**Update 12/10/2021:**\r\nAfter diving into this issue, it's quite large issue, it looks none of dotnet command implemented it, this is 1st time. Let's divide and conquer this issue, here're sub issues:\r\n* Machine readable json output for dotnet list package: https://github.com/NuGet/Home/issues/11449\r\nSpec proposal PR: https://github.com/NuGet/Home/pull/11446"},{"Id":"25025811284","Type":"IssuesEvent","CreatedAt":"2022-11-04T07:50:51","Actor":"bstordrup","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12213","RelatedDescription":"Opened issue \"Getting config values\" (#12213) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\nWhen I issue a `nuget config` command in a repository, I don't get any information. And if I specify `-Verbosity detailed`, then I only get the version number of the nuget.exe executed.\r\n\r\nIt would be nice to have `nuget config` list the current configuration values as being evaluated from the various config files, and if `-Verbosity detailed` specified also the config file being source for given config value.\n\n### Additional Context and Details\n\nWhen you have multiple configuration settings for nuget applied in various nuget.config files around a repository and globally on a computer, it can be hard to figure out where applied configs come from and where to change if needed."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":13,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-11-05T03:30:26.0452472Z","RunDurationInMilliseconds":1553}