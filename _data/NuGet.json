{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24061274489","Type":"PullRequestEvent","CreatedAt":"2022-09-16T23:13:29","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9239","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.09.16]RI of dev into main\" (#9239) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24060753050","Type":"PullRequestEvent","CreatedAt":"2022-09-16T22:13:52","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9238","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.09.16]FI of main into dev\" (#9238) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24059627159","Type":"PullRequestEvent","CreatedAt":"2022-09-16T20:42:03","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9238","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.09.16]FI of main into dev\" (#9238) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/9237"},{"Id":"24059549319","Type":"IssuesEvent","CreatedAt":"2022-09-16T20:36:22","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9237","RelatedDescription":"Opened issue \"[Deployment] 2022.09.16\" (#9237) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\n## Changes\r\n\r\n* https://github.com/NuGet/NuGetGallery/pull/9233 (tracked by https://github.com/NuGet/NuGetGallery/issues/9226) - **Hotfix into main**\r\n* https://github.com/NuGet/NuGetGallery/pull/9229 (tracked by https://github.com/NuGet/Engineering/issues/4566)\r\n* https://github.com/NuGet/NuGetGallery/pull/9228 (tracked by https://github.com/NuGet/Engineering/issues/4555)\r\n\r\n## Progress\r\n* [ ] Merge PRs: - x, x\r\n* [ ] Build: x\r\n* [ ] Release: x\r\n* [ ] DEV DB Migration - _skipped_\r\n* [ ] DEV\r\n* [ ] INT DB Migration - _skipped_\r\n* [ ] INT\r\n* [ ] PROD DB Migration - _skipped_\r\n* [ ] PROD\r\n"},{"Id":"24057892882","Type":"PullRequestEvent","CreatedAt":"2022-09-16T18:45:30","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9233","RelatedDescription":"Merged pull request \"[README] Hotfix for section links 500 error\" (#9233) at NuGet/NuGetGallery","RelatedBody":"Added a hotfix for the 500 internal server error resulting from the added support for section links.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9226"},{"Id":"23995081992","Type":"IssuesEvent","CreatedAt":"2022-09-14T06:49:00","Actor":"MangelMaxime","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9235","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Different search result count between NuGet.org search UI and API\" (#9235) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThere is a different number of pacakges found between NuGet.org website and the search API.\n\n### Repro Steps\n\nClick on the links below and compare the number of packages reported.\r\n\r\n| Source     | Url                                                           | TotalHits |\r\n|------------|---------------------------------------------------------------|-----------|\r\n| NuGet.org  | [`https://www.nuget.org/packages?q=Tags%3A%22fable%22`](https://www.nuget.org/packages?q=Tags%3A%22fable%22)           | 361       |\r\n| Search API | [`https://azuresearch-usnc.nuget.org/query?q=Tags%3A%22fable%22&prerelease=true`](https://azuresearch-usnc.nuget.org/query?q=Tags%3A%22fable%22&prerelease=true) | 360 |\r\n\r\nThe difference being of only 1, I wonder if this something harmful or if this is just because of an index issue related to zero based array for example.\n\n### Expected Behavior\n\nBoth way of searching should return the same number of packages.\n\n### Screenshots\n\n### NuGet.org\r\n\r\n![image](https://user-images.githubusercontent.com/4760796/189943046-0305fd6b-1583-4ab1-87a6-1f66ab0f5524.png)\r\n\r\n### Search API\r\n\r\n![image](https://user-images.githubusercontent.com/4760796/189943534-4f58a7a9-6f0c-4451-a4a6-cfb3de234b6d.png)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24065699964","Type":"IssuesEvent","CreatedAt":"2022-09-17T13:01:27","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12040","RelatedDescription":"Closed issue \"[Bug]: [Cross-platform Sign Verify] No “X.509” info shows after running command “dotnet restore”\" (#12040) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK Version: 7.0.100-rc.2.22417.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Detailed repro steps\r\n1.\tExecute the [Pre-testing steps](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FManual%20tests%2FTest%20Cases&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344A15B-01B1-4828-AF4C-63FE53687F8A%2FPre-testing%20steps%7C6E4370C3-C593-4B99-ABD8-908D0F9E002B%2F%29).\r\n2.\tWhere <NotBefore> and <NotAfter> are datetime values that mark a 10-minute period starting now, create a short-lived test code signing certificate that will expire 10 minutes from now. \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net7.0 -- -nb \"<NotBefore>\" -na \"<NotAfter>\"  `\r\n3.\tWhere <CertificateFilePath> is the file path to the .cer or .pem file in step 1 and <VersionedSdkDirectoryPath> is the directory path for the versioned .NET SDK directory (e.g.:  ./dotnet/dotnet/sdk/7.0.100), add trust for the certificate: \r\n               On Windows:  `.\\dotnet\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath> `\r\n4.\tWhere <PackageId> is the test package ID and <PfxFilePath> is the file path to the .pfx file, sign the test package: \r\n               On Windows: ` .\\dotnet\\dotnet nuget sign .\\<PackageId>\\bin\\Debug\\<PackageId>.1.0.0.nupkg --overwrite --certificate-path <PfxFilePath> `\r\n5.\tVerify that 1 warning displays in the output from the previous step: \r\nwarn : NU3002: The '--timestamper' option was not provided. The signed package will not be timestamped. To learn more about this option, please visit https://docs.microsoft.com/dotnet/core/tools \r\n6.\tCreate a test project: \r\nOn Windows:  `mkdir .\\test && pushd .\\test && ..\\dotnet\\dotnet new console && copy ..\\NuGet.config.template .\\NuGet.config  `\r\n7.\tUpdate NuGet.config to reference the SHA-256 fingerprint of the short-lived certificate created in step 2. \r\n8.\tClear local NuGet resources and previous restore results: \r\nOn Windows:  `rd /s /q .\\obj && ..\\dotnet\\dotnet nuget locals --clear all `\r\n9.\tWhere <PackageId> is the test package ID, add a package reference to the test package: \r\n        On Windows: ` ..\\dotnet\\dotnet add package <PackageId> --version 1.0.0 `\r\n10.\tVerify the results of the previous step.  \r\n               On Windows, the operation failed with the following messages: \r\n```\r\na.\tinfo : X.509 certificate chain validation will use the default trust store selected by .NET. \r\nb.\terror: NU3037: Package '<PackageId> 1.0.0' from source 'E:\\testpass\\<PackageId>\\bin\\Debug': The author primary \r\n```signature validity period has expired. \r\n11.\tRepeat step 8. \r\n12. Where <PackageId> is the test package ID, edit test.csproj to include the following element directly inside the root <configuration> element: \r\n```\r\n<ItemGroup> \r\n<PackageReference Include=\"<PackageId>\" Version=\"1.0.0\" /> \r\n</ItemGroup> \r\n```\r\n13.\tRestore: \r\nOn Windows:  `..\\dotnet\\dotnet restore -v detailed `\r\n\r\n#### Expected\r\nThe “X.509” info (as below on Windows) will show after running command “dotnet restore”. \r\n`info : X.509 certificate chain validation will use the default trust store selected by .NET. `\r\n#### Actual\r\nNo “X.509” info shows\r\n#### Notes\r\nIt also reproes on MacBook.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24063500587","Type":"IssuesEvent","CreatedAt":"2022-09-17T06:11:35","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12099","RelatedDescription":"Opened issue \"[Bug]: Download count in details pane dissappears intermitently\" (#12099) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVS 2022 17.4 Preview\n\n### Worked before?\n\nYes\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Open any SDK style project in VS\r\n2. Right click on the project in Solution Explorer and select 'Manage NuGet Packages...'\r\n3. In NuGet PM UI, go to Browse tab\r\n4. Scroll in packages list and select a Package\r\n\r\n\r\n#### Expected\r\n\r\nShow download count in Details pane in packages from nuget.org\r\n\r\n#### Actual\r\n\r\nSometimes, download count is visible, sometimes, don't\r\n\r\n\r\n![package-with-downloads-count](https://user-images.githubusercontent.com/1192347/190843164-68fd4d35-7b8a-4680-9996-a685cb7f06ff.png)\r\n\r\n![package-without-downloads-count](https://user-images.githubusercontent.com/1192347/190843180-8007a294-1d73-4378-9e68-a9e7b305b8fd.png)\r\n\r\n![previous-package-without-downloads-count](https://user-images.githubusercontent.com/1192347/190843237-0545ca33-b9fa-47a0-829a-82d0173ed95a.png)\r\n\n\n### Verbose Logs\n\n```shell\nN/A. Screenshots attached\n```\n"},{"Id":"24062034908","Type":"IssuesEvent","CreatedAt":"2022-09-17T01:06:48","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12098","RelatedDescription":"Opened issue \"Remove GetInstalledAndTransitivePackagesAsync() API in PackageRefenceProject\" (#12098) at NuGet/Home","RelatedBody":"Since this is an NuGet-owned API, we can remove this API and use the overloaded version with includeTransitivePackages parameter."},{"Id":"24061149612","Type":"IssuesEvent","CreatedAt":"2022-09-16T22:58:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4491","RelatedDescription":"Closed issue \"nuget.exe fails to pack NETCore project\" (#4491) at NuGet/Home","RelatedBody":"Using nuget.exe 4.0.0 build 2266\r\n\r\n### Steps\r\n1. Create a NETstandard class library\r\n1. ``nuget.exe pack <path to csproj>``\r\n\r\n### Expected\r\nPackage will be created\r\n\r\n### Actual\r\n```\r\nUnable to cast object of type 'System.String' to type 'NuGet.Frameworks.NuGetFramework'.\r\nSystem.InvalidCastException: Unable to cast object of type 'System.String' to type 'NuGet.Frameworks.NuGetFramework'.\r\n   at NuGet.ProjectManagement.NuGetProject.GetMetadata[T](String key)\r\n   at NuGet.ProjectManagement.PackagesConfigNuGetProject..ctor(String folderPath, Dictionary`2 metadata)\r\n   at CallSite.Target(Closure , CallSite , Type , Object , Dictionary`2 )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute3[T0,T1,T2,TRet](CallSite site, T0 arg0, T1 arg1, T2 arg2)\r\n   at NuGet.CommandLine.ProjectFactory.AddDependencies(Dictionary`2 packagesAndDependencies)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessDependencies(PackageBuilder builder)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean build\r\nIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```"},{"Id":"24060531435","Type":"PullRequestEvent","CreatedAt":"2022-09-16T21:53:31","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/pull/11884","RelatedDescription":null,"RelatedBody":"This proposal introduces a concept known as package scoring or net score for short. This is a pagerank-like score that depends on qualities of the whole NuGet package & dependencies while accounting for the risks of today's modern, connected world and all of the security implications they have on package managers. This is the first iteration building on-top of the work here:\r\n\r\nhttps://github.com/dotnet/designs/pull/216\r\n\r\n[Rendered Proposal](https://github.com/NuGet/Home/blob/package-scoring-v1/proposed/2022/package-scoring-v1.md)\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"24059896262","Type":"PullRequestEvent","CreatedAt":"2022-09-16T21:01:30","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/11884","RelatedDescription":"Closed pull request \"Adds Package Scoring v1\" (#11884) at NuGet/Home","RelatedBody":"This proposal introduces a concept known as package scoring or net score for short. This is a pagerank-like score that depends on qualities of the whole NuGet package & dependencies while accounting for the risks of today's modern, connected world and all of the security implications they have on package managers. This is the first iteration building on-top of the work here:\r\n\r\nhttps://github.com/dotnet/designs/pull/216\r\n\r\n[Rendered Proposal](https://github.com/NuGet/Home/blob/package-scoring-v1/proposed/2022/package-scoring-v1.md)\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"24054468781","Type":"IssuesEvent","CreatedAt":"2022-09-16T15:30:52","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12095","RelatedDescription":"Closed issue \"[Bug]: Incorrect check for feed count when logging NU1507 warning about not using package source mapping\" (#12095) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nlatest\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nEnable central package management but not package source mapping and have a single HTTP-based feed.  No warning should be logged.\r\n\r\nThis should be checking for `> 1`: https://github.com/NuGet/NuGet.Client/pull/4764/files#diff-fdeafb08a0d0ea6b92176fbc5d11e5eb726f77500e857cca8d8a646ff17fd379R486\n\n### Verbose Logs\n\n_No response_"},{"Id":"24051259646","Type":"IssuesEvent","CreatedAt":"2022-09-16T13:01:23","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12023","RelatedDescription":"Closed issue \"[Bug]: After Migration from package.config to PackageReference implementation, Build works, but Rebuild fails\" (#12023) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe, NuGet.exe\r\n\r\n### Product Version\r\n\r\n.NET Framework 4.6.2\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nI was on a project using .NET Framework 4.6.2 and was still using package.config. I used the migration tool to migrate the project to us ProjectReference instead. The project build correctly, but when I attempt to rebuild, the rebuild fails and my none of my nuget packages aren recognized. In my console output, I get errors stating \"CS0006: Metadata file '.dll/exe' could not be found\" for each of my projects in my solution\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"24041809337","Type":"IssuesEvent","CreatedAt":"2022-09-16T03:04:42","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12097","RelatedDescription":"Opened issue \"[Bug]: nuget.exe commands\" (#12097) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.3\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nRun `nuget.exe restore` in an SDK-style project in a non-English windows machine.\r\n\r\nExpected:\r\n\r\nOutput is translated.\r\n\r\nActual\r\n\r\nCommand output is in English\r\n\r\n![image](https://user-images.githubusercontent.com/1192347/190547997-37328d7b-1f7b-4b2b-aab4-8420af2bbfa8.png)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"24040566832","Type":"IssuesEvent","CreatedAt":"2022-09-16T01:01:49","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12096","RelatedDescription":"Opened issue \"[Bug]: Running tests in NuGet.CommandLine.Test in a non-English language Windows machine breaks the tests.\" (#12096) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\ndev branch (6.4) a56c42dbdd901c0c611eece400ce8565fffdfdf7\n\n### Worked before?\n\nI don't think so\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nGet a Windows machine with non-English Language\r\n\r\n1. Clone NuGet.Client repo\r\n2. Run configure.ps1\r\n3. Open NuGet.sln in Visual Studio 2022\r\n4. Run tests in NuGet.CommandLine.Test project\r\n\r\n#### Expected\r\n\r\nAll tests pass\r\n\r\n##### Actual\r\n\r\nTests fails with strings \n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2022-09-18T03:30:24.5969425Z","RunDurationInMilliseconds":1481}