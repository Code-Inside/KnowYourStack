{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"22762969008","Type":"PullRequestEvent","CreatedAt":"2022-07-07T23:25:48","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9153","RelatedDescription":"Merged pull request \"SDL OSS repo compliance: \" (#9153) at NuGet/NuGetGallery","RelatedBody":"Added CLA text, Code of Conduct, Trademark notice.\r\nChanged license text.\r\n\r\nPart of https://github.com/NuGet/Engineering/issues/4387"},{"Id":"22755220213","Type":"PullRequestEvent","CreatedAt":"2022-07-07T15:59:14","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9157","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.07.06]RI of dev into main \" (#9157) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"22741542343","Type":"PullRequestEvent","CreatedAt":"2022-07-07T04:38:48","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9156","RelatedDescription":"Closed pull request \"Add netstandard2.1 target to NuGetGallery.Services for support request entities and telemetry\" (#9156) at NuGet/NuGetGallery","RelatedBody":"Next step (following https://github.com/NuGet/ServerCommon/pull/396) in addressing https://github.com/NuGet/Engineering/issues/4434.\r\n\r\nThis change introduces the `netstandard2.1` target, and excludes many classes from it. Unfortunately there appears to be no globbing support in the `Compile Remove` items, so all classes removed from this target need to be called out explicitly. If there is ongoing work in this target framework, it will take the form of removing these `Remove` items and addressing any issues that arise.\r\n\r\nThis change does retarget some telemetry classes and support database entities, which will be used elsewhere in this work. Some upstream dependencies are specific to framework webapps and are not included in the `netstandard2.1`-targeted build.\r\n\r\n`DurationTracker` was poorly named."},{"Id":"22739937087","Type":"PullRequestEvent","CreatedAt":"2022-07-07T02:04:54","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9158","RelatedDescription":"Opened pull request \"Add netstandard2.1 target to NuGetGallery.Services\" (#9158) at NuGet/NuGetGallery","RelatedBody":"Next step in addressing https://github.com/NuGet/Engineering/issues/4434.\r\n\r\nThis change introduces the `netstandard2.1` target, and excludes many classes from it. Unfortunately there appears to be no globbing support for `Compile Remove` items, so all classes removed from this target need to be called out explicitly. If there is ongoing work in this target framework, it will take the form of removing these `Remove` items and addressing any issues that arise.\r\n\r\nThis change retargets only some telemetry classes and support database entities, which will be used elsewhere in this epic. Some upstream dependencies are specific to framework webapps and are not included in the `netstandard2.1`-targeted build.\r\n\r\nNote also that the `EntityFramework` package reference is removed here, as it should have been removed in the SDK-style conversion for this project. This package reference is now accessed transitively through `NuGetGallery.Core` -> `NuGetGallery.Services.Entities`.\r\n\r\nAlso, `DurationMetric.cs` was poorly named. Have renamed according to class in file (`DurationTracker`)."},{"Id":"22739331002","Type":"PullRequestEvent","CreatedAt":"2022-07-07T01:02:14","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9157","RelatedDescription":"Opened pull request \"[ReleasePrep][2022.07.06]RI of dev into main \" (#9157) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"22764521533","Type":"IssuesEvent","CreatedAt":"2022-07-08T01:59:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11928","RelatedDescription":"Closed issue \"Make VS adapter ProjectDirectory sync, use IVsHierarchy only to generate the guids, avoid double casting VSProject4\" (#11928) at NuGet/Home","RelatedBody":"Another sub issue of https://github.com/NuGet/Client.Engineering/issues/1374\r\n\r\nIn some test traces, the ProjectDirectory retrieval takes 2-3% of the total init time."},{"Id":"22764085261","Type":"IssuesEvent","CreatedAt":"2022-07-08T01:17:27","Actor":"jkasten2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11953","RelatedDescription":"Opened issue \"[Bug]: Windows Only - nuget install fails with misleading error \"Could not find a part of the path\" instead of 260 / 248 character error\" (#11953) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet.exe 6.2.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n### One-Line Summary\r\nNuget does not support paths over 260 / 248 characters on Windows per issue #3324, however should reliability tell the developer this is the issue.\r\n### Details\r\nGive issue #3324 won't be fixed anytime soon and how often this limit is hit having good error messages is critical for developer to understand what the root issue is. While Nuget sometimes displays the following details when the 260 / 248 Windows path limit is reached it does not always do this:\r\n```\r\nThe specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.\r\nWARNING: Please enbale long file path support in local group policy. Fore more details, please refer to https://aka.ms/nuget-long-path.\r\n```\r\n\r\nThe factor seems to be is nuget doesn't consider longer paths and file names in the nuget package itself. Seems it may use part of the name in the calculation if the warning is shown but if it gets this wrong you get a confusing message like this:\r\n```\r\nCould not find a part of the path 'C:\\mypath\\somepackge\\somelongpath\\somefile.something\\'\r\n```\r\n\r\n### Steps to reproduce\r\nI broke this down into two scenarios where a this \"good\" error message doesn't show when it should.\r\n\r\n### Steps to reproduce - Case 1 - Common Package with long project path\r\nThis one makes note of the case where we get a \"bad\" error message for a very common library `Newtonsoft.Json` but a less common very long pathed project.\r\n\r\nRun the following:\r\n```\r\nnuget install Newtonsoft.Json -OutputDirectory C:\\tmp\\sommelongpath_gpath_12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789A -Version 13.0.1\r\n```\r\nAnd observe the error:\r\n```\r\nWARNING: Install failed. Rolling back...\r\nExecuting nuget actions took 165 ms\r\nCould not find a part of the path 'C:\\tmp\\sommelongpath_gpath_12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789A\\Newtonsoft.Json.13.0.1'.\r\n````\r\n\r\nHowever if you remove just 1 character from the path you get an expected error:\r\nRun the following:\r\n```\r\nnuget install Newtonsoft.Json -OutputDirectory C:\\tmp\\sommelongpath_gpath_12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789A -Version 13.0.1\r\n```\r\nGives you an understand able error.\r\n```\r\nWARNING: Install failed. Rolling back...\r\nExecuting nuget actions took 164 ms\r\nThe specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.\r\nWARNING: Please enbale long file path support in local group policy. Fore more details, please refer to https://aka.ms/nuget-long-path.\r\n```\r\n\r\n### Steps to reproduce - Case 2 - Less common package that has long contents\r\nThis one makes note of the case where we get a \"bad\" error message for a less common library `OneSignalSDK.Xamarin`.\r\n* Background on why this libraries paths are so long is that Xamarin allows remote building on iOS from Windows but iOS requires a lot of nested paths to support all build targets for iOS.\r\n\r\nRun the following:\r\n```\r\nnuget install OneSignalSDK.Xamarin -OutputDirectory C:\\tmp\\some_resonable_path_length_123456789\\ -Version 4.1.0\r\n```\r\n\r\nGives you a confusing error about a the first file that just happens to go over the 260 Windows limit:\r\n```\r\nWARNING: Install failed. Rolling back...\r\nExecuting nuget actions took 358 ms\r\nCould not find a part of the path 'C:\\tmp\\some_resonable_path_length_123456789\\OneSignalSDK.Xamarin.4.1.0\\content\\OneSignalSDK.Xamarin.iOS.resources\\OneSignalExtension.xcframework\\ios-arm64_i386_x86_64-simulator\\OneSignalExtension.framework\\Headers\\OneSignalNotificationServiceExtensionHandler.h'.\r\n````\n\n### Verbose Logs\n\n_No response_"},{"Id":"22763234248","Type":"IssuesEvent","CreatedAt":"2022-07-07T23:50:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10642","RelatedDescription":"Closed issue \"NuGetFramework.ParseFolder could do a faster lookup when getting the identifier\" (#10642) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (Visual Studio):\r\n\r\nProduct version:  16.8\r\n\r\nWorked before? If so, with which NuGet version: N/A\r\n\r\n## Repro steps and/or sample project\r\n\r\nWhile analyzing [VSFeedback#1286488](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1286488) I noticed 4 background NuGet threads are blocking for large solution and huge number of packages.\r\nOne thread blocked on NuGetFramework.ParseFolder. It's running in linear time instead of O(1) which bad usage of dictionary, it needs little refactoring to make better use of Dictionary type.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/ac97d923e633f4ee65eec5ec690c4d99d7a922f3/src/NuGet.Core/NuGet.Frameworks/FrameworkNameProvider.cs#L109\r\n\r\n![image](https://user-images.githubusercontent.com/8766776/110422071-895ac400-8053-11eb-8933-1a6fcae9fd94.png)\r\n"},{"Id":"22761325993","Type":"IssuesEvent","CreatedAt":"2022-07-07T21:30:04","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11952","RelatedDescription":"Opened issue \"[Epic]: Central Package Management improvements for 17.4\" (#11952) at NuGet/Home","RelatedBody":"## Issues\r\n- [ ] https://github.com/NuGet/Home/issues/10311 \r\n- [ ] https://github.com/NuGet/Home/issues/10126\r\n- [ ] https://github.com/NuGet/Home/issues/11818\r\n- [ ] https://github.com/NuGet/Home/issues/10432\r\n- [ ] https://github.com/NuGet/Home/issues/11822\r\n- [ ] https://github.com/NuGet/Home/issues/11951\r\n- [ ] https://github.com/NuGet/Home/issues/11950\r\n\r\n## Features\r\n- [ ] https://github.com/NuGet/Home/issues/10159\r\n- [ ] No one location to specify metadata like `NoWarn`\r\n  Since [Microsoft.Build.CentralPackageVersions](https://github.com/microsoft/MSBuildSdks/tree/main/src/CentralPackageVersions) uses the `Update` guesture, it lets users specify a version for a package as well as other metadata like `NoWarn`.  However, in NuGet's CPM we only have a `<PackageVersion />` item and it wouldn't make sense to specify `NoWarn` on a package version.  Users will need to add a `<PackageReference Update=\"\" NoWarn=\"1234\" />` to their `Directory.Packages.props`.\r\n\r\n## Performance\r\n- [ ] https://github.com/NuGet/Home/issues/10256\r\n- [ ] https://github.com/NuGet/Home/issues/9740\r\n\r\n## Pull Requests\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4669\r\n- [ ] https://github.com/NuGet/Home/pull/11794\r\n- [ ] https://github.com/NuGet/NuGet.Client/pull/4680"},{"Id":"22761322327","Type":"IssuesEvent","CreatedAt":"2022-07-07T21:29:47","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11951","RelatedDescription":"Opened issue \"[DCR]: Central package management package source mapping should only look at configured feeds\" (#11951) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe\n\n### Current Behavior\n\nCurrently CPM looks at all of the feeds that took part of restore.  However, the .NET SDK injects local sources which makes CPM think that too many sources are in use and emits a warning about needing to use package source mapping.  The tooling (nuget.exe and `dotnet nuget`) do not show these sources so it is confusing\n\n### Desired Behavior\n\nThe package source mapping verification in CPM should only take into account sources that are compatible with package source mapping.\n\n### Additional Context\n\n_No response_"},{"Id":"22761274659","Type":"IssuesEvent","CreatedAt":"2022-07-07T21:26:10","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11950","RelatedDescription":"Opened issue \"[DCR]: Remove preview message when using central package manageent\" (#11950) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nMSBuild.exe\n\n### Current Behavior\n\nNuGet emits a high importance message when a project is using central package management which is currently in preview\n\n### Desired Behavior\n\nOnce CPM is production ready, remove the message.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":249,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2022-07-08T03:30:27.1116886Z","RunDurationInMilliseconds":1366}