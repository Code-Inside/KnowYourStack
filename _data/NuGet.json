{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"26967556866","Type":"PullRequestEvent","CreatedAt":"2023-02-09T00:13:40","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9383","RelatedDescription":"Merged pull request \"[ReleasePrep][2023.02.08] RI of dev into main\" (#9383) at NuGet/NuGetGallery","RelatedBody":"## Changes\r\n* https://github.com/NuGet/NuGetGallery/pull/9364 (tracked by https://github.com/NuGet/NuGetGallery/issues/9337)\r\n* https://github.com/NuGet/NuGetGallery/pull/9358 (tracked by https://github.com/NuGet/NuGetGallery/issues/9359)\r\n* https://github.com/NuGet/NuGetGallery/pull/9347 (tracked by https://github.com/NuGet/Engineering/issues/4669)\r\n* https://github.com/NuGet/NuGetGallery/pull/9360 (tracked by https://github.com/NuGet/Engineering/issues/4762)\r\n* https://github.com/NuGet/NuGetGallery/pull/9366\r\n\r\n## Issue\r\nhttps://github.com/NuGet/NuGetGallery/issues/9381\r\n"},{"Id":"26962493454","Type":"PullRequestEvent","CreatedAt":"2023-02-08T19:21:06","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9383","RelatedDescription":"Opened pull request \"[ReleasePrep][2023.02.08] RI of dev into main\" (#9383) at NuGet/NuGetGallery","RelatedBody":"## Changes\r\n* https://github.com/NuGet/NuGetGallery/pull/9364 (tracked by https://github.com/NuGet/NuGetGallery/issues/9337)\r\n* https://github.com/NuGet/NuGetGallery/pull/9358 (tracked by https://github.com/NuGet/NuGetGallery/issues/9359)\r\n* https://github.com/NuGet/NuGetGallery/pull/9347 (tracked by https://github.com/NuGet/Engineering/issues/4669)\r\n* https://github.com/NuGet/NuGetGallery/pull/9360\r\n* https://github.com/NuGet/NuGetGallery/pull/9366\r\n\r\n## Issue\r\nhttps://github.com/NuGet/NuGetGallery/issues/9381\r\n"},{"Id":"26939455833","Type":"PullRequestEvent","CreatedAt":"2023-02-08T00:14:02","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9366","RelatedDescription":"Merged pull request \"Search-by-TFM Bug Bash feedback\" (#9366) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9367,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9368,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9369,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9370,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9371,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9375,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9377,\r\nhttps://github.com/NuGet/NuGetGallery/issues/9376\r\n\r\nThis PR addresses some of the issues flagged by the Search-by-TFM bug bash:\r\n\r\n1. The Prerelease url parameter sometimes had an uppercase boolean ('True') and sometimes a lowercase boolean ('true'). It will always show a lowercase boolean now. \r\nhttps://github.com/NuGet/NuGetGallery/issues/9367\r\n2. The frameworks and tfms parameters were being added to the query string in the order that the user selected them, rather than the order of the checkboxes in the UI. This has been fixed.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9368\r\n3. The frameworks and tfms parameters always ended in a comma (`net,` ; `net5.0,net472,`). This has been fixed.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9369\r\n4. Previously, all TFM sections were always collapsed when the page loaded. Now, if any individual TFMs have been selected, their TFM sections will be expanded when the page loads.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9370\r\n5. The packageType query parameter was before frameworks and tfms in the url, but appears after them in the UI. This has been fixed so that the frameworks and tfms params appear before packageType in the url.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9371\r\n6. The box around the framework generation collapsible arrows (when they're selected/in focus) was distorted by the box below it. Some of the bottom part of the box was hidden. This has been fixed.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9375\r\n\r\n**UPDATE:** Added a small fix that addresses 2 other bugs:\r\n1. Search bar disappears on the Profiles page. We needed to remove the default search bar on the Search page, but the search bar was being removed from the Profiles page too with the same javascript code. We now use a ViewBag property, the same way that the [Home page](https://github.com/NuGet/NuGetGallery/blob/60fc5d5b8a5211a47d3722199ff459e660c59823/src/NuGetGallery/Views/Pages/Home.cshtml#L4) does, instead of javascript. With these changes, the search bar removal will only happen on the Search page.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9377\r\n2. An extra Search bar flickers before disappearing when the search page is rendering. The switch from the javascript code to the ViewBag property fixes this too.\r\nhttps://github.com/NuGet/NuGetGallery/issues/9376"},{"Id":"26937024084","Type":"IssuesEvent","CreatedAt":"2023-02-07T21:37:36","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9363","RelatedDescription":"Closed issue \"[Deployment] 2023.01.26\" (#9363) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n## Changes\r\n* https://github.com/NuGet/NuGetGallery/pull/9361\r\n* https://github.com/NuGet/NuGetGallery/pull/9357\r\n* https://github.com/NuGet/NuGetGallery/pull/9342\r\n* https://github.com/NuGet/NuGetGallery/pull/9348\r\n* https://github.com/NuGet/NuGetGallery/pull/9349\r\n\r\n## Progress\r\n* [x] Merge PR: https://github.com/NuGet/NuGetGallery/pull/9362\r\n* [x] Build: [7251182](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=7251182&view=results)\r\n* [x] Release: [1425379](https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1425379)\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD\n\r\n# Stats.CreateAzureCdnWarehouseReports job\r\n## Changes\r\n* https://github.com/NuGet/NuGet.Jobs/pull/1124\r\n\r\n## Progress\r\n* [x] Release: [1424727](https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1424727)\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"26946687434","Type":"IssuesEvent","CreatedAt":"2023-02-08T08:40:46","Actor":"Stefan75","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12421","RelatedDescription":"Opened issue \"Support package asset signing during build \" (#12421) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe\n\n### The Elevator Pitch\n\nHello,\r\n\r\nWe want to ensure that all package asset files of all consumed packages are digital signed\r\nso that the software supports environemnts with enabled Device-Guard (based on certifacates).\r\n\r\nRegards,\r\nStefan\n\n### Additional Context and Details\n\nIdea:\r\n- If package asset files are copied to the output folder we want to enrich the copy operation in a way that these files are automatically signed if necessary \r\n- This signing should happen before the actual target is created to ensure that the assets are always older than the created output target\r\n- If multiple targets are sharing the output folder and using the same NuGet packages, the other targets should not replace the signed asset file in the output folder\r\n\r\nAny suggestions?\r\n\r\n"},{"Id":"26940912596","Type":"IssuesEvent","CreatedAt":"2023-02-08T02:04:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10846","RelatedDescription":"Closed issue \"Support .NET 7.0\" (#10846) at NuGet/Home","RelatedBody":"Tracking epic for all our net7.0-related issues\r\n\r\n- [ ] https://github.com/nuget/home/issues/10872\r\n- [ ] https://github.com/NuGet/Home/issues/10430\r\n- [ ] https://github.com/nuget/home/issues/6279\r\n- [ ] https://github.com/nuget/home/issues/7815\r\n- [ ] https://github.com/nuget/home/issues/9667\r\n- [x] https://github.com/nuget/home/issues/9347\r\n- [ ] https://github.com/nuget/home/issues/5154\r\n- [x] https://github.com/nuget/home/issues/5926\r\n"},{"Id":"26939694513","Type":"IssuesEvent","CreatedAt":"2023-02-08T00:30:58","Actor":"lbussell","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12420","RelatedDescription":"Opened issue \"NuGet/Dotnet restore leaves files behind in /tmp/NuGetScratch\" (#12420) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nLatest version of .NET 6.0, .NET 7.0, and pre-release versions of .NET 8.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Build the following Dockerfile (ex. `docker build -t nuget-test -f .\\Dockerfile .`)\r\n\r\n```Dockerfile\r\nFROM mcr.microsoft.com/dotnet/sdk:6.0 AS build\r\nWORKDIR /source\r\nRUN dotnet new console --no-restore\r\nRUN dotnet restore --use-current-runtime\r\n```\r\n\r\n2. Run the created image: `docker run -it --rm nuget-test /bin/sh`\r\n3. Inspect the `/tmp` directory to see the files left behind: `ls -lah /tmp/NuGetScratch/lock/`\r\n\r\nIs this the expected result? These files left behind by NuGet are causing us permission issues when switching between root and non-root users in .NET docker containers. When a NuGet/dotnet restore is run as root, future NuGet commands ran by other users will fail. Is there a build server of sort that we accidentally terminate early in the container build?\r\n\r\nThanks.\n\n### Verbose Logs\n\n```shell\nThe following are the files left behind by NuGet in an example image that I built using the instructions above (some of the files are not due to NuGet restore like `.dotnet/shm`, while others like MSBuildTemproot are left behind by powershell installation):\r\n\r\n\r\ndrwxrwxrwx         0:0        0 B  ├── tmp                                                                                                                                                                                                                                    drwxrwxrwx         0:0        0 B  │   ├── .dotnet                                                                                     drwxrwxrwx         0:0        0 B  │   │   └── shm                                                                                         drwx------         0:0        0 B  │   ├── 82d9253f-fac5-4dd9-863e-e95ad886c6f0                                                            drwx------         0:0        0 B  │   ├── MSBuildTemproot                                                                                 drwxrwxrwx         0:0        0 B  │   ├── NuGetScratch                                                                                    drwxrwxrwx         0:0        0 B  │   │   └── lock                                                                                        -rw-r--r--         0:0        0 B  │   │       ├── 02c1a6b1e6a189adc09794fab6791bf24a1841dd                                                -rw-r--r--         0:0        0 B  │   │       ├── 3b3fba4ea8f8b14f53e82a125bf28c4a69896605                                                -rw-r--r--         0:0        0 B  │   │       ├── 6f70e9594edbb2d12174c395fa5596b59259ef3e                                                -rw-r--r--         0:0        0 B  │   │       ├── 910ee62b266dc259a5a66981bebe7d3cd7cc2a82                                                -rw-r--r--         0:0        0 B  │   │       ├── ad41768f5ec8770e070473ab153efe7a828bba73                                                -rw-r--r--         0:0        0 B  │   │       ├── b5470a0e371577b0df3c0b80c7c2bc6849cd2ca6                                                -rw-r--r--         0:0        0 B  │   │       ├── b5f9502d257d6ab45cab231e13e8c7dd39c7d3a4                                                -rw-r--r--         0:0        0 B  │   │       ├── ed9ecc1f06bc6d3cb9e44cb780575b171eaf893e                                                -rw-r--r--         0:0        0 B  │   │       ├── effbb02e5017975996b2720d0dde89125b10edcc                                                -rw-r--r--         0:0        0 B  │   │       ├── f1cb54aa7ea80f31ab84d0bf6120755929641ad2                                                -rw-r--r--         0:0        0 B  │   │       └── ff442a5005e856d0388cb8daf4c3340cc673f37a                                                drwx------         0:0        0 B  │   ├── c8c62065-522d-429f-b05b-2e52c3084165                                                            drwx------         0:0        0 B  │   └── de16094a-128e-48a0-8ae3-033310547545\r\n```\n```\n"},{"Id":"26939691909","Type":"IssuesEvent","CreatedAt":"2023-02-08T00:30:48","Actor":"grapefruitie","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12419","RelatedDescription":"Opened issue \"CPM not working with another versioning sdk\" (#12419) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nnuget 6.4.0, .net 6.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nAdd another central versioning sdk in a csproj file\r\n`<Sdk Name=\"Your.Versioning.Sdk\" />`\r\n\r\nTry either build or run nuget restore.\r\n\r\nError:\r\n` [Name].csproj: [RCV0102] The package reference '[Package]' has no version and no update specified. If you expected a version to be set it may indicate a problem with CentralVersions. Add an explicit version in the project file.`\n\n### Verbose Logs\n\n_No response_"},{"Id":"26939433624","Type":"IssuesEvent","CreatedAt":"2023-02-08T00:12:29","Actor":"Benjin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12418","RelatedDescription":"Opened issue \"`dotnet pack` on macOS results in nupkg that cannot be opened by Finder/Archive Utility\" (#12418) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 6.0.405 on macOS 13.1 x64\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n0. Create a folder to work in: `mkdir BugTest`, and move into it `cd BugTest`\r\n1. Create a new project: `dotnet new console`.  No need to add anything to the project to repro the bug.\r\n2. Create a nuget from the project: `dotnet pack`\r\n3. Rename the resulting `.nupkg` to `.zip` and open it using Finder\r\n\r\nExpected:\r\nArchive will open just fine.\r\n\r\nReality:\r\n<img width=\"392\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1609827/217394132-3cbbabdf-1391-4e78-8cf9-206920313190.png\">\r\n\r\nAdditional info:\r\nUsing a third-party app on macOS (I used Commander One) works.  Moving the nupkg file over to Windows and opening natively works.  Perhaps there's something in the metadata that macOS doesn't know how to handle?\n\n### Verbose Logs\n\n```shell\nhttps://gist.github.com/Benjin/5ab763d268c6eab8ef52b135059293e0\n```\n"},{"Id":"26938583619","Type":"IssuesEvent","CreatedAt":"2023-02-07T23:10:03","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12329","RelatedDescription":"Closed issue \"dotnet restore (from nuget) doesn't complete on M1 mac\" (#12329) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet: 7.0.1, arm64 - msbuild: 16.10.1. nuget. Not sure, this gets executed inside of a docker-compose linux build.\n\n### Worked before?\n\nWorked in net6\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Create a asp.net project on M1 Mac\r\n2. Add docker support that includes docker compose support\r\n3. Go to command line in the solution folder where the docker compose file exists\r\n4. Run the command: docker-compose build\r\n5. Wait for any of the tasks that are: RUN dotnet restore \"[project file].csproj\r\n6. Notice that on an Intel mac this takes just a few seconds\r\n7. Notice that on an M1 mac this continues and never finishes (I let it run for 15 minutes and it never completed)\n\n### Verbose Logs\n\n_No response_"},{"Id":"26933662106","Type":"PullRequestEvent","CreatedAt":"2023-02-07T18:45:10","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/12408","RelatedDescription":"Merged pull request \"FabricBot: fix a condition when switching \"waiting for\" label\" (#12408) at NuGet/Home","RelatedBody":"Fix a condition when switching \"waiting for\" label."},{"Id":"26925705303","Type":"IssuesEvent","CreatedAt":"2023-02-07T13:39:54","Actor":"GustaMagik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12417","RelatedDescription":"Opened issue \"[Feature Request] Scan publicly uploaded NuGets for CVEs and display current status on NuGet gallery\" (#12417) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nShow if a public NuGet package would introduce vulnerabilities through itself or its dependencies.\r\nIt would be helpful for developers to know and a motivator for the publishers to keep their NuGets updated.\n\n### Additional Context and Details\n\nThis info could be disseminated through the other channels NuGets are also published."},{"Id":"26917894995","Type":"IssuesEvent","CreatedAt":"2023-02-07T08:17:38","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12371","RelatedDescription":"Closed issue \"Central Package Management warning NU1507\" (#12371) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet 7\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nI'm trying out the new [Central Package Management](https://devblogs.microsoft.com/nuget/introducing-central-package-management/) feature in NuGet.\r\n\r\nAs stated in the documentation, if you use multiple NuGet sources (which I use), it is now required to configure the Package Source Mapping in a nuget.config file, otherwise you should get a NU1507 warning.\r\n\r\nMy simplified file tree is this:\r\n\r\n- **MySolution.sln**\r\n- **Proj1.csproj**\r\n- **MyLibrary\\\\** (this is an external repository with all my shared projects)\r\n         - **Directory.Packages.props**\r\n         - **nuget.config**\r\n         -  **Proj2\\\\** (an example library project)\r\n         - **Proj2\\\\Proj2.csproj**\r\n\r\nHere is the **Proj1.csproj** content:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <OutputType>Exe</OutputType>\r\n        <TargetFramework>net7.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n    </PropertyGroup>\r\n    <PropertyGroup>\r\n        <DefaultItemExcludes>$(DefaultItemExcludes);MyLibrary\\**\\*</DefaultItemExcludes>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nHere is **Directory.Packages.props**:\r\n\r\n```\r\n<Project>\r\n    <PropertyGroup>\r\n        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <PackageVersion Include=\"JetBrains.Annotations\" Version=\"2022.1.0\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\n\r\nHere is **nuget.config**:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n        <clear/>\r\n        <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\"/>\r\n        <add key=\"Custom NuGet\" value=\"https://nuget.mydomain.net/\"/>\r\n    </packageSources>\r\n\r\n    <packageSourceMapping>\r\n        <packageSource key=\"nuget.org\">\r\n            <package pattern=\"*\"/>\r\n        </packageSource>\r\n        <packageSource key=\"Custom NuGet\">\r\n            <package pattern=\"MyNamespace.*\"/>\r\n        </packageSource>\r\n    </packageSourceMapping>\r\n</configuration>\r\n```\r\n\r\n\r\nand **Proj2.csproj**:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>net7.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n\r\nIn the [official documentation](https://learn.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#how-settings-are-applied) the **MyLibrary\\nuget.config** should be used when restoring the packages because it is in the parent directory of **Proj2.csproj**, and actually it works when I build the solution via dotnet build, but when I build it in Visual Studio I still get the NU1507 warning.\r\n\r\nI know that I could work around the issue by copying the nuget.config file in the same directory as the solution file (the warning goes away), but I have hundreds of projects that include the MyLibrary directory and I'd like to keep all the configuration centralized.\r\n\r\nMoreover it works as expected when it's built from the command line, so what am I doing wrong?\n\n### Verbose Logs\n\n_No response_"},{"Id":"26917600285","Type":"IssuesEvent","CreatedAt":"2023-02-07T08:03:53","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12416","RelatedDescription":"Opened issue \"[Bug Bash] The “Update” button is still clickable after installing a package with floating version “*”  \" (#12416) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.6.0.17\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n#### Repro Steps:  \r\n1. Create a new C# Console App (.NET Core) project. \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.                                       \r\n3. Go to the “Browse\" tab and click a package (for example \"Microsoft.EntityFrameworkCore\"). \r\n4. Clear the \"Version\" drop-down box in the right panel.\r\n5. Type a floating version (such as “*”) in the “Version” drop-down box and click the “Install” button. \r\n6. Check the status of “Update” button on the right of the “Version” drop-down box. \r\n#### Expected:  \r\nThe “Update” button should be unclickable. \r\n#### Actual:  \r\nThe “Update” button is still clickable as below screenshot.  \r\n![custom version](https://user-images.githubusercontent.com/40230425/217186612-15b59acb-2a64-4d79-97d1-da68c1f4ba6a.png)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"26910909916","Type":"IssuesEvent","CreatedAt":"2023-02-06T23:37:37","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12415","RelatedDescription":"Opened issue \"Validate and show information during pack about missing readme file\" (#12415) at NuGet/Home","RelatedBody":"Validate and show information during pack about missing readme file.\r\nThis is the first step of task https://github.com/NuGet/Home/issues/12070"},{"Id":"26909287848","Type":"IssuesEvent","CreatedAt":"2023-02-06T21:55:56","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12414","RelatedDescription":"Opened issue \"Static graph-based restore improvements for 17.6\" (#12414) at NuGet/Home","RelatedBody":"## Issues\r\n- [ ] https://github.com/NuGet/Home/issues/12372\r\n- [ ] https://github.com/NuGet/Home/issues/12322\r\n- [ ] https://github.com/NuGet/Home/issues/12019\r\n- [ ] https://github.com/NuGet/Home/issues/11761\r\n- [ ] https://github.com/NuGet/Home/issues/11680\r\n- [ ] https://github.com/NuGet/Home/issues/10789\r\n- [ ] https://github.com/NuGet/Home/issues/9026\r\n- [ ] https://github.com/NuGet/Home/issues/9300"},{"Id":"26909168105","Type":"IssuesEvent","CreatedAt":"2023-02-06T21:49:53","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12413","RelatedDescription":"Opened issue \"Central Package Management improvements for 17.6\" (#12413) at NuGet/Home","RelatedBody":"- [ ] https://github.com/NuGet/Home/issues/12270"},{"Id":"26907460404","Type":"IssuesEvent","CreatedAt":"2023-02-06T20:20:29","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12376","RelatedDescription":"Closed issue \"Frequent error on sln restore: System.InvalidOperationException: Collection was modified; enumeration operation may not execute\" (#12376) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\nMSBuild version 17.5.0-preview-23053-01+ac0911a00 for .NET Framework ; VS 17.5 preview 3\r\n\r\n### Worked before?\r\n\r\nNot sure, I rearely use the command-line to restore\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\nWe have a solution with ~80 projets.\r\n\r\nWe use a custom nuget.config on the sln directory, which adds two packages sources (devops and devexpress) and I also jave a custom NuGet.config in %appdata%\\NuGet. Because of the stacktrace, I suppose there is something wrong (no concurrency supported) on some methods related to config and source loading.\r\n\r\nWhen using msbuild /t:Restore xxx.sln, I often receive this error. I have to run multiple retries for the restore to succeed.\r\n\r\nIf I try to build the sln using `msbuild xxx.sln` before, I found that the error occurs less often.\r\n\r\n### Verbose Logs\r\n\r\n```\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(132,5)\r\n: error : Collection was modified; enumeration operation may not execute. [C:\\code\\team\\Travel\\Goyave.sln]\r\n  System.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n     at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)\r\n     at System.Collections.Generic.Dictionary`2.Enumerator.MoveNext()\r\n     at NuGet.Configuration.UnknownItem.Merge(UnknownItem item)\r\n     at NuGet.Configuration.VirtualSettingSection.Merge(SettingSection other)\r\n     at NuGet.Configuration.NuGetConfiguration.MergeSectionsInto(Dictionary`2 sectionsContainer)\r\n     at NuGet.Configuration.Settings..ctor(IList`1 settingsFiles)\r\n     at NuGet.Configuration.Settings.LoadSettingsForSpecificConfigs(String root, String configFileName, List`1 validSet\r\n  tingFiles, IMachineWideSettings machineWideSettings, Boolean loadUserWideSettings, Boolean useTestingGlobalPath, Sett\r\n  ingsLoadingContext settingsLoadingContext)\r\n     at NuGet.Configuration.Settings.LoadSettingsGivenSettingsFiles(List`1 settings)\r\n     at NuGet.Configuration.Settings.LoadImmutableSettingsGivenConfigPaths(IList`1 configFilePaths, SettingsLoadingCont\r\n  ext settingsLoadingContext)\r\n     at NuGet.Commands.DependencyGraphSpecRequestProvider.Create(String projectNameToRestore, ExternalProjectReference\r\n  project, HashSet`1 projectReferenceClosure, RestoreArgs restoreArgs, DependencyGraphSpec projectDgSpec, SettingsLoadi\r\n  ngContext settingsLoadingContext)\r\n     at NuGet.Commands.DependencyGraphSpecRequestProvider.<>c__DisplayClass6_0.<GetRequestsFromItems>b__2(String projec\r\n  tNameToRestore)\r\n     at System.Threading.Tasks.Parallel.<>c__DisplayClass17_0`1.<ForWorker>b__1()\r\n     at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\r\n     at System.Threading.Tasks.Task.<>c__DisplayClass176_0.<ExecuteSelfReplicating>b__0(Object <p0>)\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-02-09T03:30:24.8374855Z","RunDurationInMilliseconds":1553}