{"Data":{"Blog":{"FeedItems":[{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14257831875","Type":"PullRequestEvent","CreatedAt":"2020-11-20T04:46:19","Actor":"smoothdeveloper","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8327","RelatedDescription":"Opened pull request \"add the dotnet fsi extensions\" (#8327) at NuGet/NuGetGallery","RelatedBody":"add the dotnet fsi extensions which allow to load packages in F# Interactive\r\n\r\nSince net 5 shipped, it is possible to use nuget packages from `dotnet fsi` through extensions: https://devblogs.microsoft.com/dotnet/announcing-f-5/#package-references-in-f-scripts"},{"Id":"14254843904","Type":"IssuesEvent","CreatedAt":"2020-11-19T21:41:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8130","RelatedDescription":"Closed issue \"Improve search: Re-evaluate camel-split strategy\" (#8130) at NuGet/NuGetGallery","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1021643/improve-searching-for-nuget-packages.html)._\n\n---\nI don't know whether there is a limitation with nuget.org itself (the website is similarly basic) but searching for a nuget package in Visual Studio could be significantly improved if the search box treated space-separated strings as separate tokens and _ANDED_ these together when performing the search.\n\nFor example, when entering \"imm coll l\" I'd want to see \"System.Collections.Immutable\"  - NOT every package that contains _either_ \"imm\" or \"coll\". (I can't imagine why this appears to be the default behaviour...)\n\nAlso, I'd like to be able to filter/rank based on number of downloads or \"last updated\" since there are a huge number of ancient packages which simply clutter up the result list\n\n---\n### Original Comments\n\n#### Feedback Bot on 5/8/2020, 01:34 AM: \n\nThank you for taking the time to provide your suggestion.  We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.\n#### Peter Shaw on 5/15/2020, 04:27 AM: \n\n<p>In response to this tweet I posted: </p><p>https://twitter.com/shawty_ds/status/1261061801959178241</p><p>I'd also like to back this suggestion up.</p><p>I understand the need for some results to show up when a user is not sure what they are searching for, but right now as it stands, Visual Studio NuGet search IS UNUSABLE unless you know the EXACT spelling of the package your looking for.</p><p>Mores the point, the sub-string search is way too LAX, for example I do a search for \"MapWinGis\" (I Know this term is used in the package description, but is not the namespace name) and I get 100's of results, simply because many package names have \"<strong>gi</strong>\", \"<strong>ma</strong>\", \"<strong>in</strong>\" or \"<strong>wi</strong>\" (\"wi\" being an incredibly popular term, since we are on windows), showing these results is absolutely not helpful.</p><p>Filtering and ranking the results list is a really good idea, and improving the search to be more like say google search so we can say for example \"MapWin\" \"GIS\" and that will return packages that contain those exact phrases, or for example \"Collections\" -\"Microsoft\" will return anything with the exact phrase \"Collections\" in, but only if it does NOT contain the exact phrase \"Microsoft\"</p><p>As much as I dislike google these days, I have to admit the search operators they have and the way they work, actually make for a very powerful search syntax, to be really specific about what your searching for, having something similar in NuGet would be very, very helpful, especially when you have companies like \"ThinkGeo\" who have literally filled the first 10 pages of NuGet with their \"free(but not actually free)\" GIS library (Try a search for GIS in NuGet and see how long it takes before you see anything other than their offering), it would allow us to filter out bad actors like this that are using NuGet to drive sales, and focus on finding what we need fast.</p>\n"},{"Id":"14254665931","Type":"IssuesEvent","CreatedAt":"2020-11-19T21:23:21","Actor":"Sergio0694","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8201","RelatedDescription":"Closed issue \"Poor/unrelated search results when not using the exact package name\" (#8201) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nSearching for the [`Microsoft.Toolkit.HighPerformance` package](https://www.nuget.org/packages/Microsoft.Toolkit.HighPerformance/) displays unrelated search results. This happens both on nuget.org and when searching through Visual Studio. It's almost impossible to find that package unless you actually know the exact name.\r\n\r\nNot exactly the same, but possibly related to https://github.com/NuGet/NuGetGallery/issues/8130?\r\n\r\n### To Reproduce\r\nHere's some search results I tried:\r\n\r\n⛔ \"microsoft high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381423-1eafe680-f10b-11ea-9c3d-6e11c3a8ce57.png)), the package is nowhere to be found\r\n⛔ \"microsoft highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381483-3a1af180-f10b-11ea-8c25-4a05e83bd5bb.png)), same as above\r\n⛔ \"Microsoft HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381513-4acb6780-f10b-11ea-9a3a-7192e410befe.png)), same\r\n⛔ \"microsoft toolkit high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381544-5a4ab080-f10b-11ea-8a11-24d6600a4e38.png)), same\r\n⛔ \"microsoft toolkit highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381566-68003600-f10b-11ea-8a7d-f5ec4d5dc4bd.png)), same\r\n\r\n✅ \"microsoft.toolkit.highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381616-7e0df680-f10b-11ea-8e86-b99fc8fb4a61.png)), works\r\n✅ \"Microsoft.Toolkit.HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381692-9a119800-f10b-11ea-820b-113cde208b39.png)), works too\r\n\r\n### Expected behavior\r\nThe `Microsoft.Toolkit.HighPerformance` should be the first result for all these various search queries.\r\n\r\n### Screenshots\r\nAttached a screen next to each tested query above.\r\n\r\n### Additional context\r\nIn case it helps, right now we have the following tags in the package:\r\n\r\n> UWP Toolkit Windows core standard unsafe span memory string array stream buffer extensions helpers parallel performance\r\n\r\nThough I'd expect the search results to display that package as first result even just based on the package name, as all those sample queries are an exact match for the package name, once tokenized with the `.` and converted to lowercase.\r\nI wouldn't expect users to search for the package by the exact name (which is also more verbose to type), especially if they just are not aware the package exists at all, so the way the search results are returned right now doesn't help with discoverability.\r\n\r\nThanks! 😊"},{"Id":"14244847820","Type":"IssuesEvent","CreatedAt":"2020-11-19T07:41:27","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8181","RelatedDescription":"Reopened issue \"[A11y][UI]No Visual representation is provided for required field 'Username' \" (#8181) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1184475\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450)\r\n\r\n\r\n## Repro Steps:\r\n\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"Open Profile drop down\" and press enter\r\n    Tab till \"API Keys\" and Press enter\r\n    Tab till \"Create button\" and press enter\r\n    Tab till \"Key Name\" editable field\r\n    Check whether a visual representation like asterisk is provided at the required field \"Key Name\" or not \r\n\r\n## Actual Results:\r\n\r\nNo Visual representation is provided for required field 'Username'\r\n## Expected Results:\r\nVisual representation like asterisk should be provided at the required fields.\r\n## User Impact:\r\nUsers may not understand if there is no visual representation at the required fields.\r\n\r\n## Notes:\r\nThis appears to be about adding an * by required fields in forms."},{"Id":"14240741163","Type":"IssuesEvent","CreatedAt":"2020-11-18T22:10:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8319","RelatedDescription":"Closed issue \"Please update latest version to 5.8.0\" (#8319) at NuGet/NuGetGallery","RelatedBody":"Please update the `https://dist.nuget.org/win-x86-commandline/latest/nuget.exe` version to 5.8.0 instead of 5.7.0.\r\n\r\nThere's a problem when using NuGet Restore with 5.7 and MSBuild 16.8 (https://developercommunity.visualstudio.com/content/problem/1248649/error-netsdk1005-assets-file-projectassetsjson-doe.html)\r\n\r\nChanging the \"latest\" version to 5.8.0 would fix many installations using cake-build (Or has @patriksvensson a better solution?)."},{"Id":"14240704198","Type":"IssuesEvent","CreatedAt":"2020-11-18T22:07:15","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8184","RelatedDescription":"Reopened issue \"[A11y][ARIA]The purpose of the Learn more link is not descriptive\" (#8184) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1184490\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450)\r\n\r\n\r\n## Repro Steps:\r\n\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"upload tab\" item and press enter\r\n    Tab till \"Verify\" drop down and press enter.\r\n    Tab till \"Learn more\" link\r\n    Check whether the purpose of the link is defined by the name of the link or not\r\n\r\n## Actual Results:\r\n\r\nThe purpose of the link is not descriptive for the \"Learn more\" and \"Read more\" links\r\n\r\n   \r\n## Expected Results:\r\nThe purpose of the link should be more descriptive. Screen reader should understand it clearly\r\n## User Impact:\r\nUsers with visual disabilities may find it difficult to understand the purpose of the link, if link name is not descriptive.\r\n\r\n## Notes\r\nUpdating the aria-label in this case to a more descriptive text is sufficient. See https://github.com/NuGet/NuGetGallery/issues/7879 for a similar fix."},{"Id":"14220654044","Type":"IssuesEvent","CreatedAt":"2020-11-17T14:47:48","Actor":"jzabroski","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8325","RelatedDescription":"Closed issue \"Nuget Package Version History sorting is incorrect for prerelease suffixes\" (#8325) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nNuGet Package Version History sorting is incorrect.  It sorted lexicographically rather than understanding the package versioning schema for beta releases.\r\n\r\nAs an example, RazorLight2.0.0-beta9 comes above RazorLight2.0.0-beta10.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Open web browser (mine is Chrome)\r\n2. Go to https://www.nuget.org/packages/RazorLight\r\n3. Expand \"Version History\" accordion control\r\n4. Observe that it sorts packages by major version number, but when you use prerelease suffixes, the sorting breaks.\r\n\r\n### Expected behavior\r\nWhy not just sort it by last updated date?\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/447485/99278405-fde7c980-27fc-11eb-9f09-a391ea63c2b2.png)\r\n\r\n\r\n### Additional context\r\nhttps://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages#semantic-versioning implies that `-alpha`, `-beta`, and `-rc` are well known pre-release tags, so it seems natural to expect these pre-release tags to also include version numbers and that these suffix version numbers to sort correctly.\r\n\r\nAlso, note that for packages like [Newtonsoft.Json](https://www.nuget.org/packages/Newtonsoft.Json/), where the major versions cross from 9 to 10, the major.minor.patch convention sorts correctly, so it seems like the issue is confined to just pre-release tags.  I realize pre-release tags can be any value, but the nuget docs literally suggest sticking with `-alpha`, `-beta`, and `-rc`"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14256696923","Type":"IssuesEvent","CreatedAt":"2020-11-20T01:39:50","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9311","RelatedDescription":"Closed issue \"No error occurred after packing and installing a package with an invalid .txt format icon\" (#9311) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.6.0.6509\r\nVS Version: Master\\29916.153\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tCreate a Class Library (.NET Framework 4.8) in VS and build the solution.\r\n2.\tIn the Developer Command Prompt for VS, create a nuspec file by executing command “nuget spec”\r\n3.\tMake an invalid image file (size limited to 1 MB with a .txt format) and locate in the package. Note: invalid means size limited to 1 MB with PNG/JPEG format and 128x128 resolution\r\n4.\tAdd following to nuspec file\r\n```\r\n<package>\r\n  <metadata>\r\n    ...\r\n    <icon>images\\icon.txt</icon>\r\n    ...\r\n  </metadata>\r\n  <files>\r\n    ...\r\n    <file src=\"C:\\Users\\v-luzh\\source\\repos\\Package1\\Package1\\icon.txt\" target=\"images\\\" />\r\n    ...\r\n  </files>\r\n</package>\r\n```\r\n5. Pack the package to local path by executing command “nuget pack”.\r\n\r\n## Expected\r\nThere should be an error to prevent packing a package with a text format icon in step 5.\r\n## Actual\r\nNo error occurred after packing a package with a text format icon in step 5.\r\n## Note\r\nIt's not a regression.\r\n\r\n"},{"Id":"14256689928","Type":"IssuesEvent","CreatedAt":"2020-11-20T01:38:40","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10308","RelatedDescription":"Opened issue \"Enrich Testing Guidelines in docs/coding-guidelines.md\" (#10308) at NuGet/Home","RelatedBody":"Follow up on comment https://github.com/NuGet/NuGet.Client/pull/3716#pullrequestreview-525229595"},{"Id":"14255494271","Type":"IssuesEvent","CreatedAt":"2020-11-19T22:50:41","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10300","RelatedDescription":"Closed issue \"nuget.exe -update self can't ... update itself to NuGet v5.8.0\" (#10300) at NuGet/Home","RelatedBody":"Version 5.8.0 is available for download on https://www.nuget.org/downloads, however nuget 5.7.0 is not able to update itself and download version 5.8.0.\r\n\r\n![image](https://user-images.githubusercontent.com/177608/99629817-10395180-2a0f-11eb-8fe6-b6a96a467e28.png)\r\n\r\n```\r\nC:\\augustoproiete>nuget.exe update -self\r\nChecking for updates from https://api.nuget.org/v3/index.json [https://api.nuget.org/v3/index.json].\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/nuget.commandline/index.json\r\nCurrently running NuGet.exe 5.7.0.\r\nNuGet.exe is up to date.\r\nUpdate successful.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/177608/99629325-33173600-2a0e-11eb-842a-58b49cb99aa4.png)\r\n\r\n## Repro steps\r\n\r\n1. Download NuGet v5.7.0\r\nhttps://dist.nuget.org/win-x86-commandline/v5.7.0/nuget.exe\r\n\r\n2. Run `nuget.exe update -self`\r\n\r\n## Version info\r\n\r\nNuGet version: 5.7.0.7 5.7.0+b804bf4ba62c0b47c77bbf3e22e196b57cd7a556.b804bf4ba62c0b47c77bbf3e22e196b57cd7a556"},{"Id":"14255323039","Type":"IssuesEvent","CreatedAt":"2020-11-19T22:30:28","Actor":"aolszowka","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10307","RelatedDescription":"Opened issue \"StaticGraphRestore Fails with NETSDK1004 in Some Scenarios\" (#10307) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: MSBuild /restore \r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.8.1+bd2ea1e3c for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.8.1.52902\r\n```\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows Server 1809 17763.1397\r\n\r\nWorked before?: Yes, without StaticGraph\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nUnclear on what exactly is happening here, but when using `/p:RestoreUseStaticGraphEvaluation=true` to get Static Graph we error with the following:\r\n\r\n```\r\n\"S:\\mobile\\All\\All.sln\" (Build target) (1:2) ->\r\n       \"S:\\mobile\\Core\\UserInterface\\XX.MobileCore.UserInterface\\XX.MobileCore.UserInterface.csproj\" (default target) (7:2) ->\r\n       (ResolvePackageAssets target) -> \r\n         C:\\Program Files\\dotnet\\sdk\\5.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(241,5): error NETSDK1004: Assets file 'S:\\mobile\\Core\\UserInterface\\XX.MobileCore.UserInterface\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file. [S:\\mobile\\Core\\UserInterface\\XX.MobileCore.UserInterface\\XX.MobileCore.UserInterface.csproj]\r\n```\r\n\r\nNot using Static Graph (IE not defining the switch) works just fine.\r\n\r\nWe're motivated to help solve the issue, but we are constrained as to giving you code that repros (we don't have time to narrow it down blindly, please give guidance)\r\n\r\n"},{"Id":"14255301133","Type":"IssuesEvent","CreatedAt":"2020-11-19T22:28:02","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10038","RelatedDescription":"Closed issue \"DotnetCLiToolReference restores make it difficult to reason about no-op projects count/uptodateprojectscount\" (#10038) at NuGet/Home","RelatedBody":"Take a sample project such as the below: \r\n\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.3\" />\r\n    <DotNetCliToolReference Include=\"dotnet-xunit\" Version=\"2.3.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.VisualStudio.Common/Telemetry/RestoreTelemetryEvent.cs initially report the following: \r\n\r\n| Restore type | NuGetProjectsCount | NoOpProjectsCount | UpToDateProjectsCount |\r\n|-|-|-|-|\r\n| Implicit | 1 | 0 | 0 | \r\n| On Build | 1 | 2 | 2 | \r\n\r\nThe reason why this happens is that DotnetCLiToolReference is a special restore that generates an assets file, but not nuget.g.* files. Furthermore these assets live in a special location. \r\n\r\nThis would make any assumptions based on NoOpProjects count slightly incorrect. \r\nGood news is that DotNetCliToolReference is not super common, but it is challenging as far as analysis goes. \r\n\r\ncc @aortiz-msft @dominoFire \r\n\r\nThis affects all our analysis. We should probably decide what actions/if any we can take sooner rather than later."},{"Id":"14255202921","Type":"IssuesEvent","CreatedAt":"2020-11-19T22:17:27","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10306","RelatedDescription":"Opened issue \"Create Mock factory for EnvDTE.DTE object\" (#10306) at NuGet/Home","RelatedBody":"There's no way to create a test instance of EnvDTE.DTE object for NuGet testing purposes.\r\n\r\nThis interface is hard to mock because it represents a large core part of Visual Studio.\r\n\r\nHaving a minimal, common EnvDTE.DTE  mock object factory would enable NuGet codebase developers to improve testing in VS-NuGet components."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-11-20T05:30:42.2384705Z","RunDurationInMilliseconds":1336}