{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39452300165","Type":"PullRequestEvent","CreatedAt":"2024-06-20T00:54:25","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10029","RelatedDescription":"Opened pull request \"New default package img, textare padding, reserved icon\" (#10029) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Detail 1\r\n* Detail 2\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39454422479","Type":"IssuesEvent","CreatedAt":"2024-06-20T03:24:55","Actor":"WeihanLi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13564","RelatedDescription":"Opened issue \"nuget package deprecate API support\" (#13564) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe, NuGet SDK\n\n### The Elevator Pitch\n\nSome packages are deprecated as scheduled, it would be great if we could support package deprecation via API, so that we could automate the deprecation process in automation job/CI etc\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39453055198","Type":"IssuesEvent","CreatedAt":"2024-06-20T01:49:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12950","RelatedDescription":"Reopened issue \"Cannot install, uninstall, or update ANY packages if one NuGet source is unreachable\" (#12950) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Current Behavior\n\nConsider this scenario:\r\n\r\nNuGet sources configured in Visual Studio:\r\n1. nuget.org (https://api.nuget.org/v3/index.json)\r\n2. GitHub (personal repo https://nuget.pkg.github.com/l33tc0d3r/index.json, needs authentication)\r\n3. CONTOSODEV (corporate server \\\\CONTOSODEV\\\\NuGet, needs VPN connection)\r\n\r\nSource mappings configured in Visual Studio:\r\n|Package|Source|\r\n|---|---|\r\n| com.contoso.* | CONTOSODEV |\r\n| l33tc0d3r.* | GitHub |\r\n| * | nuget.org |\r\n\r\nPackages installed in the open project:\r\n - com.contoso.discombobulator\r\n - l33tc0d3r.freakui3\r\n - Newtonsoft.Json\r\n\r\nNow when you want to update Newtonsoft.Json you can't if:\r\n\r\n1. You aren't connected to the corporate VPN\r\n2. You don't provide credentials for private GitHub packages repo (VS does not remember password across sessions*)\r\n\r\nYou cannot even remove the existing packages or install any new ones from nuget.org which should be possible even without having explicit mappings.\r\n\r\nI do understand the compatibility and security concerns if you were to fall back to different package repository, but this is beyond ridiculous and user-hostile behavior. If a package was installed from nuget.org, it's maintenance should not be affected by other sources being temporarily inaccessible.\n\n### Desired Behavior\n\n1. If a user tries to update or remove a package installed from a specific source and that source is accessible that should succeed &mdash; it shouldn't be all or nothing.\r\n2. If there is a mapping that says download `*.com.contoso` from `\\\\CONTOSODEV\\NuGet` and everything else from nuget.org and a user tries to install `Rick.Mapperly` that should succeed even if `\\\\CONTOSODEV\\NuGet` is not accessible otherwise what's the point in having source mappings in the first place?\r\n\n\n### Additional Context\n\n* Visual Studio does not save password for GitHub packages despite the checkbox \"Remember password\" being checked. That's a separate bug I guess should be reported."},{"Id":"39451154174","Type":"IssuesEvent","CreatedAt":"2024-06-19T23:20:24","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11943","RelatedDescription":"Closed issue \"[Feature]: add dotnet nuget why to dotnet CLI\" (#11943) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\r\n\r\ndotnet.exe\r\n\r\n### The Elevator Pitch\r\n\r\nThis is a tracking issue for feature request https://github.com/NuGet/Home/issues/11782\r\n\r\nDesign spec - [dotnet nuget why command](https://github.com/NuGet/Home/blob/dev/accepted/2022/dotnet-nuget-why-proposal.md) ([Spec PR](https://github.com/NuGet/Home/pull/11875))\r\n\r\nProof of concept: https://github.com/NuGet/NuGet.Client/tree/pragnya17-dotnet-nuget-why ([compare](https://github.com/NuGet/NuGet.Client/compare/dev...pragnya17-dotnet-nuget-why))\r\n\r\n### Additional Context and Details\r\n\r\n- [x] Add `dotnet nuget why` command - https://github.com/NuGet/Client.Engineering/issues/2862\r\n- [x] Add docs to `dotnet/docs` - https://github.com/NuGet/Home/issues/13499\r\n- [x] Add integration to `dotnet/sdk` - https://github.com/NuGet/Client.Engineering/issues/2861"},{"Id":"39451145735","Type":"IssuesEvent","CreatedAt":"2024-06-19T23:19:44","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13499","RelatedDescription":"Closed issue \"Add docs for `dotnet nuget why`\" (#13499) at NuGet/Home","RelatedBody":"We're adding a new `dotnet nuget why` command to the Dotnet CLI, allowing users to see the dependency graph for a given package dependency. We'll need to add documentation for this in the [dotnet/docs](https://github.com/dotnet/docs) repo.\r\n\r\nPart of https://github.com/NuGet/Home/issues/11943"},{"Id":"39449224970","Type":"IssuesEvent","CreatedAt":"2024-06-19T21:03:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13549","RelatedDescription":"Closed issue \"Option to ignore unsupported project types in command-line nuget and azure pipelines nuget\" (#13549) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\r\n\r\nNuGet.exe\r\n\r\n### The Elevator Pitch\r\n\r\nEdit: I just realized that while I discovered the issue on the azure pipelines server, it's much more severe there and is pretty mild on nuget.exe (which I was using to debug the problem, which is why I focused on nuget.exe).\r\n\r\nA solution file may contain project types that are not supported by nuget.exe.  For example, I'm facing this with a .modelproj - nuget chokes on this file within the solution.\r\n\r\nIf I attempt to nuget restore with msbuild.exe, it properly recognizes that it can't work with that .modelproj and moves on.\r\n\r\nThis same issue exists in Azure Pipelines nuget restore as well, since I think that uses nuget.exe under the hood.\r\n\r\n### Additional Context and Details\r\n\r\nEdit-Followup:\r\n\r\nNuget.exe *does* continue undaunted with the modelproj, it just throws ugly red text and error messages.  It looks like it finishes the restore and sets an exit code of 0.\r\n\r\nThe real problem is in the azure pipelines task, where we get a full stracktrace:\r\n\r\n```\r\nError parsing solution file at C:\\AgentPools\\Default\\Agent2\\_work\\271\\s\\<solutionfilename>.sln: Exception has been thrown by the target of an invocation.\r\nNuGet Version: 4.1.0.2450\r\n   at NuGet.CommandLine.MsBuildUtility.GetAllProjectFileNamesWithMsBuild(String solutionFile, String msbuildPath)\r\n   at NuGet.CommandLine.RestoreCommand.ProcessSolutionFile(String solutionFileFullPath, PackageRestoreInputs restoreInputs)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineRestoreInputsAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__30.MoveNext()\r\n\r\n```\r\n\r\nThis is mostly a convenience thing.  It'd be nice to be able to just do `nuget restore <solutionfile>` and not have to worry about which containing projects it can handle.\r\n\r\nNuget.exe beahviors:\r\n\r\nThis is the error I get:\r\n\r\n```\r\nJun14 14:44:10 C:\\tfs\\<SolutionDir> [main ≡]\r\n> nuget restore .\\<SolutionFile>\r\nMSBuild auto-detection: using msbuild version '17.10.4.21802' from 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\bin'.\r\nC:\\tfs\\<SolutionDir>\\<ProjectName>\\<ProjectName>.modelproj(27,11): error MSB4226: The imported project \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Microsoft\\VisualStudio\\v17.0\\ArchitectureTools\\Microsoft.VisualStudio.TeamArchitect.ModelingProject.targets\" was not found. Also, tried to find \"ArchitectureTools\\Microsoft.VisualStudio.TeamArchitect.ModelingProject.targets\" in the fallback search path(s) for $(VSToolsPath) - \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v17.0\" . These search paths are defined in \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\bin\\msbuild.exe.Config\". Confirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search paths.\r\n\r\nWARNING: Error reading msbuild project information, ensure that your input solution or project file is valid. NETCore and UAP projects will be skipped, only packages.config files will be restored.\r\nAll packages listed in packages.config are already installed.\r\n  CACHE https://api.nuget.org/v3/vulnerabilities/index.json\r\n  CACHE https://api.nuget.org/v3-vulnerabilities/2024.06.14.05.22.49/vulnerability.base.json\r\n  CACHE https://api.nuget.org/v3-vulnerabilities/2024.06.14.05.22.49/2024.06.14.05.22.49/vulnerability.update.json\r\n```\r\n\r\nWhen using msbuild, this is what I get:\r\n\r\n```\r\n& 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe' -t:restore .\\<SolutionFile>\r\nMSBuild version 17.10.4+10fbfbf2e for .NET Framework\r\nBuild started 2024-06-14 2:39:54 PM.\r\n\r\nProject \"C:\\tfs\\<SolutionDirectory>\\<SolutionFile>\" on node 1 (Restore target(s)).\r\nValidateSolutionConfiguration:\r\n  Building solution configuration \"Debug|Mixed Platforms\".\r\nC:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\\<ProjectFile>.modelproj : warning NU1503: Skipping restore for project 'C:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\r\ning\\<ProjectFile>.modelproj'. The project file may be invalid or missing targets required for restore. [C:\\tfs\\<SolutionDirectory>\\<SolutionFile>]\r\n_GetAllRestoreProjectPathItems:\r\n  Determining projects to restore...\r\nRestore:\r\n  X.509 certificate chain validation will use the default trust store selected by .NET for code signing.\r\n  X.509 certificate chain validation will use the default trust store selected by .NET for timestamping.\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\nDone Building Project \"C:\\tfs\\<SolutionDirectory>\\<SolutionFile>\" (Restore target(s)).\r\n\r\n\r\nBuild succeeded.\r\n\r\n\"C:\\tfs\\<SolutionDirectory>\\<SolutionFile>\" (Restore target) (1) ->\r\n(_FilterRestoreGraphProjectInputItems target) ->\r\n  C:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\\<ProjectFile>.modelproj : warning NU1503: Skipping restore for project 'C:\\tfs\\<SolutionDirectory>\\<ProjectDirectory>\\<ProjectFile>.modelproj'. The project file may be invalid or missing targets required for restore. [C:\\tfs\\<SolutionDirectory>\\<SolutionFile>]\r\n\r\n    1 Warning(s)\r\n    0 Error(s)\r\n```"},{"Id":"39448794909","Type":"IssuesEvent","CreatedAt":"2024-06-19T20:40:22","Actor":"tmat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13563","RelatedDescription":"Opened issue \"Restore may write nulls to project.assets.json \" (#13563) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n9.0.100-preview.5.24307.3\n\n### Worked before?\n\n9.0.100-preview.3.24204.13\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nSDK task ResolvePackageAssets throws NRE while enumerating `NuGet.ProjectModel.ProjectFileDependencyGroup.Dependencies`, which returns null. \r\n\r\nI'm guessing that's because the `project.assets.json` contains nulls in `projectFileDependencyGroups`, which it probably shouldn't. Somehow nuget restore managed to produce these:\r\n\r\n```\r\n\"libraries\": {},\r\n  \"projectFileDependencyGroups\": {\r\n    \".NETFramework,Version=v4.7.2\": [\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n      \"Microsoft.DotNet.Build.Tasks.VisualStudio >= 9.0.0-beta.24317.3\",\r\n      \"Microsoft.Net.Compilers.Toolset >= 4.11.0-2.24270.4\",\r\n      \"Microsoft.VisualStudioEng.MicroBuild.Plugins.SwixBuild >= 1.1.286\"\r\n    ]\r\n  },\r\n```\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\9.0.100-preview.5.24307.3\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.NET.Build.Tasks.ProjectContext.<>c__DisplayClass31_0.<GetTopLevelDependencies>b__3(String projectFileDependency)\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter.ComputePackageExclusions()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() \r\n[D:\\R4\\src\\VisualStudio\\Setup\\Roslyn.VisualStudio.Setup.csproj]\r\n```\r\n\r\n\n\n### Verbose Logs\n\n```shell\nCan share binlog.\n```\n"},{"Id":"39447744248","Type":"IssuesEvent","CreatedAt":"2024-06-19T19:45:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13551","RelatedDescription":"Closed issue \"\"Static graph-based restore failed with exit code 1 but did not log an error.\" failure in dotnet/runtime repo\" (#13551) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n.NET SDK 9.0.100-preview.5.24307.3\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis is intermittent build error encountered by dotnet/runtime repo build. https://github.com/dotnet/runtime/issues/103526 is going to have statics on how often it occurs.\n\n### Verbose Logs\n\n```shell\nLog https://dev.azure.com/dnceng-public/public/_build/results?buildId=709057&view=logs&j=bdec34cc-8c67-558e-657b-d36a4105119f&t=a678ac1d-afa2-555a-c9f2-128b541774a9&l=605:\r\n\r\n...\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\shims\\stubs\\System.IO.Packaging.csproj (in 0.8 ms).\r\nFailed to restore D:\\a\\_work\\1\\s\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable.csproj (in 271 ms).\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\shims\\stubs\\System.Diagnostics.PerformanceCounter.csproj (in 0.8 ms).\r\n...\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\sfx-gen.proj (in 0.6 ms).\r\n2D:\\a\\_work\\1\\s\\.dotnet\\sdk\\9.0.100-preview.5.24307.3\\NuGet.RestoreEx.targets(19,5): error : Static graph-based restore failed with exit code '1' but did not log an error. Please file an issue at https://github.com/NuGet/Home. [D:\\a\\_work\\1\\s\\Build.proj]\r\n```\n```\n"},{"Id":"39444856186","Type":"IssuesEvent","CreatedAt":"2024-06-19T17:25:31","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13555","RelatedDescription":"Closed issue \"Narator does not read the value of  `allowInsecureConnections` \" (#13555) at NuGet/Home","RelatedBody":"How to replicate\r\n\r\n1. create dotnet project\r\n2. add a nuget.config file with an http source\r\n3. set the http source allowInsecureConnections value to true\r\n4. Now press ctrl+windows+enter to start narrator\r\n5. Open PMUI and select the http package source\r\n6. Listen to the narrator, it reads a warning even though there should not be a warning.\r\n\r\nThis is caused because the allowInsecureConnections value is not propagated down to the accessibility object"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-20T03:30:18.9796393Z","RunDurationInMilliseconds":1038}