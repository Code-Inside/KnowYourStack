{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14421749064","Type":"IssuesEvent","CreatedAt":"2020-12-05T00:11:24","Actor":"zkat","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8345","RelatedDescription":"Opened issue \"We are interested in your feedback about the NuGet Gallery repo!\" (#8345) at NuGet/NuGetGallery","RelatedBody":"Thanks for all of your contributions to this project! We have created a survey that we hope allows us to learn what works and what needs attention. It's a little bit less than 30 questions, many of them multiple-choice questions. If maybe takes 10 minutes to complete and it’s anonymous. Your responses will help us make your experience better in this repo.\r\n\r\nhttps://www.surveymonkey.com/r/92RLF7R?Source=NuGet/NuGetGallery"},{"Id":"14419312433","Type":"PullRequestEvent","CreatedAt":"2020-12-04T19:12:38","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8327","RelatedDescription":"Closed pull request \"add the dotnet fsi extensions\" (#8327) at NuGet/NuGetGallery","RelatedBody":"add the dotnet fsi extensions which allow to load packages in F# Interactive\r\n\r\nSince net 5 shipped, it is possible to use nuget packages from `dotnet fsi` through extensions: https://devblogs.microsoft.com/dotnet/announcing-f-5/#package-references-in-f-scripts"},{"Id":"14419260220","Type":"IssuesEvent","CreatedAt":"2020-12-04T19:07:07","Actor":"losolio","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8344","RelatedDescription":"Opened issue \"Cannot convert account to organization\" (#8344) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Log with my account `losol`, go to this URL 'https://www.nuget.org/account/transform.', add losolio as new admin\r\n1. Log in as losolio, go to `https://www.nuget.org/account/Organizations`\r\n2. Perform this operation: accept joining organization by clicking the V\r\n3. See error: Oops! Error 500 - Internal Server Error. An error occurred while processing your request. We really messed up this time...\r\n\r\n### Expected behavior\r\nJoining losol organization\r\n"},{"Id":"14411738044","Type":"IssuesEvent","CreatedAt":"2020-12-04T07:47:52","Actor":"BaronGreenback","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8342","RelatedDescription":"Closed issue \"Issue with Package / Namespace mismatch.\" (#8342) at NuGet/NuGetGallery","RelatedBody":"Microsoft Visual Studio Community 2019 Version 16.8.2\r\n\r\nI'm hoping there is an easy solution, as I'm linking to dll's to bypass this.\r\n\r\nI'm working on a very large solution containing multiple projects. \r\nThe project is open source, and has forked from the original, meaning the NuGet package names have had to be changed.\r\n\r\nThe issue seems to be one of the package being built with the namespaces instead of the package name.\r\n\r\nNamespace info\r\n![image](https://user-images.githubusercontent.com/22121540/101077798-3d543b00-359d-11eb-82ad-3f574d6be186.png)\r\n\r\nPackage Info\r\n![image](https://user-images.githubusercontent.com/22121540/101077710-1d247c00-359d-11eb-8ced-632f2d435f97.png)\r\n\r\nWhen jellyfin.Controller is imported into a plugin (via the NuGet manager) which I'm trying to develop, the following error is reported. (The NuGets are in a locally stored folder).\r\n```\r\nNU1101: Unable to find package MediaBrowser.Model. No packages exist with this id in source(s): Local, nuget.org\r\n```\r\n\r\nOn further investigation - the following is showing under dependencies.\r\n![image](https://user-images.githubusercontent.com/22121540/101078053-8e642f00-359d-11eb-96ec-a717c6e727cf.png)\r\n\r\nMediaBrowser.Common and MediaBrowser.Model don't exist with that name as packages, but like Jellyfin.Controller have different package names than their namespaces. The are, in fact, called Jellyfin.Common and Jellyfin.Model.\r\n\r\nSo the package is looking to import the namespace and can't find it, as it's in a package with a different name.\r\n\r\nAm I missing something?\r\n"},{"Id":"14408721846","Type":"PullRequestEvent","CreatedAt":"2020-12-04T00:27:49","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8343","RelatedDescription":"Opened pull request \"Surface vulnerabilities in package detail page\" (#8343) at NuGet/NuGetGallery","RelatedBody":"First steps in addressing https://github.com/NuGet/NuGetGallery/issues/7650\r\nIn this PR we have:\r\n- the feature flag\r\n- initial changes to the view model\r\n- initial changes to the view--we'll iterate on this in consultation with PM (for example, we don't yet have the distinction between a customer view and an owner view of the vulnerability expander, we will need to discuss tooltip and other language used, etc)--but we're under a feature flag in order to do this iteratively\r\n- test coverage will need to be augmented (refactored, actually) and I want to do this in a different PR, as some class renames will affect vulnerability ingestion code--it will be noisy, so I'll separate it out for reviewing\r\n\r\nHere is the current state of the view, highlights in red boxes:\r\n![image](https://user-images.githubusercontent.com/14225979/101106161-33711d00-361b-11eb-80e9-40e734ec3e66.png)\r\n\r\nBecause deprecations and vulnerabilities share the same bang, you'll see a combining of the logic in the view, and combination messages in the tooltip. These can be sweetened later as well, of course."},{"Id":"14407694557","Type":"IssuesEvent","CreatedAt":"2020-12-03T22:18:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8316","RelatedDescription":"Closed issue \"Support packages with minClientVersion of 5.8.0\" (#8316) at NuGet/NuGetGallery","RelatedBody":"NuGet.exe v5.8.0 was released today.\r\n\r\nSee: https://docs.microsoft.com/en-us/nuget/reference/nuspec#minclientversion"},{"Id":"14405951343","Type":"IssuesEvent","CreatedAt":"2020-12-03T19:29:06","Actor":"BaronGreenback","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8342","RelatedDescription":"Opened issue \"Issue with Visual Studio packaging\" (#8342) at NuGet/NuGetGallery","RelatedBody":"Microsoft Visual Studio Community 2019 Version 16.8.2\r\n\r\nI have a very large solution containing multiple projects. \r\nThe project is open source, and has forked from the original, meaning the nuget package names have changed.\r\n\r\nThe issue seems to be one of the package being built with the namespaces instead of the package name.\r\n\r\nNamespace into\r\n![image](https://user-images.githubusercontent.com/22121540/101077798-3d543b00-359d-11eb-82ad-3f574d6be186.png)\r\n\r\nPackage Info\r\n![image](https://user-images.githubusercontent.com/22121540/101077710-1d247c00-359d-11eb-8ced-632f2d435f97.png)\r\n\r\nWhen these are imported into a plugin, the following error is reported. The nugets are in a locally stored folder.\r\n```\r\nNU1101: Unable to find package MediaBrowser.Model. No packages exist with this id in source(s): Local, nuget.org\r\n```\r\n\r\nOn further investigation - the following is showing under dependencies.\r\n![image](https://user-images.githubusercontent.com/22121540/101078053-8e642f00-359d-11eb-96ec-a717c6e727cf.png)\r\n\r\nMediaBrowser.Common and MediaBrowser.Model don't exist with that name as packages, but are called Jellyfin.Common and Jellyfin.Model as like above both are packaged with a different name.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14422001142","Type":"IssuesEvent","CreatedAt":"2020-12-05T01:01:56","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10362","RelatedDescription":"Opened issue \"Replace GetService with GetServiceAsync in NuGet.Clients, Part 1\" (#10362) at NuGet/Home","RelatedBody":"Here addressing \"Recommended practice of acquiring VS services is always calling `GetServiceAsync` to avoid the high risk of deadlock\". \nSince there are 34 GetService() calls to be replaced in 24 files we're doing it incrementally, this is part1 of [issue#3784](https://github.com/nuget/home/issues/3784) .\nI'm not going to list which of 34 occurance of `GetService()` calls are addressed now. Because I'm going to created sheet with detailed explanation for how each of 34 instances are addressed, for example some of them may not need to be replaced then I'll explain why."},{"Id":"14421612673","Type":"IssuesEvent","CreatedAt":"2020-12-04T23:46:33","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10361","RelatedDescription":"Opened issue \"SimpleTestPackageUtility.CreateFolderFeedV3Async doesn't create nupkg file in same location as other OS\" (#10361) at NuGet/Home","RelatedBody":"I saw Linux unit test failing because nupkg file created by `SimpleTestPackageUtility.CreateFolderFeedV3Async()` is not same as other OS.\nOther OS it's always located in `PackageName>>Version>>PackageNameVersion.nupkg`\nMAC:\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/6f32a44b-b20f-4b08-a74a-7d6caf6551f6)\nWindows:\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/2f49d445-81cc-4835-9c01-7b7459b8e1da)\n\nI can't test exactly where is nupkg on Linux because I don't have Linux env now."},{"Id":"14421053395","Type":"IssuesEvent","CreatedAt":"2020-12-04T22:22:11","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10360","RelatedDescription":"Opened issue \"We are interested in your feedback about the NuGet repo!\" (#10360) at NuGet/Home","RelatedBody":"Thanks for all of your contributions to this project! We have created a survey that we hope allows us to learn what works and what needs attention. It's a little bit less than 30 questions, many of them multiple-choice questions. If maybe takes 10 minutes to complete and it’s anonymous. Your responses will help us make your experience better in this repo.\r\n\r\nhttps://www.surveymonkey.com/r/92RLF7R?Source=NuGet/Home"},{"Id":"14420574715","Type":"IssuesEvent","CreatedAt":"2020-12-04T21:25:53","Actor":"GitZinger","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10298","RelatedDescription":"Closed issue \"vs2019, when installing some package with NuGet, get the error \"you are trying to install this package into a project that targets 'native,Version=v0.0\"\" (#10298) at NuGet/Home","RelatedBody":"Remove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\nI create an empty project. also now there is no network choice when creating a new project in vs 2019\r\n\r\nCould not install package AWSSDK.Core  \r\n```\r\nYou are trying to install this package into a project \r\nthat targets 'native,Version=v0.0', \r\nbut the package does not contain any assembly references \r\nor content files \r\nthat are compatible \r\nwith that framework. For more information, \r\ncontact the package author.\t\r\n```\t\t\t\r\nbut I set the\r\n\r\n```\r\nproject property -> configuration properties-> c++/cli  properties \r\n->.net target framework version : v.50\r\n```\r\n\r\n\r\nplease help me here!\r\n\r\nI really appreciate it!\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nvs ui NuGet solution\r\nNuGet version (x.x.x.xxx):\r\nunknown\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n2019 community\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nwin 10\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. create an empty project\r\n\r\n2. install AWSSDK.Core\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14420549329","Type":"IssuesEvent","CreatedAt":"2020-12-04T21:23:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10331","RelatedDescription":"Closed issue \"CPVM seems not to take FrameworkReferences into account\" (#10331) at NuGet/Home","RelatedBody":"## Description\r\n\r\nProjects that use central package version management can produce different DLLs in the output if there is a project that uses `PackageReference` for a specific dependency while another uses `FrameworkReference` indirectly for the same dependency.\r\n\r\n## Steps to reproduce\r\n\r\n1. Clone this repository: https://github.com/MichaeIDietrich/TestCpvmWithFrameworkReferences\r\n   * One project references `Microsoft.Extensions.DependencyInjection.Abstractions` directly using the related NuGet package while the other project references this assembly indirectly by using ASP.NET Core FrameworkReference\r\n2. Open cmd.exe in the repo root folder\r\n3. Run `dotnet publish`\r\n\r\n## Actual behavior\r\n\r\nIf you check the publish folder (_%Project name%\\bin\\Debug\\netcoreapp3.1\\win-x64\\publish_) of both projects and inspect the details of `Microsoft.Extensions.DependencyInjection.Abstractions.dll`, you will see that the DLLs are different:\r\n\r\n### For project _LibraryUsingServiceProvider_\r\n\r\n```\r\nInternalName:     Microsoft.Extensions.DependencyInjection.Abstractions.dll\r\nOriginalFilename: Microsoft.Extensions.DependencyInjection.Abstractions.dll\r\nFileVersion:      3.100.920.47302\r\nFileDescription:  Microsoft.Extensions.DependencyInjection.Abstractions\r\nProduct:          Microsoft .NET Extensions\r\nProductVersion:   3.1.9+d8a50ea1cc9892cda13c5237dec402ca10ddeaa1\r\nSize:             36.8 KB\r\n```\r\n\r\n### For project _WebProject_\r\n\r\n```\r\nInternalName:     Microsoft.Extensions.DependencyInjection.Abstractions.dll\r\nOriginalFilename: Microsoft.Extensions.DependencyInjection.Abstractions.dll\r\nFileVersion:      3.100.920.47302\r\nFileDescription:  Microsoft.Extensions.DependencyInjection.Abstractions\r\nProduct:          Microsoft .NET Extensions\r\nProductVersion:   3.1.9+d8a50ea1cc9892cda13c5237dec402ca10ddeaa1\r\nSize:             70.8 KB\r\n```\r\n\r\n_Both have different sizes!_\r\n\r\n## Expected behavior\r\n\r\nResulting DLLs for projects that use central NuGet package version management are identical.\r\n\r\n## Version info\r\n\r\ndotnet SDK version: 5.0.100\r\n\r\nWindows version: 20H2 (Build 19042.630)\r\n\r\n## Details about the problem\r\n\r\nThe reason for this might be that the NuGet package uses a .NET Standard 2.0 variant while the ASP.NET Core Framework has a .NET Core 3.1 variant of this DLL.\r\n\r\nIs there a way to resolve this mismatch? Currently we have problems with publishing, since we expect all projects to have identical DLLs when building the installer, since all files will end up in the same installation folder. We have found no real way to determine which DLL we should pick, since both have identical version information.\r\n\r\nAt the moment we work around this issue by adding the ASP.NET Core FrameworkReference as dependency to all top level projects, but I hope there is a better way to resolve this.\r\n\r\nCan you please help us with this issue?"},{"Id":"14420456116","Type":"IssuesEvent","CreatedAt":"2020-12-04T21:12:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10317","RelatedDescription":"Closed issue \"ACLs mess with the reading of  NuGetDefaults \" (#10317) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0.7\r\n\r\ndotnet.exe --version (if appropriate): 3.1.404\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Debian Buster\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Make sure you have a clean installation (e.g. no dotnet restore or smth. similar called)\r\n\r\n2. Create a file root owned */etc/opt/NuGet/NuGetDefaults.config* and add content. E.g.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"local\" value=\"/var/lib/dotnet/packages\" />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </packageSources>\r\n  <disabledPackageSources>\r\n    <add key=\"nuget.org\" value=\"true\" />\r\n  </disabledPackageSources>\r\n</configuration>\r\n```\r\n\r\n3. Make sure permissions are readonly for other users:\r\n\r\n```\r\n-rw-r--r--. 1 root root 336 Nov 20 07:32 /etc/opt/NuGet/NuGetDefaults.config\r\n``` \r\n\r\n4. Create a new project as root  `dotnet new console` somewhere\r\n\r\n5. Login as other user & try to create also a new console app\r\n\r\n6. Observe the error\r\n\r\n```\r\n/usr/share/dotnet/sdk/3.1.404/NuGet.targets(557,5): error : The type initializer for 'NuGet.Configuration.ConfigurationDefaults' threw an exception. [/tmp/example/client/client.csproj]\r\n\r\n/usr/share/dotnet/sdk/3.1.404/NuGet.targets(557,5): error :   Unable to obtain lock file access on '/tmp/NuGetScratch/lock/68c94b3156f40e62c7ce7afc81fc0b62c95ef99f' for operations on '/etc/opt/NuGet/NuGetDefaults.config'. This may mean that a different user or administator is holding this lock and that this process does not have permission to access it. If no other process is currently performing an operation on this file it may mean that an earlier NuGet process crashed and left an inaccessible lock file, in this case removing the file '/tmp/NuGetScratch/lock/68c94b3156f40e62c7ce7afc81fc0b62c95ef99f' will allow NuGet to continue. [/tmp/example/client/client.csproj]\r\n```\r\n\r\nI think the expected behavior is that the locks are not applied to a shared \"read-only\" resource like NuGetDefaults?\r\n\r\n## Other suggested things\r\n\r\n### Sample Project\r\n\r\nI will add an example docker image asap\r\n\r\n"},{"Id":"14420064170","Type":"IssuesEvent","CreatedAt":"2020-12-04T20:30:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8127","RelatedDescription":"Closed issue \"Nuget.exe actions take long to execute\" (#8127) at NuGet/Home","RelatedBody":"\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe \r\nNuGet version 3.4.4.1321\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? Yes. Having issues with perfomance.\r\n\r\n1. Execuring nuget actions took 2.5+ minutes when installing  Cake and Nunit packages on TFS Version 15.117.27414.0\r\n\r\n\r\n2019-05-13T12:40:40.1502988Z Executing nuget actions took 2.5 min\r\n\r\n\r\n"},{"Id":"14419802466","Type":"IssuesEvent","CreatedAt":"2020-12-04T20:02:55","Actor":"zxa4fd","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10359","RelatedDescription":"Opened issue \"Is there a way to specify NuGet to save the packages in anoter location?\" (#10359) at NuGet/Home","RelatedBody":"In maven, we can specify to save the JARs to a different folder, when we specify it is the `settings.xml` file is there an equivalent in NuGet? I've seen solutions where we need to specify it in a solution. Is there a way to configure this globally?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-12-05T05:30:37.0184007Z","RunDurationInMilliseconds":1508}