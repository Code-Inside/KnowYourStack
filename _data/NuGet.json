{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"44557496722","Type":"PullRequestEvent","CreatedAt":"2024-12-06T22:24:27","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10301","RelatedDescription":"Merged pull request \"[HotFix] Fix update path not being reached.\" (#10301) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* The `GitHubVulnerabilities2v3` job was not reaching the index file due to a bug on the `FlushAsync` method where the `ExistAsync` require just the file name instead of the whole file uri.\r\n* e.g. It expected only `index.json` instead of the `<storageaccount>/v3-vulnerabilities/index.json`.\r\n* Before the fix, this method was looking for a file named `<storageaccount>/v3-vulnerabilities/<storageaccount>/v3-vulnerabilities/index.json`.\r\n \r\nAddresses: https://github.com/NuGet/Engineering/issues/5720"},{"Id":"44557042028","Type":"PullRequestEvent","CreatedAt":"2024-12-06T22:01:28","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10301","RelatedDescription":"Opened pull request \"[HotFix] Fix update path not being reached.\" (#10301) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* The `GitHubVulnerabilities2v3` job was not reaching the index file due to a bug on the `FlushAsync` method where the `ExistAsync` require just the file name instead of the whole file uri.\r\n* e.g. It expected only `index.json` instead of the `<storageaccount>/v3-vulnerabilities/index.json`.\r\n* Before the fix, this method was looking for a file named `<storageaccount>/v3-vulnerabilities/<storageaccount>/v3-vulnerabilities/index.json`.\r\n \r\nAddresses: https://github.com/NuGet/Engineering/issues/5720"},{"Id":"44556629367","Type":"PullRequestEvent","CreatedAt":"2024-12-06T21:41:35","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10300","RelatedDescription":"Merged pull request \"[MR] markdown render with html sanitizer\" (#10300) at NuGet/NuGetGallery","RelatedBody":"Already deployed to production. \r\n\r\nMerge to production to create release package for security advisory "},{"Id":"44551638268","Type":"PullRequestEvent","CreatedAt":"2024-12-06T18:12:36","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10300","RelatedDescription":"Opened pull request \"[MSRC] markdown render with html sanitizer\" (#10300) at NuGet/NuGetGallery","RelatedBody":"Already deployed to production. \r\n\r\nMerge to production to create release package for security advisory "},{"Id":"44547671224","Type":"IssuesEvent","CreatedAt":"2024-12-06T15:56:12","Actor":"WeihanLi","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10299","RelatedDescription":"Opened issue \"[NuGet.org Bug]: deprecate package not reported when dotnet build/list package\" (#10299) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen I deprecate a nuget package version on nuget.org, `dotnet build`/`dotnet list packages --deprecated`/`dotnet list package --vulnerable` not reported this package version\r\n\r\n\n\n### Repro Steps\n\n1. deprecate a nuget package version on nuget.org\r\n2. reference the deprecated version in a project\r\n3. run `dotnet build`/`dotnet list packages --deprecated`/`dotnet list package --vulnerable` to see whether there's a warning\n\n### Expected Behavior\n\nIt should report warning since the package version is vulnerable\n\n### Screenshots\n\n\r\n![image](https://github.com/user-attachments/assets/f1cfcbeb-af9d-4053-bbac-3c6e44f94751)\r\n\r\n![image](https://github.com/user-attachments/assets/7d1a8f8d-cb88-4d3c-96f0-1866f37760b2)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"44572463625","Type":"IssuesEvent","CreatedAt":"2024-12-08T01:25:17","Actor":"teo-tsirpanis","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13990","RelatedDescription":"Opened issue \"Support pinning `NETStandard.Library` in CPM.\" (#13990) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nI discovered that if you manually reference the latest version of `NETStandard.Library` while referencing a .NET Standard 1.x only package, the dozens of NS1's transitive dependencies disappear when your project targets a framework compatible with .NET Standard 2.0. However if you have Central Package Management enabled, pinning `NETStandard.Library` with `PackageVersion` is not possible and results in [NU1009](https://learn.microsoft.com/en-gb/nuget/reference/errors-and-warnings/NU1009) errors.\r\n\r\nIt would be great if this was somehow allowed, and would enable getting rid of pinning to non-vulnerable packages brought by NS1.x, like what MSBuild has to do ([1](https://github.com/dotnet/msbuild/blob/6ca999210ce0e6541d92532874b732c4fceee8de/eng/dependabot/Packages.props#L46-L50), [2](https://github.com/dotnet/msbuild/blob/6ca999210ce0e6541d92532874b732c4fceee8de/eng/dependabot/Packages.props#L58-L59)).\n\n### Additional Context and Details\n\nThere are multiple ways of achieving this, ranging from just not failing when that library is pinned with `PackageVersion`, updating the meaning of the existing `NetStandardImplicitPackageVersion` property, up to automatically referencing a new version of the library in an opt-out fashion."},{"Id":"44562222404","Type":"IssuesEvent","CreatedAt":"2024-12-07T05:43:14","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/13982","RelatedDescription":"Reopened issue \"Visual Studio Nuget update suggestion ignores current .net framework in project\" (#13982) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 17.12.3\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1) Create project with .net8 and add an older nuget version with .net 8 support which only supports .net9 in the latest version.\r\n2) Open Nuget manager UI\r\n3) Go to tab \"Updates\"\r\n\r\nYou will see that it will suggest you the latest version which is not supported by the current project. This update should not be suggested. Because of this an auto update is no longer supported on this project. Each update must be done manually.\r\n![nugetupdatesuggestion](https://github.com/user-attachments/assets/b672a0a5-673a-430b-9240-d0da512ff409)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"44562212802","Type":"IssuesEvent","CreatedAt":"2024-12-07T05:41:58","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13982","RelatedDescription":"Closed issue \"Visual Studio Nuget update suggestion ignores current .net framework in project\" (#13982) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio 17.12.3\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1) Create project with .net8 and add an older nuget version with .net 8 support which only supports .net9 in the latest version.\r\n2) Open Nuget manager UI\r\n3) Go to tab \"Updates\"\r\n\r\nYou will see that it will suggest you the latest version which is not supported by the current project. This update should not be suggested. Because of this an auto update is no longer supported on this project. Each update must be done manually.\r\n![nugetupdatesuggestion](https://github.com/user-attachments/assets/b672a0a5-673a-430b-9240-d0da512ff409)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"44551259325","Type":"IssuesEvent","CreatedAt":"2024-12-06T17:58:07","Actor":"paulmedynski","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13989","RelatedDescription":"Opened issue \"NuGet config file name inconsistent when accessing via WSL UNC paths\" (#13989) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe\n\n### Product Version\n\n9.0.101\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n### Describe the bug\r\n\r\nOn WSL Linux and Windows, with the project on the local filesystem, `dotnet nuget config paths` will consider a file named `nuget.config`,  `NuGet.config`, or `NuGet.Config` at the solution/project root.\r\n\r\nOn Windows, accessing the project via WSL UNC paths or mapped drives, `dotnet nuget config paths` will only consider a file named `NuGet.Config`.\r\n\r\nThe CLI tools should be consistent regarding which NuGet config filenames are considered regardless of paths or filesystems.\r\n\r\n### To Reproduce\r\n\r\nIn WSL, create a new project\r\n```\r\n$ mkdir NugetIssue\r\n$ cd NugetIssue\r\n$ dotnet new console\r\n```\r\n\r\nCreate a Nuget config file named `nuget.config` with the following content:\r\n```\r\n﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n  </packageSources>\r\n</configuration>\r\n```\r\n\r\nIn WSL, check that the NuGet config file will be considered:\r\n```\r\n$ dotnet nuget config paths\r\n/home/paul/dev/NugetIssue/nuget.config\r\n/home/paul/.nuget/NuGet/NuGet.Config\r\n```\r\n\r\nIn a Windows CMD or PowerShell prompt, navigate to the WSL directory:\r\n```\r\nPS C:\\Users\\paulmedynski> D:\r\nPS D:\\> cd \\home\\paul\\dev\\NugetIssue\r\n```\r\nIn this case, I have mapped the root filesystem of my WSL distro to D: in Windows, since CMD doesn't support UNC paths.  Using the full UNC path in PowerShell exhibits the same behaviour.\r\n\r\nCheck what config files NuGet will consider:\r\n```\r\nPS D:\\home\\paul\\dev\\NugetIssue> dotnet nuget config paths\r\nC:\\Users\\paulmedynski\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n```\r\n\r\nRename the config file to \"NuGet.Config\":\r\n```\r\nPS D:\\home\\paul\\dev\\NugetIssue> move nuget.config NuGet.config\r\nPS D:\\home\\paul\\dev\\NugetIssue> dotnet nuget config paths\r\nD:\\home\\paul\\dev\\NugetIssue\\NuGet.Config\r\nC:\\Users\\paulmedynski\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n```\r\n\r\nAdditionally, the public documentation regarding NuGet configs uses a mix of `NuGet.Config` and `nuget.config`, making it unclear exactly which config filenames are supported by default:\r\n\r\nhttps://learn.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior\r\n\r\n\n\n### Verbose Logs\n\n```shell\nWSL Linux:\r\n\r\n$ dotnet --info\r\n.NET SDK:\r\n Version:           9.0.101\r\n Commit:            eedb237549\r\n Workload version:  9.0.100-manifests.3068a692\r\n MSBuild version:   17.12.12+1cce77968\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  12\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/9.0.101/\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\nConfigured to use loose manifests when installing new manifests.\r\n\r\nHost:\r\n  Version:      9.0.0\r\n  Architecture: x64\r\n  Commit:       9d5a6a9aa4\r\n\r\n.NET SDKs installed:\r\n  9.0.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 9.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 9.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nOther architectures found:\r\n  None\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  /home/paul/dev/sandbox/ctaip/global.json\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\nWindows 11:\r\n```\r\ndotnet --info\r\n.NET SDK:\r\n Version:           9.0.101\r\n Commit:            eedb237549\r\n Workload version:  9.0.100-manifests.3068a692\r\n MSBuild version:   17.12.12+1cce77968\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.26100\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.101\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\nConfigured to use loose manifests when installing new manifests.\r\n\r\nHost:\r\n  Version:      9.0.0\r\n  Architecture: x64\r\n  Commit:       9d5a6a9aa4\r\n\r\n.NET SDKs installed:\r\n  9.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  None\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  C:\\Users\\paulmedynski\\dev\\ctaip\\global.json\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-09T03:30:20.7515712Z","RunDurationInMilliseconds":942}