{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"44370381487","Type":"IssuesEvent","CreatedAt":"2024-12-02T08:52:05","Actor":"TimSoft-code","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10295","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Issue while trying to upload a package with NuGetGallery\" (#10295) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nI'm starting with a clean deploy of NuGetGallery.\r\n\r\nWhen a package is submitted in the \"Upload\" page and the upload process is canceled, the upload process remains stucked.\r\n\r\n\r\n\r\n\r\n\n\n### Repro Steps\n\n1. Clone the repository\r\n2. Create an empty SQL Express database\r\n3. Modify the <connectionStrings> to point to the database created at point 2\r\n4. Launch build.ps1 from powershell\r\n5. In VS2022 launch the command \"Update-Database -ConfigurationTypeName MigrationsConfiguration\" from the Package Manager Console to apply the migrations\r\n6. Create a new website in IIS\r\n7. Publish with Web Deploy from VS2022 to IIS\r\n8. Navigate to NugetGallery and register a new user\r\n9. Upload a .nupkg and press the \"Cancel\" button on the bottom of the page\r\n10. From now on I get the \"Cannot upload file because an upload is already in progress.\" when I try to upload another .nupkg (same version, different version o different dll doesn't matter, the error will be displayed regardless)\n\n### Expected Behavior\n\nWhen I press \"Cancel\" during the upload process I should be able to upload another package after navigating back to the \"Upload\" page\n\n### Screenshots\n\n\r\nThis is the \"Upload\" page when I navigate to it after having canceled an upload process:\r\n![image](https://github.com/user-attachments/assets/ddf7c1d8-361a-4a7e-aea5-f74a151d92e6)\r\n\r\nThis is the same page after trying to submit a nuget package:\r\n![image](https://github.com/user-attachments/assets/d849fbed-ca02-48dc-bf5b-8dabc540435d)\n\n### Additional Context and logs\n\n_No response_"},{"Id":"44332911912","Type":"IssuesEvent","CreatedAt":"2024-11-30T02:29:37","Actor":"sam-wheat","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10294","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Correct format for alternate package link for a deprecated package\" (#10294) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nI recently deprecated a package.  Tried to add a link to an alternate package and received this message:\r\n\r\n Could not find alternate package 'https://www.nuget.org/packages/mypackage'.\r\n\r\nLink to alt package was in the format: https://www.nuget.org/packages/mypackage\n\n### Repro Steps\n\nSelect a package to deprecate.\r\nFind an alternate package on nuget.org and copy the link.\r\nPaste the link in the Alternate Package box on the deprecation page.\r\nNote the error message.\n\n### Expected Behavior\n\nShould be able to add a link to an alternate package\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"44316544252","Type":"IssuesEvent","CreatedAt":"2024-11-29T11:41:39","Actor":"JusterZhu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10293","RelatedDescription":"Closed issue \"[NuGet.org Bug]: When the package is referenced, the additional non-source files are not copied to the bin directory by default.\" (#10293) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\n![image](https://github.com/user-attachments/assets/b4877e61-42a5-4b59-8c30-fc35222de4d2)\r\nI have developed a component that includes several non-source files internally, as shown above. After uploading it to NuGet, I created a new project to reference the GeneralUpdate.Bowl NuGet package I uploaded. However, I found that these files only exist in the directory `C:\\Users\\xxx\\.nuget\\packages\\generalupdate.bowl\\1.0.3\\contentFiles\\any\\netstandard2.0` and are not copied to the bin directory of the referencing project upon rebuilding.\r\n\r\nI researched and found that the referencing project needs to add some copy code in the `.csproj` file, which seems very inconvenient. Ideally, it should work like a regular NuGet package, where the referencing project doesn't need to do anything extra besides referencing the NuGet package. I'm not sure if this requirement can be met, and I hope someone can help me solve this issue. Thank you all.\n\n### Repro Steps\n\nPlease provide the address or link to the source code related to the issue mentioned above.\r\nhttps://github.com/GeneralLibrary/GeneralUpdate/tree/master/src/c%23/GeneralUpdate.Bowl\r\n\r\nHere is the address on NuGet.\r\nhttps://www.nuget.org/packages/GeneralUpdate.Bowl/\n\n### Expected Behavior\n\nI want the non-source files added in my component to be automatically copied to the user's project bin directory when they reference my NuGet package, without requiring the user to do anything other than referencing the NuGet package.\n\n### Screenshots\n\n![image](https://github.com/user-attachments/assets/3c7764dd-0bc1-4d24-b693-5610181a76a3)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"44274393272","Type":"IssuesEvent","CreatedAt":"2024-11-28T06:41:26","Actor":"JusterZhu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10293","RelatedDescription":"Opened issue \"[NuGet.org Bug]: When the package is referenced, the additional non-source files are not copied to the bin directory by default.\" (#10293) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\n![image](https://github.com/user-attachments/assets/b4877e61-42a5-4b59-8c30-fc35222de4d2)\r\nI have developed a component that includes several non-source files internally, as shown above. After uploading it to NuGet, I created a new project to reference the GeneralUpdate.Bowl NuGet package I uploaded. However, I found that these files only exist in the directory `C:\\Users\\xxx\\.nuget\\packages\\generalupdate.bowl\\1.0.3\\contentFiles\\any\\netstandard2.0` and are not copied to the bin directory of the referencing project upon rebuilding.\r\n\r\nI researched and found that the referencing project needs to add some copy code in the `.csproj` file, which seems very inconvenient. Ideally, it should work like a regular NuGet package, where the referencing project doesn't need to do anything extra besides referencing the NuGet package. I'm not sure if this requirement can be met, and I hope someone can help me solve this issue. Thank you all.\n\n### Repro Steps\n\nPlease provide the address or link to the source code related to the issue mentioned above.\r\nhttps://github.com/GeneralLibrary/GeneralUpdate/tree/master/src/c%23/GeneralUpdate.Bowl\r\n\r\nHere is the address on NuGet.\r\nhttps://www.nuget.org/packages/GeneralUpdate.Bowl/\n\n### Expected Behavior\n\nI want the non-source files added in my component to be automatically copied to the user's project bin directory when they reference my NuGet package, without requiring the user to do anything other than referencing the NuGet package.\n\n### Screenshots\n\n![image](https://github.com/user-attachments/assets/3c7764dd-0bc1-4d24-b693-5610181a76a3)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"44265422565","Type":"PullRequestEvent","CreatedAt":"2024-11-27T21:59:13","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10292","RelatedDescription":"Merged pull request \"[Fix] GithubVulnerability2V3 use only HTTPS\" (#10292) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Removed explicit http scheme when creating storages.\r\n* Not related: 2 unused lines on `src/GitHubVulnerabilities2v3/Extensions/BlobStorageVulnerabilityWriter.cs`\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"44265054243","Type":"PullRequestEvent","CreatedAt":"2024-11-27T21:41:45","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10292","RelatedDescription":"Opened pull request \"[Fix] GithubVulnerability2V3 use only HTTPS\" (#10292) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Removed explicit http scheme when creating storages.\r\n* Not related: 2 unused lines on `src/GitHubVulnerabilities2v3/Extensions/BlobStorageVulnerabilityWriter.cs`\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"44260154203","Type":"PullRequestEvent","CreatedAt":"2024-11-27T18:22:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10291","RelatedDescription":"Opened pull request \"[OIDC 13] Add audit records for federated credential flows\" (#10291) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10290.\r\n\r\nThis PR adds audit record shapes for federated credential flows. A future PR will update the service layer to emit then audit records. This PR enables us to update our internal auditing layer to handle the new audit records before actually emitting them.\r\n\r\nAs part of this PR I needed to extract the `FederatedCredentialIssuerType` enum as a public enum, so it can enrich the audit entries. Previously it was an implementation detail of the service layer.\r\n\r\nThe following steps of the end-to-end OIDC flow are audited:\r\n1. Creation of a federated credential policy\r\n2. Validating a bearer token against a well-known issuer (e.g. Entra ID OIDC JWT validation)\r\n3. Comparing a bearer token with a policy\r\n4. Rejecting a bearer token accepted via a policy due to replay \r\n5. Exchanging a bearer token for a short-lived API key via a policy \r\n6. Deletion of a policy\r\n\r\nStep 1 is done some time before token exchange, as an onboarding step.\r\n\r\nStep 2 is during the token exchange but could be used anywhere we validate bearer tokens in the future.\r\n\r\nStep 3-5 are done during token exchange (trading an OIDC token for a short-lived API key).\r\n\r\nStep 6 is done some time after a policy is created.\r\n\r\nStep 2 is emitted as an independent \"external security token\" audit record.\r\n\r\nSteps 1 and 3-6 are emitted as \"federated credential policy\" audit records, with a variety of child audit records which will become \"target resource\" relationships in our auditing system.\r\n\r\nI opted to be somewhat verbose in the audit record shapes so we can understand:\r\n- What external credential was provided to our system, an essential information like issuer, identifier and claims.\r\n- Whether that external credential was accepted (allowing federation) or rejected.\r\n- What federated credential policy was compared with the external credential.\r\n- If token replay (re-use) was detected and blocked.\r\n- What API key was generated via the exchange."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"44395256880","Type":"IssuesEvent","CreatedAt":"2024-12-02T20:23:41","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13974","RelatedDescription":"Opened issue \"Add indicator for deprecated and vulnerable packages to Package Details tab header.\" (#13974) at NuGet/Home","RelatedBody":""},{"Id":"44366819745","Type":"IssuesEvent","CreatedAt":"2024-12-02T06:52:05","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13969","RelatedDescription":"Closed issue \"NugetAudit is not consistent\" (#13969) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n```\r\n.NET SDK:\r\n Version:           9.0.100\r\n Commit:            59db016f11\r\n Workload version:  9.0.100-manifests.3068a692\r\n MSBuild version:   17.12.7+5b8665660\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  22.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /home/alberto/.dotnet/sdk/9.0.100/\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\nConfigured to use loose manifests when installing new manifests.\r\n\r\nHost:\r\n  Version:      9.0.0\r\n  Architecture: x64\r\n  Commit:       9d5a6a9aa4\r\n\r\n.NET SDKs installed:\r\n  8.0.100 [/home/alberto/.dotnet/sdk]\r\n  8.0.404 [/home/alberto/.dotnet/sdk]\r\n  9.0.100 [/home/alberto/.dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 8.0.0 [/home/alberto/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.11 [/home/alberto/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 9.0.0 [/home/alberto/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 8.0.0 [/home/alberto/.dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.11 [/home/alberto/.dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 9.0.0 [/home/alberto/.dotnet/shared/Microsoft.NETCore.App]\r\n\r\nOther architectures found:\r\n  None\r\n\r\nEnvironment variables:\r\n  DOTNET_ROOT       [/home/alberto/.dotnet]\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n  ```\r\n\r\n### Worked before?\r\n\r\nJust noticed in .NET 9, didn't tried in other versions\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nThe issue is the different behavior of NugetAudit configured in the .csproj file when executing a `dotnet build` or `dotnet publish` with the argument `--self-contained true`.\r\n\r\ncsproj config:\r\n```xml\r\n<NuGetAudit>true</NuGetAudit>\r\n<NuGetAuditLevel>moderate</NuGetAuditLevel>\r\n<NuGetAuditMode>all</NuGetAuditMode>\r\n```\r\n\r\nWhen the argument `--self-contained` is not used, the build completes successfully without any failures related to vulnerable packages.\r\n\r\n**Example:**\r\n\r\nCommand:\r\n```\r\ndotnet build -c Release\r\n```\r\nOutput\r\n```\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  sample -> /home/runner/work/NugetAuditRepro/NugetAuditRepro/bin/Release/net9.0/sample.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.63\r\n```\r\n\r\nHowever, when using the `--self-contained` parameter, the build returns messages regarding vulnerable packages.\r\n\r\nCommand:\r\n```\r\ndotnet build -c Release -r linux-x64 --self-contained true\r\n```\r\nOutput\r\n```\r\n  Determining projects to restore...\r\n/home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj : warning NU1903: Package 'System.Private.Uri' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-5f2m-466j-3848\r\n/home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj : warning NU1902: Package 'System.Private.Uri' 4.3.0 has a known moderate severity vulnerability, https://github.com/advisories/GHSA-x5qj-9vmx-7g6g\r\n/home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj : warning NU1903: Package 'System.Private.Uri' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-xhfc-gr8f-ffwc\r\n  Restored /home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj (in 2.01 sec).\r\n/home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj : warning NU1903: Package 'System.Private.Uri' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-5f2m-466j-3848\r\n/home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj : warning NU1902: Package 'System.Private.Uri' 4.3.0 has a known moderate severity vulnerability, https://github.com/advisories/GHSA-x5qj-9vmx-7g6g\r\n/home/runner/work/NugetAuditRepro/NugetAuditRepro/sample.csproj : warning NU1903: Package 'System.Private.Uri' 4.3.0 has a known high severity vulnerability, https://github.com/advisories/GHSA-xhfc-gr8f-ffwc\r\n  sample -> /home/runner/work/NugetAuditRepro/NugetAuditRepro/bin/Release/net9.0/linux-x64/sample.dll\r\n\r\nBuild succeeded.\r\n```\r\n\r\nI've created that repo that does have the behavior: https://github.com/AlbertoMonteiro/NugetAuditRepro\r\n\r\nI've created github action that does some combinations of `dotnet build`\r\n\r\nhttps://github.com/AlbertoMonteiro/NugetAuditRepro/actions/runs/12075457777/job/33675284368\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"44316547396","Type":"IssuesEvent","CreatedAt":"2024-11-29T11:41:46","Actor":"JusterZhu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13973","RelatedDescription":"Closed issue \"When the package is referenced, the additional non-source files are not copied to the bin directory by default.\" (#13973) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n.NET Standard2.0 and .NET 9\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n![image](https://github.com/user-attachments/assets/be944791-ca7b-49ed-8721-5f42b08946d8)\r\nI have developed a component that includes several non-source files internally, as shown above. After uploading it to NuGet, I created a new project to reference the GeneralUpdate.Bowl NuGet package I uploaded. However, I found that these files only exist in the directory C:\\Users\\xxx\\.nuget\\packages\\generalupdate.bowl\\1.0.3\\contentFiles\\any\\netstandard2.0 and are not copied to the bin directory of the referencing project upon rebuilding.\r\n\r\nI researched and found that the referencing project needs to add some copy code in the .csproj file, which seems very inconvenient. Ideally, it should work like a regular NuGet package, where the referencing project doesn't need to do anything extra besides referencing the NuGet package. I'm not sure if this requirement can be met, and I hope someone can help me solve this issue. Thank you all.\r\n\r\nRepro Steps\r\nPlease provide the address or link to the source code related to the issue mentioned above.\r\nhttps://github.com/GeneralLibrary/GeneralUpdate/tree/master/src/c%23/GeneralUpdate.Bowl\r\n\r\nHere is the address on NuGet.\r\nhttps://www.nuget.org/packages/GeneralUpdate.Bowl/\r\n\r\nExpected Behavior\r\nI want the non-source files added in my component to be automatically copied to the user's project bin directory when they reference my NuGet package, without requiring the user to do anything other than referencing the NuGet package.\r\n\r\nScreenshots\r\n![image](https://github.com/user-attachments/assets/8096bcdd-2e13-4d06-bcbc-a193d9e87efe)\n\n### Verbose Logs\n\n_No response_"},{"Id":"44315411827","Type":"IssuesEvent","CreatedAt":"2024-11-29T11:03:17","Actor":"JusterZhu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13973","RelatedDescription":"Opened issue \"When the package is referenced, the additional non-source files are not copied to the bin directory by default.\" (#13973) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n.NET Standard2.0 and .NET 9\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n![image](https://github.com/user-attachments/assets/be944791-ca7b-49ed-8721-5f42b08946d8)\r\nI have developed a component that includes several non-source files internally, as shown above. After uploading it to NuGet, I created a new project to reference the GeneralUpdate.Bowl NuGet package I uploaded. However, I found that these files only exist in the directory C:\\Users\\xxx\\.nuget\\packages\\generalupdate.bowl\\1.0.3\\contentFiles\\any\\netstandard2.0 and are not copied to the bin directory of the referencing project upon rebuilding.\r\n\r\nI researched and found that the referencing project needs to add some copy code in the .csproj file, which seems very inconvenient. Ideally, it should work like a regular NuGet package, where the referencing project doesn't need to do anything extra besides referencing the NuGet package. I'm not sure if this requirement can be met, and I hope someone can help me solve this issue. Thank you all.\r\n\r\nRepro Steps\r\nPlease provide the address or link to the source code related to the issue mentioned above.\r\nhttps://github.com/GeneralLibrary/GeneralUpdate/tree/master/src/c%23/GeneralUpdate.Bowl\r\n\r\nHere is the address on NuGet.\r\nhttps://www.nuget.org/packages/GeneralUpdate.Bowl/\r\n\r\nExpected Behavior\r\nI want the non-source files added in my component to be automatically copied to the user's project bin directory when they reference my NuGet package, without requiring the user to do anything other than referencing the NuGet package.\r\n\r\nScreenshots\r\n![image](https://github.com/user-attachments/assets/8096bcdd-2e13-4d06-bcbc-a193d9e87efe)\n\n### Verbose Logs\n\n_No response_"},{"Id":"44314458853","Type":"IssuesEvent","CreatedAt":"2024-11-29T10:33:39","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13972","RelatedDescription":"Opened issue \"[Bug Bash] The “Package Level” column will show “transitive” for several seconds when installing a top-level package in solution-level PM UI\" (#13972) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.13.0.79\n\n### Worked before?\n\nIt’s not a regression since it is a new feature. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Details about problem\r\nNuGet Version: Dev\\6.13.0.79\r\nVS Version: Main\\35528.37\r\nOS: Windows-11-Enterprise-23H2\r\n\r\n#### Notes:   \r\n1.\tThe repro rate is 100%.  \r\n2.\tIt’s not a regression since it is a new feature. \r\n#### Repro Steps:    \r\n1.\tCreate a “C# Console App (.NET 9.0)” project.    \r\n2.\tRight-click the solution in Solution Explorer window and select \"Manage NuGet Packages for Solution…\" menu item to open the solution-level PM UI.    \r\n3.\tClick “Browse” tab and select the source “nuget.org” from Package source drop-down list. \r\n4.\tInstall a package (e.g. log4net) and observe “Package Level” column in the details pane. \r\n\r\n#### Expected Result:\r\nIt should show “top-level” in the “Package Level” column in the details pane. \r\n\r\n#### Actual Result:\r\nThe “Package Level” column will show “transitive” for several seconds, and then update to the correct “top-level” as the screenshot below.\r\n![TransitivePackageFlashed](https://github.com/user-attachments/assets/a5e27f41-d2d4-4254-b8c4-1db9d3dae22e)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"44313201347","Type":"IssuesEvent","CreatedAt":"2024-11-29T09:54:05","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13971","RelatedDescription":"Opened issue \"[Bug Bash] The “Installed” box is empty in details pane of the installed \"PackageReference\" package after switching from project PM UI of project2 to project1 for non-SDk project  \" (#13971) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.13.0.79\n\n### Worked before?\n\nIt is not a regression since it also reproes on D17.12\\33527.113 with implicit NuGet Client 6.12.2.1. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Notes:   \r\n\r\n1.The repro rate is 100%.  \r\n\r\n2.This issue doesn’t repro when switching to any other package in the package list and then switching back to the installed package in step 7. \r\n\r\n3.The “Installed” line was lost on D16.11\\34601.136 with implicit NuGet Client 5.11.6.4 after doing the step 6 as below: \r\n![image](https://github.com/user-attachments/assets/5c319d52-776b-4f35-bf86-86b65fdb2c82)\r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a solution with two projects C# Class Library (.NET Framework 4.8.1) called Project1 and Project2.  \r\n\r\n2. Open PM UI of Project1 and go to “Browse” Tab.  \r\n\r\n3. Select package source: “nuget.org” and install \"NUnit\" package with version 3.13.1 in \"PackageReference\" format (Don’t close PM UI after installing package). \r\n\r\n4. Open PM UI of Project2 and go to “Browse” Tab.  \r\n\r\n5. Select package source: “nuget.org” and install “Newtonsoft.Json” package with version 13.0.1 in \"PackageReference\" format (Don’t close PM UI after installing package). \r\n\r\n 6. Switch to PM UI of project1. \r\n\r\n7. Observe the details pane of package “Nunit”.   \r\n\r\n#### Expected:    \r\n\r\nThe “Installed” box should show installed version “3.13.1” of package “NUnit” in details pane. \r\n\r\n#### Actual:    \r\n\r\nThe “Installed” version box is empty in details pane as below screenshot:  \r\n![image](https://github.com/user-attachments/assets/ecce5249-6bde-4446-a5d1-cd185914c6f9)\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-03T03:30:20.9282885Z","RunDurationInMilliseconds":914}