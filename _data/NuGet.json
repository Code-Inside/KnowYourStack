{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27091746351","Type":"IssuesEvent","CreatedAt":"2023-02-14T21:44:55","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3098","RelatedDescription":"Closed issue \"Package discovery: Show and search by TFM/package-compatibility \" (#3098) at NuGet/NuGetGallery","RelatedBody":"A feature request: I'd like to browse packages compatible with [.NET Core](https://dotnet.github.io/)\r\n\r\nMost the packages on https://www.nuget.org/packages seem not to be, so it would be useful to shortlist those that are\r\n\r\n```\r\n>dotnet restore\r\nPackage Microsoft.Net.Http 2.2.29 is not compatible with netcoreapp1.0 (.NETCoreApp,Version=v1.0). \r\nOne or more packages are incompatible with .NETCoreApp,Version=v1.0.\r\n```\r\n\r\nI want to search nuget.org by target framework.\r\n<!-- Do not remove this section. Triage will add new issues identified as part of this epic into this section. The v-team is responsible for triaging them into their business goals. If they do not fit into a business goals, please remove from this section. -->\r\n# Recently Triaged Issues\r\n\r\nAll issues in this section should be triaged by the v-team into one of their business objectives or features.\r\n\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8863\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8864\r\n- [ ] https://github.com/NuGet/NuGetGallery/issues/8865\r\n"},{"Id":"27087455264","Type":"PullRequestEvent","CreatedAt":"2023-02-14T18:04:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Merged pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27065220057","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:33:27","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9388","RelatedDescription":"Merged pull request \"Added null checks to mitigate exceptions on the '/profiles' pages\" (#9388) at NuGet/NuGetGallery","RelatedBody":"The `/profiles` pages use the same js script as the search page, but do not have a `searchForm` element on the page, so we were getting exceptions from the javascript on the `/profiles` pages when we tried to reference the form elements.\r\n\r\nI've now added checks in the script so that we do not reference anything that doesn't exist on the page.\r\n\r\nI also removed a helper method that was not being used by the search page anymore (`AddSortByOption()`)."},{"Id":"27065082044","Type":"PullRequestEvent","CreatedAt":"2023-02-13T23:22:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9391","RelatedDescription":"Opened pull request \"Tags sometimes spill over into the next line when there are multiple of them\" (#9391) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9389\r\n\r\nIn the search results, tags sometimes spill over into the next line when there are multiple of them, but appear on the same line as downloads, version, etc. when there are very few of them.\r\n\r\nPreviously:\r\n![a51fdb2a-1c2c-45aa-b1c4-32db778b645d](https://user-images.githubusercontent.com/82980589/218596546-bf541bb9-fd3b-4836-bac2-5d34f710fc97.jpg)\r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it.\r\n\r\nNow, we will always show tags on the next line so that it is consistent.\r\n\r\nAfter the change:\r\n![5942d32f-fa23-42d5-9042-f543b052b527](https://user-images.githubusercontent.com/82980589/218596542-0d91449b-c104-4cf8-9d98-d4226f7a2272.jpg)"},{"Id":"27064653171","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:55:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9390","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] 'Template' package type filters combined with Frameworks filters should warn?\" (#9390) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nTemplates do not have a Frameworks tab on the Package Details page. Should we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters? The behaviors across the frameworks tab and frameworks filters should be consistent.\r\n\r\nQ: Are target frameworks expected with template packages? Most template packages in our ecosystem do not have target frameworks, but a handful do.\r\n\r\n### Solution\r\nShould we also disallow/warn users when they try to combine the `packageType = template` filter with frameworks filters?"},{"Id":"27064452514","Type":"IssuesEvent","CreatedAt":"2023-02-13T22:42:15","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9389","RelatedDescription":"Opened issue \"[Search-by-TFM Bug] Tags sometimes spill over into the next line when there are multiple of them\" (#9389) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIn the search results, when there are very few tags, they appear on the same line as the downloads, last updated date and version, but spill over into the next line when there are multiple tags. This behavior should be consistent. \r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it. \r\n\r\n### Solution\r\nPossible solution: Always show tags on the next line so that it is consistent."},{"Id":"27063127454","Type":"PullRequestEvent","CreatedAt":"2023-02-13T21:29:45","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9387","RelatedDescription":"Merged pull request \"Search page A11y fixes\" (#9387) at NuGet/NuGetGallery","RelatedBody":"1. This PR fixes an accessibility issue where, when the TFM section was collapsed and there were very few search results on the page, the black text of some of the TFM checkbox labels could overlap with the dark blue footer background (even though the checkboxes were not visible), causing a contrast issue on A11y FastPass. \r\n![image](https://user-images.githubusercontent.com/82980589/218198449-23ec3954-7e64-46d7-8347-5df58ac1b18e.png)\r\nWe now flip the TFM tab's `display` property between `'none'` and `'block'` when it is collapsed or expanded. This also means we don't need to manually toggle `tabindex` for the checkboxes when the section is collapsed or expanded.\r\n\r\n2. The text we show when there's 0 package results also has an a11y issue, where it shouldn't have the `aria-expanded` property. I've removed that now.\r\n![image](https://user-images.githubusercontent.com/82980589/218199365-a21f5d7f-675f-4bd4-8879-6cbbb23fa11a.png)\r\n\r\n3. I've also removed an unused ViewModel property (`ShouldDisplayAdvancedSearchPanel`). "},{"Id":"27061164462","Type":"PullRequestEvent","CreatedAt":"2023-02-13T19:54:35","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9365","RelatedDescription":"Merged pull request \"Modify warning message on display package page when missing readme\" (#9365) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Introduced new warning message on package display page when package is missing readme\r\n* only display warning message to package authors\r\n* added feature flag to this new warning\r\n\r\nBefore: \r\n![Screenshot 2023-01-31 140711](https://user-images.githubusercontent.com/64443925/215915916-076f6854-e2da-48fb-8a73-6a8f8ddf11ed.png)\r\nAfter: \r\n![Screenshot 2023-01-31 140647](https://user-images.githubusercontent.com/64443925/215915939-7573b301-73ad-4108-98c8-5b3a164070df.png)\r\n\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4695"},{"Id":"27057425293","Type":"IssuesEvent","CreatedAt":"2023-02-13T17:05:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7607","RelatedDescription":"Closed issue \"Simultaneously pushing and unlisting a package may result in incorrect latest\" (#7607) at NuGet/NuGetGallery","RelatedBody":"Consider the following:\r\n\r\n1. Package is uploaded and unlisted at the same time.\r\n2. Package is added to the database by upload flow.\r\n3. Package is unlisted by unlist flow.\r\n4. After being unlisted, package's IsLatest is updated incorrectly by upload flow, which still thinks package is listed.\r\n\r\nIdeally, the unlist flow should not be able to execute until upload flow is completed. Perhaps the upload flow is committing to DB multiple times?\r\n\r\nSee https://github.com/nuget/nugetgallery/issues/7536 for more information"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27094053258","Type":"IssuesEvent","CreatedAt":"2023-02-15T00:17:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4499","RelatedDescription":"Closed issue \"PowerShell Errors passed through PMC are not localized\" (#4499) at NuGet/Home","RelatedBody":"Currently an error coming from powershell does not seem to be localized. The errors generated by PMC itself are localized.\r\n\r\nFrom PowerShell - \r\n\r\n```\r\nWindows PowerShell\r\nCopyright (C) 2016 Microsoft Corporation. Todos los derechos reservados.\r\n\r\nNo se puede cargar el módulo de PSReadline. Se está ejecutando la consola sin PSReadline.\r\nPS C:\\Users\\anmishr> asdasd\r\nasdasd : El término 'asdasd' no se reconoce como nombre de un cmdlet, función, archivo de script o programa\r\n```\r\n\r\n\r\nFrom PMC - \r\n\r\n```\r\nHer paket size sahibi tarafından lisanslanır. NuGet üçüncü taraf paketlerden sorumlu değildir ve bunlar için lisans vermez. Bazı paketler ek lisanslar tarafından yönetilen bağımlılıklar içerebilir. Bağımlılıkları belirlemek için paket kaynağı (akış) URL'sini izleyin.\r\n\r\nPaket Yöneticisi Konsolu Konak Sürümü 4.0.0.2265\r\n\r\nKullanılabilir tüm NuGet komutlarını görmek için 'get-help NuGet' yazın.\r\n\r\nPM> sfdcsdvfsd\r\nsfdcsdvfsd : The term 'sfdcsdvfsd' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is \r\ncorrect and try again.\r\n```"},{"Id":"27093106188","Type":"IssuesEvent","CreatedAt":"2023-02-14T23:03:37","Actor":"jaredpar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12437","RelatedDescription":"Opened issue \"Restore not re-generating project.assets.json \" (#12437) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild 17.5 \n\n### Worked before?\n\nmsbuild 17.4 (caveats below) \n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nThis is an involved discussion that is hard to boil down to a simple repro. Have lots of internal data, logs, etc ... to help track this down. Whomever ends up looking at this can reach me internally at jaredpar@microsoft.com and I can help walk you through the situation if this isn't clear. \r\n\r\nThe rough order of events happening is the following. \r\n\r\n1. `msbuild.exe /t:restore Roslyn.sln`. \r\n2. `msbuild.exe /restore src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\n`\r\n3. `msbuild.exe /t:Clean src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\n`\r\n4. `msbuild.exe /t:build /restore /p:BootstrapBuildPath=D:\\a\\_work\\1\\s\\artifacts\\Bootstrap Roslyn.sln`\r\n\r\nThe actual commands are significantly more involved (included in verbose section) but that is the gist of commands. The key is the presence of `/p:BootstrapBuildPath`. When this is empty then every project in the solution will have a reference to `Microsoft.Net.Compilers.Toolset` ([source](https://github.com/dotnet/arcade/blob/8811477dfe2434bbe3a834ec16eafbb22a298e9e/src/Microsoft.DotNet.Arcade.Sdk/tools/Compiler.props#L5)). \r\n\r\nThe practical end effect here is that the project.assets.json file produced in step 1 and 2 should be different than the one produced in step 4 as the `<PackageReference>` set is different. The vast majority of projects do restore this way and show the correct values. The bug is that on every run there are a few projects that do not do this and end up with the version from step 1/2. This results in build breaks for us. \r\n\r\nThe easiest demonstration of this behavior is the PR: https://github.com/dotnet/roslyn/pull/66864. \r\n\r\nNotice that when we use [commit b8ffff](https://github.com/dotnet/roslyn/pull/66864/commits/b8ffff6677c92be2b15f4183401c1c6080213d55) the [build fails](https://dev.azure.com/dnceng-public/public/_build/results?buildId=170544&view=results) with `ValidateBootstrap` errors (this means restore failed). This failure will go away if we do either of the following:\r\n\r\n1. Before step 4 completely delete the `obj` and `bin` directories. This forces all project.assets.json files to be regenerated and they are done so correctly. To us this suggests there is some timestamp / caching bug at play here. \r\n2. Merge steps 1 + 2 into the same `msbuild.exe` command. I have no explanation for this but it's very easy to demonstrate.\r\n\r\nThis is **very** hard to reproduce locally. To the point we've not been able to successfully do it. We've only been able to observe this via CI but it reproduces 100% there. \r\n\r\nIt's unclear how long this bug has existed. What spawned this investigation is our response to #12373 was to delete static graph restore from our pipelines. The moment we did that we started running into this bug. After a few days of investigation we decided to combine steps 1 and 2 together on a whim and the issue went away. It's taken another week of digging to get to this particular point. \r\n\r\nPlease let us know if you need any other data to help track this down, we have lots. \n\n### Verbose Logs\n\n```shell\nActual MSBuild commands executed in sequence\r\n\r\n\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Debug\\Restore.binlog /clp:Summary /logger:C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\net472\\Microsoft.DotNet.ArcadeLogging.dll /m /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=false /p:Configuration=Debug /p:Projects=D:\\a\\_work\\1\\s\\Roslyn.sln /p:RepoRoot=D:\\a\\_work\\1\\s\\ /p:Restore=True /p:Build=False /p:Rebuild=False /p:Pack=False /p:Sign=False /p:Publish=False /p:ContinuousIntegrationBuild=True /p:OfficialBuildId= /p:RunAnalyzersDuringBuild=False /p:BootstrapBuildPath= /p:TreatWarningsAsErrors=False /p:EnableNgenOptimization=False /p:IbcOptimizationDataDir=D:\\a\\_work\\1\\s\\.o%5c /p:RestoreUseStaticGraphEvaluation=False /p:VisualStudioIbcDrop= /p:VisualStudioDropAccessToken= /p:DeployExtension=false /p:ROSLYNUSEHARDLINKS=true /v:m C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\Build.proj\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Release\\Bootstrap.binlog /nodeReuse:false /p:TreatWarningsAsErrors=true /p:Configuration=Release /p:RunAnalyzersDuringBuild=true /p:ContinuousIntegrationBuild=true /p:RestoreUseStaticGraphEvaluation=false /p:RoslynEnforceCodeStyle=false /p:RunAnalyzersDuringBuild=false /p:DotNetUseShippingVersions=true /p:InitialDefineConstants=BOOTSTRAP /p:PackageOutputPath=D:\\a\\_work\\1\\s\\artifacts\\Bootstrap /p:EnableNgenOptimization=false /p:PublishWindowsPdb=false /restore /t:Pack src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Release\\BootstrapClean.binlog /nodeReuse:false /p:TreatWarningsAsErrors=true /p:Configuration=Release /p:ContinuousIntegrationBuild=true /p:RestoreUseStaticGraphEvaluation=false /t:Clean src\\NuGet\\Microsoft.Net.Compilers.Toolset\\AnyCpu\\Microsoft.Net.Compilers.Toolset.Package.csproj\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:D:\\a\\_work\\1\\s\\artifacts\\log\\Release\\Build.binlog /clp:Summary /logger:C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\net472\\Microsoft.DotNet.ArcadeLogging.dll /m /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=false /p:Configuration=Release /p:Projects=D:\\a\\_work\\1\\s\\Roslyn.sln /p:RepoRoot=D:\\a\\_work\\1\\s\\ /p:Restore=True /p:Build=True /p:Rebuild=False /p:Pack=True /p:Sign=False /p:Publish=False /p:ContinuousIntegrationBuild=True /p:OfficialBuildId= /p:RunAnalyzersDuringBuild=False /p:BootstrapBuildPath=D:\\a\\_work\\1\\s\\artifacts\\Bootstrap /p:TreatWarningsAsErrors=False /p:EnableNgenOptimization=False /p:IbcOptimizationDataDir=D:\\a\\_work\\1\\s\\.o%5c /p:RestoreUseStaticGraphEvaluation=False /p:VisualStudioIbcDrop= /p:VisualStudioDropAccessToken= /p:DeployExtension=false /p:ROSLYNUSEHARDLINKS=true /v:m C:\\Users\\cloudtest\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\8.0.0-beta.23054.2\\tools\\Build.proj\r\n\r\n\r\nThe associated binlogs for each command are available in the [published artifacts](https://artprodcus3.artifacts.visualstudio.com/A6fcc92e5-73a7-4f88-8d13-d9045b45fb27/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy1wdWJsaWMvcHJvamVjdElkL2NiYjE4MjYxLWM0OGYtNGFiYi04NjUxLThjZGNiNTQ3NDY0OS9idWlsZElkLzE3MDU0NC9hcnRpZmFjdE5hbWUvQ29ycmVjdG5lc3NfUmVidWlsZCtBdHRlbXB0KzErTG9ncw2/content?format=zip). Contact me if the artifacts have expired as I have local copies.\n```\n"},{"Id":"27089845705","Type":"IssuesEvent","CreatedAt":"2023-02-14T20:02:38","Actor":"JanKrivanek","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12436","RelatedDescription":"Opened issue \"Restore resolves wrong packages for multitargeted transitive dependency\" (#12436) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.200-preview.22628.1\n\n### Worked before?\n\nN/A\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWhen running `restore` for a project referencing a multitargeted project with conditioned package dependencies:\r\n\r\n```\r\n<ItemGroup Condition=\"'$(TargetFramework)' == 'net462'\">\r\n    <PackageReference Include=\"System.Text.Json\" Version=\"*\" />\r\n</ItemGroup>\r\n\r\n<ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"*\" />\r\n</ItemGroup>\r\n```\r\n\r\nAnd restricting the framework via `SetTargetFramework=\"TargetFramework=netstandard2.0\"` in referencing project, the resulting `project.assets.json` looks like if conditions were evaluated inversely (it contains only `System.Text.Json`). In fact the `restore` leads to same result regardles of the `SetTargetFramework` presence and it's value.\r\n\r\nThe full sample is located here [sanmuru/MSBuild-bug](https://github.com/sanmuru/MSBuild-bug) - taken from https://github.com/dotnet/msbuild/issues/8405\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27088121677","Type":"IssuesEvent","CreatedAt":"2023-02-14T18:36:13","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12395","RelatedDescription":"Reopened issue \"[Bug Bash] The “Install” button is clickable and package can be installed successfully even if the custom version drop-down box is empty. \" (#12395) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.6.0.15\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:   \r\n\r\n1. Create a C# Console App (.Net core) project.   \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.   \r\n3. Click settings button (top-right of right panel), check \"Allow format selection on first package install\" in General tab and click OK.                                         \r\n4. Go to \"Browse\" tab and click a package (for example \"Newtonsoft.Json\").  \r\n\r\n5. Click the \"Version\" drop-down box in the right panel. \r\n\r\n6. Delete the default version from the custom version drop-down box and click “Install” button. \r\n\r\n#### Expected:   \r\n\r\nThe “Install” button should be unclickable after step 6. \r\n\r\n#### Actual:   \r\n\r\nThe “Install” button is clickable and package is installed successfully when no version is typed in the custom version drop-down box as below record: \r\n![custom version](https://user-images.githubusercontent.com/84695155/215724755-d8134b8d-9298-491f-b19e-e92c1fc57b1d.gif)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27086250483","Type":"PullRequestEvent","CreatedAt":"2023-02-14T17:11:51","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/12433","RelatedDescription":"Merged pull request \"Add a \"do not auto close\" label\" (#12433) at NuGet/Home","RelatedBody":"fix: https://github.com/NuGet/Client.Engineering/issues/2131\r\n\r\nAdd a \"do not auto close\" label, and bot will never close them. This only apply to home and Client.Engineering repositories."},{"Id":"27067113740","Type":"IssuesEvent","CreatedAt":"2023-02-14T01:52:23","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12434","RelatedDescription":"Closed issue \"project.assets.json should not contain username in it\" (#12434) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nCurrently, dotnet restore --locked generates project.assets.json, which contains the username of whomever ran the command.  This causes issues because every build in our CI loop there is new username (using a GUID), and so the hash of project.assets.json changes and downstream items rebuild.\n\n### Desired Behavior\n\nUsername should be removed from project.assets.json.\n\n### Additional Context\n\nIn some cases were are able to overwrite the username after nuget restore runs with a common value, but it becomes more tricky which the call to nuget restore is nested (like the build calls npm, which runs some javascript that then calls dotnet restore)."},{"Id":"27066988339","Type":"IssuesEvent","CreatedAt":"2023-02-14T01:42:10","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12184","RelatedDescription":"Reopened issue \"[Bug]: Versions_SelectionChanged throws NullReferenceException when changing selected package\" (#12184) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\n17.5 Preview 1.0 33023.41.main\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nOther\r\n\r\n### Repro Steps & Context\r\n\r\nI don't see any direct customer impact from this, but when changing selected version, the debugger shows exceptions being thrown from `Versions_SelectionChanged` due to `null` value in the AddedItem[0] element (see https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/ProjectView.xaml.cs#L279)\r\n\r\n1. Attach a debugger.\r\n2. Launch Project PM UI.\r\n3. Change selected packages.\r\n4. Observe the NRE.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/197612110-6c4fde03-4c62-403c-8c38-7a88bd20efc9.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":14,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-02-15T03:30:25.9869302Z","RunDurationInMilliseconds":1411}