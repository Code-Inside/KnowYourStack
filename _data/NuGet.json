{"Data":{"Blog":{"FeedItems":[{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"33091428697","Type":"IssuesEvent","CreatedAt":"2023-11-04T13:35:34","Actor":"meokullu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9726","RelatedDescription":"Opened issue \"[Feature]: Encourage developers to share their profile and stats.\" (#9726) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nWhen user checking published packages on nuget.org website it is not encouraging developer to share it since there is no \"save it as photo\" or \"share it as photo\" option. User avatar and profile name should be added at somewhere of this table.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/59773207-dd40-4bc0-976c-f87b5c6dfa09)\r\n\r\nAlso, on profile data do look like a soap. It doesn't encourage to save or share data with others. Rather than a simple lines of texts and packages, metro design could be offered as option which packages could be seen on grid design.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/a93f4f63-44f9-44bc-aad5-ce373f49876e)\r\n\r\nThere is no option so see full stats by time, work-flow design could be used there. Also there should be also an option to save or share it as photo.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/0559ebc9-9bda-4a33-bca8-452d1e673a6c)\r\n\r\nContrast should be increased to enhance liability between rows.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/4971757/13a2eb98-e890-409d-9f6f-e7c36b818e9e)\r\n\r\nI would love to discuss about these.\r\n\r\nThanks.\r\n\n\n### The Elevator Pitch\n\nWould you like to hear amazing minor design enhancement that will encourage users to share they are happy to use Nuget?\r\n\r\nHere, there are a few example, how current users can help us to others which they didn't hear us yet.\r\n\r\nDing-dong -> elevator reaches to floor.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"33091101331","Type":"IssuesEvent","CreatedAt":"2023-11-04T12:56:30","Actor":"meokullu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9725","RelatedDescription":"Opened issue \"[NuGet.org Design]: \" (#9725) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nHi.\r\n\r\nWhen you are use \"manage packages\" on mobile versions of nuget.org, you see wrapped words and wrong frames.\n\n### Repro Steps\n\n1. Go to \"Manage packages\" on mobile version.\n\n### Expected Behavior\n\nClear frame lines covers whole table, seeing unwrapped words.\n\n### Screenshots\n\n![F7r-HcUWEAAQ8cC](https://github.com/NuGet/NuGetGallery/assets/4971757/793f143a-614a-4a6b-8ede-03ba4e9830a3)\r\n\r\n![F7r-HcPXgAAAS6d](https://github.com/NuGet/NuGetGallery/assets/4971757/be01bcf7-ac56-4903-9418-466693a5a93f)\n\n### Additional Context and logs\n\n_No response_"},{"Id":"33087405429","Type":"IssuesEvent","CreatedAt":"2023-11-04T03:35:41","Actor":"paulnsk","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9724","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Images from github readmes are not shown on nuget.org (domain not trusted). \" (#9724) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nI just added a readme.md to my little nuget package. I did so by using github's built-in markdown editor. When an image is pasted into the editor, it is automatically uploaded to a location similar to this \r\n\r\n`![image](https://github.com/paulnsk/ConsoleTools/assets/39160578/2328bb9c-1772-450c-a626-7192709b9bde)`\r\n\r\nwhich is apparently not suitable for using on nuget.org.\r\n\r\nPlease include github.com/.../assets to the trusted domain list\r\nhttps://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges\n\n### Repro Steps\n\nCreate a repo on github.\r\nWhen prompted, add a readme file.\r\nAn editor will open.\r\nPaste an image from clipboard and observe the URL as the editor adds the image reference to the readme.md\n\n### Expected Behavior\n\nIt would be nice to see actual images here\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/39160578/7464e676-4775-4a28-be2c-a98392923449)\r\n\r\n(https://www.nuget.org/packages/manage/upload)\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"33019695000","Type":"IssuesEvent","CreatedAt":"2023-11-01T17:20:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9708","RelatedDescription":"Closed issue \"[NuGet.org Bug]: SSH.NET download count issue\" (#9708) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nTwo days ago I released a new version of SSH.NET, but the download counter still shows **0**:\r\nhttps://www.nuget.org/packages/SSH.NET/2023.0.0\r\nI have downloaded this package many times and updated it in other open source projects.\n\n### Repro Steps\n\nOpen page https://www.nuget.org/packages/SSH.NET/2023.0.0\n\n### Expected Behavior\n\nThe counter should be greater then 0.\n\n### Screenshots\n\n<img width=\"570\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/17333903/39373c55-a4c6-43ab-8e7c-f34e04960b55\">\r\n\n\n### Additional Context and logs\n\nFor instance I've updated this package in the following projects. \r\nhttps://github.com/testcontainers/testcontainers-dotnet/pull/1019\r\nhttps://github.com/mRemoteNG/mRemoteNG/pull/2503\r\nBoth examples build in Github Actions."},{"Id":"33017450677","Type":"IssuesEvent","CreatedAt":"2023-11-01T15:59:17","Actor":"DeafMan1983","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9723","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Why does it happen with my nuget package DeafMan1983.Interop.SDL2\" (#9723) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nI found that it happens since incompatible issue\r\n![image](https://github.com/NuGet/NuGetGallery/assets/57066679/cd39d0e0-1121-4278-8518-e29981eec9d4)\r\n\n\n### Repro Steps\n\n1. https://www.nuget.org/packages/DeafMan1983.Interop.SDL2/1.2.1#readme-body-tab\r\n2. trying to install package into dotnet project and it happens and throws error\r\n3. Can't try to fix????\n\n### Expected Behavior\n\nCause error and incompatible I have current net7.0 and 8.0\r\n\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/57066679/5cd6e366-96d9-4040-a7e8-b1653e2ff604)\r\nIt happens - If I upload correct package DeafMan1983.Interop.SDL2.1.2.1.nupkg to nuget.org\r\n\r\nWhy does it happen? I never made wrong???\n\n### Additional Context and logs\n\n_No response_"},{"Id":"32997496390","Type":"PullRequestEvent","CreatedAt":"2023-10-31T23:11:42","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9722","RelatedDescription":"Merged pull request \"[FI]Merging hotfixes in main to dev\" (#9722) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"32997365309","Type":"IssuesEvent","CreatedAt":"2023-10-31T23:02:25","Actor":"DeafMan1983","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9723","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Why does it happen with my nuget package DeafMan1983.Interop.SDL2\" (#9723) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nI found that it happens since incompatible issue\r\n![image](https://github.com/NuGet/NuGetGallery/assets/57066679/cd39d0e0-1121-4278-8518-e29981eec9d4)\r\n\n\n### Repro Steps\n\n1. https://www.nuget.org/packages/DeafMan1983.Interop.SDL2/1.2.1#readme-body-tab\r\n2. trying to install package into dotnet project and it happens and throws error\r\n3. Can't try to fix????\n\n### Expected Behavior\n\nCause error and incompatible I have current net7.0 and 8.0\r\n\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/57066679/5cd6e366-96d9-4040-a7e8-b1653e2ff604)\r\nIt happens - If I upload correct package DeafMan1983.Interop.SDL2.1.2.1.nupkg to nuget.org\r\n\r\nWhy does it happen? I never made wrong???\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"33086161512","Type":"IssuesEvent","CreatedAt":"2023-11-04T00:37:54","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12953","RelatedDescription":"Closed issue \"Create NU Error Code for Package Source Mapping & GPF conflicts\" (#12953) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nIn https://github.com/NuGet/NuGet.Client/pull/5459#issuecomment-1770664856, the suggestion is to give actions for the customer to address their Global Packages Folder (GPF) conflicting with their solution's package source mapping configuration. \r\n\r\nThat is, the customer is installing a package, and the GPF contains a transitive dependency for that package which indicates a source that's not an enabled source for the solution.\r\n\r\nThe current behavior introduced in https://github.com/NuGet/NuGet.Client/pull/5459 is an error message shown in the error list that states the above. However, explicit advice isn't given.\n\n### Desired Behavior\n\nCreate a new NU Error Code that can be used as a hyperlink from the VS Error List to point to documentation with more information about resolving the issue.\n\n### Additional Context\n\n_No response_"},{"Id":"33083587083","Type":"IssuesEvent","CreatedAt":"2023-11-03T21:01:45","Actor":"joj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12986","RelatedDescription":"Opened issue \"Adding a reference to an esproj from an ASP.Net project results in a NU1105 error\" (#12986) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Other/NA\n\n### Product Version\n\nLatest\n\n### Worked before?\n\n17.8\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWhen creating a new ASP.Net project, if we add a new JavaScript project and reference it from ASP.Net, we get this error:\r\nNU1105  Unable to find project information for 'C:\\Users\\daroth\\Documents\\GitHub\\javiercn\\EsprojPlusWebAppIntegration\\EsprojPlusWebAppIntegration.Assets\\EsprojPlusWebAppIntegration.Assets.esproj'. If you are using Visual Studio, this may be because the project is unloaded or not part of the current solution so run a restore from the command-line. Otherwise, the project file may be invalid or missing targets required for restore.\r\n\r\nI'm attaching a sample project and a binlog that shows the issue. Restoring from command line fixes the issue, but that's not really possible from within Visual Studio. This behavior seems new, only happening on internal versions of VS at the moment.\r\n[EsprojPlusWebAppIntegration.zip](https://github.com/NuGet/Home/f\r\n[binlog.zip](https://github.com/NuGet/Home/files/13254665/binlog.zip)\r\niles/13254662/EsprojPlusWebAppIntegration.zip)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"33072463243","Type":"IssuesEvent","CreatedAt":"2023-11-03T13:09:53","Actor":"adrianm64","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12972","RelatedDescription":"Closed issue \"How to use ref with .netframework and packagereference\" (#12972) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nnuget 6.7.0.127\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI have a package containing a compile time assembly which must not be copied to the output folder.\r\nThe package is used in 3 types of applications\r\n1. .NetFramework packages.config\r\n2. .NetFramework PackageReference\r\n3. SDK PackageReference\r\n\r\nWith package.config (1) I can set CopyLocal to false\r\nWith SDK (3) I use the \"ref\" folder in the package\r\nBut I have not found a way to solve type 2.\r\nCopyLocal is not available and \"ref\" does not seem to work.\r\n\r\nMy .nuspec file contains\r\n```xml\r\n<file src=\"MyAssembly.dll\" target=\"lib/net48\" />\r\n<file src=\"MyAssembly.dll\" target=\"ref/net48\" />\r\n<file src=\"MyAssembly.dll\" target=\"ref/netstandard2.1\" />\r\n```\r\n\"lib\" is needed for type 1, \"ref/netstandard2.1\" is for type 3, both work fine.\r\nHave tried with and without the \"ref/netstandard2.1\" line.\r\n\r\nCreated asset file for case 2 looks like\r\n```json\r\n\"MyAssembly/1.0.0\": {\r\n     \"type\": \"package\",\r\n      \"compile\": {\r\n          \"ref/net48/MyAssembly.dll\": { }\r\n      },\r\n      \"runtime\": {\r\n        \"lib/net48/MyAssembly.dll\": { }\r\n      }\r\n    },\r\n```\r\n\n\n### Verbose Logs\n\n```shell\nverbose nuget log just says \"checking compatability..\" and \"all packages compatible ...\"\n```\n"},{"Id":"33069703581","Type":"IssuesEvent","CreatedAt":"2023-11-03T11:19:11","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12984","RelatedDescription":"Opened issue \"Warn & deprecate users using insecure / cleartext credentials in nuget.config files\" (#12984) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nRIght now there is no warning to end-consumers who use configuration-based authentication that their credentials are insecure.\r\n\r\nWe should warn them and encourage them to use a [proper credential manager](https://github.com/microsoft/artifacts-credprovider) or something that guarantees encryption given the lack of a cross-platform guarantee through https://github.com/NuGet/Home/issues/1851.\r\n\r\nWe should update https://learn.microsoft.com/en-us/nuget/consume-packages/consuming-packages-authenticated-feeds to discourage use of `nuget.config` credentials as well.\r\n\r\nA warning might appear in the product similar to what other providers do when credentials are stored in plaintext i.e. https://github.com/git-ecosystem/git-credential-manager/blob/main/docs/credstores.md :\r\n\r\n:warning: **WARNING** :warning:\r\n\r\n**This storage mechanism is NOT secure!**\r\n\r\n**Secrets and credentials are stored in plaintext files _without any security_!**\r\n\r\nIt is **HIGHLY RECOMMENDED** to always use one of the other credential store\r\noptions above. This option is only provided for compatibility and use in\r\nenvironments where no other secure option is available.\r\n\r\nIf you chose to use this credential store, it is recommended you set the\r\npermissions on this directory such that no other users or applications can\r\naccess files within. If possible, use a path that exists on an external volume\r\nthat you take with you and use full-disk encryption.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"33053667747","Type":"IssuesEvent","CreatedAt":"2023-11-02T19:06:11","Actor":"JL03-Yue","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12983","RelatedDescription":"Opened issue \"Question about if NuGet's ManagedCodeConvention can check equality of TFMs for .NET tools\" (#12983) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nCurrently, when installing a .NET tool, if the TFM for the tool is not compatible, it errors out at runtime during `dotnet run`. The problem with this experience is that it is just affects that one launch, since it is a host function, but doesn't affect `runtimeconfig`.\n\n### Desired Behavior\n\nI'm seeking to change this behavior such that instead of erroring out at runtime, providing an error at install time. For example, if the runtime of a tool is not compatible, then either suggesting users to install the corresponding runtime, or suggesting users to use an optional parameter(implemented tool side)\r\n```Installation failed.\r\n\r\nThis app wasn't installed because it won't run on your machine. This can be resolved by one of the following:\r\n\r\n1. Install with the `--roll-forward` flag, using with the following command.\r\n\r\ndotnet tool install -g --roll-forward footool (this should be copy/pastable)\r\n\r\n2. Install .NET 7 (which the tool requires) with the following link\r\n\r\nhttps://aka.ms/dotnet/download/sdk/7`\r\n```\r\n\r\nSome discussions with Nikolche suggests that the `ManagedCodeConvention` class, the `TargetFrameworkName_CompatibilityTest` and `TargetFrameworkName_NearestCompareTest` might be the method involved, yet many class properties are readonly and unable to changed. I wonder if there are better ideas to extend/implement this\n\n### Additional Context\n\n_No response_"},{"Id":"33052656598","Type":"IssuesEvent","CreatedAt":"2023-11-02T18:21:20","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12606","RelatedDescription":"Closed issue \"NU1100 is used for both TFM incompatibility and for an unresolved PackageSourceMapping\" (#12606) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK\r\n\r\n### Current Behavior\r\n\r\nWhen an install fails, the message I get is this: \"Error    NU1100    Unable to resolve 'Swashbuckle.Core (>= 5.6.0)' for '.NETFramework,Version=v4.7.2/win-x86'. PackageSourceMapping is enabled, the following source(s) were not considered: nuget, nuget-build. \"\r\n\r\nI don't know if the failure is because of TFM incompatibility, or because I forgot to add source mapping\r\n\r\n![image](https://github.com/NuGet/Home/assets/49205731/ddfe8a46-cf89-4f60-aeca-ba499e9981bd)\r\n\r\n\r\n### Desired Behavior\r\n\r\nSpecific messages for either scenario. \r\nSpecify whether the TFM not compatible, or is the PackageSourceMapping not configured?\r\n\r\n### Additional Context\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-11-06T03:30:19.946453Z","RunDurationInMilliseconds":1147}