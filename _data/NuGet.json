{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29238230925","Type":"IssuesEvent","CreatedAt":"2023-05-22T22:59:58","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9514","RelatedDescription":"Opened issue \"[NuGet.org Bug]: API key revocation SQL query does client side filtering when it can be done server-side\" (#9514) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\n`UsersController` has the following code snippets:\r\n\r\nhttps://github.com/NuGet/NuGetGallery/blob/912cd3bd73432f6edf8a9e20106d3cc635ca99df/src/NuGetGallery/Controllers/UsersController.cs#L888-L890\r\n\r\nhttps://github.com/NuGet/NuGetGallery/blob/912cd3bd73432f6edf8a9e20106d3cc635ca99df/src/NuGetGallery/Controllers/UsersController.cs#L921-L923\r\n\r\nhttps://github.com/NuGet/NuGetGallery/pull/9509 - PR currently introduces another instance of it.\r\n\r\nThis makes EF to retrieve the full list of credentials for a user which is then filtered client side. Assuming the number of credentials per user is low, it shouldn't matter much, but can increase response times when a user has tons of API keys.\n\n### Repro Steps\n\nN/A\n\n### Expected Behavior\n\nQuery expects a single credential as the output and should be modified so that SQL returns a single item, rather than all of them.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29237130404","Type":"IssuesEvent","CreatedAt":"2023-05-22T21:45:07","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9513","RelatedDescription":"Opened issue \"[NuGet.org Bug]: API key scope is not prefilled when creating more than one API key\" (#9513) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen you create an API key you get \"Select scopes\" prefilled to \"Push new packages and package versions\" when you create the first key and not prefilled when you create a second one without leaving the page.\r\n\n\n### Repro Steps\n\nPrerequisite: have an account that is not a member of any organizations (so that \"Package owner\" drop down list in the API key page contains exactly one entry besides \"Select an owner...\").\r\n\r\n1. Go to https://www.nuget.org/account/apikeys\r\n2. Create an API key, notice \"Push new packages and package versions\" is selected under \"Select Scopes\"\r\n3. Without reloading page create another API key. Notice that this time nothing is selected under \"Select Scopes\".\n\n### Expected Behavior\n\nConsistency between the first and subsequent experiences. Either don't prefill anything any time or prefill the same every time.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29235145402","Type":"PullRequestEvent","CreatedAt":"2023-05-22T19:59:52","Actor":"mert019","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9509","RelatedDescription":null,"RelatedBody":"* Revoke button added for api keys.\r\n* Existing revocation mechanism used.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9426\r\n\r\nedit by @joelverhagen -- added screenshot\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/7f310b08-f091-4dba-908e-9d614a4bea86)\r\n"},{"Id":"29235140252","Type":"PullRequestEvent","CreatedAt":"2023-05-22T19:59:39","Actor":"mert019","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9509","RelatedDescription":"Closed pull request \"Add revoke button to API keys page\" (#9509) at NuGet/NuGetGallery","RelatedBody":"* Revoke button added for api keys.\r\n* Existing revocation mechanism used.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9426\r\n\r\nedit by @joelverhagen -- added screenshot\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/7f310b08-f091-4dba-908e-9d614a4bea86)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29238907491","Type":"IssuesEvent","CreatedAt":"2023-05-22T23:53:25","Actor":"dainizzz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12569","RelatedDescription":"Closed issue \"[Feature] Add dontet nuget config functionality in VS Options dialog\" (#12569) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nThis will add a new page in the Visual Studio Options dialog.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29234658875","Type":"PullRequestEvent","CreatedAt":"2023-05-22T19:34:26","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12611","RelatedDescription":"Opened pull request \"Update vulnerabilities-in-restore.md\" (#12611) at NuGet/Home","RelatedBody":"Adds a vulnerability mode selection."},{"Id":"29227767511","Type":"IssuesEvent","CreatedAt":"2023-05-22T14:35:17","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12595","RelatedDescription":"Closed issue \"6.6.0 - NuGetProtocolVersionNotSupportedException (nugetclient over azuredevops)\" (#12595) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n 6.6.0.61 / 6.6.0-preview.3+0fa557836fa35aee7d60776ef0c88176dbcd22ac.0fa557836fa35aee7d60776ef0c88176dbcd22ac\n\n### Worked before?\n\n6.5.0\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHi\r\nAfter upgrading nuget.client to version 6.6.x the push command returns the exception \r\n\r\n**VstsNuGetPush.NuGetProtocolVersionNotSupportedException: The supplied URL appears to be a NuGet V2 URL. This command only supports the NuGet V3 protocol.**\r\n\r\nRestoring to the previous version (6.5.x) the command works.\r\nIs it a wrapper problem (VstsNuGetPush.exe)?\n\n### Verbose Logs\n\n```shell\n2023-05-18T08:39:55.9878808Z ##[section]Starting: nuget push\r\n2023-05-18T08:39:56.0125701Z ==============================================================================\r\n2023-05-18T08:39:56.0126002Z Task         : NuGet\r\n2023-05-18T08:39:56.0126153Z Description  : Restore, pack, or push NuGet packages, or run a NuGet command. Supports NuGet.org and authenticated feeds like Azure Artifacts and MyGet. Uses NuGet.exe and works with .NET Framework apps. For .NET Core and .NET Standard apps, use the .NET Core task.\r\n2023-05-18T08:39:56.0126601Z Version      : 2.220.2\r\n2023-05-18T08:39:56.0126709Z Author       : Microsoft Corporation\r\n2023-05-18T08:39:56.0126869Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/package/nuget\r\n2023-05-18T08:39:56.0127050Z ==============================================================================\r\n2023-05-18T08:39:57.6175788Z [command]C:\\Windows\\system32\\chcp.com 65001\r\n2023-05-18T08:39:57.6444477Z Active code page: 65001\r\n2023-05-18T08:39:58.9734932Z Detected NuGet version 6.6.0.61 / 6.6.0-preview.3+0fa557836fa35aee7d60776ef0c88176dbcd22ac.0fa557836fa35aee7d60776ef0c88176dbcd22ac\r\n2023-05-18T08:39:59.3503036Z [command]D:\\a\\_tasks\\NuGetCommand_333b11bd-d341-40d9-afcf-b32d5ce6f23b\\2.220.2\\VstsNuGetPush\\0.19.0\\tools\\VstsNuGetPush.exe D:\\a\\1\\s\\Source\\mypack\\bin\\Release\\mypack.0.0.2.37676.nupkg -Source https://myorg.pkgs.visualstudio.com/b80d423f-059b-4782-9a75-77a18e0e3f40/_packaging/bdf05d42-c9c3-7e40-bb9f-ba227d12dc45/nuget/v2 -AccessToken *** -NonInteractive -Verbosity Detailed\r\n2023-05-18T08:40:03.1267253Z Error:\r\n2023-05-18T08:40:03.1267774Z VstsNuGetPush.NuGetProtocolVersionNotSupportedException: The supplied URL appears to be a NuGet V2 URL. This command only supports the NuGet V3 protocol.\r\n2023-05-18T08:40:03.1268319Z    at VstsNuGetPush.NuGetServiceIndexHttpClient.<>c__DisplayClass2_0.<<GetServiceIndexAsync>b__0>d.MoveNext()\r\n2023-05-18T08:40:03.1269177Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-05-18T08:40:03.1269605Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-05-18T08:40:03.1270052Z    at VstsNuGetPush.RetryHelper.<RetryOnExceptionHelperAsync>d__0`1.MoveNext()\r\n2023-05-18T08:40:03.1270688Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-05-18T08:40:03.1271092Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-05-18T08:40:03.1271554Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-05-18T08:40:03.1272065Z    at VstsNuGetPush.NuGetServiceIndexHttpClient.<GetServiceIndexAsync>d__2.MoveNext()\r\n2023-05-18T08:40:03.1272727Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-05-18T08:40:03.1273143Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-05-18T08:40:03.1273628Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-05-18T08:40:03.1274148Z    at VstsNuGetPush.HttpServiceIndexProvider.<Get>b__4_0(VssClientCredentials credentials)\r\n2023-05-18T08:40:03.1275067Z    at VstsNuGetPush.CredentialSelector.TrySelectCredential[TResult](Func`2 func, IVssCredentialStorage vssClientCredentialStorage, CredentialPromptType promptType, TResult& result)\r\n2023-05-18T08:40:03.1275670Z    at VstsNuGetPush.CredentialSelector.Select[TResult](Func`2 func)\r\n2023-05-18T08:40:03.1276100Z    at VstsNuGetPush.Patterns.Helpers.FactoryAdaptorChain`2.Get()\r\n2023-05-18T08:40:03.1276465Z    at System.Lazy`1.CreateValue()\r\n2023-05-18T08:40:03.1276769Z    at System.Lazy`1.LazyInitValue()\r\n2023-05-18T08:40:03.1277323Z    at VstsNuGetPush.VstsNuGetPushCommand.MainCore(ILogger logger)\r\n2023-05-18T08:40:03.1277746Z    at VstsNuGetPush.VstsNuGetPushCommand.Main()\r\n2023-05-18T08:40:03.1278093Z Trying to authenticate with auth token.\r\n2023-05-18T08:40:03.1278652Z Authentication and request took 00:00:03.2569899\r\n2023-05-18T08:40:03.1907716Z ##[error]Error: An unexpected error occurred while trying to push the package with VstsNuGetPush.exe. Exit code(1) and error(Error:\r\nVstsNuGetPush.NuGetProtocolVersionNotSupportedException: The supplied URL appears to be a NuGet V2 URL. This command only supports the NuGet V3 protocol.\r\n   at VstsNuGetPush.NuGetServiceIndexHttpClient.<>c__DisplayClass2_0.<<GetServiceIndexAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at VstsNuGetPush.RetryHelper.<RetryOnExceptionHelperAsync>d__0`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at VstsNuGetPush.NuGetServiceIndexHttpClient.<GetServiceIndexAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at VstsNuGetPush.HttpServiceIndexProvider.<Get>b__4_0(VssClientCredentials credentials)\r\n   at VstsNuGetPush.CredentialSelector.TrySelectCredential[TResult](Func`2 func, IVssCredentialStorage vssClientCredentialStorage, CredentialPromptType promptType, TResult& result)\r\n   at VstsNuGetPush.CredentialSelector.Select[TResult](Func`2 func)\r\n   at VstsNuGetPush.Patterns.Helpers.FactoryAdaptorChain`2.Get()\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at VstsNuGetPush.VstsNuGetPushCommand.MainCore(ILogger logger)\r\n   at VstsNuGetPush.VstsNuGetPushCommand.Main())\r\n2023-05-18T08:40:03.1931604Z ##[error]Packages failed to publish\r\n2023-05-18T08:40:03.1934130Z ##[section]Finishing: nuget push\n```\n"},{"Id":"29197141692","Type":"IssuesEvent","CreatedAt":"2023-05-20T09:58:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12610","RelatedDescription":"Opened issue \"NuGetAudit should warn when no vulnerability data available\" (#12610) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWith the newly available NuGetAudit feature, it gets package vulnerability data from package sources. However, if none of the package sources contain vulnerability information (for example, a package source that upstreams to nuget.org, but doesn't yet know about the brand new vulnerability info server resource), then the initial implementation of the feature will succeed without any warnings. This is indistinguishable from none of the packages having known vulnerabilities, and therefore gives a false sense of security.\r\n\r\nIn this scenario, restore should raise a warning that no package sources provide vulnerability data.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29193443648","Type":"IssuesEvent","CreatedAt":"2023-05-19T23:08:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12609","RelatedDescription":"Opened issue \"There are no visual indicators for the Package Source Mapping status in details pane\" (#12609) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nPM UI now shows a string detailing the Package Source Mapping status (off / found / requires a mapping), but there are no visual indicators/icons to reflect that status.\n\n### Desired Behavior\n\nShow icons along with the status strings to emphasize the status.\n\n### Additional Context\n\n_No response_"},{"Id":"29193419980","Type":"IssuesEvent","CreatedAt":"2023-05-19T23:05:53","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12608","RelatedDescription":"Opened issue \"VS Options shortcut from PMUI for PackageSourceMappings doesn't scroll to or select the Package\" (#12608) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nThe shortcut (`Configure` button) in PM UI for Package Source Mapping settings opens the VS Options dialog. The default behavior is to show the list scrolled to the top with nothing selected.\n\n### Desired Behavior\n\nWould be handy if the dialog scrolled down to and selected the Package in the VS Options PackageSourceMapping dialog for the package that was selected in the PMUI.\n\n### Additional Context\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-05-23T03:30:23.2479395Z","RunDurationInMilliseconds":1024}