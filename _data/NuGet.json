{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13344805709","Type":"IssuesEvent","CreatedAt":"2020-08-28T22:59:11","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7853","RelatedDescription":"Closed issue \"\"Contact owners\" link should not appear on a package details page when there are no owners\" (#7853) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nA package details page for a package without any owners still shows the \"Contact owners\" link on the right. It is unclear what will happen when the message is sent.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Find a package with no owners ([example](https://www.nuget.org/packages/bar/))\r\n2. Look at its package details page\r\n3. See the \"Contact owners\" link on the right\r\n\r\n### Expected behavior\r\nNo \"Contact owners\" link.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/102933/75279548-a1510400-57c0-11ea-8acd-a6d230eb3f83.png)\r\n"},{"Id":"13344710953","Type":"IssuesEvent","CreatedAt":"2020-08-28T22:39:44","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7921","RelatedDescription":"Closed issue \"[Symbols] Reject .snupkg uploads that contain duplicate entries\" (#7921) at NuGet/NuGetGallery","RelatedBody":"A .snupkg with duplicate entries is considered malformed and should be rejected with a helpful error message. Instead, the .snupkg is accepted but causes the symbol validator job to throw exceptions and deadletter the message. This results in alerting noise and a poor user experience.\r\n\r\nWe considered accepting these packages in https://github.com/NuGet/NuGet.Jobs/pull/876 but decided against it."},{"Id":"13344628689","Type":"IssuesEvent","CreatedAt":"2020-08-28T22:24:11","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8175","RelatedDescription":"Opened issue \"[Advanced Search] Sort by downloads is broken on packages with popularity transfers\" (#8175) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nIf you search for `WindowsAzure.Storage` and sort results by downloads, the expected top result is `WindowsAzure.Storage`. However, it is not (see [this](https://www.nuget.org/packages?packagetype=&sortby=totalDownloads-desc&q=windowsazure.storage&prerel=True)).\r\n\r\n### Additional context\r\nToday the search documents' `TotalDownloadCount` field contains the packages' download counts after popularity transfers. This worked as expected as the displayed download counts come from the downloads auxiliary file, not the `TotalDownloadCount` field from search documents. \r\n\r\nUnfortunately, the advanced search sort by download uses this `TotalDownloadCount` field to sort results. Thus, download sorting is broken on packages with popularity transfers."},{"Id":"13342464786","Type":"IssuesEvent","CreatedAt":"2020-08-28T17:46:17","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8174","RelatedDescription":"Opened issue \"Add TLS 1.3 support\" (#8174) at NuGet/NuGetGallery","RelatedBody":"Add TLS 1.3 support for nuget.org. This was request by a customer in a support request."},{"Id":"13341386233","Type":"IssuesEvent","CreatedAt":"2020-08-28T15:51:09","Actor":"star-gate","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8173","RelatedDescription":"Opened issue \"Adding .nupkg file to packages folder over file share\" (#8173) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nWhen a .nupkg file is dropped into the Packages folder that is a shared folder, the package will not be 'extracted (unsure if this is correct terminology)'  unless a 2nd .nupkg file is dropped into the packages shared folder. \r\n\r\nDropping the .nupkg files into the Packages folder while remoted into the server the server works with no issues\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. After setting up nuget.server as an IIS website, with the default web.config, share  the Packages folder with everyone Full control permissions (for ease)\r\n2. Add folder permissions to the Packages folder for ServerName\\IIS_ISURS with full control (for ease)\r\n3. Download any package from nuget.org and drop one file into the shared folder from step 1\r\n4. Drop a second file into the folder from step 1 and the first file be 'extracted' whereas the 2nd remains in .nupkg format\r\n\r\n*Note\r\nDoing these steps directly from the server, NOT using shares dropping the files into the folder, ex: C:\\nuget\\Packages it works with no issues\r\n\r\n### Expected behavior\r\nWhen one file is dropped into the file share it will remain in .nupkg format until another .nupkg file is added. Then the first package added will be 'extracted' but the 2nd will remain in it's .nupkg format. \r\n\r\n### Screenshots\r\nAfter 1 file is dropped in\r\n![image](https://user-images.githubusercontent.com/68915058/91587414-5acd9500-e91c-11ea-8884-9a128d9b9182.png)\r\n\r\nAfter 2nd file is dropped in\r\n![image](https://user-images.githubusercontent.com/68915058/91586669-53f25280-e91b-11ea-8839-9f797d0b576b.png)\r\n![image](https://user-images.githubusercontent.com/68915058/91586706-5c4a8d80-e91b-11ea-88af-b107f9790e5d.png)\r\n\r\n### Additional context\r\nOnly seems to be an issue for us when dropping in a .nupkg file over a file share or using \\\\server\\C$\\nuget\\Packages"},{"Id":"13333561041","Type":"IssuesEvent","CreatedAt":"2020-08-27T23:21:46","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8170","RelatedDescription":"Closed issue \"Nuget installed \" (#8170) at NuGet/NuGetGallery","RelatedBody":"Nuget is installed, just not for me... 😣\r\n\r\nugh, i know... so instead of trying to cunstruct an application (that's how i got into this mess) i'm receptive to asking for help. there's quite a few `F ups but right now i need to remotely access my laptop in order to fix. Please, be kind to my mess. It's mine and i own that mess. i need help cleaning up the mess i have made out of my life.\r\n\r\nG"},{"Id":"13333361863","Type":"IssuesEvent","CreatedAt":"2020-08-27T22:48:53","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8172","RelatedDescription":"Opened issue \"Test packages are visible on search results when filtering by last uploaded\" (#8172) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nSee twitter thread: https://twitter.com/buhakmeh/status/1299115494973341696\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Run Functional tests / E2E tests\r\n2. Sort search results by \"Recently updated\"\r\n\r\n### Expected behavior\r\nUser packages only are shown\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/16807822/91502274-839e4d80-e87c-11ea-9953-8a7d873d0a2f.png)\r\n\r\n### Additional context\r\nWe need to unlist/delete those packages after test completion"},{"Id":"13307161864","Type":"IssuesEvent","CreatedAt":"2020-08-25T21:35:45","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8171","RelatedDescription":"Closed issue \"[Cookie Compliance] Finish the implementation on the front-end side.\" (#8171) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13307157098","Type":"IssuesEvent","CreatedAt":"2020-08-25T21:35:09","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8171","RelatedDescription":"Opened issue \"[Cookie Compliance] Finish the implementation on the front-end side.\" (#8171) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13306692657","Type":"PullRequestEvent","CreatedAt":"2020-08-25T20:42:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8166","RelatedDescription":"Merged pull request \"Store embedded readme file to storage\" (#8166) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes:\r\n\r\n* Store embedded readme into readmes container\r\n\r\nNo change in terms of displaying view model, use the current implementation to display \r\n\r\nDisplay embedded readme on details page\r\n![display](https://user-images.githubusercontent.com/64443925/90726901-50a1fb80-e277-11ea-93bf-a9fbbe64a665.PNG)\r\n\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/3266"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13345502042","Type":"IssuesEvent","CreatedAt":"2020-08-29T02:05:40","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9956","RelatedDescription":"Opened issue \"Make creating ResolvedActions for uninstall  from PM UI a parallel operation\" (#9956) at NuGet/Home","RelatedBody":"## Details about Problem\nWith my PMUI performance improvement [PR#3559](https://github.com/NuGet/NuGet.Client/pull/3559) makes `Uninstall` operation 2 times faster for large solution like OrchardCore.\nBefore https://gist.github.com/erdembayar/2ba554f169e4f078baa61976affa62d4.  2 min 1 seconds.\nAfter    https://gist.github.com/erdembayar/2f9aebfbdc78e31d229a03223c8b1888 . 58 seconds. \n\n"},{"Id":"13345276062","Type":"IssuesEvent","CreatedAt":"2020-08-29T00:53:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7790","RelatedDescription":"Closed issue \"Hard to use forked copies - strong naming\" (#7790) at NuGet/Home","RelatedBody":"The current build.ps1 and build scripts will generate files that do not generate binaries with strong names. This makes it harder to use in forks where the strong name is needed. \r\n\r\nThe build infrastructure is also fairly complicated. \r\n\r\nIt would be helpful if the build.ps1 script had a parameter to enable public signing for all files that would apply the correct snk using the PublicSign option."},{"Id":"13345146541","Type":"IssuesEvent","CreatedAt":"2020-08-29T00:17:46","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9955","RelatedDescription":"Opened issue \"Parallelize create actions before preview for PreviewBuildIntegratedProjectsActionsAsync  method\" (#9955) at NuGet/Home","RelatedBody":"## Details about Problem\nDuring my performance improvement effort Nikolche [pointed out](https://github.com/NuGet/NuGet.Client/pull/3559/files#r479564095) I can parallelize create actions before preview. Since I agree with him creating this follow up issue.\n`I think this whole loop can be parallelized too. The bottleneck in particular is the LockFile.Read.\nI don't think you should do it now do, I'd create a future task if you agree with my suggestion.`\n"},{"Id":"13343985436","Type":"IssuesEvent","CreatedAt":"2020-08-28T20:50:22","Actor":"bladewolf55","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9954","RelatedDescription":"Opened issue \"NuGet again throws exceptions \"authors is required\" \"description is required\", ignoring csproj/nuspec replacement tokens\" (#9954) at NuGet/Home","RelatedBody":"For previous history on this problem, see issue [#4234](https://github.com/NuGet/Home/issues/4234).\r\n\r\nUsing the exact same project and build:\r\n\r\nNuGet Version 5.6.0.6591 does not display the Authors/Description error.  However, version 5.7.0.6726 does. \r\n\r\nI'm surprised this important issue doesn't seem to be regression tested. It's fixed, it comes back, it's fixed. . . .\r\n\r\n**5.6 output**  \r\n```\r\nnuget pack -verbosity detailed\r\nNuGet Version: 5.6.0.6591\r\nAttempting to build package from 'ClassLibrary1.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.7.0.37604' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'C:\\Users\\charl\\Google Drive\\Development\\NuGet Testing\\NuGet Dependency Resolution\\Framework Major-Numbered\\ClassLibrary1\\ClassLibrary1\\bin\\Debug'.\r\nUsing 'ClassLibrary1.nuspec' for metadata.\r\nAdd file 'C:\\Users\\charl\\Google Drive\\Development\\NuGet Testing\\NuGet Dependency Resolution\\Framework Major-Numbered\\ClassLibrary1\\ClassLibrary1\\bin\\Debug\\ClassLibrary1.dll' to package as 'lib\\net472\\ClassLibrary1.dll'\r\n\r\nId: ClassLibrary1\r\nVersion: 1.0.0\r\nAuthors: C\r\nDescription: D\r\nDependencies:\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'ClassLibrary1.nuspec'.\r\nAdded file 'lib/net472/ClassLibrary1.dll'.\r\nAdded file 'package/services/metadata/core-properties/0a9c65c5d99145c6af36a7c3d0d48724.psmdcp'.\r\n\r\nSuccessfully created package 'C:\\Users\\charl\\Google Drive\\Development\\NuGet Testing\\NuGet Dependency Resolution\\Framework Major-Numbered\\ClassLibrary1\\ClassLibrary1\\ClassLibrary1.1.0.0.nupkg'.\r\n```\r\n\r\n**5.7 output**   \r\n```\r\nnuget pack -verbosity detailed\r\nNuGet Version: 5.7.0.6726\r\nAttempting to build package from 'ClassLibrary1.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.7.0.37604' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'C:\\Users\\charl\\Google Drive\\Development\\NuGet Testing\\NuGet Dependency Resolution\\Framework Major-Numbered\\ClassLibrary1\\ClassLibrary1\\bin\\Debug'.\r\nCould not load file or assembly 'file:///C:\\Program Files (x86)\\NuGet CLI\\nuget.exe' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)\r\nUsing 'ClassLibrary1.nuspec' for metadata.\r\nAuthors is required.\r\nDescription is required.\r\nSystem.Exception: Authors is required.\r\nDescription is required.\r\n   at NuGet.Packaging.Manifest.Validate(Manifest manifest)\r\n   at NuGet.Packaging.Manifest.ReadFrom(Stream stream, Func`2 propertyProvider, Boolean validateSchema)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessNuspec(PackageBuilder builder, String basePath)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.Commands.PackCommandRunner.RunPackageBuild()\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"13343878632","Type":"IssuesEvent","CreatedAt":"2020-08-28T20:36:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9002","RelatedDescription":"Closed issue \"DependencyGraphSpec should support adding projects concurrently\" (#9002) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThe [DependencyGraphSpec](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.ProjectModel/DependencyGraphSpec.cs) object uses a standard collection object as a backing collection.  This makes it impossible to use it in a parallel loop or multiple threads.  It should use a concurrent collection instead.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Any\r\n\r\nNuGet version (x.x.x.xxx): Any\r\n\r\ndotnet.exe --version (if appropriate): any\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"13343609330","Type":"IssuesEvent","CreatedAt":"2020-08-28T20:01:41","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9010","RelatedDescription":"Closed issue \"Signing: Design dotnet package signing commands\" (#9010) at NuGet/Home","RelatedBody":"Write up an RFC describing the commands and options and get it reviewed before implementing the actual commands."},{"Id":"13343609102","Type":"PullRequestEvent","CreatedAt":"2020-08-28T20:01:39","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/9945","RelatedDescription":"Merged pull request \"spec for dotnet signature-related subcommands\" (#9945) at NuGet/Home","RelatedBody":"cc @dtivel @heng-liu @JonDouglas @kartheekp-ms @KathleenDollard"},{"Id":"13342556384","Type":"IssuesEvent","CreatedAt":"2020-08-28T17:56:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9950","RelatedDescription":"Closed issue \"Update the VS/MSBuild dependencies throughout our repo\" (#9950) at NuGet/Home","RelatedBody":"It's good practice to keep our VS/MSBuild dependencies up to date. \r\nThis tasks covers moving from prerelease to stable versions for MSBUild and bringing the VS dependencies as close to current shipping as possible."},{"Id":"13334219640","Type":"IssuesEvent","CreatedAt":"2020-08-28T01:23:13","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9947","RelatedDescription":"Closed issue \"Nuget.Frameworks 5.8 prev2 is missing\" (#9947) at NuGet/Home","RelatedBody":"I'm not clear about what's going on, but I think there should be Nuget.Frameworks 5.8 prev2 at https://www.nuget.org/packages/NuGet.Frameworks/\r\n\r\n![image](https://user-images.githubusercontent.com/5352980/91295377-3bb1f480-e7b0-11ea-9625-2c252cad7b35.png)"},{"Id":"13333821739","Type":"IssuesEvent","CreatedAt":"2020-08-28T00:09:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6784","RelatedDescription":"Closed issue \"Improve testing facilities for mono\" (#6784) at NuGet/Home","RelatedBody":"Keep Mono in mind when writing tests, which DLL they go to. \r\n\r\nAdd Mono tests on Linux and Windows \r\n\r\nDocument what tests run where  "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-08-29T05:30:38.2667708Z","RunDurationInMilliseconds":1645}