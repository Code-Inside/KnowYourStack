{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"44841393717","Type":"PullRequestEvent","CreatedAt":"2024-12-16T19:59:51","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10309","RelatedDescription":"Merged pull request \"Update EntityFramework package for vulnerability alert \" (#10309) at NuGet/NuGetGallery","RelatedBody":"EntityFramework 6.4.4 is deprecated with vulnerable, update to latest stable. \r\n\r\nNote: There is change:  New SQL Server / Azure SQL Database provider (contributed by the community) - [Microsoft.EntityFramework.SqlServer](https://www.nuget.org/packages/Microsoft.EntityFramework.SqlServer/). This new provider uses the modern SQL Server client [Microsoft.Data.SqlClient](https://www.nuget.org/packages/Microsoft.Data.SqlClient). For more information about configuration of this provider, see [Microsoft.EntityFramework.SqlServer Guide](https://learn.microsoft.com/en-us/ef/ef6/what-is-new/microsoft-ef6-sqlserver).\r\n\r\nIt provides new provider configuration, no changes on default one. We should be good\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/5732"},{"Id":"44809599112","Type":"IssuesEvent","CreatedAt":"2024-12-16T02:13:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10310","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Github repository dependenc list should not include package's own repo\" (#10310) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Describe the bug\r\n\r\nI found a few times that a nuget package lists its own repo as the dependent Github repo. Since I saw it again today, I'd like to open an issue for this.\r\n\r\n### Repro Steps\r\n\r\nNuget Url: https://www.nuget.org/packages/FileSignatures\r\nGithub Repo URL: https://github.com/neilharvey/FileSignatures/\r\n\r\n### Expected Behavior\r\n\r\nIt should not list its own Github repo as a dependent repo.\r\n\r\n### Screenshots\r\n\r\n![image](https://github.com/user-attachments/assets/ba36071a-a55a-45db-b719-5489b9b0d4c1)\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"44807074974","Type":"IssuesEvent","CreatedAt":"2024-12-15T22:54:46","Actor":"tonyqus","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10310","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Github repository dependency list should not include its own repo\" (#10310) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nI found a few times that a nuget package lists it's self repo as the dependent Github repo. Since I saw it again today, I'd like to open an issue for this.\n\n### Repro Steps\n\nNuget Url: https://www.nuget.org/packages/FileSignatures\r\nGithub Repo URL: https://github.com/neilharvey/FileSignatures/\n\n### Expected Behavior\n\nIt should not list its own Github repo as a dependent repo.\n\n### Screenshots\n\n![image](https://github.com/user-attachments/assets/ba36071a-a55a-45db-b719-5489b9b0d4c1)\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"44853039345","Type":"IssuesEvent","CreatedAt":"2024-12-17T05:33:20","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13990","RelatedDescription":"Closed issue \"Support pinning `NETStandard.Library` in CPM.\" (#13990) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nI discovered that if you manually reference the latest version of `NETStandard.Library` while referencing a .NET Standard 1.x only package, the dozens of NS1's transitive dependencies disappear when your project targets a framework compatible with .NET Standard 2.0. However if you have Central Package Management enabled, pinning `NETStandard.Library` with `PackageVersion` is not possible and results in [NU1009](https://learn.microsoft.com/en-gb/nuget/reference/errors-and-warnings/NU1009) errors.\r\n\r\nIt would be great if this was somehow allowed, and would enable getting rid of pinning to non-vulnerable packages brought by NS1.x, like what MSBuild has to do ([1](https://github.com/dotnet/msbuild/blob/6ca999210ce0e6541d92532874b732c4fceee8de/eng/dependabot/Packages.props#L46-L50), [2](https://github.com/dotnet/msbuild/blob/6ca999210ce0e6541d92532874b732c4fceee8de/eng/dependabot/Packages.props#L58-L59)).\n\n### Additional Context and Details\n\nThere are multiple ways of achieving this, ranging from just not failing when that library is pinned with `PackageVersion`, updating the meaning of the existing `NetStandardImplicitPackageVersion` property, up to automatically referencing a new version of the library in an opt-out fashion."},{"Id":"44848000494","Type":"PullRequestEvent","CreatedAt":"2024-12-17T00:43:21","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/14001","RelatedDescription":"Opened pull request \"Update PM UI README rendering spec\" (#14001) at NuGet/Home","RelatedBody":"Update to specify new message and tab selection behavior. "},{"Id":"44845371616","Type":"IssuesEvent","CreatedAt":"2024-12-16T22:28:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13995","RelatedDescription":"Closed issue \"[Wiki] Docs for msbuild equivalent property for --force-evaluate not correct\" (#13995) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nThe wiki says that there isn't an msbuild equivalent property for --force-evaluate, but per https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#lock-file-extensibility `RestoreForceEvaluate` does just that.\r\n\r\nhttps://github.com/NuGet/Home/wiki/Enable-repeatable-package-restore-using-lock-file#restore-command-line-options\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-18T03:30:28.9413114Z","RunDurationInMilliseconds":978}