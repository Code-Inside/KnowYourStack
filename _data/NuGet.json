{"Data":{"Blog":{"FeedItems":[{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15976983327","Type":"IssuesEvent","CreatedAt":"2021-04-17T02:33:45","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8533","RelatedDescription":"Opened issue \"[2021-04-16] Deployment\" (#8533) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\n## Changes\r\n\r\nReport services are not using Blob storage SDK classes anymore. (#8484)\r\nFix break in githubvulnerabilities2db dependency injection (#8516)\r\nreturn backfill to order by date, batch size 1000 (#8510)\r\nUpdate CODEOWNERS to point at gallery group (#8524)\r\nAdd survey banner (#8526)\r\nadd feature flag for banner (#8527)\r\nadjust backfill logic - remove redundant catch, process null TFMs (#8528)\r\n\r\n## Progress\r\n\r\n* [x] Merge: https://github.com/NuGet/NuGetGallery/pull/8530\r\n* [x] Release: https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1011218\r\n* [x] DEV\r\n* [x] INT\r\n* [ ] PROD\r\n\r\n# Availability tests\r\n\r\n## Changes\r\n\r\nIncident processing update ([PR](https://dev.azure.com/nuget/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/1707))\r\n\r\n## Progress\r\n\r\n* [x] Release: https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1012307\r\n* [x] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"15973656147","Type":"PullRequestEvent","CreatedAt":"2021-04-16T18:36:42","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8529","RelatedDescription":"Merged pull request \"[A11y] Make announcers read the version history table data correctly.\" (#8529) at NuGet/NuGetGallery","RelatedBody":"Added `tabindex` to every `td` tag on the version history table so that the value can be announced using NVDA or other announcers.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8491"},{"Id":"15973522380","Type":"IssuesEvent","CreatedAt":"2021-04-16T18:24:19","Actor":"JeremySkinner","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8532","RelatedDescription":"Opened issue \"Please provide an option to disable the Cake tab\" (#8532) at NuGet/NuGetGallery","RelatedBody":"# Background\r\n\r\nThe `Cake` tab was recently added to the installation instructions tab for all packages (#8381). However, for many (most?) packages this doesn't really make sense as they aren't Cake addins. \r\n\r\nFor example, it doesn't make sense for my package (FluentValidation), which is neither a Cake addin nor a CLI tool, but this is still shown:\r\n\r\n![image](https://user-images.githubusercontent.com/90130/115067765-452bd080-9ee9-11eb-8883-c4d18d9cc28a.png)\r\n\r\nThis is confusing. \r\n\r\n# Proposal\r\n\r\nPlease provide an option to disable the Cake tab. \r\n\r\nIdeally, it would be good if the tab would automatically be hidden for packages that aren't Cake addins/tools, but if that isn't possible then please give package authors an opt-out feature, so we can choose to hide this from our packages.\r\n\r\nThanks for the consideration\r\n\r\n//cc @joelverhagen"},{"Id":"15965785053","Type":"PullRequestEvent","CreatedAt":"2021-04-16T08:13:53","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8521","RelatedDescription":"Merged pull request \"[a11y] Add popovers to verification checkmarks\" (#8521) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/8490\r\n\r\nWe need a tab stop on this checkmark (`tabindex='0'` means it won't mess with tab ordering), and an id that can be found by the popover code. This will respond to hover and focus events.\r\n\r\nScreenreaders also read the text as written (tested on Narrator and NVDA).\r\n\r\nJust realized how fast this popover flashes by in the below video. The text is the same as the current tooltip: \r\n```The ID prefix of this package has been reserved for one of the owners of this package by NuGet.org```\r\n\r\n![popoverwithouttitle](https://user-images.githubusercontent.com/14225979/114630668-74321e80-9cfe-11eb-80ac-92bd044702b8.gif)\r\n"},{"Id":"15964190887","Type":"PullRequestEvent","CreatedAt":"2021-04-16T05:44:57","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8531","RelatedDescription":"Opened pull request \"Placement of try block moved to surround enumeration in backfill\" (#8531) at NuGet/NuGetGallery","RelatedBody":"Logic tweak--errors were still sneaking through because the try block for harvesting TFMs didn't surround the loop enumerating them--the collection is `IEnumerable` so throwing can still take place while enumerating."},{"Id":"15962128752","Type":"PullRequestEvent","CreatedAt":"2021-04-16T00:33:32","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8530","RelatedDescription":"Merged pull request \"[ReleasePrep][2021.04.15]RI dev into main \" (#8530) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"15961065429","Type":"PullRequestEvent","CreatedAt":"2021-04-15T22:07:12","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8528","RelatedDescription":"Merged pull request \"adjust backfill logic - remove redundant catch, process null TFMs\" (#8528) at NuGet/NuGetGallery","RelatedBody":"Pivoting to use `ToShortNameOrNull` introduced the possibility of nulls (which are explicitly returned by this method for the `any` TFM), and these need to be excluded from the collection list--these packages were throwing.\r\n\r\nAlso removed a redundant catch, as the calling method has an identical catch which will log collection errors."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15976337122","Type":"IssuesEvent","CreatedAt":"2021-04-16T23:45:00","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10342","RelatedDescription":"Closed issue \"VersionRange cannot parse single-digit ranges\" (#10342) at NuGet/Home","RelatedBody":"It would be nice if `NuGet.Versioning.VersionRange.Parse` could parse a single digit (like `NugetVersion.Parse`  can):\r\n\r\n```\r\nvar a = NuGetVersion.Parse (\"1.0\");\r\nvar b = NuGetVersion.Parse (\"1\");\r\n\r\nConsole.WriteLine (a == b);         // true\r\n\r\nvar c = VersionRange.Parse (\"1.0\");\r\nvar d = VersionRange.Parse (\"1\");   // System.ArgumentException: ''1' is not a valid version string.'\r\n```"},{"Id":"15976013333","Type":"IssuesEvent","CreatedAt":"2021-04-16T22:50:28","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10776","RelatedDescription":"Opened issue \"NuGet.Packaging.Extraction:  exceptions from resources not found\" (#10776) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):  NuGet.Packaging.Extraction (see https://github.com/NuGet/NuGet.Client/pull/3554)\r\n\r\nProduct version:  latest dev\r\n\r\nWorked before? If so, with which NuGet version:  Yes, 5.8.0-preview.3.6804\r\n\r\n## Repro steps and/or sample project\r\n\r\n1.  Extract, open, restore, build, and debug this solution:  [ConsoleApp5.zip](https://github.com/NuGet/Home/files/6328176/ConsoleApp5.zip)\r\n2.  Then update NuGet.Packaging.Extraction to a recent dev version and retry.\r\n\r\nExpected result:  it will succeed\r\nActual result.  it fails.  Some string resources are not found at runtime.\r\n\r\n### Verbose Logs\r\n\r\nN/A"},{"Id":"15962327306","Type":"IssuesEvent","CreatedAt":"2021-04-16T01:03:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10775","RelatedDescription":"Opened issue \"Nuget blocks a threadpool thread in an async method making a synchronous call to the UI thread\" (#10775) at NuGet/Home","RelatedBody":"<snip>\r\n18 4611f3dc 0b54e0dc Microsoft_VisualStudio_Threading_ni!Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread(<Win32 error 0n318>)+0x340 [C:\\A\\1\\19\\s\\src\\Microsoft.VisualStudio.Threading\\JoinableTask.cs @ 899]\r\n19 4611f3f0 0b54d29b NuGet_VisualStudio_Common_ni!NuGet.VisualStudio.Common.ErrorListTableDataSource.BringToFrontIfSettingsPermit(<Win32 error 0n318>)+0x5c [C:\\A\\1\\27\\s\\src\\NuGet.Clients\\NuGet.VisualStudio.Common\\ErrorListTableDataSource.cs @ 199]\r\n1a 4611f424 79c183d3 NuGet_SolutionRestoreManager_ni!NuGet.SolutionRestoreManager.RestoreOperationLogger.ShowError(<Win32 error 0n318>)+0xdb [C:\\A\\1\\27\\s\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\RestoreOperationLogger.cs @ 311]\r\n1b 4611f4c0 732e1b5a NuGet_SolutionRestoreManager_ni!NuGet.SolutionRestoreManager.SolutionRestoreJob+<RestoreAsync>d__20.MoveNext(<Win32 error 0n318>)+0x2a3 [C:\\A\\1\\27\\s\\src\\NuGet.Clients\\NuGet.SolutionRestoreManager\\SolutionRestoreJob.cs @ 196]\r\n<snip>\r\n\r\nThis code blocks a threadpool thread (bad) inside an async operation (NuGet.SolutionRestoreManager.SolutionRestoreJob+<RestoreAsync>)  calling ErrorListTableDataSource.BringToFrontIfSettingsPermit, which uses JTF.Run (also bad)\r\n\r\nOriginally filled in [1259434](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1259434)"},{"Id":"15960713590","Type":"IssuesEvent","CreatedAt":"2021-04-15T21:29:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5706","RelatedDescription":"Closed issue \"The performance of \"nuget pack\" decreases with increasing levels in the source paths\" (#5706) at NuGet/Home","RelatedBody":"I have a project that contains about 1800 files. It is in the directory, i.e. c:\\source\r\nPacking with `nuget.exe pack test.nuspec -NoPackageAnalysis` takes about 8 seconds.\r\nWhen I add one more level to the source path, for example c:\\Repos\\2 , the packaging time increases to 9 seconds. But the more levels the more time increases:\r\nc:\\source\\2 - 9sec\r\nc:\\source\\2\\3\\ - 10sec\r\nc:\\source\\2\\3\\4\\ - 12sec\r\nc:\\source\\2\\3\\4\\5\\ - 17sec\r\nc:\\source\\2\\3\\4\\5\\6\\ - 25sec\r\nc:\\source\\2\\3\\4\\5\\6\\7\\ - 44sec\r\nc:\\source\\2\\3\\4\\5\\6\\7\\8\\ - 1m 22sec\r\n\r\nThe nuspec does not contain anything except\r\n`<file src=\"c:\\source\\\" target=\"test\" />`\r\n\r\nNuGet.exe v4.1.0-4.3.0\r\nOS version: win10 v15063 \r\n\r\nNuget v3.5 doesn't have this issue\r\n\r\n"},{"Id":"15959351297","Type":"IssuesEvent","CreatedAt":"2021-04-15T19:26:22","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10774","RelatedDescription":"Opened issue \"dotnet nuget verify command is not checking integrity of nuget.config file\" (#10774) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\n\n## Details about Problem\n\nNuGet product used (dotnet.exe):\n\nProduct version: 5.9\n\nWorked before? If so, with which NuGet version: n/a\n\n## Repro steps and/or sample project\n\nLet we have broken/missing tag in nuget.config file, then `nuget.exe` check it before doing verify but dotnet.exe start doing verify action without checking it. I believe we should check integrity of nuget.config before doing any action since so many logics depend on it.\n\n`nuget59 verify -all ..\\TestSigned\\TestSigned.1.0.0.nupkg`\n\nNuGet.Config is not valid XML. Path: 'C:\\Users\\eryondon\\source\\repos\\SigningDemo\\nuget.config'.\n  The 'trustedSigners' start tag on line 15 position 4 does not match the end tag of 'trustedSigner'. Line 21, position 5.\n\n`dotnet nuget verify ..\\TestSigned\\TestSigned.1.0.0.nupkg`\n\nerror: NU3018: The author primary signature found a chain building issue: UntrustedRoot: A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.\nerror:\nerror: Package signature validation failed.\n### Verbose Logs\n\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\n"},{"Id":"15959210056","Type":"IssuesEvent","CreatedAt":"2021-04-15T19:14:00","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10773","RelatedDescription":"Opened issue \"`dotnet nuget verify` command is ignoring --configfile ..\\nuget.config\" (#10773) at NuGet/Home","RelatedBody":"## Details about Problem\n\nNuGet product used (dotnet.exe):\n\nProduct version: 5.9\n\nWorked before? If so, with which NuGet version: N/A\n\n## Repro steps and/or sample project\nRun below command, it should honor custom nuget.config file but if throws error.\n`dotnet nuget verify ..\\TestSigned\\TestSigned.1.0.0.nupkg --configfile ..\\nuget.config`\n\n\n### Verbose Logs\n\nSpecify --help for a list of available options and commands.\nerror: Unrecognized option '--configfile'\n\n\nUsage: dotnet nuget verify [arguments] [options]\n\nArguments:\n  <package-paths>  Specify the path to the package\n\nOptions:\n  --all                      Specifies that all verifications possible should be performed to the package(s).\n  --certificate-fingerprint  Verify that the signer certificate matches with one of the specified SHA256 fingerprints. A certificate SHA256 fingerprint is a SHA256 hash of the certificate used to identify the certificate. Multiple inputs should be separated by space.\n  -v|--verbosity             Set the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\n  -h|--help                  Show help information"},{"Id":"15958264777","Type":"IssuesEvent","CreatedAt":"2021-04-15T17:55:03","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10772","RelatedDescription":"Closed issue \"```dotnet package add``` won't use credential provider on .NET 5 on Linux\" (#10772) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): dotnet\r\n\r\nProduct version: 5.0.104\r\n\r\nWorked before? If so, with which NuGet version: no\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Create a simple csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <RootNamespace>_proj</RootNamespace>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n2. Add a nuget.config for the nuget feed\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <config>\r\n    <add key=\"repositoryPath\" value=\"packages\" />\r\n  </config>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"<omitted>\" value=\"https://<omitted>.pkgs.visualstudio.com/<omitted>/_packaging/<omitted>/nuget/v3/index.json\" />\r\n  </packageSources>\r\n  <disabledPackageSources>\r\n    <add key=\"Microsoft and .NET\" value=\"true\" />\r\n  </disabledPackageSources>\r\n</configuration>\r\n```\r\n3. Run ```dotnet add package <omitted>```\r\n\r\n### Verbose Logs\r\n\r\n#### Logs showing that ```dotnet add package``` fails to use credential provider\r\n\r\n```\r\n[andre@scout .proj]$ dotnet add package <omitted>.Database.Channel\r\n  Determining projects to restore...\r\n  Writing /tmp/tmpAJugKr.tmp\r\ninfo : Adding PackageReference for package '<omitted>.Database.Channel' into project '/tmp/RetailPkgRestore/.proj/.proj.csproj'.\r\ninfo :   GET https://<omitted>.pkgs.visualstudio.com/<omitted>/_packaging/d395b4a7-77c2-4828-8b36-235915683285/nuget/v3/registrations2-semver2/<omitted>.database.channel/index.json\r\ninfo :   Unauthorized https://<omitted>.pkgs.visualstudio.com/<omitted>/_packaging/d395b4a7-77c2-4828-8b36-235915683285/nuget/v3/registrations2-semver2/<omitted>.database.channel/index.json 232ms\r\nerror: Response status code does not indicate success: 401 (Unauthorized).\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n[andre@scout .proj]$ \r\n```\r\n\r\nI couldn't find a way to get verbose logs out of dotnet package add.\r\nI tried calling ```dotnet /usr/share/dotnet/sdk/5.0.104/NuGet.CommandLine.XPlat.dll package add --package .....Database -p ./.proj.csproj -d obj/.proj.csproj.nuget.dgspec.json --interactive -s https://.....pkgs.visualstudio.com/<ommited>/_packaging/.../nuget/v3/index.json``` but I couldn't get any options to get verbosity logs.\r\n\r\n#### Logs showing that ```dotnet restore``` works if the package is manually added to the csproj xml file\r\n\r\nThe logs below are after executing ```dotnet restore``` after I manually included the package on my .csproj file.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <RootNamespace>_proj</RootNamespace>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n     <PackageReference Include=\"<omitted>.Database.Channel\" version=\"9.28.*\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n```\r\n[andre@scout .proj]$ dotnet restore ./.proj.csproj -v d --no-cache\r\nBuild started 4/14/2021 1:09:46 PM.\r\n     0>Process = \"/usr/share/dotnet/dotnet\"\r\n       MSBuild executable path = \"/usr/share/dotnet/sdk/5.0.104/MSBuild.dll\"\r\n       Command line arguments = \"/usr/share/dotnet/sdk/5.0.104/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore -verbosity:d -property:RestoreNoCache=true ./.proj.csproj -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/usr/share/dotnet/sdk/5.0.104/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/usr/share/dotnet/sdk/5.0.104/dotnet.dll\"\r\n       Current directory = \"/tmp/RetailPkgRestore/.proj\"\r\n       MSBuild version = \"16.8.3+39993bd9d\"\r\n       Resolving SDK 'Microsoft.NET.Sdk'...\r\n       Property reassignment: $(MSBuildProjectExtensionsPath)=\"/tmp/RetailPkgRestore/.proj/obj/\" (previous value: \"obj/\") at /usr/share/dotnet/sdk/5.0.104/Current/Microsoft.Common.props (56,5)\r\n\r\n\r\n---- I removed most of the logs associated with the build. My intent is to show that the same project, when I add the package directly to the .csproj and call dotnet restore, it calls the credential provider and resolves the package correctly ----\r\n\r\n         (in) RestoreIgnoreFailedSources 'False'\r\n         (in) RestoreRecursive 'True'\r\n         (in) RestoreForce 'False'\r\n         (in) HideWarningsAndErrors 'False'\r\n         (in) RestoreForceEvaluate 'False'\r\n         (in) RestorePackagesConfig 'False'\r\n         Running restore with 8 concurrent jobs.\r\n         Reading project file /tmp/RetailPkgRestore/.proj/.proj.csproj.\r\n         Restoring packages for /tmp/RetailPkgRestore/.proj/.proj.csproj...\r\n         Restoring packages for .NETCoreApp,Version=v5.0...\r\n           GET https://<omitted>.pkgs.visualstudio.com/2bdc3060-cc75-4bb4-8e85-9ce981e841fa/_packaging/d395b4a7-77c2-4828-8b36-235915683285/nuget/v3/flat2/<omitted on purpose>.database.channel/index.json\r\n         Using /home/andre/.nuget/plugins/netcore/CredentialProvider.Microsoft/CredentialProvider.Microsoft.dll as a credential provider plugin.\r\n             [CredentialProvider.130948]Running in plug-in mode\r\n             [CredentialProvider.130948]Command-line v0.1.20+a5d37185a1a95acb4f0eb13a774f5c23cab99508: /home/andre/.nuget/plugins/netcore/CredentialProvider.Microsoft/CredentialProvider.Microsoft.dll -Plugin\r\n             [CredentialProvider.130948]Handling 'Request' 'Initialize'. Time elapsed in ms: 4 - Payload: {\"ClientVersion\":\"5.8.0\",\"Culture\":\"en-US\",\"RequestTimeout\":\"00:00:05\"}\r\n             [CredentialProvider.130948]Sending response: 'Request' 'Initialize'. Time elapsed in ms: 5\r\n             [CredentialProvider.130948]Time elapsed in milliseconds after sending response 'Request' 'Initialize': 6\r\n             [CredentialProvider.130948]Handling 'Request' 'GetOperationClaims'. Time elapsed in ms: 0 - Payload: {}\r\n             [CredentialProvider.130948]Sending response: 'Request' 'GetOperationClaims'. Time elapsed in ms: 6\r\n             [CredentialProvider.130948]Time elapsed in milliseconds after sending response 'Request' 'GetOperationClaims': 17\r\n             [CredentialProvider.130948]Handling 'Request' 'SetLogLevel'. Time elapsed in ms: 1 - Payload: {\"LogLevel\":\"Debug\"}\r\n             [CredentialProvider]Sending response: 'Request' 'SetLogLevel'. Time elapsed in ms: 2\r\n             [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'SetLogLevel': 8\r\n             [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 4 - Payload: {\"Uri\":\"https://<omitted>.pkgs.visualstudio.com/<omitted on purpose>/_packaging/<omitted on purpose>/nuget/v3/index.json\",\"IsRetry\":false,\"IsNonInteractive\":true,\"CanShowDialog\":false}\r\n             [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n             [CredentialProvider]Handling auth request, Uri: https://<omitted>.pkgs.visualstudio.com/<omitted on purpose>/_packaging/<ommited on purpose>/nuget/v3/index.json, IsRetry: False, IsNonInteractive: True, CanShowDialog: False\r\n             [CredentialProvider]URI: https://<omitted>.pkgs.visualstudio.com/<omitted on purpose>/_packaging/<ommited on purpose>/nuget/v3/index.json\r\n             [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - IsRetry: False\r\n             [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Parsing json\r\n             [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - Found credentials for endpoint https://<omitted>.pkgs.visualstudio.com/<omitted on purpose>/_packaging/ <omitted on purpose > /nuget/v3/index.json\r\n             [CredentialProvider]Sending response: 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 36\r\n             [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'GetAuthenticationCredentials': 41\r\n           OK https://<omitted>.pkgs.visualstudio.com/<omitted on purpose>/_packaging/d395b4a7-77c2-4828-8b36-235915683285/nuget/v3/flat2/<omitted on purpose>.database.channel/index.json 1254ms\r\n         Resolving conflicts for net5.0...\r\n         Checking compatibility of packages on net5.0.\r\n         Checking compatibility for .proj 1.0.0 with net5.0.\r\n         Checking compatibility for <omitted on purpose>.Database.Channel 9.28.21100.1 with net5.0.\r\n         All packages and projects are compatible with net5.0.\r\n         Committing restore...\r\n         Assets file has not changed. Skipping assets file writing. Path: /tmp/RetailPkgRestore/.proj/obj/project.assets.json\r\n         Writing cache file to disk. Path: /tmp/RetailPkgRestore/.proj/obj/project.nuget.cache\r\n         Persisting dg to /tmp/RetailPkgRestore/.proj/obj/.proj.csproj.nuget.dgspec.json\r\n         Restored /tmp/RetailPkgRestore/.proj/.proj.csproj (in 2.07 sec).\r\n         \r\n         NuGet Config files used:\r\n             /tmp/RetailPkgRestore/.proj/nuget.config\r\n             /home/andre/.nuget/NuGet/NuGet.Config\r\n         \r\n         Feeds used:\r\n             https://<omitted>.pkgs.visualstudio.com/<omitted on purpose>/_packaging/<omitted on purpose>/nuget/v3/index.json\r\n       Done executing task \"RestoreTask\".\r\n     1>Done building target \"Restore\" in project \".proj.csproj\".\r\n     1>Done Building Project \"/tmp/RetailPkgRestore/.proj/.proj.csproj\" (Restore target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n```\r\n\r\nThis seems related to #10305 , however I don't see this working for dotnet, and there is no nuget cli on Linux that I can test (outside dotnet) as far as I know."},{"Id":"15957838311","Type":"IssuesEvent","CreatedAt":"2021-04-15T17:20:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10716","RelatedDescription":"Closed issue \"DirectoryNotFoundException in PackTask PathResolver\" (#10716) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: dotnet.exe\r\n\r\nProduct version: 5.0.201\r\n\r\n## Repro steps and/or sample project\r\n\r\nI'm relatively new to nuget package creation.  I'm attempting to pack a .NET Standard project with 3rd party .NET Framework dll dependencies.\r\ncsproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;net472</TargetFrameworks>\r\n    <PackageTags>Laserfiche SEA ESI \"Texas A&amp;M\"</PackageTags>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <version>1.0.1.5</version>\r\n    <AssemblyVersion>1.0.0.0</AssemblyVersion>\r\n    <FileVersion>1.0.1.5</FileVersion>\r\n    <Company>Texas A&amp;M System Offices</Company>\r\n    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>\r\n    <!--<IncludeSymbols>true</IncludeSymbols>-->\r\n    <SymbolPackageFormat>snupkg</SymbolPackageFormat>\r\n    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>\r\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\r\n    <NuspecFile>SEALaserfiche.nuspec</NuspecFile>\r\n  </PropertyGroup>\r\n```\r\n\r\nSEALaserfiche.nuspec:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>SEALaserfiche</id>\r\n    <version>1.0.1.5</version>\r\n    <authors>Andrew Beehler</authors>\r\n    <description>Test</description>\r\n    <copyright>Test</copyright>\r\n    <dependencies>\r\n      <group targetFramework=\".NETFramework4.7.2\" />\r\n      <group targetFramework=\".NETStandard2.0\" />\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"bin\\$config$\\netstandard2.0\\*.dll\" target=\"lib\\netstandard2.0\\\" />\r\n    <file src=\"bin\\$config$\\net472\\*.dll\" target=\"lib\\net472\\\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nI attempt to run the following command:\r\n\r\n```dotnet pack -p:config=debug```\r\n\r\n...and get this error: `\"C:\\Program Files\\dotnet\\sdk\\5.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(221,5): error : Could not find a part of the path 'C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\netstandard2.0'.\"`\r\n\r\nnot sure why it's not looking in \"\\bin\\debug\\netstandard2.0\"\r\n\r\n### Verbose Logs\r\n\r\nHere's the section of the output we're probably interested in.  shows the stack trace.  tried going through nuget code on github.  have not yet been able to determine where the \"\\bin\\netstandard2.0\" is coming from; why it doesn't have \"\\debug\\\" in the path.\r\n\r\n```\r\nUsing \"PackTask\" task from assembly \"C:\\Program Files\\dotnet\\sdk\\5.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\build\r\nCrossTargeting\\..\\CoreCLR\\NuGet.Build.Tasks.Pack.dll\".\r\n                   Task \"PackTask\" (TaskId:100)\r\n                     Task Parameter:\r\n                         TargetPathsToSymbols=\r\n                             C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\Debug\\net472\\SEALaserfich\r\ne.pdb\r\n                                     FinalOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\D\r\nebug\\net472\\SEALaserfiche.pdb\r\n                                     MSBuildSourceProjectFile=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfi\r\nche\\SEALaserfiche.csproj\r\n                                     MSBuildSourceTargetName=_GetDebugSymbolsWithTfm\r\n                                     OriginalItemSpec=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\SEAL\r\naserfiche.csproj\r\n                                     TargetFramework=net472\r\n                                     TargetPath=SEALaserfiche.pdb\r\n                             C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\Debug\\netstandard2.0\\SEAL\r\naserfiche.pdb\r\n                                     FinalOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\D\r\nebug\\netstandard2.0\\SEALaserfiche.pdb\r\n                                     MSBuildSourceProjectFile=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfi\r\nche\\SEALaserfiche.csproj\r\n                                     MSBuildSourceTargetName=_GetDebugSymbolsWithTfm\r\n                                     OriginalItemSpec=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\SEAL\r\naserfiche.csproj\r\n                                     TargetFramework=netstandard2.0\r\n                                     TargetPath=SEALaserfiche.pdb (TaskId:100)\r\n                     Task Parameter:AssemblyName=SEALaserfiche (TaskId:100)\r\n                     Task Parameter:Tags=Laserfiche SEA ESI \"Texas A&M\" (TaskId:100)\r\n                     Task Parameter:RequireLicenseAcceptance=False (TaskId:100)\r\n                     Task Parameter:RestoreOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\\r\n (TaskId:100)\r\n                     Task Parameter:Authors=SEALaserfiche (TaskId:100)\r\n                     Task Parameter:TreatWarningsAsErrors=false (TaskId:100)\r\n                     Task Parameter:PackageId=SEALaserfiche (TaskId:100)\r\n                     Task Parameter:\r\n                         AllowedOutputExtensionsInPackageBuildOutputFolder=\r\n                             .dll\r\n                             .exe\r\n                             .winmd\r\n                             .json\r\n                             .pri\r\n                             .xml (TaskId:100)\r\n                     Task Parameter:AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder=.pdb (TaskId:100)\r\n                     Task Parameter:SymbolPackageFormat=snupkg (TaskId:100)\r\n                     Task Parameter:ContinuePackingAfterGeneratingNuspec=True (TaskId:100)\r\n                     Task Parameter:WarningsAsErrors=;NU1605 (TaskId:100)\r\n                     Task Parameter:IncludeBuildOutput=True (TaskId:100)\r\n                     Task Parameter:PackageVersion=1.0.1.5 (TaskId:100)\r\n                     Task Parameter:PackageOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\\r\nDebug\\ (TaskId:100)\r\n                     Task Parameter:\r\n                         TargetFrameworks=\r\n                             net472\r\n                             netstandard2.0 (TaskId:100)\r\n                     Task Parameter:Description=Package Description (TaskId:100)\r\n                     Task Parameter:NoWarn=1701;1702 (TaskId:100)\r\n                     Task Parameter:NuspecFile=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\SEALaserfic\r\nhe.nuspec (TaskId:100)\r\n                     Task Parameter:BuildOutputFolders=lib (TaskId:100)\r\n                     Task Parameter:\r\n                         BuildOutputInPackage=\r\n                             C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\Debug\\net472\\SEALaserfich\r\ne.dll\r\n                                     FinalOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\D\r\nebug\\net472\\SEALaserfiche.dll\r\n                                     IsKeyOutput=true\r\n                                     MSBuildSourceProjectFile=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfi\r\nche\\SEALaserfiche.csproj\r\n                                     MSBuildSourceTargetName=_GetBuildOutputFilesWithTfm\r\n                                     OriginalItemSpec=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\\r\nDebug\\net472\\SEALaserfiche.dll\r\n                                     TargetFramework=net472\r\n                                     TargetPath=SEALaserfiche.dll\r\n                             C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\Debug\\netstandard2.0\\SEAL\r\naserfiche.dll\r\n                                     FinalOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\D\r\nebug\\netstandard2.0\\SEALaserfiche.dll\r\n                                     IsKeyOutput=true\r\n                                     MSBuildSourceProjectFile=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfi\r\nche\\SEALaserfiche.csproj\r\n                                     MSBuildSourceTargetName=_GetBuildOutputFilesWithTfm\r\n                                     OriginalItemSpec=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\\r\nDebug\\netstandard2.0\\SEALaserfiche.dll\r\n                                     TargetFramework=netstandard2.0\r\n                                     TargetPath=SEALaserfiche.dll (TaskId:100)\r\n                     Task Parameter:Deterministic=True (TaskId:100)\r\n                     Task Parameter:\r\n                         ContentTargetFolders=\r\n                             content\r\n                             contentFiles (TaskId:100)\r\n                     Task Parameter:NuspecOutputPath=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\obj\\D\r\nebug\\ (TaskId:100)\r\n                     Task Parameter:PackItem=C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\SEALaserfiche\r\n.csproj (TaskId:100)\r\n13:34:49.357  1:15>C:\\Program Files\\dotnet\\sdk\\5.0.201\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack\r\n.targets(221,5): error : Could not find a part of the path 'C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfich\r\ne\\bin\\netstandard2.0'. [C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\SEALaserfiche.csproj]\r\n                     System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\esi\\CommonClasses\\SEALaserfi\r\nche\\SEALaserfiche_DEV\\SEALaserfiche\\bin\\netstandard2.0'.\r\n                        at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String path, Boolean ignoreNotF\r\nound)\r\n                        at System.IO.Enumeration.FileSystemEnumerator`1.Init()\r\n                        at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, Boolean isNormalized, Enumera\r\ntionOptions options)\r\n                        at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, Enum\r\nerationOptions options, Boolean isNormalized)\r\n                        at System.IO.Enumeration.FileSystemEnumerableFactory.UserFiles(String directory, String expression, E\r\nnumerationOptions options)\r\n                        at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchT\r\narget, EnumerationOptions options)\r\n                        at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption)\r\n                        at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includ\r\neEmptyDirectories, String& normalizedBasePath)\r\n                        at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String tar\r\ngetPath, Boolean includeEmptyDirectories)\r\n                        at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String\r\n exclude)\r\n                        at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files)\r\n                        at NuGet.Packaging.PackageBuilder.ReadManifest(Stream stream, String basePath, Func`2 propertyProvide\r\nr)\r\n                        at NuGet.Packaging.PackageBuilder..ctor(String path, String basePath, Func`2 propertyProvider, Boolea\r\nn includeEmptyDirectories, Boolean deterministic)\r\n                        at NuGet.Commands.PackCommandRunner.CreatePackageBuilderFromNuspec(String path)\r\n                        at NuGet.Commands.PackCommandRunner.BuildFromNuspec(String path)\r\n                        at NuGet.Commands.PackCommandRunner.BuildPackage(String path)\r\n                        at NuGet.Commands.PackCommandRunner.RunPackageBuild()\r\n                        at NuGet.Build.Tasks.Pack.PackTaskLogic.BuildPackage(PackCommandRunner runner)\r\n                        at NuGet.Build.Tasks.Pack.PackTask.Execute() (TaskId:100)\r\n                   Done executing task \"PackTask\" -- FAILED. (TaskId:100)\r\n13:34:49.366  1:15>Done building target \"GenerateNuspec\" in project \"SEALaserfiche.csproj\" -- FAILED.: (TargetId:160)\r\n13:34:49.367  1:15>Done Building Project \"C:\\esi\\CommonClasses\\SEALaserfiche\\SEALaserfiche_DEV\\SEALaserfiche\\SEALaserfiche.cs\r\nproj\" (pack target(s)) -- FAILED.\r\n```"},{"Id":"15957802763","Type":"IssuesEvent","CreatedAt":"2021-04-15T17:17:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10704","RelatedDescription":"Closed issue \"nuget creates spurious space in path during build in VS 2019\" (#10704) at NuGet/Home","RelatedBody":"I need to upgrade NuGet.exe from 2.7.3 to address a SemVer versioning  issue with preview packages, so I downloaded and installed Nuget 5.8.1.\r\nThen I ran into issues with a path generated by Nuget.exe, containing a spurious space (see logging below).\r\n\r\nI could get around that by upgrading ALL projects but one (ASP.NET) to use package reference instead of packages.config, but apparently that's impossible for ASP.NET projects.\r\nWhat are we supposed to do now? I've seen various closed issues on the matter (https://github.com/NuGet/Home/issues/7657), but no solution as yet, as far as I can see....\r\n\r\nPlease advise.\r\n\r\nThanks!\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio 2019 Version 16.9.2\r\n\r\nProduct version: 5.8.1\r\n\r\nWorked before? If so, with which NuGet version: 2.7.3\r\n\r\n### Verbose Logs\r\n\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebApi.Core.5.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.Razor.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebApi.Client.5.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebApi.WebHost.5.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebPages.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\DevExpress.Web.Themes.19.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebPages.Data.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebHelpers.3.2.7 niet vinden.\r\n43>C:\\Users\\will\\Source\\Repos\\PLANproducten501\\.nuget\\NuGet.targets(92,9): error : Kan een gedeelte van het pad C:\\Users\\will\\Source\\Repos\\PLANproducten501\\ \\packages\\Microsoft.AspNet.WebPages.WebData.3.2.7 niet vinden.\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15928910571","Type":"IssuesEvent","CreatedAt":"2021-04-13T21:31:59","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/58","RelatedDescription":"Opened issue \"NuGet repository signature certificate will expire on April 14th, 2021\" (#58) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nAt 5:00AM PST on April 14th, 2021, the [NuGet repository signing certificate will expire](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/). This certificate is used to verify the content integrity of a package and protect against content tampering. When the signing certificate expires, it will fallback to a timestamp for verification.\r\n\r\nFor packages that have not been automatically re-signed by NuGet.org with an updated certificate, you may be affected by [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://github.com/NuGet/Announcements/issues/56). Only a subset of NuGet.org packages have been re-signed with a new certificate since March 15th, 2021.\r\n\r\nGiven that the [NuGet Microsoft author signing certificate has already expired](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/), you may have already ran into this issue if you have a Microsoft author signed package in your environment and may already be aware of this change in behavior & resolved it.\r\n\r\nFor reference of the different types of NuGet signatures:\r\n\r\n- **Author signature.** An author signature guarantees that the package has not been modified since the author signed the package, no matter from which repository or what transport method the package is delivered. Additionally, author-signed packages provide an extra authentication mechanism to the nuget.org publishing pipeline because the signing certificate must be registered ahead of time. \r\n- **Repository signature.** Repository signatures provide an integrity guarantee for all packages in a repository whether they are author signed or not, even if those packages are obtained from a different location than the original repository where they were signed.\r\n\r\n## Symptoms\r\n\r\nYour Linux environment may give you error messages when running `dotnet restore` such as:\r\n\r\n```\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nThis indicates that your environment is affected by an upstream change to [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages and you'll need to update your .NET SDK to resolve it.\r\n\r\n## Solution\r\n\r\nNew .NET builds have been provided with NuGet package verification disabled on Linux and macOS.\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0)\r\n\r\nIt is recommended that you update to these builds as soon as you can to mitigate disruption on Linux environments.\r\n\r\n## Details\r\n\r\nFor more details on this incident, see the following resources:\r\n\r\n- https://github.com/NuGet/Announcements/issues/56\r\n- https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/\r\n- https://github.com/dotnet/announcements/issues/180\r\n\r\nIf you run into this issue after April 14th, 2021, please provide a comment on https://github.com/NuGet/Home/issues/10712"},{"Id":"15789095683","Type":"IssuesEvent","CreatedAt":"2021-04-01T22:00:20","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/57","RelatedDescription":"Opened issue \"NuGet.org temporarily down due to Azure services outage\" (#57) at NuGet/Announcements","RelatedBody":"NuGet.org is being affected by an outage due to issues affecting the Azure Portal and Azure services, but the team is on it. We appreciate your patience and we will keep you updated as soon as we get more information.\r\n\r\nIn the meantime, check https://status2.azure.com/ for Azure updates and find work-arounds in this thread https://github.com/NuGet/NuGetGallery/issues/8480."},{"Id":"15770729318","Type":"IssuesEvent","CreatedAt":"2021-03-31T19:45:05","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/56","RelatedDescription":"Opened issue \"Notice: NuGet Restore Failures on Linux distributions using NSS or Mozilla root CA list\" (#56) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nUsers of .NET 5.0+ will receive error messages when running `dotnet restore` on Linux distros that use [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages maintained by Mozilla's root CA list. The root cause is due to the certificate used for signed NuGet packages recently expiring and as a result the validation for packages uses a timestamp provider chain that has a root certificate that has been [removed by Network Security Services (NSS)](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) which is a popular alternative to [OpenSSL](https://github.com/openssl/openssl).\r\n\r\n- [NuGet Microsoft Author Signing Certificate Update](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/) - Expires January 27th, 2021\r\n- [NuGet.org Repository Signing Certificate Update](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/) - Expires April 14th, 2021\r\n\r\nFor more information, please read the [Distrust of Symantec TLS Certificates](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/) on the Mozilla Security Blog, [Mozilla Root Store Policy](https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/policy/) on Mozilla.org, and [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues) on the Mozilla Wiki Page.\r\n\r\n## Affected Environments\r\n\r\n.NET 5.0+ SDK on Linux distros that use [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). \r\n\r\nAt this time, we are not sure of every distro that may be affected. If you're aware of an affected distro, please let us know!\r\n\r\nBelow is a table that includes .NET support for Linux distros:\r\n\r\n### Linux\r\n\r\nOS                                    | Version               | Affected          |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Alpine Linux][Alpine]                | N/A                 | ❓ |\r\n[CentOS][CentOS]                      | N/A                    | ❓ |\r\n[Debian][Debian]                      | N/A                    | ❓ |\r\n[Fedora][Fedora]                      | N/A                   | ❓ |\r\n[Linux Mint][Linux-Mint]              | N/A                   | ❓ |\r\n[openSUSE][OpenSUSE]                  | N/A                   | ❓ |\r\n[Red Hat Enterprise Linux][RHEL]      | N/A                    | ❓ |\r\n[SUSE Enterprise Linux (SLES)][SLES]  | N/A               | ❓ |\r\n[Ubuntu][Ubuntu]                      | N/A   | ❓ |\r\n\r\n[Alpine]: https://alpinelinux.org/\r\n[CentOS]: https://www.centos.org/\r\n[Debian]: https://www.debian.org/\r\n[Fedora]: https://getfedora.org/\r\n[Linux-Mint]: https://linuxmint.com/\r\n[OpenSUSE]: https://opensuse.org/\r\n[RHEL]: https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\r\n[SLES]: https://www.suse.com/products/server/\r\n[Ubuntu]: https://ubuntu.com/\r\n\r\nAdditionally, here is a table of other Linux variants that may be affected but are not officially supported by .NET.\r\n\r\nOS                                    | Version               | Affected       |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Arch Linux](https://archlinux.org/)                          | 20210328+                 | ✅[Issue](https://github.com/NuGet/Home/issues/10695)             |\r\n[Artix Linux](https://artixlinux.org/)                         | 20201128+                    | ✅[Issue](https://github.com/NuGet/Home/issues/10684)             |\r\n\r\n### Other Linux distros\r\n\r\n- At the time of writing, we believe other distributions will not be affected until a distribution is updated to include [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes).\r\n\r\n## Mitigation\r\n\r\n### .NET Core 3.1\r\n\r\n.NET 5 introduces a signing verification mechanism that promotes warnings to throw an error at `dotnet restore` time. To work around this, you can temporarily target against .NET Core 3.1.\r\n\r\n### Modify CA Certificate Store\r\n\r\nDepending on your Linux distro, you can modify your CA certificate store by taking on an earlier version of your `ca-certificates` package.\r\n\r\nFor reference, the affected version is [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). `nss` includes a hard-coded list of trusted CA certificates and therefore can be modified to include and trust the `Verisign Universal Root Certificate Authority` again.\r\n\r\nMany Linux distros can leverage `dpkg-reconfigure` to check for the entry and enable trust for it. As a manual workaround, you may need to remove a `leading !` from the certificate line & update your CA certificates package.\r\n\r\n**Note:** Doing this is considered a bad security practice & should only be done if you understand the security implications of doing so.\r\n\r\n## Solution\r\n\r\nDue to existing issues with the .NET 5 signing verification feature & fallback of timestamp verification, we have decided to revoke this feature for Unix-based systems within .NET 5 SDK. Therefore your experience of using `dotnet restore` will remain largely the same as it was in .NET Core 3.1. Stay tuned for an updated .NET SDK version that will include this change.\r\n\r\n### Stay updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We will also continue posting updates on [NuGet Status](https://status.nuget.org/) and [@NuGet on Twitter](https://twitter.com/nuget)."},{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1379845663807188996","CreatedAt":"2021-04-07T17:16:57+00:00","UserScreenname":"nuget","Text":"🙌New mockup just dropped🙌\n\n@jiachenjiang_  is reading all the feedback and iterating daily 💪\n\nWe want you to be inv… https://t.co/HMOopaJPDN","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1377764630769008640","CreatedAt":"2021-04-01T23:27:40+00:00","UserScreenname":"nuget","Text":"Our monitoring and tests indicate that the incident related to DNS has been mitigated. We are waiting for more info… https://t.co/Oz3vtCPt0K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1377743615422685191","CreatedAt":"2021-04-01T22:04:09+00:00","UserScreenname":"nuget","Text":"Check our announcement here for additional resources as well as a Github thread for us to share work-arounds.… https://t.co/j0UWauYtq3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1377737823994802182","CreatedAt":"2021-04-01T21:41:09+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi is being affected by this outage, but the team is on it. We appreciate your patience and we… https://t.co/ESWjKBbpYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"👏Contributor appreciation time👏\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t… https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":86,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2021-04-19T05:30:31.6222996Z","RunDurationInMilliseconds":1432}