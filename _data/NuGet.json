{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37831780003","Type":"PullRequestEvent","CreatedAt":"2024-04-25T21:52:50","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9922","RelatedDescription":"Merged pull request \"Properly no-op deprecations and allow unlisting at the same time in API\" (#9922) at NuGet/NuGetGallery","RelatedBody":"There is continued internal success and growing interesting in the deprecation API. I would like to make progress on the public preview.\r\n\r\nSpec: https://github.com/NuGet/Engineering/pull/4709\r\n\r\nFor no-oping deprecations, I opted to not use the entity level change tracking API (e.g. https://stackoverflow.com/a/30235307) since it would mean a lot of changes to our abstractions. I think the current implementation is easier to understand anyway. \r\n\r\nSummary of changes:\r\n- Properly no-op package deprecations that have no difference\r\n   - https://github.com/NuGet/NuGetGallery/issues/9921\r\n- Allow packages to be unlisted or relisted at the same time as deprecation\r\n   - https://github.com/NuGet/NuGetGallery/issues/8873#issuecomment-2062110640\r\n- Fix a problem where API deprecations were being audited as via the web UI (incorrect)\r\n- Resolve some minor build warnings due to obsolete APIs and cases with no `await` in and `async` method\r\n   - Unrelated but small"},{"Id":"37825545006","Type":"IssuesEvent","CreatedAt":"2024-04-25T18:10:24","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9793","RelatedDescription":"Closed issue \"Parameterize Framework Badges front end code using helpers\" (#9793) at NuGet/NuGetGallery","RelatedBody":"We can use a helper method to make the code in https://github.com/NuGet/NuGetGallery/blob/main/src/NuGetGallery/Views/Packages/_SupportedFrameworksBadges.cshtml more concise."},{"Id":"37785860698","Type":"IssuesEvent","CreatedAt":"2024-04-24T18:51:28","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9936","RelatedDescription":"Opened issue \"[Dark Theme] Functional test are not passing due to minification of CSS files\" (#9936) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37785743104","Type":"PullRequestEvent","CreatedAt":"2024-04-24T18:47:35","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9935","RelatedDescription":"Opened pull request \"Fix functional tests\" (#9935) at NuGet/NuGetGallery","RelatedBody":"Functional tests related to minification started to fail with this new feature.\r\nWhat is happening is that CSS minification wasn't able to understand the CSS variables because we are using an old package to handle bundle/minification (System.Web.Optimization).\r\n\r\nGrunt also creates minified files every time we use `grunt` command, with this change I'm no longer adding the files to the `site.css` bundle to avoid minification and instead use the minified file we already have. \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"37785304675","Type":"PullRequestEvent","CreatedAt":"2024-04-24T18:33:12","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9908","RelatedDescription":"Closed pull request \"Change Link in h2 Color from Black to Blue\" (#9908) at NuGet/NuGetGallery","RelatedBody":"Change Link in h2 Color from Black to Blue\r\nBug link: https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1985625"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37835578629","Type":"IssuesEvent","CreatedAt":"2024-04-26T01:26:16","Actor":"jamesivie","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13415","RelatedDescription":"Opened issue \"Downloads slow from Windows but not WSL\" (#13415) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nwebsite\n\n### Worked before?\n\nat least 4 days ago\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nI'm not sure how this is even possible, and it's the strangest thing I've seen in many years.  I've been chasing this for days now through every channel I can.  Starting about 3 days ago, I (and several others who have reported this issue on the Visual Studio support forums) started having issues updating assemblies using Visual Studio 2022.  dotnet and nuget from the command line are also failing.  Trying to download nupkg files manually succeeds but is very slow.  When I run \"curl https://api.nuget.org/v3-flatcontainer/sixlabors.imagesharp/2.1.8/sixlabors.imagesharp.2.1.8.nupkg -o junk\" on Windows from Command Prompt or Powershell the download goes very slow or hangs altogether.  However, under WSL *on the same machine*, it works and it's instant.  dotnet and nuget also work under WSL.  When I run the exact same command from WSL *on the same machine*, it downloads instantly (it's something like 100x faster).  The issue occurs with all the nupkg files I've tried.  I've reproduced this on three separate windows machines.  Two are Windows 11 and have the latest patches.  One is Windows 10 and hasn't been turned on for months until today to test this issue.  Other websites appear to be fine.  Other download methods are also slow (tried multiple browsers as well).  Disabling the firewall and/or Microsoft Defender has no effect.  See attached verbose logs: there appears to be some kind of incompatibility with the encryption currently in use on nuget.org and Windows schannel.dll (even older versions of schannel.dll--so unless you intended to break compatibility with Windows 10 machines, this is your issue, not the Windows team).\r\n\r\nDid nuget.org change something with its TLS configuration in the past week or so that could be causing this?  It's completely halting work for a *lot* of people.\n\n### Verbose Logs\n\n```shell\n>curl https://api.nuget.org/v3-flatcontainer/sixlabors.imagesharp/2.1.8/sixlabors.imagesharp.2.1.8.nupkg -o junk -A curl/1.0 -v\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 13.107.246.66:443...\r\n* Connected to api.nuget.org (13.107.246.66) port 443\r\n* schannel: disabled automatic use of client certificate\r\n* ALPN: curl offers http/1.1\r\n* ALPN: server accepted http/1.1\r\n* using HTTP/1.1\r\n> GET /v3-flatcontainer/sixlabors.imagesharp/2.1.8/sixlabors.imagesharp.2.1.8.nupkg HTTP/1.1\r\n> Host: api.nuget.org\r\n> User-Agent: curl/1.0\r\n> Accept: */*\r\n>\r\n* schannel: remote party requests renegotiation\r\n* schannel: renegotiating SSL/TLS connection\r\n* schannel: SSL/TLS connection renegotiated\r\n* schannel: remote party requests renegotiation\r\n* schannel: renegotiating SSL/TLS connection\r\n* schannel: SSL/TLS connection renegotiated\r\n* schannel: failed to decrypt data, need more data\r\n< HTTP/1.1 200 OK\r\n< Date: Fri, 26 Apr 2024 01:23:36 GMT\r\n< Content-Type: application/octet-stream\r\n< Content-Length: 4522752\r\n< Connection: keep-alive\r\n< Cache-Control: public, max-age=86400\r\n< Last-Modified: Thu, 11 Apr 2024 06:31:50 GMT\r\n< ETag: 0x8DC59F1121A2751\r\n< x-ms-request-id: 18d4f9e7-301e-0036-50bc-963087000000\r\n< x-ms-version: 2009-09-19\r\n< x-ms-meta-da7b2905_0f3c_4262_921c_b1593d1336f1_ESRP_RequestId: dc4ac97b-1b2e-46cf-abfd-c25a9e3d9165\r\n< x-ms-meta-SHA512: uAybk5N8IxYppIRr07gglVh4Un1dCW4KhxQdrpWDBONRVFZTNAFpwTkh5NTVxyKPC4Akvm6jriyzGXTUu6NQqA==\r\n< x-ms-lease-status: unlocked\r\n< x-ms-blob-type: BlockBlob\r\n< Access-Control-Expose-Headers: x-ms-request-id,Server,x-ms-version,x-ms-meta-da7b2905_0f3c_4262_921c_b1593d1336f1_ESRP_RequestId,x-ms-meta-SHA512,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding\r\n< Access-Control-Allow-Origin: *\r\n< x-azure-ref: 20240426T012336Z-15c97c8cdddz4g8pk6sd5xqgpc00000008cg00000000n7q1\r\n< x-fd-int-roxy-purgeid: 43765298\r\n< X-Cache: TCP_HIT\r\n< X-Cache-Info: L1_T2\r\n< Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n< x-content-type-options: nosniff\r\n< Accept-Ranges: bytes\r\n<\r\n{ [15217 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [49152 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n  1 4416k    1 64369    0     0  77397      0  0:00:58 --:--:--  0:00:58 77459* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n  3 4416k    3  158k    0     0  94159      0  0:00:48  0:00:01  0:00:47 94193* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [32768 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [49152 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [32768 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [81920 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [32768 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [98304 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [32768 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [65536 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n{ [65536 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n{ [16384 bytes data]\r\n* schannel: failed to decrypt data, need more data\r\n* schannel: failed to decrypt data, need more data\r\n 31 4416k   31 1374k    0     0   409k      0  0:00:10  0:00:03  0:00:07  409k* schannel: failed to decrypt data, need more data\r\n{ [81920 bytes data]\r\n* schannel: failed to decrypt data, need more data\n```\n"},{"Id":"37834048741","Type":"IssuesEvent","CreatedAt":"2024-04-25T23:57:49","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13414","RelatedDescription":"Opened issue \"Known Owner URL ToolTips don't mention the originating Package Source\" (#13414) at NuGet/Home","RelatedBody":"Add explanatory text into the ToolTip or explain that these profile URLs are owners from a particular source."},{"Id":"37829363821","Type":"IssuesEvent","CreatedAt":"2024-04-25T20:21:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13412","RelatedDescription":"Closed issue \"There is an error showing that a dll file path cannot be found when patching .NET SDK 9.0.1xx with NuGet Dev latest build\" (#13412) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nDev\\6.11.0.30\n\n### Worked before?\n\nIt’s not a regression since the patch tool was updated recently.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run `Git clone https://github.com/NuGet/Entropy.git` to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n`.\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 9.0.1xx -Quality daily`\r\n#### Expected Result: \r\nThe patching is successful.\r\n#### Actual Result:\r\nThere is an error saying “Cannot find path 'C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK\\sdk\\9.0.100-preview.5.24224.9\\NuGet.Packaging.Core.dll' because it does not exist” as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/cf015ef2-2c65-407d-9a4f-0be58fb70332)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It doesn’t repro with “-SDKChannel 8.0.3xx” in the step4.\r\n3.I verified the reported path, it exists but don’t know why it said does not exist.\n\n### Verbose Logs\n\n_No response_"},{"Id":"37826630794","Type":"IssuesEvent","CreatedAt":"2024-04-25T18:46:07","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13413","RelatedDescription":"Opened issue \"IVsNuGetProjectUpdateEvents.ProjectUpdateStarted or ProjectUpdateFinished should only provide a list of files that will get changed.\" (#13413) at NuGet/Home","RelatedBody":"https://learn.microsoft.com/en-us/nuget/visual-studio-extensibility/nuget-api-in-visual-studio#ivsnugetprojectupdateevents-interface\r\n\r\nIVsNuGetProjectUpdateEvents.ProjectUpdateStarted or ProjectUpdateFinished should provide a list of files that will/got changed.\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/2027014"},{"Id":"37825515877","Type":"IssuesEvent","CreatedAt":"2024-04-25T18:09:27","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13410","RelatedDescription":"Closed issue \"nuget-client repo is using an ancient version of Microsoft.SourceLink.GitHub\" (#13410) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/blob/252bbee32a839623dc9af267f950d21cde5e9497/Directory.Packages.props#L140C38-L140C65\r\n\r\nThe 1.0.0 got released in 2020 and meanwhile the sourcelink integration got added as a native feature into the .NET SDK. Hence the package doesn't need to be referenced anymore when building with a .NET SDK >= 8.0.100."},{"Id":"37805738698","Type":"IssuesEvent","CreatedAt":"2024-04-25T09:19:32","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13412","RelatedDescription":"Opened issue \"There is an error showing that a dll file path cannot be found when patching .NET SDK 9.0.1xx with NuGet Dev latest build\" (#13412) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nDev\\6.11.0.30\n\n### Worked before?\n\nIt’s not a regression since the patch tool was updated recently.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run `Git clone https://github.com/NuGet/Entropy.git` to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n`.\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 9.0.1xx -Quality daily`\r\n#### Expected Result: \r\nThe patching is successful.\r\n#### Actual Result:\r\nThere is an error saying “Cannot find path 'C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK\\sdk\\9.0.100-preview.5.24224.9\\NuGet.Packaging.Core.dll' because it does not exist” as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/cf015ef2-2c65-407d-9a4f-0be58fb70332)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It doesn’t repro with “-SDKChannel 8.0.3xx” in the step4.\r\n3.I verified the reported path, it exists but don’t know why it said does not exist.\n\n### Verbose Logs\n\n_No response_"},{"Id":"37804540666","Type":"IssuesEvent","CreatedAt":"2024-04-25T08:47:20","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13411","RelatedDescription":"Opened issue \"[Bug Bash] An error occurs when deleting the package and building solution at the second time after checking the “Automatically check for missing packages during build in Visual Studio” in Options dialog for UWP project\" (#13411) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.11.0.30\n\n### Worked before?\n\nIt is not a regression since it reproes on both D16.11\\34601.136 with implicit NuGet Client 5.11.6.4 and D17.9\\34601.282 with implicit NuGet Client 6.9.1.3. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n[Bug Bash] An error occurs when deleting the package and building solution at the second time after checking the “Automatically check for missing packages during build in Visual Studio” in Options dialog for UWP project \r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a C# Blank App (Universal Windows) project in VS and open the PM UI or PMC window. \r\n\r\n2. Install a package (e.g. log4net) through PM UI. \r\n\r\n3. Click the settings button (gear button) on PM UI or PMC window. \r\n\r\n4. Click the NuGet Package Manager->General in the opened “Options” window. \r\n\r\n5. Check the “Automatically check for missing packages during build in Visual Studio” and click OK button. \r\n\r\n6. Go to the path “C:\\Users\\[username]\\.nuget\\packages” and delete the installed package “log4net”. \r\n\r\n7. Go back to VS and build the solution. \r\n\r\n8. Verify the package will be restored successfully to the path in step6 and there will be no error and warning in the Error List window in step7. \r\n\r\n9. Re-delete package “log4net” and build the solution. \r\n\r\n#### Expected:    \r\n\r\nThe package “log4net” is restored successfully again to the path “C:\\Users\\[username]\\.nuget\\packages” and there will be no error or warning in the Error List window. \r\n\r\n#### Actual: \r\n\r\nThe following error occurs, and the package has not been restored back.   \r\n![image](https://github.com/NuGet/Home/assets/84695155/fc9021bb-ee8b-451e-986c-ce1b5d5d169f)\r\n#### Notes:     \r\n\r\n1. The repro rate is 100%.     \r\n\r\n2. It doesn’t repro for non-SDK based projects. \r\n\r\n3. The error will disappear, and the package will be restored back after rebuilding solution. \r\n\r\n4. The error doesn’t disappear and the package doesn’t restored back according to error tips to run restore package. \n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-26T03:30:17.7805311Z","RunDurationInMilliseconds":1048}