{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37245327615","Type":"IssuesEvent","CreatedAt":"2024-04-07T23:36:59","Actor":"felsokning","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9909","RelatedDescription":"Opened issue \"[NuGet.org Bug]: 400 Bad Request on Deprecate Request (extended-ASCII)\" (#9909) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nIt appears that URI Data Escape (or URL Escape) is happening for extended-ASCII characters (e.g.: ö -- in this case) in NuGet package names, when they are selected for being marked as deprecated on the website. This can be seen in the `id` field of the payload that's being sent to nuget.org (see screenshot).\r\n\r\nHowever, the `alternatePackageId` package name field is _not_ escaped; which shows inconsistent behaviour - especially, if these fields are passed as URI parameters.\r\n\r\nAs a result, this causes a 400 Bad Request error, which manifests as `An unknown error occurred when submitting the form.` on the website. \n\n### Repro Steps\n\nSteps to reproduce:\r\n\r\n1. Create a NuGet package with extended-ASCII characters (e.g.: Möò).\r\n2. Create a second NuGet package as a replacement for the first (e.g.: Møö)\r\n2. Publish the NuGet package to NuGet.\r\n3. Use the website to try to disable all versions of the package from step 1, noting the package in Step 2 as the replacement -- noting the name of the package in the `id` and `alternatePackageId` fields, after receiving the 400 Bad Request.\n\n### Expected Behavior\n\nThe request to deprecate all versions of the package _should_ succeed.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/46375514/e0b6a14f-1369-4d5d-8eea-99060dc0ee99)\r\n\r\n\n\n### Additional Context and logs\n\nBelow is the raw curl command generated by Edge to reproduce the issue:\r\n\r\n```\r\ncurl 'https://www.nuget.org/json/deprecation/Deprecate' \\\r\n  -H 'Accept: application/json, text/javascript, */*; q=0.01' \\\r\n  -H 'Accept-Language: en-US,en;q=0.9,en-IE;q=0.8,sv;q=0.7' \\\r\n  -H 'Connection: keep-alive' \\\r\n  -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' \\\r\n  -H 'Cookie: MSCC=cid=[REDACTED]; ARRAffinity=[REDACTED];ARRAffinitySameSite=[REDACTED]; ARRAffinity=[REDACTED]; ARRAffinitySameSite=[REDACTED]; __RequestVerificationToken=[REDACTED]; .AspNet.LocalUser=[REDACTED]; __Controller::TempData=' \\\r\n  -H 'Origin: https://www.nuget.org' \\\r\n  -H 'Referer: https://www.nuget.org/packages/Fels%C3%B6kning.Utilities.SvenskaUtilities/2.0.29/Manage' \\\r\n  -H 'Sec-Fetch-Dest: empty' \\\r\n  -H 'Sec-Fetch-Mode: cors' \\\r\n  -H 'Sec-Fetch-Site: same-origin' \\\r\n  -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 Edg/123.0.0.0' \\\r\n  -H 'X-Requested-With: XMLHttpRequest' \\\r\n  -H 'sec-ch-ua: \"Microsoft Edge\";v=\"123\", \"Not:A-Brand\";v=\"8\", \"Chromium\";v=\"123\"' \\\r\n  -H 'sec-ch-ua-mobile: ?0' \\\r\n  -H 'sec-ch-ua-platform: \"Windows\"' \\\r\n  --data-raw $'id=Fels%26%23246%3Bkning.Utilities.SvenskaUtilities&versions%5B%5D=2.0.29&versions%5B%5D=2.0.28&versions%5B%5D=2.0.27&versions%5B%5D=2.0.26&versions%5B%5D=2.0.25&versions%5B%5D=2.0.23&versions%5B%5D=2.0.0&versions%5B%5D=1.2.2&versions%5B%5D=1.2.1&versions%5B%5D=1.2.0&versions%5B%5D=1.1.9&versions%5B%5D=1.1.8&versions%5B%5D=1.1.7&versions%5B%5D=1.1.6&versions%5B%5D=1.1.5&versions%5B%5D=1.1.4&versions%5B%5D=1.1.3&versions%5B%5D=1.0.0&isLegacy=true&hasCriticalBugs=false&isOther=false&alternatePackageId=Fels%C3%B6kning.Sverige&alternatePackageVersion=&customMessage=This+package+is+deprecated+and+hasn\\'t+received+any+updates+in+almost+3+years.+Please+migrate+to+Fels%C3%B6kning+or+Fels%C3%B6kning.Sverige+for+the+same+features+with+supportability+on+current+versions+of+.NET.&__RequestVerificationToken=[REDACTED]'\r\n```"},{"Id":"37215471405","Type":"PullRequestEvent","CreatedAt":"2024-04-05T19:55:43","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9908","RelatedDescription":"Opened pull request \"Change Link in h2 Color from Black to Blue\" (#9908) at NuGet/NuGetGallery","RelatedBody":"Change Link in h2 Color from Black to Blue\r\nBug link: https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1985625"},{"Id":"37186923327","Type":"PullRequestEvent","CreatedAt":"2024-04-05T01:24:50","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9907","RelatedDescription":"Merged pull request \"CI pipeline\" (#9907) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/5226\r\n\r\nStoring CI pipeline in GH, so we don't have to invent anything with pipeline triggers."},{"Id":"37186730593","Type":"PullRequestEvent","CreatedAt":"2024-04-05T01:11:21","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9907","RelatedDescription":"Opened pull request \"CI pipeline\" (#9907) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/5226\r\n\r\nStoring CI pipeline in GH, so we don't have to invent anything with pipeline triggers."},{"Id":"37184521013","Type":"PullRequestEvent","CreatedAt":"2024-04-04T22:53:04","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9905","RelatedDescription":"Merged pull request \"Fixing runtime issues because of assembly bindings\" (#9905) at NuGet/NuGetGallery","RelatedBody":"Similar to https://github.com/NuGet/NuGetGallery/pull/9597\r\n\r\nWe updated some packages recently, and need to update the assembly bindings in Web.config alongside that.\r\n\r\nDEV release succeeded: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?releaseId=1521319&_a=release-pipeline-progress"},{"Id":"37181454665","Type":"PullRequestEvent","CreatedAt":"2024-04-04T20:37:26","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9906","RelatedDescription":"Opened pull request \"Fix Table Text Got Truncated in Small Screen Issue\" (#9906) at NuGet/NuGetGallery","RelatedBody":"Change statistics table css  to  remove text truncated in small screen.\r\nBug link: \r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1980703"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37259058325","Type":"IssuesEvent","CreatedAt":"2024-04-08T10:24:34","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8274","RelatedDescription":"Reopened issue \"[Suggestion] Link “https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” should be clickable in migration-failed dialog\" (#8274) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.2stg 29027.113\r\nOS Version: 17763.RS5_Release.180914-1434.\r\nInstall VS: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2806963&view=results\r\nInstall NuGet:       \\\\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\Dev\\5.2.0.6067\\artifacts\\VS15\\NuGet.Tools.vsix\r\n## Detailed repro steps \r\n1. Launch Visual Studio 2019.\r\n2. Create a new C++ Console App project and open PM UI in Solution Explorer window.\r\n3. Install a package (e.g. Netonsoft.json) with “packages.config” format into the project.\r\n4. Right-click the “Reference” node and select the “Migrate packages.config to PackageReference…”.\r\n5. Observe the warning.\r\n## Expected\r\n“https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” should be a link in migration-failed dialog.\r\n## Actual\r\nLink “https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” does not clickable in migration-failed dialog as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/60334817-f7ba3880-99ce-11e9-860d-80c51b44bd45.png)\r\n\r\n"},{"Id":"37258877652","Type":"IssuesEvent","CreatedAt":"2024-04-08T10:19:12","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8928","RelatedDescription":"Closed issue \"Updating package ‘EntityFramework’ need to restart VS for 3 times\" (#8928) at NuGet/Home","RelatedBody":"##  Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6346\r\nVS Version: Master\\29612.110\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps\r\n1. Launch VS and click “Create a New Project” button.\r\n2. Create an ASP.NET Web Application (.NET Framework) project (Single Page Application).\r\n3. Open PM UI of this project and go to ‘Update’ tab.\r\n4. Select all packages and click ‘Update’ button.\r\n## Expected\r\nUpdating package ‘EntityFramework’ from version 6.2.0 to 6.4.0 need to restart VS for only 1 time.\r\n## Actual\r\nUpdating package ‘EntityFramework’ from version 6.2.0 to 6.4.0 need to restart VS for 3 times as below screenshot. That’s boring to restart VS just for uninstalling the same package ‘EntityFramework.6.2.0’.\r\n![ThreeTimeRestartRequest](https://user-images.githubusercontent.com/20632625/70799964-ff876100-1de5-11ea-8509-ad61df4236f1.png)\r\n## Note\r\nIt didn’t repro on 16.5 Preview1: D16.5\\29521.150 (with implicit NuGet Client 5.5.0.6293)\r\n"},{"Id":"37258772891","Type":"IssuesEvent","CreatedAt":"2024-04-08T10:15:56","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8163","RelatedDescription":"Closed issue \"There is an error occurred on the second project’s PM UI when closing the first project’s csproj file after migrating the installed package into PR format\" (#8163) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.2.0.6028\r\nVS Version: D16.2stg\\28925.13\r\nOS: Windows 10 RS4_Release 17134.1.180410-1804\r\n## Detailed repro steps so we can see the same problem\r\n1. Launch VS and create a solution with two C# Console App (.NET Framework) projects.\r\n2. Open PM UI of each project and install a package with “packages.config” format into the first project.\r\n3. Right-click the “References” node of the first project in Solution Explorer window and click “Migrate packages.config to PackageReference…”\r\n4. Right-click the first project in Solution Explorer window and click “Unload Project” after the migrating.\r\n5. Right-click the first project in Solution Explorer window and click “Edit xxxxx.csproj”.\r\n6. Close the opened csproj file and click the “Browse” tab in the second project’s PM UI.\r\n## Expected\r\nThere is no error occurred on the “Browse” tab in the second project’s PM UI.\r\n## Actual\r\nThere is an error occurred on the “Browse” tab in the second project’s PM UI as below screenshot.\r\n![Error occurred](https://user-images.githubusercontent.com/20632625/58414481-0fd82880-80ae-11e9-9313-3d2952661eb2.png)\r\n## Note\r\nIt is not a regression issue since it did repro on D15.9 28307.158 (Nuget Client 4.9.3.5777).\r\n\r\n\r\n\r\n"},{"Id":"37258526953","Type":"IssuesEvent","CreatedAt":"2024-04-08T10:08:28","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8274","RelatedDescription":"Closed issue \"[Suggestion] Link “https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” should be clickable in migration-failed dialog\" (#8274) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.2stg 29027.113\r\nOS Version: 17763.RS5_Release.180914-1434.\r\nInstall VS: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2806963&view=results\r\nInstall NuGet:       \\\\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\Dev\\5.2.0.6067\\artifacts\\VS15\\NuGet.Tools.vsix\r\n## Detailed repro steps \r\n1. Launch Visual Studio 2019.\r\n2. Create a new C++ Console App project and open PM UI in Solution Explorer window.\r\n3. Install a package (e.g. Netonsoft.json) with “packages.config” format into the project.\r\n4. Right-click the “Reference” node and select the “Migrate packages.config to PackageReference…”.\r\n5. Observe the warning.\r\n## Expected\r\n“https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” should be a link in migration-failed dialog.\r\n## Actual\r\nLink “https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” does not clickable in migration-failed dialog as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/60334817-f7ba3880-99ce-11e9-860d-80c51b44bd45.png)\r\n\r\n"},{"Id":"37258500496","Type":"IssuesEvent","CreatedAt":"2024-04-08T10:08:02","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8117","RelatedDescription":"Closed issue \"The ‘ProjectName’ column lost in PMC after resetting window layout\" (#8117) at NuGet/Home","RelatedBody":"[658342](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/658342)\r\n\r\nRepro steps: \r\n\r\n1. Launch VS and create a C# Blank App (Universal Windows).\r\n\r\n2. Open “Package Manager Console”.\r\n\r\n3. Drag the PMC window splitter to right.\r\n\r\n4. Type ‘Get-Package -Updates’ in PMC.\r\n\r\n5. Click “window->Reset Window Layouts”.\r\n\r\n6. Open “Package Manager Console” and type ‘Get-Package -Updates’ in PMC again.\r\n\r\n7. Drag the PMC window splitter to right and observe the package information.\r\n\r\nExpected:\r\n\r\nThe ‘ProjectName’ column should be displayed in step 7 such as step 4.\r\n\r\nActual:\r\n\r\nThe ‘ProjectName’ column lost in step 7 as attachment picture. \r\n\r\nNotes:\r\n\r\n1. The issue repro on D16.0stg 28002.3000 (default NuGet Client Release-4.8.0-preview3/4.8.0.5278).\r\n\r\n2. The issue repro on D15.8 28002.3000 + NuGet Client Release-4.8.0-RTM\\4.8.0.5374."},{"Id":"37257760679","Type":"IssuesEvent","CreatedAt":"2024-04-08T09:45:43","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4936","RelatedDescription":"Closed issue \"Intellisense doesn’t work when typing ‘Get-Package n’ in PMC of the project with the packages ‘N***’ installed\" (#4936) at NuGet/Home","RelatedBody":"**NuGet Version:** NuGet 4.2.0-RTM-2446\r\n**VS Version:** D15PreRel 26329.00\r\n**OS Version:** Windows 10 RS2_Release 15063.2.170323-1837\r\n\r\n**Repro Steps:**\r\n1. Create a C# Class Library (.NET Framework) via VS.\r\n2. Open the ‘Manage NuGet Packages…’ for the project.\r\n3. Install packages **‘Newtonsoft.Json 10.0.1’** and **‘NUnit 3.6.1’**.\r\n4. Open Package Manager Console.\r\n5. Type **‘Get-Package n’** and hit Tab.\r\n\r\n**Expected Result:**\r\nThere is a list contain the installed packages who's name begin with n.\r\n\r\n**Actual Result:**\r\nThe intellisense doesn’t work as below screenshot.\r\n![getpackagenointellisense](https://cloud.githubusercontent.com/assets/20632625/24497826/458b2f7e-156f-11e7-86cc-c7f251a91c90.png)\r\n\r\n**Note:**\r\n1.It also repro on D15Rel 26329.02 (NuGet Client 4.1.0-RTM-2427).\r\n2.It also repro on VSUWPT 26329.01 + NuGet Client 4.3.0-beta1-2444.\r\n3.The description of 'Get-Package' is: _Gets the set of installed packages._ So the intellisense should works."},{"Id":"37257147266","Type":"IssuesEvent","CreatedAt":"2024-04-08T09:27:47","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4330","RelatedDescription":"Closed issue \"The same package source gets two different tooltips\" (#4330) at NuGet/Home","RelatedBody":"**NuGet Version:** NuGet 4.0.0-RTM-2224\r\n**VS Version:** D15Rel 26118.00\r\n**OS Version:** Windows 10 RS1_Release 14393.726.170112-1758\r\n \r\n**Repro Steps:**\r\n1.  Create a new C# Console Application via VS.\r\n2.  Right-click on the project and click ‘Manage NuGet Packages…’.\r\n3.  Hover on ‘Package source’ drop down list on the right-top of PM UI (default is ‘nuget.org’).\r\n4.  Switch to other package source and switch back to ‘nuget.org’.\r\n5.  Hover on ‘Package source’ drop down list again.\r\n\r\n**Expected Result:**\r\nThe same package source gets same tooltips between step3 and step5.\r\n\r\n**Actual Result:**\r\nThe same package source gets two different tooltips as below screenshot.\r\n![differenttooltips](https://cloud.githubusercontent.com/assets/20632625/22099600/f73c8172-de66-11e6-88d7-b6f6f11f8889.png)\r\n\r\n**Note:**\r\n1. It repro on D15Rel 26118.00 (NuGet Client 4.0.0-RC3-2215).\r\n2. It also repro on Dev14 MU3.5 25421.01(NuGet 3.4.4.1321).\r\n"},{"Id":"37253424834","Type":"IssuesEvent","CreatedAt":"2024-04-08T07:35:51","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13382","RelatedDescription":"Opened issue \"Failed to patch the .NET SDK with NuGet Dev latest build\" (#13382) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nDev\\6.11.0.9\n\n### Worked before?\n\nIt is a regression since the issue doesn’t repro on patching Dotnet SDK 8.0.300-preview.24179.1 patched with NuGet Client Dev\\6.11.0.3.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n    ` .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 8.0.3xx -Quality daily`\r\n#### Expected Result: \r\nThe patching is successful.\r\n#### Actual Result:\r\nThe patching failed as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/bda2be69-0c71-4d35-8c1d-b0f5b750999e)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It also reproes with “-SDKChannel 9.0.1xx” in the step4.\r\n3.It doesn’t repro on patching Dotnet SDK 8.0.300-preview.24179.1 patched with NuGet Client Dev\\6.11.0.3.\r\n4.The issue doesn’t repro when we use the latest “Entropy\\SDKPatchTool” patching with NuGet Client Dev\\6.11.0.3.\n\n### Verbose Logs\n\n_No response_"},{"Id":"37252705304","Type":"IssuesEvent","CreatedAt":"2024-04-08T07:11:55","Actor":"thecristidima","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13381","RelatedDescription":"Opened issue \"Make RestoreResult.CacheFile public\" (#13381) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nAfter a restore, we want to get a list of all packages required by our package and their install paths.\r\n\r\nTo get the packages we can simply use `RestoreResult.LockFile`, but in order to get the paths we have the following options:\r\n\r\n1. Read `nuget.cache` after commiting the files to disk and going through `expectedPackageFilePaths`\r\n2. Use `RestoreRequest.DependencyProviders.PackageFileCache`\r\n3. Lookup the dependencies in all folders - this has quite a high cost of `#feeds * #packages * DirectoryExists`\r\n\r\nThere are, however some issues with all of these approaches:\r\n\r\n1. First approach reads from disk and it can be quite slow, especially if a package has lots of dependencies. In addtion, we already read the file for a NoOp restore [here](https://github.com/NuGet/NuGet.Client/blob/7ad6fcc9c56c960975c37b2416c7eae1d53ba3fd/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L200)\r\n2. `RestoreRequest.DependencyProviders.PackageFileCache` is empty for NoOp restore\r\n3. We already pay the cost for the third option [here](https://github.com/NuGet/NuGet.Client/blob/7ad6fcc9c56c960975c37b2416c7eae1d53ba3fd/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L447)\r\n\r\nIn both cases (normal or NoOp restore) we already have `RestoreResult.CacheFile` loaded up in memory so it would be easier for us to just use that, but unfortunately it's a private member.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-09T03:30:18.9158855Z","RunDurationInMilliseconds":979}