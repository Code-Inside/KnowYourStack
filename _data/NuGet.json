{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29863173578","Type":"PullRequestEvent","CreatedAt":"2023-06-19T23:35:44","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9524","RelatedDescription":"Merged pull request \"Fix user credential result on admin panel\" (#9524) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nproblem: `IsAADorMACredential` is not assigned. \r\n\r\nFix: check if credential is AAD or MA, then assign `IsAADorMACredential = true`, otherwise false\r\n\r\nTest: Tested in dev environment\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4904"},{"Id":"29862361537","Type":"PullRequestEvent","CreatedAt":"2023-06-19T22:17:22","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9526","RelatedDescription":"Merged pull request \"Updating NuGet.Protocol version.\" (#9526) at NuGet/NuGetGallery","RelatedBody":"Fix for a CG warning."},{"Id":"29860178653","Type":"PullRequestEvent","CreatedAt":"2023-06-19T19:41:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9526","RelatedDescription":"Opened pull request \"Updating NuGet.Protocol version.\" (#9526) at NuGet/NuGetGallery","RelatedBody":"Fix for a CG warning."},{"Id":"29793342251","Type":"IssuesEvent","CreatedAt":"2023-06-15T22:34:43","Actor":"fluffynuts","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9525","RelatedDescription":"Opened issue \"Error when attempting to push a pre-release package: The package manifest contains an invalid Version\" (#9525) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29893677244","Type":"IssuesEvent","CreatedAt":"2023-06-21T01:31:20","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12680","RelatedDescription":"Opened issue \"NuGet.Client allocates many instances of comparers\" (#12680) at NuGet/Home","RelatedBody":"Comparers are almost always immutable and well suited to reuse. A lot of code in NuGet.Client constructs a new instance when needed, then lets the GC clean it up.\r\n\r\nAdding static `Instance` members to comparers would allow them to be reused with minimal code churn.\r\n\r\nThere are some instances where comparers come from a set of values, depending upon the value of an enum (like `VersionComparison`). There can be a singleton for each, and a method to look this up efficiently at runtime when the required behaviour can vary with state.\r\n\r\nWhere possible, public constructors should be marked obsolete to discourage their futher use. Where possible, they should be made private."},{"Id":"29892855882","Type":"IssuesEvent","CreatedAt":"2023-06-21T00:27:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12679","RelatedDescription":"Closed issue \"Add NoAllocEnumerateExtensions\" (#12679) at NuGet/Home","RelatedBody":""},{"Id":"29892851583","Type":"IssuesEvent","CreatedAt":"2023-06-21T00:27:28","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12679","RelatedDescription":"Opened issue \"Add NoAllocEnumerateExtensions\" (#12679) at NuGet/Home","RelatedBody":""},{"Id":"29892464410","Type":"IssuesEvent","CreatedAt":"2023-06-20T23:53:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12666","RelatedDescription":"Closed issue \"Avoid value lookup in foreach loop over dictionary's keys\" (#12666) at NuGet/Home","RelatedBody":"NuGet.Client has several places where the following pattern is seen:\r\n\r\n```c#\r\nforeach (var key in dictionary.Keys)\r\n{\r\n    var value = dictionary[key];\r\n    // ...\r\n}\r\n```\r\n\r\nThis code is slower than it needs to be. It's possible to avoid looking up the value on each iteration of the loop by enumerating both the key and value at the same time:\r\n\r\n```c#\r\nforeach (KeyValuePair<TKey, TValue> pair in dictionary)\r\n{\r\n    var key = pair.Key;\r\n    var value = pair.Value;\r\n    // ...\r\n}\r\n```\r\n\r\nThis will be faster as the lookups are avoided, and also avoids allocating a `Dictionary<>.KeyCollection` class.\r\n\r\nUsing deconstriction, it's possible to write this more succinctly as:\r\n\r\n```c#\r\nforeach ((var key, var value) in dictionary)\r\n{\r\n    // ...\r\n}\r\n```\r\n"},{"Id":"29892361457","Type":"IssuesEvent","CreatedAt":"2023-06-20T23:44:03","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12678","RelatedDescription":"Opened issue \"PackageSpecificWarningProperties classes do redundant collection lookups\" (#12678) at NuGet/Home","RelatedBody":"`PackageSpecificWarningProperties` classes do redundant collection lookups."},{"Id":"29892018243","Type":"IssuesEvent","CreatedAt":"2023-06-20T23:14:01","Actor":"anonhostpi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12677","RelatedDescription":"Opened issue \"Nuget.Frameworks.CompatibilityProvider makes \"Net 5 Era\" frameworks incompatible with .NETStandard\" (#12677) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuGet.Frameworks 6.6.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis particular line:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Frameworks/CompatibilityProvider.cs#L200\r\n\r\nPrevents all .NET 5 (and all .NET 5+ `NugetFramework` where `hasplatform` property is `false`) from recognizing that they are compatible with .NET Standard\r\n\r\nFor example, this currently returns false:\r\n\r\n```\r\nDefaultCompatibilityProvider.Instance.IsCompatible(\r\n    [a .NET 7 NugetFramework object],\r\n    [a .NET Standard 2.0 NugetFramework object]\r\n)\r\n```\r\n\r\nRelated issue: https://stackoverflow.com/questions/76502689/how-can-i-map-a-net-core-version-to-net-standard-with-libraries-like-nuget-pac\n\n### Verbose Logs\n\n_No response_"},{"Id":"29891894403","Type":"PullRequestEvent","CreatedAt":"2023-06-20T23:04:09","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/12675","RelatedDescription":"Merged pull request \"Spec: Markdown Readme shown after Package Installation in PM UI\" (#12675) at NuGet/Home","RelatedBody":"Fixes: https://github.com/NuGet/Client.Engineering/issues/2352"},{"Id":"29890842672","Type":"IssuesEvent","CreatedAt":"2023-06-20T21:50:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12676","RelatedDescription":"Opened issue \"Share code with the pack and restore command packagespecificwarningproperties \" (#12676) at NuGet/Home","RelatedBody":"There's some duplication that can probably be extracted into a static helper class to avoid weird bugs.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/5261/files?diff=split&w=1"},{"Id":"29890320439","Type":"IssuesEvent","CreatedAt":"2023-06-20T21:18:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12670","RelatedDescription":"Closed issue \"VS shows many spelling warnings in NuGet.Client for non dictionary words that are not mispelled\" (#12670) at NuGet/Home","RelatedBody":"We should configure a custom dictionary to suppress these, and to bring more focus to real issues."},{"Id":"29888237095","Type":"PullRequestEvent","CreatedAt":"2023-06-20T19:33:01","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12675","RelatedDescription":"Opened pull request \"Spec: Markdown Readme shown after Package Installation in PM UI\" (#12675) at NuGet/Home","RelatedBody":"Fixes: https://github.com/NuGet/Client.Engineering/issues/2352"},{"Id":"29887378925","Type":"IssuesEvent","CreatedAt":"2023-06-20T18:50:48","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12674","RelatedDescription":"Opened issue \"Markdown Readme files aren't opened after package installation in PM UI\" (#12674) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nInstalling a package with a `.txt` readme file causes that file to be opened by PM UI as a new file in VS.\r\n\r\nPerforming the same action with a package with a `.md` readme file does not open the file at all.\n\n### Desired Behavior\n\nA `.md` readme should be opened after install in the PM UI just as `.txt` readme files. \n\n### Additional Context\n\n_No response_"},{"Id":"29878420851","Type":"IssuesEvent","CreatedAt":"2023-06-20T13:08:09","Actor":"marcin-krystianc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12672","RelatedDescription":"Opened issue \"Package signature verification is slow on Linux\" (#12672) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.107, 8.0.100-preview.6.23319.41\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nhttps://github.com/marcin-krystianc/TestNuGetSignatureVerification\r\n### TestNuGetSignatureVerification on Linux\r\n``` <docker.exe run -t -i --rm ubuntu>\r\n> apt-get update && apt-get install -y git dotnet7\r\n> dotnet --info\r\n> git clone https://github.com/marcin-krystianc/TestNuGetSignatureVerification.git\r\n> git clone https://github.com/dotnet/orleans.git\r\n> dotnet restore orleans/Orleans.sln\r\n> export DOTNET_NUGET_SIGNATURE_VERIFICATION=True\r\n> dotnet run -c Release --project TestNuGetSignatureVerification/TestNuGetSignatureVerification/TestNuGetSignatureVerification.csproj -- 1\r\nUsing MSBuild:/usr/lib/dotnet/sdk/7.0.107\r\nFound 479 packages in '/root/.nuget/packages/\r\nVerified 479 packages in '31.7100083 seconds with degree of parallelism=1\r\n\r\n> dotnet nuget locals --list global-packages\r\n> time dotnet nuget verify --all ~/.nuget/packages/**/*/*.nupkg -v diag > out.txt\r\nreal    0m47.733s\r\nuser    0m48.614s\r\nsys     0m0.983s\r\n```\r\n\r\n### TestNuGetSignatureVerification on Windows (PowerShell)\r\n```\r\n> dotnet --info\r\n> git clone https://github.com/marcin-krystianc/TestNuGetSignatureVerification.git\r\n> git clone https://github.com/dotnet/orleans.git\r\n> dotnet restore orleans/Orleans.sln\r\n> dotnet run -c Release --project TestNuGetSignatureVerification/TestNuGetSignatureVerification/TestNuGetSignatureVerification.csproj -- 1\r\nUsing MSBuild:C:\\Program Files\\dotnet\\sdk\\7.0.304\r\nFound 493 packages in 'C:\\Users\\Marcin\\.nuget\\packages\\\r\nVerified 493 packages in '4.1218048 seconds with degree of parallelism=1\r\n\r\n> dotnet nuget locals --list global-packages\r\n> Measure-Command {dotnet nuget verify --all $env:USERPROFILE\\.nuget\\packages\\**\\*\\*.nupkg -v diag > out.txt}\r\n...\r\nSeconds           : 4\r\nMilliseconds      : 638\r\n...\r\n```\r\n\r\nI would expect that signature verification on Linux and on Windows takes a similar time. Unfortunately, signature verification on Linux is about an order of magnitude slower. It affects the \"clean\" restore scenarios, where the NuGet packages need to be installed into `global-packages` folder as the signature verification was recently enabled by default on Linux.\r\n\r\nIt is probably not even a problem with NuGet itself but with how the signature verification is implemented on Windows and on Linux. I'm reporting it here as I've discovered it with NuGet and also it provides an easy way to reproduce it.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"29875751501","Type":"IssuesEvent","CreatedAt":"2023-06-20T11:29:03","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9592","RelatedDescription":"Closed issue \"Nuget FrameworkReference not mactching schema\" (#9592) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe:\r\n\r\nNuGet version `5.5.0.6382` and `5.5.1.6542`:\r\n\r\ndotnet.exe --version (if appropriate): 3.1.201\r\n\r\nVS version (if appropriate): -\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): MacOS 10.15.4\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Add a `FrameworkReference` to a nuspec as per the [documentation](https://github.com/NuGet/Home/wiki/%5BSpec%5D-FrameworkReference-in-NuGet#frameworkreference-in-the-package)\r\n\r\n2. Run a `nuget pack`\r\n3. An error happens\r\n\r\n``` log\r\nAttempting to build package from 'xxx.nuspec'.\r\nThe element 'group' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'dependency' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'frameworkReference' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'dependency' element.\r\n```\r\n\r\nHere is the nuspec I use:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n    <metadata>\r\n        <id>somepackage</id>\r\n        <version>5.0.0-alpha-6</version>\r\n        <title>SomePacakge</title>\r\n        <authors>Linvi</authors>\r\n        <owners>Linvi</owners>        \r\n       <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n        <description>\r\n            Some description\r\n        </description>\r\n        <summary>Some summary</summary>\r\n        <releaseNotes>https://github.com/linvi/</releaseNotes>\r\n        <copyright>Some copyright</copyright>\r\n        <language>en-US</language>\r\n        <tags></tags>\r\n        <dependencies>\r\n            <group targetFramework=\"netstandard2.0\">\r\n                <dependency id=\"TweetinviAPI\" version=\"5.0.0-alpha-6\" />\r\n                <dependency id=\"Microsoft.AspNetCore.WebUtilities\" version=\"2.2.0\" />\r\n                <dependency id=\"System.Net.Http\" version=\"4.3.4\" />\r\n            </group>\r\n            <group targetFramework=\"netcoreapp2.1\">\r\n                <dependency id=\"TweetinviAPI\" version=\"5.0.0-alpha-6\" />\r\n                <dependency id=\"Microsoft.AspNetCore.Http\" version=\"2.1\" />\r\n                <dependency id=\"Microsoft.AspNetCore.Http.Abstractions\" version=\"2.1\" />\r\n                <dependency id=\"Microsoft.Extensions.Options\" version=\"2.1\" />\r\n            </group>\r\n            <group targetFramework=\"netcoreapp3.1\">\r\n                <dependency id=\"TweetinviAPI\" version=\"5.0.0-alpha-6\" />\r\n            </group>\r\n        </dependencies>\r\n        <frameworkReferences>\r\n            <group targetFramework=\"netcoreapp3.1\">\r\n                <dependency name=\"Microsoft.WindowsDesktop.App\"/>\r\n            </group>\r\n        </frameworkReferences>\r\n    </metadata>\r\n</package>\r\n```\r\n\r\nIssue comes from the `frameworkReference` section.\r\n\r\n### Verbose Logs\r\n\r\n``` log\r\nNuGet Version: 5.5.0.6382\r\nAttempting to build package from 'SomePackage.nuspec'.\r\nThe element 'group' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'dependency' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'frameworkReference' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'dependency' element.\r\nSystem.InvalidOperationException: The element 'group' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd' has invalid child element 'dependency' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. List of possible elements expected: 'frameworkReference' in namespace 'http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'. This validation error occurred in a 'dependency' element.\r\n  at NuGet.Packaging.Manifest+<>c.<ValidateManifestSchema>b__20_0 (System.Object sender, System.Xml.Schema.ValidationEventArgs e) [0x0003b] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidationCallback (System.Object sender, System.Xml.Schema.ValidationEventArgs e) [0x00008] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.SendValidationEvent (System.Xml.Schema.ValidationEventHandler eventHandler, System.Object sender, System.Xml.Schema.XmlSchemaValidationException e, System.Xml.Schema.XmlSeverityType severity) [0x0000c] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.ElementValidationError (System.Xml.XmlQualifiedName name, System.Xml.Schema.ValidationState context, System.Xml.Schema.ValidationEventHandler eventHandler, System.Object sender, System.String sourceUri, System.Int32 lineNo, System.Int32 linePos, System.Xml.Schema.XmlSchemaSet schemaSet) [0x00195] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.ValidateElementContext (System.Xml.XmlQualifiedName elementName, System.Boolean& invalidElementInContext) [0x001b7] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XmlSchemaValidator.ValidateElement (System.String localName, System.String namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, System.String xsiType, System.String xsiNil, System.String xsiSchemaLocation, System.String xsiNoNamespaceSchemaLocation) [0x00044] in <d2167e74280f4e9eaf18774469287853>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x0004b] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateNodes (System.Xml.Linq.XElement e) [0x00028] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.ValidateElement (System.Xml.Linq.XElement e) [0x00068] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.XNodeValidator.Validate (System.Xml.Linq.XObject source, System.Xml.Schema.XmlSchemaObject partialValidationType, System.Boolean addSchemaInfo) [0x0012e] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.Extensions.Validate (System.Xml.Linq.XDocument source, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Boolean addSchemaInfo) [0x00023] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at System.Xml.Schema.Extensions.Validate (System.Xml.Linq.XDocument source, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler) [0x00000] in <fa61eeccda5e4ae1952c5dff2fd39d1b>:0 \r\n  at NuGet.Packaging.Manifest.ValidateManifestSchema (System.Xml.Linq.XDocument document, System.String schemaNamespace) [0x00007] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.Manifest.ReadFrom (System.IO.Stream stream, System.Func`2[T,TResult] propertyProvider, System.Boolean validateSchema) [0x00097] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.PackageBuilder.ReadManifest (System.IO.Stream stream, System.String basePath, System.Func`2[T,TResult] propertyProvider) [0x00000] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.PackageBuilder..ctor (System.String path, System.String basePath, System.Func`2[T,TResult] propertyProvider, System.Boolean includeEmptyDirectories, System.Boolean deterministic) [0x00043] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Packaging.PackageBuilder..ctor (System.String path, System.Func`2[T,TResult] propertyProvider, System.Boolean includeEmptyDirectories, System.Boolean deterministic) [0x00008] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.CreatePackageBuilderFromNuspec (System.String path) [0x0010f] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.BuildFromNuspec (System.String path) [0x00000] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.BuildPackage (System.String path) [0x00016] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.Commands.PackCommandRunner.BuildPackage () [0x00021] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.PackCommand.ExecuteCommand () [0x0026f] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.Command.ExecuteCommandAsync () [0x00000] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.Command.Execute () [0x000dd] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0 \r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x001c1] in <6c6391fe18434bf8bbd25bfdaf4c59aa>:0\r\n```\r\n"},{"Id":"29866319874","Type":"IssuesEvent","CreatedAt":"2023-06-20T04:24:58","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12670","RelatedDescription":"Opened issue \"VS shows many spelling warnings in NuGet.Client for non dictionary words that are not mispelled\" (#12670) at NuGet/Home","RelatedBody":"We should configure a custom dictionary to suppress these, and to bring more focus to real issues."},{"Id":"29865669642","Type":"IssuesEvent","CreatedAt":"2023-06-20T03:28:21","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12669","RelatedDescription":"Opened issue \"Obsolete Clone methods on immutable types\" (#12669) at NuGet/Home","RelatedBody":"Several NuGet.Client types are immutable yet define `Clone` methods. There is no need to clone them, as the cloned value will be equivalent in every way to the original. The downside of cloning is the extra memory allocation and GC pressure such clones cause.\r\n\r\nThe clone methods should be marked as `[Obsolete]` to discourage their use and promote better memory efficiency."},{"Id":"29865514488","Type":"IssuesEvent","CreatedAt":"2023-06-20T03:13:34","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12668","RelatedDescription":"Opened issue \"GetContentFileFolderRelativeToFramework allocates too much\" (#12668) at NuGet/Home","RelatedBody":"GetContentFileFolderRelativeToFramework allocates too many strings, enumerators and arrays. It can be made to allocate only the output string."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"},{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-06-21T03:30:22.2956779Z","RunDurationInMilliseconds":1033}