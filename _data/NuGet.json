{"Data":{"Blog":{"FeedItems":[{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15074019413","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:58:28","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8409","RelatedDescription":"Closed issue \"Cannot connect account with work Microsoft account\" (#8409) at NuGet/NuGetGallery","RelatedBody":"Hi Nuget team!\r\n\r\nCan you please assist me with my problem? I'm trying to create an account in Nuget.org and link it with work Microsoft account\r\nSomehow I have created login+password account and now I'm getting this window:\r\n![image](https://user-images.githubusercontent.com/30490978/106566331-3ae07400-6541-11eb-8dd1-86d54346e21d.png)\r\n\r\n\r\nI'm understand that is correct behaviour of the site, because login+pass Auth has beem discontinued. When I am trying to log in with Mircosoft after choosing my accnount I'm getting this:\r\n![image](https://user-images.githubusercontent.com/30490978/106566381-4895f980-6541-11eb-8d86-759cf2ffe16f.png)\r\n\r\nI am expected to be logged in Nuget.org site, but got Need admin approval error. First, I tried to find person in company that related to creating Nuget accounts but no one knows about it inside company.\r\n\r\nI hope that you can help with this problem,\r\nThanks\r\nAndrey"},{"Id":"15073970283","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:53:02","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8408","RelatedDescription":"Closed issue \"Cannot access to the account in any way\" (#8408) at NuGet/NuGetGallery","RelatedBody":"### I lost the access to the main account on Nuget\r\n\r\nI no longer have access to the email address associated with the account they used to publish the packages.\r\n\r\nThe domain has expired.\r\n\r\nPlease, can you help me to recover it?\r\n\r\nThank you."},{"Id":"15061960067","Type":"PullRequestEvent","CreatedAt":"2021-02-04T07:26:21","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8412","RelatedDescription":"Opened pull request \"Extend vulnerabilities verification to metadata\" (#8412) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/3623\r\n\r\nThe verification test already existed for doing a full set check of database vulnerabilities--this change adds the capability of downloading registration metadata blobs to determine that the pipeline has propagated incremental changes correctly.\r\n\r\nThe config file changes allow you to test either or both."},{"Id":"15058759644","Type":"IssuesEvent","CreatedAt":"2021-02-04T00:08:36","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7035","RelatedDescription":"Closed issue \"Github documentation markdown is not rendering tables correctly\" (#7035) at NuGet/NuGetGallery","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"15058737528","Type":"IssuesEvent","CreatedAt":"2021-02-04T00:05:46","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5682","RelatedDescription":"Closed issue \"Improve length and syntax restrictions for github sourced package documentation\" (#5682) at NuGet/NuGetGallery","RelatedBody":"I was excited to see the new feature on NuGet.org where you can import your documentation file from Github as part of uploading a package.\r\n\r\nHowever, the two times I've attempted to use this feature I've been blocked by its limitations:\r\n\r\n* I tried to import https://github.com/madelson/DistributedLock/blob/master/README.md but got an error message saying the file was too large\r\n* I tried to import https://github.com/madelson/Bits/blob/a9739c81972902eadf06435dca7fb333c8d59b4b/README.md but the markdown table syntax didn't display correctly\r\n\r\nI'd love to use this feature, but right now it seems too limited."},{"Id":"15056261073","Type":"PullRequestEvent","CreatedAt":"2021-02-03T19:55:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8410","RelatedDescription":"Merged pull request \"Use throw instead of throw ex to preserve call stack\" (#8410) at NuGet/NuGetGallery","RelatedBody":"This will allow us to debug a strange push failure that I've seen."},{"Id":"15056160443","Type":"IssuesEvent","CreatedAt":"2021-02-03T19:46:32","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8411","RelatedDescription":"Opened issue \"Add link to Package Authoring best practices to Package Upload page\" (#8411) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nIt will make the page more discoverable to package authors.\r\n\r\n### Describe the solution you'd like\r\nAdd a link to this page: https://docs.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices\r\n\r\n//cc @jcjiang "},{"Id":"15055940807","Type":"PullRequestEvent","CreatedAt":"2021-02-03T19:29:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8410","RelatedDescription":"Opened pull request \"Use throw instead of throw ex to preserve call stack\" (#8410) at NuGet/NuGetGallery","RelatedBody":"This will allow us to debug a strange push failure that I've seen."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15075771878","Type":"IssuesEvent","CreatedAt":"2021-02-05T02:55:25","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10547","RelatedDescription":"Opened issue \"Transitive NuGet packages are not being shown in Solution Explorer when connect to a VS CodeSpace\" (#10547) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version:  16.9 preview 4\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n**Visual Studio Version**: **16.9.0 Preview 4.0 [31004.17.d16.9]**\r\n\r\n**Summary**:\r\n\r\nFiled a Project System bug (https://github.com/dotnet/project-system/issues/6922) which was closed as it is blocked by an API that is not yet supported in CodeSpaces: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1135451\r\nTransitive NuGet packages are not being shown in Solution Explorer when connect to a VS CodeSpace.\r\n\r\nChecked `project.assets.json` and found the dependency was written as expected:\r\n> \"MicroBuild.Plugins.SwixBuild/1.0.147\": {\r\n>         \"type\": \"package\",\r\n>         \"dependencies\": {\r\n>           \"MicroBuild.Core.Sentinel\": \"1.0.0\"\r\n>         },\r\n>         \"compile\": {\r\n>           \"lib/net461/_._\": {}\r\n>         },\r\n>         \"runtime\": {\r\n>           \"lib/net461/_._\": {}\r\n>         },\r\n>         \"build\": {\r\n>           \"build/_._\": {}\r\n>         }\r\n>       },\r\n> \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Connect VS to a local CodeSpace server.\r\n\r\n2. Open a project with NuGet packages containing transitive dependencies. Eg, `Microsoft.VisualStudio.ProjectSystem.Managed`.\r\n\r\n3. Observe that Package nodes cannot be expanded to see their transitive packages.\r\n\r\n**Expected Behavior**:\r\n![image](https://user-images.githubusercontent.com/49205731/106971111-3b813200-671c-11eb-9689-c9e5992491d5.png)\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/49205731/106971138-489e2100-671c-11eb-8655-90c5bc2b06e1.png)\r\n\r\n\r\n**User Impact**:\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15075400960","Type":"IssuesEvent","CreatedAt":"2021-02-05T01:59:27","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10546","RelatedDescription":"Opened issue \"License URL is not loaded when connected to CodeSpace\" (#10546) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: 16.9p4\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n1. Open a project in a local CodeSpace.\r\n2. Open PMUI\r\n3. Find a package that uses a License URL (eg, Microsoft.Internal.VisualStudio.Shell.Interop.9.0 from apex public feed)\r\n4. In the Details pane, click `View License`. Alternatively, install the package and click `View License` in the prompt.\r\n5. Observe that the license file never loads. In Standalone, the license text is loaded.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/106978899-37104580-672b-11eb-9fbe-48ec6c7ad11d.png)\r\n\r\nExpected (Standalone):\r\n![image](https://user-images.githubusercontent.com/49205731/106979171-c3226d00-672b-11eb-92b0-515891fc18ad.png)\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15075012220","Type":"IssuesEvent","CreatedAt":"2021-02-05T01:04:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10502","RelatedDescription":"Closed issue \"NuGet Restore error - Response status code does not indicate success: 401 (Unauthorized) - Azure DevOps NuGet Feed\" (#10502) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (Visual Studio 2019):\r\n\r\nProduct version: 16.8.3\r\n\r\n## Issue\r\n\r\nWhen trying to build a project in Visual Studio, it fails while trying to restore the packages from our internal Azure Artifacts NuGet store (hosted in Azure DevOps). Directly accessing the Azure Artifacts URL worked without a problem, but when I trying to do this through Visual Studio it fails with the error below.\r\n\r\nThis usually happens when there is an account credentials change, used to sign into VS.\r\n\r\nRe-entering the credentials into visual studio sometimes fixes the issues, sometimes it doesn't (_Couldn't find a pattern_).\r\n\r\n### Output Error\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.1.11\\NuGet.targets(123,5): error : Failed to retrieve information about 'MyProject.MyNugetPackage' from remote source 'https://pkgs.dev.azure.com/MyOrganizationName/MyProjectName/_packaging/MyNugetFeedName/nuget/v3/index.json'. [C:\\Projects\\MyProject\\Project.sln]\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.1.11\\NuGet.targets(123,5): error : Response status code does not indicate success: 401 (Unauthorized). [C:\\Projects\\MyProject\\Project.sln]\r\n```\r\n\r\n### Workaround on Windows 10\r\n\r\n- Open the search bar in windows and search for Credentials Manager.\r\n- In the Credential Manager go to ‘Windows Credentials’.\r\n- Scroll to the list of Generic Credentials.\r\n  - Click on the 'vscredentials' and click on Remove.\r\n  - Click on the 'azureAccountProviderCredetials|azure TokenCache_azure_public...' and click on Remove.\r\n- Re-enter credentials in VS and now it works again.\r\n\r\n### Suggestion\r\n\r\nAlthough this issue doesn't happen all the time, and a simple sign out/in work, sometimes it does happen and I have to apply the above 'hack'. It would be nice if this issue can be resolved only with a sign out/in."},{"Id":"15074929715","Type":"IssuesEvent","CreatedAt":"2021-02-05T00:53:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10501","RelatedDescription":"Closed issue \"Why condition is ignored under multi-targetframeworks with new-sdk project\" (#10501) at NuGet/Home","RelatedBody":"I have a wpf net core project. And this is my csproj file:\r\n\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n\t<PropertyGroup>\r\n\t\t<OutputType>WinExe</OutputType>\r\n\t\t<TargetFrameworks>netcoreapp3.1;net5.0-windows</TargetFrameworks>\r\n\t\t<UseWPF>true</UseWPF>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3\" Condition=\"'$(TargetFramework)' == 'net5.0-windows'\" />\r\n\t\t<PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.1\" />\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAs you saw, I used  `TargetFrameworks` but however I have a condition to distinguish between them. And why `net5.0-windows` still shows `11.0.1`.\r\n\r\n![B38d35b3e5da9474d9d43a255d3ffd726637475022232735710_20210129-153021-image](https://user-images.githubusercontent.com/52026687/106245790-066e6e80-6248-11eb-9cb1-4af9122aea17.png)\r\n\r\n\r\n\r\nI know I can use choose,when to make them work but I still want the traditional `item condition`.\r\n\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n   <PropertyGroup>\r\n     <OutputType>WinExe</OutputType>\r\n     <TargetFrameworks>netcoreapp3.1;net5.0-windows</TargetFrameworks>\r\n     <UseWPF>true</UseWPF>\r\n   </PropertyGroup>\r\n    \r\n     <Choose>\r\n         <When Condition=\"'$(TargetFramework)' == 'net5.0-windows'\">\r\n             <ItemGroup>\r\n                 <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n             </ItemGroup>\r\n         </When>\r\n         <Otherwise>\r\n             <ItemGroup>\r\n                 <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.1\" />\r\n             </ItemGroup>\r\n         </Otherwise>\r\n     </Choose>\r\n </Project>\r\n```\r\n\r\nAlso, when I used `nuget restore`, `dotnet restore`, `msbuild -t:restore`, all works well and can show the two different features. \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/52026687/106245735-ed65bd80-6247-11eb-80d7-14ee91f91d4b.png)\r\n\r\n\r\n\r\nSo why VS IDE restore is different , and should not they keep the same?\r\n\r\nI think **VS IDE Restore** has some errors.\r\n\r\n\r\n\r\n"},{"Id":"15074864781","Type":"IssuesEvent","CreatedAt":"2021-02-05T00:44:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10494","RelatedDescription":"Closed issue \"NuGet Authentication Plugin does not launch on Mac\" (#10494) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#15423**\r\n- Please respond to @gregpechiro.\r\n\r\n---\r\n\r\n_From @gregpechiro on Wednesday, January 20, 2021 5:01:01 PM_\r\n\r\nWe have a private artifacts feed through Azure DevOps Server. We are unable to restore from this source on Macs. We have setup the [Azure DevOps Credential Provider](https://github.com/microsoft/artifacts-credprovider) plugin and the necessary environment variables in order to authenticate this feed but it still fails. The underlying error we get is\r\n`System.Net.Http.CurlException: Login denied`\r\nAccording to the wiki for the [NuGet Authentication Plugin](https://github.com/NuGet/Home/wiki/NuGet-cross-plat-authentication-plugin), the plugin should only launch when it needs to.\r\n`Due to performance considerations, NuGet will only launch a plugin if/when it has to (401 response from the server).`\r\nMy best guess is curl through dotnet is not returning a 401 response for some reason and the plugin is not being launched.\r\nIf we curl the feed URL directly, however, we do get a 401 response so it is not an issue with curl but it seems to be with how dotnet is using curl.\r\n\r\n`dotnet --info`\r\n\r\n```.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.405\r\n Commit:    65f9d75b1c\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.15\r\n OS Platform: Darwin\r\n RID:         osx.10.15-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.1.405/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.11\r\n  Commit:  f5eceb8105\r\n\r\n.NET Core SDKs installed:\r\n  3.1.405 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nHere is the full stack trace with the sensitive data removed.\r\n```/usr/local/share/dotnet/sdk/3.1.201/NuGet.targets(124,5): error : Unable to load the service index for source OUR_AZURE_DEVOPS_FEED.json. [PATH/TO/PROJECT.csproj]\r\n/usr/local/share/dotnet/sdk/3.1.201/NuGet.targets(124,5): error :   An error occurred while sending the request. [PATH/TO/PROJECT.csproj]\r\n/usr/local/share/dotnet/sdk/3.1.201/NuGet.targets(124,5): error :   Login denied [PATH/TO/PROJECT.csproj]\r\n         NuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source OUR_AZURE_DEVOPS_FEED.json.\r\n          ---> System.Net.Http.HttpRequestException: An error occurred while sending the request.\r\n          ---> System.Net.Http.CurlException: Login denied\r\n            at System.Net.Http.CurlHandler.ThrowIfCURLEError(CURLcode error)\r\n            at System.Net.Http.CurlHandler.MultiAgent.FinishRequest(StrongToWeakReference`1 easyWrapper, CURLcode messageResult)\r\n            --- End of inner exception stack trace ---\r\n            at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n            at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n            at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n            at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n         --- End of stack trace from previous location where exception was thrown ---\r\n            at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n            at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n            at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n            at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n         --- End of stack trace from previous location where exception was thrown ---\r\n            at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n            at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n            at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n            at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\n            --- End of inner exception stack trace ---\r\n            at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\n            at NuGet.Protocol.ServiceIndexResourceV3Provider.TryCreate(SourceRepository source, CancellationToken token)\r\n            at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n            at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n            at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResourceProvider.TryCreate(SourceRepository sourceRepository, CancellationToken token)\r\n            at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n            at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n            at NuGet.Commands.SourceRepositoryDependencyProvider.EnsureResource()\r\n            at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryCoreAsync(LibraryRange libraryRange, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n            at NuGet.Commands.SourceRepositoryDependencyProvider.<>c__DisplayClass19_0.<<FindLibraryAsync>b__0>d.MoveNext()\r\n         --- End of stack trace from previous location where exception was thrown ---\r\n            at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryAsync(LibraryRange libraryRange, NuGetFramework targetFramework, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n            at NuGet.DependencyResolver.ResolverUtility.<>c__DisplayClass9_1.<<FindLibraryFromSourcesAsync>b__0>d.MoveNext()\r\n         --- End of stack trace from previous location where exception was thrown ---\r\n            at NuGet.DependencyResolver.ResolverUtility.FindLibraryFromSourcesAsync(LibraryRange libraryRange, IEnumerable`1 providers, Func`2 action)\r\n            at NuGet.DependencyResolver.ResolverUtility.FindLibraryByVersionAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 providers, SourceCacheContext cacheContext, ILogger logger, CancellationToken token)\r\n            at NuGet.DependencyResolver.ResolverUtility.FindPackageLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n            at NuGet.DependencyResolver.ResolverUtility.FindLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, IEnumerable`1 projectProviders, IDictionary`2 lockFileLibraries, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n            at NuGet.DependencyResolver.ResolverUtility.FindLibraryEntryAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, RemoteWalkContext context, CancellationToken cancellationToken)\r\n            at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge)\r\n            at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge)\r\n            at NuGet.Commands.ProjectRestoreCommand.WalkDependenciesAsync(LibraryRange projectRange, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, RemoteDependencyWalker walker, RemoteWalkContext context, CancellationToken token)\r\n            at NuGet.Commands.ProjectRestoreCommand.TryRestoreAsync(LibraryRange projectRange, IEnumerable`1 frameworkRuntimePairs, NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteDependencyWalker remoteWalker, RemoteWalkContext context, Boolean forceRuntimeGraphCreation, CancellationToken token, TelemetryActivity telemetryActivity)\r\n            at NuGet.Commands.RestoreCommand.ExecuteRestoreAsync(NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteWalkContext context, CancellationToken token, TelemetryActivity telemetryActivity)\r\n            at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n            at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n            at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n            at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n            at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreContext, CancellationToken token)\r\n            at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n            at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, ILogger log, CancellationToken cancellationToken)\r\n            at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n       Done executing task \"RestoreTask\" -- FAILED.\r\n     1>Done building target \"Restore\" in project \"WebStoreAdminPortal.Web.csproj\" -- FAILED.\r\n     1>Done Building Project \"PATH/TO/PROJECT.csproj\" (Restore target(s)) -- FAILED.\r\n```"},{"Id":"15074326877","Type":"IssuesEvent","CreatedAt":"2021-02-04T23:33:50","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10545","RelatedDescription":"Opened issue \"Error List is not cleared of package install errors in CodeSpaces after doing another, install / uninstall action\" (#10545) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 16.10 Preview 1\r\n\r\nWorked before? If so, with which NuGet version: In local scenarios it works\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Open PMUI\r\n2. Click on Browse Tab\r\n3. Search for System.Linq.Expressions and install version 4.0.0\r\n4. Search for Moq install version 4.16.0\r\n5. An expected error will occur and be shown in the Error List: \"Detected package downgrade: System.Linq.Expressions from 4.3.0 to 4.0.0. Reference the package directly from the project to select a different version.\"\r\n6. Now, uninstall System.Linq.Expressions or do any other install / uninstall action that does not result in an error.\r\n\r\nExpected:\r\nThe error messages should be cleared from the Error List.\r\n\r\nActual:\r\nThe error messages from the failed operation of trying to install Moq after installing an older version of System.Linq.Expressions than what Moq requires persist in the Error List and in every action taken, they show up again which creates confusion, giving the impression that the errors occurred again.\r\n\r\nThis works in a non-Codespaces scenario\r\n\r\n![image](https://user-images.githubusercontent.com/10777837/106968652-1f6e9800-66fe-11eb-9648-45150ab7a813.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n\r\n"},{"Id":"15073958116","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:51:37","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10544","RelatedDescription":"Opened issue \"Manage NuGet Packages should not be shown for Unloaded Projects in CodeSpaces\" (#10544) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version:  16.9p4\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n1. Open a solution in CodeSpaces.\r\n2. Unload a project.\r\n3. Right click the project in Solution Explorer\r\n4. Observe \"Manage NuGet Packages\" is shown. It shouldn't be shown, as it doesn't work, and is not shown in Standalone.\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/106965281-631ecd00-6711-11eb-8c61-dd6a46909314.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15073937846","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:49:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10542","RelatedDescription":"Closed issue \"'Migrate project to PackageManagement' menu option should be callable from Package Manager Console for whole solution as a glut\" (#10542) at NuGet/Home","RelatedBody":"I read the blog post at:\r\n[Migrate to PackageReference with 3 clicks\r\n](https://devblogs.microsoft.com/nuget/migrate-packages-config-to-package-reference/)\r\n\r\nI have a Solution with over 200 projects in it.  I don't want to right-click each of the 200 projects one at a time and migrate them.  So tedious! I'd prefer a nice command I can just type in to the Package Manager Console to do the job in one gulp.\r\n\r\nAny plans for the future to make that a reality?"},{"Id":"15073936487","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:49:08","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10543","RelatedDescription":"Opened issue \"Unloading project did not close PM UI window in CodeSpaces\" (#10543) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): VS\r\n\r\nProduct version: 16.9p4\r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n1. Open a project in CodeSpaces\r\n2. Open PMUI\r\n3. Unload the project for which you opened PMUI\r\n4. Observe that the PMUI remains open. It should close as it does in Standalone.\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15073747044","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:29:11","Actor":"astrohart","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10542","RelatedDescription":"Opened issue \"'Migrate project to PackageManagement' menu option should be callable from Package Manager Console for whole solution as a glut\" (#10542) at NuGet/Home","RelatedBody":"I read the blog post at:\r\n[Migrate to PackageReference with 3 clicks\r\n](https://devblogs.microsoft.com/nuget/migrate-packages-config-to-package-reference/)\r\n\r\nI have a Solution with over 200 projects in it.  I don't want to right-click each of the 200 projects one at a time and migrate them.  So tedious! I'd prefer a nice command I can just type in to the Package Manager Console to do the job in one gulp.\r\n\r\nAny plans for the future to make that a reality?"},{"Id":"15073631619","Type":"IssuesEvent","CreatedAt":"2021-02-04T22:17:21","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10541","RelatedDescription":"Opened issue \"Having no enabled sources prevents the PM UI from showing\" (#10541) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nThe PM UI will not open if there are no enabled Package Sources\r\n\r\nProduct version: \r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\nUncheck all sources in Tools -> Options -> Package Sources\r\nTry to open up the PM UI for a project\r\n\r\nObserved: The UI will not show up\r\nExpected: PM UI to show\r\n\r\n"},{"Id":"15073298459","Type":"IssuesEvent","CreatedAt":"2021-02-04T21:45:16","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10540","RelatedDescription":"Opened issue \"Update to older Package causes \"Object reference not set\" error in CodeSpaces\" (#10540) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe): Visual Studio\r\n\r\nProduct version: 5.9 preview 4\r\n\r\nWorked before? If so, with which NuGet version: ?\r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\nhttps://developercommunity2.visualstudio.com/myfeedback?port=1025&fsid=d0525f42-c1a4-4b9e-b6e5-937651a126e4&entry=myfeedback\r\n\r\n1. Repeat steps from https://github.com/NuGet/Home/issues/10539\r\n2. Downgrade `Castle.Core 4.4.1` to `4.2.1`.\r\n3. Observe an error in Error List and PMUI.\r\n![image](https://user-images.githubusercontent.com/49205731/106958528-7e84da80-6707-11eb-95cb-f235d2981880.png)\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"14970431746","Type":"IssuesEvent","CreatedAt":"2021-01-27T19:36:22","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/49","RelatedDescription":"Opened issue \"NuGet restore failing on .NET 5 for Debian-based OSes\" (#49) at NuGet/Announcements","RelatedBody":"Hey Everyone,\r\n\r\nOur preliminary investigation shows that .NET 5 restore is broken for Debian-based operating systems including Docker thus resulting in error messages like:\r\n\r\n```\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n```\r\n\r\n### [Debian Versions](https://www.debian.org/releases/)\r\n- We're currently aware that Debian 10 (\"buster\") and earlier versions are affected. ❌\r\n- We do know that Debian testing (\"bullseye\") and later are not affected. ✔\r\n\r\nThis is because of an [issue reported](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=962596) in the `ca-certificates` package in which the root CA being used are not trusted and must be installed manually due to [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues). Because this issue has been resolved recently in version 20210119 of this package, it is not available in a Debian version as provided in `dotnet-docker` for `buster-slim` today.\r\n\r\n## Workarounds\r\n\r\n- Manually update the [ca-certificates](https://packages.debian.org/bullseye/ca-certificates) package to version 20210119 including a `bullseye` or later version.\r\n- Consider using a different Debian-based Docker image such as `alpine` or `focal`.\r\n \r\n## Solution\r\n\r\nWe're currently working to update the `dotnet-docker`'s `buster-slim` image to update the `ca-certificates` package to 20210119 that resolves this issue. We are however currently verifying this is a viable solution with no large diffs between the `buster` and `bullseye` releases.\r\n\r\nAdditionally, the `ca-certificates` package is due to be installed in the Debian FTP archive which will promote this fix to the `buster` release in the next few days to which an updated `buster-slim` image will be prepared and released when available.\r\n\r\n## Stay Updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We'll continue to update the discussion at https://github.com/NuGet/Home/issues/10491.\r\n- We will also continue posting updates on https://status.nuget.org and on Twitter @NuGet."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1355252975678189569","CreatedAt":"2021-01-29T20:34:23+00:00","UserScreenname":"nuget","Text":"For users affected by the Debian 10 Buster CA Certificate issue, we now have a documented mitigation available.\n\nPl… https://t.co/VhGXtYI6aj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"1354633996202700808","CreatedAt":"2021-01-28T03:34:47+00:00","UserScreenname":"nuget","Text":"📢 For .NET Docker users, we have published new images that mitigate these issues by using a pre-release version of… https://t.co/eWBiUMyYhr","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":41,"FavoriteCount":26,"RawContent":null},{"Id":"1354552703150649351","CreatedAt":"2021-01-27T22:11:45+00:00","UserScreenname":"nuget","Text":"Please see our official announcement for our latest understanding of the root cause of this issue and recommended w… https://t.co/zAQswryI8d","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1354464163653890051","CreatedAt":"2021-01-27T16:19:55+00:00","UserScreenname":"nuget","Text":"(1/2) Here's what we've gathered to far:\n\n.NET 5 restore appears to be broken on some operating systems resulting i… https://t.co/KFwSxsi2rY","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":12,"RawContent":null},{"Id":"1354455557541933056","CreatedAt":"2021-01-27T15:45:44+00:00","UserScreenname":"nuget","Text":"⚠ Degradation notification ⚠\n\nSignature verification for Microsoft packages is failing in some scenarios due to a c… https://t.co/EisS5l9A3o","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":43,"FavoriteCount":24,"RawContent":null},{"Id":"1349825493265231872","CreatedAt":"2021-01-14T21:07:30+00:00","UserScreenname":"nuget","Text":"Thanks for the birthday wishes everyone! 🥳🥳🥳\n\nThank you to all of the team members (past and present), external con… https://t.co/mWYE55Bh9b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2021-02-05T05:30:36.0119695Z","RunDurationInMilliseconds":1498}