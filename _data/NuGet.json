{"Data":{"Blog":{"FeedItems":[{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15440763755","Type":"PullRequestEvent","CreatedAt":"2021-03-08T04:15:38","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8432","RelatedDescription":"Merged pull request \"New TFM logic for package ingestion\" (#8432) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/NuGetGallery/issues/8386\r\n\r\nThe existing logic in `PackageService` relies on `package.GetSupportedFrameworks`, which while giving (largely) correct data, doesn't give enough of it--~85% with this change increasing it to ~93%. The new method in `PackageService` utilizes the restore logic employed by restore, gathering it into a single location for easy and robust maintenance. This logic will give us the supported frameworks for packages whose anatomy follows our guidelines, e.g. https://docs.microsoft.com/en-us/nuget/create-packages/supporting-multiple-target-frameworks. Some notes on this:\r\n- Pattern set matching is our heuristic here--the only time we use the nuspec (which has misled us in the prior approach) is to determine package type, specifically answering one question: is this a _tools_ package and nothing else? If it is a tools package _only_, we will look to match tools pattern sets _only_ in order to list supported TFMs. Other pattern sets don't exist. This matches client restore behavior.\r\n- Packages of type _build_ will only match build pattern sets when a `{id}.props|targets` file exists in a directory named for the TFM (in an appropriate pattern sets for build)\r\n- See unit tests for cases - I've tried to cover as much as is reasonable there.\r\n\r\nI've split the file list from the nuspec reader in this method, so that it can be called by existing logic in the `PackageService`, as well as by the new backfill job `BackfillTfmMetadataCommand`. (see https://github.com/NuGet/NuGetGallery/pull/8431, which should be merged _after_ this PR)."},{"Id":"15430154523","Type":"PullRequestEvent","CreatedAt":"2021-03-06T07:27:11","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8446","RelatedDescription":"Opened pull request \"Symbols perf improvement\" (#8446) at NuGet/NuGetGallery","RelatedBody":"Fixes issue: https://github.com/NuGet/Engineering/issues/3676\r\n\r\nAlso changed default behavior of Symbols upload & Icons upload in Gallery to improve on-prem experience."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15440496273","Type":"IssuesEvent","CreatedAt":"2021-03-08T03:28:30","Actor":"Csharp-Girl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10637","RelatedDescription":"Opened issue \"Are the mixed TFM issues should be reported by Nuget?\" (#10637) at NuGet/Home","RelatedBody":"Given a project whose dependency tree is described as follows:\r\n![Case1](https://user-images.githubusercontent.com/80234440/110269927-b1203c80-7fff-11eb-847a-4552f776ea4c.png)\r\n\r\nAccording to the \"direct dependency wins\" rule, C 2.0.0 (TFW: Standard 2.1) can be actually installed instead of C 1.0.0 (TFW: Standard 2.0). In such scenario, B 1.0.0 (TFW: Standard 2.0) will reference C 2.0.0  (TFW: Standard 2.1).\r\n\r\nHowever, in principle, the Standard 2.0 projects cannot depend on the Standard 2.0 packages.\r\nI have tested this case on the latest version of nuget, and it did not report any warnings.\r\nIs this case safe for the client projects? \r\n\r\n\r\nThanks for your help.\r\n\r\nBest regards.\r\n\r\n\r\n\r\n"},{"Id":"15434644734","Type":"IssuesEvent","CreatedAt":"2021-03-07T04:36:09","Actor":"Shliilh2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10636","RelatedDescription":"Opened issue \"متجر منصة شليله \" (#10636) at NuGet/Home","RelatedBody":"[متجر منصة شليله ](https://www.nuget.org/profiles/ihdadi/) <!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):\r\n\r\nProduct version: \r\n\r\nWorked before? If so, with which NuGet version: \r\n\r\n## Repro steps and/or sample project\r\n\r\n<!-- Please add as much details as possible to help us to reproduce your problem. -->\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n"},{"Id":"15431905409","Type":"IssuesEvent","CreatedAt":"2021-03-06T15:22:38","Actor":"Andres6936","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10635","RelatedDescription":"Closed issue \"Unable to install packages with NutGet on Ubuntu 18 [x86_64]\" (#10635) at NuGet/Home","RelatedBody":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Steps to reproduce\r\nCreate a project from template ''Razor Server App\".\r\n\r\nTry installing any nutget package dotnet version 5 on Ubuntu. For example, `dotnet add package Dapper --version 2.0.78` But it happens with any package.\r\n\r\n### Exceptions (if any)\r\n\r\n<details>\r\n\r\n\r\n```\r\n@ Installing Dapper in CarRental started\r\nRunning restore with 2 concurrent jobs.\r\nReading project file /home/andres6936/DotNetProjects/CarRental/CarRental.csproj.\r\nRestoring packages for /home/andres6936/DotNetProjects/CarRental/CarRental.csproj...\r\nRestoring packages for .NETCoreApp,Version=v5.0...\r\nUnable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\n ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\r\n ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n   at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.TryCreate(SourceRepository source, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResourceProvider.TryCreate(SourceRepository sourceRepository, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.EnsureResource()\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryCoreAsync(LibraryRange libraryRange, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.<>c__DisplayClass19_0.<<FindLibraryAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryAsync(LibraryRange libraryRange, NuGetFramework targetFramework, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.<>c__DisplayClass9_1.<<FindLibraryFromSourcesAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryFromSourcesAsync(LibraryRange libraryRange, IEnumerable`1 providers, Func`2 action)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryByVersionAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 providers, SourceCacheContext cacheContext, ILogger logger, CancellationToken token)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindPackageLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, IEnumerable`1 projectProviders, IDictionary`2 lockFileLibraries, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryEntryAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, RemoteWalkContext context, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge, TransitiveCentralPackageVersions transitiveCentralPackageVersions)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge, TransitiveCentralPackageVersions transitiveCentralPackageVersions)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.WalkAsync(LibraryRange library, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, Boolean recursive)\r\n   at NuGet.Commands.ProjectRestoreCommand.WalkDependenciesAsync(LibraryRange projectRange, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, RemoteDependencyWalker walker, RemoteWalkContext context, CancellationToken token)\r\n   at NuGet.Commands.ProjectRestoreCommand.TryRestoreAsync(LibraryRange projectRange, IEnumerable`1 frameworkRuntimePairs, NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteDependencyWalker remoteWalker, RemoteWalkContext context, Boolean forceRuntimeGraphCreation, CancellationToken token, TelemetryActivity telemetryActivity)\r\n   at NuGet.Commands.RestoreCommand.ExecuteRestoreAsync(NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteWalkContext context, CancellationToken token, TelemetryActivity telemetryActivity)\r\n   at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n   at NuGet.Commands.RestoreRunner.RunWithoutCommit(IEnumerable`1 restoreRequests, RestoreArgs restoreContext)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.PreviewRestoreProjectsAsync(ISolutionManager solutionManager, IEnumerable`1 projects, IEnumerable`1 updatedNugetPackageSpecs, DependencyGraphCacheContext context, RestoreCommandProvidersCache providerCache, Action`1 cacheContextModifier, IEnumerable`1 sources, Guid parentId, ILogger log, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewBuildIntegratedProjectsActionsAsync(IReadOnlyCollection`1 buildIntegratedProjects, Dictionary`2 nugetProjectActionsLookup, PackageIdentity packageIdentity, IReadOnlyCollection`1 primarySources, INuGetProjectContext nuGetProjectContext, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewBuildIntegratedProjectActionsAsync(BuildIntegratedNuGetProject buildIntegratedProject, IEnumerable`1 nuGetProjectActions, INuGetProjectContext nuGetProjectContext, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewInstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.InstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, PackageDownloadContext downloadContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.InstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at JetBrains.ProjectModel.NuGet.Operations.NuGetInstallOperation.<>c__DisplayClass6_0.<<InstallAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at JetBrains.ProjectModel.NuGet.Operations.NuGetInstallOperation.InstallInternal(IProject project, String packageId, String packgeUserStr, NuGetFeedContext feedContext, Int32 nestedLevel, NuGetNotificationMode mode, NuGetOperationReporter reporter, Func`3 nativeInstall, NuGetProject givenNuGetProject)\r\nSystem.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\r\n ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n   at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\nSystem.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n\r\n@ Installing Dapper in CarRental finished (2.784 sec)\r\n[Notification][Install] Install failed (project: CarRental, package: Dapper v2.0.78)\r\nUnable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\n```\r\n\r\n</details>\r\n\r\n### Further technical details\r\n- ASP.NET Core version\r\n- Include the output of `dotnet --info`\r\n\r\n```shellsession\r\nandres6936@Tierra ~/DotNetProjects/CarRental $ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.103\r\n Commit:    9effbc8ad5\r\n\r\nRuntime Environment:\r\n OS Name:     linuxmint\r\n OS Version:  18.2\r\n OS Platform: Linux\r\n RID:         linuxmint.18.2-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.103/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.3\r\n  Commit:  eae88cc11b\r\n\r\n.NET SDKs installed:\r\n  5.0.103 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version\r\n\r\n```\r\nJetBrains Rider 2020.3.3\r\nBuild #RD-203.7148.23, built on February 17, 2021\r\n...\r\nRuntime version: 11.0.9.1+11-b1145.63 amd64\r\nVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o.\r\n.NET Core 3.1.8\r\nLinux 4.15.0-123-generic\r\n....\r\n```"},{"Id":"15428849429","Type":"IssuesEvent","CreatedAt":"2021-03-06T01:03:11","Actor":"Andres6936","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10635","RelatedDescription":"Opened issue \"Unable to install packages with NutGet on Ubuntu 18 [x86_64]\" (#10635) at NuGet/Home","RelatedBody":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Steps to reproduce\r\nCreate a project from template ''Razor Server App\".\r\n\r\nTry installing any nutget package dotnet version 5 on Ubuntu. For example, `dotnet add package Dapper --version 2.0.78` But it happens with any package.\r\n\r\n### Exceptions (if any)\r\n\r\n<details>\r\n\r\n\r\n```\r\n@ Installing Dapper in CarRental started\r\nRunning restore with 2 concurrent jobs.\r\nReading project file /home/andres6936/DotNetProjects/CarRental/CarRental.csproj.\r\nRestoring packages for /home/andres6936/DotNetProjects/CarRental/CarRental.csproj...\r\nRestoring packages for .NETCoreApp,Version=v5.0...\r\nUnable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\n ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\r\n ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n   at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.TryCreate(SourceRepository source, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResourceProvider.TryCreate(SourceRepository sourceRepository, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.EnsureResource()\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryCoreAsync(LibraryRange libraryRange, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.<>c__DisplayClass19_0.<<FindLibraryAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryAsync(LibraryRange libraryRange, NuGetFramework targetFramework, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.<>c__DisplayClass9_1.<<FindLibraryFromSourcesAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryFromSourcesAsync(LibraryRange libraryRange, IEnumerable`1 providers, Func`2 action)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryByVersionAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 providers, SourceCacheContext cacheContext, ILogger logger, CancellationToken token)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindPackageLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, IEnumerable`1 projectProviders, IDictionary`2 lockFileLibraries, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryEntryAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, RemoteWalkContext context, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge, TransitiveCentralPackageVersions transitiveCentralPackageVersions)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge, TransitiveCentralPackageVersions transitiveCentralPackageVersions)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.WalkAsync(LibraryRange library, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, Boolean recursive)\r\n   at NuGet.Commands.ProjectRestoreCommand.WalkDependenciesAsync(LibraryRange projectRange, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, RemoteDependencyWalker walker, RemoteWalkContext context, CancellationToken token)\r\n   at NuGet.Commands.ProjectRestoreCommand.TryRestoreAsync(LibraryRange projectRange, IEnumerable`1 frameworkRuntimePairs, NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteDependencyWalker remoteWalker, RemoteWalkContext context, Boolean forceRuntimeGraphCreation, CancellationToken token, TelemetryActivity telemetryActivity)\r\n   at NuGet.Commands.RestoreCommand.ExecuteRestoreAsync(NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteWalkContext context, CancellationToken token, TelemetryActivity telemetryActivity)\r\n   at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n   at NuGet.Commands.RestoreRunner.RunWithoutCommit(IEnumerable`1 restoreRequests, RestoreArgs restoreContext)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.PreviewRestoreProjectsAsync(ISolutionManager solutionManager, IEnumerable`1 projects, IEnumerable`1 updatedNugetPackageSpecs, DependencyGraphCacheContext context, RestoreCommandProvidersCache providerCache, Action`1 cacheContextModifier, IEnumerable`1 sources, Guid parentId, ILogger log, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewBuildIntegratedProjectsActionsAsync(IReadOnlyCollection`1 buildIntegratedProjects, Dictionary`2 nugetProjectActionsLookup, PackageIdentity packageIdentity, IReadOnlyCollection`1 primarySources, INuGetProjectContext nuGetProjectContext, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewBuildIntegratedProjectActionsAsync(BuildIntegratedNuGetProject buildIntegratedProject, IEnumerable`1 nuGetProjectActions, INuGetProjectContext nuGetProjectContext, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewInstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.InstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, PackageDownloadContext downloadContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.InstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at JetBrains.ProjectModel.NuGet.Operations.NuGetInstallOperation.<>c__DisplayClass6_0.<<InstallAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at JetBrains.ProjectModel.NuGet.Operations.NuGetInstallOperation.InstallInternal(IProject project, String packageId, String packgeUserStr, NuGetFeedContext feedContext, Int32 nestedLevel, NuGetNotificationMode mode, NuGetOperationReporter reporter, Func`3 nativeInstall, NuGetProject givenNuGetProject)\r\nSystem.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\r\n ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n   at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\nSystem.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n\r\n@ Installing Dapper in CarRental finished (2.784 sec)\r\n[Notification][Install] Install failed (project: CarRental, package: Dapper v2.0.78)\r\nUnable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\n```\r\n\r\n</details>\r\n\r\n### Further technical details\r\n- ASP.NET Core version\r\n- Include the output of `dotnet --info`\r\n\r\n```shellsession\r\nandres6936@Tierra ~/DotNetProjects/CarRental $ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.103\r\n Commit:    9effbc8ad5\r\n\r\nRuntime Environment:\r\n OS Name:     linuxmint\r\n OS Version:  18.2\r\n OS Platform: Linux\r\n RID:         linuxmint.18.2-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.103/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.3\r\n  Commit:  eae88cc11b\r\n\r\n.NET SDKs installed:\r\n  5.0.103 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version\r\n\r\n```\r\nJetBrains Rider 2020.3.3\r\nBuild #RD-203.7148.23, built on February 17, 2021\r\n...\r\nRuntime version: 11.0.9.1+11-b1145.63 amd64\r\nVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o.\r\n.NET Core 3.1.8\r\nLinux 4.15.0-123-generic\r\n....\r\n```"},{"Id":"15428563670","Type":"IssuesEvent","CreatedAt":"2021-03-06T00:08:04","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10634","RelatedDescription":"Opened issue \"Signing: Design dotnet nuget trusted-signers commands\" (#10634) at NuGet/Home","RelatedBody":"Write up an RFC describing the commands and options and get it reviewed.\r\n\r\nReference: https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-trusted-signers"},{"Id":"15428483721","Type":"IssuesEvent","CreatedAt":"2021-03-05T23:55:26","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10630","RelatedDescription":"Closed issue \"Nuget replacement tokens not reading from AssemblyInfo class\" (#10630) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nProduct version: 5.9.0\r\n\r\nWorked before? If so, with which NuGet version: 5.5.1\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Create a C# class library Project with .net framework 4.8\r\n2. Modify `AssemblyInfo` as follows;\r\n\r\n```\r\n[assembly: AssemblyVersion(\"2.0.0.0\")]\r\n[assembly: AssemblyFileVersion(\"2.0.0.0\")]\r\n[assembly: AssemblyInformationalVersion(\"2.0.0\")]\r\n```\r\n3. Create a `nuspec` file using below command\r\n`nuget spec MyProject.csproj`\r\n\r\n4. `nuspec` generated as below;\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>$description$</description>\r\n    <releaseNotes></releaseNotes>\r\n    <copyright>$copyright$</copyright>\r\n    <tags>tags1 tags2</tags>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n5. Pack with following command;\r\n\r\n`nuget pack .\\MyProject.csproj -verbosity detailed `\r\n\r\n6. Getting an error as follows;\r\n\r\n```\r\nNuGet Version: 5.9.0.7134\r\nAttempting to build package from 'MyProject.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.4.0.56107' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'E:\\Clone\\MyProject\\MyProject\\bin\\Debug'.\r\nCould not load file or assembly 'file:///E:\\bin\\nuget.exe' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)\r\nUsing 'MyProject.nuspec' for metadata.\r\nAuthors is required.\r\nDescription is required.\r\nSystem.Exception: Authors is required.\r\nDescription is required.\r\n   at NuGet.Packaging.Manifest.Validate(Manifest manifest)\r\n   at NuGet.Packaging.Manifest.ReadFrom(Stream stream, Func`2 propertyProvider, Boolean validateSchema)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessNuspec(PackageBuilder builder, String basePath)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n\r\n7. I gave values for author and description in the `nuspec` file and ran `pack` again (Given in `AssemblyInfo` but it's not replacing the tokens)\r\n\r\n```\r\nNuGet Version: 5.9.0.7134\r\nAttempting to build package from 'MyProject.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.4.0.56107' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'E:\\Clone\\MyProject\\MyProject\\bin\\Debug'.\r\nCould not load file or assembly 'file:///E:\\bin\\nuget.exe' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)\r\nUsing 'MyProject.nuspec' for metadata.\r\nAdd file 'E:\\Clone\\MyProject\\MyProject\\bin\\Debug\\MyProject.dll' to package as 'lib\\net48\\MyProject.dll'\r\nFound packages.config. Using packages listed as dependencies\r\n\r\nId: MyProject\r\nVersion: 1.0.0\r\nAuthors: AA\r\nDescription: AA\r\nTags: tags1, tags2\r\nDependencies: log4net [2.0.12, ), Microsoft.ReportingServices.ReportViewerControl.Winforms [150.1440.0, ), Microsoft.SqlServer.Types [14.0.1016.290, ), System.Runtime.CompilerServices.Unsafe [5.0.0, ), System.Windows.Interactivity.WPF [2.0.20525, ), Unity [5.11.10, )\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'MyProject.nuspec'.\r\nAdded file 'lib/net48/MyProject.dll'.\r\nAdded file 'package/services/metadata/core-properties/3e75407b72454e6eb1bcbe849f8fcc10.psmdcp'.\r\n\r\nWARNING: NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below:\r\n- Add a dependency group for .NETFramework4.8 to the nuspec\r\nSuccessfully created package 'E:\\Clone\\MyProject\\MyProject\\MyProject.1.0.0.nupkg'.\r\n```\r\n\r\n8. Now `nupkg` created but always with version 1.0.0, the error I've noticed is `Could not load file or assembly 'file:///E:\\bin\\nuget.exe' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)`. This somehow ignores the metadata tokens replaced from `AssemblyInfo`\r\n9. Tested with 5.7, 5.8.1 as well, same result but 5.5.1 works fine\r\n\r\n### Verbose Logs\r\n\r\n```\r\nNuGet Version: 5.9.0.7134\r\nAttempting to build package from 'MyProject.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.4.0.56107' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'E:\\Clone\\MyProject\\MyProject\\bin\\Debug'.\r\nCould not load file or assembly 'file:///E:\\bin\\nuget.exe' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)\r\nUsing 'MyProject.nuspec' for metadata.\r\nAuthors is required.\r\nDescription is required.\r\nSystem.Exception: Authors is required.\r\nDescription is required.\r\n   at NuGet.Packaging.Manifest.Validate(Manifest manifest)\r\n   at NuGet.Packaging.Manifest.ReadFrom(Stream stream, Func`2 propertyProvider, Boolean validateSchema)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessNuspec(PackageBuilder builder, String basePath)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n"},{"Id":"15428439801","Type":"IssuesEvent","CreatedAt":"2021-03-05T23:47:40","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10629","RelatedDescription":"Closed issue \"native assets in subfolders are not respected\" (#10629) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#16211**\r\n- Please respond to @stevenbrix.\r\n\r\n---\r\n\r\n_From @stevenbrix on Thursday, March 4, 2021 6:39:41 PM_\r\n\r\nIf you have a NuGet package with native assets in subfolders:\r\n\r\n```\r\nruntimes\\win10-x86\\native\\foo.dll\r\nruntimes\\win10-x86\\native\\en-us\\foo.dll.mui\r\n```\r\n\r\nThe .NET SDK copies these to the same location, and you lose the `en-us` locale subfolder.  This happens with both `Build` and `Publish` targets."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":85,"FavoriteCount":35,"RawContent":null},{"Id":"1366458126141120525","CreatedAt":"2021-03-01T18:39:39+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nLate last year we launched a https://t.co/F9kiKfvqkS survey to ask customers about their… https://t.co/mgpdDNj3is","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1366422928519233536","CreatedAt":"2021-03-01T16:19:47+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nIf you have a moment, please take some time to leave us feedback! We really appreciate it ♥ https://t.co/we1sP6mT8q","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"1365020887758614529","CreatedAt":"2021-02-25T19:28:35+00:00","UserScreenname":"nuget","Text":"🔐 https://t.co/F9kiKfvqkS security update 🔐\n\nThe https://t.co/F9kiKfvqkS repository signing certification will be u… https://t.co/jur1vcuf0B","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1362857576422137856","CreatedAt":"2021-02-19T20:12:21+00:00","UserScreenname":"nuget","Text":"🙌 New doc just dropped! 🙌\n\nCheck out our latest recommendations to help secure your software supply chain, for pack… https://t.co/odu3ygBOvR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1355252975678189569","CreatedAt":"2021-01-29T20:34:23+00:00","UserScreenname":"nuget","Text":"For users affected by the Debian 10 Buster CA Certificate issue, we now have a documented mitigation available.\n\nPl… https://t.co/VhGXtYI6aj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"1354633996202700808","CreatedAt":"2021-01-28T03:34:47+00:00","UserScreenname":"nuget","Text":"📢 For .NET Docker users, we have published new images that mitigate these issues by using a pre-release version of… https://t.co/eWBiUMyYhr","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":41,"FavoriteCount":26,"RawContent":null},{"Id":"1354552703150649351","CreatedAt":"2021-01-27T22:11:45+00:00","UserScreenname":"nuget","Text":"Please see our official announcement for our latest understanding of the root cause of this issue and recommended w… https://t.co/zAQswryI8d","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1354464163653890051","CreatedAt":"2021-01-27T16:19:55+00:00","UserScreenname":"nuget","Text":"(1/2) Here's what we've gathered to far:\n\n.NET 5 restore appears to be broken on some operating systems resulting i… https://t.co/KFwSxsi2rY","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":12,"RawContent":null},{"Id":"1354455557541933056","CreatedAt":"2021-01-27T15:45:44+00:00","UserScreenname":"nuget","Text":"⚠ Degradation notification ⚠\n\nSignature verification for Microsoft packages is failing in some scenarios due to a c… https://t.co/EisS5l9A3o","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":42,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2021-03-08T05:30:30.5789415Z","RunDurationInMilliseconds":1812}