{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29667173069","Type":"IssuesEvent","CreatedAt":"2023-06-11T00:06:37","Actor":"taori","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9522","RelatedDescription":"Opened issue \"[Feature]: When pushing a package an author should be notified if references could be optimized\" (#9522) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nC# Is improving the options to do AOT + trimming. One obstacle to push the support for that is libraries which contain unnecessary references. To slim down packages on nuget it would be nice if nuget.org notified an author if a package contains references which might not be necessary. Keeping dependency trees slim would make it easier to have this feature in a more accessible manner.\n\n### The Elevator Pitch\n\nAdditional information when pushing a package so that packages which are not essential are perhaps removed from a project\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29650467871","Type":"IssuesEvent","CreatedAt":"2023-06-09T15:13:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9521","RelatedDescription":"Closed issue \"[NuGet.org Bug]: \" (#9521) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nhttps://api.nuget.org/v3/index.json\n\n### Repro Steps\n\n.\n\n### Expected Behavior\n\nI am creating docker images for my authentication and authorization project am not able to produce all expected images or container \n\n### Screenshots\n\n![20230608_201452](https://github.com/NuGet/NuGetGallery/assets/135006031/94249499-8a34-4c7b-99ab-acbead578b43)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29627802015","Type":"PullRequestEvent","CreatedAt":"2023-06-08T17:50:41","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9520","RelatedDescription":"Merged pull request \"Readme table style\" (#9520) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nrender readme table more pretty with word warp setting.\r\n\r\n![Screenshot 2023-06-05 123258](https://github.com/NuGet/NuGetGallery/assets/64443925/605733f0-329d-49cf-acca-e88f7cd7486d)\r\n\r\n[rec-screen (2).webm](https://github.com/NuGet/NuGetGallery/assets/64443925/bf9db3a6-3c6e-4bca-b857-c351f8fe0bdd)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9518"},{"Id":"29624244485","Type":"IssuesEvent","CreatedAt":"2023-06-08T15:15:48","Actor":"soumyashree-code","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9521","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \" (#9521) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nhttps://api.nuget.org/v3/index.json\n\n### Repro Steps\n\n.\n\n### Expected Behavior\n\nI am creating docker images for my authentication and authorization project am not able to produce all expected images or container \n\n### Screenshots\n\n![20230608_201452](https://github.com/NuGet/NuGetGallery/assets/135006031/94249499-8a34-4c7b-99ab-acbead578b43)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29543702529","Type":"PullRequestEvent","CreatedAt":"2023-06-05T19:36:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9520","RelatedDescription":"Opened pull request \"Readme table style\" (#9520) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nrender readme table more pretty with word warp setting.\r\n\r\n![Screenshot 2023-06-05 123258](https://github.com/NuGet/NuGetGallery/assets/64443925/605733f0-329d-49cf-acca-e88f7cd7486d)\r\n\r\n[rec-screen (2).webm](https://github.com/NuGet/NuGetGallery/assets/64443925/bf9db3a6-3c6e-4bca-b857-c351f8fe0bdd)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9518"},{"Id":"29500638457","Type":"IssuesEvent","CreatedAt":"2023-06-02T21:20:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9252","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Add caniuse images via bitsofco.de to trusted image domains\" (#9252) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWe are offering Blazor wrapper packages for different web APIs. There is a great service called caniuse.com that shows the availability of a particular API on different platforms. Ire Aderinokun offers a service that shows the caniuse.com status data and MDN compat data in a (static) image, e.g.:\r\n\r\nhttps://caniuse.bitsofco.de/image/async-clipboard.png → https://res.cloudinary.com/ireaderinokun/image/upload/v1663850793397/caniuse-embed/all/async-clipboard.png\r\n\r\n![](https://caniuse.bitsofco.de/image/async-clipboard.png)\r\n\r\nThus, I'd like to suggest adding either `caniuse.bitsofco.de` or the resolved version `res.cloudinary.com/ireaderinokun/*/caniuse-embed/all/*.png` to the allowlist.\n\n### Repro Steps\n\nStatus image is currently not shown:\r\n\r\n- https://www.nuget.org/packages/Thinktecture.Blazor.AsyncClipboard\r\n- https://www.nuget.org/packages/Thinktecture.Blazor.WebShare\n\n### Expected Behavior\n\nStatus image is shown.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29474307163","Type":"IssuesEvent","CreatedAt":"2023-06-01T20:43:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9519","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \"Minimum NuGet Client Version\" field is empty in package metadata preview\" (#9519) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen a package is uploaded specifying [`minClientVersion`](https://learn.microsoft.com/en-us/nuget/reference/nuspec#minclientversion) metadata attribute it seems there is an attempt to surface the value in the confirmation page after package upload, but the value is not printed under the header.\n\n### Repro Steps\n\n1. Make a package with a valid value of `minClientVersion` metadata attribute (`6.0` for example).\r\n2. Try uploading it through web UI.\r\n3. Observe empty line after \"Minimum NuGet Client Version\" header under \"Verify\"\n\n### Expected Behavior\n\nAn actual version displayed.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/102933/69a4cb47-fd50-4f53-99aa-b40900ac8eb2)\r\n\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29705416029","Type":"IssuesEvent","CreatedAt":"2023-06-13T00:31:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12647","RelatedDescription":"Closed issue \"PackageSpecReferenceDependencyProvider.GetLibrary unnecessarily resizes a List<T> that it doesn't even need\" (#12647) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824278"},{"Id":"29705406485","Type":"IssuesEvent","CreatedAt":"2023-06-13T00:30:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12648","RelatedDescription":"Closed issue \"TargetFrameworkInformation.Clone calls ToDictionary on a type that is already a dictionary, TargetFrameworkInformation.Clone resizes a dictionary it already knows the destination size\" (#12648) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1828413/?triage=true"},{"Id":"29700855549","Type":"IssuesEvent","CreatedAt":"2023-06-12T19:52:34","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12651","RelatedDescription":"Opened issue \"I/O exception reading NuGet.config does not log the original exception message\" (#12651) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nWhen the code in `SettingsFile` attempts to perform I/O tasks, it does so in a utility method, [ExecuteSynchronized](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Configuration/Settings/SettingsFile.cs#L194-L226).  This method catches several exception types and re-throws it with a new message.  The current four messages include the path to the file that was attempted to be read but does not include the original exception method.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Configuration/Resources.resx#L245\r\n```xml\r\n  <data name=\"ShowError_ConfigInvalidOperation\" xml:space=\"preserve\">\r\n    <value>NuGet.Config is malformed. Path: '{0}'.</value>\r\n  </data>\r\n  <data name=\"ShowError_ConfigInvalidXml\" xml:space=\"preserve\">\r\n    <value>NuGet.Config is not valid XML. Path: '{0}'.</value>\r\n  </data>\r\n  <data name=\"ShowError_ConfigUnauthorizedAccess\" xml:space=\"preserve\">\r\n    <value>Failed to read NuGet.Config due to unauthorized access. Path: '{0}'.</value>\r\n  </data>\r\n  <data name=\"Unknown_Config_Exception\" xml:space=\"preserve\">\r\n    <value>Unexpected failure reading NuGet.Config. Path: '{0}'.</value>\r\n  </data>\r\n```\r\nThe code is passing the message, the string resource just doesn't include it in the new exception.\r\n\r\n```c#\r\ntry\r\n{\r\n    ioOperation();\r\n}\r\ncatch (InvalidOperationException e)\r\n{\r\n    throw new NuGetConfigurationException(\r\n        string.Format(CultureInfo.CurrentCulture, Resources.ShowError_ConfigInvalidOperation, ConfigFilePath, e.Message), e);\r\n}\r\n\r\ncatch (UnauthorizedAccessException e)\r\n{\r\n    throw new NuGetConfigurationException(\r\n        string.Format(CultureInfo.CurrentCulture, Resources.ShowError_ConfigUnauthorizedAccess, ConfigFilePath, e.Message), e);\r\n}\r\n\r\ncatch (XmlException e)\r\n{\r\n    throw new NuGetConfigurationException(\r\n        string.Format(CultureInfo.CurrentCulture, Resources.ShowError_ConfigInvalidXml, ConfigFilePath, e.Message), e);\r\n}\r\n\r\ncatch (Exception e)\r\n{\r\n    throw new NuGetConfigurationException(\r\n        string.Format(CultureInfo.CurrentCulture, Resources.Unknown_Config_Exception, ConfigFilePath, e.Message), e);\r\n}\r\n\r\n```\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"29700319644","Type":"IssuesEvent","CreatedAt":"2023-06-12T19:25:46","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12609","RelatedDescription":"Closed issue \"There are no visual indicators for the Package Source Mapping status in details pane\" (#12609) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nPM UI now shows a string detailing the Package Source Mapping status (off / found / requires a mapping), but there are no visual indicators/icons to reflect that status.\n\n### Desired Behavior\n\nShow icons along with the status strings to emphasize the status.\n\n### Additional Context\n\n_No response_"},{"Id":"29697246121","Type":"IssuesEvent","CreatedAt":"2023-06-12T17:09:24","Actor":"dainizzz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12622","RelatedDescription":"Closed issue \"dotnet nuget config get all lists setting items in reverse order\" (#12622) at NuGet/Home","RelatedBody":"Currently, `dotnet nuget config get all` orders setting items by config file, with settings from lower priority config files appearing above settings from higher priority config files. Within each config section, they should instead be listed in order of highest priority config file to lowest priority config file."},{"Id":"29688490863","Type":"IssuesEvent","CreatedAt":"2023-06-12T12:02:33","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12640","RelatedDescription":"Closed issue \"RestoreOperationLogger.ReportProgressAsync repeatedly requests UI thread time\" (#12640) at NuGet/Home","RelatedBody":"`RestoreOperationLogger.ReportProgressAsync` writes to both the output console and the VS status bar. The current implementation can post messages to the status bar that will immediately be overwritten by subsequent messages. This potentially requires multiple thread switches that consumes valuable UI thread time. We can mitigate this by only posting the most recent message to the status bar that we know of."},{"Id":"29684140166","Type":"IssuesEvent","CreatedAt":"2023-06-12T09:14:41","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12642","RelatedDescription":"Closed issue \"PackageSpec.Clone and LibraryDependency.Clone overwrite collections created by their constructors.\" (#12642) at NuGet/Home","RelatedBody":"Both `Clone` methods create a new default object that has collections that get implicitly assigned in the constructors. The `Clone` method then proceeds to overwrite the collections that were just created. We can avoid this to reduce allocations."},{"Id":"29658618972","Type":"IssuesEvent","CreatedAt":"2023-06-09T23:44:59","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12650","RelatedDescription":"Opened issue \"Replace unreliable assembly location code with reliable one\" (#12650) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nn/a\n\n### Worked before?\n\nn/a\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nWhen code inlining happens then Assembly.GetExecutingAssembly().Location may point to wrong location.\r\nSo we need to replace with typeof(T).Assembly.Location for reliability.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29658076776","Type":"IssuesEvent","CreatedAt":"2023-06-09T22:48:48","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12649","RelatedDescription":"Opened issue \"PackageSpec should use an empty RuntimeGraph instead of a new one\" (#12649) at NuGet/Home","RelatedBody":"[Internal tracking issue](https://devdiv.visualstudio.com/DevDiv/_queries/edit/1826714/?triage=true)"},{"Id":"29641820316","Type":"IssuesEvent","CreatedAt":"2023-06-09T09:03:33","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12646","RelatedDescription":"Closed issue \"ResolverUtility.FindLibraryCachedAsync should use a struct as lookup\" (#12646) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824495"},{"Id":"29639646640","Type":"IssuesEvent","CreatedAt":"2023-06-09T07:27:44","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12600","RelatedDescription":"Closed issue \"remove period from NU190X\" (#12600) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\r\n\r\nNuGet SDK\r\n\r\n### The Elevator Pitch\r\n\r\nIn the blog post showing security auditing, it had examples like\r\n\r\n![image](https://github.com/NuGet/Home/assets/6385855/97803a74-cc17-4e0c-ac68-92e83aaee388)\r\n\r\nWhen I want to go to one of those URL's, which I often will want to, I'll double click in my terminal (or depending on the terminal maybe right click) Unfortunately it will add a period to the end and the URL won't be resolved.\r\n\r\nPlease consider removing the period from the end of this resource.\r\n```\r\n  <data name=\"Warning_PackageWithKnownVulnerability\" xml:space=\"preserve\">\r\n    <value>Package '{0}' {1} has a known {2} severity vulnerability, {3}.</value>\r\n    <comment>{0} - package id\r\n{1} - package version\r\n{2} - severity, for example low, moderate, high, or critical\r\n{3} - URL for more info on the known vulnerability</comment>\r\n  </data>\r\n```\r\n\r\n### Additional Context and Details\r\n\r\n_No response_"},{"Id":"29634994155","Type":"IssuesEvent","CreatedAt":"2023-06-09T01:43:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12648","RelatedDescription":"Opened issue \"TargetFrameworkInformation.Clone calls ToDictionary on a type that is already a dictionary, TargetFrameworkInformation.Clone resizes a dictionary it already knows the destination size\" (#12648) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1828413/?triage=true"},{"Id":"29634961647","Type":"IssuesEvent","CreatedAt":"2023-06-09T01:40:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12647","RelatedDescription":"Opened issue \"PackageSpecReferenceDependencyProvider.GetLibrary unnecessarily resizes a List<T> that it doesn't even need\" (#12647) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824278"},{"Id":"29634944391","Type":"IssuesEvent","CreatedAt":"2023-06-09T01:39:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12646","RelatedDescription":"Opened issue \"ResolverUtility.FindLibraryCachedAsync should use a struct as lookup\" (#12646) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824495"},{"Id":"29634909201","Type":"IssuesEvent","CreatedAt":"2023-06-09T01:36:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12645","RelatedDescription":"Opened issue \"ContentItemCollection.PopulateItemGroups unnecessarily causing resizes of List<T>, ContentItemCollection.PopulateItemGroups boxing List<T>.Enumerator\" (#12645) at NuGet/Home","RelatedBody":"Internal issues for more detail: \r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824305\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1824313"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-06-13T03:30:22.1865963Z","RunDurationInMilliseconds":1103}