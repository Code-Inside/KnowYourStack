{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"33914712121","Type":"IssuesEvent","CreatedAt":"2023-12-05T19:06:50","Actor":"thecircleoflifefree","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9746","RelatedDescription":"Opened issue \"[SECURITY-CONCERN]:  Make NuGet repository trustful for windows module installation\" (#9746) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI am trying to do a module installation on windows 11. The fact that it returns it as an **\"untrusted repository\"** feels discouraging to continue.\n\n### The Elevator Pitch\n\nIs this something that can be addressed by NuGet?\n\n### Additional Context and Details\n\n> PS C:\\WINDOWS\\system32> Install-Module -Name Microsoft.PowerShell.UnixCompleters\r\n> \r\n> NuGet provider is required to continue\r\n> PowerShellGet requires NuGet provider version '2.8.5.201' or newer to interact with NuGet-based repositories. The NuGet provider must be available in 'C:\\Program\r\n> Files\\PackageManagement\\ProviderAssemblies' or 'C:\\Users\\<foobar>\\AppData\\Local\\PackageManagement\\ProviderAssemblies'. You can also install the NuGet provider by running\r\n> 'Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force'. Do you want PowerShellGet to install and import the NuGet provider now?\r\n> [Y] Yes  [N] No  [S] Suspend  [?] Help (default is \"Y\"): y\r\n> \r\n> Untrusted repository\r\n> You are installing the modules from an untrusted repository. If you trust this repository, change its InstallationPolicy value by running the Set-PSRepository cmdlet.\r\n> Are you sure you want to install the modules from 'PSGallery'?\r\n> [Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"N\"):\r\n\r\n"},{"Id":"33839544807","Type":"IssuesEvent","CreatedAt":"2023-12-03T18:31:55","Actor":"hbenvenutti","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9745","RelatedDescription":"Opened issue \"[Feature]: Add Codeium domain to trusted list.\" (#9745) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nAdd codeium domain to trusted domains so this badge works in nuget.org.\r\n\r\n[![built with Codeium](https://codeium.com/badges/main)](https://codeium.com/badges/main)\n\n### The Elevator Pitch\n\nAdd codeium domain to trusted domains so this badge works in nuget.org.\r\n\r\n[![built with Codeium](https://codeium.com/badges/main)](https://codeium.com/badges/main)\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"33958155996","Type":"IssuesEvent","CreatedAt":"2023-12-07T00:02:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12933","RelatedDescription":"Closed issue \"Failed to patchSDK with NuGet client Dev latest build\" (#12933) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n.Net SDK 7.0.401\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. Open a new \"Developer Command Prompt\".\r\n2. Cd to appropriate path, install [Git](https://git-scm.com/downloads) firstly, and git clone [Entropy](https://github.com/NuGet/Entropy.git).\r\n3. Cd to <path_to_Entropy>\\SDKPatchTool to check if the patch script is cloned successfully.\r\n4. Download the nupkgs folder from  the Artifacts -> nupkgs - NonRTM of the build.\r\n5. Open the <path_to_Entropy>\\SDKPatchTool\\patchOnWindows.ps1 and update the “$patchSDKFolder” & “$nupkgsPath” to appreciate path.\r\n6. Open Task Manager and navigate to the main menu to File | “Run new task.”.\r\n7. In the Open textbox type: `Powershell -ExecutionPolicy Bypass` and enable the option “Create this task with administrative privileges.”.\r\n8. Cd to <path_to_Entropy>\\SDKPatchTool and execute the command `.\\PatchOnWindows.ps1`.\r\n#### Expected:\r\nPatchSDK with NuGet client Dev latest build successfully.\r\n#### Actual:\r\nFaild to patchSDK with NuGet client Dev latest build as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/40230425/623c7c4b-475a-4e23-9cdd-1c8fb84a66d0)\r\n#### Note:\r\n1. The issue does not repro on NuGet Client Dev\\6.8.0.120.\r\n2. The issue repro rate is 100%.\r\n\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"33938745103","Type":"IssuesEvent","CreatedAt":"2023-12-06T13:00:29","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12987","RelatedDescription":"Closed issue \"Restore operations randomly failing due to \"repository primary signature validity period has expired\"\" (#12987) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/core#8884**\r\n- Please respond to @arp-mbender.\r\n\r\n---\r\n\r\n_From @arp-mbender on Friday, November 3, 2023 3:12:45 PM_\r\n\r\n### Description\r\n\r\nOur CI/CD pipelines seem to randomly fail when restoring Nuget packages, and I can't seem to pinpoint the cause.\r\n\r\nThe logs from such failed attempts seem to indicate a certificate issue with Nuget.org.\r\n\r\n```\r\n\"C:\\Program Files\\dotnet\\dotnet.exe\" restore C:\\azp\\agent\\_work\\1\\s\\<Project>\\<Project>.sln --configfile C:\\azp\\agent\\_work\\1\\Nuget\\tempNuGet_46182.config --verbosity Minimal --ignore-failed-sources\r\n  Determining projects to restore...\r\nC:\\azp\\agent\\_work\\1\\s\\<Project>\\src\\<Project>.Web.Core\\<Project>.Web.Core.csproj : error NU3028: Package 'System.Diagnostics.DiagnosticSource 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature's timestamping certificate is not trusted by the trust provider. [C:\\azp\\agent\\_work\\1\\s\\<Project>\\<Project>.sln]\r\n  Package 'System.Buffers 4.0.0' from source 'https://api.nuget.org/v3/index.json': \r\n  Signature type: Repository\r\n  Package 'System.Buffers 4.0.0' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=NuGet.org Repository by Microsoft, O=NuGet.org Repository by Microsoft, L=Redmond, S=Washington, C=US\r\n  Package 'System.Buffers 4.0.0' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 0E5F38F57DC1BCC806D8494F4F90FBCEDD988B46760709CBEEC6F4219AA6157D\r\n  Package 'System.Buffers 4.0.0' from source 'https://api.nuget.org/v3/index.json':   Valid from: 4/10/2018 2:00:00 AM to 4/14/2021 2:00:00 PM\r\nC:\\azp\\agent\\_work\\1\\s\\<Project>\\src\\<Project>.Web.Core\\<Project>.Web.Core.csproj : error NU3037: Package 'System.Buffers 4.0.0' from source 'https://api.nuget.org/v3/index.json': The repository primary signature validity period has expired. [C:\\azp\\agent\\_work\\1\\s\\<Project>\\<Project>.sln]\r\n```\r\n\r\nAs far as I know the `dotnet` version we're using is 7.0.403. The logs seem to suggest that **nugget.org** is using a certificate that expired in 2021, which I find highly unlikely. \r\n\r\nSince this is failing randomly I've no idea how to proceed with debugging this. Is it possible it's some random CDN server that's lacking updates / is out of sync and we randomly seem to be routed to it?"},{"Id":"33933883148","Type":"IssuesEvent","CreatedAt":"2023-12-06T10:17:13","Actor":"inosik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13072","RelatedDescription":"Opened issue \"Packages with 4-digit version numbers with trailing 0 can't be used\" (#13072) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI\n\n### Product Version\n\n.NET SDK 8.0.100\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nFor historical reasons, some internal packages at our company use a 4-digit version number. We use GitLab Package Registry as our internal feed. It doesn't seem to normalize version numbers with the fourth digit set to 0 on upload:\r\n\r\n![StructuredLogViewer_2023-12-06_10-44-21](https://github.com/NuGet/Home/assets/11393003/cf585c18-ba84-4d78-8f6e-4f1dd3837617)\r\n\r\na) Such packages can't be added via `dotnet add package ...` to the project (log: [dotnet-add.log](https://github.com/NuGet/Home/files/13579643/dotnet-add.log))\r\n\r\nb) When a `PackageReference` is added manually to the project, it can't be restored:\r\n\r\n``` sh\r\n$ dotnet restore\r\n  Determining projects to restore...\r\n  Failed to restore C:\\xxx\\temp.csproj (in 473 ms).\r\nC:\\Program Files\\dotnet\\sdk\\8.0.100\\NuGet.targets(156,5): error MSB4181: The \"RestoreTask\" task returned false but did not log an error. [C:\\xxx\\temp.csproj]\r\n```\r\n\r\n[dotnet-restore.log](https://github.com/NuGet/Home/files/13579585/dotnet-restore.log)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"33929497497","Type":"IssuesEvent","CreatedAt":"2023-12-06T07:51:27","Actor":"halcwb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13071","RelatedDescription":"Opened issue \"Path access denied to http-cache\" (#13071) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK:  Version:           8.0.100  Commit:            57efcf1350  Workload version:  8.0.100-manifests.71b9f198  Runtime Environment:  OS Name:     Mac OS X  OS Version:  14.1  OS Platform: Darwin  RID:         osx-arm64  Base Path:   /usr/local/share/dotnet/sdk/8.0.100/  .NET workloads installed:  Workload version: 8.0.100-manifests.71b9f198 There are no installed workloads to display.  Host:   Version:      8.0.0   Architecture: arm64   Commit:       5535e31a71  .NET SDKs installed:   6.0.415 [/usr/local/share/dotnet/sdk]   7.0.402 [/usr/local/share/dotnet/sdk]   8.0.100 [/usr/local/share/dotnet/sdk]  .NET runtimes installed:   Microsoft.AspNetCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 7.0.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.AspNetCore.App 8.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]   Microsoft.NETCore.App 6.0.23 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]   Microsoft.NETCore.App\n\n### Worked before?\n\ndotnet sdk 6\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nwarning NU1900: Error occurred while getting package vulnerability data: Access to the path '/Users/user1/.local/share/NuGet/http-cache/670c1461c29885f9aa22c281d8b7da90845b38e4$ps:_api.nuget.org_v3_index.json/vuln_index.dat-new' is denied.\r\n\r\n\r\n\r\nThis is related to issue: https://github.com/NuGet/Home/issues/12162#issuecomment-1838523872. The issue is active since 2022. I tried all the proposed solutions:\r\n- Removing the http-cache folder\r\n- Making sure that all user rights on the folder were set\r\n- Try to run using `sudo`, also gives the same error\r\n- Using the --no-http-cache- option, doesn't work: https://github.com/NuGet/Home/issues/13065#issue-2024394037\r\n- Using an environmental variable, doesn't work: https://github.com/NuGet/Home/issues/13066#issue-2024417844\r\n\r\nSo, whatever I try, I can't get rid of this problem\n\n### Verbose Logs\n\n```shell\n[log.txt](https://github.com/NuGet/Home/files/13578073/log.txt)\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"32913595856","Type":"IssuesEvent","CreatedAt":"2023-10-28T01:30:54","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Closed issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-12-07T03:30:19.9671856Z","RunDurationInMilliseconds":1138}