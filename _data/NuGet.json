{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27743144493","Type":"IssuesEvent","CreatedAt":"2023-03-15T15:27:52","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9430","RelatedDescription":"Closed issue \"[Feature]: Make NuGet.Server support .Net Core 6/7/8\" (#9430) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n[Feature]: Make NuGet.Server support .Net Core 6/7/8\n\n### The Elevator Pitch\n\n[Feature]: Make NuGet.Server support .Net Core 6/7/8\n\n### Additional Context and Details\n\n[Feature]: Make NuGet.Server support .Net Core 6/7/8"},{"Id":"27731437936","Type":"IssuesEvent","CreatedAt":"2023-03-15T08:20:48","Actor":"CuteLeon","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9430","RelatedDescription":"Opened issue \"[Feature]: Make NuGet.Server support .Net Core 6/7/8\" (#9430) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n[Feature]: Make NuGet.Server support .Net Core 6/7/8\n\n### The Elevator Pitch\n\n[Feature]: Make NuGet.Server support .Net Core 6/7/8\n\n### Additional Context and Details\n\n[Feature]: Make NuGet.Server support .Net Core 6/7/8"},{"Id":"27721431154","Type":"PullRequestEvent","CreatedAt":"2023-03-14T20:58:54","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9429","RelatedDescription":"Opened pull request \"[A11y] Search page a11y fixes for tags and framework filter buttons\" (#9429) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9402, https://github.com/NuGet/NuGetGallery/issues/9412 and https://github.com/NuGet/NuGetGallery/issues/9413\r\n\r\nThis PR fixes 3 a11y issues:\r\n\r\n1. The tags in search results sometimes appeared on the same line as the other package metadata (version, last created, etc.) and sometimes appeared on the next line. We wanted to make this consistent and always have the 'tags' on the next line, but adding a `<br>` element in the middle of a list led to this a11y issue:\r\n    ![image](https://user-images.githubusercontent.com/82980589/225134180-860cebea-4b3e-46a4-bb2d-9eece8107921.png)\r\n\r\n    I've now removed the `<br>` element and fixed this with some css:\r\n    ![image](https://user-images.githubusercontent.com/82980589/225132168-62bffd76-acd6-4460-8b58-a549e1a4ee0f.png)\r\n2. The chevrons that expanded/collapsed the TFM sections in the Filters panel did not indicate their expanded/collapsed state. The screen reader should be able to read their state. The 'aria-expanded' can be used to fix this.\r\n3. These chevrons also all had the same 'aria-label': \"shows and hides TFM filters\". I've now made each button's label relevant to its specific frameworks: eg. \"shows and hides TFM filters for .NET Standard\"."},{"Id":"27710646653","Type":"IssuesEvent","CreatedAt":"2023-03-14T14:03:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9354","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Information on the `Script & Interactive` usage tab isn't quite accurate \" (#9354) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nOther\n\n### Describe the bug\n\nThe `Script & Interactive` tab shows informational text that could use an update. \r\n\r\n> #r directive can be used in F# Interactive, C# scripting and .NET Interactive. Copy this into the interactive tool or source code of the script to reference the package. \r\n\r\nI'd suggest two changes:\r\n\r\n* The NuGet support for `#r` is not present in C# scripting. \r\n* The VS Code extension for .NET Interactive is now called [Polyglot Notebooks](https://devblogs.microsoft.com/dotnet/dotnet-interactive-notebooks-is-now-polyglot-notebooks/). (.NET Interactive is also available in other places, so this name change doesn't apply universally.) Mentioning .NET Interactive **_and_** Polyglot Notebooks might be helpful.\r\n\r\n\n\n### Repro Steps\n\n1. Open a package URL, e.g.  https://www.nuget.org/packages/Apache.Arrow/\r\n2. Click the `Script & Interactive` tab\n\n### Expected Behavior\n\nThe wording could be more accurate.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/547415/214192932-b1fa8a27-ce95-4d75-a11e-21e17274383c.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27687663501","Type":"PullRequestEvent","CreatedAt":"2023-03-13T18:13:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9425","RelatedDescription":"Merged pull request \"add domain avatars.githubusercontent.com\" (#9425) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9330"},{"Id":"27620881159","Type":"PullRequestEvent","CreatedAt":"2023-03-10T00:01:00","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9408","RelatedDescription":"Merged pull request \"[2FA] Update link msa/aad account page with legacy password account information.\" (#9408) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n* Updated wording of the \"Link Microsoft Account\" page to include Legacy Account information.\r\n* Legacy account page: This page will show when users have password account and are not part of the exception list.\r\n* Link Microsoft account page: After a user with a legacy account issue sends a SR to us, we will verify the request and ownership. Once we approve it using our processes, the user will see this page and will be able to link their MSA if they know their password, otherwise they will be able to use the **Forgot your password?** link.\r\n\r\n### Screenshot\r\n#### Legacy account page\r\n![Legacy Account](https://user-images.githubusercontent.com/17834924/223597221-14a360b6-7ddc-48d3-97ac-7b8398fe6788.png)\r\n\r\n#### Link MSA account page\r\n![Linking account](https://user-images.githubusercontent.com/17834924/223597400-5abed200-6841-4bfb-9ee2-9c3fa30e1a78.png)\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4617"},{"Id":"27615325462","Type":"IssuesEvent","CreatedAt":"2023-03-09T18:53:10","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9428","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Status page should show the time zone of a timestamp.\" (#9428) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nStatus page shows the timeline, but it is not clear about the time zone. It is better that a timestamp is marked with the time zone.\n\n### Repro Steps\n\n1. On this URL: https://status.nuget.org/\r\n2. The time zone used in history is unclear.\n\n### Expected Behavior\n\nStatus page lists the time zone of a timestamp.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/41028779/224125738-6ee7add3-bedb-4642-856d-502dca48bc72.png)\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27744677722","Type":"IssuesEvent","CreatedAt":"2023-03-15T16:16:28","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12466","RelatedDescription":"Closed issue \"The “binding redirects” is not applied after installing “NuGet.Protocol” and “NuGet.Commands” package with “Packages.config” format \" (#12466) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.6.0.35\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n#### Repro Steps:     \r\n\r\n1. Create a .NET Framework Console application project.  \r\n\r\n2. Open the Package Manager UI.  \r\n\r\n3. Install “NuGet.Protocol” version 6.4.0 with \"Packages.config\" format.  \r\n\r\n4. Install “NuGet.Commands” version 6.2.2 with \"Packages.config\" format.  \r\n\r\n5. Check the “App.config” file. \r\n\r\n#### Expected:     \r\n\r\nThe “App.config” shows like below. \r\n```\r\n<dependentAssembly> \r\n\r\n  <assemblyIdentity name=\"NuGet.Versioning\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" /> \r\n\r\n  <bindingRedirect oldVersion=\"0.0.0.0-6.4.0.123\" newVersion=\"6.4.0.123\" /> \r\n\r\n</dependentAssembly> \r\n```\r\n#### Actual:     \r\n\r\nThe “binding redirects” is not applied as below screenshot:\r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/84695155/222685055-0416e049-865d-4757-8a63-54e9c325458d.png)\r\n#### Notes: \r\n\r\nIt doesn’t repro on VS Main\\33416.69 + NuGet Client Dev\\6.6.0.24. \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27738687382","Type":"IssuesEvent","CreatedAt":"2023-03-15T13:01:03","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12419","RelatedDescription":"Closed issue \"CPM not working with another versioning sdk\" (#12419) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, MSBuild.exe, NuGet.exe\r\n\r\n### Product Version\r\n\r\nnuget 6.4.0, .net 6.0\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nAdd another central versioning sdk in a csproj file\r\n`<Sdk Name=\"Your.Versioning.Sdk\" />`\r\n\r\nTry either building the project or running nuget restore.\r\n\r\nError:\r\n` [Name].csproj: [RCV0102] The package reference '[Package]' has no version and no update specified. If you expected a version to be set it may indicate a problem with CentralVersions. Add an explicit version in the project file.`\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27737464042","Type":"IssuesEvent","CreatedAt":"2023-03-15T12:14:45","Actor":"mrEDitor","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12467","RelatedDescription":"Closed issue \"dotnet restore hangs\" (#12467) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK:  Version:   7.0.103  Commit:    276c71d299\r\n\r\n### Worked before?\r\n\r\nworked on same version earlier; works on fresh archlinux installation\r\n\r\n### Impact\r\n\r\nOther\r\n\r\nNuGet is not working on my machine anymore\r\n\r\n### Repro Steps & Context\r\n\r\n```console\r\n$ dotnet new console -o myproj1\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring /home/edward/myproj1/myproj1.csproj:\r\n  Determining projects to restore...\r\n```\r\n\r\n-or-\r\n\r\n```console\r\n$ dotnet restore # also hangs on existing projects\r\n  Determining projects to restore...\r\n```\r\n\r\n<details>\r\n\r\n<summary>dotnet dump > clrstack -all</summary>\r\n\r\n```console\r\n$ clrstack -all                                                                    \r\nOS Thread Id: 0xadbe\r\n        Child SP               IP Call Site\r\n00007FFD16FFCC50 00007fe714db3766 [HelperMethodFrame: 00007ffd16ffcc50] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FFD16FFCD80 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FFD16FFCDC0 00007FE697B40A24 Microsoft.Build.Execution.BuildSubmission.Execute()\r\n00007FFD16FFCDF0 00007FE6978062CC Microsoft.Build.CommandLine.MSBuildApp.ExecuteBuild(Microsoft.Build.Execution.BuildManager, Microsoft.Build.Execution.BuildRequestData)\r\n00007FFD16FFCE40 00007FE697806561 Microsoft.Build.CommandLine.MSBuildApp.ExecuteRestore(System.String, System.String, Microsoft.Build.Execution.BuildManager, System.Collections.Generic.Dictionary`2<System.String,System.String>)\r\n00007FFD16FFCEC0 00007FE6978058D1 Microsoft.Build.CommandLine.MSBuildApp.BuildProject(System.String, System.String[], System.String, System.Collections.Generic.Dictionary`2<System.String,System.String>, System.Collections.Generic.Dictionary`2<System.String,System.String>, Microsoft.Build.Framework.ILogger[], Microsoft.Build.Framework.LoggerVerbosity, Microsoft.Build.CommandLine.DistributedLoggerRecord[], Int32, Boolean, System.IO.TextWriter, System.IO.TextWriter, Boolean, System.Collections.Generic.ISet`1<System.String>, System.Collections.Generic.ISet`1<System.String>, System.Collections.Generic.ISet`1<System.String>, Boolean, Microsoft.Build.Logging.ProfilerLogger, Boolean, Boolean, Boolean, Microsoft.Build.Graph.GraphBuildOptions, Boolean, System.String[], System.String, System.String[])\r\n00007FFD16FFD040 00007FE6978043CD Microsoft.Build.CommandLine.MSBuildApp.Execute(System.String[])\r\n00007FFD16FFD2E0 00007FE697803459 Microsoft.Build.CommandLine.MSBuildApp.Main(System.String[])\r\n00007FFD16FFD340 00007FE6967DB2EE Microsoft.DotNet.Cli.Utils.MSBuildForwardingAppWithoutLogging.ExecuteInProc(System.String[])\r\n00007FFD16FFD420 00007FE6961E878C Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingApp.Execute()\r\n00007FFD16FFD460 00007FE696AB65E2 System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d.MoveNext()\r\n00007FFD16FFD4A0 00007FE69608C5DD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d, System.CommandLine]](<<BuildInvocationChain>b__0>d ByRef)\r\n00007FFD16FFD4E0 00007FE69608C54C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d, System.CommandLine]](<<BuildInvocationChain>b__0>d ByRef)\r\n00007FFD16FFD500 00007FE696AB175D System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0.<BuildInvocationChain>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD550 00007FE6962351C2 Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d.MoveNext()\r\n00007FFD16FFD5F0 00007FE69608C49D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d, dotnet]](<<UseParseErrorReporting>b__0>d ByRef)\r\n00007FFD16FFD630 00007FE69608C40C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d, dotnet]](<<UseParseErrorReporting>b__0>d ByRef)\r\n00007FFD16FFD650 00007FE69622EC7C Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0.<UseParseErrorReporting>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD6B0 00007FE696AB51A3 System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d.MoveNext()\r\n00007FFD16FFD6E0 00007FE69608C35D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d, System.CommandLine]](<<UseHelp>b__0>d ByRef)\r\n00007FFD16FFD720 00007FE69608C2CC System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d, System.CommandLine]](<<UseHelp>b__0>d ByRef)\r\n00007FFD16FFD740 00007FE696AAE37B System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0.<UseHelp>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD7A0 00007FE696AB506F System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d.MoveNext()\r\n00007FFD16FFD7E0 00007FE69608C21D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d, System.CommandLine]](<<UseSuggestDirective>b__17_0>d ByRef)\r\n00007FFD16FFD820 00007FE69608C18C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d, System.CommandLine]](<<UseSuggestDirective>b__17_0>d ByRef)\r\n00007FFD16FFD840 00007FE696AAE1DE System.CommandLine.CommandLineBuilderExtensions+<>c.<UseSuggestDirective>b__17_0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD890 00007FE696AB5454 System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d.MoveNext()\r\n00007FFD16FFD8C0 00007FE69608C0DD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d, System.CommandLine]](<<UseParseDirective>b__0>d ByRef)\r\n00007FFD16FFD900 00007FE69608C04C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d, System.CommandLine]](<<UseParseDirective>b__0>d ByRef)\r\n00007FFD16FFD920 00007FE696AAE49B System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0.<UseParseDirective>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD980 00007FE696AB609C System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d.MoveNext()\r\n00007FFD16FFD9D0 00007FE69608BF9D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d, System.CommandLine]](<<UseExceptionHandler>b__0>d ByRef)\r\n00007FFD16FFDA10 00007FE69608BF0C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d, System.CommandLine]](<<UseExceptionHandler>b__0>d ByRef)\r\n00007FFD16FFDA30 00007FE696AAEAEB System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0.<UseExceptionHandler>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFDA90 00007FE696AA8960 System.CommandLine.Invocation.InvocationPipeline.<Invoke>g__FullInvocationChain|3_0(System.CommandLine.Invocation.InvocationContext)\r\n00007FFD16FFDB10 00007FE696AA8700 System.CommandLine.Invocation.InvocationPipeline.Invoke(System.CommandLine.IConsole)\r\n00007FFD16FFDB40 00007FE69620DB6F Microsoft.DotNet.Cli.Program.ProcessArgs(System.String[], System.TimeSpan, Microsoft.DotNet.Cli.Telemetry.ITelemetry)\r\n00007FFD16FFDC70 00007FE69620D214 Microsoft.DotNet.Cli.Program.Main(System.String[])\r\nOS Thread Id: 0xadc3\r\n        Child SP               IP Call Site\r\n00007FE68EFFCD10 00007fe714db3766 [DebuggerU2MCatchHandlerFrame: 00007fe68effcd10] \r\nOS Thread Id: 0xadc6\r\n        Child SP               IP Call Site\r\n00007FA5DF9FE968 00007fe714db3766 [HelperMethodFrame: 00007fa5df9fe968] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DF9FEA90 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DF9FEB00 00007FE697BA78E8 Microsoft.Build.BackEnd.Logging.LoggingService.<StartLoggingEventProcessing>g__LoggingEventProc|135_0()\r\n00007FA5DF9FEB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DF9FECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5df9fecd0] \r\nOS Thread Id: 0xadc7\r\n        Child SP               IP Call Site\r\n00007FA5DF1FD968 00007fe714db3766 [HelperMethodFrame: 00007fa5df1fd968] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DF1FDA90 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DF1FDB00 00007FE697BA78E8 Microsoft.Build.BackEnd.Logging.LoggingService.<StartLoggingEventProcessing>g__LoggingEventProc|135_0()\r\n00007FA5DF1FDB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DF1FDCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5df1fdcd0] \r\nOS Thread Id: 0xadc8\r\n        Child SP               IP Call Site\r\n00007FA5DE9FC978 00007fe714db3766 [InlinedCallFrame: 00007fa5de9fc978] \r\n00007FA5DE9FC978 00007fe6956edb4a [InlinedCallFrame: 00007fa5de9fc978] \r\n00007FA5DE9FC970 00007FE6956EDB4A System.Threading.LowLevelLifoSemaphore.<WaitNative>g____PInvoke|3_0(IntPtr, Int32)\r\n00007FA5DE9FCA10 00007FE6956ED669 System.Threading.LowLevelLifoSemaphore.WaitNative(Microsoft.Win32.SafeHandles.SafeWaitHandle, Int32)\r\n00007FA5DE9FCA40 00007FE6956EDA86 System.Threading.LowLevelLifoSemaphore.WaitForSignal(Int32)\r\n00007FA5DE9FCA70 00007FE6956ED963 System.Threading.LowLevelLifoSemaphore.Wait(Int32, Boolean)\r\n00007FA5DE9FCAC0 00007FE69570378E System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\r\n00007FA5DE9FCCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5de9fccd0] \r\nOS Thread Id: 0xadc9\r\n        Child SP               IP Call Site\r\n00007FE68DB0C8E0 00007fe714db3766 [HelperMethodFrame: 00007fe68db0c8e0] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FE68DB0CA10 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FE68DB0CA50 00007FE695701241 System.Threading.PortableThreadPool+GateThread.GateThreadStart()\r\n00007FE68DB0CCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fe68db0ccd0] \r\nOS Thread Id: 0xadca\r\n        Child SP               IP Call Site\r\n00007FA5DE1FB978 00007fe714db3766 [InlinedCallFrame: 00007fa5de1fb978] \r\n00007FA5DE1FB978 00007fe6956edb4a [InlinedCallFrame: 00007fa5de1fb978] \r\n00007FA5DE1FB970 00007FE6956EDB4A System.Threading.LowLevelLifoSemaphore.<WaitNative>g____PInvoke|3_0(IntPtr, Int32)\r\n00007FA5DE1FBA10 00007FE6956ED669 System.Threading.LowLevelLifoSemaphore.WaitNative(Microsoft.Win32.SafeHandles.SafeWaitHandle, Int32)\r\n00007FA5DE1FBA40 00007FE6956EDA86 System.Threading.LowLevelLifoSemaphore.WaitForSignal(Int32)\r\n00007FA5DE1FBA70 00007FE6956ED963 System.Threading.LowLevelLifoSemaphore.Wait(Int32, Boolean)\r\n00007FA5DE1FBAC0 00007FE69570378E System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\r\n00007FA5DE1FBCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5de1fbcd0] \r\nOS Thread Id: 0xadcb\r\n        Child SP               IP Call Site\r\n00007FA5DD9FA938 00007fe714db3766 [HelperMethodFrame: 00007fa5dd9fa938] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DD9FAA60 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DD9FAAD0 00007FE697B7E1A1 Microsoft.Build.BackEnd.InProcNode.Run(System.Exception ByRef)\r\n00007FA5DD9FAB10 00007FE697BFE69B Microsoft.Build.BackEnd.NodeProviderInProc+<>c__DisplayClass30_0.<InstantiateNode>b__0()\r\n00007FA5DD9FAB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DD9FACD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5dd9facd0] \r\nOS Thread Id: 0xadcd\r\n        Child SP               IP Call Site\r\n00007FA5DC9F76E0 00007fe714db3766 [HelperMethodFrame_1OBJ: 00007fa5dc9f76e0] System.Threading.Monitor.ObjWait(Int32, System.Object)\r\n00007FA5DC9F7810 00007FE6956F4636 System.Threading.ManualResetEventSlim.Wait(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F7890 00007FE695708FFC System.Threading.Tasks.Task.SpinThenBlockingWait(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F78F0 00007FE695708E8E System.Threading.Tasks.Task.InternalWaitCore(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F7940 00007FE69581A468 System.Threading.Tasks.Task`1[[System.Boolean, System.Private.CoreLib]].GetResultCore(Boolean)\r\n00007FA5DC9F7960 00007FE699E66675 NuGet.Build.Tasks.RestoreTask.Execute()\r\n00007FA5DC9F7BA0 00007FE697B9244D Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n00007FA5DC9F7BD0 00007FE697BFB68B Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25.MoveNext()\r\n00007FA5DC9F7CE0 00007FE6999EFB8D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25, Microsoft.Build]](<ExecuteInstantiatedTask>d__25 ByRef)\r\n00007FA5DC9F7D20 00007FE6999EFB00 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25, Microsoft.Build]](<ExecuteInstantiatedTask>d__25 ByRef)\r\n00007FA5DC9F7D50 00007FE697B89A66 Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(Microsoft.Build.BackEnd.ITaskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext, Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.ItemBucket, Microsoft.Build.BackEnd.TaskExecutionMode)\r\n00007FA5DC9F7DF0 00007FE697BFCD14 Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23.MoveNext()\r\n00007FA5DC9F7E40 00007FE6999EFA4D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23, Microsoft.Build]](<InitializeAndExecuteTask>d__23 ByRef)\r\n00007FA5DC9F7E80 00007FE6999EF230 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23, Microsoft.Build]](<InitializeAndExecuteTask>d__23 ByRef)\r\n00007FA5DC9F7EB0 00007FE697B8970F Microsoft.Build.BackEnd.TaskBuilder.InitializeAndExecuteTask(Microsoft.Build.BackEnd.Logging.TaskLoggingContext, Microsoft.Build.BackEnd.ItemBucket, System.Collections.Generic.IDictionary`2<System.String,System.String>, Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.TaskExecutionMode)\r\n00007FA5DC9F7F40 00007FE697BFAA74 Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19.MoveNext()\r\n00007FA5DC9F8020 00007FE6999EBC1D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19, Microsoft.Build]](<ExecuteBucket>d__19 ByRef)\r\n00007FA5DC9F8060 00007FE6999EBB90 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19, Microsoft.Build]](<ExecuteBucket>d__19 ByRef)\r\n00007FA5DC9F8090 00007FE697B8929B Microsoft.Build.BackEnd.TaskBuilder.ExecuteBucket(Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.ItemBucket, Microsoft.Build.BackEnd.TaskExecutionMode, System.Collections.Generic.Dictionary`2<System.String,System.String>)\r\n00007FA5DC9F8120 00007FE697BFC959 Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18.MoveNext()\r\n00007FA5DC9F81E0 00007FE6999EBADD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18, Microsoft.Build]](<ExecuteTask>d__18 ByRef)\r\n00007FA5DC9F8220 00007FE6999EBA50 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18, Microsoft.Build]](<ExecuteTask>d__18 ByRef)\r\n00007FA5DC9F8250 00007FE697B891F3 Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup)\r\n00007FA5DC9F82D0 00007FE697BFC53D Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13.MoveNext()\r\n00007FA5DC9F8310 00007FE6999EB99D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13, Microsoft.Build]](<ExecuteTask>d__13 ByRef)\r\n00007FA5DC9F8350 00007FE6999EB910 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13, Microsoft.Build]](<ExecuteTask>d__13 ByRef)\r\n00007FA5DC9F8380 00007FE697B88CEE Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.Logging.TargetLoggingContext, Microsoft.Build.BackEnd.BuildRequestEntry, Microsoft.Build.BackEnd.ITargetBuilderCallback, Microsoft.Build.Execution.ProjectTargetInstanceChild, Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup, Microsoft.Build.BackEnd.Lookup, System.Threading.CancellationToken)\r\n00007FA5DC9F8420 00007FE697BFA406 Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51.MoveNext()\r\n00007FA5DC9F84A0 00007FE6999EB85D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51, Microsoft.Build]](<ProcessBucket>d__51 ByRef)\r\n00007FA5DC9F84E0 00007FE6999EB7D0 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51, Microsoft.Build]](<ProcessBucket>d__51 ByRef)\r\n00007FA5DC9F8510 00007FE697B86396 Microsoft.Build.BackEnd.TargetEntry.ProcessBucket(Microsoft.Build.BackEnd.ITaskBuilder, Microsoft.Build.BackEnd.Logging.TargetLoggingContext, Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup, Microsoft.Build.BackEnd.Lookup)\r\n00007FA5DC9F85B0 00007FE697BF988D Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44.MoveNext()\r\n00007FA5DC9F8730 00007FE6999EB71D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44, Microsoft.Build]](<ExecuteTarget>d__44 ByRef)\r\n00007FA5DC9F8770 00007FE6999EB68C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44, Microsoft.Build]](<ExecuteTarget>d__44 ByRef)\r\n00007FA5DC9F8790 00007FE697B85CA4 Microsoft.Build.BackEnd.TargetEntry.ExecuteTarget(Microsoft.Build.BackEnd.ITaskBuilder, Microsoft.Build.BackEnd.BuildRequestEntry, Microsoft.Build.BackEnd.Logging.ProjectLoggingContext, System.Threading.CancellationToken)\r\n00007FA5DC9F8850 00007FE697BF8753 Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23.MoveNext()\r\n00007FA5DC9F88E0 00007FE6999FDA53 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].ExecutionContextCallback(System.Object)\r\n00007FA5DC9F8900 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DC9F8950 00007FE6999FD90F System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].MoveNext(System.Threading.Thread)\r\n00007FA5DC9F89A0 00007FE6999FD78A System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].MoveNext()\r\n00007FA5DC9F89C0 00007FE69570E47E System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation+<>c.<Run>b__2_0(System.Object)\r\n00007FA5DC9F89E0 00007FE695708372 System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n00007FA5DC9F8AE0 00007FE69570808E System.Threading.Tasks.Task.ExecuteEntry()\r\n00007FA5DC9F8B00 00007FE697BF50EC Microsoft.Build.BackEnd.RequestBuilder+DedicatedThreadsTaskScheduler.<InjectThread>b__6_0()\r\n00007FA5DC9F8B30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DC9F8CD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5dc9f8cd0] \r\nOS Thread Id: 0xadcf\r\n        Child SP               IP Call Site\r\n00007FA5BB1FE850 00007fe714db3766 [HelperMethodFrame_1OBJ: 00007fa5bb1fe850] System.Threading.Monitor.ObjWait(Int32, System.Object)\r\n00007FA5BB1FE980 00007FE6956F7F65 System.Threading.SemaphoreSlim.WaitUntilCountOrTimeout(Int32, UInt32, System.Threading.CancellationToken)\r\n00007FA5BB1FE9C0 00007FE6956F7D41 System.Threading.SemaphoreSlim.Wait(Int32, System.Threading.CancellationToken)\r\n00007FA5BB1FEA40 00007FE696D07A55 System.Collections.Concurrent.BlockingCollection`1[[System.__Canon, System.Private.CoreLib]].TryTakeWithNoTimeValidation(System.__Canon ByRef, Int32, System.Threading.CancellationToken, System.Threading.CancellationTokenSource)\r\n00007FA5BB1FEAB0 00007FE696D0941F System.Collections.Concurrent.BlockingCollection`1+<GetConsumingEnumerable>d__68[[System.__Canon, System.Private.CoreLib]].MoveNext()\r\n00007FA5BB1FEB00 00007FE697BF5105 Microsoft.Build.BackEnd.RequestBuilder+DedicatedThreadsTaskScheduler.<InjectThread>b__6_0()\r\n00007FA5BB1FEB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5BB1FECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5bb1fecd0] \r\nOS Thread Id: 0xadd0\r\n        Child SP               IP Call Site\r\n00007FA5B9DFE990 00007fe714db3766 [HelperMethodFrame: 00007fa5b9dfe990] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FA5B9DFEAC0 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FA5B9DFEB00 00007FE6956FD5CD System.Threading.TimerQueue.TimerThread()\r\n00007FA5B9DFECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5b9dfecd0] \r\nOS Thread Id: 0xadd1\r\n        Child SP               IP Call Site\r\n00007FA5B95FDA90 00007fe714e391b6 [InlinedCallFrame: 00007fa5b95fda90] \r\n00007FA5B95FDA90 00007fe69c19f38f [InlinedCallFrame: 00007fa5b95fda90] \r\n00007FA5B95FDA80 00007FE69C19F38F Interop+Sys.WaitForSocketEvents(IntPtr, SocketEvent*, Int32*)\r\n00007FA5B95FDB30 00007FE69C1C4E84 System.Net.Sockets.SocketAsyncEngine.EventLoop()\r\n00007FA5B95FDCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5b95fdcd0] \r\n```\r\n</details>\r\n\r\n<details>\r\n\r\n<summary>Eliminating the need to restore packages eliminates the hang as well</summary>\r\n\r\n```console\r\n$ cat myproj.csproj\r\n<Project>\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n$ dotnet build\r\n/usr/share/dotnet/sdk/7.0.103/MSBuild.dll -nologo -maxcpucount -target:Restore -verbosity:m -verbosity:diag ./myproj.csproj\r\nBuild started 3/5/2023 4:24:48PM.\r\nEnvironment at start of build:\r\nDOTNET_HOST_PATH = /usr/share/dotnet/dotnet\r\nDOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/edward/.cache/dotnet_bundle_extract\r\nMSBUILDUSESERVER = 0\r\nDOTNET_ROOT = /usr/share/dotnet\r\n\r\n16:24:48.559     0>Process = \"/usr/share/dotnet/dotnet\"\r\n                   MSBuild executable path = \"/usr/share/dotnet/sdk/7.0.103/MSBuild.dll\"\r\n                   Command line arguments = \"/usr/share/dotnet/sdk/7.0.103/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore -verbosity:diag\"\r\n                   Current directory = \"/home/edward/myproj\"\r\n                   MSBuild version = \"17.4.1+fedecea9d\"\r\n16:24:48.608     0>Initial Properties:\r\n                   DOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/edward/.cache/dotnet_bundle_extract\r\n                   DOTNET_HOST_PATH = /usr/share/dotnet/dotnet\r\n                   DOTNET_ROOT = /usr/share/dotnet\r\n                   ImplicitUsings = enable\r\n                   MSBuildAllProjects = /home/edward/myproj/myproj.csproj\r\n                   MSBuildAssemblyVersion = 17.0\r\n                   MSBuildBinPath = /usr/share/dotnet/sdk/7.0.103\r\n                   MSBuildDisableFeaturesFromVersion = 999.999\r\n                   MSBuildFileVersion = 17.4.1.12801\r\n                   MSBuildFrameworkToolsRoot = /usr/share/dotnet/shared/Microsoft.NETCore.App\r\n                   MSBuildNodeCount = 8\r\n                   MSBuildProgramFiles32 = \r\n                   MSBuildProjectDirectory = /home/edward/myproj\r\n                   MSBuildProjectDirectoryNoRoot = home/edward/myproj\r\n                   MSBuildProjectExtension = .csproj\r\n                   MSBuildProjectFile = myproj.csproj\r\n                   MSBuildProjectFullPath = /home/edward/myproj/myproj.csproj\r\n                   MSBuildProjectName = myproj\r\n                   MSBuildRestoreSessionId = a0b4dfe1-050c-4e79-9e5f-bb0e95e67126\r\n                   MSBuildRuntimeType = Core\r\n                   MSBuildSDKsPath = /usr/share/dotnet/sdk/7.0.103/Sdks\r\n                   MSBuildSemanticVersion = 17.4.1+fedecea9d\r\n                   MSBuildStartupDirectory = /home/edward/myproj\r\n                   MSBuildToolsPath = /usr/share/dotnet/sdk/7.0.103\r\n                   MSBuildToolsVersion = Current\r\n                   MSBUILDUSESERVER = 0\r\n                   MSBuildVersion = 17.4.1\r\n                   Nullable = enable\r\n                   OS = Unix\r\n                   OutputType = Exe\r\n                   RoslynTargetsPath = /usr/share/dotnet/sdk/7.0.103/Roslyn\r\n                   TargetFramework = net7.0\r\n                   VisualStudioVersion = 17.0\r\n\r\n16:24:48.609     1>Project \"/home/edward/myproj/myproj.csproj\" on node 1 (Restore target(s)).\r\n16:24:48.609     1>Target \"Restore\" skipped. The target does not exist in the project and SkipNonexistentTargets is set to true.\r\n16:24:48.610     1>Done Building Project \"/home/edward/myproj/myproj.csproj\" (Restore target(s)).\r\nDeferred Messages\r\n16:24:48.612     0>\r\nDetailed Build Summary\r\n======================\r\n     (TaskId:0)\r\n                     \r\n                     ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n                     Id                  : Exclusive Time   Total Time   Path (Targets)\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     0                   : 0.029s           0.029s       /home/edward/myproj/myproj.csproj (Restore)  (TaskId:0)\r\n                     \r\n                     ============================== Node Utilization (IDs represent configurations) ====================================================\r\n                     Timestamp:            1        Duration   Cumulative\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     638136194885800927:   0        0.032s     0.032s  (TaskId:0)\r\n                     -----------------------------------------------------------------------------------------------------------------------------------\r\n                     Utilization:          100.0    Average Utilization: 100.0 (TaskId:0)\r\n\r\nProject Evaluation Performance Summary:\r\n        4 ms  /home/edward/myproj/myproj.csproj          1 calls\r\n\r\nProject Performance Summary:\r\n        2 ms  /home/edward/myproj/myproj.csproj          1 calls\r\n                  2 ms  Restore                                    1 calls\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.06\r\n```\r\n\r\n</details>\r\n\r\n\r\n### Verbose Logs\r\n\r\n[log.txt](https://github.com/NuGet/Home/files/10892053/log.txt)"},{"Id":"27725289903","Type":"IssuesEvent","CreatedAt":"2023-03-15T01:21:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5267","RelatedDescription":"Closed issue \"Nuget push fails with timeout for some packages - fixed in netcore CLI 2.0\" (#5267) at NuGet/Home","RelatedBody":"_From @rudolfdobias on May 22, 2017 23:16_\n\nHello, hope this is the right place where to put this issue..:\r\nHave an package (https://www.nuget.org/packages/Firefly.net/1.2.1-alpha1) and it cannot be pushed to the nuget.org by any way from the command line.\r\n\r\n## Steps to reproduce\r\n\r\n```\r\ndotnet nuget push -k xxx-s https://www.nuget.org/api/v2/package ..path to the/Firefly.net.1.2.1-alpha1.nupkg'\r\n```\r\n\r\n - Tried desktop OSX / Ubuntu / Docker on Ubuntu - same behavior.\r\n - Tried myget, it does not work too.\r\n - Tried raise the timeout - nope\r\n - Tried to create new blank project and push it - it works.\r\n - (The package has about 40kbites)\r\n\r\n## Expected  behavior\r\n\r\n(package successfuly pushed)\r\n\r\n## Actual behavior\r\n\r\n```\r\ninfo : Pushing Firefly.net.1.2.1-alpha1.nupkg to 'https://www.nuget.org/api/v2/package'...\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo : An error was encountered when fetching 'PUT https://www.nuget.org/api/v2/package/'. The request will now be retried.\r\ninfo : An error occurred while sending the request.\r\ninfo :   Failure when receiving data from the peer\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nTesting on OSX:\r\n```\r\n.NET Command Line Tools (2.0.0-preview1-005977)\r\n\r\nProduct Information:\r\n Version:            2.0.0-preview1-005977\r\n Commit SHA-1 hash:  414cab8a0b\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0-preview1-005977/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002111-00\r\n  Build    : 1ff021936263d492539399688f46fd3827169983\r\n```\r\n\r\nTesting on ubuntu:\r\n\r\n```\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  14.04\r\n OS Platform: Linux\r\n RID:         ubuntu.14.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/1.0.4\r\n```\r\n\r\nThanks\r\n\r\n\n\n_Copied from original issue: dotnet/cli#6666_"},{"Id":"27723194433","Type":"IssuesEvent","CreatedAt":"2023-03-14T22:40:46","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12481","RelatedDescription":"Closed issue \"VS crashed when installing a package with “package config” format in C# Class Library (.NET Framework) project \" (#12481) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.6.0.44\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a C# Class Library (.NET Framework) project in VS.  \r\n\r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.  \r\n\r\n3. Click settings button (top-right of right panel), check \"Allow format selection on first package install\" in \"General\" tab and click “OK” button.  \r\n\r\n4. Go to \"Browse\" tab, select a package (for example \"Newtonsoft.Json\") and click install button. \r\n\r\n5. Check \"packages.config\" in \"Choose NuGet Package Manager Format\", click “OK” button and click “OK” button in the \"Preview Changes\" window. \r\n\r\n#### Expected:    \r\n\r\nThe package should be installed successfully. \r\n\r\n#### Actual:    \r\n\r\nVS crashed when installing a package with “package config” format as below screenshot:  \r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/84695155/224635331-5e98a8aa-c3e0-48bb-9088-b978387a855a.png)\r\n#### Notes: \r\n\r\n1.It doesn’t repro on VS Main\\33508.150 + NuGet Client Dev\\6.6.0.43 \r\n\r\n2.It still reproes when using PMC install package. \r\n\r\n3.The repro rate is 100%. \r\n\r\n4.Added dump file to this path(\\\\\\mlangfs1\\public\\v-cicili\\Bug0313).\r\n\r\n### Verbose Logs:\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.AccessViolationException\r\n   at VSLangProj157.References3.AddFiles(System.Array, System.Array ByRef)\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem+<>c__DisplayClass76_0+<<AddReferenceAsync>b__0>d.MoveNext()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at Microsoft.VisualStudio.Threading.JoinableTaskFactory+SingleExecuteProtector.TryExecute()\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\r\n```\r\n"},{"Id":"27721702650","Type":"IssuesEvent","CreatedAt":"2023-03-14T21:12:16","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11748","RelatedDescription":"Closed issue \"[Bug]: Unexpected NU1008 errors\" (#11748) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\nVS Internal Previews\r\n\r\n### Worked before?\r\n\r\n17.2 Preview 3\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Workaround\r\nRestore from the command-line before building in Visual Studio\r\n\r\n### Repro Steps & Context\r\n\r\n1. Install internal preview of VS\r\n2. Clone our repo (not public, so can't link - I can provide directly if needed - but it is a solution with 5 SDK-style .NET Framework projects)\r\n3. Open the project in VS\r\n4. Build\r\n\r\nExpected: Builds fine\r\n\r\nActual:\r\n\r\nOne project shows the error\r\n\r\n> NU1008: Projects that use central package version management should not define the version on the PackageReference items, but on the PackageVersion items: `<long list of all packages the project references>`\r\n\r\nWe do use CPVM, but we have NO PackageReferences that specify the version - they're only specified on the PackageVersion items.\r\n\r\nLooking at the package.assets file for the project in question is a little interesting. The project is correctly listed as `\"centralPackageVersionsManagementEnabled\": true`, but in the project/frameworks/net472/dependencies section, all of the dependencies look like this:\r\n\r\n```\r\n\"IsExternalInit\": {\r\n  \"suppressParent\": \"All\",\r\n  \"target\": \"Package\",\r\n  \"version\": \"(, )\"\r\n},\r\n```\r\n\r\nnote the empty version. \r\n\r\nOpening the exact same source from the same location on disk on the same machine with 17.2 Preview 3 and building works fine.\r\nBuilding with msbuild /r (using the version of msbuild that ships with the internal preview of VS) also works fine.\r\n\r\nAt one point in testing this, one of the other 4 projects in the solution showed the same error as well. While trying to debug and cleaning the project, wiping bin/obj, etc, the error on that project went away, leaving just this one doing it consistently.\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":23,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-03-16T03:30:25.358649Z","RunDurationInMilliseconds":1542}