{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29543702529","Type":"PullRequestEvent","CreatedAt":"2023-06-05T19:36:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9520","RelatedDescription":"Opened pull request \"Readme table style\" (#9520) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nrender readme table more pretty with word warp setting.\r\n\r\n![Screenshot 2023-06-05 123258](https://github.com/NuGet/NuGetGallery/assets/64443925/605733f0-329d-49cf-acca-e88f7cd7486d)\r\n\r\n[rec-screen (2).webm](https://github.com/NuGet/NuGetGallery/assets/64443925/bf9db3a6-3c6e-4bca-b857-c351f8fe0bdd)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9518"},{"Id":"29500638457","Type":"IssuesEvent","CreatedAt":"2023-06-02T21:20:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9252","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Add caniuse images via bitsofco.de to trusted image domains\" (#9252) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWe are offering Blazor wrapper packages for different web APIs. There is a great service called caniuse.com that shows the availability of a particular API on different platforms. Ire Aderinokun offers a service that shows the caniuse.com status data and MDN compat data in a (static) image, e.g.:\r\n\r\nhttps://caniuse.bitsofco.de/image/async-clipboard.png → https://res.cloudinary.com/ireaderinokun/image/upload/v1663850793397/caniuse-embed/all/async-clipboard.png\r\n\r\n![](https://caniuse.bitsofco.de/image/async-clipboard.png)\r\n\r\nThus, I'd like to suggest adding either `caniuse.bitsofco.de` or the resolved version `res.cloudinary.com/ireaderinokun/*/caniuse-embed/all/*.png` to the allowlist.\n\n### Repro Steps\n\nStatus image is currently not shown:\r\n\r\n- https://www.nuget.org/packages/Thinktecture.Blazor.AsyncClipboard\r\n- https://www.nuget.org/packages/Thinktecture.Blazor.WebShare\n\n### Expected Behavior\n\nStatus image is shown.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29474307163","Type":"IssuesEvent","CreatedAt":"2023-06-01T20:43:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9519","RelatedDescription":"Opened issue \"[NuGet.org Bug]: \"Minimum NuGet Client Version\" field is empty in package metadata preview\" (#9519) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWhen a package is uploaded specifying [`minClientVersion`](https://learn.microsoft.com/en-us/nuget/reference/nuspec#minclientversion) metadata attribute it seems there is an attempt to surface the value in the confirmation page after package upload, but the value is not printed under the header.\n\n### Repro Steps\n\n1. Make a package with a valid value of `minClientVersion` metadata attribute (`6.0` for example).\r\n2. Try uploading it through web UI.\r\n3. Observe empty line after \"Minimum NuGet Client Version\" header under \"Verify\"\n\n### Expected Behavior\n\nAn actual version displayed.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/102933/69a4cb47-fd50-4f53-99aa-b40900ac8eb2)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29472503422","Type":"IssuesEvent","CreatedAt":"2023-06-01T19:16:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9146","RelatedDescription":"Closed issue \"[Feature]: Increase the page size of the V3 catalog\" (#9146) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nCurrently, the V3 catalog on NuGet.org has a page size of 550. This has served us well for many years but, as the protocol demands, the catalog is append only so the catalog `index.json` will only grow as the number of catalog leaves accumulates. To slow down the `index.json` growth rate we can increase the page size.\r\n\r\nThis will give us more time to plan a fully scalable solution (e.g. https://github.com/NuGet/NuGetGallery/issues/7787).\r\n\r\nThe downloads.v1.json file is over 100 MB and still parses fine but the difference here is that the catalog index.json may be downloaded much more frequently (to poll for catalog commits). A smaller file is better.\n\n### The Elevator Pitch\n\nWe should add the ability to configure the page size. It's a .NET constant right now of 550. We should increase it to a larger size. The value of 1650 seems to be working just fine in DEV for several weeks\n\n### Additional Context and Details\n\nWe have an internal discussion [on Teams](https://teams.microsoft.com/l/message/19:d10cd9192de2492986fba3baeea3093c@thread.skype/1652468991222?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=ad34ac55-6785-4e7c-82c3-7ba405d30c3c&parentMessageId=1652468991222&teamName=NuGet&channelName=Server&createdTime=1652468991222).\r\n\r\nThe index.json size over time is here:\r\n![image](https://user-images.githubusercontent.com/94054/174692360-048bc4e8-dc22-4a77-8acb-cc511f156bab.png)\r\n(y = bytes, x = month)\r\n\r\nWe already have several jumbo pages from deprecations:\r\nPageUrl | LeafCount | max_CommitTimestamp\r\n-- | -- | --\r\nhttps://api.nuget.org/v3/catalog0/page9598.json | 1728 | 2020-02-09 13:04:53.7647929\r\nhttps://api.nuget.org/v3/catalog0/page10769.json | 1183 | 2020-08-20 19:28:36.8641381\r\nhttps://api.nuget.org/v3/catalog0/page10770.json | 1134 | 2020-08-20 19:29:20.2945851\r\nhttps://api.nuget.org/v3/catalog0/page12124.json | 997 | 2021-03-12 10:27:09.9984875\r\nhttps://api.nuget.org/v3/catalog0/page10857.json | 839 | 2020-09-03 13:35:37.7371129\r\n\r\nThe change in index.json MoM (month over month) is here:\r\n![image](https://user-images.githubusercontent.com/94054/174692474-68b819e8-9203-4ca1-b085-cd5e0c13eb69.png)\r\n"},{"Id":"29472494639","Type":"IssuesEvent","CreatedAt":"2023-06-01T19:15:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9504","RelatedDescription":"Closed issue \"[NuGet.org Bug]: 404 reason phrase is not properly returned for package unlist\" (#9504) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nThe reason phrase we configure in gallery for API 404 responses is clobbered by our default pretty 404 error page. As you can see this just has the default \"Not found\" here:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/ce926e92-58c5-40f1-84db-570b27494110)\r\n\r\nIt should be showing this string:\r\nhttps://github.com/NuGet/NuGetGallery/blob/912cd3bd73432f6edf8a9e20106d3cc635ca99df/src/NuGetGallery/Controllers/ApiController.cs#L876-L877\r\n\r\nOther status codes like 400 work properly.\n\n### Repro Steps\n\nTry to unlist a package using `nuget.exe delete` that does not exist and check the error response. It just says \"not found\" not a full message.\r\n\r\nIt says `Response status code does not indicate success: 404 (Not Found).`\n\n### Expected Behavior\n\nIt should say `\"Response status code does not indicate success: 404 (A package with ID 'does-not-exist' and version '1.0.0' does not exist.).\"`\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29338556594","Type":"IssuesEvent","CreatedAt":"2023-05-26T12:11:45","Actor":"dscheg","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9518","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Table in README markdown looks ugly due to word wrap that breaks words\" (#9518) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n1. Table in README markdown looks ugly if some column contains a long text due to word wrap that breaks words in other columns even inside the inline code block. Compare rendered tables: Nuget https://www.nuget.org/packages/GlobRegex vs Github https://github.com/dscheg/GlobRegex\r\nGithub markdown looks good even on narrow screens. CSS to fix issue:\r\n```css\r\n.readme-common .table {\r\n  overflow: auto;\r\n  display: block;\r\n  word-break: normal;\r\n}\r\n```\r\n\r\n2. It might be better to have a horizontal scroll and turn off word wrap inside multiline code blocks, because it seems such code is hard to read, given that there are no line numbers and display of hyphens: it is not always clear whether the EOL is in the code itself or word wraping has been applied. The same example links above. CSS to fix issue: `pre code { white-space: pre; }` instead of `pre code { white-space: pre-wrap; }`\r\n\n\n### Repro Steps\n\nCreate readme for the package with:\r\n1. Table with 3 columns with a long text inside the middle column\r\n2. Multiple long lines inside multiline code block\n\n### Expected Behavior\n\n1. Table looks good even with long text in some column\r\n2. Multiline code blocks are easy to read even with long lines\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/1962268/513789fc-7d62-452b-9a10-e2e6607af536)\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29298313034","Type":"IssuesEvent","CreatedAt":"2023-05-24T23:50:39","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9517","RelatedDescription":"Opened issue \"[NuGet.org Bug]: [Admin UI] Show number of package versions that have been selected in the Admin Unlist UI\" (#9517) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWhen we have to unlist many package versions at once, we often need to break it up into smaller batches. Showing the number of package versions that have been selected in the bulk unlist UI would help me do a better job of batch-sizing.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/2aacb376-6d0d-44c0-bc21-c5d442bcf831)\r\n\r\nWe could even add the ability to select the first 'X' <unlisted/listed> package versions to help with this.\n\n### Repro Steps\n\n1. Go to the Bulk Unlist UI in the Admin Panel\r\n2. Enter names of packages you need to unlist\r\n3. Scroll down\n\n### Expected Behavior\n\n1. Show how many package versions have been selected (possibly in the button text)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/2aacb376-6d0d-44c0-bc21-c5d442bcf831)\r\n\r\n2. Add the ability to select the first 'X' <unlisted/listed> package versions among those shown.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29293556712","Type":"PullRequestEvent","CreatedAt":"2023-05-24T19:00:17","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9501","RelatedDescription":"Merged pull request \"[2FA] Avoid new accounts coming to the Register page.\" (#9501) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Add `noindex` for `Register` (signup) and `SignInNugetAccount` (LogOnNuGetAccount) to avoid displaying them on search engines\r\n* `SignUp` (/users/account/signup) page now redirects to `Sign In`.\r\n* `LegacyRegister` (/account/register) page now redirects to `Sign In`.\r\n* `Register` POST endpoint redirects to `Sign In` when it has a password registration and 2FA enforcement flag is turned.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4768"},{"Id":"29270036909","Type":"IssuesEvent","CreatedAt":"2023-05-24T01:17:35","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9516","RelatedDescription":"Opened issue \"Remove unused 'OrganizationsEnabledForAll' file in blob storage\" (#9516) at NuGet/NuGetGallery","RelatedBody":"'OrganizationsEnabledForAll' property was removed  5 years ago.\nhttps://github.com/NuGet/NuGetGallery/pull/5822/files\n\nHowever, this property is still in Login-Discontinuation-Configuration.json, it throws exceptions when initialization loginconfiguration.\n\n "},{"Id":"29266406334","Type":"PullRequestEvent","CreatedAt":"2023-05-23T20:49:21","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9515","RelatedDescription":"Merged pull request \"[ReleasePrep][2023.05.23]RI of dev into main\" (#9515) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29549318693","Type":"IssuesEvent","CreatedAt":"2023-06-06T02:00:13","Actor":"DevPaulLiu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12631","RelatedDescription":"Opened issue \"ETW events should use default '/' instead of '_'\" (#12631) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nN/A\n\n### Worked before?\n\nN/A\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nThere is an issue in performance tests, not sure if this impact any of NuGet telemetry monitors.\r\n\r\nAs per David Kean:\r\nWe should avoid converting event/property names in ETW provider\r\nThis is allocating a lot during solution close and other places where lots of events are being produced, which is causing GCs to occur in some runs, introducing noise. The statement that says ETW events can't have '/' seems to be incorrect, as Windows, VS & .NET all include events with '/'. Also stopped converting properties as these are raw strings.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29540821779","Type":"IssuesEvent","CreatedAt":"2023-06-05T17:18:04","Actor":"Erarndt","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12630","RelatedDescription":"Opened issue \"Parsing NuGetVersion causes significant GC pressure\" (#12630) at NuGet/Home","RelatedBody":"The code that parses NuGetVersion from strings indirectly uses .NET's Version.TryParse to parse the version portion of the string. When a typical restore can be thousands upon thousands of NuGetVersion objects floating around, this API on .NET Framework is not good enough as it indirectly uses String.Split under the covers and is very inefficient."},{"Id":"29534705598","Type":"IssuesEvent","CreatedAt":"2023-06-05T13:30:37","Actor":"YuliiaKovalova","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12629","RelatedDescription":"Opened issue \"Add support for batch \"Add a reference to a project file\" invocation\" (#12629) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nHi Nuget Team,\r\n\r\nTemplate Engine crew sees increased demand for Cental Package Management Support:\r\nhttps://github.com/dotnet/templating/issues/6187\r\nhttps://github.com/dotnet/aspnetcore/issues/48569\r\n\r\nCurrently, it is possible to resolve the version correctly through [post-action](https://github.com/dotnet/templating/blob/38c5d772825ee580cd646e32936cba82c3095bb3/docs/Post-Action-Registry.md#add-a-reference-to-a-project-file). It is a wrapper around your functionality.\r\n\r\nAs we can see, there is no support for specifying a set of project links, so users need to specify dependencies one by one in post actions (e.g. [add reference](https://github.com/dotnet/templating/issues/6187#:~:text=csproj%22%20%7D%0A%20%20%5D%2C%0A%20%20%22defaultName%22%3A%20%22TestProject1%22%2C-,%22postActions%22%3A%20%5B,-%7B%0A%20%20%20%20%20%20%22description%22%3A%20%22Adding%20Reference)).\r\n\r\nOnce you extend your API, we can utilize it for supporting batch \"add reference\" operations.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-06-06T03:30:22.9350544Z","RunDurationInMilliseconds":1054}