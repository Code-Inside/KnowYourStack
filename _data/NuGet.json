{"Data":{"Blog":{"FeedItems":[{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14214492991","Type":"PullRequestEvent","CreatedAt":"2020-11-17T05:23:20","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8322","RelatedDescription":"Closed pull request \"scroll ui\" (#8322) at NuGet/NuGetGallery","RelatedBody":"Not ready for review. "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14214057971","Type":"IssuesEvent","CreatedAt":"2020-11-17T04:11:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10257","RelatedDescription":"Closed issue \"Breaking change in package.lock.json\" (#10257) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.8.0.6930\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 v20H2\r\n\r\nWorked before? If so, with which NuGet version: Yes, in version 5.5.1.6542\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create an empty console application targetting .NET Framework 4.7.2\r\n2. Install a nuget package (like Newtonsoft.Json)\r\n3. Enable package restore using lock file in csproj\r\n\r\n```\r\n<PropertyGroup>\r\n  <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>\r\n</PropertyGroup>\r\n```\r\n\r\n4. Get the nuget.exe client for both versions listed above (5.5.1.6542 and 5.8.0.6930). Run `nuget restore` in the solution. The packages.lock.json files generated will be different.\r\n\r\nFor 5.5.1.6542, I get this:\r\n``` json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \".NETFramework,Version=v4.7.2\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[12.0.3, 12.0.3]\",\r\n        \"resolved\": \"12.0.3\",\r\n        \"contentHash\": \"6mgjfnRB4jKMlzHSl+VD+oUc1IebOZabkbyWj2RiTgWwYPPuaK1H97G1sHqGwPlS5npiF5Q0OrxN1wni2n5QWg==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nFor 5.8.0.6930, I get this:\r\n\r\n``` json\r\n{\r\n  \"version\": 1,\r\n  \"dependencies\": {\r\n    \"Any,Version=v0.0\": {\r\n      \"Newtonsoft.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[12.0.3, 12.0.3]\",\r\n        \"resolved\": \"12.0.3\",\r\n        \"contentHash\": \"6mgjfnRB4jKMlzHSl+VD+oUc1IebOZabkbyWj2RiTgWwYPPuaK1H97G1sHqGwPlS5npiF5Q0OrxN1wni2n5QWg==\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAs a consequence, restoring an existing project using locked mode in 5.8.0.6930 is resulting in failures, which broke our Azure Devops pipelines. "},{"Id":"14213531996","Type":"IssuesEvent","CreatedAt":"2020-11-17T02:47:52","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6945","RelatedDescription":"Closed issue \"Package Integrity check performed (and reported) twice\" (#6945) at NuGet/Home","RelatedBody":"When installing a tampered package, the error list, and the output window, report the error twice:\r\n\r\n![image](https://user-images.githubusercontent.com/14916339/40194592-d896240a-59bf-11e8-94c0-63eb7c85641d.png)\r\n\r\n```\r\nRestoring packages for c:\\users\\rmpablos\\source\\repos\\WpfApp1\\WpfApp1\\WpfApp1.csproj...\r\nInstalling System.Rido 1.0.2.\r\nSignature Hash Algorithm: SHA256\r\nNU3008: The package integrity check failed.\r\nSignature type: Author\r\nVerifying the author primary signature with certificate: \r\n  Subject Name: CN=Ricardo Minguez, O=Ricardo Minguez, L=Redmond, S=Washington, C=US\r\n  SHA1 hash: 3C9C6F5A99400288E01B659FE248CDF49648631B\r\n  SHA256 hash: 2D38BEE7044F7F1561A3B5AED0496998F5B4F9172122EC43D110368351207F23\r\n  Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 8/29/2017 5:00:00 PM to 9/6/2018 5:00:00 AM\r\n\r\nTimestamp: 3/21/2018 4:38:38 PM\r\n\r\nVerifying author primary signature's timestamp with timestamping service certificate: \r\n  Subject Name: CN=DigiCert SHA2 Timestamp Responder, O=DigiCert, C=US\r\n  SHA1 hash: 400191475C98891DEBA104AF47091B5EB6D4CBCB\r\n  SHA256 hash: FC834D5BFFDE31DBA5B79BF95F573F7953BCBF9156E8525163E828EB92EA8A93\r\n  Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 1/3/2017 4:00:00 PM to 1/17/2028 4:00:00 PM\r\n\r\nInstalling System.Rido 1.0.2.\r\nSignature Hash Algorithm: SHA256\r\nNU3008: The package integrity check failed.\r\nSignature type: Author\r\nVerifying the author primary signature with certificate: \r\n  Subject Name: CN=Ricardo Minguez, O=Ricardo Minguez, L=Redmond, S=Washington, C=US\r\n  SHA1 hash: 3C9C6F5A99400288E01B659FE248CDF49648631B\r\n  SHA256 hash: 2D38BEE7044F7F1561A3B5AED0496998F5B4F9172122EC43D110368351207F23\r\n  Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 8/29/2017 5:00:00 PM to 9/6/2018 5:00:00 AM\r\n\r\nTimestamp: 3/21/2018 4:38:38 PM\r\n\r\nVerifying author primary signature's timestamp with timestamping service certificate: \r\n  Subject Name: CN=DigiCert SHA2 Timestamp Responder, O=DigiCert, C=US\r\n  SHA1 hash: 400191475C98891DEBA104AF47091B5EB6D4CBCB\r\n  SHA256 hash: FC834D5BFFDE31DBA5B79BF95F573F7953BCBF9156E8525163E828EB92EA8A93\r\n  Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 1/3/2017 4:00:00 PM to 1/17/2028 4:00:00 PM\r\n\r\nPackage restore failed. Rolling back package changes for 'WpfApp1'.\r\nTime Elapsed: 00:00:00.7048492\r\n========== Finished ==========\r\n```"},{"Id":"14212662748","Type":"IssuesEvent","CreatedAt":"2020-11-17T00:36:58","Actor":"sylvesp","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10289","RelatedDescription":"Opened issue \"Nuget 5.8.0.6930 cannot handle projects that support multiple .net framework versions\" (#10289) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): Nuget 5.8.0.6930\r\n\r\nWorked before? If so, with which NuGet version: 5.7\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a .net .vcsproj project that supports multiple .net framework versions\r\n\r\n2. Try to have the project build on Azure Devops with the latest version of Nuget\r\n\r\nThe build will fail with the error:\r\n`\r\n##[error]The nuget command failed with exit code(1) and error(Invalid restore input. Duplicate frameworks found: 'net472, net472'. Input files: D:\\a\\1\\s\\Product\\Source\\BIMrxCommon\\Microdesk.BIMrxCommon.DbApp\\Microdesk.BIMrxCommon.DbApp.csproj.\r\n`\r\n...\r\n\r\n## Other suggested things\r\nOn this past Monday 09/11/2020 all our builds on Azure Devops started failing.\r\nThe error message we did get was\r\n##[error]The nuget command failed with exit code(1) and error(Invalid restore input. Duplicate frameworks found: 'net472, net472'. Input files: D:\\a\\1\\s\\Product\\Source\\BIMrxCommon\\Microdesk.BIMrxCommon.DbApp\\Microdesk.BIMrxCommon.DbApp.csproj.\r\n\r\nThe version of nuget used by Azure was: NuGet version 5.8.0.6930\r\n** After forcing the build script to use Nuget 5.7 the problems did disappear. **\r\nIt looks that the latest nuget version has problems with projects that support multiple .net framework versions\r\n\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nTo reproduce, probably it is enough to add the following code to your project:\r\n`\r\n<PropertyGroup> \r\n  <TargetFrameworks>net472;net48</TargetFrameworks> \r\n</PropertyGroup>\r\n`\r\n\r\n[NugetLog5.8.zip](https://github.com/NuGet/Home/files/5550498/NugetLog5.8.zip)\r\n\r\n"},{"Id":"14212402006","Type":"IssuesEvent","CreatedAt":"2020-11-16T23:59:53","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9935","RelatedDescription":"Reopened issue \"PM UI:  not automatically closed when project removed\" (#9935) at NuGet/Home","RelatedBody":"If PM UI is open for a project when you remove the project from Solution Manager, PM UI will no longer be closeable.\r\n\r\n1.  In a remote session, open a solution with a project.\r\n2.  Open PM UI for that project.\r\n3.  In Solution Explorer right-click on the project and select Remove.\r\n\r\nExpected result:  when the project is removed, PM UI should automatically close.\r\n\r\nActual result:  PM UI does not automatically close.  Also, PM UI cannot be closed at this point."},{"Id":"14212400950","Type":"IssuesEvent","CreatedAt":"2020-11-16T23:59:43","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9935","RelatedDescription":"Closed issue \"PM UI:  not automatically closed when project removed\" (#9935) at NuGet/Home","RelatedBody":"If PM UI is open for a project when you remove the project from Solution Manager, PM UI will no longer be closeable.\r\n\r\n1.  In a remote session, open a solution with a project.\r\n2.  Open PM UI for that project.\r\n3.  In Solution Explorer right-click on the project and select Remove.\r\n\r\nExpected result:  when the project is removed, PM UI should automatically close.\r\n\r\nActual result:  PM UI does not automatically close.  Also, PM UI cannot be closed at this point."},{"Id":"14212139544","Type":"IssuesEvent","CreatedAt":"2020-11-16T23:22:41","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10288","RelatedDescription":"Opened issue \"Cannot open Tools | Options... | NuGet Package Manager | Package Sources before anything else\" (#10288) at NuGet/Home","RelatedBody":"Repro steps:\r\n\r\n1.  Launch Visual Studio.\r\n2.  Navigate on the main menu to Tools | Options... | NuGet Package Manager | Package Sources.\r\n\r\nResult:  The page will fail to load."},{"Id":"14211625952","Type":"IssuesEvent","CreatedAt":"2020-11-16T22:21:05","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10278","RelatedDescription":"Closed issue \".NET 5 change in behavior around transitive packages\" (#10278) at NuGet/Home","RelatedBody":"Hello NuGet team 👋\r\n\r\nWe spotted a change in behavior between `netcoreapp3.1` and `net5.0` when restoring a package as a transitive dependency, and it having msbuild imports.\r\n\r\nhttps://github.com/shouldly/shouldly/issues/717\r\n\r\nWe have fixed it, and tbh it looks like it should never have worked 😄  I was wondering if this change in behavior is excepted and as a result of something?"},{"Id":"14210110935","Type":"IssuesEvent","CreatedAt":"2020-11-16T19:53:45","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6411","RelatedDescription":"Closed issue \"More verbose output for verification in VS\" (#6411) at NuGet/Home","RelatedBody":"Restoring signed packages do not show the complete log (as NuGet.exe verify) even with verbosity detailed.\r\n\r\nWhen MSBuild logging verbosity is set to detailed, the restore log should show the signature and timestamp information. It should be similar information as nuget verify without trust information.\r\n\r\n"},{"Id":"14209294090","Type":"IssuesEvent","CreatedAt":"2020-11-16T18:37:20","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10153","RelatedDescription":"Closed issue \"Triage PM UI issues for Quality Month\" (#10153) at NuGet/Home","RelatedBody":"Come up with a plan for Quality Month"},{"Id":"14209218553","Type":"IssuesEvent","CreatedAt":"2020-11-16T18:30:17","Actor":"TomGrube","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10287","RelatedDescription":"Opened issue \"Unable to download from api.nuget.org\" (#10287) at NuGet/Home","RelatedBody":"For months we've been able to successfully download NuGet packages when building our projects.  Starting on 11/13/2020, we started receiving the errors listed below and are unable to complete a build.  Our network provider said the calls are leaving our network but are getting rejected.  Any help would be appreciated.\r\n\r\nRetrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.openapi/index.json'.\r\n   The SSL connection could not be established, see inner exception.\r\n     Unable to read data from the transport connection: Connection reset by peer.\r\n     Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/google.protobuf/index.json'.\r\n   The SSL connection could not be established, see inner exception.\r\n     Unable to read data from the transport connection: Connection reset by peer.\r\n     Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.configuration.json/index.json'.\r\n   Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/serilog/index.json'.\r\n   The SSL connection could not be established, see inner exception.\r\n     Unable to read data from the transport connection: Connection reset by peer.\r\n     Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/dbup-core/index.json'.\r\n   An error occurred while sending the request.\r\n     Unable to read data from the transport connection: Connection reset by peer.\r\n     Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.configuration.commandline/index.json'.\r\n   The SSL connection could not be established, see inner exception.\r\n     Unable to read data from the transport connection: Connection reset by peer.\r\n     Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/google.protobuf/index.json'.\r\n   Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/microsoft.extensions.dependencyinjection/index.json'.\r\n   The SSL connection could not be established, see inner exception.\r\n     Unable to read data from the transport connection: Connection reset by peer.\r\n     Connection reset by peer\r\n   Retrying 'FindPackagesByIdAsync' for source 'https://api.nuget.org/v3-flatcontainer/xunit.runner.visualstudio/index.json'.\r\n   Connection reset by peer\r\n"},{"Id":"14207138103","Type":"IssuesEvent","CreatedAt":"2020-11-16T15:47:22","Actor":"marcin-krystianc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10286","RelatedDescription":"Opened issue \"Restore: improve performance by avoiding linear search in the implementation of the \"Nearest wins\" rule\" (#10286) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI think that the current implementation of [nearest wins](https://docs.microsoft.com/en-us/nuget/concepts/dependency-resolution#nearest-wins ) rule can be improved so it has better performance.\r\n\r\nEach time the graph walking algorithm is about to visit a child node (a dependency of a node) it checks whether that child node is not eclipsed or downgraded by any of the dependencies of parent nodes (direct and transitive). If a node is being ignored then all remaining dependencies on that branch of the graph are also ignored which is the key benefit of the \"nearest wins\" rule.\r\nBut, when we look closer at the [code](https://github.com/NuGet/NuGet.Client/blob/51266bcd0587e677e0bf942f99dd8c64f9de89ac/src/NuGet.Core/NuGet.DependencyResolver.Core/Remote/RemoteDependencyWalker.cs#L242) we can spot that it is implemented using linear search which is potentially bad for performance:\r\n```\r\nprivate Func<LibraryRange, (DependencyResult dependencyResult, LibraryDependency conflictingDependency)> ChainPredicate(Func<LibraryRange, (DependencyResult dependencyResult, LibraryDependency conflictingDependency)> predicate, GraphNode<RemoteResolveResult> node, LibraryDependency dependency)\r\n{\r\n\tvar item = node.Item;\r\n\r\n\treturn library =>\r\n\t{\r\n\t\tif (StringComparer.OrdinalIgnoreCase.Equals(item.Data.Match.Library.Name, library.Name))\r\n\t\t{\r\n\t\t\treturn (DependencyResult.Cycle, null);\r\n\t\t}\r\n\r\n\t\t//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\t\t// LINEAR SEARCH\r\n\t\t//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\t\tforeach (var d in item.Data.Dependencies)\r\n\t\t{\r\n\t\t\tif (d != dependency && library.IsEclipsedBy(d.LibraryRange))\r\n\t\t\t{\r\n\t\t\t\tif (d.LibraryRange.VersionRange != null &&\r\n\t\t\t\t\tlibrary.VersionRange != null &&\r\n\t\t\t\t\t!IsGreaterThanOrEqualTo(d.LibraryRange.VersionRange, library.VersionRange))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn (DependencyResult.PotentiallyDowngraded, d);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (DependencyResult.Eclipsed, d);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn predicate(library);\r\n\t};\r\n}\r\n```\r\nOn the flip side, linear search is not always worse than a dictionary lookup - it all depends on the average number elements the linear search needs to go through. For narrow graphs, i.e. graphs where average number of dependencies of each node is low, the linear search can be equally fast or even outperform the dictionary lookup. Thus any change in this area needs to be well benchmarked using a representative set of solutions.\r\n"},{"Id":"14206876865","Type":"IssuesEvent","CreatedAt":"2020-11-16T15:28:17","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10285","RelatedDescription":"Opened issue \"VS2019 Nuget Package Manager can not show Project Name, but relative path of .csproj file.\" (#10285) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/VS2019-Nuget-Package-Manager-can-not-sho/618165)._\n\n---\nIDE: **Visual Studio 2019 16.1.3**\nNuGet **Package Manager: 5.1.0**\nPlatform: **C#, .Net Framework 4.8**\n\n### What:\nThe Nuget Package Manager can not show the name of Project, but the relative path of *.csproj file, just like in my screenshot.\n**Specially, only projects which using PackageReference display this relative path of file, and projects using packages.config display project's name normally.**\nI don't know whether it's a bug or feature.\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/24/2019, 02:27 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 8/7/2019, 06:34 PM: \n\nWe want to let you know that this problem will likely be closed in 60 days. We set priority based on severity, similar reports, and the overall impact on users and scenarios. We've also learned that reports without fresh activity could indicate that the problem isn't a problem anymore. One of our goals is to give you more transparency around these decisions as resolving every problem that gets reported isn't always possible. Your feedback is essential for helping us decide what needs the most attention, so please keep upvoting and commenting if you think that we need to make this a higher priority .\n#### Feedback Bot on 3/31/2020, 05:41 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14206604011","Type":"IssuesEvent","CreatedAt":"2020-11-16T15:08:36","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10284","RelatedDescription":"Opened issue \"Error: The Package Manager Console requires PowerShell 2.0 runtime, which is not detected on this machine.\" (#10284) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Error:-The-Package-Manager-Console-requi/594211)._\n\n---\nAs it seems, the issue fixed in VS 2017 still persists in VS 2019. The package manager still shows the error of a missing Powershell installation. As I am running on Windows 10, having PowerShell 5 as default, this is odd. Also: My VS2017 installation did not have the issue on the same machine and installation.\n\nI also installed the latest PowerShell built (6.2.1) with the same result.\nPowershell has been ticked in the Windows Features, as well.\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/4/2019, 02:50 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 8/7/2019, 06:33 PM: \n\nWe want to let you know that this problem will likely be closed in 60 days. We set priority based on severity, similar reports, and the overall impact on users and scenarios. We've also learned that reports without fresh activity could indicate that the problem isn't a problem anymore. One of our goals is to give you more transparency around these decisions as resolving every problem that gets reported isn't always possible. Your feedback is essential for helping us decide what needs the most attention, so please keep upvoting and commenting if you think that we need to make this a higher priority .\n#### Feedback Bot on 3/31/2020, 05:36 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n#### jdewane1 on 5/11/2020, 02:04 PM: \n\n<p>Any resolution to this issue?  I'm currently experiencing this issue in VS 2019.</p>\n\n\n---\n### Original Solutions\n\n#### Kai Opitz solved on 6/5/2019, 00:59 AM, 0 votes: \n\n<p>As I just see, the problem can be worked around, if you start Visual Studio as administrator. As this was not needed in VS 2017, I suspect a different handling of user rights in the new version.</p><p>But as said, this should only be a work around, not a real solution.</p>\n"},{"Id":"14206530227","Type":"IssuesEvent","CreatedAt":"2020-11-16T15:03:10","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10283","RelatedDescription":"Opened issue \"Can't minimize VS 2019, when Nugat Package Console is active\" (#10283) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Cant-minimize-VS-2019-when-Nugat-Packa/657195)._\n\n---\nWhen multiple package updates are active and I try to minimize Visual Studio the application get automatically the focus back.\nSo I'm not able to continue working on other topics, while waiting for the Nuget Package Updates.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/23/2019, 02:27 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 10/8/2019, 02:22 AM: \n\nI have detected that for the last 35 days, this issue didn't have any product team activity and a very small amount of new votes or comments.&nbsp;Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Feedback Bot on 3/31/2020, 05:37 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14206305440","Type":"IssuesEvent","CreatedAt":"2020-11-16T14:47:09","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10282","RelatedDescription":"Opened issue \"Application.exe.config being overwritten during build\" (#10282) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Applicationexeconfig-being-overwritten/610276)._\n\n---\nDuring the build of our application, app.config gets copied to &lt;application&gt;.exe.config, this is then overwritten with a binding redirect. \n This is only happening on two out of four machines, on two it builds as normal, copying the app.config file to &lt;application&gt;.exe.config. On the other two, &lt;application&gt;.exe.config just contains a binding redirect after the application has built.\n We have narrowed it down to the reference of an external dependency, when the use of this dependency is removed, the app.config is copied correctly on build.\n Is this a Visual Studio setting that is trying to put in a binding redirect, as it can't find the correct version of the dependency? (I have tried disabling auto binding redirect, it didn't work)\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/18/2019, 02:53 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Jin Zhao [MSFT] on 6/19/2019, 01:36 AM: \n\n<p>Thank you for your feedback! For us to investigate this further, could you provide more details:</p><ol><li>what's the contain in you app.config?</li><li>What external dependence is reference in your project, how it used?</li></ol><p>It will be better if you can provide your repro solution. </p><p>We look forward to hearing from you!</p>\n\n#### Caillin Spain on 6/19/2019, 02:26 AM: \n\n<ol>\n<li>what is contained in your app.config?</li></ol><p>   The app.config contains required dependency versions which are used in checks on application boot. When it is overwritten, it is overwritten with a binding redirect for a dependency which our application uses. </p><p>2.What external dependencies are referenced in your project, how are they used?</p><p>The dependency that the binding redirect is for is Newtonsoft, it is used by our application and also by another third party dependency, which we use in our app.</p><p>Is there a setting in Visual Studio to add auto binding redirects, other than the setting in the csproj, as I have disabled that.</p>\n\n#### Feedback Bot on 6/19/2019, 07:25 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Jin Zhao [MSFT] on 6/19/2019, 07:25 PM: \n\n(private comment, text removed)\n#### dan.carter on 7/4/2019, 07:46 AM: \n\n<p>Any update on this? I'm getting exactly the same behaviour in VS2019. On my machine the config file in the bin\\Debug\\ does not match the app.config file in the project, but this is not happening for my colleages on the same solution.</p>\n\n#### Feedback Bot on 8/7/2019, 06:34 PM: \n\nWe want to let you know that this problem will likely be closed in 60 days. We set priority based on severity, similar reports, and the overall impact on users and scenarios. We've also learned that reports without fresh activity could indicate that the problem isn't a problem anymore. One of our goals is to give you more transparency around these decisions as resolving every problem that gets reported isn't always possible. Your feedback is essential for helping us decide what needs the most attention, so please keep upvoting and commenting if you think that we need to make this a higher priority .\n#### Caillin Spain on 9/25/2019, 07:38 AM: \n\n<p>Update: I am now using a new PC with a fresh install of Visual Studio and have all the settings as before (the same as the rest of my team) and I am still getting this issue, so that's now 3 PC's in our team with this problem. I am unable to run my application without using a nasty work around (post build step to overwrite the exe.config with the app.config contents), other people are reporting this same problem, so please continue to investigate. </p>\n\n#### Feedback Bot on 3/31/2020, 05:35 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n#### Caillin Spain on 8/27/2020, 06:14 AM: \n\n<p>Any updates? Over a year later and still getting this problem...</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14206259204","Type":"IssuesEvent","CreatedAt":"2020-11-16T14:43:43","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10281","RelatedDescription":"Opened issue \"Incorrect error message, shows a format string rather than the expanded string\" (#10281) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Incorrect-error-message-shows-a-format-/645356)._\n\n---\nWhen attempting to build a Xamarin.Forms project for Android, I get the following message. Note the {0} at the end, which is clearly intended for string. Format, but which presumably has just been used as is, rather than being used as a format string. The result is a message that is of little use, as it doesn't tell me what the missing file is.\n\nSet Property: ErrorText=This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/16/2019, 01:56 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 10/8/2019, 02:21 AM: \n\nI have detected that for the last 35 days, this issue didn't have any product team activity and a very small amount of new votes or comments.&nbsp;Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Feedback Bot on 3/31/2020, 05:45 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14206060655","Type":"IssuesEvent","CreatedAt":"2020-11-16T14:28:49","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10280","RelatedDescription":"Opened issue \"Nuget source order not changed after using the options UI to try to effect a change\" (#10280) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Nuget-source-order-not-changed-after-usi/658557)._\n\n---\nIf you use the Options UI and change a path or the boolean as to whether a particular nuget source is used, the changes are saved. However, if you reorder the paths using the up/down arrows the new order is not preserved.\n\nBTW, the 'start recording' capture does not appear to be working.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/24/2019, 01:50 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 7/31/2019, 05:04 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n#### Feedback Bot on 10/8/2019, 02:22 AM: \n\nI have detected that for the last 35 days, this issue didn't have any product team activity and a very small amount of new votes or comments.&nbsp;Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14205831754","Type":"IssuesEvent","CreatedAt":"2020-11-16T14:11:25","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10279","RelatedDescription":"Opened issue \"Nuget packages are not restored when switch from a branch to another one\" (#10279) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Nuget-packages-are-not-restored-when-swi/598462)._\n\n---\nHi,\n\nWhen I switch switch from a branch to another one with the GUI in VS 2019, the nuget packages are not restored.\n\nBruno\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/10/2019, 00:34 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 8/7/2019, 06:33 PM: \n\nWe want to let you know that this problem will likely be closed in 60 days. We set priority based on severity, similar reports, and the overall impact on users and scenarios. We've also learned that reports without fresh activity could indicate that the problem isn't a problem anymore. One of our goals is to give you more transparency around these decisions as resolving every problem that gets reported isn't always possible. Your feedback is essential for helping us decide what needs the most attention, so please keep upvoting and commenting if you think that we need to make this a higher priority .\n#### Feedback Bot on 3/31/2020, 05:36 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14205635430","Type":"IssuesEvent","CreatedAt":"2020-11-16T13:55:33","Actor":"slang25","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10278","RelatedDescription":"Opened issue \".NET 5 change in behavior around transitive packages\" (#10278) at NuGet/Home","RelatedBody":"Hello NuGet team 👋\r\n\r\nWe spotted a change in behavior between `netcoreapp3.1` and `net5.0` when restoring a package as a transitive dependency, and it having msbuild imports.\r\n\r\nhttps://github.com/shouldly/shouldly/issues/717\r\n\r\nWe have fixed it, and tbh it looks like it should never have worked 😄  I was wondering if this change in behavior is excepted and as a result of something?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-11-17T05:30:38.0192486Z","RunDurationInMilliseconds":1539}