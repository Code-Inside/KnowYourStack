{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13899806729","Type":"IssuesEvent","CreatedAt":"2020-10-19T22:45:29","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8281","RelatedDescription":"Closed issue \"[A11y][WCAG2.1]Some of the contents of API Key page get overlapped when screen is zoom to 400%.\" (#8281) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1061307\r\n​\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\nApplication URL:https://www.nuget.org/\r\nWindows Version - Windows10 \r\nEdge Version-Microsoft Edge 44.18362.449.0\r\nChrome Version- Version 79.0.3945.130 (Official Build) (64-bit)\r\n\r\nPre-requisite:\r\nSet the desktop size value to 1280 x 1024.\r\n\r\nNote:\r\nSame issue is observed in Upload packages page\r\n\r\nSteps to Reproduce :\r\n1.Launch application using provided URL.(https://www.nuget.org/)\r\n2.Navigated to Home page\r\n3.Click on “Sign in” option (top right) and click on “Sign in with Microsoft” button\r\n4.Sign in using MSA on the common Microsoft sign-in page\r\n5.Go to “API Keys” from the context menu (top left menu dropdown).\r\n6.Navigate till \"Create Control\" and expand it.\r\n7.Observe that some of the contents get overlapped when the screen is zoom to 400%.\r\n\r\nActual: \r\nWhen the screen is zoomed to 400%,  Some of the contents present on the screen get overlapped.\r\nThe below data shown in the screenshot gets overlapped after zooming the screen :\r\nImage\r\n\r\nExpected: \r\nWhen screen is zoomed to 400%, all the contents present on the screen should not get overlapped and should appear properly on the screen.\r\n\r\nUser Impact: \r\nLow vision users will find difficulty in viewing and reading the content present on the screen when zoomed to 400%.\r\n\r\nNotes:\r\nSee this screenshot:\r\n![image](https://user-images.githubusercontent.com/11051729/96502433-a0188f80-1206-11eb-89ea-6097e412051e.png)\r\n\r\n"},{"Id":"13899334579","Type":"PullRequestEvent","CreatedAt":"2020-10-19T21:47:10","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8263","RelatedDescription":"Merged pull request \"[Cookies] Expire and set the domain of Google Analytics cookies\" (#8263) at NuGet/NuGetGallery","RelatedBody":"- Expire Google Analytics cookies in a year;\r\n- Set the domain as 'none', to avoid sharing Google Analytics cookies with the status page.\r\nReferences:\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/cookies-user-id\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieDomain\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieExpires"},{"Id":"13897998965","Type":"IssuesEvent","CreatedAt":"2020-10-19T19:34:21","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8282","RelatedDescription":"Opened issue \"[A11y][WCAG2.1]Two scroll bars appears on the screen after changing the display orientation to portrait\" (#8282) at NuGet/NuGetGallery","RelatedBody":"\"Check out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.\"\r\n​\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\nApplication URL:https://www.nuget.org/\r\nWindows Version - Windows10 \r\nEdge Version-Microsoft Edge 44.18362.449.0\r\nChrome Version- Version 79.0.3945.130 (Official Build) (64-bit)\r\n\r\nPre-requisite:\r\nSet the display orientation setting to \"Portrait\"\r\nStart>Setting>System>Display Orientation.\r\n\r\nSteps to Reproduce :\r\n1.Launch application using provided URL.(https://www.nuget.org/)\r\n2. Navigate to \"Sign in\" control and hit enter.\r\n3. Navigate to \"Sign in with Microsoft\" control and hit enter.\r\n4. Select “API Keys” from the Profile Dropdown and hit enter.\r\n5. \"API Keys\" screen gets opened.\r\n6. Observe that Two scroll bars appears on the screen after changing the display orientation to the portrait.\r\n\r\nActual:\r\nTwo scroll bars appear on the screen after changing the display orientation to the portrait.\r\nSimilar issue is also observed with the following screens:\r\nAPI Keys-Create\r\nCreate-Select Packages\r\nAPI Keys-Manage\r\nManage-Edit \r\nUpload Package\r\nManage Organizations\r\nManage Organizations-Add New\r\nManage Organizations -Organizations\r\nPackages returned for json\r\n.Json-InfoSection\r\n.Json-OwnersSection\r\n.Json-PackageReference\r\n.Json-Paket CLI\r\n.Json-Dependencies\r\n.Json-GitHub Usage\r\n.Json-Version History \r\nExpected:\r\nTwo scroll bars should not appear on the screen after changing the display orientation to the portrait.\r\n \r\nUser Impact: \r\nUsers will find it difficult to view the data in a single layout .\r\n\r\nNotes:\r\nThis is in reference to a horizontal scrollbar appearing:\r\n![image](https://user-images.githubusercontent.com/11051729/96502880-4a90b280-1207-11eb-86b9-8faa167b3708.png)"},{"Id":"13897945513","Type":"IssuesEvent","CreatedAt":"2020-10-19T19:29:14","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8281","RelatedDescription":"Opened issue \"[A11y][WCAG2.1]Some of the contents of API Key page get overlapped when screen is zoom to 400%.\" (#8281) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1061307\r\n​\r\nEnvironment Details:\r\nApplication Name: NuGet Service\r\nApplication URL:https://www.nuget.org/\r\nWindows Version - Windows10 \r\nEdge Version-Microsoft Edge 44.18362.449.0\r\nChrome Version- Version 79.0.3945.130 (Official Build) (64-bit)\r\n\r\nPre-requisite:\r\nSet the desktop size value to 1280 x 1024.\r\n\r\nNote:\r\nSame issue is observed in Upload packages page\r\n\r\nSteps to Reproduce :\r\n1.Launch application using provided URL.(https://www.nuget.org/)\r\n2.Navigated to Home page\r\n3.Click on “Sign in” option (top right) and click on “Sign in with Microsoft” button\r\n4.Sign in using MSA on the common Microsoft sign-in page\r\n5.Go to “API Keys” from the context menu (top left menu dropdown).\r\n6.Navigate till \"Create Control\" and expand it.\r\n7.Observe that some of the contents get overlapped when the screen is zoom to 400%.\r\n\r\nActual: \r\nWhen the screen is zoomed to 400%,  Some of the contents present on the screen get overlapped.\r\nThe below data shown in the screenshot gets overlapped after zooming the screen :\r\nImage\r\n\r\nExpected: \r\nWhen screen is zoomed to 400%, all the contents present on the screen should not get overlapped and should appear properly on the screen.\r\n\r\nUser Impact: \r\nLow vision users will find difficulty in viewing and reading the content present on the screen when zoomed to 400%.\r\n\r\nNotes:\r\nSee this screenshot:\r\n![image](https://user-images.githubusercontent.com/11051729/96502433-a0188f80-1206-11eb-89ea-6097e412051e.png)\r\n\r\n"},{"Id":"13896246474","Type":"IssuesEvent","CreatedAt":"2020-10-19T16:55:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7551","RelatedDescription":"Closed issue \"Write a blog about the engineering side of Azure Search migration\" (#7551) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13895986070","Type":"IssuesEvent","CreatedAt":"2020-10-19T16:33:05","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8189","RelatedDescription":"Closed issue \"[A11y][UI]Ensures every id attribute value is unique (form)\" (#8189) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1184527\r\n\r\nOn NuGetGallery | Manage Organization page\r\n## Snippet\r\n<form aria-hidden=\"true\" id=\"AntiForgeryForm\"> <input name=\"__RequestVerificationToken\" type=\"hidden\" value=\"..\r\n## How to fix\r\nFix any of the following:\r\n- Document has multiple static elements with the same id attribute: AntiForgeryForm\r\n\r\n## Environment\r\nChrome version 84.0.4147.135 This accessibility issue was found using Accessibility Insights for Web 2.21.1 (axe-core 4.0.1), a tool that helps find and fix accessibility issues. Get more information & download this tool at http://aka.ms/AccessibilityInsights.\r\n\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\nOS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450) "},{"Id":"13895985676","Type":"IssuesEvent","CreatedAt":"2020-10-19T16:33:02","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8184","RelatedDescription":"Closed issue \"[A11y][ARIA]The purpose of the Learn more link is not descriptive\" (#8184) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1184490\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450)\r\n\r\n\r\n## Repro Steps:\r\n\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"upload tab\" item and press enter\r\n    Tab till \"Verify\" drop down and press enter.\r\n    Tab till \"Learn more\" link\r\n    Check whether the purpose of the link is defined by the name of the link or not\r\n\r\n## Actual Results:\r\n\r\nThe purpose of the link is not descriptive for the \"Learn more\" and \"Read more\" links\r\n\r\n   \r\n## Expected Results:\r\nThe purpose of the link should be more descriptive. Screen reader should understand it clearly\r\n## User Impact:\r\nUsers with visual disabilities may find it difficult to understand the purpose of the link, if link name is not descriptive.\r\n\r\n## Notes\r\nUpdating the aria-label in this case to a more descriptive text is sufficient. See https://github.com/NuGet/NuGetGallery/issues/7879 for a similar fix."},{"Id":"13895985253","Type":"IssuesEvent","CreatedAt":"2020-10-19T16:33:00","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8194","RelatedDescription":"Closed issue \"[A11y][ARIA]NVDA is not announcing the Status message displayed after selecting the create button without giving any glob pattern\" (#8194) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1188211\r\n## Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450) \r\n\r\n\r\n## Repro Steps:\r\n\r\n    Turn on NVDA\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"Open Profile drop down\" and press enter\r\n    Tab till \"API Keys\" and Press enter\r\n    Tab till \"Create' Button and press enter to expand it\r\n    Input all the fields except 'Glob pattern' \r\n    Tab till \"Create button\" and press enter\r\n    Input all the fields except 'Glob pattern' \r\n    Verify whether the NVDA is reading the status message displayed or not\r\n\r\n## Actual Results:\r\n\r\nNVDA is not announcing the Status message displayed after selecting the create button without giving any glob pattern\r\n## Expected Results:\r\nScreen reader user should be able to know about the status message displayed after selecting create button without giving glob pattern. NVDA should announce immediately when it is displayed\r\n## User Impact:\r\nScreen reader users may not understand what is the issue occurred if the Screen reader is not announces the status message\r\n\r\n## Notes\r\nWe will need a new aria-live region that will read this information out when it changes. This should be similar to the other aria-live regions we use for alerting."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13900515709","Type":"IssuesEvent","CreatedAt":"2020-10-20T00:31:22","Actor":"vatsan-madhavan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10135","RelatedDescription":"Closed issue \"Generating MSBuild Binary log from nuget restore command\" (#10135) at NuGet/Home","RelatedBody":"How can I generate MSBuild Binary log from nuget client commands like restore ? \r\n\r\n`nuget restore` resolves into something like `msbuild.exe \"%temp%\\NuGetScratch\\ro0d0kct.z0t.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"%temp%\\NuGetScratch\\w3s4ivaf.f43.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"<path to nuget.exe>\" /p:RestoreSolutionDirectory=\"<path to sln directory>\" /p:SolutionDir=\"<path to solution dir>\" /p:SolutionNam=<solution name>`\r\n\r\nHow can I get it to pass `/bl` to msbuild so that a binary log is output at the end of nuget restore? "},{"Id":"13900440385","Type":"IssuesEvent","CreatedAt":"2020-10-20T00:19:26","Actor":"zarenner","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10159","RelatedDescription":"Opened issue \"CPVM equivalent of GlobalPackageReference?\" (#10159) at NuGet/Home","RelatedBody":"We're looking at migrating from https://github.com/microsoft/MSBuildSdks/tree/master/src/CentralPackageVersions to the built-in central package versioning feature, and (unless I missed it) I didn't see an equivalent of `GlobalPackageReference`.\r\n\r\nI'm guessing that for all of our (many) build/analyzer packages, we can do the equivalent and manually add both `PackageVersion` and `PackageReference` (with IncludeAssets and PrivateAssets set as `GlobalPackageReference` does)? Is there any reason we shouldn't add the `PackageReference`s directly in Directory.Packages.props? "},{"Id":"13900407703","Type":"IssuesEvent","CreatedAt":"2020-10-20T00:14:28","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9971","RelatedDescription":"Closed issue \"unit test to compare lock file target libraries in project.assets.json file with Dependencies tree\" (#9971) at NuGet/Home","RelatedBody":"This issue has been created to develop a unit test to compare lock file target libraries in `project.assets.json` file with Dependencies tree. Inspired by [this](https://github.com/NuGet/NuGet.Client/pull/3598#discussion_r475776278) code review comment.\r\n"},{"Id":"13900278394","Type":"IssuesEvent","CreatedAt":"2020-10-19T23:55:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8738","RelatedDescription":"Closed issue \"Use LazyIntializer API to initialize a target type in a multi threaded environment\" (#8738) at NuGet/Home","RelatedBody":"## Details about Problem\r\nIn the current [implementation](https://github.com/NuGet/NuGet.Client/blob/c1f6915918b82c096bbd666bd9c18528f1f70630/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/IDE/ExtensibleSourceRepositoryProvider.cs#L54) object is always locked even-though target type is already initialized.  Learnt from this [doc](https://github.com/microsoft/referencesource/blob/17b97365645da62cf8a49444d979f94a59bbb155/mscorlib/system/threading/LazyInitializer.cs#L197) that there is a .NET framework implementation to accomplish the same logic. `This issue is created to track other lazy initializations which rely on a similar pattern`.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI"},{"Id":"13899571525","Type":"IssuesEvent","CreatedAt":"2020-10-19T22:14:54","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10158","RelatedDescription":"Opened issue \"Pushing multiple packages in CI is causing a file lock, failing 2nd push\" (#10158) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWhen using CI (GitHub Actions and `dotnet nuget push` with *.nupkg, the files are found and a first package is pushed, but then the second fails.\r\n\r\nExample: https://github.com/timheuer/strava-net/runs/1243834288#step:7:19\r\n\r\n```\r\nPushing strava-net.1.0.0.symbols.nupkg to '/home/runner/work/strava-net/strava-net/published/'...\r\nYour package was pushed.\r\nPushing strava-net.1.0.0.nupkg to '/home/runner/work/strava-net/strava-net/published/'...\r\nerror: The process cannot access the file '/home/runner/work/strava-net/strava-net/published/strava-net.1.0.0.nupkg' because it is being used by another process.\r\n```"},{"Id":"13899556330","Type":"IssuesEvent","CreatedAt":"2020-10-19T22:13:00","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10157","RelatedDescription":"Opened issue \"Cannot use relative URLs in dotnet push\" (#10157) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI’m trying to use `dotnet nuget push` with *.nupkg and 1) the docs are wrong (I submitted a bug) 2) the source parameter seems to require a fully-qualified source and cannot use relative roots?\r\n \r\nI’m doing this in CI and am trying to basically use “.” As the source directory but looks like the CLI treats this as too literally and doesn’t like that.\r\n\r\nFrom conversation it appears it could be \r\nhttps://github.com/NuGet/NuGet.Client/blob/65abcc61f73ab3d87928495f789ec74011edde7f/src/NuGet.Core/NuGet.Commands/Utility/PackageSourceProviderExtensions.cs#L47\r\nVersus using `RelativeOrAbsolute`\r\n\r\n"},{"Id":"13899076794","Type":"PullRequestEvent","CreatedAt":"2020-10-19T21:19:12","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10156","RelatedDescription":"Opened pull request \"Spec for PMUI Tab-Switch Refactoring\" (#10156) at NuGet/Home","RelatedBody":""},{"Id":"13898922127","Type":"IssuesEvent","CreatedAt":"2020-10-19T21:03:32","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10155","RelatedDescription":"Opened issue \"Should Refresh button apply to all tabs?\" (#10155) at NuGet/Home","RelatedBody":"My concern was, if I click Refresh, do I expect the entire UI to have fresh data no matter which tab I look at? \r\n\r\nRelated work: https://github.com/NuGet/Home/issues/10147"},{"Id":"13898584274","Type":"IssuesEvent","CreatedAt":"2020-10-19T20:30:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10154","RelatedDescription":"Opened issue \"Spec for PMUI Tab-Switch Refactoring\" (#10154) at NuGet/Home","RelatedBody":"@donnie-msft commented on [Wed Oct 14 2020](https://github.com/NuGet/Client.Engineering/pull/588)\n\n\n\n---\n\n@donnie-msft commented on [Thu Oct 15 2020](https://github.com/NuGet/Client.Engineering/pull/588#issuecomment-709643096)\n\n> Thanks for the great write-up @donnie-msft \n> \n> Something that I was not able to find (or missed), when you open the PM UI and it ends up on the default tab, does the browse tab start loading? I assume the answer is no. \n> \n> How about the reverse? On the browse, does the installed tab equivalent data start loading? \n> I know that we do look at the existing installed packages in order to populate the number in the updates tab label, and I think this is one reason why initial PM UI loading feels heavy to users with machines that are not really powerful.\n\nThis spec has no effect on the existing behavior of automatically loading whichever tab is open when the window is first opened.\n\nWe always load the tab header counts, and perhaps could be more conservative with that. Do you feel it fits with this work or a future spec?\n\n---\n\n@nkolev92 commented on [Thu Oct 15 2020](https://github.com/NuGet/Client.Engineering/pull/588#issuecomment-709646231)\n\n> This spec has no effect on the existing behavior of automatically loading whichever tab is open when the window is first opened.\r\n\r\nOh I didn't mean to suggest that. We read a setting currently and we default to that, I think that's great.\r\n\r\n> We always load the tab header counts, and perhaps could be more conservative with that. Do you feel it fits with this work or a future spec?\r\n\r\nI think it's ok for that to be a part of a future work item. \r\nDoesn't the tab header count update require fetching of all packages for that project/solution & checking whether they have any updates?\n\n---\n\n@donnie-msft commented on [Thu Oct 15 2020](https://github.com/NuGet/Client.Engineering/pull/588#issuecomment-709707000)\n\n> Doesn't the tab header count update require fetching of all packages for that project/solution & checking whether they have any updates?\r\n\r\nYes, and Deprecation info!\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/PackageManagerControl.xaml.cs#L947-L950\n\n---\n\n@nkolev92 commented on [Fri Oct 16 2020](https://github.com/NuGet/Client.Engineering/pull/588#issuecomment-710624742)\n\n> Yes, and Deprecation info!\r\n> https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/PackageManagerControl.xaml.cs#L947-L950\r\n\r\nYuck :D \r\nSo say you open the browse tab...wait for 20s, then open the installed tab, does it now get loaded quicker than just loading the installed tab directly? \r\nBasically, are we reusing the work that we did for figuring out the label count?\n\n"},{"Id":"13898450115","Type":"IssuesEvent","CreatedAt":"2020-10-19T20:17:35","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10153","RelatedDescription":"Opened issue \"Triage PM UI issues for Quality Month\" (#10153) at NuGet/Home","RelatedBody":"Come up with a plan for Quality Month"},{"Id":"13898350252","Type":"IssuesEvent","CreatedAt":"2020-10-19T20:07:55","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10152","RelatedDescription":"Opened issue \"Port Package Source Telemetry to ETW instead of .NET events\" (#10152) at NuGet/Home","RelatedBody":"Following our internal discussion about using ETW & design patterns for  NuGet product monitoring vs telemetry, this task should:\n\n1. Complete investigations on how to use the appropriate APIs effectively\n2. Change our Package Source Diagnostics from using .NET events to use ETW instead, and change the VS telemetry to listen to those ETW events instead of the .NET events\n3. Show an example of capturing those events in PerfView"},{"Id":"13898206437","Type":"IssuesEvent","CreatedAt":"2020-10-19T19:54:15","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10151","RelatedDescription":"Opened issue \"Finish support of Images for codespaces - remote stream from service\" (#10151) at NuGet/Home","RelatedBody":"When running against a codespace, need to remote images from:\n1) embedded images in packages\n2) local feeds\n3) http feeds that the client cannot get to (???)"},{"Id":"13897817726","Type":"IssuesEvent","CreatedAt":"2020-10-19T19:17:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4715","RelatedDescription":"Closed issue \"Very large retry count for GraphOperations to try resolving dependency conflicts\" (#4715) at NuGet/Home","RelatedBody":"There is some 1000 times retries logic in GraphOperations class to try n resolve dependency conflicts. We need to reevaluate this logic and such a high count of retries since it calls into lot of nested foreach loops so at times, it becomes really expensive and allocates bunch of memory.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.DependencyResolver.Core/GraphModel/GraphOperations.cs#L181\r\n"},{"Id":"13897473639","Type":"IssuesEvent","CreatedAt":"2020-10-19T18:45:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10150","RelatedDescription":"Opened issue \"Loading Status Indicator refactoring for new tab lists paradigm\" (#10150) at NuGet/Home","RelatedBody":"The Loading Status indicator was tied directly to the InfiniteScrollList, which now has 2 ListBoxes to improve perf.\r\n\r\nI need to create 2 independent indicators to go along with that. I'm refactoring this code a bit to pull it away from the InfiniteScrollList, and reduce the dependency there. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-20T05:30:37.8557392Z","RunDurationInMilliseconds":1639}