{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"27496151979","Type":"IssuesEvent","CreatedAt":"2023-03-05T06:29:28","Actor":"WhiteBlackGoose","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9411","RelatedDescription":"Opened issue \"[Feature]: Option to enable international ISO date time format\" (#9411) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nRandom order of day, month, and year is not very helpful. From my understanding, the fix [has already existed](https://github.com/NuGet/NuGetGallery/commit/bd01fbe251b0929bc31c743d94a54415048b9bfb), but now it's back to showing locale settings.\n\n### The Elevator Pitch\n\nOption to enable ISO8601 date format, as it already is on hover\r\n\r\n![image](https://user-images.githubusercontent.com/31178401/222945377-72e134ac-eb4b-4275-baf8-1b40cdb48949.png)\r\n\r\n(honestly, it should be a default, like it is on many other websites, but anyway, an option would at least make a step towards it)\r\n\r\nThanks\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27488309302","Type":"PullRequestEvent","CreatedAt":"2023-03-04T10:04:13","Actor":"knocte","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9409","RelatedDescription":"Closed pull request \"Fix Script & Interactive tab #r nuget clause\" (#9409) at NuGet/NuGetGallery","RelatedBody":"It was missing the `Version=` part so it would have never worked like that."},{"Id":"27484127931","Type":"IssuesEvent","CreatedAt":"2023-03-04T00:08:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9410","RelatedDescription":"Opened issue \"[Search-by-TFM] Allow users to OR multiple framework selections in addition to existing AND behavior\" (#9410) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\n\r\nThe default filtering behavior when multiple Framework Generations or TFMs are selected is to **AND** the selections and show packages that fall in the intersection of these frameworks (i.e. packages targeting both 'net472' _AND_ 'netcoreapp3.1').\r\n\r\nUsers may want to combine multiple selections with an **OR** (i.e. packages targeting either 'net6.0' _OR_ 'net7.0').\r\n\r\n### Solution\r\n\r\nWe could allow users to toggle a switch choosing how to combine their Frameworks filters, with OR and AND as the two options.\r\n\r\nCan we have more complex combination logic, something like:  ('net6.0' _OR_ 'net7.0') _AND_ 'netstandard2.1'?"},{"Id":"27483938388","Type":"PullRequestEvent","CreatedAt":"2023-03-03T23:51:25","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9398","RelatedDescription":"Merged pull request \"URL redirect and ValidateIssuer CodeQL bugs\" (#9398) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4790\r\nPart of https://github.com/NuGet/Engineering/issues/4593\r\n\r\nThis PR addresses 4 NuGetGallery CodeQL issues.\r\n\r\n1. **AuthenticationController.cs (2)**\r\n    - _Problem:_ Untrusted URL redirection due to user-provided value. ([Bug #1632796](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632796), [Bug #1632797](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632797))\r\n    -  _Solution:_ The redirect URLs used here are relative site URLs generated by us, and do not use any user-provided values. **To avoid unwanted redirection, we now check that the returnUrl is a relative Url, and redirect to the 'Home' page if it isn't.**\r\n3. **ValidateRecaptchaResponseAttribute.cs (1)**\r\n    - _Problem:_ Potential server side request forgery due to a user-provided value flowing to a constructor or method from class \r\n                         System.Net.Http.HttpClient. ([Bug #1632800](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632800))\r\n    -  _Solution:_ The Recaptcha validation URL flagged here does not use any user-provided values either. These values are generated by client-side reCAPTCHA code. The mitigation here is that the validation Url is limited to a specific host, which should prevent unwanted redirection. **Added a suppression comment.**\r\n5. **AzureActiveDirectoryV2Authenticator.cs (1)**\r\n    - _Problem:_ \"The security sensitive property ValidateIssuer is being disabled by the followign value: false.\" We were disabling \r\n                         the ValidateIssuer flag in our AAD auth. When Issuer Validation is turned on, the issuer in the token is compared \r\n                         against a list of accepted tenants. ([Bug #1632802](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1632802))\r\n    -  _Solution:_  We have a multi-tenant app, and do not restrict token issuers to a limited set of tenants, so we can keep this \r\n                         flag off. **Added a suppression comment.**\r\n\r\n"},{"Id":"27459279654","Type":"IssuesEvent","CreatedAt":"2023-03-03T01:09:50","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8877","RelatedDescription":"Closed issue \"[README]: Allow Azure Pipelines Badge Images in README.md\" (#8877) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI use badge images from Azure Pipelines like this:\r\n\r\n[![Serilog.Enrichers.Span package in serilog-exceptions feed in Azure Artifacts](https://feeds.dev.azure.com/serilog-exceptions/_apis/public/Packaging/Feeds/8479813c-da6b-4677-b40d-78df8725dc9c/Packages/3f8a2a7e-8124-4987-9c44-916dba83b9d6/Badge)](https://dev.azure.com/serilog-exceptions/Serilog.Enrichers.Span/_packaging?_a=package&feed=8479813c-da6b-4677-b40d-78df8725dc9c&package=3f8a2a7e-8124-4987-9c44-916dba83b9d6&preferRelease=true)\r\n\r\nThey currently show like this on NuGet:\r\n\r\n![image](https://user-images.githubusercontent.com/2270364/141500441-233dfdef-4ab9-4db8-b4e0-c957e7d207ac.png)\r\n\r\nHere is a link to the package:\r\n\r\nhttps://www.nuget.org/packages/Serilog.Enrichers.Span/\n\n### The Elevator Pitch\n\nAzure Pipelines badges needs proper support.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27459273584","Type":"IssuesEvent","CreatedAt":"2023-03-03T01:09:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8877","RelatedDescription":"Closed issue \"[README]: Allow Azure Pipelines Badge Images in README.md\" (#8877) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nI use badge images from Azure Pipelines like this:\r\n\r\n[![Serilog.Enrichers.Span package in serilog-exceptions feed in Azure Artifacts](https://feeds.dev.azure.com/serilog-exceptions/_apis/public/Packaging/Feeds/8479813c-da6b-4677-b40d-78df8725dc9c/Packages/3f8a2a7e-8124-4987-9c44-916dba83b9d6/Badge)](https://dev.azure.com/serilog-exceptions/Serilog.Enrichers.Span/_packaging?_a=package&feed=8479813c-da6b-4677-b40d-78df8725dc9c&package=3f8a2a7e-8124-4987-9c44-916dba83b9d6&preferRelease=true)\r\n\r\nThey currently show like this on NuGet:\r\n\r\n![image](https://user-images.githubusercontent.com/2270364/141500441-233dfdef-4ab9-4db8-b4e0-c957e7d207ac.png)\r\n\r\nHere is a link to the package:\r\n\r\nhttps://www.nuget.org/packages/Serilog.Enrichers.Span/\n\n### The Elevator Pitch\n\nAzure Pipelines badges needs proper support.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"27457534748","Type":"IssuesEvent","CreatedAt":"2023-03-02T22:50:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9355","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The rendering of code block in Readme shows the light grey shade. \" (#9355) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe rendering of code block in Readme shows the light grey shade at each line. This looks not pretty and doesn't align with official documents.\n\n### Repro Steps\n\nOpen any package with the code block in Readme: https://www.nuget.org/packages/Newtonsoft.Json\r\n\r\nThere is the light grey shade at each line of the code block:\r\n![image](https://user-images.githubusercontent.com/41028779/214198811-570ada55-fd22-41de-b921-29f6cd16920b.png)\r\n\r\nHaving the similar rendering of code block as official documents will look much better and support package authors to use this feature.\n\n### Expected Behavior\n\nNo shade at each line of the code block in Readme.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"27457347374","Type":"IssuesEvent","CreatedAt":"2023-03-02T22:39:04","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9389","RelatedDescription":"Closed issue \"[Search-by-TFM Bug] Tags sometimes spill over into the next line when there are multiple of them\" (#9389) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIn the search results, when there are very few tags, they appear on the same line as the downloads, last updated date and version, but spill over into the next line when there are multiple tags. This behavior should be consistent. \r\n\r\nThis is a consequence of the search results column now being narrower since the filter panel is on the left of the results rather than being above it. \r\n\r\n### Solution\r\nPossible solution: Always show tags on the next line so that it is consistent."},{"Id":"27456543060","Type":"PullRequestEvent","CreatedAt":"2023-03-02T21:54:02","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9407","RelatedDescription":"Merged pull request \"Update Fabric Core to 11.0.1\" (#9407) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n- Updated version 7.3.0 to 11.0.1\r\n- Removed SquaredShape icon since it's no longer needed.\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4756"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"27500447293","Type":"IssuesEvent","CreatedAt":"2023-03-05T16:33:49","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12456","RelatedDescription":"Reopened issue \"dotnet list package --vulnerable requires constant login to 3rd party nuget feed\" (#12456) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK  7.0.200\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn calling `dotnet list package --interactive --vulnerable` I have to constantly sign in via the web browser for an internal nuget feed.\r\n\r\nWithout the `--vulnerable` switch it seems to use my cached login and I don't even need to login once.\r\n\r\nExpected behavior:\r\n\r\nI would expect to login at most once for the command to finish.\r\n\r\nLog Output:\r\n[log.txt](https://github.com/NuGet/Home/files/10848428/log.txt)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27499529056","Type":"IssuesEvent","CreatedAt":"2023-03-05T14:38:23","Actor":"mrEDitor","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12467","RelatedDescription":"Opened issue \"dotnet restore hangs\" (#12467) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK:  Version:   7.0.103  Commit:    276c71d299\n\n### Worked before?\n\nworked on same version earlier; works on fresh archlinux installation\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n```console\r\n$ dotnet new console -o myproj1\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring /home/edward/myproj1/myproj1.csproj:\r\n  Determining projects to restore...\r\n```\r\n\r\n-or-\r\n\r\n```console\r\n$ dotnet restore # also hangs on existing projects\r\n  Determining projects to restore...\r\n```\r\n\r\n<details>\r\n\r\n<summary>dotnet dump > clrstack -all</summary>\r\n\r\n```console\r\n$ clrstack -all                                                                    \r\nOS Thread Id: 0xadbe\r\n        Child SP               IP Call Site\r\n00007FFD16FFCC50 00007fe714db3766 [HelperMethodFrame: 00007ffd16ffcc50] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FFD16FFCD80 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FFD16FFCDC0 00007FE697B40A24 Microsoft.Build.Execution.BuildSubmission.Execute()\r\n00007FFD16FFCDF0 00007FE6978062CC Microsoft.Build.CommandLine.MSBuildApp.ExecuteBuild(Microsoft.Build.Execution.BuildManager, Microsoft.Build.Execution.BuildRequestData)\r\n00007FFD16FFCE40 00007FE697806561 Microsoft.Build.CommandLine.MSBuildApp.ExecuteRestore(System.String, System.String, Microsoft.Build.Execution.BuildManager, System.Collections.Generic.Dictionary`2<System.String,System.String>)\r\n00007FFD16FFCEC0 00007FE6978058D1 Microsoft.Build.CommandLine.MSBuildApp.BuildProject(System.String, System.String[], System.String, System.Collections.Generic.Dictionary`2<System.String,System.String>, System.Collections.Generic.Dictionary`2<System.String,System.String>, Microsoft.Build.Framework.ILogger[], Microsoft.Build.Framework.LoggerVerbosity, Microsoft.Build.CommandLine.DistributedLoggerRecord[], Int32, Boolean, System.IO.TextWriter, System.IO.TextWriter, Boolean, System.Collections.Generic.ISet`1<System.String>, System.Collections.Generic.ISet`1<System.String>, System.Collections.Generic.ISet`1<System.String>, Boolean, Microsoft.Build.Logging.ProfilerLogger, Boolean, Boolean, Boolean, Microsoft.Build.Graph.GraphBuildOptions, Boolean, System.String[], System.String, System.String[])\r\n00007FFD16FFD040 00007FE6978043CD Microsoft.Build.CommandLine.MSBuildApp.Execute(System.String[])\r\n00007FFD16FFD2E0 00007FE697803459 Microsoft.Build.CommandLine.MSBuildApp.Main(System.String[])\r\n00007FFD16FFD340 00007FE6967DB2EE Microsoft.DotNet.Cli.Utils.MSBuildForwardingAppWithoutLogging.ExecuteInProc(System.String[])\r\n00007FFD16FFD420 00007FE6961E878C Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingApp.Execute()\r\n00007FFD16FFD460 00007FE696AB65E2 System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d.MoveNext()\r\n00007FFD16FFD4A0 00007FE69608C5DD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d, System.CommandLine]](<<BuildInvocationChain>b__0>d ByRef)\r\n00007FFD16FFD4E0 00007FE69608C54C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0+<<BuildInvocationChain>b__0>d, System.CommandLine]](<<BuildInvocationChain>b__0>d ByRef)\r\n00007FFD16FFD500 00007FE696AB175D System.CommandLine.Invocation.InvocationPipeline+<>c__DisplayClass4_0.<BuildInvocationChain>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD550 00007FE6962351C2 Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d.MoveNext()\r\n00007FFD16FFD5F0 00007FE69608C49D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d, dotnet]](<<UseParseErrorReporting>b__0>d ByRef)\r\n00007FFD16FFD630 00007FE69608C40C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0+<<UseParseErrorReporting>b__0>d, dotnet]](<<UseParseErrorReporting>b__0>d ByRef)\r\n00007FFD16FFD650 00007FE69622EC7C Microsoft.DotNet.Cli.Parser+<>c__DisplayClass17_0.<UseParseErrorReporting>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD6B0 00007FE696AB51A3 System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d.MoveNext()\r\n00007FFD16FFD6E0 00007FE69608C35D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d, System.CommandLine]](<<UseHelp>b__0>d ByRef)\r\n00007FFD16FFD720 00007FE69608C2CC System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0+<<UseHelp>b__0>d, System.CommandLine]](<<UseHelp>b__0>d ByRef)\r\n00007FFD16FFD740 00007FE696AAE37B System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass11_0.<UseHelp>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD7A0 00007FE696AB506F System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d.MoveNext()\r\n00007FFD16FFD7E0 00007FE69608C21D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d, System.CommandLine]](<<UseSuggestDirective>b__17_0>d ByRef)\r\n00007FFD16FFD820 00007FE69608C18C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c+<<UseSuggestDirective>b__17_0>d, System.CommandLine]](<<UseSuggestDirective>b__17_0>d ByRef)\r\n00007FFD16FFD840 00007FE696AAE1DE System.CommandLine.CommandLineBuilderExtensions+<>c.<UseSuggestDirective>b__17_0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD890 00007FE696AB5454 System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d.MoveNext()\r\n00007FFD16FFD8C0 00007FE69608C0DD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d, System.CommandLine]](<<UseParseDirective>b__0>d ByRef)\r\n00007FFD16FFD900 00007FE69608C04C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0+<<UseParseDirective>b__0>d, System.CommandLine]](<<UseParseDirective>b__0>d ByRef)\r\n00007FFD16FFD920 00007FE696AAE49B System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass15_0.<UseParseDirective>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFD980 00007FE696AB609C System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d.MoveNext()\r\n00007FFD16FFD9D0 00007FE69608BF9D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d, System.CommandLine]](<<UseExceptionHandler>b__0>d ByRef)\r\n00007FFD16FFDA10 00007FE69608BF0C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0+<<UseExceptionHandler>b__0>d, System.CommandLine]](<<UseExceptionHandler>b__0>d ByRef)\r\n00007FFD16FFDA30 00007FE696AAEAEB System.CommandLine.CommandLineBuilderExtensions+<>c__DisplayClass7_0.<UseExceptionHandler>b__0(System.CommandLine.Invocation.InvocationContext, System.Func`2<System.CommandLine.Invocation.InvocationContext,System.Threading.Tasks.Task>)\r\n00007FFD16FFDA90 00007FE696AA8960 System.CommandLine.Invocation.InvocationPipeline.<Invoke>g__FullInvocationChain|3_0(System.CommandLine.Invocation.InvocationContext)\r\n00007FFD16FFDB10 00007FE696AA8700 System.CommandLine.Invocation.InvocationPipeline.Invoke(System.CommandLine.IConsole)\r\n00007FFD16FFDB40 00007FE69620DB6F Microsoft.DotNet.Cli.Program.ProcessArgs(System.String[], System.TimeSpan, Microsoft.DotNet.Cli.Telemetry.ITelemetry)\r\n00007FFD16FFDC70 00007FE69620D214 Microsoft.DotNet.Cli.Program.Main(System.String[])\r\nOS Thread Id: 0xadc3\r\n        Child SP               IP Call Site\r\n00007FE68EFFCD10 00007fe714db3766 [DebuggerU2MCatchHandlerFrame: 00007fe68effcd10] \r\nOS Thread Id: 0xadc6\r\n        Child SP               IP Call Site\r\n00007FA5DF9FE968 00007fe714db3766 [HelperMethodFrame: 00007fa5df9fe968] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DF9FEA90 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DF9FEB00 00007FE697BA78E8 Microsoft.Build.BackEnd.Logging.LoggingService.<StartLoggingEventProcessing>g__LoggingEventProc|135_0()\r\n00007FA5DF9FEB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DF9FECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5df9fecd0] \r\nOS Thread Id: 0xadc7\r\n        Child SP               IP Call Site\r\n00007FA5DF1FD968 00007fe714db3766 [HelperMethodFrame: 00007fa5df1fd968] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DF1FDA90 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DF1FDB00 00007FE697BA78E8 Microsoft.Build.BackEnd.Logging.LoggingService.<StartLoggingEventProcessing>g__LoggingEventProc|135_0()\r\n00007FA5DF1FDB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DF1FDCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5df1fdcd0] \r\nOS Thread Id: 0xadc8\r\n        Child SP               IP Call Site\r\n00007FA5DE9FC978 00007fe714db3766 [InlinedCallFrame: 00007fa5de9fc978] \r\n00007FA5DE9FC978 00007fe6956edb4a [InlinedCallFrame: 00007fa5de9fc978] \r\n00007FA5DE9FC970 00007FE6956EDB4A System.Threading.LowLevelLifoSemaphore.<WaitNative>g____PInvoke|3_0(IntPtr, Int32)\r\n00007FA5DE9FCA10 00007FE6956ED669 System.Threading.LowLevelLifoSemaphore.WaitNative(Microsoft.Win32.SafeHandles.SafeWaitHandle, Int32)\r\n00007FA5DE9FCA40 00007FE6956EDA86 System.Threading.LowLevelLifoSemaphore.WaitForSignal(Int32)\r\n00007FA5DE9FCA70 00007FE6956ED963 System.Threading.LowLevelLifoSemaphore.Wait(Int32, Boolean)\r\n00007FA5DE9FCAC0 00007FE69570378E System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\r\n00007FA5DE9FCCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5de9fccd0] \r\nOS Thread Id: 0xadc9\r\n        Child SP               IP Call Site\r\n00007FE68DB0C8E0 00007fe714db3766 [HelperMethodFrame: 00007fe68db0c8e0] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FE68DB0CA10 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FE68DB0CA50 00007FE695701241 System.Threading.PortableThreadPool+GateThread.GateThreadStart()\r\n00007FE68DB0CCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fe68db0ccd0] \r\nOS Thread Id: 0xadca\r\n        Child SP               IP Call Site\r\n00007FA5DE1FB978 00007fe714db3766 [InlinedCallFrame: 00007fa5de1fb978] \r\n00007FA5DE1FB978 00007fe6956edb4a [InlinedCallFrame: 00007fa5de1fb978] \r\n00007FA5DE1FB970 00007FE6956EDB4A System.Threading.LowLevelLifoSemaphore.<WaitNative>g____PInvoke|3_0(IntPtr, Int32)\r\n00007FA5DE1FBA10 00007FE6956ED669 System.Threading.LowLevelLifoSemaphore.WaitNative(Microsoft.Win32.SafeHandles.SafeWaitHandle, Int32)\r\n00007FA5DE1FBA40 00007FE6956EDA86 System.Threading.LowLevelLifoSemaphore.WaitForSignal(Int32)\r\n00007FA5DE1FBA70 00007FE6956ED963 System.Threading.LowLevelLifoSemaphore.Wait(Int32, Boolean)\r\n00007FA5DE1FBAC0 00007FE69570378E System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\r\n00007FA5DE1FBCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5de1fbcd0] \r\nOS Thread Id: 0xadcb\r\n        Child SP               IP Call Site\r\n00007FA5DD9FA938 00007fe714db3766 [HelperMethodFrame: 00007fa5dd9fa938] System.Threading.WaitHandle.WaitMultipleIgnoringSyncContext(IntPtr*, Int32, Boolean, Int32)\r\n00007FA5DD9FAA60 00007FE6956ECD3B System.Threading.WaitHandle.WaitMultiple(System.ReadOnlySpan`1<System.Threading.WaitHandle>, Boolean, Int32)\r\n00007FA5DD9FAAD0 00007FE697B7E1A1 Microsoft.Build.BackEnd.InProcNode.Run(System.Exception ByRef)\r\n00007FA5DD9FAB10 00007FE697BFE69B Microsoft.Build.BackEnd.NodeProviderInProc+<>c__DisplayClass30_0.<InstantiateNode>b__0()\r\n00007FA5DD9FAB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DD9FACD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5dd9facd0] \r\nOS Thread Id: 0xadcd\r\n        Child SP               IP Call Site\r\n00007FA5DC9F76E0 00007fe714db3766 [HelperMethodFrame_1OBJ: 00007fa5dc9f76e0] System.Threading.Monitor.ObjWait(Int32, System.Object)\r\n00007FA5DC9F7810 00007FE6956F4636 System.Threading.ManualResetEventSlim.Wait(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F7890 00007FE695708FFC System.Threading.Tasks.Task.SpinThenBlockingWait(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F78F0 00007FE695708E8E System.Threading.Tasks.Task.InternalWaitCore(Int32, System.Threading.CancellationToken)\r\n00007FA5DC9F7940 00007FE69581A468 System.Threading.Tasks.Task`1[[System.Boolean, System.Private.CoreLib]].GetResultCore(Boolean)\r\n00007FA5DC9F7960 00007FE699E66675 NuGet.Build.Tasks.RestoreTask.Execute()\r\n00007FA5DC9F7BA0 00007FE697B9244D Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n00007FA5DC9F7BD0 00007FE697BFB68B Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25.MoveNext()\r\n00007FA5DC9F7CE0 00007FE6999EFB8D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25, Microsoft.Build]](<ExecuteInstantiatedTask>d__25 ByRef)\r\n00007FA5DC9F7D20 00007FE6999EFB00 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__25, Microsoft.Build]](<ExecuteInstantiatedTask>d__25 ByRef)\r\n00007FA5DC9F7D50 00007FE697B89A66 Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(Microsoft.Build.BackEnd.ITaskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext, Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.ItemBucket, Microsoft.Build.BackEnd.TaskExecutionMode)\r\n00007FA5DC9F7DF0 00007FE697BFCD14 Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23.MoveNext()\r\n00007FA5DC9F7E40 00007FE6999EFA4D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23, Microsoft.Build]](<InitializeAndExecuteTask>d__23 ByRef)\r\n00007FA5DC9F7E80 00007FE6999EF230 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<InitializeAndExecuteTask>d__23, Microsoft.Build]](<InitializeAndExecuteTask>d__23 ByRef)\r\n00007FA5DC9F7EB0 00007FE697B8970F Microsoft.Build.BackEnd.TaskBuilder.InitializeAndExecuteTask(Microsoft.Build.BackEnd.Logging.TaskLoggingContext, Microsoft.Build.BackEnd.ItemBucket, System.Collections.Generic.IDictionary`2<System.String,System.String>, Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.TaskExecutionMode)\r\n00007FA5DC9F7F40 00007FE697BFAA74 Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19.MoveNext()\r\n00007FA5DC9F8020 00007FE6999EBC1D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19, Microsoft.Build]](<ExecuteBucket>d__19 ByRef)\r\n00007FA5DC9F8060 00007FE6999EBB90 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteBucket>d__19, Microsoft.Build]](<ExecuteBucket>d__19 ByRef)\r\n00007FA5DC9F8090 00007FE697B8929B Microsoft.Build.BackEnd.TaskBuilder.ExecuteBucket(Microsoft.Build.BackEnd.TaskHost, Microsoft.Build.BackEnd.ItemBucket, Microsoft.Build.BackEnd.TaskExecutionMode, System.Collections.Generic.Dictionary`2<System.String,System.String>)\r\n00007FA5DC9F8120 00007FE697BFC959 Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18.MoveNext()\r\n00007FA5DC9F81E0 00007FE6999EBADD System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18, Microsoft.Build]](<ExecuteTask>d__18 ByRef)\r\n00007FA5DC9F8220 00007FE6999EBA50 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__18, Microsoft.Build]](<ExecuteTask>d__18 ByRef)\r\n00007FA5DC9F8250 00007FE697B891F3 Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup)\r\n00007FA5DC9F82D0 00007FE697BFC53D Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13.MoveNext()\r\n00007FA5DC9F8310 00007FE6999EB99D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13, Microsoft.Build]](<ExecuteTask>d__13 ByRef)\r\n00007FA5DC9F8350 00007FE6999EB910 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TaskBuilder+<ExecuteTask>d__13, Microsoft.Build]](<ExecuteTask>d__13 ByRef)\r\n00007FA5DC9F8380 00007FE697B88CEE Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.Logging.TargetLoggingContext, Microsoft.Build.BackEnd.BuildRequestEntry, Microsoft.Build.BackEnd.ITargetBuilderCallback, Microsoft.Build.Execution.ProjectTargetInstanceChild, Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup, Microsoft.Build.BackEnd.Lookup, System.Threading.CancellationToken)\r\n00007FA5DC9F8420 00007FE697BFA406 Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51.MoveNext()\r\n00007FA5DC9F84A0 00007FE6999EB85D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51, Microsoft.Build]](<ProcessBucket>d__51 ByRef)\r\n00007FA5DC9F84E0 00007FE6999EB7D0 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib]].Start[[Microsoft.Build.BackEnd.TargetEntry+<ProcessBucket>d__51, Microsoft.Build]](<ProcessBucket>d__51 ByRef)\r\n00007FA5DC9F8510 00007FE697B86396 Microsoft.Build.BackEnd.TargetEntry.ProcessBucket(Microsoft.Build.BackEnd.ITaskBuilder, Microsoft.Build.BackEnd.Logging.TargetLoggingContext, Microsoft.Build.BackEnd.TaskExecutionMode, Microsoft.Build.BackEnd.Lookup, Microsoft.Build.BackEnd.Lookup)\r\n00007FA5DC9F85B0 00007FE697BF988D Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44.MoveNext()\r\n00007FA5DC9F8730 00007FE6999EB71D System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44, Microsoft.Build]](<ExecuteTarget>d__44 ByRef)\r\n00007FA5DC9F8770 00007FE6999EB68C System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.Build.BackEnd.TargetEntry+<ExecuteTarget>d__44, Microsoft.Build]](<ExecuteTarget>d__44 ByRef)\r\n00007FA5DC9F8790 00007FE697B85CA4 Microsoft.Build.BackEnd.TargetEntry.ExecuteTarget(Microsoft.Build.BackEnd.ITaskBuilder, Microsoft.Build.BackEnd.BuildRequestEntry, Microsoft.Build.BackEnd.Logging.ProjectLoggingContext, System.Threading.CancellationToken)\r\n00007FA5DC9F8850 00007FE697BF8753 Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23.MoveNext()\r\n00007FA5DC9F88E0 00007FE6999FDA53 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].ExecutionContextCallback(System.Object)\r\n00007FA5DC9F8900 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DC9F8950 00007FE6999FD90F System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].MoveNext(System.Threading.Thread)\r\n00007FA5DC9F89A0 00007FE6999FD78A System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Microsoft.Build.BackEnd.TargetBuilder+<ProcessTargetStack>d__23, Microsoft.Build]].MoveNext()\r\n00007FA5DC9F89C0 00007FE69570E47E System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation+<>c.<Run>b__2_0(System.Object)\r\n00007FA5DC9F89E0 00007FE695708372 System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n00007FA5DC9F8AE0 00007FE69570808E System.Threading.Tasks.Task.ExecuteEntry()\r\n00007FA5DC9F8B00 00007FE697BF50EC Microsoft.Build.BackEnd.RequestBuilder+DedicatedThreadsTaskScheduler.<InjectThread>b__6_0()\r\n00007FA5DC9F8B30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5DC9F8CD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5dc9f8cd0] \r\nOS Thread Id: 0xadcf\r\n        Child SP               IP Call Site\r\n00007FA5BB1FE850 00007fe714db3766 [HelperMethodFrame_1OBJ: 00007fa5bb1fe850] System.Threading.Monitor.ObjWait(Int32, System.Object)\r\n00007FA5BB1FE980 00007FE6956F7F65 System.Threading.SemaphoreSlim.WaitUntilCountOrTimeout(Int32, UInt32, System.Threading.CancellationToken)\r\n00007FA5BB1FE9C0 00007FE6956F7D41 System.Threading.SemaphoreSlim.Wait(Int32, System.Threading.CancellationToken)\r\n00007FA5BB1FEA40 00007FE696D07A55 System.Collections.Concurrent.BlockingCollection`1[[System.__Canon, System.Private.CoreLib]].TryTakeWithNoTimeValidation(System.__Canon ByRef, Int32, System.Threading.CancellationToken, System.Threading.CancellationTokenSource)\r\n00007FA5BB1FEAB0 00007FE696D0941F System.Collections.Concurrent.BlockingCollection`1+<GetConsumingEnumerable>d__68[[System.__Canon, System.Private.CoreLib]].MoveNext()\r\n00007FA5BB1FEB00 00007FE697BF5105 Microsoft.Build.BackEnd.RequestBuilder+DedicatedThreadsTaskScheduler.<InjectThread>b__6_0()\r\n00007FA5BB1FEB30 00007FE6956F2A49 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007FA5BB1FECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5bb1fecd0] \r\nOS Thread Id: 0xadd0\r\n        Child SP               IP Call Site\r\n00007FA5B9DFE990 00007fe714db3766 [HelperMethodFrame: 00007fa5b9dfe990] System.Threading.WaitHandle.WaitOneCore(IntPtr, Int32)\r\n00007FA5B9DFEAC0 00007FE6956EC6B0 System.Threading.WaitHandle.WaitOneNoCheck(Int32)\r\n00007FA5B9DFEB00 00007FE6956FD5CD System.Threading.TimerQueue.TimerThread()\r\n00007FA5B9DFECD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5b9dfecd0] \r\nOS Thread Id: 0xadd1\r\n        Child SP               IP Call Site\r\n00007FA5B95FDA90 00007fe714e391b6 [InlinedCallFrame: 00007fa5b95fda90] \r\n00007FA5B95FDA90 00007fe69c19f38f [InlinedCallFrame: 00007fa5b95fda90] \r\n00007FA5B95FDA80 00007FE69C19F38F Interop+Sys.WaitForSocketEvents(IntPtr, SocketEvent*, Int32*)\r\n00007FA5B95FDB30 00007FE69C1C4E84 System.Net.Sockets.SocketAsyncEngine.EventLoop()\r\n00007FA5B95FDCD0 00007fe714764537 [DebuggerU2MCatchHandlerFrame: 00007fa5b95fdcd0] \r\n```\r\n</details>\r\n\r\n<details>\r\n\r\n<summary>Eliminating the need to restore packages eliminates the hang as well</summary>\r\n\r\n```console\r\n$ cat myproj.csproj\r\n<Project>\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n$ dotnet build\r\n/usr/share/dotnet/sdk/7.0.103/MSBuild.dll -nologo -maxcpucount -target:Restore -verbosity:m -verbosity:diag ./myproj.csproj\r\nBuild started 3/5/2023 4:24:48PM.\r\nEnvironment at start of build:\r\nDOTNET_HOST_PATH = /usr/share/dotnet/dotnet\r\nDOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/edward/.cache/dotnet_bundle_extract\r\nMSBUILDUSESERVER = 0\r\nDOTNET_ROOT = /usr/share/dotnet\r\n\r\n16:24:48.559     0>Process = \"/usr/share/dotnet/dotnet\"\r\n                   MSBuild executable path = \"/usr/share/dotnet/sdk/7.0.103/MSBuild.dll\"\r\n                   Command line arguments = \"/usr/share/dotnet/sdk/7.0.103/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore -verbosity:diag\"\r\n                   Current directory = \"/home/edward/myproj\"\r\n                   MSBuild version = \"17.4.1+fedecea9d\"\r\n16:24:48.608     0>Initial Properties:\r\n                   DOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/edward/.cache/dotnet_bundle_extract\r\n                   DOTNET_HOST_PATH = /usr/share/dotnet/dotnet\r\n                   DOTNET_ROOT = /usr/share/dotnet\r\n                   ImplicitUsings = enable\r\n                   MSBuildAllProjects = /home/edward/myproj/myproj.csproj\r\n                   MSBuildAssemblyVersion = 17.0\r\n                   MSBuildBinPath = /usr/share/dotnet/sdk/7.0.103\r\n                   MSBuildDisableFeaturesFromVersion = 999.999\r\n                   MSBuildFileVersion = 17.4.1.12801\r\n                   MSBuildFrameworkToolsRoot = /usr/share/dotnet/shared/Microsoft.NETCore.App\r\n                   MSBuildNodeCount = 8\r\n                   MSBuildProgramFiles32 = \r\n                   MSBuildProjectDirectory = /home/edward/myproj\r\n                   MSBuildProjectDirectoryNoRoot = home/edward/myproj\r\n                   MSBuildProjectExtension = .csproj\r\n                   MSBuildProjectFile = myproj.csproj\r\n                   MSBuildProjectFullPath = /home/edward/myproj/myproj.csproj\r\n                   MSBuildProjectName = myproj\r\n                   MSBuildRestoreSessionId = a0b4dfe1-050c-4e79-9e5f-bb0e95e67126\r\n                   MSBuildRuntimeType = Core\r\n                   MSBuildSDKsPath = /usr/share/dotnet/sdk/7.0.103/Sdks\r\n                   MSBuildSemanticVersion = 17.4.1+fedecea9d\r\n                   MSBuildStartupDirectory = /home/edward/myproj\r\n                   MSBuildToolsPath = /usr/share/dotnet/sdk/7.0.103\r\n                   MSBuildToolsVersion = Current\r\n                   MSBUILDUSESERVER = 0\r\n                   MSBuildVersion = 17.4.1\r\n                   Nullable = enable\r\n                   OS = Unix\r\n                   OutputType = Exe\r\n                   RoslynTargetsPath = /usr/share/dotnet/sdk/7.0.103/Roslyn\r\n                   TargetFramework = net7.0\r\n                   VisualStudioVersion = 17.0\r\n\r\n16:24:48.609     1>Project \"/home/edward/myproj/myproj.csproj\" on node 1 (Restore target(s)).\r\n16:24:48.609     1>Target \"Restore\" skipped. The target does not exist in the project and SkipNonexistentTargets is set to true.\r\n16:24:48.610     1>Done Building Project \"/home/edward/myproj/myproj.csproj\" (Restore target(s)).\r\nDeferred Messages\r\n16:24:48.612     0>\r\nDetailed Build Summary\r\n======================\r\n     (TaskId:0)\r\n                     \r\n                     ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n                     Id                  : Exclusive Time   Total Time   Path (Targets)\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     0                   : 0.029s           0.029s       /home/edward/myproj/myproj.csproj (Restore)  (TaskId:0)\r\n                     \r\n                     ============================== Node Utilization (IDs represent configurations) ====================================================\r\n                     Timestamp:            1        Duration   Cumulative\r\n                     ----------------------------------------------------------------------------------------------------------------------------------- (TaskId:0)\r\n                     638136194885800927:   0        0.032s     0.032s  (TaskId:0)\r\n                     -----------------------------------------------------------------------------------------------------------------------------------\r\n                     Utilization:          100.0    Average Utilization: 100.0 (TaskId:0)\r\n\r\nProject Evaluation Performance Summary:\r\n        4 ms  /home/edward/myproj/myproj.csproj          1 calls\r\n\r\nProject Performance Summary:\r\n        2 ms  /home/edward/myproj/myproj.csproj          1 calls\r\n                  2 ms  Restore                                    1 calls\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.06\r\n```\r\n\r\n</details>\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27496300421","Type":"IssuesEvent","CreatedAt":"2023-03-05T06:56:47","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12456","RelatedDescription":"Closed issue \"dotnet list package --vulnerable requires constant login to 3rd party nuget feed\" (#12456) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK  7.0.200\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn calling `dotnet list package --interactive --vulnerable` I have to constantly sign in via the web browser for an internal nuget feed.\r\n\r\nWithout the `--vulnerable` switch it seems to use my cached login and I don't even need to login once.\r\n\r\nExpected behavior:\r\n\r\nI would expect to login at most once for the command to finish.\r\n\r\nLog Output:\r\n[log.txt](https://github.com/NuGet/Home/files/10848428/log.txt)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"27495402548","Type":"IssuesEvent","CreatedAt":"2023-03-05T04:09:07","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12269","RelatedDescription":"Closed issue \"Performance regression of NuGet restores in the sdk v7.0.100 due to calculation of \"CentralTransitiveDependencyGroups\"\" (#12269) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n7.0.100\r\n\r\n### Worked before?\r\n\r\n6.0.400\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nNuGet restore got considerably slower due to changes in how the `CentralTransitiveDependencyGroups` is calculated (https://github.com/NuGet/NuGet.Client/pull/4669.\r\nFor some of our internal solutions (which, unfortunately, we cannot share publicly ) the restore time was increased to **tens of minutes**.  It makes it impossible for us to migrate to dotnet 7. We can't share our internal solution but, we have a public repro that demonstrates the problem on a smaller scale where the restore time is doubled.\r\n\r\n1: checkout https://github.com/marcin-krystianc/TestSolutions/tree/master/LargeAppWithPrivatePackagesCentralisedNGBVRemoved\r\n2. create `global.json` for older versions e.g. `6.0.400`\r\n3. Go to `LargeAppWithPrivatePackagesCentralisedNGBVRemoved\\solution` directory and run `dotnet restore --force -clp:summary /p:RestoreUseStaticGraphEvaluation=true` to measure performance before the problem existed\r\n4. set version 7.0.100 in `global.json`\r\n5. run `dotnet restore --force -clp:summary /p:RestoreUseStaticGraphEvaluation=true` again to see performance regression (45s vs 90s on my machine)\r\n\r\nPS:\r\nI'm going to submit a PR with a fix for this problem.\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"27482346297","Type":"IssuesEvent","CreatedAt":"2023-03-03T21:48:03","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12164","RelatedDescription":"Closed issue \"[Bug]: `NuGet.VisualStudio` depends on package not existing on NuGet.org\" (#12164) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nNuGet.VisualStudio package 17.3.0 and 17.3.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nReference `NuGet.VisualStudio` from NuGet.org feed.\r\nObserve:\r\n\r\n> Error NU1603: NuGet.VisualStudio 17.3.0 depends on Microsoft.VisualStudio.TemplateWizardInterface (>= 17.1.0-preview-2-31918-073) but Microsoft.VisualStudio.TemplateWizardInterface 17.1.0-preview-2-31918-073 was not found. An approximate best match of Microsoft.VisualStudio.TemplateWizardInterface 17.1.32210.191 was resolved.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"},{"Id":"26018738970","Type":"IssuesEvent","CreatedAt":"2022-12-21T10:42:59","Actor":"zivkan","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Closed issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."},{"Id":"26013885749","Type":"IssuesEvent","CreatedAt":"2022-12-21T06:13:15","Actor":"Bdbdbandn","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/67","RelatedDescription":"Opened issue \"https://www.dropbox.com/s/bi5mynlyl2b3a16/nutrition.pdf?dl=0\" (#67) at NuGet/Announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2023-03-06T03:30:26.6613063Z","RunDurationInMilliseconds":2510}