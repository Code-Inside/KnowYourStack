{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41638043008","Type":"PullRequestEvent","CreatedAt":"2024-09-05T01:18:06","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10171","RelatedDescription":"Merged pull request \"Fix BlobServiceClient Constructor\" (#10171) at NuGet/NuGetGallery","RelatedBody":"Fixes a blob service client constructor that was throwing null or whitespace Argument exceptions and causing the Ctalog2Icons job to restart repeatedly.\r\n\r\nHad to close the previous PR as that was branched off main, and would have brough in extra commits."},{"Id":"41636531598","Type":"PullRequestEvent","CreatedAt":"2024-09-04T23:39:55","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10171","RelatedDescription":"Opened pull request \"Fix BlobServiceClient Constructor\" (#10171) at NuGet/NuGetGallery","RelatedBody":"Fixes a blob service client constructor that was throwing null or whitespace Argument exceptions and causing the Ctalog2Icons job to restart repeatedly."},{"Id":"41636517432","Type":"PullRequestEvent","CreatedAt":"2024-09-04T23:38:56","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10170","RelatedDescription":"Closed pull request \"Fix BlobServiceClient Constructor\" (#10170) at NuGet/NuGetGallery","RelatedBody":"Fixes a blob service client constructor that was throwing null or whitespace Argument exceptions and causing the Ctalog2Icons job to restart repeatedly."},{"Id":"41635619621","Type":"PullRequestEvent","CreatedAt":"2024-09-04T22:41:59","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10170","RelatedDescription":"Opened pull request \"Fix BlobServiceClient Constructor\" (#10170) at NuGet/NuGetGallery","RelatedBody":"Fixes a blob service client constructor that was throwing null or whitespace Argument exceptions and causing the Ctalog2Icons job to restart repeatedly."},{"Id":"41632477743","Type":"PullRequestEvent","CreatedAt":"2024-09-04T20:20:08","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10161","RelatedDescription":"Merged pull request \"Migrate Validation orchestrator jobs to new SDK and Managed Identities\" (#10161) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5440\r\n\r\n### Background\r\n\r\nThis migrates some of the Validation Jobs to use MSI with the new SDKs. I've deployed these changes to DEV using these config files: https://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/2473, and E2E tests pass + I don't see any exceptions in AI logs.\r\n\r\nThese are the jobs I tested:\r\n- [[NuGet][Continuous] Validation.Orchestrator](https://devdiv.visualstudio.com/DevDiv/_release?_a=releases&view=all&definitionId=1617)\r\n- [[NuGet][Continuous] Validation.Symbols.Job](https://devdiv.visualstudio.com/DevDiv/_release?_a=releases&view=all&definitionId=1584)\r\n- [[NuGet][Continuous] Validation.SymbolsOrchestrator](https://devdiv.visualstudio.com/DevDiv/_release?_a=releases&view=all&definitionId=1605)\r\n- [[NuGet][Daily] Validation.PackageSigning.RevalidateCertificate](https://devdiv.visualstudio.com/DevDiv/_release?_a=releases&view=all&definitionId=1609)\r\n\r\n### Description of the changes\r\n\r\nI had to configure the Lease service (used by the Validation Orchestrator jobs) to use MSI. All other jobs and storage connections work without any additional code changes. Andrei's changes in `NuGet.Jobs.Common` and `Validation.Common.Job` here addressed them: https://github.com/NuGet/NuGetGallery/pull/10153\r\n\r\n`Validation.Common.Job` had a reference for `WindowsAzure.Storage` that I had to remove. `NuGet.Services.V3` is downstream and consumes this package via `Validation.Common.Job`, so I had to add an explicit reference to this package in `NuGet.Services.V3`."},{"Id":"41596679639","Type":"PullRequestEvent","CreatedAt":"2024-09-03T22:26:38","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10169","RelatedDescription":"Merged pull request \"Binding redirect update\" (#10169) at NuGet/NuGetGallery","RelatedBody":"Adding binding redirect for `Microsoft.Extensions.DependencyInjection` following the version bump in shims library. Without it, Gallery fails on the first auditing call."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41636285595","Type":"IssuesEvent","CreatedAt":"2024-09-04T23:23:10","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13768","RelatedDescription":"Opened issue \"testFile.txt is not cleaned up after running Tests\" (#13768) at NuGet/Home","RelatedBody":"After running unit tests in the NuGet.Client repo., I noticed there are non-empty folders remaining in my `.test/work/` directory.\r\n\r\nIt seems that NuGet.Test.Utility.TestDirectory attempts to delete test folders after test completion; however, `NuGetPackageFileServiceTests` do 2 things:\r\n1. Files are locked open due to their file sharing access.\r\n2. A readonly test file is created, so it cannot be deleted\r\n"},{"Id":"41636169441","Type":"IssuesEvent","CreatedAt":"2024-09-04T23:15:48","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13767","RelatedDescription":"Opened issue \"`dotnet list package --vulerable` should support auditSources\" (#13767) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\n`dotnet list package --vulnerable` was created before `NuGetAudit` or `auditSources`.  It still only reports vulnerabilities when the source's package metadata (\"registration\") endpoint reports the vulnerability.  When a project has a lot of packages (especially transitive packages and `--include-transitive is used), the command can take a long time while many HTTP requests are made.\n\n### Desired Behavior\n\nIf NuGetAudit reports a vulnerability during restore, then `dotnet list package --vulnerable --include-transitive` should report it too, even if none of the **package** sources have vulnerability data, but an audit source is defined.\n\n### Additional Context\n\n_No response_"},{"Id":"41636093858","Type":"IssuesEvent","CreatedAt":"2024-09-04T23:10:59","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13607","RelatedDescription":"Closed issue \"Visual Studio \"preview install\" should warn about packages with known vulnerabilities\" (#13607) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nWhen installing packages in Visual Studio's package manager UI, (unless disabled) it will pop up a preview window telling you the list of packages that will be installed/upgraded. If this list contains packages with known vulnerabilities, it should tell you, before clicking the OK button to actually install the packages in the project.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"41635570264","Type":"IssuesEvent","CreatedAt":"2024-09-04T22:39:27","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13566","RelatedDescription":"Closed issue \"[Epic] 'dotnet nuget why' bugs and improvements\" (#13566) at NuGet/Home","RelatedBody":"- [x] https://github.com/NuGet/Home/issues/13553\r\n- [ ] https://github.com/NuGet/Home/issues/13552"},{"Id":"41601456283","Type":"IssuesEvent","CreatedAt":"2024-09-04T03:24:47","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13749","RelatedDescription":"Closed issue \"Navigation telemetry for hyperlinks: License, ReportAbuse, Readme, ProjectUrl\" (#13749) at NuGet/Home","RelatedBody":"Enable the navigation telemetry in the Details Pane for existing hyperlinks:\r\n1. License\r\n2. ReportAbuse\r\n3. Readme\r\n4. ProjectUrl\r\n\r\nWhile adding Owner Profile telemetry in https://github.com/NuGet/Home/issues/13738, I found that these were not emitting events as they were not setup correctly, and I decided to quickly enable them. It may be interesting to know which hyperlinks are used most commonly."},{"Id":"41599257503","Type":"IssuesEvent","CreatedAt":"2024-09-04T01:06:33","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13766","RelatedDescription":"Opened issue \"Read package icon from local folders when remote feed (upstream) cannot access metadata\" (#13766) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nAs identified in https://github.com/NuGet/Home/issues/9250, on the Browse tab, when search results come from an upstream source in an Azure DevOps feed the package icon may be inaccessible.\n\n### Desired Behavior\n\nIf the package already exists in the global packages folder or other local folder on the machine, load the icon from there rather than show the default icon.\n\n### Additional Context\n\n_No response_"},{"Id":"41598985334","Type":"IssuesEvent","CreatedAt":"2024-09-04T00:49:31","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13765","RelatedDescription":"Opened issue \"[Behavior Change] Upgrade missing README warning to and error if <NuGetRequireReadMe> is true\" (#13765) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nWhen packing a NuGet project, we warn if a README is missing.\n\n### Desired Behavior\n\nWhen packing a NuGet project and a project specifies <NuGetRequireReadMe>, we should upgrade to an error if a README is missing.\n\n### Additional Context\n\nhttps://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5039"},{"Id":"41598832349","Type":"IssuesEvent","CreatedAt":"2024-09-04T00:39:31","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13764","RelatedDescription":"Opened issue \"[Feature] Provide a MSBuild property that can generate a markdown file with MSBuild.\" (#13764) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe\n\n### The Elevator Pitch\n\nIf a project has a property such as `<PackageReadMeContents>...</PackageReadMeContents>` which contained valid markdown, MSBuild could potentially create a README.md on behalf of the project and drop it in the root of the .nupkg if people prefer flexibility in providing a README.md.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"41598478309","Type":"IssuesEvent","CreatedAt":"2024-09-04T00:18:01","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13763","RelatedDescription":"Opened issue \"Report the path when unable to read corrupted .nupkg.metadata \" (#13763) at NuGet/Home","RelatedBody":"Pick a .nupkg.metadata file from your package cache and replace the contents with some NULL bytes, or corrupt it otherwise\r\nUse RestoreEx that reads that file\r\n\r\nExpected: nice error message `The file 'C:\\Users\\user\\.nuget\\packages\\microsoft.win32.systemevents\\8.0.0\\.nupkg.metadata' is corrupted. It is recommended to clear the package cache using dotnet nuget locals all --clear and then retry the restore.`\r\n\r\nActual: \r\n```\r\nd:\\Current\\bin\\amd64\\NuGet.RestoreEx.targets(19,5): error : Found invalid data while decoding. [D:\\git\\move\\temp-msbuild-restore\\dirs.proj]\r\nd:\\Current\\bin\\amd64\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Packaging.NupkgMetadataFileFormat.Read(TextReader reader, ILogger log, String path) [D:\\git\\move\\temp-msbuild-restore\\dirs.proj]\r\nd:\\Current\\bin\\amd64\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Packaging.NupkgMetadataFileFormat.Read(Stream stream, ILogger log, String path) [D:\\git\\move\\temp-msbuild-restore\\dirs.proj]\r\nd:\\Current\\bin\\amd64\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Common.FileUtility.SafeRead[T](String filePath, Func`3 read) [D:\\git\\move\\temp-msbuild-restore\\dirs.proj]\r\n```\r\n\r\nSee also:\r\nhttps://github.com/NuGet/NuGet.Client/pull/4660\r\nhttps://github.com/NuGet/Home/issues/10882"},{"Id":"41595225145","Type":"IssuesEvent","CreatedAt":"2024-09-03T21:18:49","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13715","RelatedDescription":"Closed issue \"Error reports of invalid or missing transitive NuGet dependencies are unusable\" (#13715) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Error-reports-of-invalid-or-missing-tran/10723823)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:17.12 Preview 1]\nIt's great that Visual Studio tells me that it can't resolve a package, but there are no actions that can be taken and no report of where the transitive dependency comes from.\n\nIt would be great if when I clicked on the error in the error log in Visual Studio if it took me directly to the package that has the missing transitive dependency\n\n---\n### Original Comments\n\n#### Feedback Bot on 8/15/2024, 06:22 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"41594979575","Type":"IssuesEvent","CreatedAt":"2024-09-03T21:08:32","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13695","RelatedDescription":"Closed issue \"Fetch transitive packages for all PM UI levels\" (#13695) at NuGet/Home","RelatedBody":"In its simplified form, this involves removing the IsSolution checks for code that queries for transitive packages and adjusting the code to handle the Solution-level PM UI scenarios."},{"Id":"41590180924","Type":"IssuesEvent","CreatedAt":"2024-09-03T18:07:16","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13762","RelatedDescription":"Opened issue \"[Transitive's in Solution PM UI] Update vulnerability warning indicators\" (#13762) at NuGet/Home","RelatedBody":"Update the tooltip for the vulnerability warning indicator in the package list to provide more details about which versions specifically are vulnerable. (stretch goal)"},{"Id":"41590155846","Type":"IssuesEvent","CreatedAt":"2024-09-03T18:06:22","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13761","RelatedDescription":"Opened issue \"[Transitive's in Solution PM UI] Update the tooltip for packages to show transitive origins\" (#13761) at NuGet/Home","RelatedBody":"Update the tooltip creation code so a package that is both top-level and transitive shows the transitive origin details."},{"Id":"41590123635","Type":"IssuesEvent","CreatedAt":"2024-09-03T18:05:11","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13760","RelatedDescription":"Opened issue \"[Transitive's in Solution PM UI] Get vulnerability info for all the installed versions\" (#13760) at NuGet/Home","RelatedBody":"PackageItemViewModel will iterate over the list of installedVersions and get vulnerability info from the audit database for each of the versions which will determine if the package is vulnerable in the package list."},{"Id":"41590089753","Type":"IssuesEvent","CreatedAt":"2024-09-03T18:03:57","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13759","RelatedDescription":"Opened issue \"[Transitive's in Solution PM UI] Combine all packages metadata into a PackageItemViewModel\" (#13759) at NuGet/Home","RelatedBody":"PackageItemLoader will handle combining the package with all its versions into a single PackageItemViewModel with a list of installedVersions."},{"Id":"41590037506","Type":"IssuesEvent","CreatedAt":"2024-09-03T18:02:06","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13758","RelatedDescription":"Opened issue \"[Transitive's in Solution PM UI] InstalledAndTransitivePackageFeed should know the metadata for all the packages\" (#13758) at NuGet/Home","RelatedBody":"Change how InstalledAndTransitivePackageFeed deduplicates each of the top-level and transitive packages with GetLatest and gets the metadata for said package.\r\n-- Make it get metadata only for the latest, but return all of the packages"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-09-05T03:30:19.4105027Z","RunDurationInMilliseconds":850}