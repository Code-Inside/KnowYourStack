{"Data":{"Blog":{"FeedItems":[{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14907321730","Type":"PullRequestEvent","CreatedAt":"2021-01-22T02:51:19","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8385","RelatedDescription":"Merged pull request \"Add icons to project to ensure bundling\" (#8385) at NuGet/NuGetGallery","RelatedBody":"Despite the name of this branch, this change removes the target=\"_blank\" attribute, because it's ignored by chromium browsers, and we don't do it in other anchors for 3rd party site.\r\n\r\nBut the important thing is that this change fixes a bug where the icons for the FuGet links aren't bundled--they weren't appearing on the deployed webapp. This completes this work: https://github.com/NuGet/NuGetGallery/issues/7850"},{"Id":"14907264632","Type":"PullRequestEvent","CreatedAt":"2021-01-22T02:42:26","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8385","RelatedDescription":"Opened pull request \"Add icons to project to ensure bundling\" (#8385) at NuGet/NuGetGallery","RelatedBody":"Despite the name of this branch, this change removes the target=\"_blank\" attribute, because it's ignored by chromium browsers, and we don't do it in other anchors for 3rd party site.\r\n\r\nBut the important thing is that this change fixes a bug where the icons for the FuGet links aren't bundled--they weren't appearing on the deployed webapp. This completes this work: https://github.com/NuGet/NuGetGallery/issues/7850"},{"Id":"14907136804","Type":"IssuesEvent","CreatedAt":"2021-01-22T02:22:31","Actor":"here101","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8383","RelatedDescription":"Closed issue \"Download package in china the url change.\" (#8383) at NuGet/NuGetGallery","RelatedBody":"Download package very slow in china #6872\r\nPlease tell me which URL is url = \"https://www.nuget.org/api/v2/package/$PackageName/$Version\" if you change it to China, I tried to chang it to url = \"https://www.api.nuget.org/v3/ package/$PackageName/$Version\", but it failed.Thanks for your answers."},{"Id":"14904807301","Type":"IssuesEvent","CreatedAt":"2021-01-21T21:18:40","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8384","RelatedDescription":"Opened issue \"[Readme] DB2Catalog should support ingesting new \"Readme\" tag inside the nuspec\" (#8384) at NuGet/NuGetGallery","RelatedBody":"DB2Catalog should ingest the new \"Readme\" tag and provide this info to the following jobs.\n"},{"Id":"14894489793","Type":"IssuesEvent","CreatedAt":"2021-01-21T07:38:19","Actor":"here101","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8383","RelatedDescription":"Opened issue \"Download package in china the url change.\" (#8383) at NuGet/NuGetGallery","RelatedBody":"Download package very slow in china #6872\r\nPlease tell me which URL is url = \"https://www.nuget.org/api/v2/package/$PackageName/$Version\" if you change it to China, I tried to chang it to url = \"https://www.api.nuget.org/v3/ package/$PackageName/$Version\", but it failed.Thanks for your answers."},{"Id":"14893943906","Type":"PullRequestEvent","CreatedAt":"2021-01-21T06:34:49","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8382","RelatedDescription":"Merged pull request \"Read out warning message\" (#8382) at NuGet/NuGetGallery","RelatedBody":"We normally don't announce the warning. But vendor pointed out need announce warning here. \r\n\r\nThis fix only for ticket below.\r\n\r\n**Question**: will be good idea to announce all the alert warning since we normally don't do?\r\n\r\nAddresses https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1069948"},{"Id":"14893797282","Type":"PullRequestEvent","CreatedAt":"2021-01-21T06:15:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8382","RelatedDescription":"Opened pull request \"read out warning message\" (#8382) at NuGet/NuGetGallery","RelatedBody":"We normally don't announce the warning. But vendor pointed out need announce warning here. \r\n\r\nThis fix only for this.\r\n\r\nQuestions: will be good idea to announce all the alert warning since we normally don't do?\r\n\r\nAddresses https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1069948"},{"Id":"14876173951","Type":"IssuesEvent","CreatedAt":"2021-01-20T00:17:14","Actor":"augustoproiete","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8381","RelatedDescription":"Opened issue \"Add Cake instructions for NuGet packages\" (#8381) at NuGet/NuGetGallery","RelatedBody":"## Background\r\n\r\n**[Cake](https://cakebuild.net)** (C# Make) is a free and open source cross-platform build automation system with a C# DSL for tasks such as compiling code, copying files and folders, running unit tests, compressing files and building NuGet packages.\r\n\r\n[![image](https://user-images.githubusercontent.com/177608/105109451-f067ed80-5a92-11eb-8dff-a6978c3d9205.png)](https://cakebuild.net/)\r\n\r\nCake is widely used by thousands of [open-source projects](https://github.com/cake-build/cake/network/dependents?package_id=UGFja2FnZS0xNTY3NDU3NzY%3D), is the [third most downloaded .NET tool](https://www.nuget.org/packages?packagetype=dotnettool&sortby=relevance&q=&prerel=True) at the moment with over 4 million downloads, has a [healthy community of contributors](https://cakebuild.net/community/thanks/), and is a [member of the .NET Foundation](https://dotnetfoundation.org/projects/cake).\r\n\r\nOne of the features of Cake is the ability to consume NuGet packages from any NuGet compatible feed, and leverage them in the build orchestration process. For example, within a Cake build, a user can reference the [Polly](https://www.nuget.org/packages/Polly/) NuGet package, and leverage all of its features, defining and executing different Polly policies.\r\n\r\nNuGet packages can be used in Cake in a variety of ways:\r\n\r\n- As a regular NuGet package (Package Reference, packages.config, NuGet Package Manager UI, etc.) on a [Console application](https://cakebuild.net/docs/running-builds/runners/cake-frosting).\r\n\r\n- As a **[Cake Addin](https://cakebuild.net/docs/extending/addins/)** (`#addin`). In short, this means: Download the NuGet package, and load the assemblies within it into the host process executing the build process. Virtually any NuGet package containing .NET assembly(ies) can be loaded as a Cake Addin. e.g. `#addin nuget:?package=Polly&version=7.2.1`\r\n\r\n- As a **[Cake Tool](https://cakebuild.net/docs/writing-builds/tools/installing-tools)** (`#tool`). In short, this means: Download the NuGet package, and extract its contents to a folder, so that its files become available to the build process. Virtually any NuGet package can be loaded as a Cake Tool. e.g. `#tool nuget:?package=7-Zip.CommandLine&version=18.1.0`\r\n\r\n- As a **[Cake Module](https://cakebuild.net/docs/extending/modules/)** (`#module`). In short, this is very similar to Cake Addin, with the exception that modules are loaded earlier in the lifecycle and can replace and/or add Cake features that can be leveraged by the build process later. e.g. `#module nuget:?package=Cake.Npm.Module&version=0.1.0`\r\n\r\n- As a **[Cake Recipe](https://cakebuild.net/docs/writing-builds/reusing-builds#recipe-nuget-packages)** (`#load`). In short, this means: Download a NuGet package containing Cake scripts, and merge these scripts into the current build, allowing for sharing of reusable snippets of code.  e.g. `#load nuget:?package=Cake.Recipe&version=2.1.0`\r\n\r\n## Proposal\r\n\r\nWe'd like to display installation instructions on how to use NuGet packages with Cake, in the NuGet Gallery, on a new tab with the title \"Cake Build\", which would display a tailored set of instructions if a package is detected as being built specifically for use with Cake ([Cake Extension](https://cakebuild.net/docs/extending/)) or generic instructions otherwise.\r\n\r\nThe criteria we'd like to use for detecting if a package as built specifically for use with Cake would be the presence of specific `tags` in the package metadata:\r\n\r\n### Cake Addin\r\n\r\n- If a package contains the tag `cake-addin`, we assume its author meant for this package to be consumed as a Cake Addin. As such we would show a tailored instruction to install as a Cake Addin:\r\n\r\n![image](https://user-images.githubusercontent.com/177608/104796691-f60dbc80-578e-11eb-8f43-ba4f294f80d9.png)\r\n\r\n### Cake Module\r\n\r\n- If a package contains the tag `cake-module`, we assume its author meant for this package to be consumed as a Cake Module . As such we would show a tailored instruction to install as a Cake Module:\r\n\r\n![image](https://user-images.githubusercontent.com/177608/104796701-10e03100-578f-11eb-9591-f1ea1a7d1ba3.png)\r\n\r\n### Cake Recipe\r\n\r\n- If a package contains the tag `cake-recipe`, we assume its author meant for this package to be consumed as a Cake Recipe.  As such we would show a tailored instruction to install as a Cake Recipe:\r\n\r\n![image](https://user-images.githubusercontent.com/177608/104796718-379e6780-578f-11eb-9bc4-da73cc7ebdfc.png)\r\n\r\n### Other packages\r\n\r\n- If a package does not contain any of the known `cake-` tags, we'd display generic instructions for the user to consume the package either as a Cake Addin or as a Cake Tool, and leave it to the user to choose what is more appropriate for their scenario.\r\n\r\n![image](https://user-images.githubusercontent.com/177608/104796752-7b916c80-578f-11eb-93e9-4317e8f28f70.png)\r\n\r\n## 3rd-Party NuGet client listing criteria\r\n\r\nWe believe Cake meets all the criteria for being listed as a 3rd-party client on nuget.org:\r\n\r\n- :white_check_mark: **Significant adoption in .NET community**: Cake is widely used by thousands of [open-source projects](https://github.com/cake-build/cake/network/dependents?package_id=UGFja2FnZS0xNTY3NDU3NzY%3D), is the [third most downloaded .NET tool](https://www.nuget.org/packages?packagetype=dotnettool&sortby=relevance&q=&prerel=True) at the moment with over 4 (four) million downloads\r\n- :white_check_mark: **Cake is actively maintained and updated**: Cake published over `110` releases since 2014 (with `10` releases in 2020), has a [healthy community of contributors](https://cakebuild.net/community/thanks/), and is a [member of the .NET Foundation](https://dotnetfoundation.org/projects/cake)\r\n- :white_check_mark: **Security compliance**: Cake is compliant with the latest security requirements as implemented by NuGet.org\r\n\r\n## Implementation\r\n\r\n[Members of the Cake team](https://cakebuild.net/docs/team/) would send one or more pull-requests to implement the final design that ends up being agreed, based on the above.\r\n\r\n---\r\n\r\n/cc @joelverhagen @anangaur, @jcjiang\r\n"},{"Id":"14876009397","Type":"PullRequestEvent","CreatedAt":"2021-01-19T23:57:16","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8380","RelatedDescription":"Opened pull request \"[Stats]Enable Alternate storage for downloads.v1.json\" (#8380) at NuGet/NuGetGallery","RelatedBody":"Enables (behind a feature flag) support for allowing an alternate location for downloads.v1.json source."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14904339971","Type":"IssuesEvent","CreatedAt":"2021-01-21T20:33:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10424","RelatedDescription":"Closed issue \"Unhandled exceptions in Restore should generate assets file to capture error messages\" (#10424) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used VS 16.8\r\n\r\nWhen an unhandled exception occurs in Restore, for SDK style projects, we have no way of reporting that error in the Error List since there's no assets file. This leads to other arbitrary (and wrong) messages being shown, such as an unknown TFM. \r\n\r\nThe scenario I propose we handle for now is a non-existent package source (FatalProtocolException).\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a `config` file pointing to a non-existent package source\r\n2. Open a new SDK style project (without an existing assets file) (I used net5.0-windows)\r\n3. Build, and some errors will occur.\r\n`NETSDK1005    Assets file <proj>\\obj\\project.assets.json' doesn't have a target for 'net5.0-windows'. Ensure that restore has run and that you have included 'net5.0-windows' in the TargetFrameworks for your project.  `\r\n\r\nor perhaps\r\n\r\n`NETSDK1004\tAssets file '<proj>\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file.\t\r\n<proj>\tC:\\Program Files\\dotnet\\sdk\\5.0.200-preview.20614.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets\t195`\r\n\r\n## Other suggested things\r\nRelated: https://github.com/NuGet/Home/issues/7012\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14903894450","Type":"IssuesEvent","CreatedAt":"2021-01-21T19:50:51","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/10424","RelatedDescription":"Reopened issue \"Unhandled exceptions in Restore should generate assets file to capture error messages\" (#10424) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used VS 16.8\r\n\r\nWhen an unhandled exception occurs in Restore, for SDK style projects, we have no way of reporting that error in the Error List since there's no assets file. This leads to other arbitrary (and wrong) messages being shown, such as an unknown TFM. \r\n\r\nThe scenario I propose we handle for now is a non-existent package source (FatalProtocolException).\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a `config` file pointing to a non-existent package source\r\n2. Open a new SDK style project (without an existing assets file) (I used net5.0-windows)\r\n3. Build, and some errors will occur.\r\n`NETSDK1005    Assets file <proj>\\obj\\project.assets.json' doesn't have a target for 'net5.0-windows'. Ensure that restore has run and that you have included 'net5.0-windows' in the TargetFrameworks for your project.  `\r\n\r\nor perhaps\r\n\r\n`NETSDK1004\tAssets file '<proj>\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file.\t\r\n<proj>\tC:\\Program Files\\dotnet\\sdk\\5.0.200-preview.20614.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets\t195`\r\n\r\n## Other suggested things\r\nRelated: https://github.com/NuGet/Home/issues/7012\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14903318998","Type":"IssuesEvent","CreatedAt":"2021-01-21T18:58:24","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10442","RelatedDescription":"Closed issue \"Uninstalled NuGet packages remain in the Visual Studio solution explorer\" (#10442) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nProduct: Visual Studio\r\n\r\nNuGet version: 5.9.0.7005\r\n\r\nVS version: 16.9.0 preview 3 (30907.6 main)\r\n\r\nWorked before? Yes\r\n\r\nWorks fine in Visual Studio 16.9.0 preview 2 with NuGet 5.9.0.6967.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Install a package to a project through any means (PMC or UI)\r\n2. Uninstall a package to a project through any means (PMC or UI)\r\n3. Check dependencies folder for project in the solution explorer and notice that uninstalled packages haven't been removed there even though they have been successfully removed from the project and assets file.\r\n\r\n![image](https://user-images.githubusercontent.com/15097183/104070881-e9f58e00-51d5-11eb-83cb-1ad7c762975a.png)"},{"Id":"14903300596","Type":"IssuesEvent","CreatedAt":"2021-01-21T18:56:46","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10438","RelatedDescription":"Closed issue \"Alias in ProjectReference does not work for framework-included packages\" (#10438) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIn #4989 alias support for PackageReference was added, but when I try to create an alias to a framework-provided package this does not appear to work.\r\n\r\nIn particular, in a .NET 5 web application I add\r\n```\r\n<PackageReference Include=\"Microsoft.Extensions.Logging.Abstractions\" Version=\"5.0.0\" Aliases=\"logging\" />\r\n```\r\nbut `extern alias logging;` does not compile:\r\n```\r\nerror CS0430: Der externe Alias \"logging\" wurde nicht in einer /reference-Option angegeben.\r\n```\r\nIf I instead do it in a console application it indeed does work.\r\n\r\nUsing VS 2019 Update 9 Preview 2\r\n"},{"Id":"14903228530","Type":"IssuesEvent","CreatedAt":"2021-01-21T18:50:20","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10474","RelatedDescription":"Opened issue \"WCAG 1.3.1: The given element is expected to have the following structure: ListItem and (NoChild(IsControlElement) or AllChildren(not(IsControlElement) or (Edit or Image or Text)))\" (#10474) at NuGet/Home","RelatedBody":"I believe we can reduce the programmatic representation of our Packages list. Investigate.\r\n\r\n**App:** devenv\r\n\r\n**Element path:** list item 'bootstrap'\r\n\r\n**Issue Details:** The given element is expected to have the following structure: ListItem and (NoChild(IsControlElement) or AllChildren(not(IsControlElement) or (Edit or Image or Text))). [WCAG 1.3.1](https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html)\r\n\r\n**How To Fix:** The given element is expected to have the following structure: ListItem and (NoChild(IsControlElement) or AllChildren(not(IsControlElement) or (Edit or Image or Text))).\r\n\r\nThis accessibility issue was found using Accessibility Insights for Windows, a tool that helps debug and find accessibility issues earlier. Get more information and download this tool at https://aka.ms/AccessibilityInsights."},{"Id":"14903114982","Type":"IssuesEvent","CreatedAt":"2021-01-21T18:40:19","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10424","RelatedDescription":"Closed issue \"Unhandled exceptions in Restore should generate assets file to capture error messages\" (#10424) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used VS 16.8\r\n\r\nWhen an unhandled exception occurs in Restore, for SDK style projects, we have no way of reporting that error in the Error List since there's no assets file. This leads to other arbitrary (and wrong) messages being shown, such as an unknown TFM. \r\n\r\nThe scenario I propose we handle for now is a non-existent package source (FatalProtocolException).\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a `config` file pointing to a non-existent package source\r\n2. Open a new SDK style project (without an existing assets file) (I used net5.0-windows)\r\n3. Build, and some errors will occur.\r\n`NETSDK1005    Assets file <proj>\\obj\\project.assets.json' doesn't have a target for 'net5.0-windows'. Ensure that restore has run and that you have included 'net5.0-windows' in the TargetFrameworks for your project.  `\r\n\r\nor perhaps\r\n\r\n`NETSDK1004\tAssets file '<proj>\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file.\t\r\n<proj>\tC:\\Program Files\\dotnet\\sdk\\5.0.200-preview.20614.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets\t195`\r\n\r\n## Other suggested things\r\nRelated: https://github.com/NuGet/Home/issues/7012\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14901986707","Type":"IssuesEvent","CreatedAt":"2021-01-21T17:06:40","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10473","RelatedDescription":"Closed issue \"[Question] How to obtain the list of project references changed to package references during nuget pack?\" (#10473) at NuGet/Home","RelatedBody":"I need to get a list of project references that are transformed into package references when building a solution in Visual Studio. Is there an extension point in the Nuget.Pack.Targets file that can provide me with these details?\r\n\r\nI've asked the [same question on StackOverflow](https://stackoverflow.com/questions/65808800/how-to-obtain-the-list-of-project-references-changed-to-package-references-durin), and there is more detail there on the scenario that I'm trying to resolve.\r\n\r\nNuGet product used (Visual Studio):\r\nProduct version: 16.8.3\r\n"},{"Id":"14901704862","Type":"IssuesEvent","CreatedAt":"2021-01-21T16:45:33","Actor":"TheNybbler","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10473","RelatedDescription":"Opened issue \"[Question] How to obtain the list of project references changed to package references during nuget pack?\" (#10473) at NuGet/Home","RelatedBody":"I need to get a list of project references that are transformed into package references when building a solution in Visual Studio. Is there an extension point in the Nuget.Pack.Targets file that can provide me with these details?\r\n\r\nI've asked the [same question on StackOverflow](https://stackoverflow.com/questions/65808800/how-to-obtain-the-list-of-project-references-changed-to-package-references-durin), and there is more detail there on the scenario that I'm trying to resolve.\r\n\r\nNuGet product used (Visual Studio):\r\nProduct version: 16.8.3\r\n"},{"Id":"14896020567","Type":"IssuesEvent","CreatedAt":"2021-01-21T09:51:54","Actor":"ghominejad","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10472","RelatedDescription":"Opened issue \"Problem when pushing via .Net 5 SDK docker image \" (#10472) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\nWhen I push it locally or via .Net 3.1 SDK docker image, everything woks fine but via  .Net 5 SDK docker image it has source parameter error, while I've set the source parameter.\r\n\r\n**Product version:**\r\n mcr.microsoft.com/dotnet/sdk:5.0-buster-slim\r\n\r\n## Repro steps and/or sample project\r\n\r\n$ dotnet nuget push **/*.nupkg -k $NugetToken -s https://api.nuget.org/v3/index.json --skip-duplicate -n 1\r\n\r\n### Verbose Logs\r\n\r\n`\r\nPulling docker image **mcr.microsoft.com/dotnet/sdk:5.0-buster-slim** ...\r\n\r\n$ dotnet pack src/Gita.Infrastructure\r\n\r\nSuccessfully created package '/builds/Infrastructure/bin/Debug/**Infrastructure.5.0.0.nupkg**'\r\n\r\ndotnet nuget push **/*.nupkg -k $NugetToken -s https://api.nuget.org/v3/index.json --skip-duplicate -n 1\r\n\r\n**error: Source parameter was not specified.**\r\n\r\n`"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1349825493265231872","CreatedAt":"2021-01-14T21:07:30+00:00","UserScreenname":"nuget","Text":"Thanks for the birthday wishes everyone! 🥳🥳🥳\n\nThank you to all of the team members (past and present), external con… https://t.co/mWYE55Bh9b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":18,"FavoriteCount":4,"RawContent":null},{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-22T05:30:38.5941045Z","RunDurationInMilliseconds":1612}