{"Data":{"Blog":{"FeedItems":[{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15602627087","Type":"IssuesEvent","CreatedAt":"2021-03-19T00:12:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8461","RelatedDescription":"Opened issue \"[README]\" (#8461) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\n\r\nClicking the Show More link clears the URL fragment and goes to the top of the page.\r\n\r\n### To Reproduce\r\n\r\n1. Go to https://dev.nugettest.org/packages/ICanHazReadme/1.0.1#show-readme-container\r\n2. Click Show More\r\n3. Wait a second\r\n\r\n### Expected behavior\r\n\r\nThe README should expand but the viewport should stay where it is.\r\n\r\nActual: it jumps up.\r\n\r\n### Screenshots\r\n\r\n![repro](https://user-images.githubusercontent.com/94054/111713555-21536d00-880d-11eb-91f1-90fa6225b28b.gif)\r\n"},{"Id":"15602535335","Type":"IssuesEvent","CreatedAt":"2021-03-19T00:00:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8460","RelatedDescription":"Opened issue \"[README] Empty embedded readme breaks the manage package > documentation section\" (#8460) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nI created a package with an empty README file. It seems to confuse the upload UI and the manage package Documentation section. It sort of looks like some of the code thinks it's a legacy readme package and other code thinks its an embedded readme.\r\n\r\n### To Reproduce\r\n\r\nGo here: https://dev.nugettest.org/packages/ICanHazReadme/1.0.2/Manage\r\n\r\nOr\r\n\r\n1. Create a nupkg with an embedded readme and make the readme empty (0 bytes)\r\n2. Upload to Gallery\r\n3. Notice the README preview on the upload package\r\n4. After the package is uploaded, go to the Manage Package page and expand the Documentation section\r\n\r\n### Expected behavior\r\n\r\nEither the package should be rejected or the package should be considered to have an embedded readme and no Preview button should appear.\r\n\r\n### Screenshots\r\n\r\nNo submit button:\r\n![image](https://user-images.githubusercontent.com/94054/111712721-71c9cb00-880b-11eb-8ed0-5522618fd639.png)\r\n"},{"Id":"15602529923","Type":"IssuesEvent","CreatedAt":"2021-03-19T00:00:21","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8459","RelatedDescription":"Opened issue \"[Readme] Images from untrusted domains are displayed from legacy readme\" (#8459) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nOnly images from trusted domains should be displayed. However, images from untrusted domains are still displayed for legacy readmes.\r\n\r\nFor example: https://dev.nugettest.org/packages/Loshar.Readme/3.0.0\r\n\r\n### To Reproduce\r\n\r\n1. Upload a package that does not have an embedded readme\r\n2. Add the following readme using the legacy readme feature: `![NuGet Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/NuGet_project_logo.svg/220px-NuGet_project_logo.svg.png)`\r\n3. Navigate to the package details page. The image is hosted by wikipedia.org which is not on the trusted domains list. It should not be rendered."},{"Id":"15602283251","Type":"IssuesEvent","CreatedAt":"2021-03-18T23:30:01","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8458","RelatedDescription":"Opened issue \"[README] Show more +/- is shown even if there is no additional content\" (#8458) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nWhen the README is short (like 1-3 lines) the \"Show more\" / \"Show less\" links are shown but if you click on them they don't do anything.\r\n\r\n### To Reproduce\r\n\r\n1. Go to this package: https://dev.nugettest.org/packages/ICanHazReadme/1.0.0\r\n2. Click \"Show more\" and \"Show less\"\r\n\r\n### Expected behavior\r\n\r\nThe link should not appear for short READMEs.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/94054/111710428-ea7a5880-8806-11eb-94b3-ef11fe2a20b1.png)\r\n"},{"Id":"15602071552","Type":"IssuesEvent","CreatedAt":"2021-03-18T23:05:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8457","RelatedDescription":"Opened issue \"[Readme] UTF8 characters broken in preview but work in expanded mode\" (#8457) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nUTF8 characters do not render properly in the README preview.\r\n\r\n### To Reproduce\r\n\r\n1. Go to: https://dev.nugettest.org/packages/Loshar.Readme/2.0.0#\r\n1. Look at the Documentation (notice the ?):\r\n\r\n![image](https://user-images.githubusercontent.com/737941/111708733-a2a60200-8803-11eb-8f53-0bb94d04f4d8.png)\r\n\r\n1. Now press `+ Show more` (notice the emojis):\r\n\r\n![image](https://user-images.githubusercontent.com/737941/111708768-afc2f100-8803-11eb-8a12-5dcb69b2a733.png)\r\n\r\n### Expected behavior\r\nUTF8 emojis should work in the preview mode."},{"Id":"15586402690","Type":"IssuesEvent","CreatedAt":"2021-03-18T01:52:53","Actor":"304NotModified","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8456","RelatedDescription":"Opened issue \"Stats: Community Packages shows non-Community Packages #2\" (#8456) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nThe Community Packages shows non-Community Packages, see screenshot\r\n\r\n\r\n\r\nurl: https://www.nuget.org/stats/packages\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. go to https://www.nuget.org/stats/packages\r\n\r\n\r\n### Expected behavior\r\nNot showing Microsoft packages when \"Show all packages\" isn't checked. Currently 3 microsoft.* packages are shown\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/5808377/111561543-e9a8de80-8794-11eb-9d5c-0a7e3b9e43b6.png)\r\n\r\n\r\n\r\nrelated: https://github.com/NuGet/NuGetGallery/issues/7314"},{"Id":"15586357541","Type":"PullRequestEvent","CreatedAt":"2021-03-18T01:46:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/3880","RelatedDescription":"Closed pull request \"Revert \"Fix 3107 - Gallery UTs take a long time to finish.\"\" (#3880) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"15554645194","Type":"IssuesEvent","CreatedAt":"2021-03-16T04:21:34","Actor":"PureKrome","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8455","RelatedDescription":"Opened issue \"[Feature Request] Private feeds locked by an ApiKey\" (#8455) at NuGet/NuGetGallery","RelatedBody":"Current NuGet gallery is for public consumption - it's like a single, PUBLIC feed. \r\n\r\nWould love to have a the ability to create private feeds, locked by api keys (which already exist).\r\n\r\nCurrently we could:\r\n- Use one of the -other- nuget server implementations that exist but this means we need to manage them (which most people don't need to want to manage anything, these days)\r\n- Use a commercial product. This is good for businesses that making a profit/want extra security+complience/advanced features/etc ... but there's still a section of the community that don't need all of that and/or don't make money (but still would like private feeds).\r\n\r\nSo it would be really awesome if this could be a feature that could be considered.\r\n\r\n\r\n(This idea was raised in #8314 )"},{"Id":"15553068767","Type":"PullRequestEvent","CreatedAt":"2021-03-16T00:33:54","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8454","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.03.09] FI of master into dev\" (#8454) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"15552784667","Type":"PullRequestEvent","CreatedAt":"2021-03-15T23:55:54","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8454","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.03.09] FI of master into dev\" (#8454) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"15550282963","Type":"PullRequestEvent","CreatedAt":"2021-03-15T19:39:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8453","RelatedDescription":"Merged pull request \"Simplify package ID regex\" (#8453) at NuGet/NuGetGallery","RelatedBody":"Also refactors some regex helpers.\r\n\r\nSee https://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGetGallery/pullrequest/1677"},{"Id":"15549341095","Type":"PullRequestEvent","CreatedAt":"2021-03-15T18:24:15","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8453","RelatedDescription":"Opened pull request \"Merged PR 1677: Simplify package ID regex\" (#8453) at NuGet/NuGetGallery","RelatedBody":"Also refactors some regex helpers.\r\n\r\nSee https://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGetGallery/pullrequest/1677"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15602434902","Type":"IssuesEvent","CreatedAt":"2021-03-18T23:48:52","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10668","RelatedDescription":"Opened issue \"Pack from Visual Studio doesn't work with embedded readme\" (#10668) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: Visual Studio\r\nProduct version: private build 5.10.0.7298\r\nhttps://devdiv.visualstudio.com/_apis/resources/Containers/7402507/VS15?itemPath=VS15%2FNuGet.Tools.vsix\r\n\r\n## Repro steps and/or sample project\r\n\r\n1. Create a SDK-based project (class library targeting .NET Standard 2.0 is easy way)\r\n1. Create a README.md file in the .project\r\n1. Open the .csproj and edit it to look something like this:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <PackageReadmeFile>README.md</PackageReadmeFile>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <None Include=\"README.md\" Pack=\"true\" PackagePath=\"\\\"/>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRight click on the project node and click Pack.\r\n\r\nLook in the produced .nupkg for a README.md ✔️ and for a `<readme>` element in the .nuspec ⚠️.\r\n\r\nThe file is there but the .nuspec is not having the `<readme>` element.\r\n\r\nHere is my example project: [ICanHazReadme.zip](https://github.com/NuGet/Home/files/6167766/ICanHazReadme.zip)\r\n"},{"Id":"15597717494","Type":"IssuesEvent","CreatedAt":"2021-03-18T17:14:09","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10653","RelatedDescription":"Closed issue \"[QUESTION] How to use NuGet packages in a C++/CLI project?\" (#10653) at NuGet/Home","RelatedBody":"I have a C++/CLI project which uses both native and managed code.\r\n\r\nIt is a common pattern where you have a native class implementation with core functionality, and a managed class exposed to external C# code. This managed class needs to use .Net NuGet packages, not native ones.\r\n\r\nIn Visual Studio 2019 16.9.0 when I try to add a NuGet package such as PCSC or NLog or Newtonsoft.Json to a C++/CLI project I am getting an error:\r\n```\r\nCould not install package 'PCSC 5.0.0'. You are trying to install this package into a project that targets 'native,Version=v0.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n```\r\nIn the project I am already providing the correct target for managed code:\r\n\r\n![image](https://user-images.githubusercontent.com/16415478/110812557-01113480-8288-11eb-83ba-5fde0a1ff009.png)\r\n\r\nIs there a way to override NuGet behavior for C++/CLI projects, apart from installing/restoring the package manually as a pre-build step using command line, and then specifying the package reference in the `.vcxproj` file (either manually or by using Add reference -> Browse):\r\n```\r\n<Reference Include=\"PCSC\">\r\n<HintPath>..\\packages\\PCSC.5.0.0\\lib\\net40\\PCSC.dll</HintPath>\r\n</Reference>\r\n```\r\nIf there is no way to do that, then this issue should be considered a feature request instead of a question."},{"Id":"15597645223","Type":"IssuesEvent","CreatedAt":"2021-03-18T17:09:12","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10635","RelatedDescription":"Closed issue \"Unable to install packages with NutGet on Ubuntu 18 [x86_64]\" (#10635) at NuGet/Home","RelatedBody":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Steps to reproduce\r\nCreate a project from template ''Razor Server App\".\r\n\r\nTry installing any nutget package dotnet version 5 on Ubuntu. For example, `dotnet add package Dapper --version 2.0.78` But it happens with any package.\r\n\r\n### Exceptions (if any)\r\n\r\n<details>\r\n\r\n\r\n```\r\n@ Installing Dapper in CarRental started\r\nRunning restore with 2 concurrent jobs.\r\nReading project file /home/andres6936/DotNetProjects/CarRental/CarRental.csproj.\r\nRestoring packages for /home/andres6936/DotNetProjects/CarRental/CarRental.csproj...\r\nRestoring packages for .NETCoreApp,Version=v5.0...\r\nUnable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\n ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\r\n ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n   at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.TryCreate(SourceRepository source, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResourceProvider.TryCreate(SourceRepository sourceRepository, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.EnsureResource()\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryCoreAsync(LibraryRange libraryRange, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.<>c__DisplayClass19_0.<<FindLibraryAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Commands.SourceRepositoryDependencyProvider.FindLibraryAsync(LibraryRange libraryRange, NuGetFramework targetFramework, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.<>c__DisplayClass9_1.<<FindLibraryFromSourcesAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryFromSourcesAsync(LibraryRange libraryRange, IEnumerable`1 providers, Func`2 action)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryByVersionAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 providers, SourceCacheContext cacheContext, ILogger logger, CancellationToken token)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindPackageLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryMatchAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, IEnumerable`1 remoteProviders, IEnumerable`1 localProviders, IEnumerable`1 projectProviders, IDictionary`2 lockFileLibraries, SourceCacheContext cacheContext, ILogger logger, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.ResolverUtility.FindLibraryEntryAsync(LibraryRange libraryRange, NuGetFramework framework, String runtimeIdentifier, RemoteWalkContext context, CancellationToken cancellationToken)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge, TransitiveCentralPackageVersions transitiveCentralPackageVersions)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.CreateGraphNode(LibraryRange libraryRange, NuGetFramework framework, String runtimeName, RuntimeGraph runtimeGraph, Func`2 predicate, GraphEdge`1 outerEdge, TransitiveCentralPackageVersions transitiveCentralPackageVersions)\r\n   at NuGet.DependencyResolver.RemoteDependencyWalker.WalkAsync(LibraryRange library, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, Boolean recursive)\r\n   at NuGet.Commands.ProjectRestoreCommand.WalkDependenciesAsync(LibraryRange projectRange, NuGetFramework framework, String runtimeIdentifier, RuntimeGraph runtimeGraph, RemoteDependencyWalker walker, RemoteWalkContext context, CancellationToken token)\r\n   at NuGet.Commands.ProjectRestoreCommand.TryRestoreAsync(LibraryRange projectRange, IEnumerable`1 frameworkRuntimePairs, NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteDependencyWalker remoteWalker, RemoteWalkContext context, Boolean forceRuntimeGraphCreation, CancellationToken token, TelemetryActivity telemetryActivity)\r\n   at NuGet.Commands.RestoreCommand.ExecuteRestoreAsync(NuGetv3LocalRepository userPackageFolder, IReadOnlyList`1 fallbackPackageFolders, RemoteWalkContext context, CancellationToken token, TelemetryActivity telemetryActivity)\r\n   at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n   at NuGet.Commands.RestoreRunner.RunWithoutCommit(IEnumerable`1 restoreRequests, RestoreArgs restoreContext)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.PreviewRestoreProjectsAsync(ISolutionManager solutionManager, IEnumerable`1 projects, IEnumerable`1 updatedNugetPackageSpecs, DependencyGraphCacheContext context, RestoreCommandProvidersCache providerCache, Action`1 cacheContextModifier, IEnumerable`1 sources, Guid parentId, ILogger log, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewBuildIntegratedProjectsActionsAsync(IReadOnlyCollection`1 buildIntegratedProjects, Dictionary`2 nugetProjectActionsLookup, PackageIdentity packageIdentity, IReadOnlyCollection`1 primarySources, INuGetProjectContext nuGetProjectContext, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewBuildIntegratedProjectActionsAsync(BuildIntegratedNuGetProject buildIntegratedProject, IEnumerable`1 nuGetProjectActions, INuGetProjectContext nuGetProjectContext, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.PreviewInstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.InstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, PackageDownloadContext downloadContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at NuGet.PackageManagement.NuGetPackageManager.InstallPackageAsync(NuGetProject nuGetProject, PackageIdentity packageIdentity, ResolutionContext resolutionContext, INuGetProjectContext nuGetProjectContext, IEnumerable`1 primarySources, IEnumerable`1 secondarySources, CancellationToken token)\r\n   at JetBrains.ProjectModel.NuGet.Operations.NuGetInstallOperation.<>c__DisplayClass6_0.<<InstallAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at JetBrains.ProjectModel.NuGet.Operations.NuGetInstallOperation.InstallInternal(IProject project, String packageId, String packgeUserStr, NuGetFeedContext feedContext, Int32 nestedLevel, NuGetNotificationMode mode, NuGetOperationReporter reporter, Func`3 nativeInstall, NuGetProject givenNuGetProject)\r\nSystem.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\r\n ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth, HttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.ServerWarningLogHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at NuGet.Protocol.HttpRetryHandler.<>c__DisplayClass2_1.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Protocol.TimeoutUtility.StartWithTimeout[T](Func`2 getTask, TimeSpan timeout, String timeoutMessage, CancellationToken token)\r\n   at NuGet.Protocol.HttpRetryHandler.SendAsync(HttpRetryHandlerRequest request, String source, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.RepositorySignatureResourceProvider.GetRepositorySignatureResourceAsync(SourceRepository source, ServiceIndexEntry serviceEntry, ILogger log, CancellationToken token)\r\nSystem.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslStream.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n\r\n@ Installing Dapper in CarRental finished (2.784 sec)\r\n[Notification][Install] Install failed (project: CarRental, package: Dapper v2.0.78)\r\nUnable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/5.0.0/index.json.\r\n```\r\n\r\n</details>\r\n\r\n### Further technical details\r\n- ASP.NET Core version\r\n- Include the output of `dotnet --info`\r\n\r\n```shellsession\r\nandres6936@Tierra ~/DotNetProjects/CarRental $ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.103\r\n Commit:    9effbc8ad5\r\n\r\nRuntime Environment:\r\n OS Name:     linuxmint\r\n OS Version:  18.2\r\n OS Platform: Linux\r\n RID:         linuxmint.18.2-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.103/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.3\r\n  Commit:  eae88cc11b\r\n\r\n.NET SDKs installed:\r\n  5.0.103 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and its version\r\n\r\n```\r\nJetBrains Rider 2020.3.3\r\nBuild #RD-203.7148.23, built on February 17, 2021\r\n...\r\nRuntime version: 11.0.9.1+11-b1145.63 amd64\r\nVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o.\r\n.NET Core 3.1.8\r\nLinux 4.15.0-123-generic\r\n....\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":86,"FavoriteCount":37,"RawContent":null},{"Id":"1366458126141120525","CreatedAt":"2021-03-01T18:39:39+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nLate last year we launched a https://t.co/F9kiKfvqkS survey to ask customers about their… https://t.co/mgpdDNj3is","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1366422928519233536","CreatedAt":"2021-03-01T16:19:47+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nIf you have a moment, please take some time to leave us feedback! We really appreciate it ♥ https://t.co/we1sP6mT8q","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":3,"RawContent":null},{"Id":"1365020887758614529","CreatedAt":"2021-02-25T19:28:35+00:00","UserScreenname":"nuget","Text":"🔐 https://t.co/F9kiKfvqkS security update 🔐\n\nThe https://t.co/F9kiKfvqkS repository signing certification will be u… https://t.co/jur1vcuf0B","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"1362857576422137856","CreatedAt":"2021-02-19T20:12:21+00:00","UserScreenname":"nuget","Text":"🙌 New doc just dropped! 🙌\n\nCheck out our latest recommendations to help secure your software supply chain, for pack… https://t.co/odu3ygBOvR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1355252975678189569","CreatedAt":"2021-01-29T20:34:23+00:00","UserScreenname":"nuget","Text":"For users affected by the Debian 10 Buster CA Certificate issue, we now have a documented mitigation available.\n\nPl… https://t.co/VhGXtYI6aj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"1354633996202700808","CreatedAt":"2021-01-28T03:34:47+00:00","UserScreenname":"nuget","Text":"📢 For .NET Docker users, we have published new images that mitigate these issues by using a pre-release version of… https://t.co/eWBiUMyYhr","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":41,"FavoriteCount":26,"RawContent":null},{"Id":"1354552703150649351","CreatedAt":"2021-01-27T22:11:45+00:00","UserScreenname":"nuget","Text":"Please see our official announcement for our latest understanding of the root cause of this issue and recommended w… https://t.co/zAQswryI8d","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-03-19T05:30:30.0984609Z","RunDurationInMilliseconds":2004}