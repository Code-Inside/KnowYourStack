{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41001066464","Type":"PullRequestEvent","CreatedAt":"2024-08-13T22:43:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10123","RelatedDescription":"Merged pull request \"Fix Monitoring2Monitoring blob name generation, handle size mismatch when checking if blobs are synchronized\" (#10123) at NuGet/NuGetGallery","RelatedBody":"This PR fix two bugs I've found in `dev` based on SDK move (1 and 2, below), and one pre-existing bug found due to blob corruption in DEV (3, below)\r\n\r\nSummary of changes:\r\n1. Scrub blob URL in logging, so we don't log SAS (query string)\r\n2. Handle mismatch of scheme between base URL (http) and blob item from list blobs (https)\r\n   - This difference was leading to a substring being off by 1 (\"http\" is shorter than \"https\")\r\n   - It would be a much larger change to make it so we never use \"http\" in memory, this behavior pre-existed in the SDK move ([example](https://github.com/NuGet/NuGet.Jobs/blob/5b34c8e8ab48516f289db7d37a67c48f62f4667f/src/Catalog/Persistence/AzureStorage.cs#L148-L157))\r\n3. When blob sizes are different, do not consider them synchronized.\r\n   - In DEV, there were some old blobs that had matching SHA-512 metadata but they were actually different. This was causing `catalog2dnx` to no-op. This can be easily avoided by also checking the file size. Of course this doesn't fix all problems if the SHA-512 is different, but it's an easy, safe improvement.\r\n\r\n"},{"Id":"41000795200","Type":"IssuesEvent","CreatedAt":"2024-08-13T22:27:54","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10127","RelatedDescription":"Opened issue \"[Feature]: Automatically mark packages as deprecated once their repository is archived\" (#10127) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nOnce a repository is archived, the related packages should be marked as deprecated automatically since there is no support, a high change for vulnerabilities and other issues. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"41000518556","Type":"IssuesEvent","CreatedAt":"2024-08-13T22:13:32","Actor":"michael-hawker","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10126","RelatedDescription":"Opened issue \"[Feature]: API Key Multiple Glob Patterns\" (#10126) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nRelated #8223\n\n### The Elevator Pitch\n\nAm a GitHub organization with multiple packages coming from a variety of teams. Some packages still get updates but don't use a common naming pattern across all the packages we push.\r\n\r\nI want a single token that I can provide to our GitHub organization secrets to allow pushing these existing packages, but still prevent other packages that don't conform to our convention.\r\n\r\nIt'd be nice if I could provide a semi-colon delineated list, or provide multiple entries to the glob matching pattern to allow.\r\n\r\nEven better if I could configure them for existing packages or new packages as part of the same token.\n\n### Additional Context and Details\n\nOtherwise, I have to create multiple tokens and then provide different tokens to different projects instead of being able to have a central token which I can renew periodically to manage our organization."},{"Id":"40996624936","Type":"PullRequestEvent","CreatedAt":"2024-08-13T19:25:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10124","RelatedDescription":"Merged pull request \"Set PackageVersion in MSBuild to allow different versions at pack time\" (#10124) at NuGet/NuGetGallery","RelatedBody":"Currently, package references that are converted to project references by our `New-ProjectPackage` use the same version for all dependencies. This means references to ServerCommon packages in, say, NuGetGallery core would have `4.4.5-blah` version which is wrong.\r\n\r\nThis allows the proper package version to be set on each package not just when it is being packed (already works) but when it is being referred to during pack of another project."},{"Id":"40995787902","Type":"IssuesEvent","CreatedAt":"2024-08-13T18:53:12","Actor":"kzu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10125","RelatedDescription":"Opened issue \"[Feature]: Add support for NOTE, TIP, WARNING, IMPORTANT, CAUTION and RECOMM\" (#10125) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nHighlighting important parts of a package documentation is crucial to creating a more engaging experience.\r\n\r\nIn GitHub, the following readme markup:\r\n\r\n```markdown\r\n\r\n> [!NOTE]\r\n> This is a note\r\n\r\n> [!TIP]\r\n> This is a tip\r\n\r\n> [!WARNING]\r\n> This is a warning\r\n\r\n> [!IMPORTANT]\r\n> This is important\r\n\r\n> [!CAUTION]\r\n> This is a caution\r\n```\r\n\r\nRenders as follows\r\n![image](https://github.com/user-attachments/assets/abb54cbf-026b-407e-adf6-45a2cd4c25be)\r\n\r\nThis is how the gallery renders that today: https://www.nuget.org/packages/Observable/0.2.0#readme-body-tab\r\n\r\n![image](https://github.com/user-attachments/assets/c1fca300-9775-4344-9875-cb23ec2a9154)\r\n\r\nSource for the examples: https://github.com/kzu/Observable\n\n### Additional Context and Details\n\nBringing nuget.org more aligned with GitHub markdown support is a good thing for OSS authors since it allows us to keep a unified readme in both places, lowering maintenance costs and avoiding duplication just to satisfy nuget.org restrictions on formatting."},{"Id":"40989996044","Type":"PullRequestEvent","CreatedAt":"2024-08-13T15:32:37","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10124","RelatedDescription":"Opened pull request \"Set PackageVersion in MSBuild to allow different versions at pack time\" (#10124) at NuGet/NuGetGallery","RelatedBody":"Currently, package references that are converted to project references by our `New-ProjectPackage` use the same version for all dependencies. This means references to ServerCommon packages in, say, NuGetGallery core would have `4.4.5-blah` version which is wrong.\r\n\r\nThis allows the proper package version to be set on each package not just when it is being packed (already works) but when it is being referred to during pack of another project."},{"Id":"40987355286","Type":"PullRequestEvent","CreatedAt":"2024-08-13T14:21:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10123","RelatedDescription":"Opened pull request \"Fix Monitoring2Monitoring blob name generation, handle size mismatch when checking if blobs are synchronized\" (#10123) at NuGet/NuGetGallery","RelatedBody":"This PR fix two bugs I've found in `dev` based on SDK move (1 and 2, below), and one pre-existing bug found due to blob corruption in DEV (3, below)\r\n\r\nSummary of changes:\r\n1. Scrub blob URL in logging, so we don't log SAS (query string)\r\n2. Handle mismatch of scheme between base URL (http) and blob item from list blobs (https)\r\n   - This difference was leading to a substring being off by 1 (\"http\" is shorter than \"https\")\r\n   - It would be a much larger change to make it so we never use \"http\" in memory, this behavior pre-existed in the SDK move ([example](https://github.com/NuGet/NuGet.Jobs/blob/5b34c8e8ab48516f289db7d37a67c48f62f4667f/src/Catalog/Persistence/AzureStorage.cs#L148-L157))\r\n3. When blob sizes are different, do not consider them synchronized.\r\n   - In DEV, there were some old blobs that had matching SHA-512 metadata but they were actually different. This was causing `catalog2dnx` to no-op. This can be easily avoided by also checking the file size. Of course this doesn't fix all problems if the SHA-512 is different, but it's an easy, safe improvement.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41001100796","Type":"IssuesEvent","CreatedAt":"2024-08-13T22:45:10","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13621","RelatedDescription":"Closed issue \"Add docs for NU1508\" (#13621) at NuGet/Home","RelatedBody":"Duplicate NuGetAuditSupress items, for https://github.com/NuGet/Home/issues/13620"},{"Id":"40997460668","Type":"IssuesEvent","CreatedAt":"2024-08-13T19:59:08","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13703","RelatedDescription":"Opened issue \"dotnet list package should warn when restore is not current\" (#13703) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\n`dotnet list package` gets \"actual\" package usage from NuGet's assets file, which is created on restore.  Which means that if a customer restores a project, then edits the project to change a package version, or add/remove a package reference, then runs `dotnet list package` without restoring, it will show incorrect information, and the customer will not know why.\r\n\r\n`dotnet list package` should show a message when the project restore isn't up-to-date\n\n### Additional Context and Details\n\n`dotnet list package` already loads the project file via MSBuild APIs (hence why it only works with SDK style projects that the `dotnet` CLI can build/evaluate), meaning we already have the data to do a restore no-op check."},{"Id":"40991791004","Type":"IssuesEvent","CreatedAt":"2024-08-13T16:29:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13700","RelatedDescription":"Closed issue \"Add property for toggling the to the previous NuGet resolver: RestoreUseLegacyDependencyResolver  \" (#13700) at NuGet/Home","RelatedBody":""},{"Id":"40982908087","Type":"PullRequestEvent","CreatedAt":"2024-08-13T12:18:42","Actor":"NeuroXiq","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13702","RelatedDescription":"Opened pull request \"Create dndocs-api-explorer.md\" (#13702) at NuGet/Home","RelatedBody":"Propose DNDocs API Explorer."},{"Id":"40979603200","Type":"IssuesEvent","CreatedAt":"2024-08-13T10:31:12","Actor":"Lofter1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13683","RelatedDescription":"Closed issue \"NU3037 and NU3028 when installing packages\" (#13683) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console\r\n\r\n### Product Version\r\n\r\ndotnet 8.0.303, dotnet nuget 6.10.0.97, VS 17.10.5\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nMakes it hard to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nHappens for Visual Studio 2022 (fresh reinstall) and the dotnet tools that shipped with it (dotnet nuget). Doesn't happen for all packages, but for every project I create regardless of template with the same packages.\r\n\r\n### Packages I tested that it happens to:\r\n- Microsoft.EntityFrameworkCore.SqlServer\r\n- Microsoft.EntityFrameworkCore.Design\r\n\r\n### Packages I tested it doesn't happen for:\r\n- Microsoft.EntityFrameworkCore\r\n- Microsoft.AspNetCore.Authentication.JwtBearer\r\n\r\n\r\n### Steps I already took to try to fix this:\r\n- Check if System Time is correct (forced a synchronization)\r\n- Reinstalled Visual Studio\r\n- Check if a corporate firewall is the problem (co-worker can install packages fine within the same network)\r\n- Verify all nupkg files in `~/.nuget` and inside the `C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages` folder (reduced the numbers of errors)\r\n- Use dotnet 7 instead of 8 and use the appropriate package version\r\n- Delete folders like `~/.nuget` and delete NuGet cache\r\n- Update Windows\r\n- `<add key=\"signatureValidationMode\" value=\"accept\"/>`\r\n- Waiting a day\r\n\r\n\r\nPossibly interesting addition: for the Microsoft.EntityFrameworkCore.Design package, an installation through the dotnet CLI adds the package, but builds afterwards will fail with the same error as during the installation attempt through the VS NuGet UI\r\n\r\n### Verbose Logs\r\n\r\n\r\nVS 2022 NuGet UI Output for Microsoft.EntityFrameworkCore.SqlServer (similar output for Microsoft.EntityFrameworkCore.Design) (Shortened)\r\n\r\n```shell\r\nPakete für \"<path to>.csproj\" werden wiederhergestellt...\r\n  [...]\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 23:54:33\r\n\r\nPaket \"Microsoft.NETCore.Targets 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 18.12.2018 01:10:38\r\n\r\nPaket \"Microsoft.NETCore.Platforms 1.1.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 22:58:10\r\n\r\nPaket \"System.Runtime 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256-Hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 02.01.2017 01:00:00 bis 02.04.2028 01:59:59\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.05.2018 22:37:18\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft, RoslynTeam\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 18.12.2018 00:57:03\r\n\r\nPaket \"Microsoft.CSharp 4.5.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:53\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.IO.FileSystem.AccessControl 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:33\r\n\r\n[...]\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: azure-sdk, dotnetframework, Microsoft\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.04.2021 19:59:36\r\n\r\nPaket \"System.Memory.Data 1.0.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.04.2020 01:49:51\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 12.05.2020 16:57:09\r\n\r\nPaket \"Microsoft.Bcl.AsyncInterfaces 1.1.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.01.2022 18:20:31\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: Microsoft, nugetsqltools\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 29.01.2022 01:50:56\r\n\r\nPaket \"Microsoft.SqlServer.Server 1.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:54\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:27\r\n\r\nPaket \"System.Formats.Asn1 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 26.08.2022 00:27:56\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.09.2022 15:45:35\r\n\r\nPaket \"System.Configuration.ConfigurationManager 6.0.1\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:33:51\r\n\r\nPaket \"System.Runtime.Caching 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Repositorys wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 13.12.2018 22:58:38\r\n\r\nPaket \"System.Text.Encoding 4.3.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Repositorys wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G2, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: 625AEC3AE4EDA1D169C4EE909E85B3BBC61076D3\r\n  SHA256-Hash: CF7AC17AD047ECD5FDC36822031B12D4EF078B6F2B4C5E6BA41F8FF2CF4BAD67\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 02.01.2017 01:00:00 bis 02.04.2028 01:59:59\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:53\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:12\r\n\r\nPaket \"System.Security.Principal.Windows 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 20.10.2020 15:29:55\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 10.11.2020 00:50:06\r\n\r\nPaket \"System.Security.Cryptography.Cng 5.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:58:00\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: aspnet, dotnetframework, Microsoft\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:41:17\r\n\r\nPaket \"System.Text.Encoding.CodePages 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.11.2019 10:52:53\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 03.12.2019 17:42:05\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 4.7.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 19.02.2020 19:10:28\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 15.04.2020 01:49:53\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 12.05.2020 16:57:01\r\n\r\nPaket \"System.Text.Json 4.7.2\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: F404000FB11E61F446529981C7059A76C061631E\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 19.02.2020 19:10:28\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 24.03.2020 18:10:21\r\n\r\nPaket \"System.Memory 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 24.03.2020 18:10:23\r\n\r\nPaket \"System.Threading.Tasks.Extensions 4.5.4\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.07.2022 05:13:05\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: AzureAD, Microsoft\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 27.07.2022 06:09:30\r\n\r\nPaket \"Microsoft.IdentityModel.Abstractions 6.22.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: 68FC37CCC293766A607DBC26A26DF371B0249328\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 08.11.2021 07:41:20\r\n\r\nPaket \"System.Text.Encodings.Web 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Repositorygegensignatur wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Signaturhashalgorithmus: SHA256\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Primärsignatur des Autors wird mit folgendem Zertifikat überprüft: \r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   SHA1-Hash: A6E18D21B507879FC7F9C392A5CE355936E3AD2C\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\":   Ausgestellt von: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Zeitstempel: 28.10.2021 00:57:57\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Der Zeitstempel der Primärsignatur des Autors wird mit folgendem Zeitstempel-Dienstzertifikat überprüft: \r\n  Name des Antragstellers: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1-Hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256-Hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Ausgestellt von: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Gültig von 23.12.2017 01:00:00 bis 23.03.2029 00:59:59\r\n\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Dienstindex: https://api.nuget.org/v3/index.json\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Besitzer: dotnetframework, Microsoft\r\nPaket \"System.Security.Cryptography.ProtectedData 6.0.0\" aus Quelle \"https://api.nuget.org/v3/index.json\": Die Repositorygegensignatur wird mit folgendem Zertifikat überprüft: \r\n[...]\r\n\r\n```\r\n"},{"Id":"40964172384","Type":"IssuesEvent","CreatedAt":"2024-08-12T22:20:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13701","RelatedDescription":"Opened issue \"Document: RestoreUseLegacyDependencyResolver \" (#13701) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/pull/5964"},{"Id":"40964053694","Type":"IssuesEvent","CreatedAt":"2024-08-12T22:14:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13700","RelatedDescription":"Opened issue \"Add property for toggling the to the previous NuGet resolver: RestoreUseLegacyDependencyResolver  \" (#13700) at NuGet/Home","RelatedBody":""},{"Id":"40963554228","Type":"IssuesEvent","CreatedAt":"2024-08-12T21:48:32","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13699","RelatedDescription":"Opened issue \"Drive insertion of new dependency graph resolution algorithm\" (#13699) at NuGet/Home","RelatedBody":"The new dependency graph algorithm is merged and we need to drive the insertion process\r\n\r\n- [ ] Create release (https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1544075)\r\n- [ ] Get test results from vendors\r\n- [ ] Get test results from a few internal repos\r\n- [ ] Monitor VS insertion\r\n- [ ] Monitor dotnet insertion"},{"Id":"40962732169","Type":"IssuesEvent","CreatedAt":"2024-08-12T21:10:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13643","RelatedDescription":"Closed issue \"Can not install signed package with certificate chain building issue\" (#13643) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, MSBuild.exe, NuGet.exe\r\n\r\n### Product Version\r\n\r\ndotnet 8.0.303, dev nuget.exe\r\n\r\n### Worked before?\r\n\r\nAccording to https://github.com/mbdavid/LiteDB/issues/1874 may worked in dotnet 3.1\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nThis bug is related to https://github.com/mbdavid/LiteDB/issues/1874.\r\n\r\nWe are trying to install/restore LiteDB, which is signed with certificate, issued by ssl.com. \r\n![image](https://github.com/user-attachments/assets/35940b88-b4d2-4b4b-90f8-3915d14e1081)\r\n\r\nFor CI/CD we are using Windows Server 2022 21H2 20348.2461 without SSL.com trusted root certificate installed, but with [certificate trust list](http://ctldl.windowsupdate.com/msdownload/update/v3/static/trustedr/en/authrootstl.cab), and on this list, we have an issue with certificate in the chain.\r\n\r\n![image](https://github.com/user-attachments/assets/c22a5443-fd43-429f-a343-8736d1b3876f)\r\n\r\nI understand that we have to fix issue with certificate, but I expect that nuget should be able to install this package in `signatureValidationMode=accept`.\r\n\r\nThe problem starts here \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Packaging/Signing/Utility/VerificationUtility.cs#L28-L34\r\n\r\nСonverts `SignatureVerificationStatusFlags.ChainBuildingFailure` into `SignatureVerificationStatus.Disallowed`\r\n\r\nAnd then this leads to `NuGet.Packaging.Signing.SignatureException` here (`verifyResult.IsValid is false`)\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Packaging/PackageExtractor.cs#L1034-L1072\r\n\r\nAnd remove downloaded files.\r\n\r\nnuget.exe install litedb:\r\n\r\n```console\r\nError downloading 'LiteDB.5.0.21 : System.Buffers [4.5.1, )' from 'xxx'.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Error downloading 'LiteDB.5.0.21 : System.Buffers [4.5.1, )' from 'xxx'. ---> NuGet.Packaging.Signing.SignatureException\r\n   at NuGet.Packaging.PackageExtractor.<VerifyPackageSignatureAsync>d__9.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 1073\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.Packaging.PackageExtractor.<>c__DisplayClass3_2.<<InstallFromSourceAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 520\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__5`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Common\\ConcurrencyUtilities.cs:line 102\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__5`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Common\\ConcurrencyUtilities.cs:line 117\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Packaging.PackageExtractor.<InstallFromSourceAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 390\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GlobalPackagesFolderUtility.<AddPackageAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GlobalPackagesFolderUtility.cs:line 121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GetDownloadResultUtility.<>c__DisplayClass3_0.<<GetDownloadResultAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GetDownloadResultUtility.cs:line 90\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass18_0`1.<<ProcessStreamAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 252\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__20`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 291\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<ProcessStreamAsync>d__18`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 239\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GetDownloadResultUtility.<GetDownloadResultAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GetDownloadResultUtility.cs:line 111\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.V2FeedParser.<DownloadFromUrl>d__44.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\V2FeedParser.cs:line 275\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.DownloadResourceV2Feed.<GetDownloadResourceResultAsync>d__4.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\DownloadResourceV2Feed.cs:line 76\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.DownloadResourceV2Feed.<GetDownloadResourceResultAsync>d__4.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\DownloadResourceV2Feed.cs:line 106\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackageDownloader.<GetDownloadResourceResultAsync>d__1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackageDownloader.cs:line 302\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackagePreFetcher.<>c__DisplayClass0_1.<<GetPackagesAsync>b__4>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcher.cs:line 130\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackagePreFetcherResult.<EnsureResultAsync>d__24.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcherResult.cs:line 113\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.PackagePreFetcherResult.<GetResultAsync>d__25.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcherResult.cs:line 146\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2655\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2691\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2823\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<InstallPackageAsync>d__53.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 449\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.CommandLine.InstallCommand.<InstallPackageAsync>d__38.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Commands\\InstallCommand.cs:line 403\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.CommandLine.Command.Execute() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Commands\\Command.cs:line 182\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args) in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Program.cs:line 166\r\n```\r\ndotnet restore\r\n\r\n```console\r\n                   \"C:\\Temp\\Temp.csproj\" (Restore target) (1) ->\r\n                   (Restore target) ->\r\n                     C:\\Temp\\Temp.csproj : warning NU3012: Package 'LiteDB 5.0.21' from source 'xxx': The author primary signature found a chain building issue: CtlNotValidForUsage: The certificate is not valid for the requested usage.\r\n                     C:\\Temp\\Temp.csproj : warning NU3012: Package 'LiteDB 5.0.21' from source 'xxxx': The author primary signature found a chain building issue: NotValidForUsage: The certificate is not valid for the requested usage.\r\n\r\n\r\n                   \"C:\\Temp\\Temp.csproj\" (Restore target) (1) ->\r\n                   (Restore target) ->\r\n                     C:\\Program Files\\dotnet\\sdk\\8.0.303\\NuGet.targets(169,5): error MSB4181: The \"RestoreTask\" task returned false but did not log an error. [C:\\Temp\\Temp.cspr\r\n                   oj]\r\n\r\n    2 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\ndotnet add package litedb\r\n\r\n```console\r\ninfo : Package 'LiteDB 5.0.21' from source 'xxx': Verifying author primary signature's timestamp with timestamping service certificate:\r\ninfo :   Subject Name: CN=DigiCert Timestamp 2023, O=\"DigiCert, Inc.\", C=US\r\ninfo :   SHA1 hash: 66F02B32C2C2C90F825DCEAA8AC9C64F199CCF40\r\ninfo :   SHA256 hash: D2F6E46DED7422CCD1D440576841366F828ADA559AAE3316AF4D1A9AD40C7828\r\ninfo :   Issued by: CN=DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA, O=\"DigiCert, Inc.\", C=US\r\ninfo :   Valid from: 7/14/2023 12:00:00 AM to 10/13/2034 11:59:59 PM\r\ninfo : Package 'litedb' is compatible with all the specified frameworks in project 'C:\\Temp\\Temp.csproj'.\r\nerror: Value cannot be null. (Parameter 'path1')\r\n```\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"40961624666","Type":"IssuesEvent","CreatedAt":"2024-08-12T20:25:51","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13698","RelatedDescription":"Opened issue \"Show transitive status of package for each project in Solution-level Details Pane\" (#13698) at NuGet/Home","RelatedBody":"Similiarly to how we show in the projects check list which version of the package is installed in which project, we also want to show if the package is transitive in the project. However, we don't want to recompute this information for each project because that's expensive and we've already done the work. So, we should consider how we can pass the \"transitiveOriginsCache\" which will now have the project as the first layer, and use it to find if the package is transitively installed in the given project."},{"Id":"40961589893","Type":"IssuesEvent","CreatedAt":"2024-08-12T20:24:26","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13697","RelatedDescription":"Opened issue \"Show vulnerability data for solution-level transitive packages\" (#13697) at NuGet/Home","RelatedBody":"Make transitive packages in Solution PM UI query the vulnerability service to see if it is vulnerable and display the vulnerability indicator in the packages list."},{"Id":"40961508625","Type":"IssuesEvent","CreatedAt":"2024-08-12T20:21:11","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13696","RelatedDescription":"Opened issue \"Change algorithm to compute transitive origins for each project\" (#13696) at NuGet/Home","RelatedBody":"We will need to change the transitive origins cache to add an extra parent layer that represents the project. The Solution Level PM UI needs to compute transitive origins for each project and the Project level PM UI does as well, but it will be for a single project."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-14T03:30:19.5688323Z","RunDurationInMilliseconds":1010}