{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20507730711","Type":"PullRequestEvent","CreatedAt":"2022-03-01T00:51:32","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9024","RelatedDescription":"Merged pull request \"Improve inclusiveness of language used in code\" (#9024) at NuGet/NuGetGallery","RelatedBody":"Improve inclusiveness of language used in code"},{"Id":"20507392167","Type":"PullRequestEvent","CreatedAt":"2022-03-01T00:17:52","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9026","RelatedDescription":"Merged pull request \"[ReleasePrep] FI main to dev\" (#9026) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20507310910","Type":"PullRequestEvent","CreatedAt":"2022-03-01T00:10:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9027","RelatedDescription":"Opened pull request \"[ReleasePrep] RI dev to main\" (#9027) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Detail 1\r\n* Detail 2\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"20507298333","Type":"PullRequestEvent","CreatedAt":"2022-03-01T00:09:11","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9026","RelatedDescription":"Opened pull request \"[ReleasePrep] FI main to dev\" (#9026) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20507238423","Type":"IssuesEvent","CreatedAt":"2022-03-01T00:04:22","Actor":"CurryHan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9025","RelatedDescription":"Opened issue \"Why this package has not been indexed yet in 2 hours ago? \" (#9025) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20506223982","Type":"PullRequestEvent","CreatedAt":"2022-02-28T22:34:18","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9024","RelatedDescription":"Opened pull request \"Remove ableist language from code\" (#9024) at NuGet/NuGetGallery","RelatedBody":"Remove ableist language from code"},{"Id":"20505494544","Type":"PullRequestEvent","CreatedAt":"2022-02-28T21:37:36","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9020","RelatedDescription":"Merged pull request \"[TFM Badges][UI] Add tooltip on badges.\" (#9020) at NuGet/NuGetGallery","RelatedBody":"Since we wanted to improve the experience of users on what badges means, we added tooltip for the badges, this will show one of two messages depending if the badge contains a version or if it's an empty version.\r\n\r\n* When clicking the badge the tooltip will take 2 seconds to hide, it was one second before and it was just to short for users to read it.\r\n* Added role button for better A11y experience.\r\n* Verified that Narrator/NVDA reads the tooltip when traversing the page.\r\n\r\n### Screenshots\r\n#### With version\r\n![Badge with version](https://user-images.githubusercontent.com/17834924/155606204-7ac2ed42-4653-4ed4-a1fa-2bb8e589b3f9.png)\r\n\r\n#### Empty version\r\n![Package with empty version](https://user-images.githubusercontent.com/17834924/155606224-2ecba0bf-82cc-4b9f-b045-f4c82a60d0e0.png)\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4230."},{"Id":"20505487553","Type":"PullRequestEvent","CreatedAt":"2022-02-28T21:37:06","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9011","RelatedDescription":"Merged pull request \"[TFM Display] Fix font issue for safari.\" (#9011) at NuGet/NuGetGallery","RelatedBody":"* Removed family-font on .framework class, so that css uses the default font.\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/4260."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20508114748","Type":"IssuesEvent","CreatedAt":"2022-03-01T01:28:59","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11601","RelatedDescription":"Closed issue \"[Bug]: error: File does not exist (true) while executing dotnet nuget push command\" (#11601) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet Version: 6.0.200\r\n\r\n### Worked before?\r\n\r\ndotnet version: 6.0.102\r\n\r\n### Impact\r\n\r\nBreaks github build scripts, since it's erroring out, even thought there is no problem.\r\n\r\n### Repro Steps & Context\r\n\r\nPublish a package to nuget.org with the commad like:\r\n\r\n`dotnet nuget push /home/runner/work/eform-sdk-dotnet/eform-sdk-dotnet/artifacts/Microting.eForm.5.4.30.nupkg -k ${{secrets.NUGET_SECRET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols true`\r\n\r\nWorking edition can be see here: https://github.com/microting/eform-sdk-dotnet/runs/5204099665?check_suite_focus=true#step:8:1\r\n\r\nBroken can be seen here: https://github.com/microting/eform-sdk-dotnet/runs/5219100462?check_suite_focus=true#step:8:1\r\n\r\nDoing the above, results in an error: \"error: File does not exist (true).\" even thought the package was pushed and published as expected.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20506562703","Type":"IssuesEvent","CreatedAt":"2022-02-28T23:02:13","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11516","RelatedDescription":"Closed issue \"[Feature]: Allow overriding a centrally defined package version\" (#11516) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCentral Package Management (CPM) allows users to specify versions for their packages in one place.  However, there are edge cases where a project might want to use a different version.  For example, a prototype project could need a newer version than a repo is using so it would opt into newer versions.\r\n\r\nThere is an existing implementation, Microsoft.Build.CentralPackageVersions, which uses a `VersionOverride` attribute to indicate that a `<PackageReference />` should use a different version than is centrally defined.\r\n\r\nThis design has a few advantages:\r\n1. Makes it obvious when a project is using its own package version(s)\r\n2. Ideally, an entire repo would use the same package version which is why users would define it in one place.  Users who want to use a different version would need to fully understand the ramifications of specifying the `VersionOverride` attribute.\r\n3. Migration from Microsoft.Build.CentralPackageVersions would be easier.\r\n\r\nOther options for users that would still be possible are:\r\n1. Specify a `<PackageVersion />` in a project\r\n2. Define an MSBuild property that represents the package version and set it in a project\r\n\r\nSince MSBuild essentially lets users do anything they want, the built-in mechanism for overriding a package version should be simple and well documented.  \r\n\r\n# Design\r\n\r\nA user would specify package versions in `Directory.Packages.props`:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"PackageA\" Version=\"1.0.0\" />\r\n    <PackageVersion Include=\"PackageB\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n<Project>\r\n```\r\n\r\nA project would override the version with the `VersionOverride` metadata on a `<PackageReference />` item:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"PackageA\" VersionOverride=\"3.0.0\" />\r\n  </ItemGroup>\r\n<Project>\r\n```\r\n\r\nIn this case, the project's restore graph would resolve `PackageA` to version `3.0.0`.  Any project that references it would also get that version and a user would be responsible for handling an unresolved conflicts.\r\n\r\nFinally, a repo owner should be able to disable the ability for developers to override package version.  This would be used for instance if someone wanted to ensure that all package versions are unified.  This would be possible by setting the MSBuild property `EnablePackageVersionOverride` to `false` in a project or import like Directory.Build.props:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <EnablePackageVersionOverride>false</EnablePackageVersionOverride>\r\n  </PropertyGroup>\r\n<Project>\r\n```\r\n\r\nWhen this is disabled, specifying a `VersionOverride` on a `<PackageReference />` would result in a restore error indicating that he feature is disabled.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20505702323","Type":"IssuesEvent","CreatedAt":"2022-02-28T21:53:23","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11574","RelatedDescription":"Closed issue \"[Bug]: Nuget.exe breaks in Azure DevOps agent container (Linux)\" (#11574) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.0.0\n\n### Worked before?\n\nNo\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nWe are using a Azure DevOps build agent, installed as a Linux Docker container, as documented [here](https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/docker?view=azure-devops#use-azure-kubernetes-service-cluster). In addition, it has the latest Mono framework installed.\r\n\r\nRunning `mono nuget install` (or even just `mono nuget`) fails with the following error message:\r\n\r\n```\r\nCould not load file or assembly 'System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies.\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies.\r\nFile name: 'System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x000e3] in <9bc69d145f5a4dbcbd11cfa298c5ba4f>:0 \r\n```\r\nAccording to https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools#macoslinux, we should be able to run `nuget.exe`, but we can't get it to work.\r\n\r\nWe tried with versions 4.x, 5.x and 6.x but none of them work.\r\n\r\nWhat could be the reason?\n\n### Verbose Logs\n\n```shell\nWe ran it with `-Verbosity detailed` and the output is still only:\r\n\r\n\r\nCould not load file or assembly 'System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies.\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies.\r\nFile name: 'System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n  at NuGet.CommandLine.Program.MainCore (System.String workingDirectory, System.String[] args) [0x000d3] in <628ad472b621437fba78dcacbf4e1cd2>:0\r\n```\n```\n"},{"Id":"20505678000","Type":"IssuesEvent","CreatedAt":"2022-02-28T21:51:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11548","RelatedDescription":"Closed issue \"[Bug]: Slow Restores on Windows in GitHub Actions - Signature verification taking a long time\" (#11548) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n6.0.101\r\n\r\n### Repro Steps & Context\r\n\r\nRunning an identical restore in GitHub Actions, times are dramatically higher on Windows agents (2019 and 2022 tested) vs. Ubuntu agents. Here's an example run of [a `5m 39s` restore on Windows](https://github.com/StackExchange/StackExchange.Redis/runs/5029970749?check_suite_focus=true#step:4:1) vs [a `16s` restore on Ubuntu](https://github.com/StackExchange/StackExchange.Redis/runs/5029970749?check_suite_focus=true#step:4:1). It's only restoring [a hand full of packages](https://github.com/StackExchange/StackExchange.Redis/blob/main/src/StackExchange.Redis/StackExchange.Redis.csproj#L17-L29).\r\n\r\n[Here's an example PR testing various bits of this](https://github.com/StackExchange/StackExchange.Redis/pull/1973) so you can see raw logs.\r\n\r\nImportant: [setting `NUGET_CERT_REVOCATION_MODE` to `offline`](https://github.com/StackExchange/StackExchange.Redis/pull/1973/commits/275f5756cbc526df7e3bff8a82dac6dd52f2186d) indeed [improves restore times substantially](https://github.com/StackExchange/StackExchange.Redis/runs/5030088288?check_suite_focus=true#step:3:1) (down to `1m 22s` in this case).\r\n\r\nThe verbose logs [can be seen in this build](https://github.com/StackExchange/StackExchange.Redis/runs/5030159538?check_suite_focus=true). Also attaching here: [Verbose Windows Logs.txt](https://github.com/NuGet/Home/files/7982862/Verbose.Windows.Logs.txt). Scroll to `2022-02-02T00:28:54.6709200Z` for where the biggest time expenditure starts happening around package verification.\r\n\r\nSide note: I lost the body of this issue trying to paste then directly previously (they're ~12.7MB for the restore, and the GitHub form limit is 65,536 - I recommend we don't advise people pasting logs here)."},{"Id":"20505463079","Type":"IssuesEvent","CreatedAt":"2022-02-28T21:35:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11533","RelatedDescription":"Closed issue \"[Bug]: push fail when Credential Provider fail even if ApiKey is passed on command line\" (#11533) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.0.0.280\n\n### Worked before?\n\nBefore credential providers\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nWe are trying to push a package to GitHub packages. We verified that our Source and ApiKey works correctly. As Source we use **https://nuget.pkg.github.com/<owner>/index.json** where **<owner>** is replaced with our correct owner. As ApiKey we use a PAT that has been verified to work.\r\n\r\nIf we run the command in a clean situation we obtain an 401 (Unauthorized).\r\n\r\nWe added a nuget,config in the current directory, adding to it as package source the previous url and as username and password for that source some random values that are totally invalid.\r\n\r\nIf we run the command it works and with verbosity detailed we see the Credential Provider never kicks in. If we use a wrong ApiKey it stops to be able to push, as expected.\r\n\r\nAt this point, if we change the current directory and move to another path or if we delete the nuget.config that we just created the push command keeps working with the correct ApiKey and fails if a wrong one is used.\r\n\r\nIf we also delete the v3-cache folder that host the http-cache of nuget.exe we are returning to the situation were the command stops to be able to push and we have again the logs attached to this issue.\r\n\r\nIt seems that adding a pair of credentials, even wrong, for the source allows us to correctly use the ApiKey parameter. Otherwise Credential Providers kicks in (before trying the ApiKey parameter) and if they fails the ApiKey is never tried.\r\n\r\n \n\n### Verbose Logs\n\n```shell\nNuGet Version: 6.0.0.280\r\nMSBuild auto-detection: using msbuild version '16.11.2.50704' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nUsing C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\Plugins\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe as a credential provider plugin.\r\n    [CredentialProvider.162340]Running in plug-in mode\r\n    [CredentialProvider.162340]Command-line v0.1.23+3902a1eadc037829d4a161d287d8579f1fb2168e: \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\Plugins\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe\" -Plugin\r\n    [CredentialProvider.162340]Handling 'Request' 'Initialize'. Time elapsed in ms: 4 - Payload: {\"ClientVersion\":\"6.0.0\",\"Culture\":\"en-US\",\"RequestTimeout\":\"00:00:05\"}\r\n    [CredentialProvider.162340]Sending response: 'Request' 'Initialize'. Time elapsed in ms: 5\r\n    [CredentialProvider.162340]Time elapsed in milliseconds after sending response 'Request' 'Initialize': 6\r\n    [CredentialProvider.162340]Handling 'Request' 'GetOperationClaims'. Time elapsed in ms: 0 - Payload: {}\r\n    [CredentialProvider.162340]Sending response: 'Request' 'GetOperationClaims'. Time elapsed in ms: 8\r\n    [CredentialProvider.162340]Time elapsed in milliseconds after sending response 'Request' 'GetOperationClaims': 23\r\n    [CredentialProvider.162340]Handling 'Request' 'SetLogLevel'. Time elapsed in ms: 2 - Payload: {\"LogLevel\":\"Debug\"}\r\n    [CredentialProvider]Sending response: 'Request' 'SetLogLevel'. Time elapsed in ms: 3\r\n    [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'SetLogLevel': 7\r\n    [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 2 - Payload: {\"Uri\":\"https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json\",\"IsRetry\":false,\"IsNonInteractive\":true,\"CanShowDialog\":true}\r\n    [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n    [CredentialProvider]Handling auth request, Uri: https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json, IsRetry: False, IsNonInteractive: True, CanShowDialog: True\r\n    [CredentialProvider]URI: https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json\r\n    [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - This credential provider must be run under the Team Build tasks for NuGet with external endpoint credentials. Appropriate environment variable needs to be set.\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider, cannot provide credentials for https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json\r\n    [CredentialProvider]VstsBuildTaskCredentialProvider - This credential provider must be run under the Team Build tasks for NuGet. Appropriate environment variables must be set.\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTask.VstsBuildTaskCredentialProvider, cannot provide credentials for https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json\r\n    [CredentialProvider]GET https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json\r\nWARNING: The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for `NuGet`\r\n    [CredentialProvider]VstsCredentialProvider - https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json is not an Azure Artifacts feed.\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.Vsts.VstsCredentialProvider, cannot provide credentials for https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json\r\n    [CredentialProvider]Unable to acquire credentials.\r\n    [CredentialProvider]Sending response: 'Request' 'GetAuthenticationCredentials'. Time elapsed in ms: 415\r\n    [CredentialProvider]Time elapsed in milliseconds after sending response 'Request' 'GetAuthenticationCredentials': 418\r\nUnable to load the service index for source https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json.\r\n  Response status code does not indicate success: 401 (Unauthorized).\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source https://nuget.pkg.github.com/XXXXXXXXX-trial/index.json. ---> System.Net.Http.HttpRequestException: Response status code does not indicate success: 401 (Unauthorized).\r\n   at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass15_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__4`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__4`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<GetAsync>d__15`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<GetServiceIndexResourceV3>d__11.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<GetServiceIndexResourceV3>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<TryCreate>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.PackageUpdateResourceV3Provider.<TryCreate>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__15`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.CommandRunnerUtility.<GetPackageUpdateResource>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.PushRunner.<Run>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.PushCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":172,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-03-01T03:30:23.2741111Z","RunDurationInMilliseconds":1403}