{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"43499885830","Type":"PullRequestEvent","CreatedAt":"2024-11-04T23:38:53","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10245","RelatedDescription":"Merged pull request \"[SDKMigration]Attempt to fix missing authentication.\" (#10245) at NuGet/NuGetGallery","RelatedBody":"When a set of non null blob options are passed through to [src/Catalog/Persistence/CloudBlobDirectoryWrapper.cs](https://github.com/NuGet/NuGetGallery/compare/dev...ryuyu-monitoring-migration-test?expand=1#diff-faf95e19f981de74760ceb3fc4d23f572379edf12a8c2da4b3ee61665c49cf9f), the BlobServiceClient is recreated with the correct options to create the ContainerClient (containerClient inherits blob options from the creating service client).\r\n\r\nUnfortunately, this is created without authentication information, and the authentication information is not available here.\r\n\r\nThis change attempts to \"work around\" this issue by instead passing through a serviceClientFactory so we can recreate with whatever options we need whenever we want. \r\nNote that this adds a reference from NuGet.Service.Storage to Catalog project, which has its own Storage implementation. This requires us to disambiguate Storage (between NuGet.Services.Storage and catalog.persistence.Storage).\r\n\r\nThings we tried that didn't work:\r\n 1. Extract auth information from the BlobServiceClient. The authentication information is not available on the service client\r\n 2. Pipe through additional parameters so we can pipe auth information through directly. This resulted in a changeset of roughly the same size. (Thanks @advay26 for exploring this option)\r\n 3. Modify the blob options on the BlobServiceClient instead of creating a new one. This doesn't seem possible.\r\n\r\nRelated to https://github.com/NuGet/Engineering/issues/5584"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"43500448312","Type":"IssuesEvent","CreatedAt":"2024-11-05T00:10:33","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13744","RelatedDescription":"Closed issue \"Collect telemetry for HTTPS sources with HTTP resources\" (#13744) at NuGet/Home","RelatedBody":"Collect telemetry for HTTPS sources with HTTP resources in their service index"},{"Id":"43500153909","Type":"IssuesEvent","CreatedAt":"2024-11-04T23:53:53","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13644","RelatedDescription":"Closed issue \"Fetching Vulnerability Resources doesn't respect cancellation\" (#13644) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET 9 preview 7\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nThis requires a vulnerability information provider to have a network problem, either simulated or real. For me, the Azure outage this Thursday evening presented such that when I cancelled a `dotnet build` of the dotnet/sdk repo MSBuild attempted to cancel the build but the Restore continued - I got error messages like the following after the 90s timeout finished:\r\n\r\n```\r\nE:\\Code\\dotnet-sdk\\src\\Layout\\toolset-tasks\\toolset-tasks.csproj : error NU1900: Warning As Error: Error occurred while getting package vulnerability data: Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json.\r\n```\r\nand\r\n```\r\nE:\\Code\\dotnet-sdk\\artifacts\\bin\\redist\\Debug\\dotnet\\sdk\\9.0.100-dev\\NuGet.targets(180,5): warning MSB4220: Waiting for the currently executing task \"RestoreTask\" to cancel.\r\n```\r\n\r\nTo me this felt like a classic case of not passing a CTok, or using CTok.None. I dug into the RestoreTask and found that \r\n\r\n* RestoreDoes set up and [pass a CTok](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Build.Tasks/RestoreTask.cs#L163)\r\n* Restores are [run for each request](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Build.Tasks/BuildTasksUtility.cs#L251)\r\n* Also run [here](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreRunner.cs#L251)\r\n* Audit [is performed](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L336-L337), which requires\r\n* packages vulnerabilities to [be checked](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L513), which requires\r\n* [fetching vulnerability data](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/Utility/AuditUtility.cs#L90), which requires\r\n* querying vulnerability data [from the configured providers](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/Utility/AuditUtility.cs#L332)\r\n\r\nThrough this whole chain the CTok is flowed in a way that makes sense to me. However, the Vulnerability provider interface seems to accept a CTok, but [not use it](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/VulnerabilityInformationProvider.cs#L34), perhaps for caching purposes?\r\n\r\nI think if this was changed to accept the flowed-in CTok in some way that Restore would be properly cancellable again.\r\n \r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nI don't have standalone logs, but I did include some error messages above.\r\n```\r\n"},{"Id":"43499829257","Type":"IssuesEvent","CreatedAt":"2024-11-04T23:35:42","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7987","RelatedDescription":"Closed issue \"Nuget pack doesn't support blank <version> in .nuspec even though version is passed on the command line\" (#7987) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWhen running `nuget pack` with a .nuspec file that contains an empty `version` and passing -Version on the command line, nuget will fail with the error:\r\n\r\n> An error occured while trying to parse the value '' of property 'version' in the manifest file.\r\n>   Value cannot be null or an empty string.\r\n>   Parameter name: value\r\n\r\nHowever, you put in a bogus version identifier in the nuspec file, the same command will run happily, with the version number passed on the command line.\r\n\r\nNuGet product used:  NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 4.9.3.5777\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 10 1903\r\n\r\n## Detailed repro steps\r\n\r\n1. Create a valid .nuspec file, but with an empty `version`, i.e. `<version></version>`\r\n\r\n2. Run `nuget.exe pack the.nuspec -Version 1.2.3.4 `\r\n\r\n3. See error.\r\n\r\n4. Replace `version` in .nuspec file with `<version>0.0.0.0</version>`\r\n\r\n5. Run same command as above\r\n\r\n6. See success."},{"Id":"43495371771","Type":"IssuesEvent","CreatedAt":"2024-11-04T20:30:20","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13908","RelatedDescription":"Opened issue \"`dotnet nuget why` reports missing argument, even though it ran\" (#13908) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 9.0.100 SDK\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nRun `dotnet nuget why SomePackage` and you'll see an error message about a missing required argument, but then it'll still show you the output of why\n\n### Verbose Logs\n\n_No response_"},{"Id":"43493659690","Type":"IssuesEvent","CreatedAt":"2024-11-04T19:29:42","Actor":"msherms2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13906","RelatedDescription":"Opened issue \"CPM - Pre-Restore hook not working / does not exist\" (#13906) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe\n\n### Product Version\n\ndotnet 8, nuget 6.10+\n\n### Worked before?\n\nLinked post implied this once worked, unknown info\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nShort: We need a hook that allows a PreRestore event to occur. \r\n\r\nLonger:\r\nUntil `slnx` files become more mature, which will help the \"where\" to put the such event, I still don't think this will solve the issue. \r\n\r\nThis is directly used for Central Package Management (CPM). I've got a wide array of interlaced dependencies separated into multiple repositories. Changing this is not an option. To keep third party and local packages in sync, we thought CPM would be good, so we keep a central repository and keep our `Directory.Packages.Props` files managed there. At the pipeline build time, we simply fetch that file to the `$(SolutionDir)` and bam, build successful.\r\n\r\nThe problems come when developing locally. It's the wish of every developer to simply fetch and pull code from git and just click build, and have it work, but no PreBuild or PreRelease event type functionality could be found to invoke a download of that Directory.Packages.Props file. \r\n\r\nThe linked item here seems to no longer work: https://github.com/NuGet/Home/issues/4781\r\nThe item above has a few targets from various target files which seem to apply before restore, but when I tried it did not work.\r\nEverything i tried would restore first, fail (and pull versions despite the failure....different issue), and never try to execute the pull (since it failed before it).\r\n\r\nIs this supported but has been disabled? Does it only fail because events can only exist in csproj files, before slnx solves that? Any insight into this would be helpful.\n\n### Verbose Logs\n\n_No response_"},{"Id":"43493149446","Type":"IssuesEvent","CreatedAt":"2024-11-04T19:11:49","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13898","RelatedDescription":"Closed issue \" Simplify `CacheFile.LogMessages` by Removing Unnecessary `IAssetsLogMessage` Interface\" (#13898) at NuGet/Home","RelatedBody":"**Problem:**  \r\n`CacheFile.LogMessages` currently uses `IList<IAssetsLogMessage>`, adding unnecessary complexity for a data-only structure. Since `AssetsLogMessage` is a Data Transfer Object (DTO) meant purely for data transfer without polymorphic behavior, the `IAssetsLogMessage` interface introduces abstraction that provides no real benefit. This complicates serialization, requiring custom converters and adding maintenance overhead.\r\n\r\n**Solution:**  \r\nRefactor `CacheFile.LogMessages` to use `IList<AssetsLogMessage>` directly, removing the `IAssetsLogMessage` interface. "},{"Id":"43492100417","Type":"IssuesEvent","CreatedAt":"2024-11-04T18:35:50","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13196","RelatedDescription":"Closed issue \"Flaky test: `HttpRetryHandler_MultipleTriesTimed` finishes faster than timeout\" (#13196) at NuGet/Home","RelatedBody":"The timer has shown lower values than the expected value on both my local machine [and on CI](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=8974690&view=ms.vss-test-web.build-test-results-tab&runId=92794010&resultId=104160&paneView=debug).\r\nPerhaps the fidelity of the timer used for this test is not enough to properly measure.\r\n```\r\nFailed NuGet.Protocol.Tests.HttpRetryHandlerTests.HttpRetryHandler_MultipleTriesTimed [221 ms]\r\nExpected this to take at least: 00:00:00.2000000 But it finished in: 00:00:00.1870703\r\n  Expected: True\r\n  Actual:   False\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-11-06T03:30:19.9902514Z","RunDurationInMilliseconds":1017}