{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39107102473","Type":"PullRequestEvent","CreatedAt":"2024-06-07T19:36:37","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10018","RelatedDescription":"Opened pull request \"Using Azure.Storage.Blobs for storage access\" (#10018) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/5335\r\n\r\nBuilt on top of https://github.com/NuGet/NuGetGallery/pull/9981 (draft PR), so all the SDK isolation work done there is present here.\r\n\r\nSome choices made:\r\n* `MaximumExecutionTime` support that existed in `WindowsAzure.Storage` is dropped. Consumers would have to produce cancellation tokens with time limits if needed;\r\n* There are no longer ambient request timeouts in any of SDK objects (internally, all configuration objects passed in are consumed immediately to produce HTTP pipeline, so nothing is configurable after objects are created), to support overriding network timeouts for individual blob operations support for recreating whole stack of objects (service/container/blob) was added.\r\n* Previously ETag updates were implicitly captured by storage SDK and a lot of code assumes fresh ETags are available after many operations, new SDK has updated ETag in some responses (which are all different types incompatible with each other), so call-specific etag capturing had to be added where available.\r\n\r\nThere are table wrappers using old SDK left that I haven't touched yet. Those are going to be addressed separately.\r\n\r\nI commented out some tests and need some input on what to do with them.\r\n\r\nThe code was deployed to dev and passed E2E and functional tests."},{"Id":"39106569921","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:12:06","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9973","RelatedDescription":"Closed issue \"[Nuget.org Styles] No title for README/Documentation section \" (#9973) at NuGet/NuGetGallery","RelatedBody":"![image](https://github.com/NuGet/NuGetGallery/assets/43253759/82e23e53-6cef-4f01-bd25-8a40157b8016)\r\n"},{"Id":"39106568876","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:12:04","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9967","RelatedDescription":"Closed issue \"[NuGet.org bug] Clear content cache and log out are not working\" (#9967) at NuGet/NuGetGallery","RelatedBody":"![image](https://github.com/NuGet/NuGetGallery/assets/43253759/4ba035ba-592b-436b-aa49-22bd9217d5be)\r\n"},{"Id":"39106568026","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:12:01","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9978","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Use same blue for all new components\" (#9978) at NuGet/NuGetGallery","RelatedBody":"![image](https://github.com/NuGet/NuGetGallery/assets/43253759/e2ac54a4-0bd9-4d0e-a58e-5041d978134a)\r\n"},{"Id":"39106567218","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:59","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9966","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Hover color is not accessible for transparent button\" (#9966) at NuGet/NuGetGallery","RelatedBody":"![image](https://github.com/NuGet/NuGetGallery/assets/43253759/bdbc6ff7-ed05-4f2b-9393-7f1ab741c276)\r\n"},{"Id":"39106566231","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:57","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9976","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Navigation items have a different color \" (#9976) at NuGet/NuGetGallery","RelatedBody":"Navigation items in the navbar are grey, this creates a contrast against the white logo right next to them.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/7bfc15a6-9ad2-42a9-b3b2-5e11171d7d8f)\r\n"},{"Id":"39106565261","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:54","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9972","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] X icon is not centered in icon button.\" (#9972) at NuGet/NuGetGallery","RelatedBody":"![image](https://github.com/NuGet/NuGetGallery/assets/43253759/c9b7ae52-ce06-40ee-93bb-3438f7090dd4)\r\n"},{"Id":"39106564274","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:52","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9971","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Focus style for radio buttons are not correct\" (#9971) at NuGet/NuGetGallery","RelatedBody":"Focus or selecting a radio buttons adds a gray stile witch usually is an indicator that something is disabled. \r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/4209175a-084c-4b28-8e1c-74f7ce9c4d81)\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/121c4cfc-d70f-4e75-ab0d-d7905f7d8ea8)\r\n\r\n"},{"Id":"39106563480","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:50","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9956","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Dark them extra copy button creates extra `Copy` text\" (#9956) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Describe the bug\r\n\r\nEdge browser\r\n1. Enable dark theme and go to package then press copy\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/4effe44e-f53d-4940-9f4c-98d0a3ce2225)\r\n2. Paste in Notepad, you'll see extra `Copy` text, but you wouldn't see it if you do it on nuget.org with the current theme.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/8766776/c5dafd10-a07e-4cf6-bfa2-e6acf74efcfc)\r\n3. Same bug can repro for all other tabs such as `Package Manger`, `PackageReference` etc.\r\n\r\n\r\n### Repro Steps\r\n\r\nEdge browser with dark theme https://dev.nugettest.org/packages/e2e.semver2prerel.240506.234617.5383287/ or any other package\r\n\r\n### Expected Behavior\r\n\r\nNo extra `Copy` text in new line besides `dotnet add package xxx`\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"39106559536","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:39","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9963","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Icons in headers have a weird, shaped focus border\" (#9963) at NuGet/NuGetGallery","RelatedBody":"This happens when icons are used in titles, the problem is that some icons have a bigger size than the text, we can easily fix this by wrapping the title with a display: flex\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/ddda1e4e-f545-44cc-a48b-b3cf91f21522)\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/e9ff791c-f900-4207-a2dd-4f7a05bcd383)\r\n"},{"Id":"39106558500","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:37","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9977","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Prefix reserved icon is not contrast enough\" (#9977) at NuGet/NuGetGallery","RelatedBody":"![image](https://github.com/NuGet/NuGetGallery/assets/43253759/a33fed08-1d30-4e29-80fe-2f696868fa8c)\r\n"},{"Id":"39106557503","Type":"IssuesEvent","CreatedAt":"2024-06-07T19:11:34","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9962","RelatedDescription":"Closed issue \"[Dark Theme Bug Bash] Expand Advanced Search on narrow window color is nor correct\" (#9962) at NuGet/NuGetGallery","RelatedBody":"The color of the expand button has an incorrect color, this component is only present in narrow window sizes.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/f9b4e75f-5e00-437e-b6f2-0f823d1f31c0)\r\n"},{"Id":"39077414783","Type":"IssuesEvent","CreatedAt":"2024-06-06T22:49:53","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9895","RelatedDescription":"Closed issue \"Organize a Bug Bash for Dark theme feature.\" (#9895) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39130629568","Type":"IssuesEvent","CreatedAt":"2024-06-09T13:42:40","Actor":"jozefizso","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13528","RelatedDescription":"Opened issue \"Azure Trusted Signing service\" (#13528) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nThe Azure Trusted Signing service rotates the managed authenticode certificates each three days.\r\n\r\nAs the NuGet Gallery requires to specify a single, long lived certificate, it is not feasible to sign nuget packages with the ATS.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39130595160","Type":"IssuesEvent","CreatedAt":"2024-06-09T13:39:26","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13399","RelatedDescription":"Closed issue \"Nuget Incorrectly Reporting  \"Unable to find a stable package\"\" (#13399) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\ndotnet restore\n\n### Worked before?\n\nYes, whatever build was available in early March.\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n- On macOS x64:\r\n  - Install .NET 8.0.204 SDK (8.0.4 Runtime)\r\n  - run `dotnet --list-runtimes` to verify install of runtime:\r\n    - _Microsoft.AspNetCore.App 8.0.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]_\r\n    - _Microsoft.NETCore.App 8.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]_\r\n  - run `dotnet --list-sdks` to verify install of SDKs: \r\n    - _8.0.204 [/usr/local/share/dotnet/sdk]_\r\n\r\n---\r\n\r\nFor a project with the following in the CSPROJ, `dotnet restore` works fine:\r\n\r\n```\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"8.0.3\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.FileExtensions\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core.Mvc\" Version=\"3.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core\" Version=\"1.17.4\"/>\r\n\t\t<PackageReference Include=\"SendGrid\" Version=\"9.29.2\"/>\r\n\t</ItemGroup>\r\n```\r\n\r\nChanging references to...\r\n\r\n```\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"8.0.4\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.FileExtensions\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core.Mvc\" Version=\"3.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core\" Version=\"1.17.4\"/>\r\n\t\t<PackageReference Include=\"SendGrid\" Version=\"9.29.3\"/>\r\n\t</ItemGroup>\r\n```\r\n\r\nand running `dotnet restore` causes these errors to be raised (path removed):\r\n\r\n Determining projects to restore...\r\nerror NU1103: Unable to find a stable package Microsoft.AspNetCore.Mvc.NewtonsoftJson with version (>= 8.0.4)\r\nerror NU1103:   - Found 154 version(s) in nuget.org [ Nearest version: 9.0.0-preview.1.24081.5 ]\r\nerror NU1102: Unable to find package SendGrid with version (>= 9.29.3)\r\nerror NU1102:   - Found 117 version(s) in nuget.org [ Nearest version: 9.29.2 ]\r\n  Failed to restore (in 1.34 sec).\r\n\r\n---\r\n\r\nRunning `dotnet add package Microsoft.AspNetCore.Mvc.NewtonsoftJson --version 8.0.4`\r\n\r\n  Determining projects to restore...\r\n  Writing /var/folders/ht/bnz7h_6d1jb01dg6y7kjltxm0000gn/T/tmpWugafd.tmp\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/usr/local/share/dotnet/sdk/8.0.204/trustedroots/codesignctl.pem'.\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/usr/local/share/dotnet/sdk/8.0.204/trustedroots/timestampctl.pem'.\r\ninfo : Adding PackageReference for package 'Microsoft.AspNetCore.Mvc.NewtonsoftJson' into project '/Volumes/Data/Websites/Staging/vintagejeeps.net/live/Framework.csproj'.\r\ninfo : Restoring packages for ...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.mvc.newtonsoftjson/index.json\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/sendgrid/index.json\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.mvc.newtonsoftjson/index.json 262ms\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/sendgrid/index.json 306ms\r\nerror: NU1103: Unable to find a stable package Microsoft.AspNetCore.Mvc.NewtonsoftJson with version (>= 8.0.4)\r\nerror:   - Found 154 version(s) in nuget.org [ Nearest version: 9.0.0-preview.1.24081.5 ]\r\nerror: NU1102: Unable to find package SendGrid with version (>= 9.29.3)\r\nerror:   - Found 117 version(s) in nuget.org [ Nearest version: 9.29.2 ]\r\ninfo :   GET https://api.nuget.org/v3/vulnerabilities/index.json\r\ninfo :   OK https://api.nuget.org/v3/vulnerabilities/index.json 23ms\r\ninfo :   GET https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/vulnerability.base.json\r\ninfo :   GET https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/2024.03.24.11.37.12/vulnerability.update.json\r\ninfo :   OK https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/vulnerability.base.json 22ms\r\ninfo :   OK https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/2024.03.24.11.37.12/vulnerability.update.json 22ms\r\nerror: Package 'Microsoft.AspNetCore.Mvc.NewtonsoftJson' is incompatible with 'all' frameworks in project \r\n\r\n---\r\n\r\nTried running `nuget locals all -clear` to no effect...\n\n### Verbose Logs\n\n_No response_"},{"Id":"39125412719","Type":"IssuesEvent","CreatedAt":"2024-06-09T03:57:37","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13527","RelatedDescription":"Opened issue \"'dotnet nuget why' does not work when a directory is provided for the 'Path' argument\" (#13527) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.1xx-preview.6\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. Run `dotnet nuget why .\\Directory\\Path\\ Newtonsoft.Json`\r\n\r\nIt should be able to detect a solution or project file in the directory and run the command on it, following the same behavior as other Dotnet and NuGet CLI commands.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39116625099","Type":"IssuesEvent","CreatedAt":"2024-06-08T10:36:55","Actor":"TFTomSun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13526","RelatedDescription":"Opened issue \"NullreferenceException at RestoreCommand.PerformAuditAsync(IEnumerable<RestoreTargetGraph> graphs, TelemetryActivity telemetry, CancellationToken token)\" (#13526) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nnet48, net6\n\n### Worked before?\n\n6.7.1\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nExecuting the restore command fails since Version 6.8.0 -  I tried with all newer versions, including the current preview 6.11.0-preview.2. It fails for net48 and net6 processes. But I assume it would also fail for net8.\r\n\r\nIn our enterprise environments nuget.config we use local sources (directories) and nuget sources pointing to a JFrog Artifactory instance.\r\n\r\nIs that issue already known? Or should I provide more information.\n\n### Verbose Logs\n\n```shell\n> NullReferenceException [0]: \r\nat NuGet.Commands.RestoreCommand.<PerformAuditAsync>d__72.MoveNext()\r\nat NuGet.Commands.RestoreCommand.<ExecuteAsync>d__71.MoveNext()\r\n\r\n\r\ndotnet --info\r\n.NET SDK:\r\n Version:           8.0.200\r\n Commit:            438cab6a9d\r\n Workload version:  8.0.200-manifests.1850e762\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.200\\\r\n\r\nInstallierte .NET-Workloads:\r\nEs sind keine installierten Workloads zum Anzeigen vorhanden.\r\n\r\nHost:\r\n  Version:      8.0.2\r\n  Architecture: x64\r\n  Commit:       1381d5ebd2\r\n\r\n.NET SDKs installed:\r\n  7.0.113 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\n```\n"},{"Id":"39104515336","Type":"IssuesEvent","CreatedAt":"2024-06-07T17:42:45","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13525","RelatedDescription":"Opened issue \"Indicate in the Assets file when Package Source Mapping was enabled\" (#13525) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### Current Behavior\n\nThe assets file does not log any indication of whether Package Source Mapping was used during the restore. When investigating a customer's binlog, for example, the only way to know this status is to ask the customer.\n\n### Desired Behavior\n\nSimilar to how other features are recorded in the assets file, eg,\r\n```\r\n\"centralPackageVersionsManagementEnabled\": true,\r\n\"CentralPackageTransitivePinningEnabled\": true,\r\n```\r\n\r\nAdd something like this to the assets file:\r\n`\"PackageSourceMappingEnabled\": true,`\r\n\n\n### Additional Context\n\n_No response_"},{"Id":"39102723736","Type":"IssuesEvent","CreatedAt":"2024-06-07T16:32:22","Actor":"JuliusPC","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13524","RelatedDescription":"Opened issue \"dotnet list package --outdated should list newer versions of pre-release packages\" (#13524) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nWe reference pre-release packages in one of our projects. The output of `dotnet list package --outdated` doesn't list the updates for the pre-release package although a newer version is available (e. g. [2.0.0-beta4.22272.1 of System.CommandLine](https://www.nuget.org/packages/System.CommandLine/2.0.0-beta4.22272.1) in [sample repo](https://github.com/JuliusPC/dotnet-outdated)):\r\n\r\n~~~\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n\r\nProject `dotnet-outdated` has the following updates to its packages\r\n   [net8.0]:\r\n   Top-level Package         Requested             Resolved              Latest\r\n   > System.CommandLine      2.0.0-beta3.22114.1   2.0.0-beta3.22114.1   Not found at the sources\r\n~~~\r\n\r\nThe option `--include-prerelease` exists, but we don't want newer pre-releases of *all* referenced packages to be listed.\r\n\r\nThere should be an additional option that changes the behavior to the following:\r\n\r\n- If the referenced package is stable, list the latest available stable version but no pre-release version\r\n- If the referenced package is pre-release, list the latest available version, even if it is also a pre-release version (like `--include-prerelease` would be used for this package)\r\n\n\n### Additional Context and Details\n\nSee also:\r\n\r\n- <https://github.com/NuGet/Home/issues/13171>\r\n- <https://github.com/dotnet/sdk/issues/41442>"},{"Id":"39099132444","Type":"IssuesEvent","CreatedAt":"2024-06-07T14:32:16","Actor":"omajid","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13523","RelatedDescription":"Opened issue \"Ownership semantics of PhysicalPackageFile.GetStream() are not clear\" (#13523) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nNuGet.Client commit dc2e3b27170c779e3c01a7306504fb83cb4ef147\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n`PhysicalPackageFile.GetStream()` returns a `Stream`, an `IDisposable`. It's not clear when/if that needs to be disposed.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/dc2e3b27170c779e3c01a7306504fb83cb4ef147/src/NuGet.Core/NuGet.Packaging/PackageCreation/Authoring/PhysicalPackageFile.cs#L89-L106 says:\r\n\r\n```csharp\r\n        public Stream GetStream()\r\n        {\r\n            if (_streamFactory != null)\r\n            {\r\n                _lastWriteTime = DateTimeOffset.UtcNow;\r\n                return _streamFactory();\r\n            }\r\n            else if (SourcePath != null)\r\n            {\r\n                _lastWriteTime = File.GetLastWriteTimeUtc(SourcePath);\r\n                return File.OpenRead(SourcePath);\r\n            }\r\n            else\r\n            {\r\n                _lastWriteTime = DateTimeOffset.UtcNow;\r\n                return MemoryStream;\r\n            }\r\n        }\r\n```\r\n\r\nIf `GetStream()` returns a `FileStream`, it needs to be `Dispose()`d by the caller to avoid a resource leak. But if a `MemoryStream` is returned and the caller calls `Dispose()s`, it Disposes the internal `MemoryStream` which makes any further reads from it impossible.\n\n### Verbose Logs\n\n_No response_"},{"Id":"39098636417","Type":"IssuesEvent","CreatedAt":"2024-06-07T14:18:10","Actor":"WeihanLi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13522","RelatedDescription":"Opened issue \"CPM GlobalPackageReference support override default IncludeAssets\" (#13522) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\nThe `GlobalPackageReference` would use `Runtime;Build;Native;contentFiles;Analyzers` for the `IncludeAssets` while sometimes the package may need to use `all` to include the `compile`, maybe we could support overriding the default `IncludeAssets`\r\n\n\n### Additional Context and Details\n\nI'm trying to use CPM for the EasyNetQ project and trying to use the `GlobalPackageReference` for `Fody`\r\n\r\n![image](https://github.com/NuGet/Home/assets/7604648/217fbff4-04a1-4142-be39-afb2ae425dfc)\r\n"},{"Id":"39092829437","Type":"IssuesEvent","CreatedAt":"2024-06-07T11:12:35","Actor":"carlos-quintero","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13521","RelatedDescription":"Opened issue \"Missing and inconsistent warnings NU190x about vulnerabilities with MSBuild restore in Visual Studio and command-line\" (#13521) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nMSBuild 17.10.4+10fbfbf2e, Visual Studio 2022 17.10.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n* Using Visual Studio 2022, in Options window, NuGet Package Manager > General check the checkbox \"Allow format selection on first package install\"\r\n* Create a blank solution and add 4 projects to it as follows\r\n* Add a \"Class Library\" project named \"ClassLibrarySDKStyleNet8\" targetting NET 8. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable). Therefore, this project will use SDK style and PackageReference. \r\n* Add a \"Class Library (.NET Framework)\" project named \"ClassLibraryClassicStyleNetFramework48PackagesConfig\" targetting .NET Framework 4.8. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable) using Packages.config when prompted. Therefore, this project will use classic style and packages.config.\r\n* Add a \"Class Library (.NET Framework)\" project named \"ClassLibraryClassicStyleNetFramework48PackageReference\" targetting .NET Framework 4.8. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable) using PackageReference when prompted. Therefore, this project will use classic style and PackageReference.\r\n* Add a \"Class Library (.NET Framework)\" project named \"ClassLibrarySdkStyleNetFramework48\" targetting .NET Framework 4.8. Using the Upgrading Assistant, convert it to SDK project style. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable). Therefore, this project will use SDK style and PackageReference.\r\n\r\n### Problem 1\r\n\r\nCompile the solution in Visual Studio\r\n\r\nResult:\r\n\r\nIn the Error List and in the Output window, you get warning NU1903 only for these two projects (the ones that use SDK-style):\r\n* ClassLibrarySdkStyleNetFramework48\r\n* ClassLibrarySDKStyleNet8\r\n\r\nIt would be helpful to get the warning also for the two projects using the classic style\r\n\r\n### Problem 2\r\n\r\nOpen a command prompt, change to the folder of the solution and execute:\r\n\r\n`\"<path>\\MSBuild\\Current\\bin\\msbuild.exe\" -t:Restore`\r\n\r\nResult:\r\n\r\nYou get warning NU1903 only for these three projects (the ones that use PackageReference):\r\n* ClassLibrarySdkStyleNetFramework48\r\n* ClassLibrarySDKStyleNet8\r\n* ClassLibraryClassicStyleNetFramework48PackageReference\r\n\r\nIt would be helpful to get the warning also for project using packages.config\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39089301743","Type":"IssuesEvent","CreatedAt":"2024-06-07T09:14:14","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13520","RelatedDescription":"Opened issue \"[Bug Bash] [Unstable] The first removing of a source mapping from the ‘Package Source Mappings’ list in ‘Package Source Mapping’ dialog doesn’t work  \" (#13520) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.11.0.87\n\n### Worked before?\n\nIt is not regression since it can be reproduced on D17.9\\34601.282.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1.\tCreate a C# Console App (.NET 8.0) project and open the PMC.\r\n2.\tClick the ‘settings’ button on the top of PMC window and click ‘NuGet Package Manager->Package Source Mapping’ tab.\r\n3.\tClick the ‘Add’ button, add several package source mappings and click ‘OK’ button.\r\n4.\tClick the ‘settings’ button on the top of PMC window and click ‘NuGet Package Manager->Package Source Mapping’ tab.\r\n5.\tSelect a package source in the ‘Package Source Mappings’ list, click the ‘Remove’ button and click ‘OK’ button.\r\n6.\tClick the ‘settings’ button on the top of PMC window, click ‘NuGet Package Manager->Package Source Mapping’ tab and observe the the ‘Package Source Mappings’ list.\r\n\r\n#### Expected Results:\r\nThe removed package source mapping in step5 disappears in the ‘Package Source Mappings’ list.\r\n\r\n#### Actual Result:\r\nThe removed package source mapping in step5 still shows in the ‘Package Source Mappings’ list as below record.\r\n![FailToRemoveSourceMapping](https://github.com/NuGet/Home/assets/20632625/ea5a407e-dec9-4067-8e43-bf302de00bc6)\r\n\r\n#### Notes:\r\n1.Repro rate: 30%.\r\n2.Removing the source mapping will work at the second time.\r\n3.It is easy to repro at the first operation in ‘Options->NuGet Package Manager->Package Source Mapping’ dialog. If you cannot repro anymore, please restart your VM and follow the steps above.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39086814933","Type":"IssuesEvent","CreatedAt":"2024-06-07T07:52:33","Actor":"carlos-quintero","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13519","RelatedDescription":"Opened issue \"nuget.exe restore doesn't emit warning  NU1504 (Duplicate 'PackageReference' items found), while msbuild -t:restore does\" (#13519) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.10\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n- Using Visual Studio 2022, create a solution with a .csproj file with a duplicated PackageReference element, such as:\r\n\r\n```\r\n<ItemGroup>\r\n   <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.3\" />\r\n   <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.3\" />\r\n</ItemGroup>\r\n```\r\n\r\n- Build the solution. Notice that in the output window you get:\r\n\r\n`\"warning NU1504: Duplicate 'PackageReference' items found. Remove the duplicate items or use the Update functionality to ensure a consistent restore behavior. The duplicate 'PackageReference' items are: Newtonsoft.Json 13.0.3, Newtonsoft.Json 13.0.3.\"`\r\n\r\n- Open a command prompt and change to the directory of the .sln file\r\n\r\n- Execute this command and notice that you get also warning NU1504:\r\n\r\n`<path>\\msbuild.exe -t:Restore`\r\n\r\n- Execute this command and notice that you don't get warning NU1504:\r\n\r\n`nuget.exe restore`\r\n\r\nFWIW, nuget.exe shows other warnings such as NU1903 (for vulnerabilities), etc. as expected, but not NU1504. I would expect both tools to emit the same warnings.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"39078577483","Type":"IssuesEvent","CreatedAt":"2024-06-07T00:08:27","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13518","RelatedDescription":"Opened issue \"Restore NuGetAudit output should include some details about advisories that were suppressed\" (#13518) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, MSBuild.exe, dotnet.exe, NuGet SDK\n\n### The Elevator Pitch\n\nWe should show some output during restore to indicate how many warnings were suppressed during NuGetAudit.\r\n\r\nPeople could define `<NuGetAuditSuppress>` items and then forget about them. Restore should tell them when some vulnerability warnings aren't being reported because of their defined suppressions.\n\n### Additional Context and Details\n\nSee https://github.com/NuGet/Home/pull/12921#issuecomment-2077805960"},{"Id":"39076760987","Type":"IssuesEvent","CreatedAt":"2024-06-06T22:11:50","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13398","RelatedDescription":"Closed issue \"Document dotnet nuget config\" (#13398) at NuGet/Home","RelatedBody":"This may need to be something that lives in the dotnet/docs repo instead."},{"Id":"39073959326","Type":"IssuesEvent","CreatedAt":"2024-06-06T20:06:39","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/13348","RelatedDescription":"Reopened issue \"Content files in sub directories are not copied to corresponding sub directories in .\\bin\\**\" (#13348) at NuGet/Home","RelatedBody":"After having created a package using `nuget spec`/`nuget pack`, when I use my package in a client project, no content of the sub folders of my `.\\lib\\{TFM}` folder are being copied to the `.\\bin\\*\\**` folders of my client project.\r\n\r\n### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Version: 6.9.1.3\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\n`NuGet.exe` does not recurse through sub folders in `lib\\{TFM}`.\r\n\r\nThis renders it impossible to add plug-ins to the package.\r\n\r\nSee this example:\r\nhttps://stackoverflow.com/questions/78216778/how-can-i-copy-plug-in-dlls-from-a-sub-folder-using-nuget"},{"Id":"39071732737","Type":"IssuesEvent","CreatedAt":"2024-06-06T18:42:32","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13517","RelatedDescription":"Opened issue \"'why' command does not show up in 'dotnet nuget --help' output\" (#13517) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet SDK\n\n### Product Version\n\n.NET 9.0.100 Preview 6\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Run 'dotnet nuget -h'\r\n2. See commands listed in help output: the 'why' command is missing\r\n\r\nWe are in the process of migrating our CLI commands from '_Microsoft.Extensions.CommandLineUtils.CommandLineApplication_' to '_System.Commandline.CliCommand_', and this has meant that we have a split in our command parsing here (migrated commands): https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Program.cs#L83-L85, and here (pre-migration commands): https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.CommandLine.XPlat/Program.cs#L257-L276.\r\n\r\nAll commands registered with the old code path (pre-migration) show up correctly in the help output, but migrated `_dotnet nuget *_' commands (_why_/_config_) are not being registered correctly. They still run correctly. They just do not show up in 'dotnet nuget --help' output.\n\n### Verbose Logs\n\n```shell\n> dotnet nuget -h\n```\n"},{"Id":"39070371206","Type":"IssuesEvent","CreatedAt":"2024-06-06T17:53:55","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13516","RelatedDescription":"Opened issue \"Package Owners do not appear for packages suggested by Package Recommender\" (#13516) at NuGet/Home","RelatedBody":"_This issue is related to https://github.com/NuGet/Home/issues/10714_\r\n\r\nThe package recommender does not load metadata from a package source's Search API; therefore, the Owner metadata is not available. Author is shown for recommended packages, even though Owner is shown for the regular (non-recommended) packages in the list.\r\n\r\n![intellicodeShowsAuthor](https://github.com/NuGet/NuGet.Client/assets/49205731/96cdb500-390b-47ed-bbb8-1c8c923c7915)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-10T03:30:18.9061496Z","RunDurationInMilliseconds":901}