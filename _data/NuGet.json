{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"38188633576","Type":"PullRequestEvent","CreatedAt":"2024-05-08T07:42:20","Actor":"v-manil2","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9941","RelatedDescription":"Opened pull request \"[ReleasePrep][2024.05.08]RI of dev into main \" (#9941) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"38171383860","Type":"PullRequestEvent","CreatedAt":"2024-05-07T17:27:05","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9933","RelatedDescription":"Merged pull request \"Solve Package Page Tooltip Accessibility Bugs and Framework Filter Ch…\" (#9933) at NuGet/NuGetGallery","RelatedBody":"**Accessibility issues on production:**\r\n\r\n1.Narrator is unable to read the tooltip content when hover or use tab key to activate \"Framework\" tooltip.\r\n2.When press tab key on package badges, screen reader reads the aria label content but without tooltip display.\r\n3.When any of the \"Framework filter mode\" checkbox selected and dropdown open, user unable to use up and down arrow key to move the selection.\r\n**Solution:**\r\n1.Disable Bootstrap popover JavaScript on framework filter and support framework badges, keep the popover classes and layout, add JavaScript function to make the tooltip popup, narrator can read the tooltip.\r\n2. Add up and down arrow key JavaScript function to make users are able to use arrow keys to move between framework filter mode checkboxes.\r\n**Bug links:**\r\n\r\n1.https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970893\r\n2.https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970906\r\n3.https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1987964\r\n**Screenshots and video**\r\nFramwork tooltip Before \r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/2fdfaf05-fc14-4595-9a0d-9db1677208e5)\r\n\r\nPackage badge tooltip before:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/84cf6b4c-958d-4c9d-b5da-bac1fcc74fc7)\r\n\r\nPackage badge tooltip after:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/15b2f25a-905a-40df-a7ed-a2a4e826af07)\r\nBefore:\r\n[before.webm](https://github.com/NuGet/NuGetGallery/assets/34078976/3b6713c9-ed79-4cca-85d8-80ab0aa1af83)\r\nAfter:\r\n[after.webm](https://github.com/NuGet/NuGetGallery/assets/34078976/10ae7aae-995e-41fc-9194-81193cf333c5)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"38110102718","Type":"IssuesEvent","CreatedAt":"2024-05-06T05:17:45","Actor":"egvijayanand","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9940","RelatedDescription":"Opened issue \"[Feature]: It would be great if the Package target version is displayed in the Versions tab\" (#9940) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nDisplaying the package target framework version is useful.\r\n\r\nBut it would be great if the Package target version is also displayed in the Versions tab.\r\n\r\nSo that no need to traverse multiple times to find the target framework of a particular version.\r\n\r\nDisplaying the target framework as an additional column would help to locate it even more quickly.\n\n### The Elevator Pitch\n\nIt helps in finding the appropriate version of the package in a particular target framework version.\r\n\r\nTarget framework versions can be cached in the backend so that they need not be queried again and again.\n\n### Additional Context and Details\n\n![image](https://github.com/NuGet/NuGetGallery/assets/81947404/475ccf5c-048f-4c99-9706-d210fd1d4958)\r\n\r\nA sample versions page, here multiple versions of the package targeting different framework versions, have to traverse each version of the package to find out the exact version of the package to reference.\r\n\r\nDisplaying the target framework as an additional column would help to locate it even quicker."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"38216366507","Type":"IssuesEvent","CreatedAt":"2024-05-08T23:24:19","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12281","RelatedDescription":"Closed issue \"Update Microsoft.Web.Xdt to 7.0.0 in NuGet.Client for .NET 7.0\" (#12281) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, dotnet.exe\n\n### Current Behavior\n\nNuGet.Client references Microsoft.Web.Xdt version 3.0.0.\n\n### Desired Behavior\n\nThe version of NuGet.Client shipping in .NET should reference Microsoft.Web.Xdt version 7.0.0, which is the version that ships in .NET 7.\n\n### Additional Context\n\nIn .NET source-build, we must manually replace this version with the one that ships in the .NET product (7.0.0 for .NET 7.0). It would be best if NuGet.Client references the most recent version of this package so that the .NET source-build and the NuGet.Client build are as closely aligned as possible.\r\n\r\nAdditional context where this caused an issue here: https://github.com/NuGet/Home/issues/12261 "},{"Id":"38208056602","Type":"IssuesEvent","CreatedAt":"2024-05-08T17:34:33","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13430","RelatedDescription":"Opened issue \"Remove \"please\" from HTTP errors.\" (#13430) at NuGet/Home","RelatedBody":"Follow https://github.com/NuGet/Home/issues/8141 and remove all occurance of \"please\" from the http errors"},{"Id":"38190346860","Type":"IssuesEvent","CreatedAt":"2024-05-08T08:38:12","Actor":"evgenyvalavin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13429","RelatedDescription":"Opened issue \"NuGet for VS Code does not respect revision number in a version of a package\" (#13429) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nC# Dev Kit v1.5.20\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nVS Code says 1.10.0 is the latest version of Xamarin.Google.Android.Material.\r\nBut the latest version is 1.10.0.3, which is installed and in use already.\r\n![image](https://github.com/NuGet/Home/assets/35497422/4236bcd3-453d-48f1-bbac-59d4fcc42a02)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"38178177392","Type":"IssuesEvent","CreatedAt":"2024-05-07T21:53:49","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13428","RelatedDescription":"Closed issue \"Flaky test PackCommandTests.PackCommand_PackTargetHook_ExecutesBeforePack\" (#13428) at NuGet/Home","RelatedBody":"This test is looking for .NET 7.0 packages which do not exist.\r\n\r\nDotnet.Integration.Test.PackCommandTests.PackCommand_PackTargetHook_ExecutesBeforePack(tfmProperty: \"TargetFrameworks\", tfmValue: \"netstandard1.4;net7.0\")\r\n\r\n\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 0 version(s) in dotnet-eng\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 0 version(s) in dotnet-eng [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 0 version(s) in myget-legacy@Local\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 0 version(s) in myget-legacy@Local [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from dotnet-libraries were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from dotnet-libraries were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from nuget-build were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from nuget-build were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from vside were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from vside were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 7.0.20)\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 7.0.20) [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 288 version(s) in myget-legacy@Local [ Nearest version: 3.0.0-preview6-19253-01 ]\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 288 version(s) in myget-legacy@Local [ Nearest version: 3.0.0-preview6-19253-01 ] [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 110 version(s) in dotnet-public [ Nearest version: 8.0.0-preview.1.23112.2 ]\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 110 version(s) in dotnet-public [ Nearest version: 8.0.0-preview.1.23112.2 ] [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 0 version(s) in dotnet-eng\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 0 version(s) in dotnet-eng [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from dotnet-libraries were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from dotnet-libraries were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from nuget-build were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from nuget-build were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from vside were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from vside were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n>     Failed to restore D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj (in 469 ms).\r\n>   \r\n>   , but found 1 (difference of 1).\r\n>     Stack Trace:\r\n>        at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)\r\n>      at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)\r\n>      at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)\r\n>      at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)\r\n>      at Dotnet.Integration.Test.DotnetIntegrationTestFixture.RunDotnet(String workingDirectory, String args, Boolean expectSuccess, IReadOnlyDictionary`2 environmentVariables) in D:\\a\\_work\\1\\s\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\DotnetIntegrationTestFixture.cs:line 227\r\n>      at Dotnet.Integration.Test.DotnetIntegrationTestFixture.RestoreProjectExpectSuccess(String workingDirectory, String projectName, String args) in D:\\a\\_work\\1\\s\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\DotnetIntegrationTestFixture.cs:line 196\r\n>      at Dotnet.Integration.Test.PackCommandTests.PackCommand_PackTargetHook_ExecutesBeforePack(String tfmProperty, String tfmValue) in D:\\a\\_work\\1\\s\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\PackCommandTests.cs:line 3411\r\n>      at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n>      at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n> "},{"Id":"38174653204","Type":"IssuesEvent","CreatedAt":"2024-05-07T19:26:20","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13428","RelatedDescription":"Opened issue \"Flaky test PackCommandTests.PackCommand_PackTargetHook_ExecutesBeforePack\" (#13428) at NuGet/Home","RelatedBody":"This test is looking for .NET 7.0 packages which do not exist.\r\n\r\nDotnet.Integration.Test.PackCommandTests.PackCommand_PackTargetHook_ExecutesBeforePack(tfmProperty: \"TargetFrameworks\", tfmValue: \"netstandard1.4;net7.0\")\r\n\r\n\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 0 version(s) in dotnet-eng\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 0 version(s) in dotnet-eng [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 0 version(s) in myget-legacy@Local\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 0 version(s) in myget-legacy@Local [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from dotnet-libraries were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from dotnet-libraries were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from nuget-build were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from nuget-build were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from vside were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from vside were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 7.0.20)\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 7.0.20) [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 288 version(s) in myget-legacy@Local [ Nearest version: 3.0.0-preview6-19253-01 ]\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 288 version(s) in myget-legacy@Local [ Nearest version: 3.0.0-preview6-19253-01 ] [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 110 version(s) in dotnet-public [ Nearest version: 8.0.0-preview.1.23112.2 ]\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 110 version(s) in dotnet-public [ Nearest version: 8.0.0-preview.1.23112.2 ] [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Found 0 version(s) in dotnet-eng\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Found 0 version(s) in dotnet-eng [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from dotnet-libraries were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from dotnet-libraries were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from nuget-build were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from nuget-build were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n> ##[error]D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj(0,0): Error NU1102: - Versions from vside were not considered\r\n> D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj : error NU1102: - Versions from vside were not considered [D:\\a\\_work\\1\\s\\build\\build.proj]\r\n>     Failed to restore D:\\a\\_work\\1\\s\\.test\\work\\f54e592d\\3dea106d\\ClassLibrary1\\ClassLibrary1.csproj (in 469 ms).\r\n>   \r\n>   , but found 1 (difference of 1).\r\n>     Stack Trace:\r\n>        at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)\r\n>      at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)\r\n>      at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)\r\n>      at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)\r\n>      at Dotnet.Integration.Test.DotnetIntegrationTestFixture.RunDotnet(String workingDirectory, String args, Boolean expectSuccess, IReadOnlyDictionary`2 environmentVariables) in D:\\a\\_work\\1\\s\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\DotnetIntegrationTestFixture.cs:line 227\r\n>      at Dotnet.Integration.Test.DotnetIntegrationTestFixture.RestoreProjectExpectSuccess(String workingDirectory, String projectName, String args) in D:\\a\\_work\\1\\s\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\DotnetIntegrationTestFixture.cs:line 196\r\n>      at Dotnet.Integration.Test.PackCommandTests.PackCommand_PackTargetHook_ExecutesBeforePack(String tfmProperty, String tfmValue) in D:\\a\\_work\\1\\s\\test\\NuGet.Core.FuncTests\\Dotnet.Integration.Test\\PackCommandTests.cs:line 3411\r\n>      at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n>      at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n> "},{"Id":"38172086014","Type":"IssuesEvent","CreatedAt":"2024-05-07T17:52:12","Actor":"JustinPechstein","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13427","RelatedDescription":"Closed issue \"Reference not working after migrating to PackageReference\" (#13427) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n.NET SDK Version 8.0.204\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHello, \r\nyesterday I restructured my files and projects a bit and since I did this I have this new errormessage \" Must use PackageReference\".\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/dba9adc6-1c98-4250-bfbf-521c0c6b19f7)\r\n\r\nI quickly found out that I have to migrate the packages.config to PackageReferences to solve this problem. \r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/8cd20f39-b214-4543-950d-ec5c0c4d3b8c)\r\n\r\nSo I did the migration as shown (once with every transitive dependencies checked and once with only the Top-level dependencies).\r\n\r\nThis worked completely fine for all the projects, instead of \"Microsoft.Office.Interop.Excel\". After the migration the reference is bugged and the \"new\" behavior is hard to explain. In general the reference exists:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/559c231d-0b98-4853-9de4-0089961d27b1)\r\n\r\nand I can use it in the using section without any problems:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/e460708a-360f-4820-b69c-8c3a951d6279)\r\n\r\nBut, without doing anything I have tons of errors because of whatever reason...\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/4fcc65cd-a5b5-44be-be85-743e84c8f604)\r\n\r\nThere are several datatypes that can be resolved but the properties for \"Rows\" and \"Cells\" are not being found.\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/006ede65-d197-460f-8f52-950207d6957f)\r\n\r\nI am very curious about this, did I miss something, did the migration miss something? Or might this be a problem with that package?\r\n\r\nI am thankful for every helpful response because I cannot carry on right now...\n\n### Verbose Logs\n\n_No response_"},{"Id":"38171709749","Type":"IssuesEvent","CreatedAt":"2024-05-07T17:38:28","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13354","RelatedDescription":"Closed issue \"Promote from warning to error in VS Options NuGet Package Manager\" (#13354) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\nPMUI shows an http shows a warning when http source is used.\n\n### Desired Behavior\n\nShow an error instead.\n\n### Additional Context\n\n_No response_"},{"Id":"38171241270","Type":"IssuesEvent","CreatedAt":"2024-05-07T17:22:20","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13423","RelatedDescription":"Closed issue \"`PackageSourceProvider.UpdatePackageSource` doesn't respect a value from `disableTLSCertificateValidation` attribute\" (#13423) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.10\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\n```csharp\r\nusing NuGet.Configuration;\r\n\r\nvar configContents = \"\"\"\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n        <packageSources>\r\n            <add key=\"default-http\" value=\"http://api.nuget.org/v3/index.json\" />\r\n        </packageSources>\r\n    </configuration>\r\n    \"\"\";\r\n\r\nFile.WriteAllText(Path.Combine(Environment.CurrentDirectory, \"NuGet.Config\"), configContents);\r\n\r\nvar settings = new Settings(Environment.CurrentDirectory);\r\nvar packageSourceProvider = new PackageSourceProvider(settings);\r\n\r\nvar source = packageSourceProvider.GetPackageSourceByName(\"default-http\")!;\r\nsource.disableTlLSCertificateValidation= true;\r\npackageSourceProvider.UpdatePackageSource(source, false, false);\r\n\r\n// Loading brand new Settings instance to ensure we are not checking for cached value\r\nsettings = new Settings(Environment.CurrentDirectory);\r\npackageSourceProvider = new PackageSourceProvider(settings);\r\nsource = packageSourceProvider.GetPackageSourceByName(\"default-http\")!;\r\n\r\nvar value = source.disableTLSCertidficateValidation; // false, should be true\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"38111453716","Type":"IssuesEvent","CreatedAt":"2024-05-06T06:25:26","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13308","RelatedDescription":"Closed issue \"dotnet list <SOLUTION> package --vulnerable/--outdated/--deprecated  fails with Azure Artifacts Credential Provider \" (#13308) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\ndotnet 8.0.200 (NuGet 6.9.1.3)\r\n\r\n### Worked before?\r\n\r\nDon't know\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nGiven a repository with the following .NET solution:\r\n```\r\n┌─src\r\n├─┬─MyProject1\r\n│ └───MyProject1.csproj\r\n├─┬─MyProject2\r\n│ └───MyProject2.csproj\r\n├─┬─MyProject3\r\n│ └───MyProject3.csproj\r\n├───MySolution.sln\r\n├───nuget.config\r\n\r\n```\r\nAll the 3 projects have NuGet `PackageReference`s from two different NuGet feeds:\r\n* The public NuGet feed (https://api.nuget.org/v3/index.json)\r\n* Our Azure DevOps Artifacts feed (https://pkgs.dev.azure.com/[myorg]/_packaging/[myfeed]/nuget/v3/index.json\r\n\r\nBoth of these feeds are listed in the **nuget.config** file.\r\n\r\nI have installed the [Azure Artifacts Credential Provider](https://github.com/microsoft/artifacts-credprovider) on the current device (tested on both Windows and Linux).\r\n\r\n**I have successfully authenticated and acquired a token for the Azure DevOps feed** by using the `--interactive` option with some dotnet command; f.ex. by having run `dotnet restore --interactive` once from the `src` folder.\r\n```bash\r\n~/repos/myrepo/src> dotnet restore --interactive --no-cache\r\n  Determining projects to restore...\r\n      [CredentialProvider]DeviceFlow: https://pkgs.dev.azure.com/[myorg]/_packaging/[myfeed]/nuget/v3/index.json\r\n      [CredentialProvider]ATTENTION: User interaction required.\r\n\r\n      **********************************************************************\r\n\r\n      To sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code ****** to authenticate.\r\n\r\n      **********************************************************************\r\n\r\n  Restored /home/me/repos/myrepo/MyProject1/MyProject1.csproj (in 36,52 sec).\r\n  Restored /home/me/repos/myrepo/MyProject2/MyProject2.csproj (in 36,6 sec).\r\n  Restored /home/me/repos/myrepo/MyProject3/MyProject3.csproj (in 36,64 sec).\r\n```\r\n\r\nHaving performed the above step, I can now successfully run `dotnet restore` without the `--interactive` option each time, since the acquired token is persisted on the device and can be reused until the token expiry:\r\n```bash\r\n~/repos/myrepo/src> dotnet restore\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n```\r\n\r\nWhen changing `cwd` to one of the project directories, f.ex. src/MyProject1, I can now successfully run the `dotnet list package --vulnerable` command successfully; authentication to the Azure DevOps feed works fine:\r\n```bash\r\n~/repos/myrepo/src/MyProject1> dotnet list package --vulnerable\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   https://pkgs.dev.azure.com/[myorg]/_packaging/[myfeed]/nuget/v3/index.json\r\n\r\nThe given project `MyProject1` has no vulnerable packages given the current sources.\r\n```\r\n\r\nBut if I try to do the same from the solution folder (src):\r\n```bash\r\n~/repos/myrepo/src> dotnet list package --vulnerable\r\n\r\nwarn : The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for `NuGet`\r\nerror: Response status code does not indicate success: 401 (Unauthorized).\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package list [arguments] [options]\r\n\r\nArguments:\r\n  <PROJECT | SOLUTION>  A path to a project, solution file or directory.\r\n  ...\r\n```\r\n\r\nIt looks like the solution file in the current folder is read but authentication to the Azure DevOps feed fails - even if my persisted token should still be valid. \r\n(FYI: If I explicitly pass the SOLUTION file path as argument the same thing happens).\r\n\r\nPlease also see bug #13307 related to unexpected behavior with the `<SOLUTION | PROJECT>` argument.\r\n\r\nPlease figure out why authentication fails when using solution files but works when only using project files.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"38099012561","Type":"IssuesEvent","CreatedAt":"2024-05-05T12:44:16","Actor":"JustinPechstein","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13427","RelatedDescription":"Opened issue \"Reference not working after migrating to PackageReference\" (#13427) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n.NET SDK Version 8.0.204\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHello, \r\nyesterday I restructured my files and projects a bit and since I did this I have this new errormessage \" Must use PackageReference\".\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/dba9adc6-1c98-4250-bfbf-521c0c6b19f7)\r\n\r\nI quickly found out that I have to migrate the packages.config to PackageReferences to solve this problem. \r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/8cd20f39-b214-4543-950d-ec5c0c4d3b8c)\r\n\r\nSo I did the migration as shown (once with every transitive dependencies checked and once with only the Top-level dependencies).\r\n\r\nThis worked completely fine for all the projects, instead of \"Microsoft.Office.Interop.Excel\". After the migration the reference is bugged and the \"new\" behavior is hard to explain. In general the reference exists:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/559c231d-0b98-4853-9de4-0089961d27b1)\r\n\r\nand I can use it in the using section without any problems:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/e460708a-360f-4820-b69c-8c3a951d6279)\r\n\r\nBut, without doing anything I have tons of errors because of whatever reason...\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/4fcc65cd-a5b5-44be-be85-743e84c8f604)\r\n\r\nThere are several datatypes that can be resolved but the properties for \"Rows\" and \"Cells\" are not being found.\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/006ede65-d197-460f-8f52-950207d6957f)\r\n\r\nI am very curious about this, did I miss something, did the migration miss something? Or might this be a problem with that package?\r\n\r\nI am thankful for every helpful response because I cannot carry on right now...\n\n### Verbose Logs\n\n_No response_"},{"Id":"38065470261","Type":"IssuesEvent","CreatedAt":"2024-05-03T14:07:09","Actor":"jhennessey","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13422","RelatedDescription":"Closed issue \"[Feature]: Identify and report the package(s) with a transitive dependency upon a vulnerable package\" (#13422) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nWhen running `dotnet list <project> package --vulnerable --include-transitive` the generated report will include transitive dependencies with detected vulnerabilities. However, the report (text or JSON format) does not include which top-level package(s) depend upon the transitive dependency. Therefore, when automating vulnerability scans, it becomes difficult to know which packages should be reviewed for updates. Including this information in the generated report file would greatly ease the effort required to determine what packages require updates.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-05-09T03:30:17.7316616Z","RunDurationInMilliseconds":1101}