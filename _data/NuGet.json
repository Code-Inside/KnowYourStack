{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31267939362","Type":"IssuesEvent","CreatedAt":"2023-08-21T20:37:33","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9467","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Password login flow redirects to wrong sign in page after creating temp password\" (#9467) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nIn the temporary password login flow that we enable for users, once they've created the temporary password, they see this page:\r\n![image](https://user-images.githubusercontent.com/82980589/232170652-461fea99-0bab-419d-bcda-98dfaef4d398.png)\r\n\r\nThe 'Sign in' link here takes you to the default sign in page: https://www.nuget.org/users/account/LogOn\r\n![image](https://user-images.githubusercontent.com/82980589/232170706-a107fb9b-dbf8-4d28-9a4f-d1d406ee4ccb.png)\r\n\r\nInstead, it should send you to the password enabled sign in page here: https://www.nuget.org/users/account/LogOnNuGetAccount\r\n![image](https://user-images.githubusercontent.com/82980589/232170778-3bf994e4-9b9d-4b56-b4f7-eba33dbde997.png)\r\n\r\n\n\n### Repro Steps\n\n1. Enable password login\r\n2. Follow the steps to create a temporary password\r\n3. Click on the 'sign in' link you see on the page once your password has been set\n\n### Expected Behavior\n\nWe should be redirected to the password-enabled sign in page here: https://www.nuget.org/users/account/LogOnNuGetAccount\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31266717750","Type":"PullRequestEvent","CreatedAt":"2023-08-21T19:38:46","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9630","RelatedDescription":"Merged pull request \"Small fix\" (#9630) at NuGet/NuGetGallery","RelatedBody":"Previously I have removed a margin that was not supposed to be removed (upper margin between the filters and the blue thing). It is now fixed.\r\n\r\n<img width=\"236\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/cf245860-3466-4483-b5b1-2d8bfc78c2f9\">\r\n"},{"Id":"31265574132","Type":"PullRequestEvent","CreatedAt":"2023-08-21T18:44:29","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9630","RelatedDescription":"Opened pull request \"Small fix\" (#9630) at NuGet/NuGetGallery","RelatedBody":"Previously I have removed a margin that was not supposed to be removed (upper margin between the filters and the blue thing). It is now fixed.\r\n\r\n<img width=\"236\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/cf245860-3466-4483-b5b1-2d8bfc78c2f9\">\r\n"},{"Id":"31242130856","Type":"IssuesEvent","CreatedAt":"2023-08-21T00:34:22","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9616","RelatedDescription":"Reopened issue \"[NuGet.org Bug]: It is very slow to load the package details page for packages with many versions\" (#9616) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIt takes seconds to load the package details page for packages with many versions.\n\n### Repro Steps\n\n1. Go to https://www.nuget.org/packages/AWSSDK.Core.\r\n2. It takes seconds to load this page.\n\n### Expected Behavior\n\nAs more and more package versions are published, loading all package versions may not be an ideal UI experience.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"31223490720","Type":"IssuesEvent","CreatedAt":"2023-08-18T22:33:05","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9629","RelatedDescription":"Opened issue \"[Search-by-TFM] Show target framework badges in package search results\" (#9629) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\n\r\nUsers can currently filter their package search results by a package's target frameworks, but can't verify this information without clicking through to a package's Package Details page. \r\n\r\nWe should show a package's target frameworks (TFMs) as badges in the search results so users can see this information right there. This would make the experience of finding compatible packages on nuget.org a lot easier/smoother.\r\n\r\n### Solution\r\n\r\nShow a package's target TFMs as badges in the search results.\r\n\r\n_Open Questions:_\r\n\r\n* Do we just show a package's target TFMs (TFMs explicitly targeted in the package metadata), or do we show computed compatible TFMs too?\r\n* For packages with many TFMs, we would need to truncate the list. How do we order the TFMs/choose which ones to show?"},{"Id":"31223418670","Type":"IssuesEvent","CreatedAt":"2023-08-18T22:26:24","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9628","RelatedDescription":"Opened issue \"[Search-by-TFM] Allow users to filter packages by supported platforms\" (#9628) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\n\r\nUsers can currently filter their package search results on nuget.org by a package's supported frameworks.\r\n\r\nUsers also want to be able to filter packages by their supported platforms (Windows, MacOS, Android, iOS, etc.). This will be a big help to client-heavy developers, allowing them to find packages to build out their desktop/mobile/web apps.\r\n\r\nThis is one of the top asks for new search filters based on our HaTS survey results.\r\n\r\n### Solution\r\n\r\nAdd support for filtering by a package's supported platforms to nuget.org search.\r\n\r\nConsider also showing supported platforms on the package details page.\r\n\r\n_NOTE (Blocker?):_ We should be able to derive this information from the package's supported frameworks, but there are questions over platform compatibility for packages that target multiple frameworks (Is the set of supported platforms for a package the union of all platforms supported by its target frameworks, the intersection of these platforms, or something in between?)"},{"Id":"31223286357","Type":"IssuesEvent","CreatedAt":"2023-08-18T22:16:40","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9627","RelatedDescription":"Opened issue \"[Search-by-TFM] Enable filtering by target frameworks in V3 search (VS IDE support)\" (#9627) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\n\r\nFiltering by frameworks is currently possible in nuget.org search (V2 search). We can extend support for framework filtering to VS IDE and other clients by adding it to our V3 API too.\r\n\r\n### Solution\r\n\r\nAdd support for framework filtering to V3 Search (SearchService)."},{"Id":"31221385107","Type":"PullRequestEvent","CreatedAt":"2023-08-18T20:06:41","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9625","RelatedDescription":"Merged pull request \"[Usability] Users can now jump quickly between individual search results\" (#9625) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9608\r\n\r\n**Problem:**\r\n\r\nUsers don't like the fact that they have to tab through everything in each search result to move down the list of search results. They want to be able to navigate between search results more easily.\r\n\r\n**Solution:**\r\n\r\nI placed the package IDs for each search result inside `<h2>` heading tags. With screen readers, you can navigate between headings using `H/shift+H`, and then continue sequential navigation through each search result using `tab/shift+tab`. Users will now be able to move between individual search results quicker.\r\n\r\nThere is no visible UI change here. The css changes are there to just keep the package headers looking the same as they did previously.\r\n\r\n**NOTE:** There was an old feature flight that was missing from the `flags.json` file (pointed out by @dannyjdev here: https://github.com/NuGet/NuGetGallery/pull/9537#discussion_r1270107406), so I've added that in with this change too."},{"Id":"31213014793","Type":"IssuesEvent","CreatedAt":"2023-08-18T13:27:01","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9626","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Create a new organization with the name RocketSoftware failed\" (#9626) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nOther\r\n\r\n### Describe the bug\r\n\r\nI would like to create an organization named 'RocketSoftware' but it failed with an error: The username 'RocketSoftware' is not available. It seems this name has already been used, but when I tried to visit https://www.nuget.org/profiles/RocketSoftware, the page is not found. \r\n\r\nAny suggestions? Thanks in advance.\r\n\r\n\r\n### Repro Steps\r\n\r\n1. Open https://www.nuget.org/account/Organizations\r\n2. Add new \r\n3. Fill in the Organization Name and Organization Email Address, and click Add \r\n4. Creating a new organization failed.\r\n\r\n\r\n### Expected Behavior\r\n\r\nCreate a new organization with the name 'RocketSoftware' successfully.\r\n\r\n### Screenshots\r\n\r\n<img width=\"341\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/3353385/28a89022-df41-4a61-9c0a-97fa76ba8436\">\r\n\r\n\r\n<img width=\"609\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/3353385/0fc06f83-2f41-45e7-ac29-3d22510c2349\">\r\n\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"31200696758","Type":"PullRequestEvent","CreatedAt":"2023-08-18T02:35:34","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9625","RelatedDescription":"Opened pull request \"[Usability] Users can now jump quickly between individual search results\" (#9625) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9608\r\n\r\n**Problem:**\r\n\r\nUsers don't like the fact that they have to tab through everything in each search result to move down the list of search results. They want to be able to navigate between search results more easily.\r\n\r\n**Solution:**\r\n\r\nI placed the package IDs for each search result inside `<h2>` heading tags. With screen readers, you can navigate between headings using `H/shift+H`, and then continue sequential navigation through each search result using `tab/shift+tab`. Users will now be able to move between individual search results quicker.\r\n\r\nThere is no visible UI change here. The css changes are there to just keep the package headers looking the same as they did previously.\r\n\r\n**NOTE:** There was an old feature flight that was missing from the `flags.json` file (pointed out by @dannyjdev here: https://github.com/NuGet/NuGetGallery/pull/9537#discussion_r1270107406), so I've added that in with this change too."},{"Id":"31197636027","Type":"PullRequestEvent","CreatedAt":"2023-08-17T22:16:45","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9624","RelatedDescription":"Merged pull request \"Fix url frameworks tab\" (#9624) at NuGet/NuGetGallery","RelatedBody":"Opening new tabs by right-clicking on buttons didn't work.\r\n\r\nButtons in question: \r\n<img width=\"452\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/2a561aa1-3eed-4582-a4bc-88728f408dad\">\r\n<img width=\"442\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/f3307c8a-153a-4cca-81ca-667c2dc039cb\">\r\n\r\n\r\nIt now works.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9283"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"31271970128","Type":"IssuesEvent","CreatedAt":"2023-08-22T01:16:32","Actor":"arellegue","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12833","RelatedDescription":"Opened issue \"nuget pack myproject.nuspec -Symbols -properties Configuration=Release does not replace $Configuration$ in the nuspec file when creating the symbols file\" (#12833) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nnuget.exe latest\n\n### Worked before?\n\ndon't know\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nnuget pack myproject.nuspec -Symbols -properties Configuration=Release\r\n\r\nResults in Error NU5018: Invalid assembly reference ....\r\n\r\nHowever, when $Configuration$ is replaced inside myproject.nuspec with $config$ then using the command below:\r\n\r\nnuget pack myproject.nuspec -Symbols -properties config=Release\r\n\r\n...it works.  \r\n\r\nWhy is nuget.exe not replacing $Configuration$ when -Symbols is used?\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31269967217","Type":"IssuesEvent","CreatedAt":"2023-08-21T22:34:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12826","RelatedDescription":"Closed issue \"Remove IReconnectingNuGetSearchService interface as it's redundant\" (#12826) at NuGet/Home","RelatedBody":""},{"Id":"31269828258","Type":"IssuesEvent","CreatedAt":"2023-08-21T22:24:39","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12832","RelatedDescription":"Opened issue \"Enable Automatic Package Source Mapping for `Packages.config` style projects\" (#12832) at NuGet/Home","RelatedBody":"Enable more projects for the feature introduced in https://github.com/NuGet/NuGet.Client/pull/5355"},{"Id":"31267756195","Type":"IssuesEvent","CreatedAt":"2023-08-21T20:28:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12818","RelatedDescription":"Closed issue \"Nuget Version string is translated when called from the command line on some locales\" (#12818) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.6.1.2\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nhttps://github.com/leezer3/OpenBVE/issues/929\r\n\r\nI have a command-line script (makefile, but that's not really important here) which is used to build on non-windows platforms.\r\nIn order to do this, we need a minimum nuget version.\r\n\r\nSo-far, so good.\r\nThe Microsoft documentation suggests that the correct way to do this is to run the **nuget help** command, and to appropriately parse the output.\r\nhttps://learn.microsoft.com/en-us/nuget/resources/nuget-faq#how-do-i-get-the-latest-version-of-nuget-command-line-tool-\r\n```\r\nHow do I get the latest version of NuGet command line tool?\r\n\r\nSee the [Install guide](https://learn.microsoft.com/en-us/nuget/install-nuget-client-tools). To check the current installed version of the tool, use nuget help.\r\n```\r\n\r\nOn Debian **en_US.UTF-8** this produces the following version string output (trimmed to remove the help text):\r\n```\r\nNuGet Version: 6.3.1.1\r\n```\r\n\r\nSimilarly, on Debian **de_DE.UTF-8** this produces the following:\r\n```\r\nNuGet Version: 6.3.1.1\r\n```\r\n\r\nHowever, on a Korean locale Mac, the string version is translated:\r\n```\r\nNuGet 버전: 6.6.1.2\r\n```\r\n\r\n---\r\n\r\nEssentially, what I'd suggest is *not* translating the string _Version_ in any case. This would provide a consistant way to get the version string, but I'm also not entirely clear why it's not being translated in the German case, seeing as most of the other command-line output is.\r\nA 'better' solution to the problem would be something like the following:\r\n`nuget version` to return simply the version number, but I don't know why the original design choice was made.\n\n### Verbose Logs\n\n_No response_"},{"Id":"31267595083","Type":"IssuesEvent","CreatedAt":"2023-08-21T20:20:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12822","RelatedDescription":"Closed issue \"Visual Studio should show updates for `MSBuildSdk` package types\" (#12822) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nMSBuild projects may reference a SDK from NuGet. It would be good if the VS Package Management UI would show available updates for those SDK packages.\n\n### Additional Context and Details\n\nThe SDK package reference might either be directly in the project node (e.g. `<Project Sdk=\"Something.Sdk/1.2.3\">`) or as a separate SDK line (e.g. `<Sdk Name=\"Something.Sdk\" Version=\"1.2.3\" />`).\r\n\r\nExample use case:\r\n\r\n1. Create a new solution with a \"Standalone TypeScript Angular Project\" project.\r\n2. Open the `.esproj` file. Notice that it references a SDK with a specific version number on NuGet.\r\n3. Open the [package page](https://www.nuget.org/packages/Microsoft.VisualStudio.JavaScript.SDK) on nuget.org and notice that a newer version is available.\r\n4. Try to open the VS Package Management UI for the project or solution. Note that this is not possible. The \"Manage NuGet packages\" entry is disabled.\r\n5. Add a .NET project to the solution.\r\n6. Now the solution level \"Manage NuGet packages\" entry is available, but it doesn't show updates for the SDK.\r\n\r\n`.esproj` files might be a special case, but as far as I can tell this also doesn't work with `.csproj` files."},{"Id":"31267547868","Type":"IssuesEvent","CreatedAt":"2023-08-21T20:18:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12823","RelatedDescription":"Closed issue \"[Bug Bash] The vulnerability InfoBar of the second project will not show after closing the one for the first project\" (#12823) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.8.0.68\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. Create a C# Console App (.Net Core) **-- .NET 8.0** project (the first project). \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI.   \r\n3. Install a vulnerable package version (e.g. Newtonsoft.json 12.0.1) into this project and restore the solution. \r\n4. Close the vulnerability InfoBar on top of the Solution Explorer window. \r\n5. **Don’t close VS** and click the menu “File->New->Project” to create a C# Class Library (.Net Core) **-- .NET 8.0** project (the second project). \r\n6. Install a vulnerable package version (e.g. Newtonsoft.json 12.0.3) into this project and restore the solution. \r\n#### Expected:\r\nThe vulnerability InfoBar of the second project should show after closing the one for the first project. \r\n![image](https://github.com/NuGet/Home/assets/40230425/7728e7f5-a6dc-4d9f-89f1-127d4a68882b)\r\n#### Actual: \r\nThe vulnerability InfoBar of the second project will not show after closing the one for the first project.\r\n![image](https://github.com/NuGet/Home/assets/40230425/bb8772ce-964f-4e58-b071-d3905e82537c)\r\n#### Note:\r\n1. The issue doesn’t repro if creates the second project after closing VS in step5.\r\n2. It’s not a regression since this is a new feature.\r\n\r\n \n\n### Verbose Logs\n\n_No response_"},{"Id":"31265678032","Type":"IssuesEvent","CreatedAt":"2023-08-21T18:49:25","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12831","RelatedDescription":"Opened issue \"Support multi-select sources in PM UI's Package Source dropdown\" (#12831) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nCurrently, customers can select `All` or a single package source in the dropdown.\n\n### Desired Behavior\n\nConsider supporting arbitrary selections of package sources, instead of the current single-select affordance.\n\n### Additional Context\n\nPackage Source Mapping may benefit from such capability."},{"Id":"31265566960","Type":"IssuesEvent","CreatedAt":"2023-08-21T18:44:09","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12830","RelatedDescription":"Opened issue \"Consider revising status to \"Requires a source mapping or select a single source\"\" (#12830) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nIn the Details Pane of PM UI, there's a scenario where selecting \"All\" source does not automatically create a package source mapping. The status string becomes \"Requires a package source mapping.\" \n\n### Desired Behavior\n\nConsider having this message also call out that a single source will enable automatic mapping.\r\n\r\nConsiderations\r\n1. We may be able to support All source, then this status is not relevant\r\n2. A docs link may be able to call out that All source isn't supported. https://github.com/NuGet/Home/issues/12829\n\n### Additional Context\n\n_No response_"},{"Id":"31265562765","Type":"IssuesEvent","CreatedAt":"2023-08-21T18:43:57","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12829","RelatedDescription":"Opened issue \"Consider a docs link in the Details Pane to explain Package Source Mapping\" (#12829) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nThere's no direct docs link in the details pane for package source mapping.\n\n### Desired Behavior\n\nThe package source mapping status in the Details Pane provides a configure link to the Options dialog, which has F1 Help capability. The F1 Help of PM UI leads to a higher-level docs page. Consider a direct docs link to the page describing package source mapping behavior.\n\n### Additional Context\n\n_No response_"},{"Id":"31264997929","Type":"IssuesEvent","CreatedAt":"2023-08-21T18:17:56","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12809","RelatedDescription":"Closed issue \"nuget.org package source missing from Visual Studio\" (#12809) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\nVisual Studio 2022\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nHi,\r\n\r\n\r\nI am from the MSIX/App Streaming team, and we have built a plugin for Visual Studio.\r\n\r\n\r\nDuring testing – we have come across this weird issue that nuget package source has been missing sometimes from Visual Studio. I setup a fresh Visual Studio 2022 community and faced this issue. Someone else also reported the same.\r\n\r\nI was able to fix it by manually adding nuget package source but I am not sure if everyone will do that.\r\n\r\n\r\nI also came across a stackoverflow thread where developers have reported the same issue. [c# - NuGet package sources missing - Stack Overflow](https://stackoverflow.com/questions/69045231/nuget-package-sources-missing)\r\n\r\nIs this the expected behaviour? If not, can someone please look into this?\n\n### Verbose Logs\n\n_No response_"},{"Id":"31262783652","Type":"IssuesEvent","CreatedAt":"2023-08-21T16:39:14","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12828","RelatedDescription":"Closed issue \"Dependencies listed inaccurately\" (#12828) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio Version 17.7.1, NPM 6.7.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWe recently decided to update several Azure packages and this migration has caused us issues on previous attempts and we ended up rolling back.  \r\n\r\nUpon updating these packages we noticed runtime errors such as \r\n\"Could not load file or assembly 'System.Memory, Version=4.0.1.1\"\r\n\r\nAs part of the migration all of our projects had been updated to 4.5.5, so something still had a dependency on 4.5.4.  \r\n\r\nIt appears as though the culprits are \r\nAzure.Identity 1.9.0\r\nAzure.Security.KeyVault.Secrets 4.5.0 \r\n\r\nHowever on both the nuget website and the NPM UI in visual studio the dependencies are listed as \"System.Memory (>= 4.5.4)\".  It appears as though this should actually be == or <= 4.5.4 and not >=.  \r\n\r\nI encountered a similar issue with two google packages:\r\nGoogle.Api.Gax.Grpc 4.4.0 says it has a dependency on \"Google.Apis.Auth (>= 1.60.0 && < 2.0.0) but again due to runtime errors I had to drop Google.Apis.Auth back down to 1.60.0 to resolve the errors.  So it seems like this should be == 1.60.0 or <= 1.60.0.  \r\n \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31262418287","Type":"IssuesEvent","CreatedAt":"2023-08-21T16:23:46","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12788","RelatedDescription":"Closed issue \"Opt-out of \"HTTPS everywhere\" : do not warn for HTTP sources in packages.config restore scenarios in all NuGet tools when allowInsecureConnections is set to true\" (#12788) at NuGet/Home","RelatedBody":"When `allowInsecureConnections ` property in packageSources section is set to true in NuGet.Config files,  suppress warnings for HTTP sources in packages.config restore scenarios(including install and update) in all NuGet tools.\r\n\r\nThe PRs enable the HTTP warnings in this scenario are: \r\nhttps://github.com/NuGet/NuGet.Client/pull/4583\r\nhttps://github.com/NuGet/NuGet.Client/pull/4633"},{"Id":"31259466631","Type":"IssuesEvent","CreatedAt":"2023-08-21T14:37:23","Actor":"mpmarven","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12828","RelatedDescription":"Opened issue \"Dependencies listed inaccurately\" (#12828) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVisual Studio Version 17.7.1, NPM 6.7.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWe recently decided to update several Azure packages and this migration has caused us issues on previous attempts and we ended up rolling back.  \r\n\r\nUpon updating these packages we noticed runtime errors such as \r\n\"Could not load file or assembly 'System.Memory, Version=4.0.1.1\"\r\n\r\nAs part of the migration all of our projects had been updated to 4.5.5, so something still had a dependency on 4.5.4.  \r\n\r\nIt appears as though the culprits are \r\nAzure.Identity 1.9.0\r\nAzure.Security.KeyVault.Secrets 4.5.0 \r\n\r\nHowever on both the nuget website and the NPM UI in visual studio the dependencies are listed as \"System.Memory (>= 4.5.4)\".  It appears as though this should actually be == or <= 4.5.4 and not >=.  \r\n\r\nI encountered a similar issue with two google packages:\r\nGoogle.Api.Gax.Grpc 4.4.0 says it has a dependency on \"Google.Apis.Auth (>= 1.60.0 && < 2.0.0) but again due to runtime errors I had to drop Google.Apis.Auth back down to 1.60.0 to resolve the errors.  So it seems like this should be == 1.60.0 or <= 1.60.0.  \r\n \r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-22T03:30:20.8685025Z","RunDurationInMilliseconds":993}