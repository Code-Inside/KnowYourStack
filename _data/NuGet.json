{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13391898961","Type":"PullRequestEvent","CreatedAt":"2020-09-02T23:47:49","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8180","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.09.02]RI dev to master\" (#8180) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13390319670","Type":"PullRequestEvent","CreatedAt":"2020-09-02T20:21:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8178","RelatedDescription":"Merged pull request \"Add feature flags to all OData endpoints\" (#8178) at NuGet/NuGetGallery","RelatedBody":"This allows us to individually disable non-hijacked endpoints. These feature flags are enabled by default, which is not following the existing pattern but is desirable in this case. We're turning OFF a feature, not ON which is what feature flags have been used for thus far.  It's easy to achieve this with our framework.\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/2902."},{"Id":"13388652520","Type":"IssuesEvent","CreatedAt":"2020-09-02T17:41:24","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4124","RelatedDescription":"Closed issue \"Improve search relevance on NuGet.org\" (#4124) at NuGet/NuGetGallery","RelatedBody":"1. Search for Microsoft Bot Connector vs. Microsoft Bot Connector - obvious that search is broken here.\r\nReference: https://twitter.com/adpedley/status/874460132725235712\r\n2. https://github.com/NuGet/NuGetGallery/issues/2789: Support partial search terms in search: E.g. \"Microsoft.Bot.Con\". Search has no results:\r\n![image](https://user-images.githubusercontent.com/14800916/27108912-a6b6b0be-5054-11e7-9111-0771a7f40608.png)\r\n3. https://github.com/NuGet/NuGetGallery/issues/782: Provide gestures for search filters\r\n4. Enable auto complete in the search box.\r\n"},{"Id":"13377201866","Type":"PullRequestEvent","CreatedAt":"2020-09-01T20:30:39","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8179","RelatedDescription":"Opened pull request \"[SAS Token] CloudBlobClientWrapper update to support SAS Tokens.\" (#8179) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13393450103","Type":"IssuesEvent","CreatedAt":"2020-09-03T04:16:11","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9875","RelatedDescription":"Closed issue \"Format the NuGet props/targets to make it legible\" (#9875) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nMost of the time when looking to new feature the build process provides, we'll look into props/targets on how to use them apart from looking at the docs (when no such info is provided).\r\n\r\nEven for devs like me starting their contributions on dotnet repos such as this, having a legible source makes all the difference. But as many pointed out, this does affect `git blame`.\r\n\r\nBut instead of one way or other, I propose to have minimal set of changes applied one time to make those files more legible and even diff friendly. This way, `git blame` is preserved to an extent and the files are now at least friendly to the eyes."},{"Id":"13392212046","Type":"IssuesEvent","CreatedAt":"2020-09-03T00:41:56","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9974","RelatedDescription":"Closed issue \"Use https for placeholder text when adding new package source through Visual Studio GUI\" (#9974) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0\r\n\r\nVS version (if appropriate): 16.4.4\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10\r\n\r\nWorked before? If so, with which NuGet version: n/a\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nWhen adding a new package source through the VS UI - placeholder text is provided. This text uses http however, whereas most prominent feeds now use https. Propose changing this to https, to minimise the overtyping required.\r\n\r\n![image](https://user-images.githubusercontent.com/4837132/91876596-c5f8cd80-ec74-11ea-8d20-57f9ea4e2259.png)\r\n\r\n\r\n"},{"Id":"13392003277","Type":"IssuesEvent","CreatedAt":"2020-09-03T00:05:30","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9554","RelatedDescription":"Closed issue \"Update Operation remoted in VS.Oe\" (#9554) at NuGet/Home","RelatedBody":""},{"Id":"13391382906","Type":"IssuesEvent","CreatedAt":"2020-09-02T22:26:07","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9981","RelatedDescription":"Opened issue \"Remove temporary fix on HttpRequestMessage.Options\" (#9981) at NuGet/Home","RelatedBody":"`HttpRequestMessage.Properties` is [marked as obsolete](https://github.com/dotnet/runtime/blob/release/5.0-rc2/src/libraries/System.Net.Http/src/System/Net/Http/HttpRequestMessage.cs#L130) , and a new property `HttpRequestMessage.Options` is suggested to be used, to replace it since .NET5 SDK rc-1.\r\nAnd PR https://github.com/NuGet/NuGet.Client/pull/3619/files fixed this issue.\r\n\r\nBut we're building our code with .NET5 SDK preview7 (https://github.com/NuGet/NuGet.Client/blob/dev/build/config.props#L41), so the HttpRequestMessage.Options is not yet available. \r\nSo we temporarily fix the compiling errors by changing `NET_5` to a nonsexist  `NET5_0_REMOVE_TEMP_FIX` in the 5 places where the above PR changed to use `HttpRequestMessage.Options`.\r\n\r\nWhen we're moving to .NET5 SDK rc-1 or newer version, we should change the five `NET5_0_REMOVE_TEMP_FIX` back to `NET_5`.\r\nOr else, there will be compiling warning/error on using obsolete property `HttpRequestMessage.Properties`."},{"Id":"13391221091","Type":"IssuesEvent","CreatedAt":"2020-09-02T22:04:09","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9976","RelatedDescription":"Closed issue \"Error messages about targeting runtime 'win7-x64' are littering Visual Studio error list\" (#9976) at NuGet/Home","RelatedBody":"When I open NuGet.sln in Visual Studio, error list is littered with error messages \n\n```\nProject is targeting runtime 'win7-x64' but did not resolve any runtime-specific packages for the 'Microsoft.NETCore.App' package.  This runtime may not be supported by .NET Core.\n```\n\nThere is one for each test project (21 in total). "},{"Id":"13390983476","Type":"IssuesEvent","CreatedAt":"2020-09-02T21:34:16","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9978","RelatedDescription":"Closed issue \"PM UI:  null reference exception after selecting package\" (#9978) at NuGet/Home","RelatedBody":"In the dev-feature-OE.PMUI feature branch selecting a package causes a `NullReferenceException` [here](https://github.com/NuGet/NuGet.Client/blob/3a45400220e0d600a6d5f13968e773d35b817c3f/src/NuGet.Clients/NuGet.PackageManagement.UI/Models/PackageDetailControlModel.cs#L200).  Both `SelectedVersion` and `InstalledVersion` are initially `null`."},{"Id":"13390981518","Type":"IssuesEvent","CreatedAt":"2020-09-02T21:34:02","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9980","RelatedDescription":"Closed issue \"PM UI:  uninstall package broken\" (#9980) at NuGet/Home","RelatedBody":""},{"Id":"13390006784","Type":"IssuesEvent","CreatedAt":"2020-09-02T19:49:49","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9934","RelatedDescription":"Closed issue \"Error messages HelpLink needs to be updated\" (#9934) at NuGet/Home","RelatedBody":"Currently, it's:\r\n\r\n```csharp\r\ninternal const string HelpLink = \"https://msdn.microsoft.com/query/dev15.query?appId=Dev15IDEF1&l={0}&k=k({1})&rd=true\";\r\n```\r\n\r\nThis needs to be updated to either dev16, which is a later version, to be more future proof in case the old url was deprecated. Or update to docs.microsoft directly. (The choice between the two is currently being discussed in my PR)"},{"Id":"13389970503","Type":"IssuesEvent","CreatedAt":"2020-09-02T19:46:07","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9786","RelatedDescription":"Closed issue \"Packing with ContinuePackingAfterGeneratingNuspec=false should not fail when there are no errors\" (#9786) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/sdk#12292**\r\n- Please respond to @aggieben.\r\n\r\n---\r\n\r\n_From @aggieben on Tuesday, June 30, 2020 7:41:03 PM_\r\n\r\nUsing the 5.0.0-preview.5.20279.10 SDK on Windows 10, the tooling fails to pack a nupkg for the project located here: https://github.com/aggieben/ConstrainedTypes (`master` branch).\r\n\r\nI used the following command:\r\n`dotnet pack -o pkg ConstrainedTypes.fsproj -v diag`.  The error message reported is:\r\n```\r\n\"C:\\Users\\Ben\\proj\\oss\\constrainedtypes\\src\\ConstrainedTypes\\ConstrainedTypes.fsproj\" (pack target) (1:7) ->\r\n                   (GenerateNuspec target) ->\r\n                     C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20279.10\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error MSB4181: The \"PackTask\" task returned false but did not log an error. [C:\\Users\\Ben\\proj\\oss\\constrainedtypes\\src\\ConstrainedTypes\\ConstrainedTypes.fsproj]\r\n```\r\n\r\nThe exact same command works just fine with SDK version 3.1.300."},{"Id":"13389504155","Type":"IssuesEvent","CreatedAt":"2020-09-02T18:59:30","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/6935","RelatedDescription":"Reopened issue \"`dotnet add package` won't use credentials from global config for a source specified in local config\" (#6935) at NuGet/Home","RelatedBody":"_From @evil-shrike on May 15, 2018 11:40_\n\n## Steps to reproduce\r\nGiven an internal Artifactory server with several repositories, all of them require authentication.\r\n\r\n`dotnet add package Microsoft.AspNetCore.All` work for an arbitrary new project. That means that all cached credentials in \"C:\\Users\\UserName\\AppData\\Roaming\\NuGet\\NuGet.Config\" are fine.\r\n\r\nThat global NuGet.Config contains several sources:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageRestore>\r\n    <add key=\"enabled\" value=\"True\" />\r\n    <add key=\"automatic\" value=\"True\" />\r\n  </packageRestore>\r\n  <packageSources>\r\n    <add key=\"rnd-virtual-dev\" value=\"https://company.org/api/nuget/nuget-virtual-dev\" />\r\n    <add key=\"rnd-virtual\" value=\"https://company.org/api/nuget/nuget-virtual\" />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n  <activePackageSource>\r\n    <add key=\"rnd-virtual\" value=\"https://company.org/api/nuget/nuget-virtual\" />\r\n  </activePackageSource>\r\n  <bindingRedirects>\r\n    <add key=\"skip\" value=\"False\" />\r\n  </bindingRedirects>\r\n  <packageManagement>\r\n    <add key=\"format\" value=\"0\" />\r\n    <add key=\"disabled\" value=\"True\" />\r\n  </packageManagement>\r\n  <packageSourceCredentials>\r\n    <rnd-virtual-dev>\r\n      <add key=\"Username\" value=\"username\" />\r\n      <add key=\"Password\" value=\"AQA...\" />\r\n    </rnd-virtual-dev>\r\n    <rnd-virtual>\r\n      <add key=\"Username\" value=\"username\" />\r\n      <add key=\"Password\" value=\"AQA...\" />\r\n    </rnd-virtual>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```\r\n\r\nNow I'm adding a local NuGet.Config besides my csproj and try the same install: `dotnet add package Microsoft.AspNetCore.All`\r\n\r\nIt fails with 401 Unauthorized!\r\n\r\nThe local `nuget.config` contains one of the source from global config:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n\t<packageSources>\r\n\t\t<add key=\"Dev\" value=\"https://company.org/api/nuget/nuget-virtual\" />\r\n\t</packageSources>\r\n</configuration>\r\n```\r\n\r\nIf I run nuget.exe (4.6.2.5055) directly it works fine (that is it uses credentials from global config).\r\n\r\n\r\n## Expected  behavior\r\nCredentials are being used. \r\n\r\n## Actual behavior\r\nInstallation fails:\r\n\r\n```\r\nD:\\Work\\temp\\testapp\\Server>dotnet add package Microsoft.AspNetCore.All\r\n  Writing C:\\Users\\UserName\\AppData\\Local\\Temp\\tmp2C0.tmp\r\ninfo : Adding PackageReference for package 'Microsoft.AspNetCore.All' into project 'D:\\Work\\temp\\testapp\\Server\\Server.csproj'.\r\nlog  : Restoring packages for D:\\Work\\temp\\testapp\\Server\\Server.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.all/index.json\r\ninfo :   GET https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0\r\ninfo :   GET https://company.org/api/nuget/nuget-virtual-dev/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0\r\ninfo :   CACHE https://company.org/api/nuget/rnd-nuget/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0\r\ninfo :   Unauthorized https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0 100ms\r\nlog  : Retrying 'FindPackagesByIdAsyncCore' for source 'https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0'.\r\nlog  : Response status code does not indicate success: 401 (Unauthorized).\r\ninfo :   GET https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0\r\ninfo :   Unauthorized https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0 3ms\r\nlog  : Retrying 'FindPackagesByIdAsyncCore' for source 'https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0'.\r\nlog  : Response status code does not indicate success: 401 (Unauthorized).\r\ninfo :   GET https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0\r\ninfo :   Unauthorized https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0 3ms\r\nerror: Failed to retrieve information about 'Microsoft.AspNetCore.All' from remote source 'https://company.org/api/nuget/nuget-virtual/FindPackagesById()?id='Microsoft.AspNetCore.All'&semVerLevel=2.0.0'.\r\nerror:   Response status code does not indicate success: 401 (Unauthorized).\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (2.1.200)\r\n\r\nProduct Information:\r\n Version:            2.1.200\r\n Commit SHA-1 hash:  2edba8d7f1\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.200\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n```\r\n\r\nPS: I double checked that the sources in local config and in global one are the same.\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#9281_"},{"Id":"13389276266","Type":"IssuesEvent","CreatedAt":"2020-09-02T18:37:09","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9980","RelatedDescription":"Opened issue \"PM UI:  uninstall package broken\" (#9980) at NuGet/Home","RelatedBody":""},{"Id":"13389187618","Type":"IssuesEvent","CreatedAt":"2020-09-02T18:28:42","Actor":"tgriff","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9979","RelatedDescription":"Opened issue \"Nuget Restore fails when it encounters a non-standard project\" (#9979) at NuGet/Home","RelatedBody":"My team has several Azure DevOps build pipelines to build different projects/products from a single solution. Almost all these pipelines have a Nuget Restore task to restore all packages for the solution that runs before the MSBuild task that builds a specific set of projects. Our solution mostly contains C# projects (class libraries, ASP.NET Web apps, etc.) but it also has a couple \"non-standard\" projects, like a WiX installer project. Except for the non-standard projects, all projects use PackageReference for Nuget packages. Note that the WiX project has a packages.config file that just specifies the WiX package.\r\n\r\nThe pipeline is using a Microsoft-internal hosted agent pool.\r\n\r\nFor a while, our pipelines were using an older version of Nuget (3.0.0), but then we needed to move to a newer version of Nuget. However, once we did this our Nuget Restore task started failing.\r\n\r\nWe contacted the support for the hosted agent pool and together we were able to determine that:\r\n\r\n1. Nuget Restore throws an exception when it encounters a non-standard project type (like .wixproj). This causes the entire restore operation, for the entire solution, to fail.\r\n\r\n2. This only starts happening with Nuget 4.8.2. This doesn't happen with Nuget 4.7.3.\r\n\r\nWe can manage for now with Nuget 4.7.3, but if we need to move to a newer version in the future, we will be unable to until this gets resolved.\r\n\r\nHere's the exception (and a related warning) we're seeing during the nuget restore task when using Nuget 4.8.2+:\r\n```\r\nNuGet.CommandLine.ExitCodeException: Exception of type 'NuGet.CommandLine.ExitCodeException' was thrown. \r\nat NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext() \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\nat NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext() \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \r\nat NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext() \r\nWARNING: Error reading msbuild project information, ensure that your input solution or project file is valid. NETCore and UAP projects will be skipped, only packages.config files will be restored. \r\n```"},{"Id":"13387994496","Type":"IssuesEvent","CreatedAt":"2020-09-02T16:44:48","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9978","RelatedDescription":"Opened issue \"PM UI:  null reference exceptions after selecting package\" (#9978) at NuGet/Home","RelatedBody":"In the dev-feature-OE.PMUI feature branch selecting a package causes a `NullReferenceException` [here](https://github.com/NuGet/NuGet.Client/blob/3a45400220e0d600a6d5f13968e773d35b817c3f/src/NuGet.Clients/NuGet.PackageManagement.UI/Models/PackageDetailControlModel.cs#L200).  Both `SelectedVersion` and `InstalledVersion` are initially `null`."},{"Id":"13380055204","Type":"IssuesEvent","CreatedAt":"2020-09-02T03:44:40","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9977","RelatedDescription":"Opened issue \"NuGet.Client should replace using of ManagedImageMonikers with KnownMonikers\" (#9977) at NuGet/Home","RelatedBody":"NuGet.VisualStudio.Implementation uses 3 icons from ManagedImageMonikers:\r\n\r\nManagedImageMonikers.ReferencePrivate -> KnownMonikers.ReferencePrivate\r\nManagedImageMonikers.Application -> KnownMonikers.Application\r\n[Blocked] ManagedImageMonikers.NuGetGrey -> KnownMonikers.PackageReferencePrivate\r\n\r\nThese monikers should be replaced with KnownMonikers equivalents to make sure that they pick up the icon refresh.\r\n\r\nThe first two icons can be found in Microsoft.VisualStudio.ImageCatalog, 16.8.30431.43-pre. The latter is being worked on and will be available soon.\r\n\r\nThese APIs will be deleted from dll: https://github.com/dotnet/project-system/pull/6570."},{"Id":"13378758850","Type":"IssuesEvent","CreatedAt":"2020-09-01T23:56:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9969","RelatedDescription":"Closed issue \"Add support for msbuild restore + static graph restore in the perf scripts\" (#9969) at NuGet/Home","RelatedBody":""},{"Id":"13378258533","Type":"IssuesEvent","CreatedAt":"2020-09-01T22:34:51","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9910","RelatedDescription":"Closed issue \"[Bug Bash][Test Failure] Warning icons show on the installed packages in Console App (.NET Core 5.0) project\" (#9910) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6776\r\nVS Version: Master\\30413.119\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Create a C# Console App (.NET Core) project in VS.\r\n2. Open the project PM UI and the Solution Explorer window.\r\n3. Install several packages from PM UI into the project.\r\n4. Check the “Dependencies->Packages” node in the Solution Explorer window.\r\n## Expected\r\nNo warning icons show on the installed package.\r\n## Actual\r\nWarning icons show on the installed packages in Console App (.NET Core 5.0) project but there is no warning in Error List window as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/90264971-81072580-de84-11ea-9e37-d2a64a649a1b.png)\r\n## Notes\r\n1. It repro on ASP Web Application (.NET Core 5.0), but not repro on Class Library (.NET Standard 2.1) project.\r\n2. It didn’t repro when creating the .NET Core 5.0 project (so it is not the bug 1165638), repro after installing packages.\r\n3. It didn’t repro on VS Master\\30411.167 + NuGet Client Dev\\5.8.0.6776, but repro on Master\\30413.119 with implicit NuGet Client Dev\\5.8.0.6776.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-09-03T05:30:39.0240167Z","RunDurationInMilliseconds":2513}