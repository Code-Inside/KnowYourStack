{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13820616178","Type":"PullRequestEvent","CreatedAt":"2020-10-13T00:01:57","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8259","RelatedDescription":"Opened pull request \"[A11y] Improve color contrast of grey buttons\" (#8259) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8192\r\n\r\nExample:\r\n![image](https://user-images.githubusercontent.com/737941/95800326-dfe1f300-0cab-11eb-8e3d-265f8d81a241.png)\r\n\r\nHovering over the button darkens it:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/95800561-83cb9e80-0cac-11eb-8f38-10ff56246ce1.png)\r\n\r\nNote: this change also affects external login buttons. The new style is closer to Microsoft's [guidelines](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-add-branding-in-azure-ad-apps#visual-guidance-for-sign-in) but does not follow them completely. I've opened https://github.com/NuGet/NuGetGallery/issues/8258 to track this issue.\r\n\r\n![image](https://user-images.githubusercontent.com/737941/95800471-48c96b00-0cac-11eb-8bc5-a54e29189069.png)\r\n"},{"Id":"13820596749","Type":"IssuesEvent","CreatedAt":"2020-10-12T23:58:54","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8258","RelatedDescription":"Opened issue \"External login buttons should meet branding guidelines\" (#8258) at NuGet/NuGetGallery","RelatedBody":"Our external login buttons use the default \"grey\" button style, which does not match branding guidelines.\r\n\r\nMicrosoft Account and Azure Active Directory branding guidelines can be found here: https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-add-branding-in-azure-ad-apps#visual-guidance-for-sign-in"},{"Id":"13820279967","Type":"PullRequestEvent","CreatedAt":"2020-10-12T23:09:26","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8257","RelatedDescription":"Merged pull request \"Merge branch 'master' into dev\" (#8257) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13820268468","Type":"PullRequestEvent","CreatedAt":"2020-10-12T23:07:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8257","RelatedDescription":"Opened pull request \"Merge branch 'master' into dev\" (#8257) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13819772233","Type":"PullRequestEvent","CreatedAt":"2020-10-12T22:00:32","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8256","RelatedDescription":"Merged pull request \"[Cookie Compliance] Stabilize the pipeline\" (#8256) at NuGet/NuGetGallery","RelatedBody":"Just a Revert, nothing needs to be changed in this PR.\r\nWill send another PR to expire GA's cookie."},{"Id":"13803055763","Type":"PullRequestEvent","CreatedAt":"2020-10-11T00:24:56","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8256","RelatedDescription":"Opened pull request \"[Cookie Compliance] Stabilize the pipeline\" (#8256) at NuGet/NuGetGallery","RelatedBody":"Just a revert. Nothing needs to be changed here."},{"Id":"13803049534","Type":"PullRequestEvent","CreatedAt":"2020-10-11T00:22:18","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8156","RelatedDescription":"Merged pull request \"Display markdown licence files as HTML\" (#8156) at NuGet/NuGetGallery","RelatedBody":"(Third time lucky, sorry about the previous 2 pull requests!) \r\n\r\nThis adds support for displaying licence MD files as HTML. It works in the preview, when you first upload your package:\r\n\r\n![image](https://user-images.githubusercontent.com/2829865/90096815-ca1d8380-dd77-11ea-9851-4a0c8e0416fc.png)\r\n\r\n\r\nand it displays the HTML on the licence page:\r\n\r\n![image](https://user-images.githubusercontent.com/2829865/90096941-1ff22b80-dd78-11ea-8363-5ba4a16b224d.png)\r\n\r\n\r\n\r\nA few notes:\r\n\r\n- I have refactored the `ReadmeService.GetReadMeHtml()` method into it's own service, named MarkdownService. I did this in one commit so that's it's a bit more obvious what's going on. \r\n\r\n- The CommonMark library has a weird bug that if a string begins with a BOM, it doesn't convert the first line properly. As a result I stripped it out and then it works ok. I've added a test for this. (It looks like the version of CommonMark used is old, and the package is also no longer supported, but that's another matter)\r\n\r\n- A few of the unit tests eg `PackageControllerFacts.TheDisplayPackageMethod.WhenHasReadMeAndMarkdownExists_ReturnsContent` test that the markdown -> html is working properly, but that's arguably not the concern of the PackageControllerFacts and are tested anyway, inside the MarkdownServiceFacts. However, in the interests of keeping things working I've changed the `PackageControllerFacts` to inject an instantiated `MarkdownService` instead of a Mock. However if someone wiser than me wishes to change it to test against a mock and not test for the MD -> HTML logic then that seems to make sense to me, but it depends on how pure we want the unit tests to be. \r\n\r\nAddresses #7975"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13820061058","Type":"IssuesEvent","CreatedAt":"2020-10-12T22:38:43","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5103","RelatedDescription":"Closed issue \"Package should include private lib assets from package ref\" (#5103) at NuGet/Home","RelatedBody":"When building a NuGetizer package, if the project has PackageReferences with PrivateAssets=lib, then those references are copied to the output directory. However, they are not included in the the package.\r\n\r\nThis is important, for example, for msbuild tasks that depend on other assemblies and need them to be bundled alongside the tasks assembly.\r\n\r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#controlling-dependency-assets"},{"Id":"13816463076","Type":"IssuesEvent","CreatedAt":"2020-10-12T16:03:35","Actor":"ite-klass","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10119","RelatedDescription":"Opened issue \"(MSBuild) Restore does not respect IntermediateOutputPath\" (#10119) at NuGet/Home","RelatedBody":"When a csproj has the `IntermediateOutputPath` property set (so that instead of `obj` a different folder will be used) the restore target will produce temporary files in `obj` instead of the declared `IntermediateOutputPath`.\r\n\r\nThis is not a problem for projects using `packages.config`. But it is for those using the `PackageReference` format.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: **MSBuild**\r\n\r\nNuGet Version: 5.6.0.6591\r\n\r\nVS version: 16.7.5\r\n\r\nOS version: win10 v2004\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Clone and check out https://github.com/ite-klass/TestNugetRestoreBaseIntermediatePath\r\n2. Execute `msbuild -t:restore TestNugetRestoreBaseIntermediatePath.sln`\r\n\r\nThe result is a dirty workspace. VS will also show the obj folder and files.\r\n"},{"Id":"13816202738","Type":"IssuesEvent","CreatedAt":"2020-10-12T15:41:31","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8867","RelatedDescription":"Reopened issue \"Pack includes content brought in through dependency packages into the current project's package (SDK based projects only)\" (#8867) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS 2019 \r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\nVS version (if appropriate): 16.3.8\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10.0.14393 x64\r\n\r\nWorked before? If so, with which NuGet version: -\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nI have been using the `PrivateAssets=\"all\"` option for a long time. It works great for `PackageReference`. Now I needed to use some content file in my project and I could not achieve the desired behavior with `PrivateAssets=\"all\"`. I want to build \"base\" package with one file `data.json` which should be consumed in \"top\" package but should not be exposed further to consumers of the \"top\" package.\r\n\r\nMy \"base\" package:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <IncludeBuildOutput>false</IncludeBuildOutput>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"data.json\">\r\n      <PackagePath>contentFiles/any/any/data.json</PackagePath>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nThe result seems to be good for me:\r\n![image](https://user-images.githubusercontent.com/21261007/69996708-a573d980-1563-11ea-8069-bb275803e1fb.png)\r\n\r\nMy \"top\" package:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"BasePackage\" Version=\"1.0.0\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe Result is unexpected for me:\r\n![image](https://user-images.githubusercontent.com/21261007/69997235-bc66fb80-1564-11ea-8c80-23e46bfa7cdb.png)\r\n\r\nWhy is the file again in the content section? This file is a development dependency, some sort of settings file. The \"base\" package is a package with Roslyn analyzers and the settings file - `data.json`. I do not present the analyzers used for clarity. For them, `PrivateAssets` works as it should - they do not fall into the dependencies of the \"base\" package. But for the settings file - `data.json`, I can’t get the same behavior.\r\n\r\nI spent a lot of time resolving this issue and it seems to me that I do not see any obvious solution, which is somewhere nearby. I will be very grateful for the advice.\r\n\r\n"},{"Id":"13806660968","Type":"IssuesEvent","CreatedAt":"2020-10-11T18:36:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9880","RelatedDescription":"Closed issue \"Package Manager Console Depends on Solution Start-up Project\" (#9880) at NuGet/Home","RelatedBody":"@BrianBu01 commented on [Tue, 03 Mar 2020 18:27:14 GMT](https://github.com/dotnet/roslyn/issues/42137)\r\n**Version Used**: \r\n\r\nVS Professional 2019 v 16.4.5\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Select a start up project\r\n2. In Package Manager Console, select a default project different from startup\r\n3. Run a command that depends on building of projects or even code with in such as Scaffold-DbContext.\r\n\r\n**Expected Behavior**:\r\n\r\nThe command runs in context of the default project\r\n\r\n**Actual Behavior**:\r\n\r\nThe command run on the default project but in the context of the start-up project\r\n**Notes**\r\n\r\nNot really sure that this is a bug, but it is a confusing coupling between two different concepts.   "},{"Id":"13801140086","Type":"IssuesEvent","CreatedAt":"2020-10-10T14:53:09","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10051","RelatedDescription":"Closed issue \"add dotnet nuget verify command to dotnet docs\" (#10051) at NuGet/Home","RelatedBody":"This task is created to track https://github.com/dotnet/docs/issues/20701"},{"Id":"13799162094","Type":"IssuesEvent","CreatedAt":"2020-10-10T05:26:31","Actor":"Denis535","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10109","RelatedDescription":"Closed issue \"The task factory \"***\" could not be found in the assembly \"***\"\" (#10109) at NuGet/Home","RelatedBody":"I am trying to make nuget package with some task. But I ran into a problem:\r\n`The task factory \"NuGetLibrary.Tasks.MyTask\" could not be found in the assembly \"C:\\Users\\Den\\.nuget\\packages\\nugetlibrary\\2.0.0-alpha.637374840513886857\\build\\netstandard2.1\\..\\..\\lib\\netstandard2.1\\NuGetLibrary.dll\"`.\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.8.0 Preview 3.2\r\n```\r\n\r\nNuGetLibrary.nuspec\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n    <metadata>\r\n        <id>NuGetLibrary</id>\r\n        <version>2.0.0-alpha.$timestamp$</version>\r\n        \r\n        <owners>Den</owners>\r\n        <authors>Den</authors>\r\n        <title>NuGet Library</title>\r\n        <icon>Icon.png</icon>\r\n        <description>Example package</description>\r\n        <tags></tags>\r\n        <projectUrl>https://github.com/</projectUrl>\r\n        <repository type=\"git\" url=\"https://github.com/\" />\r\n        \r\n        <developmentDependency>true</developmentDependency>\r\n        <packageTypes>\r\n            <packageType name=\"Dependency\" />\r\n        </packageTypes>\r\n\r\n        <!--<frameworkReferences>\r\n            <group targetFramework=\".NETStandard\">\r\n            </group>\r\n        </frameworkReferences>-->\r\n        \r\n        <!--<frameworkAssemblies>\r\n        </frameworkAssemblies>-->\r\n        \r\n        <!--<dependencies>\r\n            <group targetFramework=\".NETStandard\" >\r\n                <dependency id=\"Microsoft.Build.Utilities.Core\" version=\"16.6.0\" />\r\n            </group>\r\n        </dependencies>-->\r\n        \r\n        <!--<references>\r\n            <group targetframework=\".netstandard\" >\r\n            </group>\r\n        </references>-->\r\n        \r\n        <contentFiles>\r\n            <files include=\"**/*.*\" buildAction=\"None\" copyToOutput=\"false\" flatten=\"false\" />\r\n        </contentFiles>\r\n    </metadata>\r\n    <files>\r\n        <file src=\"Readme.txt\" target=\"\" />\r\n        <file src=\"Icon.png\" target=\"\" />\r\n        <file src=\"Build/NuGetLibrary.targets\" target=\"build/netstandard2.1/\" />\r\n        <file src=\"bin/$configuration$/netstandard2.1/NuGetLibrary.dll\" target=\"lib/netstandard2.1/\" />\r\n        <file src=\"bin/$configuration$/netstandard2.1/NuGetLibrary.pdb\" target=\"lib/netstandard2.1/\" />\r\n        <file src=\"bin/$configuration$/netstandard2.1/NuGetLibrary.deps.json\" target=\"lib/netstandard2.1/\" />\r\n        <file src=\"Content/Images/Image.jpg\" target=\"contentFiles/any/netstandard2.1/Images/\" />\r\n    </files>\r\n</package>\r\n```\r\n\r\nNuGetLibrary.targets\r\n```\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n    <UsingTask TaskName=\"MyTask\" AssemblyFile = \"$(MSBuildThisFileDirectory)..\\..\\lib\\netstandard2.1\\NuGetLibrary.dll\" TaskFactory=\"NuGetLibrary.Tasks.MyTask\" />\r\n    <Target Name=\"BeforeBuild_\" BeforeTargets=\"BeforeBuild\">\r\n        <Message Text=\"Hello World !!!\" Importance=\"high\" />\r\n        <MyTask />\r\n    </Target>\r\n    <Target Name=\"AfterBuild_\" AfterTargets=\"AfterBuild\">\r\n        <Message Text=\"Hello World !!!\" Importance=\"high\" />\r\n        <MyTask />\r\n    </Target>\r\n</Project>\r\n```\r\n\r\nMyTask.cs\r\n```\r\nnamespace NuGetLibrary.Tasks {\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Text;\r\n    using Microsoft.Build.Framework;\r\n    using Microsoft.Build.Utilities;\r\n\r\n    public class MyTask : Task {\r\n\r\n        public override bool Execute() {\r\n            Log.LogWarning( \"MyTask !!!\" );\r\n            return true;\r\n        }\r\n\r\n    }\r\n}\r\n```\r\nAnd the project itself.\r\n[NuGetLibrary.zip](https://github.com/NuGet/Home/files/5326326/NuGetLibrary.zip)\r\n\r\nWhat am I doing wrong?\r\n\r\n\r\n\r\n"},{"Id":"13797807403","Type":"IssuesEvent","CreatedAt":"2020-10-09T22:58:49","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10118","RelatedDescription":"Closed issue \"Can not load assembly \"Nuget.Versioning\" in Azure Functions\" (#10118) at NuGet/Home","RelatedBody":"When I add \"Nuget.Versioning\" package to an Azure Function project, in runtime I get an exception, when I try to use SemanticVerion class: \r\n\"System.Private.CoreLib: Exception while executing function: Function1. FunctionApp1: Could not load file or assembly 'NuGet.Versioning, Version=5.7.0.7, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\"\r\n\r\nNuGet package version 5.7.0.7 (also tried preview version)\r\nVS version: VS Community 2019 (16.7.3)\r\nOS version: win10 v1909\r\nAzure Function: .net core 3.1, function version is V3\r\n\r\n1. Create HTTP-triggered Azure Function V3\r\n\r\n2. Add Nuget.Versioning package\r\n\r\n3. Create an instance of SemanticVersion class\r\n\r\n4. Run"},{"Id":"13797275944","Type":"IssuesEvent","CreatedAt":"2020-10-09T21:28:04","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10117","RelatedDescription":"Closed issue \"Remove liveshare flag from service attributes\" (#10117) at NuGet/Home","RelatedBody":"Our services use Audience = ServiceAudience.AllClientsIncludingGuests which enables liveshare scenarios which we don't want to enable at this time."},{"Id":"13789742335","Type":"IssuesEvent","CreatedAt":"2020-10-09T09:20:39","Actor":"MonBm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10118","RelatedDescription":"Opened issue \"Can not load assembly \"Nuget.Versioning\" in Azure Functions\" (#10118) at NuGet/Home","RelatedBody":"When I add \"Nuget.Versioning\" package to an Azure Function project, in runtime I get an exception, when I try to use SemanticVerion class: \r\n\"System.Private.CoreLib: Exception while executing function: Function1. FunctionApp1: Could not load file or assembly 'NuGet.Versioning, Version=5.7.0.7, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\"\r\n\r\nNuGet package version 5.7.0.7 (also tried preview version)\r\nVS version: VS Community 2019 (16.7.3)\r\nOS version: win10 v1909\r\nAzure Function: .net core 3.1, function version is V3\r\n\r\n1. Create HTTP-triggered Azure Function V3\r\n\r\n2. Add Nuget.Versioning package\r\n\r\n3. Create an instance of SemanticVersion class\r\n\r\n4. Run"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-13T05:30:40.9715661Z","RunDurationInMilliseconds":1499}