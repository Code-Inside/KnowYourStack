{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25236583102","Type":"PullRequestEvent","CreatedAt":"2022-11-15T01:45:41","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9311","RelatedDescription":"Merged pull request \"[A11y] Removed incorrect role attribute from breadcrumb headings\" (#9311) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9310\r\n\r\nThe breadcrumb headings on pages like the 'Report Package' page were flagged for having the \"list\" role on an `<h1>` tag. Since these serve more as headings anyway, I simply removed the role attributes from these elements without adding anything (`<h1>` tags are announced as headers anyway), and FastPass doesn't flag it anymore.\r\n\r\nPreviously,\r\n![image](https://user-images.githubusercontent.com/82980589/201792124-4fa89c38-ecde-4560-8d80-65d1b6705d11.png)\r\n\r\nAfter the change,\r\n![image](https://user-images.githubusercontent.com/82980589/201792482-b9b16dc8-b379-4f29-9ea0-915277aac2e9.png)\r\n"},{"Id":"25235198501","Type":"PullRequestEvent","CreatedAt":"2022-11-14T23:55:07","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9311","RelatedDescription":"Opened pull request \"[A11y] Removed incorrect role attribute from breadcrumb headings\" (#9311) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9310\r\n\r\nThe breadcrumb headings on pages like the 'Report Package' page were flagged for having the \"list\" role on an `<h1>` tag. Since these serve more as headings anyway, I simply removed the role attributes from these elements without adding anything (`<h1>` tags are announced as headers anyway), and FastPass doesn't flag it anymore.\r\n\r\nPreviously,\r\n![image](https://user-images.githubusercontent.com/82980589/201792124-4fa89c38-ecde-4560-8d80-65d1b6705d11.png)\r\n\r\nAfter the change,\r\n![image](https://user-images.githubusercontent.com/82980589/201792482-b9b16dc8-b379-4f29-9ea0-915277aac2e9.png)\r\n"},{"Id":"25235142423","Type":"IssuesEvent","CreatedAt":"2022-11-14T23:50:12","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9310","RelatedDescription":"Opened issue \"[A11y] Incorrect role attribute on breadcrumb headings\" (#9310) at NuGet/NuGetGallery","RelatedBody":"Issue: \r\nThe breadcrumb heading `<h1>` tags on pages like the 'Report Package' page cannot have the role \"list\". These serve more as headings anyway, so no role attribute should be required.\r\n\r\nhttps://www.nuget.org/packages/Newtonsoft.Json/13.0.2-beta2/ReportAbuse"},{"Id":"25232115593","Type":"PullRequestEvent","CreatedAt":"2022-11-14T20:46:47","Actor":"vlada-shubina","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9309","RelatedDescription":"Opened pull request \"changed `dotnet new` example\" (#9309) at NuGet/NuGetGallery","RelatedBody":"Starting .NET 7.0, `dotnet new --install` became `dotnet new install`.\r\nhttps://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new-install\r\n\r\nTherefore changed syntax in example"},{"Id":"25198912066","Type":"IssuesEvent","CreatedAt":"2022-11-12T21:59:05","Actor":"mjolka","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9308","RelatedDescription":"Opened issue \"[NuGet.org Bug]: api.nuget.org is slow from some geographic locations\" (#9308) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\napi.nuget.org is slow from some geographic locations, including where I'm based (Australia).\r\n\r\nTo test this, I created DigitalOcean Droplets in different regions and ran tests using ApacheBench.\r\n\r\nThis table shows the time taken to complete 100 requests for a resource on api.nuget.org, using HTTP Keep Alive.\r\n\r\nLocation  | Time taken for tests (s) | Time taken for tests, relative to New York\r\n:-- | --: | --:\r\nNew York | 3.04 | 1.00\r\nSan Francisco | 5.627 | 1.85\r\nLondon | 10.518 | 3.46\r\nSingapore | 22.089 | 7.27\r\n\r\nWhen using NuGet Package Manager UI, the Updates and Installed tabs can make several hundred API requests. This combined with the slow response time degrades the user experience for people in certain locations.\r\n\r\nFrom my home machine, I'm seeing times comparable to Singapore in the table above.\r\n\r\nDetailed results:\r\n\r\n<details><summary>New York</summary>\r\n\r\n```\r\nThis is ApacheBench, Version 2.3 <$Revision: 1901567 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking api.nuget.org (be patient).....done\r\n\r\n\r\nServer Software:        Windows-Azure-Blob/1.0\r\nServer Hostname:        api.nuget.org\r\nServer Port:            443\r\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\r\nServer Temp Key:        ECDH P-256 256 bits\r\nTLS Server Name:        api.nuget.org\r\n\r\nDocument Path:          /v3/registration5-gz-semver2/microsoft.aspnetcore.mvc.testing/index.json\r\nDocument Length:        18694 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.040 seconds\r\nComplete requests:      100\r\nFailed requests:        0\r\nKeep-Alive requests:    100\r\nTotal transferred:      1955600 bytes\r\nHTML transferred:       1869400 bytes\r\nRequests per second:    32.89 [#/sec] (mean)\r\nTime per request:       30.402 [ms] (mean)\r\nTime per request:       30.402 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          628.18 [Kbytes/sec] received\r\n\r\nConnection Times (ms)\r\n              min  mean[+/-sd] median   max\r\nConnect:        0    0   1.2      0      12\r\nProcessing:    28   30   7.9     29     105\r\nWaiting:       28   30   7.9     29     105\r\nTotal:         28   30   9.1     29     117\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n  50%     29\r\n  66%     29\r\n  75%     30\r\n  80%     30\r\n  90%     31\r\n  95%     32\r\n  98%     48\r\n  99%    117\r\n 100%    117 (longest request)\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>San Francisco</summary>\r\n\r\n```\r\nThis is ApacheBench, Version 2.3 <$Revision: 1901567 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking api.nuget.org (be patient).....done\r\n\r\n\r\nServer Software:        Windows-Azure-Blob/1.0\r\nServer Hostname:        api.nuget.org\r\nServer Port:            443\r\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\r\nServer Temp Key:        ECDH P-256 256 bits\r\nTLS Server Name:        api.nuget.org\r\n\r\nDocument Path:          /v3/registration5-gz-semver2/microsoft.aspnetcore.mvc.testing/index.json\r\nDocument Length:        18694 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   5.627 seconds\r\nComplete requests:      100\r\nFailed requests:        0\r\nKeep-Alive requests:    100\r\nTotal transferred:      1955600 bytes\r\nHTML transferred:       1869400 bytes\r\nRequests per second:    17.77 [#/sec] (mean)\r\nTime per request:       56.272 [ms] (mean)\r\nTime per request:       56.272 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          339.38 [Kbytes/sec] received\r\n\r\nConnection Times (ms)\r\n              min  mean[+/-sd] median   max\r\nConnect:        0    0   1.0      0      10\r\nProcessing:    55   56   2.0     56      75\r\nWaiting:       55   56   2.0     56      75\r\nTotal:         55   56   2.4     56      75\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n  50%     56\r\n  66%     56\r\n  75%     56\r\n  80%     56\r\n  90%     57\r\n  95%     58\r\n  98%     70\r\n  99%     75\r\n 100%     75 (longest request)\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>London</summary>\r\n\r\n```\r\nThis is ApacheBench, Version 2.3 <$Revision: 1901567 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking api.nuget.org (be patient).....done\r\n\r\n\r\nServer Software:        Windows-Azure-Blob/1.0\r\nServer Hostname:        api.nuget.org\r\nServer Port:            443\r\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\r\nServer Temp Key:        ECDH P-256 256 bits\r\nTLS Server Name:        api.nuget.org\r\n\r\nDocument Path:          /v3/registration5-gz-semver2/microsoft.aspnetcore.mvc.testing/index.json\r\nDocument Length:        18694 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   10.518 seconds\r\nComplete requests:      100\r\nFailed requests:        0\r\nKeep-Alive requests:    100\r\nTotal transferred:      1955600 bytes\r\nHTML transferred:       1869400 bytes\r\nRequests per second:    9.51 [#/sec] (mean)\r\nTime per request:       105.182 [ms] (mean)\r\nTime per request:       105.182 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          181.57 [Kbytes/sec] received\r\n\r\nConnection Times (ms)\r\n              min  mean[+/-sd] median   max\r\nConnect:        0    0   0.9      0       9\r\nProcessing:   100  105  29.7    101     394\r\nWaiting:      100  105  29.7    101     394\r\nTotal:        100  105  30.6    101     403\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n  50%    101\r\n  66%    101\r\n  75%    101\r\n  80%    101\r\n  90%    102\r\n  95%    113\r\n  98%    140\r\n  99%    403\r\n 100%    403 (longest request)\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Singapore</summary>\r\n\r\n```\r\nThis is ApacheBench, Version 2.3 <$Revision: 1901567 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking api.nuget.org (be patient).....done\r\n\r\n\r\nServer Software:        Windows-Azure-Blob/1.0\r\nServer Hostname:        api.nuget.org\r\nServer Port:            443\r\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\r\nServer Temp Key:        ECDH P-256 256 bits\r\nTLS Server Name:        api.nuget.org\r\n\r\nDocument Path:          /v3/registration5-gz-semver2/microsoft.aspnetcore.mvc.testing/index.json\r\nDocument Length:        18694 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   22.089 seconds\r\nComplete requests:      100\r\nFailed requests:        0\r\nKeep-Alive requests:    100\r\nTotal transferred:      1955600 bytes\r\nHTML transferred:       1869400 bytes\r\nRequests per second:    4.53 [#/sec] (mean)\r\nTime per request:       220.891 [ms] (mean)\r\nTime per request:       220.891 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          86.46 [Kbytes/sec] received\r\n\r\nConnection Times (ms)\r\n              min  mean[+/-sd] median   max\r\nConnect:        0    0   0.8      0       8\r\nProcessing:   214  221  63.7    214     851\r\nWaiting:      214  221  63.7    214     851\r\nTotal:        214  221  64.5    214     860\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n  50%    214\r\n  66%    214\r\n  75%    215\r\n  80%    215\r\n  90%    215\r\n  95%    216\r\n  98%    219\r\n  99%    860\r\n 100%    860 (longest request)\r\n```\r\n\r\n</details>\n\n### Repro Steps\n\n1. Install ApacheBench\r\n> apt-get install -y apache2-utils\r\n2. Run tests\r\n> ab -n 100 -k https://api.nuget.org/v3/registration5-gz-semver2/microsoft.aspnetcore.mvc.testing/index.json\n\n### Expected Behavior\n\nResponse times should not vary so dramatically with geographic location.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"25198573240","Type":"IssuesEvent","CreatedAt":"2022-11-12T20:58:51","Actor":"zabszk","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9307","RelatedDescription":"Opened issue \"[Feature]: Allow README URLs from flat.badgen.net\" (#9307) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nbadgen.net is already on the list of allowed domains, however their subdomain flat.badgen.net (that provides a different badges style) is not.\r\n\r\nCan we have flat.badgen.net subdomain added as well, so projects can use the flat style of badges as well?\n\n### Additional Context and Details\n\n_No response_"},{"Id":"25189941304","Type":"PullRequestEvent","CreatedAt":"2022-11-11T22:51:34","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9306","RelatedDescription":"Merged pull request \"[A11y] Change role attribute of Recaptcha iframe\" (#9306) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9300\r\n\r\n**Problem:**\r\n \r\nTh Recaptcha iframes on pages like the Forgot Password page and the Report Abuse page were marked with the role `presentation` by default, but this role (as well as the `none` role) disables some accessibility properties, which is why FastPass was flagging it.\r\n\r\n**Previously,**\r\n![iframe before](https://user-images.githubusercontent.com/82980589/201232922-9f0d581a-d2bb-400a-9ebb-be28953b73fa.png)\r\n\r\n**Fix:**\r\n\r\nIframes are only allowed to be marked with the roles `document`, `application` or `img` (also `presentation` or `none`, but that causes other a11y problems). I changed the role of this iframe to `document`, and it clears FastPass checks now (on both the pages flagged in the bug, the Forgot Password page and the Report Abuse page).\r\n\r\n**After the changes,**\r\n![iframe after](https://user-images.githubusercontent.com/82980589/201232966-a09a6b89-88b7-4a41-b343-d8d0a7f223e1.png)"},{"Id":"25189938536","Type":"PullRequestEvent","CreatedAt":"2022-11-11T22:51:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9303","RelatedDescription":"Merged pull request \"[A11y] Correct role attribute for package lists\" (#9303) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9301\r\n\r\n**Problem:**\r\n \r\nOn the Profiles page and the List Packages page, the lists of packages were flagged for not having the appropriate role on the individual list items. These were already marked with role=\"listitem\" and the enclosing div was marked with role=\"list\", so I'm unsure why this was flagged. However, we can bypass the need for these manual role attributes by using `<ul>` and `<li>` tags directly instead.\r\n\r\n**Previously,**\r\n![image](https://user-images.githubusercontent.com/82980589/200703988-0ba5e6c3-e113-492c-a6ef-1f0823520af8.png)\r\n\r\n**Fix:**\r\n\r\nThese package lists now use `<ul>` and `<li>` tags, which do not require additional role attributes. I also had to remove the bullet and left padding from these package list `<ul>`s.\r\n\r\n**After the changes,**\r\n![image](https://user-images.githubusercontent.com/82980589/200704058-7c7f400a-3ffe-420b-8ddc-94f21097d35b.png)\r\n"},{"Id":"25168994997","Type":"PullRequestEvent","CreatedAt":"2022-11-11T00:19:55","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9306","RelatedDescription":"Opened pull request \"[A11y] Change role attribute of Recaptcha iframe\" (#9306) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9300\r\n\r\n**Problem:**\r\n \r\nTh Recaptcha iframes on pages like the Forgot Password page and the Report Abuse page were marked with the role `presentation` by default, but this role (as well as the `none` role) disables some accessibility properties, which is why FastPass was flagging it.\r\n\r\n**Previously,**\r\n![iframe before](https://user-images.githubusercontent.com/82980589/201232922-9f0d581a-d2bb-400a-9ebb-be28953b73fa.png)\r\n\r\n**Fix:**\r\n\r\nIframes are only allowed to be marked with the roles `document`, `application` or `img` (also `presentation` or `none`, but that causes other a11y problems). I changed the role of this iframe to `document`, and it clears FastPass checks now (on both the pages flagged in the bug, the Forgot Password page and the Report Abuse page).\r\n\r\n**After the changes,**\r\n![iframe after](https://user-images.githubusercontent.com/82980589/201232966-a09a6b89-88b7-4a41-b343-d8d0a7f223e1.png)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25233851334","Type":"IssuesEvent","CreatedAt":"2022-11-14T22:20:11","Actor":"kevinoid","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12244","RelatedDescription":"Opened issue \"Warn when using deprecated Nuget packages\" (#12244) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nNuGet could warn .NET SDK users when they use (e.g. install or restore) a deprecated package, as Visual Studio does, so that they can consider taking appropriate action\n\n### Additional Context and Details\n\n@zijchen reported this issue a year ago in dotnet/sdk#22635 and was instructed to report it here.  I was unable to find a corresponding issue, and am also interested in this feature, so I'm opening this issue to suggest it.\r\n\r\nA concrete example, from the original issue, using the deprecated [WindowsAzure.Storage](https://www.nuget.org/packages/WindowsAzure.Storage) package does not produce any warnings or indications to the user that the package is deprecated:\r\n\r\n```sh\r\ndotnet new console\r\ndotnet add package WindowsAzure.Storage\r\ndotnet restore\r\ndotnet build\r\n```\r\n\r\nIt would be nice if a numbered [NuGet Warning](https://learn.microsoft.com/nuget/reference/errors-and-warnings) were produced to inform users and allow monitoring (e.g. failing CI with warn-as-error builds).\r\n\r\nThanks for considering,\r\nKevin"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":33,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2022-11-15T03:30:27.0386191Z","RunDurationInMilliseconds":1748}