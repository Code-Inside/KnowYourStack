{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40321901469","Type":"PullRequestEvent","CreatedAt":"2024-07-20T23:18:29","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10076","RelatedDescription":"Opened pull request \"Clean up build infra to make a repository merge easier\" (#10076) at NuGet/NuGetGallery","RelatedBody":"Similar to https://github.com/NuGet/NuGet.Jobs/pull/1217 and https://github.com/NuGet/ServerCommon/pull/434.\r\n\r\nI would like to try a repository merge (monorepo-ish). That is, merging NuGet Server OSS repositories into fewer (perhaps just one). To make this easier, I want to clean up and align our build infra, which is a case where the same file names exist in several repos, making a repo merge have merge conflicts.\r\n\r\nSummary of changes\r\n- Move to Central Package Management\r\n- Update .gitignore to latest\r\n- Update `.nuget/packages.config` (solution level packages), move to root for better visibility\r\n- Rename `SimpleVersion` and `SemanticVersion` to `GalleryAssemblyVersion` and `GalleryPackageVersion`\r\n- Fix some PowerShell functions to use allowed verbs\r\n- Delete build.cmd, buildandtest.ps1, and several other unused scripts since these are not used by our CI or releases at all.\r\n- More some stuff from `SdkProjects.props` to `Directory.Build.props` so more happens on all projects\r\n- Clean up NuGet.config to match other repos\r\n- Fix broken UTs in `GitHubVulnerabilities2v3.Facts`"},{"Id":"40307337084","Type":"IssuesEvent","CreatedAt":"2024-07-19T20:17:29","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10075","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 07/23/2024\" (#10075) at NuGet/NuGetGallery","RelatedBody":"On **July 23, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985).\r\n"},{"Id":"40277737726","Type":"IssuesEvent","CreatedAt":"2024-07-18T22:01:16","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9875","RelatedDescription":"Closed issue \"[UI] Verify that new themes are compatible with old browsers\" (#9875) at NuGet/NuGetGallery","RelatedBody":"Had a talk with Joel about the support of CSS variables and how this could be a concern for old browsers, specially IE. For the moment we decided to continue using CSS variables since it make's the job easier, after merging into DEV we will verify that for IE, the page is usable. "},{"Id":"40272572552","Type":"IssuesEvent","CreatedAt":"2024-07-18T18:24:07","Actor":"ravindra-aditya","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10074","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Interruption in restoring project dependencies\" (#10074) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nConstantly, getting feed interference issues whenever other services are interrupted or not working. \r\n\r\n**Error**: NU1301\tUnable to load the service index for source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json.\t\n\n### Repro Steps\n\n- Create an aspnetcore web api application and try to build, immediately the reported error is getting inferred. \n\n### Expected Behavior\n\nif dotnet or related is having issue, why packages restore is having issue?\n\n### Screenshots\n\n![image](https://github.com/user-attachments/assets/bdde0095-4289-427c-aaed-e6a261b1cc3f)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"40240891893","Type":"IssuesEvent","CreatedAt":"2024-07-17T21:47:13","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9953","RelatedDescription":"Closed issue \"[Feature]: Allow readme images from DeepSource\" (#9953) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\r\n\r\nAllow `readme.md` files to reference images from [Deepsource](https://deepsource.com/).\r\n\r\nDeepSource is a code health platform that helps developers and engineering teams systematically improve code quality and security and save time in code reviews.\r\n\r\nImages (badges) are served from `app.deepsource.com` domain.\r\n\r\nSample markdown:\r\n\r\n[![DeepSource](https://app.deepsource.com/gh/guibranco/CrispyWaffle.svg/?label=active+issues&show_trend=true&token=r3XGa8MQHGZERdIhKB5EZXfL)](https://app.deepsource.com/gh/guibranco/CrispyWaffle/?ref=repository-badge)\r\n\r\n### The Elevator Pitch\r\n\r\nAdd the domain `app.deepsource.com` to the allowed images domains list in readme.md files\r\n\r\n### Additional Context and Details\r\n\r\n_No response_"},{"Id":"40240891729","Type":"PullRequestEvent","CreatedAt":"2024-07-17T21:47:12","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10072","RelatedDescription":"Merged pull request \"Update Trusted-Image-Domains.json\" (#10072) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add the `app.deepsource.com` domain to the trusted image domains list.\r\n\r\nClose #9953 "},{"Id":"40239139865","Type":"IssuesEvent","CreatedAt":"2024-07-17T20:30:32","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9894","RelatedDescription":"Closed issue \"Merge Dark Theme feature into dev branch\" (#9894) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"40239138245","Type":"IssuesEvent","CreatedAt":"2024-07-17T20:30:29","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9893","RelatedDescription":"Closed issue \"[UI] Request an Accessibility testing for Dark theme feature.\" (#9893) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40319950493","Type":"IssuesEvent","CreatedAt":"2024-07-20T18:33:14","Actor":"baronfel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13644","RelatedDescription":"Opened issue \"Fetching Vulnerability Resources doesn't respect cancellation\" (#13644) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 9 preview 7\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis requires a vulnerability information provider to have a network problem, either simulated or real. For me, the Azure outage this Thursday evening presented such that when I cancelled a `dotnet build` of the dotnet/sdk repo MSBuild attempted to cancel the build but the Restore continued - I got error messages like the following after the 90s timeout finished:\r\n\r\n```\r\nE:\\Code\\dotnet-sdk\\src\\Layout\\toolset-tasks\\toolset-tasks.csproj : error NU1900: Warning As Error: Error occurred while getting package vulnerability data: Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json.\r\n```\r\nand\r\n```\r\nE:\\Code\\dotnet-sdk\\artifacts\\bin\\redist\\Debug\\dotnet\\sdk\\9.0.100-dev\\NuGet.targets(180,5): warning MSB4220: Waiting for the currently executing task \"RestoreTask\" to cancel.\r\n```\r\n\r\nTo me this felt like a classic case of not passing a CTok, or using CTok.None. I dug into the RestoreTask and found that \r\n\r\n* RestoreDoes set up and [pass a CTok](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Build.Tasks/RestoreTask.cs#L163)\r\n* Restores are [run for each request](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Build.Tasks/BuildTasksUtility.cs#L251)\r\n* Also run [here](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreRunner.cs#L251)\r\n* Audit [is performed](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L336-L337), which requires\r\n* packages vulnerabilities to [be checked](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreCommand.cs#L513), which requires\r\n* [fetching vulnerability data](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/Utility/AuditUtility.cs#L90), which requires\r\n* querying vulnerability data [from the configured providers](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/Utility/AuditUtility.cs#L332)\r\n\r\nThrough this whole chain the CTok is flowed in a way that makes sense to me. However, the Vulnerability provider interface seems to accept a CTok, but [not use it](https://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Commands/RestoreCommand/VulnerabilityInformationProvider.cs#L34), perhaps for caching purposes?\r\n\r\nI think if this was changed to accept the flowed-in CTok in some way that Restore would be properly cancellable again.\r\n* \n\n### Verbose Logs\n\n```shell\nI don't have standalone logs, but I did include some error messages above.\n```\n"},{"Id":"40317834038","Type":"IssuesEvent","CreatedAt":"2024-07-20T14:19:19","Actor":"Ilchert","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13643","RelatedDescription":"Opened issue \"Can not install signed package with certificate chain building issue\" (#13643) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\ndotnet 8.0.303, dev nuget.exe\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nThis bug is related to https://github.com/mbdavid/LiteDB/issues/1874.\r\n\r\nWe are trying to install/restore LiteDB, which is signed with certificate, issued by ssl.com. \r\n![image](https://github.com/user-attachments/assets/35940b88-b4d2-4b4b-90f8-3915d14e1081)\r\n\r\nFor CI/CD we are using Windows Server 2022 21H2 20348.2461 without SSL.com trusted root certificate installed, but with certificate trust list, and on this list, we have an issue with certificate in the chain.\r\n\r\n![image](https://github.com/user-attachments/assets/c22a5443-fd43-429f-a343-8736d1b3876f)\r\n\r\nI understand that we have to fix issue with certificate, but I expect that nuget should be able to install this package in `signatureValidationMode=accept`.\r\n\r\nThe problem starts here \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Packaging/Signing/Utility/VerificationUtility.cs#L28-L34\r\n\r\nСonverts `SignatureVerificationStatusFlags.ChainBuildingFailure` into `SignatureVerificationStatus.Disallowed`\r\n\r\nAnd then this leads to `NuGet.Packaging.Signing.SignatureException` here \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/46f80a3f1a83f3c5f33a20fa9fb72871e1e2d4eb/src/NuGet.Core/NuGet.Packaging/PackageExtractor.cs#L1034-L1072\r\n\r\nAnd remove downloaded files.\r\n\r\nnuget.exe install litedb:\r\n\r\n```console\r\nError downloading 'LiteDB.5.0.21 : System.Buffers [4.5.1, )' from 'xxx'.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Error downloading 'LiteDB.5.0.21 : System.Buffers [4.5.1, )' from 'xxx'. ---> NuGet.Packaging.Signing.SignatureException\r\n   at NuGet.Packaging.PackageExtractor.<VerifyPackageSignatureAsync>d__9.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 1073\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.Packaging.PackageExtractor.<>c__DisplayClass3_2.<<InstallFromSourceAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 520\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__5`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Common\\ConcurrencyUtilities.cs:line 102\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__5`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Common\\ConcurrencyUtilities.cs:line 117\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Packaging.PackageExtractor.<InstallFromSourceAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Packaging\\PackageExtractor.cs:line 390\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GlobalPackagesFolderUtility.<AddPackageAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GlobalPackagesFolderUtility.cs:line 121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GetDownloadResultUtility.<>c__DisplayClass3_0.<<GetDownloadResultAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GetDownloadResultUtility.cs:line 90\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass18_0`1.<<ProcessStreamAsync>b__0>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 252\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__20`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 291\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.HttpSource.<ProcessStreamAsync>d__18`1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\HttpSource\\HttpSource.cs:line 239\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.GetDownloadResultUtility.<GetDownloadResultAsync>d__3.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\Utility\\GetDownloadResultUtility.cs:line 111\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.V2FeedParser.<DownloadFromUrl>d__44.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\V2FeedParser.cs:line 275\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.Protocol.DownloadResourceV2Feed.<GetDownloadResourceResultAsync>d__4.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\DownloadResourceV2Feed.cs:line 76\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.DownloadResourceV2Feed.<GetDownloadResourceResultAsync>d__4.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.Protocol\\LegacyFeed\\DownloadResourceV2Feed.cs:line 106\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackageDownloader.<GetDownloadResourceResultAsync>d__1.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackageDownloader.cs:line 302\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackagePreFetcher.<>c__DisplayClass0_1.<<GetPackagesAsync>b__4>d.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcher.cs:line 130\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.PackagePreFetcherResult.<EnsureResultAsync>d__24.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcherResult.cs:line 113\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.PackagePreFetcherResult.<GetResultAsync>d__25.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\PackagePreFetcherResult.cs:line 146\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2655\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2691\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__87.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 2823\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<InstallPackageAsync>d__53.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Core\\NuGet.PackageManagement\\NuGetPackageManager.cs:line 449\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.CommandLine.InstallCommand.<InstallPackageAsync>d__38.MoveNext() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Commands\\InstallCommand.cs:line 403\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at NuGet.CommandLine.Command.Execute() in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Commands\\Command.cs:line 182\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args) in C:\\Temp\\nuget\\NuGet.Client-dev\\src\\NuGet.Clients\\NuGet.CommandLine\\Program.cs:line 166\r\n```\r\ndotnet restore error\r\n\r\n```console\r\n                   \"C:\\Temp\\Temp.csproj\" (Restore target) (1) ->\r\n                   (Restore target) ->\r\n                     C:\\Temp\\Temp.csproj : warning NU3012: Package 'LiteDB 5.0.21' from source 'xxx': The author primary signature found a chain building issue: CtlNotValidForUsage: The certificate is not valid for the requested usage.\r\n                     C:\\Temp\\Temp.csproj : warning NU3012: Package 'LiteDB 5.0.21' from source 'xxxx': The author primary signature found a chain building issue: NotValidForUsage: The certificate is not valid for the requested usage.\r\n\r\n\r\n                   \"C:\\Temp\\Temp.csproj\" (Restore target) (1) ->\r\n                   (Restore target) ->\r\n                     C:\\Program Files\\dotnet\\sdk\\8.0.303\\NuGet.targets(169,5): error MSB4181: The \"RestoreTask\" task returned false but did not log an error. [C:\\Temp\\Temp.cspr\r\n                   oj]\r\n\r\n    2 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\ndotnet add package litedb error\r\n\r\n```console\r\ninfo : Package 'LiteDB 5.0.21' from source 'xxx': Verifying author primary signature's timestamp with timestamping service certificate:\r\ninfo :   Subject Name: CN=DigiCert Timestamp 2023, O=\"DigiCert, Inc.\", C=US\r\ninfo :   SHA1 hash: 66F02B32C2C2C90F825DCEAA8AC9C64F199CCF40\r\ninfo :   SHA256 hash: D2F6E46DED7422CCD1D440576841366F828ADA559AAE3316AF4D1A9AD40C7828\r\ninfo :   Issued by: CN=DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA, O=\"DigiCert, Inc.\", C=US\r\ninfo :   Valid from: 7/14/2023 12:00:00 AM to 10/13/2034 11:59:59 PM\r\ninfo : Package 'litedb' is compatible with all the specified frameworks in project 'C:\\Temp\\Temp.csproj'.\r\nerror: Value cannot be null. (Parameter 'path1')\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"40302305098","Type":"IssuesEvent","CreatedAt":"2024-07-19T16:35:54","Actor":"xparadoxical","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13642","RelatedDescription":"Opened issue \"dotnet add package stops checking sources on the first failure http code\" (#13642) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nNuGet Command Line 6.10.0.97; .NET SDK:  Version:           8.0.300  Commit:            326f6e68b2  Workload version:  8.0.300-manifests.5273bb1c  MSBuild version:   17.10.4+10fbfbf2e\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\ndotnet/sdk#42245\r\nIn short, have a source that 503's and it'll prevent you from using `dotnet add package <name>` without `--source` or disabling the failing source.\n\n### Verbose Logs\n\n```shell\nCan't get them because the dotnet-tools source (`https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json`) doesn't respond with 503 anymore and `--verbosity diag` seems to be undocumented (I looked yesterday specifically for any verbosity option in the `dotnet` docs and didn't see anything).\n```\n"},{"Id":"40289399798","Type":"IssuesEvent","CreatedAt":"2024-07-19T09:02:42","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13641","RelatedDescription":"Opened issue \"Error NU1301 instead of \"TLS validation failed\" displays when running ‘dotnet restore’ before TLS certificate validation is disabled \" (#13641) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet SDK 8.0.400-preview.0.24324.5\n\n### Worked before?\n\nIt’s not a regression since it is a new feature.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps: \r\n1.\tCreate a C# Console App (.NET 8.0) project.\r\n2.\tIn the solution folder, create a file named nuget.config with the following content:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n <packageSources>\r\n    <clear />\r\n    <add key=\"mySource\" value=\"https://127.0.0.1:44444/v3/index.json\"/>\r\n  </packageSources>\r\n</configuration>\r\n```\r\n3.\tOpen the .csproj file for your project and insert the following package reference within an ItemGroup:\r\n```\r\n<ItemGroup>\r\n  <PackageReference Include=\"abcdefghijkl\" Version=\"1.0.0\" />\r\n</ItemGroup>\r\n```\r\n4.\tOpen a command prompt and navigate to the solution directory.\r\n5.\tOpen a second command prompt window, download the [Entropy/filebackedserver](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FNuGet%2FEntropy%2Ftree%2Fmain%2Ffilebackedserver&data=05%7C02%7Cv-luzh%40microsoft.com%7Cc95c4e3963084ce6346308dca77d170b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638569402943632816%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=l8ku%2FzCWGFZgfRTAu71pFzPkthK0HSiw9zJpFXno%2F1w%3D&reserved=0) and go to the ‘filebackedserver’ solution directory and build the server by running:\r\n`dotnet build .\\filebackedserver\\filebackedserver.csproj`\r\n6.\tStart the local server by executing:\r\n`dotnet run --project .\\filebackedserver\\filebackedserver.csproj`\r\n7.\tSwitch back to the first terminal where your original project is located and run:\r\n`dotnet restore`\r\n#### Expected Result:\r\nError \"TLS validation failed\" should be displayed in the first command prompt.\r\n#### Actual Result:\r\nError NU1301 displays in the first command prompt as the screenshot below.\r\n![image](https://github.com/user-attachments/assets/07d54f07-cbd5-4d0b-9fdf-e3727f0d6a12)\r\n\r\n#### Notes:     \r\n1.\tThe repro rate is 100%. \n\n### Verbose Logs\n\n_No response_"},{"Id":"40277661273","Type":"IssuesEvent","CreatedAt":"2024-07-18T21:57:11","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13640","RelatedDescription":"Opened issue \"[Localization] Revert latest changes from 6.11.x branch \" (#13640) at NuGet/Home","RelatedBody":"Localization team made a huge change in the localization of that branch, since this could be a potential risk a future release, we need to revert them and ask them to stop updating the localization in this branch. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-21T03:30:19.3465137Z","RunDurationInMilliseconds":961}