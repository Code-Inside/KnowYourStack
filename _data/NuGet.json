{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"43403311029","Type":"PullRequestEvent","CreatedAt":"2024-10-31T20:18:30","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10245","RelatedDescription":"Opened pull request \"[DRAFT][SDKMigration]Attempt to fix missing authentication.\" (#10245) at NuGet/NuGetGallery","RelatedBody":"When a set of non null blob options are passed through to [src/Catalog/Persistence/CloudBlobDirectoryWrapper.cs](https://github.com/NuGet/NuGetGallery/compare/dev...ryuyu-monitoring-migration-test?expand=1#diff-faf95e19f981de74760ceb3fc4d23f572379edf12a8c2da4b3ee61665c49cf9f), the BlobServiceClient is recreated with the correct options to create the ContainerClient (containerClient inherits blob options from the creating service client).\r\n\r\nUnfortunately, this is created without authentication information, and the authentication information is not available here.\r\n\r\nThis change attempts to \"work around\" this issue by instead passing through a serviceClientFactory so we can recreate with whatever options we need whenever we want.\r\n\r\nThings we tried that didn't work:\r\n 1. Extract auth information from the BlobServiceClient. The authentication information is not available on the service client\r\n 2. Pipe through additional parameters so we can pipe auth information through directly. This resulted in a changeset of roughly the same size. (Thanks @advay26 for exploring this option)\r\n 3. Modify the blob options on the BlobServiceClient instead of creating a new one. This doesn't seem possible.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"43448312077","Type":"IssuesEvent","CreatedAt":"2024-11-02T21:34:20","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13905","RelatedDescription":"Opened issue \"Design Spec for Expanding NuGet Audit to Support <PackageDownload> Packages\" (#13905) at NuGet/Home","RelatedBody":" Create a design spec detailing the expansion of NuGet Audit to include <PackageDownload> packages, with exclusions for SDK-managed dependencies."},{"Id":"43448268728","Type":"PullRequestEvent","CreatedAt":"2024-11-02T21:28:38","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13904","RelatedDescription":"Opened pull request \"Enhancing NuGet Audit for Secure and Selective `<PackageDownload>` Vulnerability Reporting\" (#13904) at NuGet/Home","RelatedBody":"Design spec for https://github.com/NuGet/Home/issues/13658\r\n"},{"Id":"43435381928","Type":"IssuesEvent","CreatedAt":"2024-11-01T21:34:38","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13615","RelatedDescription":"Closed issue \"No-op restore caches and replays NU1900\" (#13615) at NuGet/Home","RelatedBody":"If you have a restore that failed with NU1900: Error occurred while getting package vulnerability data: Unable to load the service index for source...\r\n\r\nYou can then make a change to the NuGet Credential Provider, add the proper token, and re-run restore, it will still fail with the same error NU1900.\r\n\r\nThis is because the cache file is valid (since nothing changed on disk), so it doesn't attempt to re-restore.\r\n\r\nThis was an absolute nightmare to investigate (because when NuGet prints 401 you still think the problem is with auth, but really it doesn't even attempt to re-auth because it just plays back the no-op restore).\r\n\r\nWe also have warnings as errors, so the warning is logged as an error and fails the build."},{"Id":"43408395614","Type":"IssuesEvent","CreatedAt":"2024-11-01T00:48:34","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13903","RelatedDescription":"Opened issue \"nuget.config docs should make it clear protocolVersion is only for http sources\" (#13903) at NuGet/Home","RelatedBody":"See https://developercommunity.visualstudio.com/t/Visual-Studio-2022-throws-exception-NU1/10778056"},{"Id":"43408360738","Type":"IssuesEvent","CreatedAt":"2024-11-01T00:46:29","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13902","RelatedDescription":"Opened issue \"warn when protocolVersion used with local source\" (#13902) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, Visual Studio Package Management UI, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nIn NuGet.Config files, `packageSources` can have `protocolVersion` attributes. However, this is only intended for HTTP feeds. There's no warning when used on local sources, despite it potentially causing issues (see https://github.com/NuGet/Home/issues/13901).\n\n### Desired Behavior\n\nThere should be a warning somewhere if `protocolVersion` is used on a local source\n\n### Additional Context\n\nsee https://developercommunity.visualstudio.com/t/Visual-Studio-2022-throws-exception-NU1/10778056"},{"Id":"43408126184","Type":"IssuesEvent","CreatedAt":"2024-11-01T00:31:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13901","RelatedDescription":"Opened issue \"Restore with local source and protocolVersion=3 causes NU1900 warnings\" (#13901) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, Visual Studio Package Management UI\n\n### Product Version\n\nNuGet 6.11\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nHave a local source added where `protocolVersion=\"3\"` is also specified. For example, `<add key=\"local\" value=\"nupkgs\" protocolVersion=\"3\" />`.\r\n\r\nRestore will result in a bunch of NU1900 warnings:\r\n\r\n> Warnung (active) - NU1900 - Error occurred while getting package vulnerability data: Object reference not set to an instance of an object.\r\n\r\n\n\n### Verbose Logs\n\n```shell\nOriginally reported in VS' Developer Community: https://developercommunity.visualstudio.com/t/Visual-Studio-2022-throws-exception-NU1/10778056\n```\n"},{"Id":"43404828834","Type":"IssuesEvent","CreatedAt":"2024-10-31T21:19:47","Actor":"DmitryLukyanov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13899","RelatedDescription":"Opened issue \"Creating a package for non sdk project with IncludeReferencedProject gives System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\" (#13899) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet Version: 6.9.1.3\n\n### Worked before?\n\nyes, few months ago\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nCommand that I run:\r\n\r\n>nuget pack \"project.csproj\"  -SolutionDirectory \"Solution\" -PackagesDirectory \"Solution/packages\"  -IncludeReferencedProjects -OutputDirectory artifacts -Verbosity detailed -Properties Configuration=Debug\r\n\r\nthe project has references on other nugets as well as on the projects. In some cases I see the output like:\r\n\r\n>Found packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nThe given key was not present in the dictionary.\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.ThrowHelper.ThrowKeyNotFoundException()\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessDependencies(PackageBuilder builder)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\nThis command worked few months ago. Also it works if I remove the option `IncludeReferencedProjects`. Any ideas how can it be fixed?\n\n### Verbose Logs\n\n```shell\nNuGet Version: 6.9.1.3\r\nAttempting to build package from 'project.csproj'.\r\nMSBuild auto-detection: using msbuild version '17.11.9.46202' from 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'Solution\\Project\\bin\\Debug'.\r\nAdd file 'Solution\\Project\\bin\\Debug\\Project.dll' to package as 'lib\\net452\\Project.dll'\r\nWARNING: NU5118: File 'Solution\\DependencyProject\\Images\\loaderbar.gif' is not added because the package already contains file 'content\\Images\\loaderbar.gif'\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nFound packages.config. Using packages listed as dependencies\r\nThe given key was not present in the dictionary.\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.ThrowHelper.ThrowKeyNotFoundException()\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessDependencies(PackageBuilder builder)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder builder)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\n```\n"},{"Id":"43403805134","Type":"IssuesEvent","CreatedAt":"2024-10-31T20:36:56","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12253","RelatedDescription":"Closed issue \"Satellite assemblies for three-letter languages are not copied from NuGet package\" (#12253) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Satellite-assemblies-for-three-letter-la/10203830)._\r\n\r\n---\r\nSatellite assemblies for cultures with three-letter language codes, like “sma-NO” with “Sami, Southern (Norway)” provided in an NuGet package are not copied to the build output directory as two-letter language code cultures as “nb-NO” with “Norwegian Bokmål (Norway)” are. The three-letter language code satellite assembly is included in the NuGet package, and is located in the expected “sma-NO” subdirectory, next to two-letter language code satellite assemblies:\r\n\r\n.nuget\\packages\\package.name\\1.1.8\\lib\\netstandard2.0\r\n\r\nWhen referencing projects within the same solution, without the use of a NuGet package, three-letter language code satellite assemblies are copied to the output directory as expected.\r\n\r\nThis issue has been observed over time with VS 17.3.x and is still not working with 17.4.1.\r\n\r\n---\r\n\r\nI can repro this issue.\r\n![image](https://user-images.githubusercontent.com/8766776/202533872-8bfbacc6-3cef-4cbf-9ede-022cdbfe7e2d.png)\r\n![image](https://user-images.githubusercontent.com/8766776/202534212-7748897b-235e-42b7-b88c-10187fbb0179.png)\r\n\r\nSee original VSissue for repro steps and code."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-11-03T03:30:19.1204132Z","RunDurationInMilliseconds":851}