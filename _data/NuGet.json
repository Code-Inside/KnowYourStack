{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13011240195","Type":"PullRequestEvent","CreatedAt":"2020-07-24T22:50:50","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8123","RelatedDescription":"Merged pull request \"Add validtion readme \" (#8123) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* add validation readme \r\n\r\n\r\nAddresses NuGet/Engineering#2342"},{"Id":"13011235148","Type":"PullRequestEvent","CreatedAt":"2020-07-24T22:49:46","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8120","RelatedDescription":"Merged pull request \"refactor packageuploadservice\" (#8120) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nseparate validation before uploading packages\r\n\r\nadditional work need to be done in terms of separating validation in validation service\r\n\r\nAddresses NuGet/Engineering#2342"},{"Id":"13002630795","Type":"IssuesEvent","CreatedAt":"2020-07-24T04:02:23","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7649","RelatedDescription":"Closed issue \"Newly pushed packages that are vulnerable should be marked vulnerable on upload/push\" (#7649) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13001357963","Type":"PullRequestEvent","CreatedAt":"2020-07-23T23:30:33","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8125","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.07.23] RI dev to master\" (#8125) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13001106384","Type":"IssuesEvent","CreatedAt":"2020-07-23T22:46:33","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8126","RelatedDescription":"Opened issue \"Validate the file size for embedded readme \" (#8126) at NuGet/NuGetGallery","RelatedBody":"Validate the file size for embedded readme before uploading\n\nCurrently, we took same file size limitation from icon files in gallery implementation.\n\nReadme file size need to be define and re-apply to gallery "},{"Id":"13000479119","Type":"PullRequestEvent","CreatedAt":"2020-07-23T21:15:48","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8125","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.07.23] RI dev to master\" (#8125) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13000419930","Type":"PullRequestEvent","CreatedAt":"2020-07-23T21:08:28","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8124","RelatedDescription":"Merged pull request \"Revert \"Use protected configuration provider instead of reflection\" (#8098)\" (#8124) at NuGet/NuGetGallery","RelatedBody":"This reverts commit e6d6dc88d316f93fb21ff5081c581e3f19f305c0.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13011067448","Type":"IssuesEvent","CreatedAt":"2020-07-24T22:15:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7147","RelatedDescription":"Closed issue \"PrivateAssets does not work for non-SDK csproj\" (#7147) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nVisual Studio & MSBuild\r\n\r\nNuGet version (x.x.x.xxx):\r\n4.6.0\r\n\r\nVS version (if appropriate):\r\n15.7.5\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nwin10 enterprise v1803 (17134.191)\r\n\r\nWorked before? If so, with which NuGet version:\r\nn/a\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a .NET Framework class library project\r\n2. Add a NuGet reference using `PackageReference`\r\n3. Unload project file\r\n4. Edit `PackageReference` in project file to add `PrivateAssets=\"all\"`\r\n5. Reload project file\r\n6. Build project \r\n\r\n### Expected result\r\nOnly the project's assembly is in the output directory\r\n\r\n### Actual result\r\nThe NuGet reference's assembly is also in the output directory\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n[msbuild.log](https://github.com/NuGet/Home/files/2229662/msbuild.log)\r\n\r\n### Sample Project\r\n\r\n[frameworklibrary.zip](https://github.com/NuGet/Home/files/2229659/frameworklibrary.zip)\r\n\r\n"},{"Id":"13010966170","Type":"IssuesEvent","CreatedAt":"2020-07-24T21:57:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9808","RelatedDescription":"Closed issue \"NuGet.Client libraries labeling should not use rtm, but rc instead\" (#9808) at NuGet/Home","RelatedBody":"`rtm` has a confusing meaning, given that it suggests it's a stable version, but the fact that the versioning has a label makes it a prerelease. \r\n\r\nToward the end of the previews, we frequently change our labeling from previews to RTM. We should change it to rc instead."},{"Id":"13010926750","Type":"IssuesEvent","CreatedAt":"2020-07-24T21:50:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8352","RelatedDescription":"Closed issue \"OutOfMemoryException when using Package Manager UI\" (#8352) at NuGet/Home","RelatedBody":"Using VS nuget GUI to consolodate different versions of a package crashes the instance of VS. Occurs in 2017, 2019 and 2019 int preview.\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/608137/crash-when-consolodating-nuget-packages.html\r\nVSTS ticketId: 918791_\r\n_These are the original issue comments:_\r\n\r\nFiona Niu[MSFT] on 6/17/2019, 01:10 AM (31 days ago): <p>Thank you for taking the time to log this issue!</p><p> I've tried to reproduce and investigate using the description, and attachments already provided. Unfortunately those aren't enough and more information is needed in order to investigate it further.</p><p> The easiest way to provide all the information is to use the Visual Studio Feedback Tool. This will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace).</p><p> Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool:</p><ul><li> Open Visual Studio Feedback tool.</li><li>Click the banner letting you know that you have problems requesting your attention.</li><li>Click this problem from the list</li><li>Click &quot;View their request and respond&quot; from the problem details banner</li><li>Add a comment, in the Attachments/Record: click Start Recording</li><li>When the Steps Recorder tool appears, perform the steps that reproduce the problem.</li><li>When you're done, choose the Stop Record button.</li><li>Wait a few minutes for Visual Studio to collect and package the information that you recorded.</li><li>Submit. You will be able to see the comment on Developer Community. For security reasons, your files come directly to us and don't appear on Developer Community.</li></ul><p> For the full instructions, please see: <a target=\"_blank\"> https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info </a>  . For information about what data is collected, see <a target=\"_blank\"> https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect </a>  </p><p> We look forward to hearing from you!</p>\r\n\r\nbrynhr [MSFT] on 6/17/2019, 02:25 AM (31 days ago): <p>Recording of crash attached. Please let me know if it uploaded.</p>\r\n\r\nFiona Niu[MSFT] on 6/17/2019, 06:48 PM (30 days ago): <p>Thanks a lot for providing the information. We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n_These are the original issue solutions:_\r\n(no solutions)\r\n\r\nInternal [issue](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1092845/?triage=true) with data"},{"Id":"13009537471","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:36:46","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5548","RelatedDescription":"Closed issue \"Nuget pack with invalid AssemblyInformationalVersion value reports \"description is required\"\" (#5548) at NuGet/Home","RelatedBody":"Hi\r\n\r\nThere seems to be an issue with the nuget pack option when the **AssemblyInformationalVersion** contains an invalid value. I had presumed \"beta\" was an acceptable value and then I see \"author/description is required\" which is the error from issuing the \"nuget pack\" command. This is misleading.\r\n\r\nTo recreate\r\n\r\n1. Start a new project\r\n2. Edit AssemblyInfo.cs and add [assembly: AssemblyInformationalVersion(\"beta\")]\r\n3. Build the project\r\n4. generate a nuspec file by issuing the command \"nuget spec {project}.csproj\"\r\n5. pack (and build) using the command \"nuget pack {project}.csproj -Build\"\r\n6. Observe error message states \"Author/Description is required\"\r\n\r\nAt the very least the error message here is misleading.\r\n\r\nNuGet Version: 4.1.0.2450\r\nSolution built with VS 14.0.25123.00 Update 2\r\nSolution targetting .Net framework v4.5.2\r\nWritten in C# not VB (although I'm not sure this matters)\r\n\r\n\r\nUsing the nuspec file\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <owners>$author$</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>$description$</description>\r\n    <releaseNotes>Initial Release of Project.Name</releaseNotes>\r\n    <copyright>Copyright 2017</copyright>\r\n    <tags>Project Project.Name</tags>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\nAn invalid AssemblyInfo.cs file would be...\r\n```\r\n\r\nusing System.Reflection;\r\nusing System.Runtime.InteropServices;\r\n\r\n[assembly: AssemblyTitle(\"A.Title.Here\")]\r\n[assembly: AssemblyDescription(\"Any description.\")]\r\n[assembly: AssemblyConfiguration(\"\")]\r\n[assembly: AssemblyCompany(\"Company.Name\")]\r\n[assembly: AssemblyProduct(\"Project.Name\")]\r\n[assembly: AssemblyCopyright(\"Copyright\")]\r\n[assembly: AssemblyInformationalVersion(\"beta\")]\r\n[assembly: AssemblyTrademark(\"\")]\r\n[assembly: AssemblyCulture(\"\")]\r\n[assembly: ComVisible(false)]\r\n\r\n[assembly: Guid(\"e37b2b24-6b0a-4ad9-a2d8-a33c1f22b829\")]\r\n\r\n[assembly: AssemblyVersion(\"1.0.5.0\")]\r\n[assembly: AssemblyFileVersion(\"1.0.5.0\")]\r\n```\r\n\r\nIssuing the following commands yields the following results...\r\nnuget pack Project.csproj -Build -Verbosity detailed\r\n\r\nUsing '{something}.nuspec' for metadata.\r\n**System.Exception: Authors is required.\r\nDescription is required.**\r\n   at NuGet.Packaging.Manifest.Validate(Manifest manifest)\r\n   at NuGet.Packaging.Manifest.ReadFrom(Stream stream, Func`2 propertyProvider, Boolean validateSchema)\r\n   at NuGet.CommandLine.ProjectFactory.ProcessNuspec(PackageBuilder builder, String basePath)\r\n   at NuGet.CommandLine.ProjectFactory.CreateBuilder(String basePath, NuGetVersion version, String suffix, Boolean buildIfNeeded, PackageBuilder build\r\ner)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\nNote the error above is misleading, as the problem is an invalid attribute, but the description is A-OK. Adjusting the AssemblyInformationalVersion attribute as below resolves the issue.\r\n\r\n[assembly: AssemblyInformationalVersion(\"1.0-beta\")]\r\nnuget pack Project.csproj -Build -Verbosity detailed\r\nSuccessfully created package\r\n\r\n\r\n"},{"Id":"13009445550","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:25:19","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9655","RelatedDescription":"Closed issue \"VS watches / writes packages.lock.json too aggressively\" (#9655) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.5.0\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): 16.5.4\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 1909 18363.836\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Store `packages.lock.json` in version control as described on https://github.com/NuGet/Home/wiki/Enable-repeatable-package-restore-using-lock-file#solution---summary\r\n2. Open Visual Studio\r\n3. Use source control tool (e.g. pull latest changes, rebase)\r\n4. Observe that Visual Studio aggressively watches / writes / tries to undo `packages.lock.json` causes all sorts of troubles. (E.g. from harmless but very annoying: trigger reload of projects when source control temporarily changes `packages.lock.json`; to very problematic when it interferes with ongoing operations like rebase basically causing data corruption.)\r\n\r\nExpected behavior: VS should not modify `packages.lock.json` unless asked to. VS should not watch `packages.lock.json`  when VS is not active."},{"Id":"13009400379","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:19:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7280","RelatedDescription":"Closed issue \"Warnings not displayed in presence of valid and invalid nuget source.\" (#7280) at NuGet/Home","RelatedBody":"**Description:**\r\nI added an invalid nuget source and then added a nugget package with an old version in the project. I then closed the solution and reopened it. The package showed an update available and installed it successfully without a warning.\r\n\r\n**Steps to reproduce:**\r\n1. Create an application.\r\n2. Add a Package source pointing to an invalid directory as secondary package source (not the selected one).\r\n3. Add a package to project having update available. for ex NUnit 2.6.1\r\n4.  Close and reopen project\r\n5. Update the package.\r\n\r\n**Actual Behavior:**\r\nThe package updated successfully.\r\n\r\n**Expected Behavior:**\r\nThe package should be updated with warnings/errors.\r\n\r\n**Test Plan Link:**\r\nhttps://testrail.xamarin.com/index.php?/plans/view/56083\r\n\r\n**Test Case link:**\r\nhttps://testrail.xamarin.com/index.php?/tests/view/24974426&group_by=tests:assignedto_id&group_order=desc&group_id=95\r\n\r\n**Build info:**\r\nVisual Studio Enterprise 2017 for Mac (Preview)\r\nVersion 7.7 Preview (7.7 build 762)\r\n\r\n**Build gist:**\r\nhttps://gist.github.com/p-lad/ab57d34a0ae37e0fc10a55981abcf105\r\n\r\n**Build taken:**\r\nhttps://devdiv.visualstudio.com/_apis/resources/Containers/2290021?itemPath=drop%2FVisualStudioForMac-Preview-7.7.0.762.dmg\r\n\r\n**Package console logs:**\r\nhttps://gist.github.com/p-lad/70dd810ea3e2f398fc55fd1b9dc2058f\r\n\r\n**Screencast link:**\r\nhttps://www.screencast.com/t/l4JxRtoOPUO\r\n\r\n**Reproducibility: 100%**\r\n\r\n**Attached logs as well.**\r\n[IDE logs.zip](https://github.com/NuGet/Home/files/2359542/IDE.logs.zip)\r\n\r\n\r\n"},{"Id":"13009357201","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:14:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7007","RelatedDescription":"Closed issue \"nuget.config source filtering by namespace\" (#7007) at NuGet/Home","RelatedBody":"I think it could be useful if you can specify for a particular source in nuget.config, what namespaces/names of packages should be queried for that source.\r\n\r\nThat way, if you had an internal NuGet source as well as the public nuget.org source, you could configure NuGet not to bother querying nuget.org for your internal packages.\r\n\r\neg. something like:\r\n\r\n```\r\n<configuration>\r\n  <activePackageSource>\r\n    <add key=\"All\" value=\"(Aggregate source)\" />\r\n  </activePackageSource>\r\n  <packageSources>\r\n    <add key=\"TeamCity\" value=\"http://build.local:8111/guestAuth/app/nuget/v1/FeedService.svc/\" />\r\n    <add key=\"MyGet Feed\" value=\"https://www.myget.org/F/example/api/v3/index.json\" />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </packageSources>\r\n  <filters>\r\n    <add key=\"TeamCity\" value=\"MyPackages.*\" />\r\n  </filters>\r\n</configuration>\r\n```\r\n\r\nWith the above configuration, when NuGet was asked to restore a package named \"MyPackages.Blah\", it would only query the TeamCity source"},{"Id":"13009278300","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:04:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7791","RelatedDescription":"Closed issue \"dotnet add package should understand tfm compatibility\" (#7791) at NuGet/Home","RelatedBody":"_From @themindfulcoder on February 13, 2019 10:55_\n\n## Steps to reproduce\r\nInstall latest 2.1.503 sdk\r\nCreate new project ```dotnet new mvc```\r\nEnsure the project targets ```netcoreapp2.1```\r\nAdd a package reference ```dotnet add package Microsoft.Extensions.Logging```\r\n\r\n```\r\n  Writing C:\\Users\\user\\AppData\\Local\\Temp\\tmp68F7.tmp\r\ninfo : Adding PackageReference for package 'Microsoft.Extensions.Logging' into project 'C:\\test-cli\\test-cli.csproj'.\r\nlog  : Restoring packages for C:\\test-cli\\test-cli.csproj...\r\ninfo :   CACHE https://api.nuget.org/v3-flatcontainer/microsoft.extensions.logging/index.json\r\nwarn : Detected package version outside of dependency constraint: Microsoft.AspNetCore.App 2.1.1 requires Microsoft.Extensions.Logging (>= 2.1.1 && < 2.2.0) but version Microsoft.Extensions.Logging 2.2.0 was resolved.\r\nerror: Version conflict detected for Microsoft.Extensions.Configuration. Install/reference Microsoft.Extensions.Configuration 2.2.0 directly to project test-cli to resolve this issue.\r\nerror:  test-cli -> Microsoft.Extensions.Logging 2.2.0 -> Microsoft.Extensions.Configuration.Binder 2.2.0 -> Microsoft.Extensions.Configuration (>= 2.2.0)\r\nerror:  test-cli -> Microsoft.AspNetCore.App 2.1.1 -> Microsoft.Extensions.Configuration (>= 2.1.1 && < 2.2.0).\r\ninfo : Package 'Microsoft.Extensions.Logging' is compatible with all the specified frameworks in project 'C:\\test-cli\\test-cli.csproj'.\r\ninfo : PackageReference for package 'Microsoft.Extensions.Logging' version '2.2.0' added to file 'C:\\test-cli\\test-cli.csproj'.\r\ninfo : Committing restore...\r\nlog  : Generating MSBuild file C:\\test-cli\\obj\\test-cli.csproj.nuget.g.props.\r\ninfo : Writing lock file to disk. Path: C:\\test-cli\\obj\\project.assets.json\r\nlog  : Restore failed in 714.05 ms for C:\\test-cli\\test-cli.csproj.\r\n```\r\n\r\n\r\n## Expected  behavior\r\n\r\nThe package reference is not included\r\nOR\r\nThe package reference is included with the compatible version 2.1.1\r\n\r\n## Actual behavior\r\n\r\nThe package reference is included with a conflicting version which is framework compatible.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.503\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\n\n_Copied from original issue: dotnet/cli#10771_"},{"Id":"13009276078","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:04:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9795","RelatedDescription":"Closed issue \"dotnet list package suggests packages that are not compatible with the target framework\" (#9795) at NuGet/Home","RelatedBody":"NuGet product used:\r\ndotnet cli\r\n\r\ndotnet.exe --version:\r\n3.1.301\r\n\r\nWorked before? If so, with which NuGet version:\r\nno\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nThis can be reproduced with the [System.Management.Automation](https://www.nuget.org/packages/System.Management.Automation) package, which has an [unlisted version](https://www.nuget.org/packages/System.Management.Automation/6.1.7601.17515) that works on the full .net framework, although any package that has dropped support for an older framework in newer versions would work. The 6.x.x versions of this package target netcoreapp2.1 while 7.0.x target netcoreapp3.1, for example.\r\n\r\n1. `dotnet new console`\r\n2. change the target framework to net48\r\n3. `dotnet add package System.Management.Automation -v 6.1.7601.17515`\r\n4. `dotnet list package --outdated`\r\n\r\n## Actual output:\r\nThe tool suggests upgrading to [7.0.2](https://www.nuget.org/packages/System.Management.Automation/7.0.2), which targets netcoreapp3.1, and is therefore not compatible with this project.\r\n```\r\nProject `...` has the following updates to its packages\r\n   [net48]:\r\n   Top-level Package                   Requested        Resolved         Latest\r\n   > System.Management.Automation      6.1.7601.17515   6.1.7601.17515   7.0.2\r\n```\r\n\r\n## Expected output\r\nThe tool should suggest package versions that are compatible with the target framework."},{"Id":"13009239380","Type":"IssuesEvent","CreatedAt":"2020-07-24T18:00:03","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9364","RelatedDescription":"Closed issue \"Nuget does not add files to SDK-style project\" (#9364) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: Visual Studio UI\r\n\r\nNuGet version: 5.4.0\r\n\r\ndotnet.exe --version: 3.1.101\r\n\r\nVS version: VS Community 2019 - 16.4.6\r\n\r\nOS version: Windows 10 1909 18363.720\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. This package: https://www.nuget.org/packages/WPFThemes.DarkBlend/1.0.8/\r\n(https://github.com/DanPristupov/WpfExpressionBlendTheme) should be supposed to add some files to my project, but I'm using the new SDK-style project file, and looks like it failed to add files\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...):  [log.txt](https://github.com/NuGet/Home/files/4406561/log.txt)\r\n\r\n"},{"Id":"13009058057","Type":"IssuesEvent","CreatedAt":"2020-07-24T17:38:05","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4699","RelatedDescription":"Closed issue \"dotnet add package - support for NuGet \"Pre\" version\" (#4699) at NuGet/Home","RelatedBody":"From @yooakim at https://github.com/dotnet/cli/issues/5752\r\n\r\nI'm not sure this is a bug but it would be nice if one could add NuGet packages with the `-pre` version as used by NuGet.\r\n\r\n## Steps to reproduce\r\n\r\ndotnet add package Swashbuckle --version pre\r\n\r\n## Expected  behavior\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">                                                   \r\n                                                                                        \r\n  <PropertyGroup>                                                                       \r\n    <TargetFramework>netcoreapp1.1</TargetFramework>                                    \r\n  </PropertyGroup>                                                                      \r\n                                                                                        \r\n  <ItemGroup>                                                                           \r\n    <Folder Include=\"wwwroot\\\" />                                                       \r\n  </ItemGroup>                                                                          \r\n                                                                                        \r\n  <ItemGroup>                                                                           \r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.0\" />                 \r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.1\" />             \r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"1.1.0\" />   \r\n    <PackageReference Include=\"Swashbuckle\" Version=\"6.0.0-beta902\" />                  \r\n                                                                                        \r\n  </ItemGroup>                                                                          \r\n                                                                                        \r\n</Project>                                                                              \r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nC:\\Code\\Coach\\src\\Coach.API [master]> dotnet add package Swashbuckle --version pre\r\nMicrosoft (R) Build Engine version 15.1.545.13942\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Writing C:\\Users\\Joakim\\AppData\\Local\\Temp\\tmp2F1A.tmp\r\nerror: 'pre' is not a valid version string.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n"},{"Id":"13008070824","Type":"IssuesEvent","CreatedAt":"2020-07-24T15:46:55","Actor":"DhanvannthVP","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9642","RelatedDescription":"Closed issue \" error CS0234: The type or namespace name 'Practices' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?) \" (#9642) at NuGet/Home","RelatedBody":"i am new to nuget. i am downloading the packages from packages.config. \r\n\r\nusing IBM.Data.DB2; could see  in .csfile.\r\n\r\nMentioned in packages.config to pull it from artifactory\r\n  <package id=\"IBM.Data.DB2\" version=\"10.0.5.5\" targetFramework=\"net451\" />\r\n\r\n error CS0234: The type or namespace name 'Practices' does not exist in the namespace 'Microsoft' (are you missing an assembly reference?) \r\nIt s downloading but am getting same error CS0234. please help me what is the error..\r\n\r\nEven  IBM.Data.DB2.dll in artifactory. how to find the target framework and mention in packages.config\r\n\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-25T05:30:39.2972921Z","RunDurationInMilliseconds":1676}