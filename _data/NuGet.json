{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20625612259","Type":"IssuesEvent","CreatedAt":"2022-03-07T22:10:06","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8919","RelatedDescription":"Closed issue \"[NuGet.org Bug]: A11y_NuGet Service_Existing User_API Keys_Reflow : On Zooming the screen to 400% two scroll bar are appearing.\" (#8919) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nFrom https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1439351\n\n### Repro Steps\n\n1. Hit the https://www.nuget.org/\r\n2. Tab navigate to \"Sign in\" control and hit enter.\r\n3. Tab navigate to \"Sign in with Microsoft\" control and hit enter.\r\n4.  Select “API Keys” from the Profile Dropdown and hit enter.\r\n5.  \"API Keys\" screen gets opened.\r\n6. Zoom the screen to 400% observe that two scroll are appearing.\r\n\r\nWhen we zoom the screen to 400% two scroll bars are appearing.\n\n### Expected Behavior\n\nOnly one scroll bar should appear when we zoom the screen to 400% as its not a complex grid. \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20624904692","Type":"IssuesEvent","CreatedAt":"2022-03-07T21:21:23","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8801","RelatedDescription":"Closed issue \"[Bug]: Image from camo.githubusercontent.com not displayed in NuGet Gallery\" (#8801) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe README for my package [Buildvana.Sdk](https://www.nuget.org/packages/Buildvana.Sdk) contains a badge hosted on `camo.githubusercontent.com`. The image is not displayed, despite `camo.githubusercontent.com` being [listed as a trusted domain](https://docs.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges).\r\n\r\nThe complete URL for the image is https://camo.githubusercontent.com/4033ac1880ed401cc95b630c4994c1f2381101063742dfb4b7bd136966889fc5/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6275696c6476616e612f6275696c6476616e612e73646b2f6261646765\r\n\n\n### Repro Steps\n\n1. Open https://www.nuget.org/packages/Buildvana.Sdk\r\n2. Observe that the \"Readme\" section contains the warning \"Some images are not displayed as they are not from trusted domains.\"\r\n3. Click on the \"Show more...\" link under the warning.\r\n4. Observe that the leftmost badge in the second row of badges is missing.\r\n5. Verify that the badge appears correctly when looking at the [README on GitHub](https://github.com/Buildvana/Buildvana.Sdk/blob/main/README.md).\r\n\n\n### Expected Behavior\n\nThe badge should be displayed, as it comes from a trusted domain.\n\n### Screenshots\n\nThis is the relevant part of the NuGet Galòlery page for Buildvana SDK:\r\n![NuGet-gallery](https://user-images.githubusercontent.com/139223/133036058-643880bf-c5d3-4a87-9f24-b439cc09687b.png)\r\n\r\nThis is how the badge appears on GitHub:\r\n![GitHub](https://user-images.githubusercontent.com/139223/133036266-cdb743c9-ee2c-4ebe-b646-4085340a9ed8.png)\r\n\n\n### Additional Context and logs\n\nThe source for the badge in the README file is as follows:\r\n\r\n```Markdown\r\n[![CodeFactor](https://www.codefactor.io/repository/github/buildvana/buildvana.sdk/badge)](https://www.codefactor.io/repository/github/buildvana/buildvana.sdk)\r\n```\r\n\r\nAs you can see, the badge URL points to `codefactor.io`, which is not in the list of trusted domains; from there it gets redirected to `camo.githubusercontent.com`. This is the most probable cause of the problem: the NuGet Gallery checks URLs in the README source, finds an untrusted domain, and strips the image URL from the displayed README.\r\n\r\nA generic solution for _all_ redirected image URLs would entail trying to load every image seemingly coming from an untrusted domain on the NuGet Gallery server, every time a README has to be rendered. I don't know if this means when displaying a package's page (i.e. Markdown is rendered at display time), or at upload time (i.e. Markdown is rendered once and cached). If the last redirection results in an actual image, coming from a trusted domain, the actual image URL should replace the source URL in the rendered README.\r\n\r\nOf course, just adding `codefactor.io` to the list of trusted domains would solve the present issue as well.\r\n"},{"Id":"20624902911","Type":"IssuesEvent","CreatedAt":"2022-03-07T21:21:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8503","RelatedDescription":"Closed issue \"[README] Table rendering can be better\" (#8503) at NuGet/NuGetGallery","RelatedBody":"Repro:\r\n\r\nTest package: https://int.nugettest.org/packages/license-expression-test1\r\n\r\nAdd this markdown table into a readme file:\r\n```\r\nColumn 1 | Column 2 | Column 3\r\n| :----- | :----: | -----:\r\na  | b | c\r\n1  | 2 | 3\r\naaaaa | bbbbb | ccccccc \r\n```\r\nThe manage package page shows:\r\n<img src=\"https://user-images.githubusercontent.com/41028779/113782494-222e3f00-96e7-11eb-8f00-e17eef5d9674.png\" width=\"250\">\r\n\r\nThe package detail page shows:\r\n<img src=\"https://user-images.githubusercontent.com/41028779/113784920-075dc980-96eb-11eb-861a-9681b876123c.png\" width=\"250\">\r\n\r\nCould the rendering be better, and share the same appearance between two pages? Tweaking Bootstrap, CSS may be helpful.\r\n\r\n"},{"Id":"20624898025","Type":"IssuesEvent","CreatedAt":"2022-03-07T21:20:57","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8868","RelatedDescription":"Closed issue \"NuGet.org allows all images, including badges, from the following trusted domains to be rendered (but doesn't)\" (#8868) at NuGet/NuGetGallery","RelatedBody":"[this page](https://docs.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges) indicates that the following domains are allowed including travis-ci, except the travis-ci domain listed on that pages is `api.travis-ci.<org/com>` but the images used for the build status badges are not `api.travis-ci.com` but simply `travis-ci.com` which means nuget blocks the badge on any documentation package readme's (including mine as shown below).\r\n\r\nImage from github readme.md\r\n![image](https://user-images.githubusercontent.com/324971/140440425-761402ae-9643-4bd5-80a0-d5d5ad1940b9.png)\r\n\r\nimage on nuget which should be pulling from github readme.md but has travis-ci build image blocked\r\n![image](https://user-images.githubusercontent.com/324971/140440750-72f1bfbf-dad0-440e-b886-56820e5e58bb.png)\r\n\r\n\r\n"},{"Id":"20591734946","Type":"IssuesEvent","CreatedAt":"2022-03-05T00:06:51","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8975","RelatedDescription":"Closed issue \"Remove original package details page\" (#8975) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nCurrently Gallery has two versions of the package details page due to a recent redesign. We maintain both versions currently.\n\n### The Elevator Pitch\n\n Now that we've shipped the redesign, we should drop the previous version.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20591696754","Type":"IssuesEvent","CreatedAt":"2022-03-05T00:01:54","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8886","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Allow the user to select precisely the code they want\" (#8886) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nHello,\r\n\r\nYou can't select precisely the text you want in the \"command\" box.\r\n\r\nhttps://user-images.githubusercontent.com/4760796/142740240-77277e23-4a71-4002-88cf-bd5800e82fd0.mp4\r\n\r\nThis is annoying when you already have the manifest set up in your repo and just want to copy the second line.\r\n\r\nFix: \r\n\r\nOn the CSS class `install-command-row`, remove all the rules about `user-select: all;`\r\n\r\nIf the user, wants to copy the whole snippet he can use the Copy button on the right.\n\n### Repro Steps\n\n1. Open https://www.nuget.org/packages/fantomas-tool/4.6.0-alpha-008\r\n2. Click on .NET CLI (local)\r\n3. Try to select only the second line\r\n\r\n\n\n### Expected Behavior\n\nYou should be able to select only the second line if you want\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20627425061","Type":"PullRequestEvent","CreatedAt":"2022-03-08T00:44:32","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11391","RelatedDescription":"Merged pull request \"Central Package Management - Transitive Pinning\" (#11391) at NuGet/Home","RelatedBody":"This document contains the behaviors known today of the central package management's transitive pinning feature & has a few questions/proposal that we would love to get your feedback on. Please feel free to drop a comment on this PR, or add a review yourself to help us.\r\n\r\n[Rendered Document](https://github.com/NuGet/Home/blob/75c2b5f5dd6e7ddee3e3e92ad00cf4e878cfcf87/proposed/2021/CentralPackageManagementTransitive.md)\r\n\r\nThank you! 😄"},{"Id":"20626943505","Type":"IssuesEvent","CreatedAt":"2022-03-07T23:59:17","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11648","RelatedDescription":"Closed issue \"Remove unneeded allocations parsing assets file\" (#11648) at NuGet/Home","RelatedBody":""},{"Id":"20625030061","Type":"IssuesEvent","CreatedAt":"2022-03-07T21:29:52","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11655","RelatedDescription":"Opened issue \"System.TypeInitializationException NuGetConsole.Host.PowerShell.dll!NuGetConsole.Host.PowerShell.Implementation\" (#11655) at NuGet/Home","RelatedBody":"NuGet.Client tracking issue for https://devdiv.visualstudio.com/DevDiv/_queries/edit/1365236/?triage=true"},{"Id":"20624546463","Type":"IssuesEvent","CreatedAt":"2022-03-07T20:58:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11654","RelatedDescription":"Opened issue \"Avoid calling CreateLockFileTargetLibrary twice when AssetTargetFallback is used\" (#11654) at NuGet/Home","RelatedBody":""},{"Id":"20624445226","Type":"PullRequestEvent","CreatedAt":"2022-03-07T20:51:54","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11569","RelatedDescription":"Merged pull request \"Package Version Overrides for Central Package Management\" (#11569) at NuGet/Home","RelatedBody":"When specifying package versions in a central location, developers want the to be able to override versions for a particular project. This is useful when a project is not directly tied to the rest of the repo and needs to use a newer version of a package. Additionally, some projects have a need to specify an older version of a package when targeting an older version of .NET Framework.\r\n\r\nThis proposal introduces the ability to override a centrally defined package version on a <PackageReference /> item in a well documented and supported way.\r\n\r\n[Rendered Proposal](https://github.com/NuGet/Home/blob/7636cd25480e694d53aab29ed06204728e78574c/proposed/2022/version-overrides.md)\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"20623527096","Type":"IssuesEvent","CreatedAt":"2022-03-07T19:54:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9765","RelatedDescription":"Closed issue \"RestoreIgnoreFailedSources=true still gives warnings\" (#9765) at NuGet/Home","RelatedBody":"I am trying to suppress NU1801 warning (Unable to load the service index for source…) If one of the Nuget sources is not accessible.\r\nI have tried the following:\r\n1. Provided this as one of the property to Restore Target  \r\n a. RestoreIgnoreFailedSources=true\r\n2. Also added `<NoWarn>NU1801</NoWarn>` \r\n3 .Also pass `/p:NoWarn=NU1801`\r\n\r\nNugetVersion = latest from nuget.com\r\ndotnet = 3.1.301\r\nVS = 16.6.3\r\nOS = Win10\r\n"},{"Id":"20623527121","Type":"IssuesEvent","CreatedAt":"2022-03-07T19:54:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7245","RelatedDescription":"Closed issue \"Errors due to missing/failing sources are inconsistently shown in solution explorer vs the error list \" (#7245) at NuGet/Home","RelatedBody":"From email:\r\n\r\nThere is a more widespread issue here of NuGet warnings never showing up in the error list. We see this in every project we maintain.\r\n•\tCan't connect to NuGet feed? No error from that, but hundreds of errors from missing types\r\n•\tCan't find the right package version? No errors from the restore, just missing types or methods\r\nIt's extremely frustrating to kick off a build that needs a new version of a dependency and just see a wall of errors, more so when the error that matters \"we couldn't even find your feed\" isn't even in the list. I think that:\r\n•\tNuGet errors and warnings should always appear in the errors list.\r\n•\tWe should never see a yellow warning symbol on the references tree unless it's also in the errors list.\r\n\r\n------------\r\nWe have noticed (guess since introducing .net core 2.1) increasing number of warnings related to nuget in project dependency hive. \r\n![image](https://user-images.githubusercontent.com/14800916/44736473-2d874b80-aaa4-11e8-9665-f90deabcbe24.png)\r\n\r\nIn many cases we get a more detailed message about issue. But I see this warning very often without any message as shown in picture above.\r\nWould it be possible to always provide error (warning), which caused this issue, assuming it is an issue?\r\nIs there any other way to figure out the issue? Enabling build full trace?\r\n"},{"Id":"20623511253","Type":"IssuesEvent","CreatedAt":"2022-03-07T19:53:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11652","RelatedDescription":"Closed issue \"IVsNuGetProjectUpdateEvents.StartSolutionRestore should emit file paths, not file name.\" (#11652) at NuGet/Home","RelatedBody":""},{"Id":"20623500932","Type":"IssuesEvent","CreatedAt":"2022-03-07T19:52:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11651","RelatedDescription":"Closed issue \"Disable NuGet.Protocol.Tests.LocalPackageSearchResourceTests.LocalPackageSearch_SearchAsync_SlowLocalRepository_WithCancellationToken_ThrowsAsync since it's flaky. \" (#11651) at NuGet/Home","RelatedBody":"Details in https://github.com/NuGet/Home/issues/11650"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":172,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-03-08T03:30:23.8781518Z","RunDurationInMilliseconds":1464}