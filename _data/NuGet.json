{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37604722505","Type":"IssuesEvent","CreatedAt":"2024-04-19T01:01:34","Actor":"gregsdennis","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9823","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Markdown links not rendered correctly\" (#9823) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nIt appears markdown links aren't being processed at all.\r\n\r\nThe text\r\n\r\n```\r\nThis library conforms to the IETF JSON Path specification [RFC 9535](https://www.rfc-editor.org/rfc/rfc9535.html).\r\n```\r\n\r\nshould be rendered as it does on GitHub:\r\n\r\nThis library conforms to the IETF JSON Path specification [RFC 9535](https://www.rfc-editor.org/rfc/rfc9535.html).\r\n\r\nHowever, it appears to be unprocessed and the plain text is rendering.\n\n### Repro Steps\n\nVisible with the package: https://www.nuget.org/packages/JsonPath.Net/1.0.0#readme-body-tab\n\n### Expected Behavior\n\nI expect the markdown link to be processed.\n\n### Screenshots\n\n<img width=\"660\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/2676804/91466bc4-28a3-4b98-9b89-407fd052e530\">\r\n\n\n### Additional Context and logs\n\nI'm setting this readme in the _.csproj_ file.  Maybe there's something going on with the XML translation and I'm just doing it wrong.\r\n\r\nhttps://github.com/gregsdennis/json-everything/blob/106ff1dcf91ff8d79b61dbedc1d0e1704b3e714e/JsonPath/JsonPath.csproj#L10-L16"},{"Id":"37602147049","Type":"PullRequestEvent","CreatedAt":"2024-04-18T22:28:44","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9926","RelatedDescription":"Opened pull request \"[UI] Add new themes into website\" (#9926) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Detail 1\r\n* Detail 2\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"37602082319","Type":"PullRequestEvent","CreatedAt":"2024-04-18T22:25:36","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9917","RelatedDescription":"Merged pull request \"[UI] Add new themes to Packages pages\" (#9917) at NuGet/NuGetGallery","RelatedBody":"Adds new styles to Package pages.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9880\r\nSpec: https://github.com/NuGet/Engineering/pull/5209\r\nMain Issue: https://github.com/NuGet/NuGetGallery/issues/8773\r\n\r\n** Adding screenshots asap"},{"Id":"37601559793","Type":"PullRequestEvent","CreatedAt":"2024-04-18T22:01:18","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9914","RelatedDescription":"Merged pull request \"[UI] Add new themes to User pages\" (#9914) at NuGet/NuGetGallery","RelatedBody":"Adds new styles to User pages.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9865 and  https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1985625\r\nSpec: https://github.com/NuGet/Engineering/pull/5209\r\nMain Issue: https://github.com/NuGet/NuGetGallery/issues/8773\r\n\r\n#### User Packages\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/98de0142-7506-4ec5-bf18-8264479c595b)\r\n\r\n#### Manage Organizations\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/e7d497dd-49b7-4d42-901e-2a61502d25ea)\r\n\r\n#### Api Keys\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/4726a434-34c1-482e-b84c-3870f8d84c65)\r\n\r\n#### Contact ( https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=86f20051-1835-446b-b283-b35a28cb6618&id=1985625)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/67c06812-de17-4fac-b303-3ee7fd173a93)\r\n\r\n\r\n"},{"Id":"37591687301","Type":"PullRequestEvent","CreatedAt":"2024-04-18T16:22:23","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9924","RelatedDescription":"Merged pull request \"Merge branch main into dev\" (#9924) at NuGet/NuGetGallery","RelatedBody":"This port's @agr's YAML pipeline fix."},{"Id":"37587225949","Type":"IssuesEvent","CreatedAt":"2024-04-18T14:30:16","Actor":"bruno-garcia","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9925","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Symbol Server: Can't find pdbs bundled in nupkg via the Symbol Server API\" (#9925) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nUnless packages are published via `snupkg`, using nuget.org's Symbol Server API doesn't result in finding symbols.\r\n\r\nSee: https://github.com/getsentry/symbolicator/issues/1437\n\n### Repro Steps\n\nUse the documented _alternative to symbol packages_:\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/standard/library-guidance/nuget#symbol-packages\r\n\r\nIn other words, instead of publishing a separate `snupkg`, copy the `pdb` to the output directory to let it get copied into the `nupkg` next to the `dll`.\r\n\r\nGoogle uses this approach here: https://github.com/googleapis/google-cloud-dotnet/blob/2f193795dd1daaba3ad6dd1f0f6b0c20c6597e6a/tools/DotnetToolProperties.xml#L8\n\n### Expected Behavior\n\nWhen a debugger (or a crash reporting service like [Sentry](https://sentry.io/welcome) tries to fetch the debug symbols for a DLL loaded from nuget.org, it finds them and downloads them.\r\n\r\nUnfortunately that doesn't happen. When using `snupkg`, it works as expected.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/727bf8fd-2d76-4f73-90f6-51b9a5259884)\r\n\r\nPDBs exist in the `nupkg`: https://nuget.info/packages/Google.Cloud.Storage.V1/4.10.0\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/9cee4c34-a2fd-4c1f-8722-3a41df111c3a)\r\n\n\n### Additional Context and logs\n\nWe use the Microsoft Symbol Server format to fetch symbols (worked for the other symbols on the screenshot above);\r\n\r\n> 2024-04-17T15:21:07.275945Z DEBUG symbolicator_service::download::http: Fetching debug file from `https://symbols.nuget.org/download/symbols/Google.Cloud.Storage.V1.pdb/A18B94CDA70745BEB0A2C316C2AB5314ffffffff/Google.Cloud.Storage.V1.pdb`\r\n[…]\r\n2024-04-17T15:21:07.413918Z DEBUG symbolicator_service::download: Unexpected client error status code from `https://symbols.nuget.org/download/symbols/Google.Cloud.Storage.V1.pdb/A18B94CDA70745BEB0A2C316C2AB5314ffffffff/Google.Cloud.Storage.V1.pdb`: 404 Not Found\r\n\r\n> It's trying to download from that URL with an additional header of SymbolChecksum: SHA256:cd948ba107a7be65b0a2c316c2ab5314f8339cb1c32051c3138287f307a274d6. Assuming the identifiers and the checksum are all correct, where on the server should the file be found? How does snupkg vs nupkg translate into paths?\r\n\r\nQuotes from [this comment](https://github.com/getsentry/symbolicator/issues/1437#issuecomment-2061561300)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37605215941","Type":"IssuesEvent","CreatedAt":"2024-04-19T01:31:28","Actor":"mmitche","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12063","RelatedDescription":"Closed issue \"Unified Build control update\" (#12063) at NuGet/Home","RelatedBody":"### Description\r\n\r\n**This issue is dependent on https://github.com/dotnet/source-build/issues/2974 and is a placeholder for .NET 8 required work in product repositories.**\r\n\r\nInstructions for implementation will be updated once https://github.com/dotnet/source-build/issues/2974 but will likely be a mechanical shift of properties in this repo. In a general sense, this is scaffolding work for expanding the set of source-built platforms beyond Linux."},{"Id":"37597220509","Type":"IssuesEvent","CreatedAt":"2024-04-18T19:21:30","Actor":"jledgett","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13399","RelatedDescription":"Opened issue \"Nuget Incorrectly Reporting  \"Unable to find a stable package\"\" (#13399) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Manager Console\n\n### Product Version\n\ndotnet restore\n\n### Worked before?\n\nYes, whatever build was available in early March.\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n- On macOS x64:\r\n  - Install .NET 8.0.204 SDK (8.0.4 Runtime)\r\n  - run `dotnet --list-runtimes` to verify install of runtime:\r\n    - _Microsoft.AspNetCore.App 8.0.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]_\r\n    - _Microsoft.NETCore.App 8.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]_\r\n  - run `dotnet --list-sdks` to verify install of SDKs: \r\n    - _8.0.204 [/usr/local/share/dotnet/sdk]_\r\n\r\n---\r\n\r\nFor a project with the following in the CSPROJ, `dotnet restore` works fine:\r\n\r\n```\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"8.0.3\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.FileExtensions\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core.Mvc\" Version=\"3.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core\" Version=\"1.17.4\"/>\r\n\t\t<PackageReference Include=\"SendGrid\" Version=\"9.29.2\"/>\r\n\t</ItemGroup>\r\n```\r\n\r\nChanging references to...\r\n\r\n```\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"8.0.4\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.FileExtensions\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"8.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core.Mvc\" Version=\"3.0.0\"/>\r\n\t\t<PackageReference Include=\"PagedList.Core\" Version=\"1.17.4\"/>\r\n\t\t<PackageReference Include=\"SendGrid\" Version=\"9.29.3\"/>\r\n\t</ItemGroup>\r\n```\r\n\r\nand running `dotnet restore` causes these errors to be raised (path removed):\r\n\r\n Determining projects to restore...\r\nerror NU1103: Unable to find a stable package Microsoft.AspNetCore.Mvc.NewtonsoftJson with version (>= 8.0.4)\r\nerror NU1103:   - Found 154 version(s) in nuget.org [ Nearest version: 9.0.0-preview.1.24081.5 ]\r\nerror NU1102: Unable to find package SendGrid with version (>= 9.29.3)\r\nerror NU1102:   - Found 117 version(s) in nuget.org [ Nearest version: 9.29.2 ]\r\n  Failed to restore (in 1.34 sec).\r\n\r\n---\r\n\r\nRunning `dotnet add package Microsoft.AspNetCore.Mvc.NewtonsoftJson --version 8.0.4`\r\n\r\n  Determining projects to restore...\r\n  Writing /var/folders/ht/bnz7h_6d1jb01dg6y7kjltxm0000gn/T/tmpWugafd.tmp\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/usr/local/share/dotnet/sdk/8.0.204/trustedroots/codesignctl.pem'.\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/usr/local/share/dotnet/sdk/8.0.204/trustedroots/timestampctl.pem'.\r\ninfo : Adding PackageReference for package 'Microsoft.AspNetCore.Mvc.NewtonsoftJson' into project '/Volumes/Data/Websites/Staging/vintagejeeps.net/live/Framework.csproj'.\r\ninfo : Restoring packages for ...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.mvc.newtonsoftjson/index.json\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/sendgrid/index.json\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/microsoft.aspnetcore.mvc.newtonsoftjson/index.json 262ms\r\ninfo :   OK https://api.nuget.org/v3-flatcontainer/sendgrid/index.json 306ms\r\nerror: NU1103: Unable to find a stable package Microsoft.AspNetCore.Mvc.NewtonsoftJson with version (>= 8.0.4)\r\nerror:   - Found 154 version(s) in nuget.org [ Nearest version: 9.0.0-preview.1.24081.5 ]\r\nerror: NU1102: Unable to find package SendGrid with version (>= 9.29.3)\r\nerror:   - Found 117 version(s) in nuget.org [ Nearest version: 9.29.2 ]\r\ninfo :   GET https://api.nuget.org/v3/vulnerabilities/index.json\r\ninfo :   OK https://api.nuget.org/v3/vulnerabilities/index.json 23ms\r\ninfo :   GET https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/vulnerability.base.json\r\ninfo :   GET https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/2024.03.24.11.37.12/vulnerability.update.json\r\ninfo :   OK https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/vulnerability.base.json 22ms\r\ninfo :   OK https://api.nuget.org/v3-vulnerabilities/2024.03.23.05.37.04/2024.03.24.11.37.12/vulnerability.update.json 22ms\r\nerror: Package 'Microsoft.AspNetCore.Mvc.NewtonsoftJson' is incompatible with 'all' frameworks in project \r\n\r\n---\r\n\r\nTried running `nuget locals all -clear` to no effect...\n\n### Verbose Logs\n\n_No response_"},{"Id":"37569126879","Type":"IssuesEvent","CreatedAt":"2024-04-18T06:18:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13398","RelatedDescription":"Opened issue \"Document dotnet nuget config\" (#13398) at NuGet/Home","RelatedBody":"This may need to be something that lives in the dotnet/docs repo instead."},{"Id":"37566834671","Type":"IssuesEvent","CreatedAt":"2024-04-18T04:29:17","Actor":"alanssitis","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13394","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Build on Linux breaks due to untrusted signer.\" (#13394) at NuGet/Home","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org in GitHub Actions\r\n\r\n### Describe the bug\r\n\r\nA CI pipeline running on Linux was breaking, and I encountered the following error: `error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer.` This looked very suspect as it was an official Microsoft package, and the certificate looked like it belonged to Microsoft. This was also seen locally until the \"build button\" was used in an IDE.\r\n\r\n### Repro Steps\r\n\r\nI was able to recreate this behavior and bug in a repo which runs it in a container (Work repo is private).\r\n\r\n1. Clone the following repo https://github.com/alanssitis/reproduce-dotnet-bug.\r\n2. In the project root, run `docker build .`.,\r\n\r\n### Expected Behavior\r\n\r\nThe build should fail with a untrusted signer error.\r\n\r\nInterestingly enough, I could \"fix\" this locally by building the project using an IDE (Rider), which I'd assume did something under the hood with the `dotnet` CLI to resolve this. I was not able to replicate the behavior carried out by the IDE, and therefore, I still cannot use NuGet.org in my CI, which is blocking my work.\r\n\r\nI have only verified this behavior on PopOS! 22.04, Ubuntu 22.04, and Debian Bookworm.\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\nBuilding the container locally netted the following logs:\r\n```\r\n$ docker build . -t test\r\n[+] Building 4.0s (8/8) FINISHED                                                                                                                                           docker:default\r\n => [internal] load build definition from Dockerfile                                                                                                                                 0.0s\r\n => => transferring dockerfile: 148B                                                                                                                                                 0.0s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim                                                                                                      0.1s\r\n => [internal] load .dockerignore                                                                                                                                                    0.0s\r\n => => transferring context: 57B                                                                                                                                                     0.0s\r\n => [1/4] FROM mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim@sha256:7861b15f318949cf9214d9ad5382b680a0e22e3b8673180707aa0c594ab75656                                                0.0s\r\n => [internal] load build context                                                                                                                                                    0.0s\r\n => => transferring context: 53.19kB                                                                                                                                                 0.0s\r\n => CACHED [2/4] WORKDIR /src/                                                                                                                                                       0.0s\r\n => [3/4] COPY . .                                                                                                                                                                   0.1s\r\n => ERROR [4/4] RUN dotnet build ./test/test.csproj                                                                                                                                  3.7s\r\n------\r\n > [4/4] RUN dotnet build ./test/test.csproj:\r\n0.482 MSBuild version 17.9.8+b34f75857 for .NET\r\n0.830   Determining projects to restore...\r\n2.968 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n2.968   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n2.968   Signature type: Author\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.153 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.153   Signature type: Author\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.158   Failed to restore /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj (in 1.51 sec).\r\n3.178 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.178   Signature type: Author\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.561 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.578\r\n3.579 Build FAILED.\r\n3.579\r\n3.579 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.579     0 Warning(s)\r\n3.579     4 Error(s)\r\n3.579\r\n3.579 Time Elapsed 00:00:02.99\r\n------\r\nDockerfile:4\r\n--------------------\r\n   2 |     WORKDIR /src/\r\n   3 |     COPY . .\r\n   4 | >>> RUN dotnet build ./test/test.csproj\r\n   5 |\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c dotnet build ./test/test.csproj\" did not complete successfully: exit code: 1\r\n```"},{"Id":"37555735250","Type":"IssuesEvent","CreatedAt":"2024-04-17T19:23:17","Actor":"carstencodes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13397","RelatedDescription":"Opened issue \"dotnet list packages should consider msbuild variables\" (#13397) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n8.0.204\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\nThis issue has already been created in [.NET SDK](https://github.com/dotnet/sdk/issues/40255), but was closed There with the hint that It's more likely to be a NuGet issue.\r\n\r\n### Describe the bug\r\n\r\nWhen I run `dotnet list package` for a solution where \r\n\r\na) Non-project MsBuild-Properties are used, e.g. `SolutionDir`\r\nb) Directories are not defaulted, e.g. `BaseIntermediateOutputPath`\r\n\r\nthe command exits with an error, saying that \r\n\r\n- A file/directory cannot be found files, as $(SolutionDir) resolves to an empty string and hence is rooted erroneously\r\n- The project.assets.json cannot be found, as it is not stored in `$(MSBuildProjectDirectory)obj\\`\r\n\r\nIn our solution we have > 200 projects. These projects use a common base intermediate output path set to `$(SolutionDir)obj\\$(MSBuildProjectName)\\` as it makes it easier to reset the files.\r\n\r\n### To Reproduce\r\n<!--\r\nWe ❤ code! Point us to a minimalistic repro project hosted in a GitHub repo, Gist snippet, or other means to see the isolated behavior.\r\n\r\nWe may close this issue if:\r\n- the repro project you share with us is complex. We can't investigate custom projects, so don't point us to such, please.\r\n- if we will not be able to repro the behavior you're reporting\r\n-->\r\n\r\nAn example can be found at this [gist](https://gist.github.com/carstencodes/005eabdce817023fd77eb14494fa399e)\r\n\r\n#### Expected output\r\n\r\n```shell\r\n$ dotnet list package --outdated\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nProject `sample` has the following updates to its packages\r\n   [net8.0]:\r\n   Top-level Package      Requested   Resolved   Latest\r\n   > Grpc.Tools           [2.51.0]    2.51.0     2.62.0\r\n```\r\n\r\n#### Actual output\r\n\r\n```shell\r\n$ dotnet list package --outdated\r\n dotnet list package --outdated\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nNo assets file was found for `C:\\myprojects\\temp\\dotnet-sdk-tests\\test-projects\\sample\\sample.csproj`. Please run restore before running this command.\r\n```\r\n\r\nDiagnostic output is not helpful: \r\n\r\n```shell\r\n$ dotnet list package --outdated -v diag \r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nNo assets file was found for `C:\\myprojects\\temp\\dotnet-sdk-tests\\test-projects\\sample\\sample.csproj`. Please run restore before running this command.\r\n```\r\n\r\n#### Workarounds\r\n\r\nNone applicable. From my point of view, it would be applicable to pass MsBuildVarialbles to `dotnet list package`, e.g.\r\n\r\n```shell\r\n$ dotnet list package --outdated -p:SolutionDir=${PWD} -p:BaseIntermediateOutputPath='$(SolutionDir)obj\\$(MSBuildProjectName)'\r\n```\r\n\r\n### Exceptions (if any)\r\n<!-- \r\nInclude the exception you get when facing this issue\r\n-->\r\n\r\nNo exception to be found.\r\n\r\n### Further technical details\r\n```shell \r\n$ dotnet --info\r\n.NET SDK:\r\n Version:           8.0.204\r\n Commit:            c338c7548c\r\n Workload version:  8.0.200-manifests.7d36c14f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.204\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.4\r\n  Architecture: x64\r\n  Commit:       2d7eea2529\r\n\r\n.NET SDKs installed:\r\n  6.0.129 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.321 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.421 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.408 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.104 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.204 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\n- VS Code 1.88.1\n\n### Verbose Logs\n\n```shell\n$ dotnet list package --outdated -v diag \r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nNo assets file was found for `C:\\myprojects\\temp\\dotnet-sdk-tests\\test-projects\\sample\\sample.csproj`. Please run restore before running this command.\n```\n"},{"Id":"37551954539","Type":"IssuesEvent","CreatedAt":"2024-04-17T17:21:48","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13396","RelatedDescription":"Opened issue \"Add `--allow-insecure-connections` option to dotnet SDK\" (#13396) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nAdd the option to the following commands\r\n- `dotnet nuget add`\r\n- `dotnet nuget update`\n\n### Additional Context and Details\n\n_No response_"},{"Id":"37550721733","Type":"IssuesEvent","CreatedAt":"2024-04-17T16:44:03","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13342","RelatedDescription":"Closed issue \"Promote from warning to error in push operations\" (#13342) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\n`nuget push` using an http shows a warning. \n\n### Desired Behavior\n\nShow an error message when http source is used\n\n### Additional Context\n\n_No response_"},{"Id":"37550718969","Type":"IssuesEvent","CreatedAt":"2024-04-17T16:43:59","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13341","RelatedDescription":"Closed issue \"Promote from warning to error in `delete` operations\" (#13341) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\nNuGet.exe\r\n\r\n### Current Behavior\r\n\r\n`nuget delete` using an http shows a warning. \r\n\r\n### Desired Behavior\r\n\r\nshow an error message instead.\r\n\r\n### Additional Context\r\n\r\n_No response_"},{"Id":"37550687929","Type":"IssuesEvent","CreatedAt":"2024-04-17T16:43:02","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13378","RelatedDescription":"Closed issue \"Add `allowinsecureconnections` option to nuget add and nuget update\" (#13378) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe\n\n### The Elevator Pitch\n\n`nuget add` and `nuget update` commands do not allow for adding a new package source with an attribute `allowInsecureConnections`.  Users would have to go to the config file manually to add this attribute. Add a `-allowInsecureConeections` option to these commands.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"37536632051","Type":"IssuesEvent","CreatedAt":"2024-04-17T10:41:34","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13395","RelatedDescription":"Opened issue \"[Bug Bash] The status of the select-all-project checkbox become incorrect in the solution-level PM UI after switching back to “Updates” tab for the second time\" (#13395) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.11.0.26\n\n### Worked before?\n\nIt’s not a regression since it reproes on both D16.11\\34601.136 and D17.9\\34601.282. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:       \r\n\r\n1. Create a solution with two C# Console App (.NET Core) -- .NET 8.0 projects in VS. \r\n\r\n2. Right-click the solution in the Solution Explorer and select the “Mange NuGet Packages for Solution”. \r\n\r\n3. Go to “Browse” tab and search for a package (e.g. “Newtonsoft.Json”). \r\n\r\n4. Install version “12.0.3” into the first project and version “11.0.2” into the second project. \r\n\r\n5. Click the checkbox on the left of every project to make sure every project is selected. [Now the status of the select-all-project checkbox is correct with a check mark] \r\n\r\n6. Switch to “Updates” tab, then switch to “Installed” tab. \r\n\r\n7. Re-switch back to “Updates\" tab and observe the checkbox on the right panel. \r\n\r\n \r\n\r\n#### Expected: \r\n\r\nThe status of the select-all-project checkbox should be checked with a check mark since all the projects below are selected. \r\n\r\n#### Actual:        \r\n\r\nThe status of the select-all-project checkbox become unchecked as below: \r\n![image](https://github.com/NuGet/Home/assets/84695155/b7cc0f53-1f7b-47ff-89bb-b495a72020bf)\r\n\r\n#### Notes:    \r\n\r\n1. The repro rate is 100%. \r\n\r\n2. It also repro’s on “Consolidate” tab.  \r\n\r\n3. The status is correct when switching between all the tabs for the first time. \n\n### Verbose Logs\n\n_No response_"},{"Id":"37519176434","Type":"PullRequestEvent","CreatedAt":"2024-04-16T22:45:38","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/13379","RelatedDescription":"Merged pull request \"Update 'dotnet nuget why' output format\" (#13379) at NuGet/Home","RelatedBody":"[Rendered spec](https://github.com/NuGet/Home/blob/e83e772d7372288fc4475ba8b511dca97768a006/accepted/2022/dotnet-nuget-why-proposal.md)\r\n\r\nThe output of `dotnet nuget why` would be easier to read if we printed it as a tree, rather than as individual paths.\r\n\r\nWe will also deduplicate graphs when multiple frameworks have the same dependency graph.\r\n\r\n![SolutionWithMultipleProjects](https://github.com/NuGet/Home/assets/82980589/3bb13bda-8464-4092-af8b-7cb3ac0daea6)\r\n\r\nThe spec contains more examples."},{"Id":"37518808917","Type":"IssuesEvent","CreatedAt":"2024-04-16T22:26:06","Actor":"alanssitis","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13394","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Build on Linux breaks due to untrusted signer.\" (#13394) at NuGet/Home","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org in GitHub Actions\r\n\r\n### Describe the bug\r\n\r\nA CI pipeline running on Linux was breaking, and I encountered the following error: `error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer.` This looked very suspect as it was an official Microsoft package, and the certificate looked like it belonged to Microsoft. This was also seen locally until the \"build button\" was used in an IDE.\r\n\r\n### Repro Steps\r\n\r\nI was able to recreate this behavior and bug in a repo which runs it in a container (Work repo is private).\r\n\r\n1. Clone the following repo https://github.com/alanssitis/reproduce-dotnet-bug.\r\n2. In the project root, run `docker build .`.,\r\n\r\n### Expected Behavior\r\n\r\nThe build should fail with a untrusted signer error.\r\n\r\nInterestingly enough, I could \"fix\" this locally by building the project using an IDE (Rider), which I'd assume did something under the hood with the `dotnet` CLI to resolve this. I was not able to replicate the behavior carried out by the IDE, and therefore, I still cannot use NuGet.org in my CI, which is blocking my work.\r\n\r\nI have only verified this behavior on PopOS! 22.04, Ubuntu 22.04, and Debian Bookworm.\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\nBuilding the container locally netted the following logs:\r\n```\r\n$ docker build . -t test\r\n[+] Building 4.0s (8/8) FINISHED                                                                                                                                           docker:default\r\n => [internal] load build definition from Dockerfile                                                                                                                                 0.0s\r\n => => transferring dockerfile: 148B                                                                                                                                                 0.0s\r\n => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim                                                                                                      0.1s\r\n => [internal] load .dockerignore                                                                                                                                                    0.0s\r\n => => transferring context: 57B                                                                                                                                                     0.0s\r\n => [1/4] FROM mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim@sha256:7861b15f318949cf9214d9ad5382b680a0e22e3b8673180707aa0c594ab75656                                                0.0s\r\n => [internal] load build context                                                                                                                                                    0.0s\r\n => => transferring context: 53.19kB                                                                                                                                                 0.0s\r\n => CACHED [2/4] WORKDIR /src/                                                                                                                                                       0.0s\r\n => [3/4] COPY . .                                                                                                                                                                   0.1s\r\n => ERROR [4/4] RUN dotnet build ./test/test.csproj                                                                                                                                  3.7s\r\n------\r\n > [4/4] RUN dotnet build ./test/test.csproj:\r\n0.482 MSBuild version 17.9.8+b34f75857 for .NET\r\n0.830   Determining projects to restore...\r\n2.968 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n2.968   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n2.968   Signature type: Author\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n2.969   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.153 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.153   Signature type: Author\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.153   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.158   Failed to restore /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj (in 1.51 sec).\r\n3.178 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':\r\n3.178   Signature type: Author\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Subject Name: CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   SHA256 hash: 566A31882BE208BE4422F7CFD66ED09F5D4524A5994F50CCC8B05EC0528C1353\r\n3.178   Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json':   Valid from: 07/27/2023 00:00:00 to 10/17/2026 23:59:59\r\n3.561 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.578\r\n3.579 Build FAILED.\r\n3.579\r\n3.579 /src/fido2-net-lib/Src/Fido2.Models/Fido2.Models.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2/Fido2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /src/fido2-net-lib/Src/Fido2.Ctap2/Fido2.Ctap2.csproj : error NU3034: Package 'Microsoft.NET.ILLink.Tasks 8.0.4' from source 'https://api.nuget.org/v3/index.json': This package is signed but not by a trusted signer. [/src/test/test.csproj]\r\n3.579 /usr/share/dotnet/sdk/8.0.204/NuGet.targets(169,5): error : The given key '(Microsoft.Extensions.Logging, 6.0.0)' was not present in the dictionary. [/src/test/test.csproj]\r\n3.579     0 Warning(s)\r\n3.579     4 Error(s)\r\n3.579\r\n3.579 Time Elapsed 00:00:02.99\r\n------\r\nDockerfile:4\r\n--------------------\r\n   2 |     WORKDIR /src/\r\n   3 |     COPY . .\r\n   4 | >>> RUN dotnet build ./test/test.csproj\r\n   5 |\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c dotnet build ./test/test.csproj\" did not complete successfully: exit code: 1\r\n```"},{"Id":"37515575964","Type":"IssuesEvent","CreatedAt":"2024-04-16T20:05:19","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13382","RelatedDescription":"Closed issue \"Failed to patch the .NET SDK with NuGet Dev latest build\" (#13382) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet SDK\r\n\r\n### Product Version\r\n\r\nDev\\6.11.0.9\r\n\r\n### Worked before?\r\n\r\nIt is a regression since the issue doesn’t repro on patching Dotnet SDK with NuGet Client Dev\\6.11.0.6.\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps: \r\n1. Open a \"Developer Command Prompt\" and run Git clone https://github.com/NuGet/Entropy.git to get the latest “Entropy”.\r\n2. Open a Powershell from Task Manager with the “powershell -ExecutionPolicy Bypass” set & “Create this task with administrative privileges” checked.\r\n3. Download the “nupkgs – NonRTM” folder from NuGet Client Dev latest build’s Artifacts to the desktop of your test machine and named \"nupkgs\".\r\n4. Go to the SDKPatchTool folder: \"…\\Entropy\\SDKPatchTool\" in the PS prompt in step2 and run the “SDKPatch.ps1” script with the commands:\r\n    ` .\\SDKPatch.ps1 -SDKPath C:\\Users\\v-luzh.FAREAST\\Desktop\\PatchedSDK -NupkgsPath C:\\Users\\v-luzh.FAREAST\\Desktop\\nupkgs -SDKChannel 8.0.3xx -Quality daily`\r\n#### Expected Result: \r\nThe patching is successful.\r\n#### Actual Result:\r\nThe patching failed as the screenshot below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/bda2be69-0c71-4d35-8c1d-b0f5b750999e)\r\n#### Notes:\r\n1.The repro rate is 100%.\r\n2.It also reproes with “-SDKChannel 9.0.1xx” in the step4.\r\n3.It doesn’t repro on patching Dotnet SDK 8.0.300-preview.24179.1 patched with NuGet Client Dev\\6.11.0.3.\r\n4.After verifying the NuGet build one by one, the issue starts to repro from NuGet Client Dev\\6.11.0.8, doesn't repro on NuGet Client Dev\\6.11.0.6."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-19T03:30:17.2759533Z","RunDurationInMilliseconds":1002}