{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"22819146048","Type":"PullRequestEvent","CreatedAt":"2022-07-11T23:11:11","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9162","RelatedDescription":"Closed pull request \"[RI] dev -> main\" (#9162) at NuGet/NuGetGallery","RelatedBody":"This merge supports the work in this task: https://github.com/NuGet/Engineering/issues/4434"},{"Id":"22818055685","Type":"PullRequestEvent","CreatedAt":"2022-07-11T21:39:40","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9162","RelatedDescription":"Opened pull request \"[RI] dev -> main\" (#9162) at NuGet/NuGetGallery","RelatedBody":"This merge supports the work in this task: https://github.com/NuGet/Engineering/issues/4434"},{"Id":"22817965132","Type":"PullRequestEvent","CreatedAt":"2022-07-11T21:33:01","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9158","RelatedDescription":"Merged pull request \"Add netstandard2.1 target to NuGetGallery.Services\" (#9158) at NuGet/NuGetGallery","RelatedBody":"Next step in addressing https://github.com/NuGet/Engineering/issues/4434.\r\n\r\nThis change introduces the `netstandard2.1` target, and excludes many classes from it. If there is ongoing work in this target framework, it will take the form of removing these `Remove` items and addressing any issues that arise.\r\n\r\nThis change retargets only some telemetry classes and support database entities, which will be used elsewhere in this epic. Some upstream dependencies are specific to framework webapps and are not included in the `netstandard2.1`-targeted build.\r\n\r\nNote also that the `EntityFramework` package reference is removed here, as it should have been removed in the SDK-style conversion for this project. This package reference is now accessed transitively through `NuGetGallery.Core` -> `NuGetGallery.Services.Entities`.\r\n\r\nAlso, `DurationMetric.cs` was poorly named. Have renamed according to class in file (`DurationTracker`)."},{"Id":"22816645878","Type":"IssuesEvent","CreatedAt":"2022-07-11T20:08:30","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9161","RelatedDescription":"Opened issue \"[Deplo]\" (#9161) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"22815450052","Type":"IssuesEvent","CreatedAt":"2022-07-11T18:55:26","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9160","RelatedDescription":"Opened issue \"Non-community packages are shown in top community packages list on stats page\" (#9160) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n![image](https://user-images.githubusercontent.com/1646506/178337557-1579bef7-81a9-4ebf-9eeb-dd3d31d0e460.png)\r\n\n\n### Repro Steps\n\nhttps://www.nuget.org/stats/packages\n\n### Expected Behavior\n\nThese packages should be excluded from this list.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"22803798027","Type":"IssuesEvent","CreatedAt":"2022-07-11T08:59:09","Actor":"v-luzh","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9159","RelatedDescription":"Opened issue \"[NuGet.org Bug]: An error “unable to load the service index for source” occurs after making DevOps feed https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json enabled\" (#9159) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nAn error “unable to load the service index for source” occurs after making DevOps feed https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json enable in PM UI\r\n\n\n### Repro Steps\n\n### Details about Problem\r\nVS Version: Main\\32710.19\r\nNuGet Version: Dev\\6.4.0.6\r\nOS Version: Windows-11-Enterprise-21H2 ENU\r\n\r\n### Detailed repro steps\r\n1. Create a C# Console App (.NET 6.0)/(.NET 7.0) in VS and open the PM UI of the solution. \r\n2. Add the DevOps feed (https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json) into the Settings->NuGet Package Manager->Package Sources. \r\n3. Select the new added DevOps feed in the Package source dropdown box in the PM UI. \r\n\r\n### Actual Result\r\nAn error “unable to load the service index for source” occurs after making DevOps feed https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json enable as below.\r\n\n\n### Expected Behavior\n\n### Expected\r\nThere is no error after making DevOps feed https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json enable.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/20632625/178227294-3a1a7295-dec8-4bb6-8f19-47291a5b451b.png)\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"22817740416","Type":"PullRequestEvent","CreatedAt":"2022-07-11T21:17:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11961","RelatedDescription":"Opened pull request \"Add stale waiting for customer bots\" (#11961) at NuGet/Home","RelatedBody":"Fixes https://github.com/NuGet/Client.Engineering/issues/1038\r\n\r\n1.\tClient people manually add \"WaitingForCustomer\" label if needs input from customer.\r\n2.\tWhen customer replies/ or if any response if it’s an issue transferred from other repo/VSFeedback, remove the \"WaitingForCustomer\"  label and add \"WaitingForClientTeam\"  label.\r\n3.\tWhen no response after an issue adding a \"WaitingForCustomer\" label for 14 days, add a \"Status: No recent activity\"  label, add a comment, e.g.\r\n4.\tClose the issue if there is no activity for 14 days after .\r\nRemove any \"WaitingForCustomer\"  or  \"WaitingForClientTeam\" label when the issue is closed and add `Resolution:Need more info`\r\n\r\nThis was tested in \r\n https://github.com/NuGet/bot-testing/issues/13 and https://github.com/NuGet/bot-testing/issues/12\r\n \r\n Currently on 5 issues have the potential to be reported by these bots: \r\n \r\n https://github.com/NuGet/Home/issues?q=is%3Aopen+is%3Aissue+label%3AWaitingForCustomer\r\n\r\nI will monitor these individual issues. \r\n4 of these issues sohuld get the `Status:No recent activity` label immediately."},{"Id":"22817225222","Type":"IssuesEvent","CreatedAt":"2022-07-11T20:44:21","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11960","RelatedDescription":"Opened issue \"[Test]: MSBuildAPIUtilityTests are failing on Linux and Mac\" (#11960) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/A\n\n### Worked before?\n\nNo. These unit units were added in https://github.com/NuGet/NuGet.Client/pull/4700\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nMSBuildAPIUtilityTests added in https://github.com/NuGet/NuGet.Client/pull/4700 PR are passing on Windows but failing on CI on Mac and Linux. \r\n\r\nhttps://github.com/NuGet/NuGet.Client/pull/4700/files#diff-e6c74aaf01ac8a9bd48c889f735c5773d38dbabdec2398334c52ca8ee5bcc096\r\n\r\nThis is a tracking issue for making the tests pass on Linux and Mac.\r\n\r\n<img width=\"1589\" alt=\"image\" src=\"https://user-images.githubusercontent.com/52756182/178354766-16495107-703c-4dab-87e4-5b587f1f2b32.png\">\n\n### Verbose Logs\n\n_No response_"},{"Id":"22814953594","Type":"IssuesEvent","CreatedAt":"2022-07-11T18:25:55","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11958","RelatedDescription":"Closed issue \"[Bug]: Referencing targets found only in dependent packages causes restore failure\" (#11958) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\nVS2022 17.2.3; msbuild 17.2.1.25201\r\n\r\n### Worked before?\r\n\r\nIt works with classic non-PackageReference references\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n1. Clone https://github.com/uecasm/SassTest.git\r\n    * This is a lightly modified Blazor Server template project, but most of the details don't really matter. \r\n2. Open the solution and try to build it.\r\n3. Observe that the SassLibrary \"Dependencies\" node has a yellow warning icon (why no tooltip?) and in the console/error list appears;\r\n    ```\r\n    SassLibrary.csproj(25,73): error MSB4057: The target \"LibSass_Build\" does not exist in the project.\r\n    ```\r\n4. If you look at the SassLibrary's `projects.assets.json` or `.nuget.g.props` (etc) files now, they are mostly empty and do not report any dependencies.  (In addition, while in this state the \"manage packages for project\" view reports no installed packages.)\r\n5. Open the library project file, comment out the entire `BuildScopedSass` target, and then save the project file.\r\n6. The warning icons go away; build now and it succeeds (but builds something at the wrong time).\r\n7. Uncomment the target and save; the warning icons do not return and building still succeeds (and now it does the build step properly).\r\n8. Closing/reopening/rebuilding the solution etc will not reintroduce the problem.  To \"re-arm\" this bug, **both** the `.vs` directory and the `SassLibrary\\obj` directory (or presumably some subset of files within) need to be deleted while the solution is not open; the bug will then reoccur after opening the solution again.  But this will of course happen whenever there's a clean checkout, e.g. for CI or on a new developer's machine.\r\n\r\nThe target in question is provided by the referenced package, which is why this works after the package restore is actually completed.  I'm not entirely sure why this continues to work even if only the `obj` folder and not the `.vs` folder is deleted, but that does appear to be the case.\r\n\r\nPre-`PackageReference`, you could solve this by referencing the additional target only after it was imported.  However there is no clear way to do this with the implied imports.  (Similarly, it is unclear when or if it might be safe to define a dummy target in the project, expecting that it will be overridden by the import \"later\".)  Ideally, msbuild should ignore these sorts of errors when performing package restore (and complete the restore successfully), since it doesn't need to execute those targets anyway.\r\n\r\n----\r\nWhile testing permutations for this bug report, I've managed to successfully work around the problem by moving the target reference from `DependsOnTargets` to `CallTargets` within the target body.  However this feels like a kludge (and is not entirely equivalent), so I still think the underlying problem is a bug.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"22814190370","Type":"IssuesEvent","CreatedAt":"2022-07-11T17:41:33","Actor":"a-ctor","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11959","RelatedDescription":"Opened issue \"[Feature]: Verifying the package source mapping configuration\" (#11959) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWith the new package source mapping it is possible to restrict certain packages to be restored from specific package sources. But there are scenarios with package source mapping where a local restore succeeds but fails on another machine. This happens when the packages are already cached locally and so the package source mapping is not considered when restoring. This is quite annoying when verifying the package source mapping as the Nuget package cache must be cleared to test a new configuration.\r\n\r\nI propose adding an option that will check that all the required packages can be resolved from the package sources using the current package source mapping (skipping the local cache of course). The exact details are up for discussion.\r\n\r\nLooking forward for you input on the matter :)\n\n### Additional Context and Details\n\nHere is a step-by-step example of how to replicate the problem. Only after clearing the cache does it become clear that the package source mapping does not work.\r\n\r\n1. `dotnet new classlib -n test -o .`\r\n2. `dotnet add test.csproj package NUnit`: Install any package which is automatically restored and cached\r\n3. Add a `Nuget.config` which filters out the installed package using `<packageSourceMapping>` (see example below)\r\n4. `dotnet restore`: Does not fail because the package is cached\r\n5. Remove `%USERPROFILE%\\.nuget\\packages\\NUnit`: Remove the package from the cache\r\n6. `dotnet restore`: Restore fails because the package source mapping must be used\r\n\r\nHere is an example `Nuget.config` with a restrictive filter:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </packageSources>\r\n  <packageSourceMapping>\r\n    <packageSource key=\"nuget.org\">\r\n      <package pattern=\"Does not match the package\" />\r\n    </packageSource>\r\n  </packageSourceMapping>\r\n</configuration>\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":248,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2022-07-12T03:30:36.8990104Z","RunDurationInMilliseconds":1420}