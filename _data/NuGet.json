{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20785028833","Type":"PullRequestEvent","CreatedAt":"2022-03-16T18:07:44","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9058","RelatedDescription":"Merged pull request \"[Ally Bug] Installation command copy button reads as table.\" (#9058) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n- Removed `display: table, table-row, table-cell` from css for installation command styles.\r\n  - Since the installation commands had table layouts, NVDA was announcing this button as part of a table, which was not correct.\r\n- Removed unecessary `div` element from `DisplayPackage.cshtml`\r\n\r\n### Addresses\r\nhttps://github.com/nuget/engineering/issues/4315"},{"Id":"20780878664","Type":"IssuesEvent","CreatedAt":"2022-03-16T14:40:51","Actor":"donet5","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9057","RelatedDescription":"Closed issue \"[Feature]:  Query sorting problem\" (#9057) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nSuch as\r\nhttps://www.nuget.org/packages?q=sqlsugar  \r\n\r\nHopefully, that's what the search will bring up\r\nSqlSugar\r\nSqlSugarCore\r\n\r\nBut SQLSugarcore won't be on the first page at all\r\n\n\n### The Elevator Pitch\n\nSuch as\r\nhttps://www.nuget.org/packages?q=sqlsugar  \r\n\r\nHopefully, that's what the search will bring up\r\nSqlSugar\r\nSqlSugarCore\r\n\r\nBut SQLSugarcore won't be on the first page at all\r\n\n\n### Additional Context and Details\n\nSuch as\r\nhttps://www.nuget.org/packages?q=sqlsugar  \r\n\r\nHopefully, that's what the search will bring up\r\nSqlSugar\r\nSqlSugarCore\r\n\r\nBut SQLSugarcore won't be on the first page at all\r\n"},{"Id":"20772183213","Type":"IssuesEvent","CreatedAt":"2022-03-16T06:37:17","Actor":"jsakamoto","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9060","RelatedDescription":"Opened issue \"[NuGet.org Bug]: HTML comments `<!-- -->` in a preformatted area of a README markdown text are disappeared\" (#9060) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nHTML comments `<!-- -->` in a preformatted area of a README markdown text are disappeared.\r\n\r\nSome of my  \"README\" markdown texts include sample HTML codes with the comments to explain what the sample code will do, like this.  \r\n(The screenshot below was taken on my GitHub repository https://github.com/jsakamoto/BlazorWasmPreRendering.Build#hosting-environment .)\r\n\r\n![image](https://user-images.githubusercontent.com/95908/158529041-3b2a98b3-56f0-4668-a8ef-face036471e1.png)\r\n\r\nHowever, even though the same README text, **only the HTML comments are disappeared on nuget.org even though the other HTML tags are still kept.**  \r\n(The screenshot below was taken on nuget.org https://www.nuget.org/packages/BlazorWasmPreRendering.Build/ .)\r\n\r\n![image](https://user-images.githubusercontent.com/95908/158529079-77e86c58-3c48-42d0-aea3-1f9b75afe649.png)\r\n\r\nThat sample HTML code in a README on nuget.org became no longer makes sense as a sample code due to be invisible the explaining comments.\n\n### Repro Steps\n\n1. Write a \"Readme\" on the package editor form on the nuget.org like this:\r\n\r\n        ```html\r\n        <!-- This is comment -->\r\n        <div>Hello</div>\r\n        ```\r\n\r\n2. Click the \"Preview\" button. Then, the preview screen renders only the `<div>Hello</div>` tag.\r\n\r\n        <div>Hello</div>\n\n### Expected Behavior\n\nI expected the HTML comment also to be rendered in the preview screen like this, because the comment is written in the preformatted area.\r\n\r\n    <!-- This is comment -->\r\n    <div>Hello</div>\r\n\n\n### Screenshots\n\n### Editing\r\n\r\n![image](https://user-images.githubusercontent.com/95908/158528731-e77980e7-7e17-4d88-9186-4d30b755454c.png)\r\n\r\n### Previewing\r\n\r\n![image](https://user-images.githubusercontent.com/95908/158528749-30f5ebb1-0b99-4de6-809d-21d1bcff2738.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20768629242","Type":"PullRequestEvent","CreatedAt":"2022-03-16T00:22:10","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9059","RelatedDescription":"Opened pull request \"[A11y] Adjusted homepage circuit board label sizes to accommodate text spacing\" (#9059) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/nuget/nugetgallery/issues/8988\r\n\r\n**Problem:**\r\n \r\nOn the Home page, when text spacing is applied, the 'package versions' and 'unique packages' text overflows outside its container.\r\n\r\n*NOTE:* I was told to use [codepen.io](https://codepen.io/stevef/pen/YLMqbo/) to apply text spacing, but it can also be achieved by adding this to the stylesheet:\r\n\r\n```\r\n* {\r\n line-height: 1.5 !important;\r\n letter-spacing: 0.12em !important;\r\n word-spacing: 0.16em !important;\r\n}\r\n\r\np{\r\n margin-bottom: 2em !important;\r\n}\r\n```\r\n\r\nRegular home page:\r\n![image](https://user-images.githubusercontent.com/82980589/158491365-c429a6fe-c839-4d63-9fa5-68fb3d1d2306.png)\r\n\r\nAfter applying text spacing:\r\n![image](https://user-images.githubusercontent.com/82980589/158492807-f1b9ac54-2ebe-43cb-938f-664063c72e53.png)\r\n\r\n**Fix:**\r\n\r\nTo fix this, I made the label containers wider to accommodate the expanded text. The resulting UI changes seem minor to look at, but I'm happy to get additional feedback on that.\r\n\r\n**After the changes,**\r\n\r\nRegular home page:\r\n![image](https://user-images.githubusercontent.com/82980589/158492514-77ebd7a9-c9ee-45a8-b6fe-96474326b4b9.png)\r\n\r\nAfter applying text spacing:\r\n![image](https://user-images.githubusercontent.com/82980589/158492829-ee5709a3-ac17-4fbf-8d50-c2d4cf02d241.png)\r\n"},{"Id":"20767150344","Type":"PullRequestEvent","CreatedAt":"2022-03-15T22:00:14","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9058","RelatedDescription":"Opened pull request \"[Ally Bug] Installation command copy button reads as table.\" (#9058) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n- Removed `display: table, table-row, table-cell` from css for installation command styles.\r\n  - Since the installation commands had table layouts, NVDA was announcing this button as part of a table, which was not correct.\r\n- Removed unecessary `div` element from `DisplayPackage.cshtml`\r\n\r\n### Addresses\r\nhttps://github.com/nuget/engineering/issues/4315"},{"Id":"20751953997","Type":"IssuesEvent","CreatedAt":"2022-03-15T08:34:08","Actor":"donet5","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9057","RelatedDescription":"Opened issue \"[Feature]:  Query sorting problem\" (#9057) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nSuch as\r\nhttps://www.nuget.org/packages?q=sqlsugar  \r\n\r\nHopefully, that's what the search will bring up\r\nSqlSugar\r\nSqlSugarCore\r\n\r\nBut SQLSugarcore won't be on the first page at all\r\n\n\n### The Elevator Pitch\n\nSuch as\r\nhttps://www.nuget.org/packages?q=sqlsugar  \r\n\r\nHopefully, that's what the search will bring up\r\nSqlSugar\r\nSqlSugarCore\r\n\r\nBut SQLSugarcore won't be on the first page at all\r\n\n\n### Additional Context and Details\n\nSuch as\r\nhttps://www.nuget.org/packages?q=sqlsugar  \r\n\r\nHopefully, that's what the search will bring up\r\nSqlSugar\r\nSqlSugarCore\r\n\r\nBut SQLSugarcore won't be on the first page at all\r\n"},{"Id":"20745839129","Type":"IssuesEvent","CreatedAt":"2022-03-14T22:53:11","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9056","RelatedDescription":"Closed issue \"A11y_NuGet Service_Microsoft.Identity.Client_ScreenReader:\"copy package manager command\" button, is read as table on tab navigation\" (#9056) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468962"},{"Id":"20745835351","Type":"IssuesEvent","CreatedAt":"2022-03-14T22:52:51","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9056","RelatedDescription":"Opened issue \"A11y_NuGet Service_Microsoft.Identity.Client_ScreenReader:\"copy package manager command\" button, is read as table on tab navigation\" (#9056) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468962"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20788723356","Type":"IssuesEvent","CreatedAt":"2022-03-16T22:09:47","Actor":"dfederm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11680","RelatedDescription":"Opened issue \"[Bug]: Static Graph Restore failed with a NullReferenceException when a non-SDK-style project refs an SDK-style project with SetTargetFramework\" (#11680) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild 17\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n`Dep\\Dep.csproj`:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net472</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n`Broken\\Broken.csproj`:\r\n\r\n```xml\r\n<Project>\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Dep\\Dep.csproj\">\r\n      <SetTargetFramework>TargetFramework=net472</SetTargetFramework>\r\n    </ProjectReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nDo a static graph restore on `Broken\\Broken.csproj`. The output looks like:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 17.2.0-dev-22166-01+719247ede for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\IntPreview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.RestoreEx.targets(19,5): error : Object reference not set to an instance of an object. [C:\\Code\\tmp\\GraphRestoreRepro\\Broken\\Broken.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\IntPreview\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.RestoreEx.targets(19,5): error : Object reference not set to an instance of an object. [C:\\Code\\tmp\\GraphRestoreRepro\\Broken\\Broken.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:06.70\r\n```\r\n\r\nThe NRE specifically is in `MSBuildStaticGraphRestore.GetPackageSpec`. The caller iterates each `ProjectWithInnerNodes` and calls `GetPackageSpec(project.OuterProject)`, but `project.OuterProject` is null for the `Dep\\Dep.csproj` entry.\r\n\r\nIf *any* of the following is changed, it works:\r\n1. Non-static graph restore\r\n2. Remove the `SetTargetFramework` metadata from `Broken\\Broken.csproj`\r\n3. Migrate `Broken\\Broken.csproj` to SDK-style\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"20787594892","Type":"IssuesEvent","CreatedAt":"2022-03-16T20:47:07","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11679","RelatedDescription":"Opened issue \"Make global cache thread safe\" (#11679) at NuGet/Home","RelatedBody":"Follow up on , 1 more "},{"Id":"20787259726","Type":"IssuesEvent","CreatedAt":"2022-03-16T20:25:54","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10650","RelatedDescription":"Closed issue \"PMUI Update solution nuget packages: Collection was modified; enumeration operation may not execute.\" (#10650) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Update-solution-nuget-packages:-Collecti/1359900)._\r\n\r\n---\r\n[severity:I'm unable to use this version] [regression] [worked-in:16.8.6]\r\nAfter updating nuget packages for a solution, I sometimes see a yellow \"Error occurred\" message with this in the package manager output window:\r\n\r\n**\"Collection was modified; enumeration operation may not execute.\" **\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Jeff Lill on 3/7/2021, 10:26 AM: \r\n\r\n<p>Additional info:</p>\r\n<ul>\r\n<li>This only happens occasionally</li>\r\n<li>The packages seem to have updated correctly even with this warning</li>\r\n<li>I’m pulling from a private feed hosted by <strong>BaGet</strong> container image: <strong>0b46f0ec87216e1dc6839277712ee07c1c2b611a</strong></li>\r\n<li><strong>BaGet</strong> is running on Ubuntu 20.04</li>\r\n<li>I updated solution packages again while watching the Baget logs and saw no messages (errors or otherwise)</li>\r\n<li>I’ve attached the complete package manager log</li>\r\n</ul>\r\n\r\n#### Jeff Lill on 3/7/2021, 10:30 AM: \r\n\r\n<p>I attached the full package manager log.</p>\r\n\r\n#### Feedback Bot on 3/7/2021, 07:46 PM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)\r\n\r\n[Hash](https://prism.vsdata.io/failure/?query=ch%3Drelease%20sev!%3DDiagnostic&eventType=fault&failureType=hits&failureHash=3b94f40f-06b1-5e46-6885-7e658d5f612f)"},{"Id":"20787259749","Type":"IssuesEvent","CreatedAt":"2022-03-16T20:25:54","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11644","RelatedDescription":"Closed issue \"[Bug]: Null Reference exception when loading/refresh any Tab of the PM UI\" (#11644) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVersion 17.2.0 Preview 2.0 [32222.421.main]\n\n### Worked before?\n\n17.2.0 Preview 2.0\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nUsing a new solution, I incidentally stumbled upon a null reference exception in PM UI. I've identified the location in the code already below.\r\n\r\nFiled VS Feedback: https://developercommunity.visualstudio.com/t/object-reference-null-when-opening-package-manager/1683498\r\n\r\nI'm assuming for now that it's a regression, as this code was changed recently in https://github.com/NuGet/NuGet.Client/pull/4119\r\n![image](https://user-images.githubusercontent.com/49205731/156683251-76eaba45-dfad-4108-a857-4a7d8748c339.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/49205731/156683122-cfa83abd-ab41-4361-b9b9-7012fbccb004.png)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"20787111073","Type":"IssuesEvent","CreatedAt":"2022-03-16T20:16:20","Actor":"crhaglun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11678","RelatedDescription":"Opened issue \"[DCR]: NuGet.Build.Tasks.Pack.targets does not pick up property updates from package-provided build file\" (#11678) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nWe're trying to build a package to standardize and enforce use of release notes across our team repos, including setting package version numbers based on checked-in release note files.\r\n\r\nAt the moment, setting properties like \"Version\" in a custom build target with \"BeforeTargets=BeforeBuild\" works as expected for file and assembly versions without any further work, but not for NuGet package versions.\r\n\r\nDigging one layer deeper, the issue appears to be related to build targets executing in an \"inner build\" while the pack targets execute in the \"outer\" build.\r\n\r\nWe have found a couple of options to force our release notes target to run in the \"outer build\" such that the properties it updates impacts both ``build`` and ``pack``, but all relies on understanding the internals of the NuGet.Client build files. \r\nA minor related issue is that all methods relies on separating restore and build, i.e. we can't do ``msbuild /t:restore /t:build /t:pack`` but have to do ``msbuild /t:build /t:pack -restore``.\r\n\r\nThis means we're unable to create a NuGet package that \"just works\" without taking a dependency on internals that might be challenging to maintain over time. A minor related issue is that consumers would need to know that restore and build always needs to happen separately otherwise the build would break or -- even worse -- appear to work but produce unexpected output.\n\n### Desired Behavior\n\nThere's two things we believe would make our work easier and our custom package more robust:\r\n\r\n1. Instead of a property like \"BeforePack\" that will be expanded in a \"DependsOnTargets\" relation, follow the convention of declaring a dummy _target_ \"BeforePack\" (and perhaps \"AfterPack\" for symmetry) to make extensibility easier.\r\n\r\n2. Execute private targets like \"GenerateNuspec\" in an inner build, such that it can pick up build files from NuGet packages restored by the current build.\n\n### Additional Context\n\n_No response_"},{"Id":"20785334799","Type":"IssuesEvent","CreatedAt":"2022-03-16T18:26:27","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11677","RelatedDescription":"Opened issue \"[Bug]: Empty string for solution path cases NuGet-based MSBuild project SDK resolver to not find global.json\" (#11677) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nIn some cases, Visual Studio evaluates projects outside of a solution file.  In this context, the solution path is an empty string rather than null.  This causes the NuGet-based MSBuild project SDK resolver to not find global.json since it only expects `null` or a valid value.  The resolver should check for an empty string before falling back to project path.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20785021261","Type":"IssuesEvent","CreatedAt":"2022-03-16T18:07:15","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10754","RelatedDescription":"Closed issue \"Handle the scenario when the asset file does not yet exist\" (#10754) at NuGet/Home","RelatedBody":"Handle the scenario when the asset file does not yet exist -- need more info on design"},{"Id":"20784943022","Type":"PullRequestEvent","CreatedAt":"2022-03-16T18:02:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/11649","RelatedDescription":"Merged pull request \"Warn when duplicate MSBuild items are detected\" (#11649) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/9864\r\n\r\n\r\nWhen a NuGet item is seen as a duplicate, the first item is chosen and a warning is raised. NU1505 for PackageReference, NU1506 for PackageDownload, NU1507 for PackageVersion. \r\nThis warning supports NoWarn, TreatWarningsAsErrors, and it can be disabled altogether.\r\n\r\nWe're also supporting ContinueOnError for VS purposes."},{"Id":"20784917976","Type":"IssuesEvent","CreatedAt":"2022-03-16T18:00:50","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11676","RelatedDescription":"Opened issue \"[DCR]: NuGet-based MSBuild project SDK resolver should only load NuGet.Config once\" (#11676) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nCurrently, the NuGet-based MSBuild project SDK resolver loads NuGet.Config once for every SDK resolution in a build.  However, in Visual Studio, design time builds use a different cache key so every project evaluation ends up loading NuGet.Config.  This can cause thread starvation issues if a lot of projects are being evaluated at the same time.\n\n### Desired Behavior\n\nWe should cache NuGet.Config for the lifetime of the process so it is only loaded once for each unique path.\n\n### Additional Context\n\n_No response_"},{"Id":"20784897557","Type":"IssuesEvent","CreatedAt":"2022-03-16T17:59:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11675","RelatedDescription":"Closed issue \"[Bug]: Static Graph restore uses Project.FromFile + Project.CreateInstance instead of ProjectInstance.FromFile directly\" (#11675) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\ncurrent\n\n### Worked before?\n\nNo\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nN/A\n\n### Verbose Logs\n\n_No response_"},{"Id":"20768258803","Type":"IssuesEvent","CreatedAt":"2022-03-15T23:42:56","Actor":"dfederm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11675","RelatedDescription":"Opened issue \"[Bug]: Static Graph restore uses Project.FromFile + Project.CreateInstance instead of ProjectInstance.FromFile directly\" (#11675) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\ncurrent\n\n### Worked before?\n\nNo\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nN/A\n\n### Verbose Logs\n\n_No response_"},{"Id":"20760776870","Type":"IssuesEvent","CreatedAt":"2022-03-15T15:58:36","Actor":"jmecosta","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11674","RelatedDescription":"Opened issue \"[Bug]: asp.net core in IIS \" (#11674) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\n6.1.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\ncreate a asp.net core app and run on IIS\r\n```\r\n      <aspNetCore processPath=\"%LAUNCHER_PATH%\" arguments=\"%LAUNCHER_ARGS%\" stdoutLogEnabled=\"true\" stdoutLogFile=\".\\logs\\stdout\" hostingModel=\"inprocess\">\r\n        <environmentVariables>\r\n          <environmentVariable name=\"COMPLUS_ForceENC\" value=\"1\" />\r\n          <environmentVariable name=\"ASPNETCORE_ENVIRONMENT\" value=\"Production\" />\r\n        </environmentVariables>\r\n      </aspNetCore>\r\n```\r\n\r\non a IHostedServive, use:\r\n```\r\nILogger logger = NullLogger.Instance;\r\n            CancellationToken cancellationToken = CancellationToken.None;\r\n            SourceCacheContext cache = new SourceCacheContext();\r\n            SourceRepository repository = Repository.Factory.GetCoreV3(feedUrl);\r\n            FindPackageByIdResource resource = await repository.GetResourceAsync<FindPackageByIdResource>();\r\n```\r\n\r\nThis will throw the following exception:\r\n\r\n```\r\nApplication: w3wp.exe\r\nCoreCLR Version: 5.0.1422.5710\r\n.NET Version: 5.0.14\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: NuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source http://ts-nuget.teklaad.tekla.com/nuget/ts-nuget/v3/index.json.\r\n ---> System.UnauthorizedAccessException: Access to the path 'C:\\Windows\\system32\\config\\systemprofile' is denied.\r\n   at System.IO.FileSystem.CreateDirectory(String fullPath, Byte[] securityDescriptor)\r\n   at System.IO.Directory.CreateDirectory(String path)\r\n   at NuGet.Configuration.Settings.LoadUserSpecificSettings(String root, String configFileName, Boolean useTestingGlobalPath, SettingsLoadingContext settingsLoadingContext)+MoveNext()\r\n   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n   at NuGet.Configuration.Settings.LoadSettingsForSpecificConfigs(String root, String configFileName, List`1 validSettingFiles, IMachineWideSettings machineWideSettings, Boolean loadUserWideSettings, Boolean useTestingGlobalPath, SettingsLoadingContext settingsLoadingContext)\r\n   at NuGet.Configuration.Settings.LoadSettings(String root, String configFileName, IMachineWideSettings machineWideSettings, Boolean loadUserWideSettings, Boolean useTestingGlobalPath, SettingsLoadingContext settingsLoadingContext)\r\n   at NuGet.Configuration.Settings.LoadDefaultSettings(String root, String configFileName, IMachineWideSettings machineWideSettings, SettingsLoadingContext settingsLoadingContext)\r\n   at NuGet.Configuration.Settings.LoadDefaultSettings(String root, String configFileName, IMachineWideSettings machineWideSettings)\r\n   at NuGet.Configuration.ProxyCache.FromDefaultSettings()\r\n   at NuGet.Configuration.ProxyCache.<>c.<.cctor>b__18_0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n--- End of stack trace from previous location ---\r\n   at System.Lazy`1.CreateValue()\r\n   at NuGet.Configuration.ProxyCache.get_Instance()\r\n   at NuGet.Protocol.HttpHandlerResourceV3Provider.CreateResource(PackageSource packageSource)\r\n   at NuGet.Protocol.HttpHandlerResourceV3Provider.TryCreate(SourceRepository source, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n   at NuGet.Protocol.HttpSource.CreateHttpClientAsync()\r\n   at NuGet.Protocol.HttpSource.EnsureHttpClientAsync()\r\n   at NuGet.Protocol.HttpSource.GetThrottledResponse(Func`1 requestFactory, TimeSpan requestTimeout, TimeSpan downloadTimeout, Int32 maxTries, Boolean isRetry, Boolean isLastAttempt, Guid sessionId, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass15_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Common.ConcurrencyUtilities.ExecuteWithFileLockedAsync[T](String filePath, Func`2 action, CancellationToken token)\r\n   at NuGet.Protocol.HttpSource.GetAsync[T](HttpSourceCachedRequest request, Func`2 processAsync, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.GetServiceIndexResourceV3(SourceRepository source, DateTime utcNow, ILogger log, CancellationToken token)\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.TryCreate(SourceRepository source, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n   at NuGet.Protocol.HttpFileSystemBasedFindPackageByIdResourceProvider.TryCreate(SourceRepository sourceRepository, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T](CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.GetResourceAsync[T]()\r\n   at TeklaQualityHub.Services.TsPackageService.getLatestVersionFromFeedByPackage(String packageName, String feedUrl) in D:\\prod\\BatTools\\teklaqualityhub\\TeklaQualityHub\\Services\\TsPackageService.cs:line 207\r\n   at TeklaQualityHub.Services.TsPackageService.UpdateVersion(TsPackage package, String urlFeed) in D:\\prod\\BatTools\\teklaqualityhub\\TeklaQualityHub\\Services\\TsPackageService.cs:line 190\r\n   at TeklaQualityHub.Services.TsPackageService.SetLatestVersionsFromFeed(IConfiguration configuration) in D:\\prod\\BatTools\\teklaqualityhub\\TeklaQualityHub\\Services\\TsPackageService.cs:line 172\r\n   at TeklaQualityHub.Services.TsPackageService.DoWork(Object state) in D:\\prod\\BatTools\\teklaqualityhub\\TeklaQualityHub\\Services\\TsPackageService.cs:line 117\r\n   at System.Threading.Tasks.Task.<>c.<ThrowAsync>b__140_1(Object state)\r\n   at System.Threading.QueueUserWorkItemCallback.Execute()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nChanging the permissions of C:\\Windows\\system32\\config\\systemprofile for IIS_USRS makes the exception go away but the application no longer works as it worked earlier so this is not an option\r\n\r\nIve changed NUGET_PACKAGES to c:\\Temp\\packages without success. \r\n\r\nHow to configure the cache so it goes to write location for the IIS_USR user\r\n\r\nthanks in advance\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"20755576929","Type":"IssuesEvent","CreatedAt":"2022-03-15T11:52:37","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11635","RelatedDescription":"Closed issue \"[Bug]: The deleted packages.lock.json file still shows as before in the Solution Explorer window when “RestorePackagesWithLockFile” is not enabled\" (#11635) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nOther/NA\r\n\r\n### Product Version\r\n\r\nRelease-5.11.x\\5.11.1.17\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n### Details about Problem\r\nVS Version: D16.11\\32228.343\r\nNuGet Version: Release-5.11.x\\5.11.1.17\r\nOS Version: Windows-11-Enterprise-21H2\r\n\r\n### Repro steps\r\n1. Create a project [e.g. Class Library (.NET Framework)] and generate a lock file “packages.lock.json” alongside the csproj file. \r\n2. Install a PackageReference package into the project (to generate some content into the lock file). \r\n3. Run restore and close the solution/VS. \r\n4. Delete the lock file (which you generated in step1) and run restore again. \r\n5. Check the lock file should not be regenerate.\r\n6. Reopen this solution and go to Solution Explorer window to see if the lock file is deleted (or looks like it is deleted as expected screenshot showing) in the window too. \r\n\r\n### Expected\r\nThe deleted packages.lock.json file should show as a deleted file or removed (that's what we do for .NET Core projects) in the Solution Explorer window. Below is what we show on 17.2 Preview 2 (Main\\32228.143).\r\n![image](https://user-images.githubusercontent.com/20632625/156330129-ad2a9715-2cc2-4e85-9898-5ec8c4f0110e.png)\r\n\r\n### Actual\r\nThe deleted packages.lock.json file still shows as before in the Solution Explorer window as below.\r\n![image](https://user-images.githubusercontent.com/20632625/156330313-bcd9ef97-06ac-4d0f-955e-2980b74aecf0.png)\r\n\r\n### Notes:\r\n1.It is not a regression. We just think it should be fix on VS 16.11.\r\n2.It doesn't repro on 17.2 Preview 2 (Main\\32228.143).\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-03-17T03:30:23.6262979Z","RunDurationInMilliseconds":1266}