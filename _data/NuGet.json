{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29338556594","Type":"IssuesEvent","CreatedAt":"2023-05-26T12:11:45","Actor":"dscheg","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9518","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Table in README markdown looks ugly due to word wrap that breaks words\" (#9518) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n1. Table in README markdown looks ugly if some column contains a long text due to word wrap that breaks words in other columns even inside the inline code block. Compare rendered tables: Nuget https://www.nuget.org/packages/GlobRegex vs Github https://github.com/dscheg/GlobRegex\r\nGithub markdown looks good even on narrow screens. CSS to fix issue:\r\n```css\r\n.readme-common .table {\r\n  overflow: auto;\r\n  display: block;\r\n  word-break: normal;\r\n}\r\n```\r\n\r\n2. It might be better to have a horizontal scroll and turn off word wrap inside multiline code blocks, because it seems such code is hard to read, given that there are no line numbers and display of hyphens: it is not always clear whether the EOL is in the code itself or word wraping has been applied. The same example links above. CSS to fix issue: `pre code { white-space: pre; }` instead of `pre code { white-space: pre-wrap; }`\r\n\n\n### Repro Steps\n\nCreate readme for the package with:\r\n1. Table with 3 columns with a long text inside the middle column\r\n2. Multiple long lines inside multiline code block\n\n### Expected Behavior\n\n1. Table looks good even with long text in some column\r\n2. Multiline code blocks are easy to read even with long lines\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/1962268/513789fc-7d62-452b-9a10-e2e6607af536)\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29298313034","Type":"IssuesEvent","CreatedAt":"2023-05-24T23:50:39","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9517","RelatedDescription":"Opened issue \"[NuGet.org Bug]: [Admin UI] Show number of package versions that have been selected in the Admin Unlist UI\" (#9517) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nWhen we have to unlist many package versions at once, we often need to break it up into smaller batches. Showing the number of package versions that have been selected in the bulk unlist UI would help me do a better job of batch-sizing.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/2aacb376-6d0d-44c0-bc21-c5d442bcf831)\r\n\r\nWe could even add the ability to select the first 'X' <unlisted/listed> package versions to help with this.\n\n### Repro Steps\n\n1. Go to the Bulk Unlist UI in the Admin Panel\r\n2. Enter names of packages you need to unlist\r\n3. Scroll down\n\n### Expected Behavior\n\n1. Show how many package versions have been selected (possibly in the button text)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/2aacb376-6d0d-44c0-bc21-c5d442bcf831)\r\n\r\n2. Add the ability to select the first 'X' <unlisted/listed> package versions among those shown.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29293556712","Type":"PullRequestEvent","CreatedAt":"2023-05-24T19:00:17","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9501","RelatedDescription":"Merged pull request \"[2FA] Avoid new accounts coming to the Register page.\" (#9501) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Add `noindex` for `Register` (signup) and `SignInNugetAccount` (LogOnNuGetAccount) to avoid displaying them on search engines\r\n* `SignUp` (/users/account/signup) page now redirects to `Sign In`.\r\n* `LegacyRegister` (/account/register) page now redirects to `Sign In`.\r\n* `Register` POST endpoint redirects to `Sign In` when it has a password registration and 2FA enforcement flag is turned.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4768"},{"Id":"29270036909","Type":"IssuesEvent","CreatedAt":"2023-05-24T01:17:35","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9516","RelatedDescription":"Opened issue \"Remove unused 'OrganizationsEnabledForAll' file in blob storage\" (#9516) at NuGet/NuGetGallery","RelatedBody":"'OrganizationsEnabledForAll' property was removed  5 years ago.\nhttps://github.com/NuGet/NuGetGallery/pull/5822/files\n\nHowever, this property is still in Login-Discontinuation-Configuration.json, it throws exceptions when initialization loginconfiguration.\n\n "},{"Id":"29266406334","Type":"PullRequestEvent","CreatedAt":"2023-05-23T20:49:21","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9515","RelatedDescription":"Merged pull request \"[ReleasePrep][2023.05.23]RI of dev into main\" (#9515) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"29261367196","Type":"PullRequestEvent","CreatedAt":"2023-05-23T16:51:30","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9515","RelatedDescription":"Opened pull request \"[ReleasePrep][2023.05.23]\" (#9515) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"29256057975","Type":"PullRequestEvent","CreatedAt":"2023-05-23T13:46:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9506","RelatedDescription":"Merged pull request \"Adjust deprecation API slightly to prepare for public preview\" (#9506) at NuGet/NuGetGallery","RelatedBody":"- No-op the last edit update if there are no changes (reduces V3 load)\r\n- Require user agent and include the full UA as a custom dimension in App Insights\r\n- Return 400 not 404 when the alternate package is missing \r\n- Require user agent for the deprecation endpoint\r\n- These changes are backwards compatible with the known integrations with the Deprecation API\r\n\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/9505.\r\n\r\nAlign the API with the design changes described here: https://github.com/NuGet/Engineering/pull/4709 (internal PR now, will be public after public preview begins)."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29346672942","Type":"PullRequestEvent","CreatedAt":"2023-05-26T18:19:07","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/12616","RelatedDescription":"Opened pull request \"[Draft] Spec for Package Source Mapping Actions in PM UI\" (#12616) at NuGet/Home","RelatedBody":"[Draft] Package Source Mapping Package Management Actions in the PM UI([shortcut to rendered spec](https://github.com/NuGet/Home/blob/dev-donnie-msft-specSourceMappingActionSpec/proposed/2023/package-source-mapping-actions-PMUI.md))\r\n    - Marked Draft as there are questions about how we should proceed\r\n    - Various edge cases are unclear"},{"Id":"29326518066","Type":"PullRequestEvent","CreatedAt":"2023-05-26T00:00:55","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12313","RelatedDescription":"Closed pull request \"Spec proposal for opt-in feature where PrivateAssets flag option indepdent from IncludeAssets/ExcludeAssets options\" (#12313) at NuGet/Home","RelatedBody":"Related to: https://github.com/NuGet/Home/issues/6938\r\n\r\n## Description\r\nCurrently `Include/Exclude` flag completely eclipses `PrivateAssets` flag when generating nupkg package in many cases. So, it doesn't let package dependencies flow to parent projects of consuming project. Here's a spec proposal for how to address with new opt-in feature property.\r\n[Rendered](https://github.com/NuGet/Home/blob/1af7f2779f52f1f22e4858bdeaa25f9623cf94c8/proposed/2022/PrivateAssetIndepdentFromExcludeAsset.md)\r\n"},{"Id":"29322749204","Type":"IssuesEvent","CreatedAt":"2023-05-25T19:46:27","Actor":"dainizzz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12614","RelatedDescription":"Opened issue \"Add documentation for dotnet nuget config command\" (#12614) at NuGet/Home","RelatedBody":"This will add documentation for https://github.com/NuGet/NuGet.Client/pull/5158"},{"Id":"29315294103","Type":"IssuesEvent","CreatedAt":"2023-05-25T14:24:07","Actor":"zLucPlayZ","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12613","RelatedDescription":"Opened issue \"NuGet does not respect the system certificate chain\" (#12613) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET 7.0.302 | NuGet 6.6.0.61\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nOther\n\n### Repro Steps & Context\n\nI am trying to build a ASP.NET Core 7 application in a docker multistep build inside a bitbucket runner (Bitbuckets CI system).\r\nHowever it fails when trying to contact our for now legacy teamcity nuget feed to grab a nuget package off it. It uses our self signed company wide root ca. So I though i would just include our ca in the build container, well it worked for curl, but nuget still seems to just ignore it... Can I somehow specify the the cert store to be used? Or why does it ignore the system one in the first place. Same happens with the \"7.0\" tag of the sdk. Alpine or not does not seem to change anything.\r\n\r\nRepro:\r\n1. Have a nuget feed with a self signed HTTPS certificate\r\n2. Use one of those packages in a project & configure nuget.config to use the nuget feed\r\n3. Try to build / nuget restore the project inside a docker multistep build\r\n\r\nDockerfile, this is all that the CI executes after checking out the git repo.\r\n```\r\nFROM mcr.microsoft.com/dotnet/sdk:7.0-alpine AS build\r\n\r\nWORKDIR /src\r\nCOPY . .\r\nCOPY [\"agenda-root-ca.crt\", \"/usr/local/share/ca-certificates/\"] # copying our self signed ca\r\nRUN update-ca-certificates # update the system certs\r\n\r\n# this FAILS if the above two commands would not setup the certificate!!!\r\nRUN curl https://teamcity-nuget.agenda.de/guestAuth/app/nuget/feed/_Root/default/v3/index.json # debug only\r\n\r\nWORKDIR \"/src/BrainLogApi\"\r\n\r\nRUN dotnet restore --verbosity d # debug only, publish already does it\r\nRUN dotnet publish \"BrainLogApi.csproj\" -c Release -o /app/publish\r\n\r\nFROM mcr.microsoft.com/dotnet/aspnet:7.0-alpine\r\nWORKDIR /app\r\nCOPY --from=build /app/publish .\r\nENTRYPOINT [\"dotnet\", \"Agenda.BrainLogApi.dll\"]\r\n```\r\n\r\nI also saw that package add prints the inner exception so here it is. This is from a container I manually created from the base build image I also use in the docker build, to simulate the whole thing and possibly find a solution. \r\n\r\n```\r\n/brain-log-api/BrainLogApi # dotnet add package Agenda.Common\r\n  Determining projects to restore...\r\n  Writing /tmp/tmpDnhfdC.tmp\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/7.0.302/trustedroots/codesignctl.pem'.\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/usr/share/dotnet/sdk/7.0.302/trustedroots/timestampctl.pem'.\r\ninfo : Adding PackageReference for package 'Agenda.Common' into project '/brain-log-api/BrainLogApi/BrainLogApi.csproj'.\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/agenda.common/index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/agenda.common/index.json 785ms\r\nerror: Unable to load the service index for source https://teamcity-nuget/guestAuth/app/nuget/feed/_Root/default/v3/index.json.\r\nerror:   The SSL connection could not be established, see inner exception.\r\nerror:   The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\n\n### Verbose Logs\n\n```shell\nToo large, http://pastebin.com/yQa5Y4dZ\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-05-27T03:30:22.7745054Z","RunDurationInMilliseconds":1068}