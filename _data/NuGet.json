{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31200696758","Type":"PullRequestEvent","CreatedAt":"2023-08-18T02:35:34","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9625","RelatedDescription":"Opened pull request \"[Usability] Users can now jump quickly between individual search results\" (#9625) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9608\r\n\r\n**Problem:**\r\n\r\nUsers don't like the fact that they have to tab through everything in each search result to move down the list of search results. They want to be able to navigate between search results more easily.\r\n\r\n**Solution:**\r\n\r\nI placed the package IDs for each search result inside `<h2>` heading tags. With screen readers, you can navigate between headings using `H/shift+H`, and then continue sequential navigation through each search result using `tab/shift+tab`. Users will now be able to move between individual search results quicker.\r\n\r\nThere is no visible UI change here. The css changes are there to just keep the package headers looking the same as they did previously.\r\n\r\n**NOTE:** There was an old feature flight that was missing from the `flags.json` file (pointed out by @dannyjdev here: https://github.com/NuGet/NuGetGallery/pull/9537#discussion_r1270107406), so I've added that in with this change too."},{"Id":"31197636027","Type":"PullRequestEvent","CreatedAt":"2023-08-17T22:16:45","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9624","RelatedDescription":"Merged pull request \"Fix url frameworks tab\" (#9624) at NuGet/NuGetGallery","RelatedBody":"Opening new tabs by right-clicking on buttons didn't work.\r\n\r\nButtons in question: \r\n<img width=\"452\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/2a561aa1-3eed-4582-a4bc-88728f408dad\">\r\n<img width=\"442\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/f3307c8a-153a-4cca-81ca-667c2dc039cb\">\r\n\r\n\r\nIt now works.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9283"},{"Id":"31194867185","Type":"PullRequestEvent","CreatedAt":"2023-08-17T19:44:03","Actor":"Lanaparezanin","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9624","RelatedDescription":"Opened pull request \"Fix url frameworks tab\" (#9624) at NuGet/NuGetGallery","RelatedBody":"Opening new tabs by right-clicking on buttons didn't work.\r\n\r\nButtons in question: \r\n![image](https://github.com/NuGet/NuGetGallery/assets/58230697/c230923b-67b3-4854-85d9-899b67e5ee56)\r\n<img width=\"442\" alt=\"image\" src=\"https://github.com/NuGet/NuGetGallery/assets/58230697/f3307c8a-153a-4cca-81ca-667c2dc039cb\">\r\n\r\n\r\nIt now works.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9283"},{"Id":"31192217161","Type":"PullRequestEvent","CreatedAt":"2023-08-17T17:39:21","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9623","RelatedDescription":"Merged pull request \"[Usability] Show a success message when adding members to your org\" (#9623) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9609\r\n\r\n**Problem:**\r\n\r\nUsers want to see a confirmation message when they successfully add a member to their organization. They can currently see the Members list to see the new member with \"(pending approval)\" next to their name, but they want to see a more explicit success message.\r\n\r\n**Solution:**\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/16a1eb13-4bfd-4f8e-813e-77cf5d509925)\r\n\r\n\r\n**NOTE:** I also fixed an a11y issue that showed up on A11y Fastpass where multiple 'member role' elements (the 'Select role' dropdowns in the screenshot) had the same ids. This id wasn't being used anywhere so I just moved the value to the element's class list instead."},{"Id":"31169288950","Type":"PullRequestEvent","CreatedAt":"2023-08-16T22:55:50","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9623","RelatedDescription":"Opened pull request \"[Usability] Show a success message when adding members to your org\" (#9623) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9609\r\n\r\n**Problem:**\r\n\r\nUsers want to see a confirmation message when they successfully add a member to their organization. They can currently see the Members list to see the new member with \"(pending approval)\" next to their name, but they want to see a more explicit success message.\r\n\r\n**Solution:**\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/8440b6f0-d1f4-4560-85da-a75fc416036a)\r\n"},{"Id":"31169127141","Type":"PullRequestEvent","CreatedAt":"2023-08-16T22:42:58","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9618","RelatedDescription":"Merged pull request \"[ReleasePrep][2023.08.14]RI of dev into main\" (#9618) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"31164875061","Type":"PullRequestEvent","CreatedAt":"2023-08-16T18:50:33","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9123","RelatedDescription":"Closed pull request \"[TFM Badges] Added + sign for badges.\" (#9123) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n\r\n* TODO\r\n\r\n### Addresses\r\nhttps://github.com/NuGet/NuGetGallery/issues/9044"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"31197837055","Type":"IssuesEvent","CreatedAt":"2023-08-17T22:30:05","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11232","RelatedDescription":"Closed issue \"[Feature]: Support ECDSA certificates for package signing\" (#11232) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCurrently, nuget package signing is limited to RSA signing. Attempting to sign with an ECDSA certificate results in:\r\n\r\n> error: NU3013: The signing certificate has an unsupported signature algorithm.\r\n\r\nECDSA signatures are smaller, more secure, and generally regarded as an improvement over RSA.\n\n### Additional Context and Details\n\nWindows Authenticode and many, many other signing specifications have supported ECDSA for several years."},{"Id":"31196637594","Type":"IssuesEvent","CreatedAt":"2023-08-17T21:13:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12399","RelatedDescription":"Closed issue \"Show a Visual Studio notification when a vulnerability is detected\" (#12399) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nIn addition to #12398, a notification should appear in Visual Studio's notification center with a link to the package manager UI to address issues.\r\n\r\nThe notification will let the user know what package in what project/solution is vulnerable or its plural equivalent. i.e. `Known security vulnerabilities have been detected in your project(s)/solution`.\r\n\r\n![image](https://user-images.githubusercontent.com/1288848/215889414-0cf1c648-0149-4958-a223-5c25a575020e.png)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"31196631431","Type":"IssuesEvent","CreatedAt":"2023-08-17T21:13:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12399","RelatedDescription":"Reopened issue \"Show a Visual Studio notification when a vulnerability is detected\" (#12399) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nIn addition to #12398, a notification should appear in Visual Studio's notification center with a link to the package manager UI to address issues.\r\n\r\nThe notification will let the user know what package in what project/solution is vulnerable or its plural equivalent. i.e. `Known security vulnerabilities have been detected in your project(s)/solution`.\r\n\r\n![image](https://user-images.githubusercontent.com/1288848/215889414-0cf1c648-0149-4958-a223-5c25a575020e.png)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"31195464130","Type":"IssuesEvent","CreatedAt":"2023-08-17T20:13:12","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12820","RelatedDescription":"Opened issue \"Test:  use product resource string instead of hard-coded en-US string\" (#12820) at NuGet/Home","RelatedBody":"It should be easy to clone the repo, build and test, irrespective of the current user's locale.  There's at least [one report](https://github.com/NuGet/NuGet.Client/pull/5002#issuecomment-1679707317) that this workflow was not possible without first changing the locale to en-US.  While the report lacks detail, I suspect that the problem is that some tests use hard-coded en-US strings ([example](https://github.com/NuGet/NuGet.Client/blob/4d815bf71aa1ce5fe8d9d9da6573303d7093c2f1/test/NuGet.Clients.FuncTests/NuGet.CommandLine.FuncTest/Commands/InstallCommandTests.cs#L32)) instead of using the product's resource string."},{"Id":"31194026529","Type":"IssuesEvent","CreatedAt":"2023-08-17T19:03:24","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7796","RelatedDescription":"Closed issue \"NuGet restore on solution with Visual Studio Installer projects (vdproj) causes MSB4025\" (#7796) at NuGet/Home","RelatedBody":"Solutions with legacy Visual Studio installer projects ( vdproj)  have started failing.\r\n\r\nIt would seem it doesn't result in a non zero exit code, but also doesn't restore all project properly as we MSBuild later fails with 'project.assets.json' not found. Run a NuGet package restore to generate this file.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 4.9.3\r\n\r\nWorked before? If so, with which NuGet version: 4.7.1\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. NuGet.exe restore \"TestSolution.sln\"\r\n\r\n### Verbose Logs\r\n\r\nTestProjectInstaller\\TestProjectInstaller.vdproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, \r\nposition 1.\r\n\r\n### Sample Project\r\n\r\nCommuting right now, but will see if I can get a minimal repo project.\r\n\r\nBut the project causing issues has\r\n1. VDPROJ installer\r\n2. A multitargeted net462 & netstandard1.5 class lib\r\n3. v4.5.2 console app\r\n\r\n"},{"Id":"31193879770","Type":"IssuesEvent","CreatedAt":"2023-08-17T18:56:27","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11864","RelatedDescription":"Closed issue \"[Bug]: Double loading status indicators sometimes shown in PMUI\" (#11864) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.3.0 Preview 3.0 [32609.364.main]\n\n### Worked before?\n\nYes, unknown\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Create a new C# Class Library project.\r\n2. Open PMUI for Solution.\r\n3. On the Installed tab (opened by default, which may be important to repro), there are 2 indicators for \"no packages found\".\r\n![image](https://user-images.githubusercontent.com/49205731/173136214-08404aea-17e8-4375-b14c-f3462cae0786.png)\r\n\r\nNote that the visual tree shows multiple loading indicators:\r\n![MicrosoftTeams-image (1)](https://user-images.githubusercontent.com/49205731/173136349-37b701d3-c578-43b0-a4fe-4fc8957be63f.png)\r\n\r\nOne suspected cause is that recent changes to async loading logic and/or for grouping of the packages list could be allowing 2 additions of the `LoadingStatusIndicator` to the packages list.\n\n### Verbose Logs\n\n_No response_"},{"Id":"31193835726","Type":"IssuesEvent","CreatedAt":"2023-08-17T18:54:20","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12170","RelatedDescription":"Closed issue \"[Bug]: Incorrect restore in Visual Studio when a dependency to a C# project is flowed through a C++/CLI project\" (#12170) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild -v:m -t:Restore .\\ProjectA\\ProjectA.csproj\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\n\r\nThe original bug was reported in https://github.com/dotnet/project-system/issues/8381\r\n\r\n------------------\r\n## Visual Studio 2022 17.3 Preview\r\n\r\n## Summary\r\n\r\nThe `project.assets.json` file is incomplete for a C# project when it transitively depends on another C# project through a C++/CLI project. This problem seems to only occur in **Visual Studio 2022 17.3** (tested with Preview 4.0 to 6.0) and not previous versions.\r\n\r\nLets say we have three projects: `ProjectA` (C#), `ProjectB` (C++/CLI) and `ProjectC` (C#); so that `ProjectA` references `ProjectB` which references `ProjectC`:\r\n\r\n```txt\r\nProjectA (C#) --(depends on)--> ProjectB (C++/CLI) --> ProjectC (C#)\r\n```\r\n\r\nIf the `ProjectReference` from `ProjectB` to `ProjectC` does not contain the metadata `Project` (e.g. `<Project>{e5599aee-f39e-4613-b48d-7824eca526e5}</Project>`), MSBuild (through command line) and Visual Studio restore won't behave the same way. Typically, the transitive reference to `ProjectC` is missing from `ProjectA`'s asset file when performing NuGet restore in Visual Studio:\r\n\r\n```diff\r\n  (...)\r\n  \"targets\": {\r\n    \".NETFramework,Version=v4.8\": {\r\n      \"ProjectB/1.0.0\": {\r\n        \"type\": \"project\",\r\n-       \"dependencies\": {\r\n-         \"ProjectC\": \"1.0.0\"\r\n-       },\r\n        \"compile\": {\r\n          \"bin/placeholder/ProjectB.dll\": {}\r\n        },\r\n        \"runtime\": {\r\n          \"bin/placeholder/ProjectB.dll\": {}\r\n        }\r\n      },\r\n-     \"ProjectC/1.0.0\": {\r\n-       \"type\": \"project\",\r\n-       \"framework\": \".NETFramework,Version=v4.8\",\r\n-       \"compile\": {\r\n-         \"bin/placeholder/ProjectC.dll\": {}\r\n-       },\r\n-       \"runtime\": {\r\n-         \"bin/placeholder/ProjectC.dll\": {}\r\n-       }\r\n-     }\r\n    }\r\n  }\r\n  (...)\r\n```\r\n\r\n## Steps to Reproduce\r\n\r\n1. Create three projects as described in the summary\r\n2. Remove `<Project>` metadata in the reference from `ProjectB` to `ProjectC`:\r\n\r\n    ```diff\r\n    -    <ProjectReference Include=\"..\\ProjectC\\ProjectC.csproj\">\r\n    -      <Project>{e5599aee-f39e-4613-b48d-7824eca526e5}</Project>\r\n    -    </ProjectReference>\r\n    +    <ProjectReference Include=\"..\\ProjectC\\ProjectC.csproj\" />\r\n    ```\r\n\r\n3. Perform a restore on `ProjectA` using MSBuild and check the contain of `.\\ProjectA\\obj\\project.assets.json`: `msbuild -v:m -t:Restore .\\ProjectA\\ProjectA.csproj`\r\n4. Open the solution in Visual Studio 2022 17.3 Preview, force a restore if needed, and check the content of `.\\ProjectA\\obj\\project.assets.json` again; you will notice the changes mentioned in the summary\r\n\r\nSee this repository: [`joeltankam/restore-cli-sample`](https://github.com/joeltankam/restore-cli-sample)\r\n\r\n## Expected Behavior\r\n\r\nMSBuild CLI and Visual Studio should have the same behavior, which means the restore should not be performed when opening the solution in Visual Studio. Package Manage log should be:\r\n\r\n> All packages are already installed and there is nothing to restore.\r\n\r\n## Actual Behavior\r\n\r\nThe restore is performed again in Visual Studio for `ProjectA`:\r\n\r\n> Restored (...)\\ProjectA\\ProjectA.csproj (in 0.9 ms).\r\n> NuGet package restore finished.\r\n\r\nChanging `.\\ProjectA\\obj\\project.assets.json` as described in the summary; creating incremental compilation issues when switching from command-line to VS (e.g. some projects are unnecessarily re-restored and recompiled).\r\n\r\n## User Impact\r\n\r\nWe have a 950+ projects repository (~85% C#, ~10% C++, ~5% C++/CLI), with an average solution size of around 280 projects.\r\n\r\nWhen switching the .NET SDK project file format, we removed `<Project>` metadata on all project references, including C++ projects. This used to work perfectly until Visual Studio 2022 17.3. Now that it does not, it has some significant impacts considering the size of our repository and solutions (it's standard practice for us first to compile the whole repository through command-line, and then open a specific solution in Visual Studio, thus the issue).\r\n\r\nOn a side note, the `Project` metadata is supposed to be the `ProjectGuid` property of the referenced project; where does that value come from in this scenario since C# projects don't have that property anymore?\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"31192154564","Type":"IssuesEvent","CreatedAt":"2023-08-17T17:36:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10184","RelatedDescription":"Closed issue \"Show transitive dependencies in PMUI for PackageReference projects\" (#10184) at NuGet/Home","RelatedBody":"Design spec: https://github.com/NuGet/Home/blob/dev/proposed/2020/Transitive-Dependencies.md\r\n\r\nThis epic covers the PMUI portion of the transitive dependencies spec"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"},{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-18T03:30:20.8019332Z","RunDurationInMilliseconds":905}