{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"19006838034","Type":"PullRequestEvent","CreatedAt":"2021-11-23T01:48:01","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8890","RelatedDescription":"Opened pull request \"ServerCommon and NuGet.Client libraries updated.\" (#8890) at NuGet/NuGetGallery","RelatedBody":"* ServerCommon Libraries updated to 2.93.0.\r\n* NuGet.Client Libraries updated to 6.0.0."},{"Id":"19005734560","Type":"PullRequestEvent","CreatedAt":"2021-11-22T23:28:55","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8466","RelatedDescription":"Closed pull request \"Gallery storage secret refresh\" (#8466) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/3522\r\n\r\nThis change makes Gallery refresh storage credentials. While the general mechanism to refresh secrets is introduced, I did *not* go through all DI container registrations to make sure we don't have other singletons holding on to old secrets. The goal was to make storage secrets rotate at this moment.\r\n\r\nThe problem with secret refresh in Gallery has several reasons:\r\n* We have too many singletons that inject secrets once at their creation, then hold on to those injected values;\r\n* The `AppConfiguration` object is expensive to create (and we need one for every request we get) as it might try to read secrets from KeyVault, so it was registered in DI container as a singleton as well, so there was no way to retrieve fresh set of credentials.\r\n\r\nTo address the latter concern a [change](https://github.com/NuGet/ServerCommon/pull/363) in ServerCommon was made that introduces the sync secret injection with refresh in background task. Now, `ConfigurationService` during startup enumerates all the secrets Gallery uses, feeds them into the sync secret reader to start the background refresh loop. Now, injecting secret is a sync operation that never does any I/O. The downside here is that if we don't discover all secrets during startup, the injection of those missed secrets will fail at run time. To mitigate that a self-healing mechanism was added to the sync reader that would add those new secrets to the refresh list, so while the initial attempts to inject those would fail, it should eventually start working. Sync reader emits a metric if it runs into such situation, we'll have an alert for that.\r\n\r\nThe process of enumerating all secrets got a bit complicated since Authentication-related settings had their own mechanism of reading secrets.\r\n\r\nThe next major change was making sure storage-related registrations are not singletons. There were a few issues with those:\r\n* Object themselves once constructed hold on to resolved secrets forever;\r\n* Object factories in `ConfigureForAzureStorage` used a single instance of `AppConfiguration` to create new instances;\r\n* Some of storage-related objects have to be singletons.\r\n\r\n`EditableFeatureFlagFileStorageService` and `ContentService` have some caching mechanisms inside, which requires them to be a singleton. One option to solve it would be to extract the caching functionality into a separate class that would not have anything to do with underlying storage, but that would be quite complicated change, instead, instances of those classes now get storage service factories, instantiate individual services as needed and discard them right after that. Some DI registrations had to be updated to make sure they receive properly keyed factories.\r\n\r\n`GalleryMachineKeyConfigurationProvider` was updated to not to try to create configuration for itself if it is not available. Now it waits until `ConfigurationService` is properly initialized.\r\n\r\nSince the new sync secret reader emits metrics, we now need to set up telemetry service before the configuration service is fully initialized, so some workarounds had to be added there (specifically, to prevent attempting to inject secrets to telemetry-related options, since those don't contain secrets).\r\n\r\n`_configurationTypes` field was added to `ConfigurationService` to unify the way various types of configuration are crated and to make sure the secret enumeration for the new sync reader has a reliable source of data.\r\n\r\nTo test the change connection string hash logging was added to `CloudBlobClientWrapper` at the point of use (not instantiation),  to verify the refresh actually happens and secret refresh interval was reduced to 15 minutes. Since we are reading SAS tokens generated by KeyVault, they effectively change every second (issue time is precise to the second in it), which provides a good opportunity to verify they are not reused longer than expected. After running for couple of nights in dev and few bugfixes, logs indicate that secrets are indeed refreshed every 15 minutes.\r\n\r\nUnfortunately, some of our unit tests assume that `ConfigurationService.Current` always returns the same object, so some workaround was added to `TestGalleryConfigurationService` to make them pass."},{"Id":"19002468838","Type":"PullRequestEvent","CreatedAt":"2021-11-22T19:01:43","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8888","RelatedDescription":"Merged pull request \"[2021-11-21] RI dev to main\" (#8888) at NuGet/NuGetGallery","RelatedBody":"Propagating revert to `main` as those deployments are broken, too."},{"Id":"18997936221","Type":"IssuesEvent","CreatedAt":"2021-11-22T14:32:23","Actor":"baronfel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8889","RelatedDescription":"Opened issue \"[Feature]: Render Release Notes in Markdown in the same way as READMEs are\" (#8889) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nAs a package user, I enjoy the new README markdown support in NuGet.org, but when I go to packages I already use to see what's changed between releases, the Release Notes for that package show unformatted markdown, which is difficult to read compared to the rendered form.\n\n### The Elevator Pitch\n\nThe new Release Notes and README support on the NuGet website is great! READMEs in particular are a great experience for people using the gallery for package discovery.  The Release Notes tab looks a little drab by comparison, unfortunately. It would be great if the Release Notes tab could render Markdown in the same way as READMEs in order to present a unified experience to a viewer. Many packages use markdown for links, bulleted lists, and sometimes even embedded images to demonstrate changes, and unifying that would be a marked (heh) improvement in my view.\n\n### Additional Context and Details\n\n* NPM - no support for release notes/changelog, just a static list of versions\r\n* Crates.io - no support for release notes/changelog, provides a list of versions with release metadata and clickable links\r\n* Maven Central - no support for release notes/changelog, a list of versions is provided to swap views of metadata"},{"Id":"18988707787","Type":"PullRequestEvent","CreatedAt":"2021-11-22T02:44:12","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8879","RelatedDescription":"Merged pull request \"Update Roslyn Analyzer\" (#8879) at NuGet/NuGetGallery","RelatedBody":"The old Roslyn Analyzer package has been deprecated and not recommended:\r\nhttps://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers/\r\n\r\nThis is to use the new one."},{"Id":"18986794451","Type":"PullRequestEvent","CreatedAt":"2021-11-21T21:06:24","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8888","RelatedDescription":"Opened pull request \"RI dev to main\" (#8888) at NuGet/NuGetGallery","RelatedBody":"Propagating revert to `main` as those deployments are broken, too."},{"Id":"18986786017","Type":"PullRequestEvent","CreatedAt":"2021-11-21T21:04:45","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8887","RelatedDescription":"Merged pull request \"Reverting some recent changes.\" (#8887) at NuGet/NuGetGallery","RelatedBody":"Reverting the latest framework changes as switching to NuGet.Frameworks v.6.0.0 like that breaks deployments."},{"Id":"18981681511","Type":"PullRequestEvent","CreatedAt":"2021-11-21T01:25:33","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8887","RelatedDescription":"Opened pull request \"Reverting some recent changes.\" (#8887) at NuGet/NuGetGallery","RelatedBody":"Reverting the latest framework changes as switching to NuGet.Frameworks v.6.0.0 like that breaks deployments."},{"Id":"18980651506","Type":"IssuesEvent","CreatedAt":"2021-11-20T20:36:31","Actor":"MangelMaxime","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8886","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Allow the user to select precisely the code he wants\" (#8886) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nHello,\r\n\r\nYou can't select precisely the text you want in the \"command\" box.\r\n\r\nhttps://user-images.githubusercontent.com/4760796/142740240-77277e23-4a71-4002-88cf-bd5800e82fd0.mp4\r\n\r\nThis is annoying when you already have the manifest set up in your repo and just want to copy the second line.\r\n\r\nFix: \r\n\r\nOn the CSS class `install-command-row`, remove all the rules about `user-select: all;`\r\n\r\nIf the user, wants to copy the whole snippet he can use the Copy button on the right.\n\n### Repro Steps\n\n1. Open https://www.nuget.org/packages/fantomas-tool/4.6.0-alpha-008\r\n2. Click on .NET CLI (local)\r\n3. Try to select only the second line\r\n\r\n\n\n### Expected Behavior\n\nYou should be able to select only the second line if you want\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"19006709945","Type":"IssuesEvent","CreatedAt":"2021-11-23T01:29:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11323","RelatedDescription":"Closed issue \"[Bug]: Icons don't show for self hosted packages\" (#11323) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nMicrosoft Visual Studio Enterprise 2019 Version 16.10.2\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\nCreate your own package with an icon defined in the .nuspec\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>BuildingBlocks</id>\r\n    <version>1.0.0</version>\r\n    <authors>Bridges</authors>\r\n    <icon>images\\BuildingBlocks.png</icon>\r\n    <iconUrl>https://i.imgur.com/5CDMwJq.png</iconUrl>\r\n    <description>Package for sharing building blocks for the Adminsuite Projects</description>\r\n    <dependencies>\r\n      <group targetFramework=\"net5.0\">\r\n        <dependency id=\"AspNetCore.HealthChecks.UI.Client\" version=\"5.0.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.ApplicationInsights.AspNetCore\" version=\"2.18.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.ApplicationInsights.Kubernetes\" version=\"2.0.1\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\ncsproj file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <Authors>Bridges</Authors>\r\n    <Product>Admin Suite</Product>\r\n    <PackageIcon>images\\BuildingBlocks.png</PackageIcon>\r\n    <PackageIconUrl>https://i.imgur.com/5CDMwJq.png</PackageIconUrl>\r\n    <Description>Package for sharing building blocks for the Adminsuite Projects\r\n</Description>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Include=\"..\\BuildingBlocks.png\" Pack=\"true\" Visible=\"false\" PackagePath=\"images\\BuildingBlocks.png\" />\r\n  </ItemGroup>\r\n```\r\n\r\nIcon does not show up in the package manager list in visual studio\r\n![image](https://user-images.githubusercontent.com/5755057/138063653-7b2b1773-1f38-44bc-a78d-d579300b29a9.png)\r\n\r\n.nupkg archive contains the icon\r\n![image](https://user-images.githubusercontent.com/5755057/138064001-d1a75ca5-7b5e-43af-a870-1e469231b99c.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"19006646666","Type":"IssuesEvent","CreatedAt":"2021-11-23T01:21:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9462","RelatedDescription":"Closed issue \"Running a script after package installation doesn't work on .NET Core 3.0\" (#9462) at NuGet/Home","RelatedBody":"Hi, I have a script that needs to be run after the package is installed. This works well in .NET Framework. But in .NET Core 3.0, the script does not run\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\ndotnet.exe --version (if appropriate): 5.3.1.6268\r\n\r\nVS version (if appropriate): 2019 16.6 pre 3\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win 10 - 18363"},{"Id":"19006467839","Type":"IssuesEvent","CreatedAt":"2021-11-23T00:57:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11400","RelatedDescription":"Closed issue \"The retry for secondary search endpoint doesn't work \" (#11400) at NuGet/Home","RelatedBody":"@loic-sharma mentioned:  NuGet client will try the \"primary\" search endpoint, and if that fails, retry on the \"secondary\" search endpoint. \r\n@zivkan helped finding the fallback at: https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Protocol/Resources/PackageSearchResourceV3.cs#L113\r\nBut it doesn't seem to retry:\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Protocol/Resources/PackageSearchResourceV3.cs#L174\r\nHaven't investigated more. Just create this in case we forget about it."},{"Id":"19005856176","Type":"IssuesEvent","CreatedAt":"2021-11-22T23:43:20","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11407","RelatedDescription":"Opened issue \"[Bug]: `RegistryKeyUtility.GetValueFromRegistryKey()` has unused parameter, leading to incorrect results\" (#11407) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.0\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nBy taking a look at `RegistryKeyUtility` code, there's an unused parameter called `registryKeyPath`\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/a8b6b1fb3a1bccd207a83612cd0f5e1f4ff1d0b8/src/NuGet.Clients/NuGet.CommandLine/RegistryKeyUtility.cs#L12\r\n\r\nThis leads to incorred registry key readings.\n\n### Verbose Logs\n\n_No response_"},{"Id":"19004649613","Type":"IssuesEvent","CreatedAt":"2021-11-22T21:48:36","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11297","RelatedDescription":"Closed issue \"The strings \"ms\"  and \"sec\" are not localized on Output - Package Manager window.\" (#11297) at NuGet/Home","RelatedBody":"Output Window should output localized time spans from restore operation logs.\r\n\r\nInstallind a package, restore time (circled in red) shows 'ms':\r\n![image](https://user-images.githubusercontent.com/1192347/136841491-bed23b83-4b6b-4da7-bb6f-39ab7d650ada.png)\r\n\r\n\r\n"},{"Id":"19004433280","Type":"IssuesEvent","CreatedAt":"2021-11-22T21:30:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11389","RelatedDescription":"Closed issue \"[Bug]: Nuspec file with wildcard and  / instead of \\ skipped in 6.0.0 but works in 5.1.1 \" (#11389) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\n6.0.0\r\n\r\n### Worked before?\r\n\r\n5.1.1\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nI had a single line in the files section of a one nuspec file\r\n```\r\n <file src=\"./PowerShellScripts/*\"  target=\"/PowerShellScripts\" />\r\n```\r\nIn 5.1.1 this worked. Azure devops updated to 6.0 and the pipeline where nuget.exe runs reported\r\n```\r\nError NU5017: Cannot create a package that has no dependencies nor content.\r\n```\r\nI was able to repro this at the command line by downloading 6.0\r\nA second nuspec file was _not_ reporting the error \r\n```\r\n<file src=\"./PowerShellScripts/Enable-Https*\"     target=\"/PowerShellScripts\" />\r\n<file src=\"./PowerShellScripts/Helper.ps1\"   target=\"/PowerShellScripts\" />\r\n```\r\nThe first line is **skipped silently** and only helper.ps1 goes into the package.  This is more of a problem because the command **appears to complete successfully, but produces a faulty package.** \r\n\r\nIf I replace **/** with **\\\\**  everything works as it should. \r\n\r\nI'll apologize for my ignorance, but I don't know which of the following is the case: \r\n*  / as a path separator should _never_ have worked,  and this breakage was intentional, but I'm looking in the wrong place for  documentation of that (but shouldn't non-wildcards break too ?) \r\n*  / as a path separator wasn't intended to work,  but this breakage was unintentional, and a bug\r\n* / as a path separator should work,  and this is a bug\r\n\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"19003755774","Type":"IssuesEvent","CreatedAt":"2021-11-22T20:37:44","Actor":"cheesi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11406","RelatedDescription":"Opened issue \"Package Source Mapping: support exclude\" (#11406) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWe tried to adapt the new package source mapping feature today, and found one case which is missing.\r\nIf I understand it correctly, the main reason behind the source mapping is, to accidentally restore internal nuget packages from nuget.org (ofc not the whole reason, but for me at least the biggest part of the cake).\r\n\r\nLet's try this test setup from your [blog post](https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/):\r\n```\r\n<packageSourceMapping>\r\n  <packageSource key=\"nuget.org\">\r\n    <package pattern=\"*\" />\r\n  </packageSource>\r\n  <packageSource key=\"contoso.com\">\r\n    <package pattern=\"Contoso.*\" />\r\n  </packageSource>\r\n</packageSourceMapping>\r\n```\r\n\r\nThis basically specifies, that everything can be resolved via nuget.org, but for Contoso.* contoso.com should be used. Fine. But based from the log, it is still parsed as `Package source mapping matches found for package ID 'PACKAGE' are: 'nuget.org,feed-orga-project'.`\r\n\r\nBased on the documentation, the closest match is used, therefore contoso.com should be used. But what happens, when contoso.com is not available (for whatever reason)? Will it then fall back to nuget.org? Definitely not the thing I would like to configure.\r\n\r\nI guess it would be nice if there would be an exclude feature. Because I don't really care, if nuget packages are restored via nuget.org or an internal feed, but I would like to make sure, that internal packages can only be restored by the internal feed.\r\n\r\nOr am I missing anything?\n\n### Additional Context and Details\n\n_No response_"},{"Id":"18998595819","Type":"IssuesEvent","CreatedAt":"2021-11-22T15:07:18","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11376","RelatedDescription":"Closed issue \"[Bug]: NuGet SDK resolver should not throw if project path is NULL\" (#11376) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n6.0\n\n### Worked before?\n\nYes, 5.x\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nMSBuild will evaluate in-memory projects and ask SDK resolvers to resolve paths to SDKs.  In previous versions of MSBuild, a context is passed with a `null` value for the path to the project and the NuGet SDK resolver would throw an exception.  However, MSBuild would consider this non-fatal, log a warning, and try the next resolver.  In MSBuild 17.0, this logic changed to consider this scenario fatal and fail evaluation.\r\n\r\nRelated: https://github.com/dotnet/msbuild/issues/7035\n\n### Verbose Logs\n\n_No response_"},{"Id":"18983662859","Type":"IssuesEvent","CreatedAt":"2021-11-21T10:43:02","Actor":"IslanderN","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11405","RelatedDescription":"Closed issue \"[Bug]: SSL connection could not be established when restore f# project on Ubuntu 20.04.3 LTS\" (#11405) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n5.0.402\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Repro Steps & Context\r\n\r\nStep to reproduce\r\n\r\n1. dotnet new console --language F#\r\n2. dotnet restore\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\ndotnet new console --language F# logs:\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj...\r\n  Determining projects to restore...\r\n/usr/share/dotnet/sdk/5.0.402/NuGet.targets(131,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj]\r\n/usr/share/dotnet/sdk/5.0.402/NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [/media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj]\r\n/usr/share/dotnet/sdk/5.0.402/NuGet.targets(131,5): error :   The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot [/media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj]\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\ndotnet restore logs:\r\n\r\n  Determining projects to restore...\r\n/usr/share/dotnet/sdk/5.0.402/NuGet.targets(131,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj]\r\n/usr/share/dotnet/sdk/5.0.402/NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [/media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj]\r\n/usr/share/dotnet/sdk/5.0.402/NuGet.targets(131,5): error :   The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot [/media/islander/mediaStorage/projects/learning/dotnet/fsharp/helloworld/helloworld.fsproj]\r\n\r\n\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 20.04.3 LTS\r\nRelease:\t20.04\r\nCodename:\tfocal\r\n\r\n\r\n\r\nAs it can be helpful, same UntrustedRoot issue I faced when tried to run GRPC server and client on c#.\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1413216586253488130","CreatedAt":"2021-07-08T19:21:05+00:00","UserScreenname":"nuget","Text":"We are investigating customer reports about problems connecting to https://t.co/MK66n24Luw, such as issues while re… https://t.co/L3AW5c9mXR","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1410695861508526080","CreatedAt":"2021-07-01T20:24:37+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠ \nHave you recently experienced issues interacting with https://t.co/KVB7werYQh's Search API?… https://t.co/3eM1gicePx","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2021-11-23T05:30:31.0135721Z","RunDurationInMilliseconds":1506}