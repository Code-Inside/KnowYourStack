{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20842363899","Type":"PullRequestEvent","CreatedAt":"2022-03-21T02:54:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7471","RelatedDescription":"Closed pull request \"Add WasUsernameReleased field to AccountDelete\" (#7471) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/Engineering/issues/1303\r\n\r\nThe idea is that there will be a job (an additional task in Gallery.Maintenance) that queries for all accounts that were deleted more than a year in the past and renames them to a Guid or something similar. We need to have an additional column on the `AccountDelete`s table so that we can remember what accounts we've renamed because otherwise we won't be able to reliably know what accounts we've renamed.\r\n\r\nNote that the new column will be initialized to `default(bool)` aka `false`, so all existing columns will have the value we expect."},{"Id":"20842266661","Type":"PullRequestEvent","CreatedAt":"2022-03-21T02:39:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7595","RelatedDescription":"Closed pull request \"Add GalleryTools command to delete unconfirmed accounts\" (#7595) at NuGet/NuGetGallery","RelatedBody":"https://github.com/nuget/engineering/issues/2707\r\n\r\nI felt writing a tool to use the `DeleteAccountService` to delete these accounts was safer than writing a large `DELETE FROM Users` query, as the `DeleteAccountService` properly removes all credentials and other data and doesn't rely on foreign key deletion cascades."},{"Id":"20842266045","Type":"PullRequestEvent","CreatedAt":"2022-03-21T02:39:00","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7473","RelatedDescription":"Closed pull request \"Improve admin delete account page and add ability for admins to rename deleted accounts\" (#7473) at NuGet/NuGetGallery","RelatedBody":"Depends on https://github.com/NuGet/NuGetGallery/pull/7471\r\n\r\nCurrently, we don't have a way for site admins to release the username of a deleted account. This PR adds that functionality to the admin delete account page and also improves the UI of the page.\r\n\r\n![image](https://user-images.githubusercontent.com/18014088/63476908-8c716d80-c437-11e9-853f-edf3e45cfc3c.png)\r\n"},{"Id":"20842261174","Type":"PullRequestEvent","CreatedAt":"2022-03-21T02:38:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8009","RelatedDescription":"Closed pull request \"Fixed casing of header on NuGet.org to comply with Windows/VS standards.\" (#8009) at NuGet/NuGetGallery","RelatedBody":"\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8008"},{"Id":"20841517895","Type":"PullRequestEvent","CreatedAt":"2022-03-21T00:52:42","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8853","RelatedDescription":"Closed pull request \"Add link to latest version if browsing an older version\" (#8853) at NuGet/NuGetGallery","RelatedBody":"* Added new properties: `LatestRelease, LatestPreRelease`\r\n* Added link to the newest version\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8823"},{"Id":"20835229677","Type":"PullRequestEvent","CreatedAt":"2022-03-20T04:13:33","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9062","RelatedDescription":"Merged pull request \"Remove unused constants (found when investigating legacy README container)\" (#9062) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20827626826","Type":"PullRequestEvent","CreatedAt":"2022-03-19T00:06:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9062","RelatedDescription":"Opened pull request \"Remove unused constants (found when investigating legacy README container)\" (#9062) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20829567794","Type":"IssuesEvent","CreatedAt":"2022-03-19T07:31:08","Actor":"Monrother","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11684","RelatedDescription":"Opened issue \"[Bug]: It will always run NuGet restore automatically when the project is VSIX project\" (#11684) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nVisual Studio 16.11 (and 2022 as well possibly)\n\n### Worked before?\n\nNot sure\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIn a VS solution, create a VSIX project. And no matter whether the automatically restore NuGet is checked or not in Tools->Options, it will restore the package every time when open the solution. This is pretty annoying as we have a very large solution.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20828431013","Type":"IssuesEvent","CreatedAt":"2022-03-19T02:52:16","Actor":"Smartisa","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11683","RelatedDescription":"Opened issue \"CS0006 Could not found \\bin\\Debug\\net472\\***.dll\" (#11683) at NuGet/Home","RelatedBody":"### Discussed in https://github.com/NuGet/Home/discussions/11682\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Smartisa** March 19, 2022</sup>\r\nI git clone \"NuGet\". When I run the test file: \"PackageGraphAnalysisUtilitiesTests.cs\", there are many code problems in CS0006. How can I rebuild the project to eliminate such errors?\r\nThanks!!!!!\r\n![image](https://user-images.githubusercontent.com/47079990/159103963-65acfeb7-b895-4da5-ab54-0cb6e5c1521a.png)\r\n</div>"},{"Id":"20826806562","Type":"IssuesEvent","CreatedAt":"2022-03-18T22:14:04","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10074","RelatedDescription":"Closed issue \"lock files always inconsistent when using centrally managed packages\" (#10074) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): **dotnet.exe**\r\n\r\nNuGet version (x.x.x.xxx): **5.7.0.7**\r\n\r\ndotnet.exe --version (if appropriate): **3.1.402**\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): **win10 v1809 (17763.1397)**\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new solution.\r\n\r\n2. Create a console project and a class library project and add them to the solution.\r\n\r\n3. Add a reference to the class library project from the console project.\r\n\r\n4. Create a `Directory.Build.props` at the root of the workspace enabling centrally managed packages.\r\n\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n5. Create a `Directory.Packages.props` at the root of the workspace that includes one package.\r\n\r\n```\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"System.Text.Json\" Version=\"4.7.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n6. Add that package to the console project only.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\ClassProject\\ClassProject.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Text.Json\" />\r\n  </ItemGroup>\r\n  \r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n7. Run `dotnet restore --use-lock-file`.\r\n\r\n8. Run `dotnet restore --locked-mode`.\r\n\r\n9. See error message\r\n\r\n```\r\n  Determining projects to restore...\r\nC:\\Program Files\\dotnet\\sdk\\3.1.402\\NuGet.targets(128,5): error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Disable the RestoreLockedMode MSBuild property or pass an explicit --force-evaluate option to run restore to update the lock file. [C:\\Users\\user\\source\\repos\\git\\repro\\repro.sln]\r\n  Failed to restore C:\\Users\\user\\source\\repos\\git\\repro\\src\\ConsoleProject\\ConsoleProject.csproj (in 91 ms).\r\n  Restored C:\\Users\\user\\source\\repos\\git\\repro\\src\\ClassProject\\ClassProject.csproj (in 279 ms).\r\n```\r\n\r\n## Other suggested things\r\n\r\nThe error seems to be that the console project's `packages.lock.json` is wrongly listing all packages in `Directory.Packages.props` as dependencies of the class project.\r\n\r\n```json\r\n{\r\n  \"version\": 2,\r\n  \"dependencies\": {\r\n    \".NETCoreApp,Version=v3.1\": {\r\n      \"System.Text.Json\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[4.7.2, )\",\r\n        \"resolved\": \"4.7.2\",\r\n        \"contentHash\": \"TcMd95wcrubm9nHvJEQs70rC0H/8omiSGGpU4FQ/ZA1URIqD4pjmFJh2Mfv1yH1eHgJDWTi2hMDXwTET+zOOyg==\"\r\n      },\r\n      \"classproject\": {\r\n        \"type\": \"Project\",\r\n        \"dependencies\": {\r\n          \"System.Text.Json\": \"4.7.2\" # <-- not a dependency of classproject\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIf I manually delete the `System.Text.Json` line from the `packages.lock.json` file, `dotnet restore --locked-mode` now works.\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nhttps://github.com/moly/lockedfilesissue\r\n\r\n"},{"Id":"20826462974","Type":"IssuesEvent","CreatedAt":"2022-03-18T21:40:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9899","RelatedDescription":"Closed issue \"Support .NET 5: RC1\" (#9899) at NuGet/Home","RelatedBody":"This is for stuff that definitely needs done by dotnet rc1"},{"Id":"20826400481","Type":"IssuesEvent","CreatedAt":"2022-03-18T21:34:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8924","RelatedDescription":"Closed issue \"Improve search with package recommendations\" (#8924) at NuGet/Home","RelatedBody":"Deliver spec to explore business/technical options.\nClient side and/or Server side?\netc..."},{"Id":"20826275923","Type":"IssuesEvent","CreatedAt":"2022-03-18T21:22:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8281","RelatedDescription":"Closed issue \"Update CLI docs to include package deprecation and vulnerability support\" (#8281) at NuGet/Home","RelatedBody":"Update docs to include information about the following CLI updates:\r\n\r\n`dotnet package list --outdated`\r\n`dotnet package list --deprecated` \r\n`dotnet package list --vulnerable` \r\n\r\nFor details, see the issues linked to [this spec](https://github.com/NuGet/Home/issues/8278)."},{"Id":"20826270539","Type":"IssuesEvent","CreatedAt":"2022-03-18T21:22:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8278","RelatedDescription":"Closed issue \"Support package deprecation in CLI\" (#8278) at NuGet/Home","RelatedBody":"See [spec](https://github.com/NuGet/Home/wiki/Deprecate-packages#cli)"},{"Id":"20825006071","Type":"IssuesEvent","CreatedAt":"2022-03-18T19:39:09","Actor":"AArnott","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11681","RelatedDescription":"Opened issue \"[Feature]: Allow suppressing of framework references in generated nuspec files\" (#11681) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nThe `SuppressDependenciesWhenPacking` property already allows conveniently suppressing all package dependencies. But it still includes *framework* dependencies. There is no property to suppress framework dependencies.\r\n\r\nI think it makes the most sense to suppress framework dependencies as well when this same property is set. But if there are backward compat concerns for some reason, please give us another msbuild property that will suppress these.\n\n### Additional Context and Details\n\nNuGet itself finds this useful, and has a hack to accomplish it:\r\nhttps://github.com/NuGet/NuGet.Client/blob/2380e11075e50104862c499515a0d3e293a7774a/src/NuGet.Clients/NuGet.CommandLine/NuGet.CommandLine.csproj#L146\r\n\r\nI myself have hacked it out in a few other repos as well."},{"Id":"20823241214","Type":"IssuesEvent","CreatedAt":"2022-03-18T17:33:27","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11667","RelatedDescription":"Closed issue \"[Bug]: .NET Restore on MacOS prefixes filenames with foldernames instead of placing in subfolders\" (#11667) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n6.0.200\r\n\r\n### Worked before?\r\n\r\nNot sure\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nFrom commandline on MacOS run:\r\n\r\n```\r\nmkdir test\r\ncd test\r\ndotnet new console\r\ndotnet add ./ package MSTextX.UnitTestRunner --version 2.0.0-preview1\r\n```\r\nOpen up the nuget cache folder `~/.nuget/packages/mstestx.unittestrunner/2.0.0-preview1`\r\nNotice that instead of files being in a folder structure, they are all in the same folder with their folder names prefixing the filenames and backslashes in the name:\r\n\r\n![image](https://user-images.githubusercontent.com/1378165/157795207-629bed61-3abe-4390-af4e-83630e107f35.png)\r\n\r\nRepeat the same with v1.4.0 of the same nuget package, and you'll see a more meaningful folder layout:\r\n![image](https://user-images.githubusercontent.com/1378165/157795255-5ff16b35-bd1d-4d72-bdd9-01f74f554429.png)\r\n\r\nRepeat the same thing on Windows, and there is no issue and the nupkg gets unzipped correctly. I didn't find anything obviously different about the two packages, but obviously something in the newer package is tripping up the unzipper.\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20810599662","Type":"IssuesEvent","CreatedAt":"2022-03-18T01:53:09","Actor":"greengumby","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11673","RelatedDescription":"Closed issue \"[Bug]: \" (#11673) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nNuGet Version: 6.0.0.280\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nRunning the following;\r\n\r\nnuget pack .\\project.csproj -IncludeReferencedProjects -Verbosity detailed\r\n\r\ncauses the following error\r\n\r\n    nuget : Could not load file or assembly 'System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its \r\n    dependencies. The system cannot find the file specified.\r\n    At line:1 char:1\r\n    + nuget pack .\\project.csproj -IncludeReferencedProjects ...\r\n    + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        + CategoryInfo          : NotSpecified: (Could not load ...file specified.:String) [], RemoteException\r\n        + FullyQualifiedErrorId : NativeCommandError\r\n     \r\n    System.IO.FileNotFoundException: Could not load file or assembly 'System.Memory, Version=4.0.1.1, Culture=neutral, \r\n    PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n    File name: 'System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n       at Microsoft.CodeAnalysis.Collections.SegmentedArray.Copy[T](SegmentedArray`1 sourceArray, SegmentedArray`1 destinationArray, Int32 \r\n    length)\r\n\r\n\r\nI have reviewed all referenced projects and transitive dependencies and the only version of System.Memory being pulled into the output is 4.6.2\r\n\r\nIs there a chance something has caused this going from nuget 5.8 to 6.0?\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-03-21T03:30:25.2053279Z","RunDurationInMilliseconds":1320}