{"Data":{"Blog":{"FeedItems":[{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14267908702","Type":"PullRequestEvent","CreatedAt":"2020-11-20T21:22:50","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8329","RelatedDescription":"Opened pull request \"add description for readmore\" (#8329) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8184"},{"Id":"14267110818","Type":"PullRequestEvent","CreatedAt":"2020-11-20T19:53:16","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8328","RelatedDescription":"Opened pull request \"Add * by required field \" (#8328) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n![or](https://user-images.githubusercontent.com/64443925/99843520-8c728880-2b26-11eb-965d-f25552e2f28a.PNG)\r\n\r\n![apire](https://user-images.githubusercontent.com/64443925/99843720-d8253200-2b26-11eb-9e1e-84122029c7da.PNG)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8181"},{"Id":"14257831875","Type":"PullRequestEvent","CreatedAt":"2020-11-20T04:46:19","Actor":"smoothdeveloper","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8327","RelatedDescription":"Opened pull request \"add the dotnet fsi extensions\" (#8327) at NuGet/NuGetGallery","RelatedBody":"add the dotnet fsi extensions which allow to load packages in F# Interactive\r\n\r\nSince net 5 shipped, it is possible to use nuget packages from `dotnet fsi` through extensions: https://devblogs.microsoft.com/dotnet/announcing-f-5/#package-references-in-f-scripts"},{"Id":"14254843904","Type":"IssuesEvent","CreatedAt":"2020-11-19T21:41:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8130","RelatedDescription":"Closed issue \"Improve search: Re-evaluate camel-split strategy\" (#8130) at NuGet/NuGetGallery","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/1021643/improve-searching-for-nuget-packages.html)._\n\n---\nI don't know whether there is a limitation with nuget.org itself (the website is similarly basic) but searching for a nuget package in Visual Studio could be significantly improved if the search box treated space-separated strings as separate tokens and _ANDED_ these together when performing the search.\n\nFor example, when entering \"imm coll l\" I'd want to see \"System.Collections.Immutable\"  - NOT every package that contains _either_ \"imm\" or \"coll\". (I can't imagine why this appears to be the default behaviour...)\n\nAlso, I'd like to be able to filter/rank based on number of downloads or \"last updated\" since there are a huge number of ancient packages which simply clutter up the result list\n\n---\n### Original Comments\n\n#### Feedback Bot on 5/8/2020, 01:34 AM: \n\nThank you for taking the time to provide your suggestion.  We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.\n#### Peter Shaw on 5/15/2020, 04:27 AM: \n\n<p>In response to this tweet I posted: </p><p>https://twitter.com/shawty_ds/status/1261061801959178241</p><p>I'd also like to back this suggestion up.</p><p>I understand the need for some results to show up when a user is not sure what they are searching for, but right now as it stands, Visual Studio NuGet search IS UNUSABLE unless you know the EXACT spelling of the package your looking for.</p><p>Mores the point, the sub-string search is way too LAX, for example I do a search for \"MapWinGis\" (I Know this term is used in the package description, but is not the namespace name) and I get 100's of results, simply because many package names have \"<strong>gi</strong>\", \"<strong>ma</strong>\", \"<strong>in</strong>\" or \"<strong>wi</strong>\" (\"wi\" being an incredibly popular term, since we are on windows), showing these results is absolutely not helpful.</p><p>Filtering and ranking the results list is a really good idea, and improving the search to be more like say google search so we can say for example \"MapWin\" \"GIS\" and that will return packages that contain those exact phrases, or for example \"Collections\" -\"Microsoft\" will return anything with the exact phrase \"Collections\" in, but only if it does NOT contain the exact phrase \"Microsoft\"</p><p>As much as I dislike google these days, I have to admit the search operators they have and the way they work, actually make for a very powerful search syntax, to be really specific about what your searching for, having something similar in NuGet would be very, very helpful, especially when you have companies like \"ThinkGeo\" who have literally filled the first 10 pages of NuGet with their \"free(but not actually free)\" GIS library (Try a search for GIS in NuGet and see how long it takes before you see anything other than their offering), it would allow us to filter out bad actors like this that are using NuGet to drive sales, and focus on finding what we need fast.</p>\n"},{"Id":"14254665931","Type":"IssuesEvent","CreatedAt":"2020-11-19T21:23:21","Actor":"Sergio0694","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8201","RelatedDescription":"Closed issue \"Poor/unrelated search results when not using the exact package name\" (#8201) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nSearching for the [`Microsoft.Toolkit.HighPerformance` package](https://www.nuget.org/packages/Microsoft.Toolkit.HighPerformance/) displays unrelated search results. This happens both on nuget.org and when searching through Visual Studio. It's almost impossible to find that package unless you actually know the exact name.\r\n\r\nNot exactly the same, but possibly related to https://github.com/NuGet/NuGetGallery/issues/8130?\r\n\r\n### To Reproduce\r\nHere's some search results I tried:\r\n\r\n⛔ \"microsoft high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381423-1eafe680-f10b-11ea-9c3d-6e11c3a8ce57.png)), the package is nowhere to be found\r\n⛔ \"microsoft highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381483-3a1af180-f10b-11ea-8c25-4a05e83bd5bb.png)), same as above\r\n⛔ \"Microsoft HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381513-4acb6780-f10b-11ea-9a3a-7192e410befe.png)), same\r\n⛔ \"microsoft toolkit high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381544-5a4ab080-f10b-11ea-8a11-24d6600a4e38.png)), same\r\n⛔ \"microsoft toolkit highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381566-68003600-f10b-11ea-8a7d-f5ec4d5dc4bd.png)), same\r\n\r\n✅ \"microsoft.toolkit.highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381616-7e0df680-f10b-11ea-8e86-b99fc8fb4a61.png)), works\r\n✅ \"Microsoft.Toolkit.HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381692-9a119800-f10b-11ea-820b-113cde208b39.png)), works too\r\n\r\n### Expected behavior\r\nThe `Microsoft.Toolkit.HighPerformance` should be the first result for all these various search queries.\r\n\r\n### Screenshots\r\nAttached a screen next to each tested query above.\r\n\r\n### Additional context\r\nIn case it helps, right now we have the following tags in the package:\r\n\r\n> UWP Toolkit Windows core standard unsafe span memory string array stream buffer extensions helpers parallel performance\r\n\r\nThough I'd expect the search results to display that package as first result even just based on the package name, as all those sample queries are an exact match for the package name, once tokenized with the `.` and converted to lowercase.\r\nI wouldn't expect users to search for the package by the exact name (which is also more verbose to type), especially if they just are not aware the package exists at all, so the way the search results are returned right now doesn't help with discoverability.\r\n\r\nThanks! 😊"},{"Id":"14244847820","Type":"IssuesEvent","CreatedAt":"2020-11-19T07:41:27","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8181","RelatedDescription":"Reopened issue \"[A11y][UI]No Visual representation is provided for required field 'Username' \" (#8181) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1184475\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450)\r\n\r\n\r\n## Repro Steps:\r\n\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"Open Profile drop down\" and press enter\r\n    Tab till \"API Keys\" and Press enter\r\n    Tab till \"Create button\" and press enter\r\n    Tab till \"Key Name\" editable field\r\n    Check whether a visual representation like asterisk is provided at the required field \"Key Name\" or not \r\n\r\n## Actual Results:\r\n\r\nNo Visual representation is provided for required field 'Username'\r\n## Expected Results:\r\nVisual representation like asterisk should be provided at the required fields.\r\n## User Impact:\r\nUsers may not understand if there is no visual representation at the required fields.\r\n\r\n## Notes:\r\nThis appears to be about adding an * by required fields in forms."},{"Id":"14240741163","Type":"IssuesEvent","CreatedAt":"2020-11-18T22:10:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8319","RelatedDescription":"Closed issue \"Please update latest version to 5.8.0\" (#8319) at NuGet/NuGetGallery","RelatedBody":"Please update the `https://dist.nuget.org/win-x86-commandline/latest/nuget.exe` version to 5.8.0 instead of 5.7.0.\r\n\r\nThere's a problem when using NuGet Restore with 5.7 and MSBuild 16.8 (https://developercommunity.visualstudio.com/content/problem/1248649/error-netsdk1005-assets-file-projectassetsjson-doe.html)\r\n\r\nChanging the \"latest\" version to 5.8.0 would fix many installations using cake-build (Or has @patriksvensson a better solution?)."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14272747776","Type":"IssuesEvent","CreatedAt":"2020-11-21T18:22:30","Actor":"loic-sharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10316","RelatedDescription":"Opened issue \"dotnet nuget verify is too quiet\" (#10316) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: dotnet.exe\r\n\r\ndotnet.exe --version (if appropriate): 5.0.100\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n`dotnet nuget verify` does not output anything by default:\r\n\r\n```\r\nPS > dotnet nuget verify --all .\\newtonsoft.json.12.0.3.nupkg\r\nPS > dotnet nuget verify .\\newtonsoft.json.12.0.3.nupkg\r\n```\r\n\r\nNo output is given at all for these commands. This is unfortunate as this command's output is useful to configure `trusted-signers` (see this [blog post](https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/#configure-trusted-package-repositories)).\r\n\r\nHowever, command output is shown if I increase the verbosity to `normal`:\r\n\r\n```\r\nPS C:\\Users\\Administrator\\Downloads> dotnet nuget verify .\\newtonsoft.json.12.0.3.nupkg --verbosity normal\r\n\r\nVerifying Newtonsoft.Json.12.0.3\r\nC:\\Users\\Administrator\\Downloads\\.\\newtonsoft.json.12.0.3.nupkg\r\nSignature Hash Algorithm: SHA256\r\nTimestamp: 11/8/2019 4:56:46 PM\r\nVerifying author primary signature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=TIMESTAMP-SHA256-2019-10-15, O=\"DigiCert, Inc.\", C=US\r\n  SHA1 hash: 0325BD505EDA96302DC22F4FA01E4C28BE2834C5\r\n  SHA256 hash: 481F4373272D98586C5364B6C115E82425675AEBFD9FACF7ADC464FA2FFFB8F0\r\n  Issued by: CN=DigiCert SHA2 Assured ID Timestamping CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 9/30/2019 5:00:00 PM to 10/16/2030 5:00:00 PM\r\nSignature type: Author\r\nVerifying the author primary signature with certificate:\r\n  Subject Name: CN=Json.NET (.NET Foundation), O=Json.NET (.NET Foundation), L=Redmond, S=wa, C=US, SERIALNUMBER=603 389 068\r\n  SHA1 hash: 4CFB89FAA49539A58968D81960B3C1258E8F6A34\r\n  SHA256 hash: A3AF7AF11EBB8EF729D2D91548509717E7E0FF55A129ABC3AEAA8A6940267641\r\n  Issued by: CN=.NET Foundation Projects Code Signing CA, O=.NET Foundation, C=US\r\n  Valid from: 10/24/2018 5:00:00 PM to 10/29/2021 5:00:00 AM\r\nTimestamp: 11/8/2019 5:28:02 PM\r\nVerifying repository countersignature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=Symantec SHA256 TimeStamping Signer - G3, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  SHA1 hash: A9A4121063D71D48E8529A4681DE803E3E7954B0\r\n  SHA256 hash: C474CE76007D02394E0DA5E4DE7C14C680F9E282013CFEF653EF5DB71FDF61F8\r\n  Issued by: CN=Symantec SHA256 TimeStamping CA, OU=Symantec Trust Network, O=Symantec Corporation, C=US\r\n  Valid from: 12/22/2017 4:00:00 PM to 3/22/2029 4:59:59 PM\r\nSignature type: Repository\r\nnuget-v3-service-index-url: https://api.nuget.org/v3/index.json\r\nnuget-package-owners: jamesnk, newtonsoft\r\nVerifying the repository countersignature with certificate:\r\n  Subject Name: CN=NuGet.org Repository by Microsoft, O=NuGet.org Repository by Microsoft, L=Redmond, S=Washington, C=US\r\n  SHA1 hash: 8FB6D7FCF7AD49EB774446EFE778B33365BB7BFB\r\n  SHA256 hash: 0E5F38F57DC1BCC806D8494F4F90FBCEDD988B46760709CBEEC6F4219AA6157D\r\n  Issued by: CN=DigiCert SHA2 Assured ID Code Signing CA, OU=www.digicert.com, O=DigiCert Inc, C=US\r\n  Valid from: 4/9/2018 5:00:00 PM to 4/14/2021 5:00:00 AM\r\n\r\nSuccessfully verified package 'Newtonsoft.Json.12.0.3'.\r\n```"},{"Id":"14269267161","Type":"PullRequestEvent","CreatedAt":"2020-11-21T00:46:56","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/10064","RelatedDescription":"Merged pull request \"Ensure legacy PackageReference projects, that trigger a restore through IVsSolutionRestoreService, participate in the solution load restore batching \" (#10064) at NuGet/Home","RelatedBody":"Design for https://github.com/NuGet/Home/issues/9986. \r\n\r\n@davkean I'm relying on your expertise for feedback here and help deciding the right capability. \r\n\r\nfyi @panopticoncentral as this is related to solution load, but it's only mixed or legacy projects."},{"Id":"14268857306","Type":"IssuesEvent","CreatedAt":"2020-11-20T23:29:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10315","RelatedDescription":"Opened issue \"Add tests for the transitive framework reference exclusion work\" (#10315) at NuGet/Home","RelatedBody":"Tests for https://github.com/NuGet/Home/issues/10314. "},{"Id":"14268836580","Type":"IssuesEvent","CreatedAt":"2020-11-20T23:25:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10314","RelatedDescription":"Opened issue \"Exclude transitive framework references from `CollectFrameworkReferences`\" (#10314) at NuGet/Home","RelatedBody":"Problem described in detail in =https://github.com/dotnet/sdk/issues/14641. \r\n\r\nIt causes extra restores when the caches are clean and it makes commandline and vs restore incongruent."},{"Id":"14268179683","Type":"IssuesEvent","CreatedAt":"2020-11-20T21:55:03","Actor":"moonboy13","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10313","RelatedDescription":"Opened issue \"Assets from packages are missing after restore\" (#10313) at NuGet/Home","RelatedBody":"This seems to be a re-occurrence of #5995, though it is user specific. One user on the machine will have an issue, another can login, clear the obj folder, and build without a problem. Bit stumped on how to get this working across all users on this shared build machine. Tried clearing everyone's temp folders, caches, and giving it a reboot to flush out any lingering issues.\r\n\r\nThis problem appearing did seem to coincide with the release of .NET 5.0, but not sure right now if that really caused it.\r\n\r\n##Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):  NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.8.0.6930\r\n\r\ndotnet.exe --version (if appropriate): 5.0.100\r\n\r\nVS version (if appropriate): 16.8.0\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win7 SP1 (v6.1 build 7601)\r\n\r\nWorked before? If so, with which NuGet version: unknown\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Load up attached project in Visual Studio\r\n\r\n2. Attempt to build.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n[NugetVerboseLogs.txt](https://github.com/NuGet/Home/files/5576246/NugetVerboseLogs.txt)\r\n\r\n### Good build vs. Bad build project.assets.json\r\nComparing the two asset files, the good build has all the \"compile\" key and a second value under the \"build\" key that are missing from the bad build asset file. Aside from that, the two json files appear to be the same.\r\n\r\nGood asset file\r\n`{\r\n\"version\": 3,\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v2.1\": {\r\n      \"Microsoft.NETCore.App/2.1.23\": {\r\n        \"type\": \"package\",\r\n        \"dependencies\": {\r\n          \"Microsoft.NETCore.DotNetHostPolicy\": \"2.1.23\",\r\n          \"Microsoft.NETCore.Platforms\": \"2.1.12\",\r\n          \"Microsoft.NETCore.Targets\": \"2.0.0\",\r\n          \"NETStandard.Library\": \"2.0.3\"\r\n        },\r\n        \"compile\": {\r\n          \"ref/netcoreapp2.1/Microsoft.CSharp.dll\": {},\r\n          \"ref/netcoreapp2.1/Microsoft.VisualBasic.dll\": {},\r\n          \"ref/netcoreapp2.1/Microsoft.Win32.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.AppContext.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Buffers.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Collections.Concurrent.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Collections.Immutable.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Collections.NonGeneric.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Collections.Specialized.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Collections.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ComponentModel.Annotations.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ComponentModel.DataAnnotations.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ComponentModel.EventBasedAsync.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ComponentModel.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ComponentModel.TypeConverter.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ComponentModel.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Configuration.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Console.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Core.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Data.Common.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Data.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.Contracts.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.Debug.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.DiagnosticSource.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.FileVersionInfo.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.Process.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.StackTrace.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.TextWriterTraceListener.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.Tools.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.TraceSource.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Diagnostics.Tracing.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Drawing.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Drawing.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Dynamic.Runtime.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Globalization.Calendars.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Globalization.Extensions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Globalization.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.Compression.Brotli.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.Compression.FileSystem.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.Compression.ZipFile.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.Compression.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.FileSystem.DriveInfo.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.FileSystem.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.FileSystem.Watcher.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.FileSystem.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.IsolatedStorage.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.MemoryMappedFiles.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.Pipes.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.UnmanagedMemoryStream.dll\": {},\r\n          \"ref/netcoreapp2.1/System.IO.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Linq.Expressions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Linq.Parallel.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Linq.Queryable.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Linq.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Memory.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Http.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.HttpListener.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Mail.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.NameResolution.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.NetworkInformation.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Ping.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Requests.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Security.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.ServicePoint.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.Sockets.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.WebClient.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.WebHeaderCollection.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.WebProxy.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.WebSockets.Client.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.WebSockets.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Net.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Numerics.Vectors.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Numerics.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ObjectModel.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.DispatchProxy.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.Emit.ILGeneration.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.Emit.Lightweight.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.Emit.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.Extensions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.Metadata.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.TypeExtensions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Reflection.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Resources.Reader.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Resources.ResourceManager.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Resources.Writer.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.CompilerServices.VisualC.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Extensions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Handles.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.InteropServices.RuntimeInformation.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.InteropServices.WindowsRuntime.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.InteropServices.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Loader.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Numerics.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Serialization.Formatters.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Serialization.Json.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Serialization.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Serialization.Xml.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.Serialization.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Runtime.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Claims.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Cryptography.Algorithms.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Cryptography.Csp.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Cryptography.Encoding.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Cryptography.Primitives.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Cryptography.X509Certificates.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.Principal.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.SecureString.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Security.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ServiceModel.Web.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ServiceProcess.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Text.Encoding.Extensions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Text.Encoding.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Text.RegularExpressions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Overlapped.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Tasks.Dataflow.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Tasks.Extensions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Tasks.Parallel.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Tasks.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Thread.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.ThreadPool.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.Timer.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Threading.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Transactions.Local.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Transactions.dll\": {},\r\n          \"ref/netcoreapp2.1/System.ValueTuple.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Web.HttpUtility.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Web.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Windows.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.Linq.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.ReaderWriter.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.Serialization.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.XDocument.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.XPath.XDocument.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.XPath.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.XmlDocument.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.XmlSerializer.dll\": {},\r\n          \"ref/netcoreapp2.1/System.Xml.dll\": {},\r\n          \"ref/netcoreapp2.1/System.dll\": {},\r\n          \"ref/netcoreapp2.1/WindowsBase.dll\": {},\r\n          \"ref/netcoreapp2.1/mscorlib.dll\": {},\r\n          \"ref/netcoreapp2.1/netstandard.dll\": {}\r\n        },\r\n        \"build\": {\r\n          \"build/netcoreapp2.1/Microsoft.NETCore.App.props\": {},\r\n          \"build/netcoreapp2.1/Microsoft.NETCore.App.targets\": {}\r\n        }\r\n      },`\r\n\r\nBad Asset file\r\n`{\r\n  \"version\": 3,\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v2.1\": {\r\n      \"Microsoft.NETCore.App/2.1.23\": {\r\n        \"type\": \"package\",\r\n        \"dependencies\": {\r\n          \"Microsoft.NETCore.DotNetHostPolicy\": \"2.1.23\",\r\n          \"Microsoft.NETCore.Platforms\": \"2.1.12\",\r\n          \"Microsoft.NETCore.Targets\": \"2.0.0\",\r\n          \"NETStandard.Library\": \"2.0.3\"\r\n        },\r\n        \"build\": {\r\n          \"build/netcoreapp2.1/Microsoft.NETCore.App.props\": {}\r\n        }\r\n      },`\r\n\r\n### Sample Project\r\n\r\n[MultiTargetFail.zip](https://github.com/NuGet/Home/files/5576183/MultiTargetFail.zip)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-11-22T05:30:38.4957281Z","RunDurationInMilliseconds":1760}