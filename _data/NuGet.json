{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39488558122","Type":"PullRequestEvent","CreatedAt":"2024-06-21T01:25:17","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10012","RelatedDescription":"Merged pull request \"use char based StringBuilder.Append where possible\" (#10012) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39488226172","Type":"PullRequestEvent","CreatedAt":"2024-06-21T01:02:36","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9993","RelatedDescription":"Merged pull request \"remove TestDataResourceUtility.GetResourceString\" (#9993) at NuGet/NuGetGallery","RelatedBody":"its not used"},{"Id":"39487050602","Type":"IssuesEvent","CreatedAt":"2024-06-20T23:39:34","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10030","RelatedDescription":"Opened issue \"[Gallery] Embedded READMEs sometimes fail to render\" (#10030) at NuGet/NuGetGallery","RelatedBody":"In some cases, the Embedded readme in a package may fail to render.\r\nIf this happens, the gallery currently returns 500.\r\n\r\nWe should update this so we can either render the readme (not always feasible) or at the very least, allow the rest of the page to load.\r\nSee https://www.nuget.org/packages/FSharp.Core.Extended/ for a sample\r\nThis package has an embedded readme with a relatively large table, which currently causes the package details page to fail to render. (readme here https://github.com/vzarytovskii/FSharp.Core.Extended/blob/main/README.md)"},{"Id":"39487043578","Type":"PullRequestEvent","CreatedAt":"2024-06-20T23:39:07","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10015","RelatedDescription":"Merged pull request \"remove some redundant type checks\" (#10015) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39486975754","Type":"PullRequestEvent","CreatedAt":"2024-06-20T23:34:20","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9999","RelatedDescription":"Merged pull request \"use Array.Empty where possible\" (#9999) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39486904535","Type":"PullRequestEvent","CreatedAt":"2024-06-20T23:29:23","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10005","RelatedDescription":"Merged pull request \"Fix varibles typo\" (#10005) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39486894740","Type":"PullRequestEvent","CreatedAt":"2024-06-20T23:28:40","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9996","RelatedDescription":"Merged pull request \"Fix trucated typo\" (#9996) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39486496238","Type":"IssuesEvent","CreatedAt":"2024-06-20T23:02:07","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12495","RelatedDescription":"Closed issue \"Remove NuGet.Packaging.Core\" (#12495) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\r\n\r\ndotnet.exe, NuGet SDK\r\n\r\n### Current Behavior\r\n\r\nA long time ago, NuGet.Packaging.Core was merged into NuGet.Packaging. \r\n\r\nWe added type forwarders to allow certain pre-built tasks from arcade to still work. \r\n\r\nWe might need to ensure that the .NET SDK can build correct without NuGet.Packaging.Core first before removing it. https://github.com/dotnet/sdk/blob/23bbdf8e62544b04afd333920b109877f427b637/src/Cli/Microsoft.DotNet.Cli.Utils/Microsoft.DotNet.Cli.Utils.csproj#L49\r\n\r\n### Desired Behavior\r\n\r\nNuGet.Packaging.Core is redudant.\r\n\r\n### Additional Context\r\n\r\n_No response_"},{"Id":"39480393993","Type":"IssuesEvent","CreatedAt":"2024-06-20T18:24:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9024","RelatedDescription":"Closed issue \"[Feature]: Add support for central package management to dotnet prune\" (#9024) at NuGet/Home","RelatedBody":""},{"Id":"39479429528","Type":"IssuesEvent","CreatedAt":"2024-06-20T17:47:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13521","RelatedDescription":"Closed issue \"Missing and inconsistent warnings NU190x about vulnerabilities with MSBuild restore in Visual Studio and command-line\" (#13521) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\nMSBuild 17.10.4+10fbfbf2e, Visual Studio 2022 17.10.1\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n* Using Visual Studio 2022, in Options window, NuGet Package Manager > General check the checkbox \"Allow format selection on first package install\"\r\n* Create a blank solution and add 4 projects to it as follows\r\n* Add a \"Class Library\" project named \"ClassLibrarySdkStyleNet8\" targetting NET 8. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable). Therefore, this project will use SDK style and PackageReference. \r\n* Add a \"Class Library (.NET Framework)\" project named \"ClassLibraryClassicStyleNetFramework48PackagesConfig\" targetting .NET Framework 4.8. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable) using Packages.config when prompted. Therefore, this project will use classic style and packages.config.\r\n* Add a \"Class Library (.NET Framework)\" project named \"ClassLibraryClassicStyleNetFramework48PackageReference\" targetting .NET Framework 4.8. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable) using PackageReference when prompted. Therefore, this project will use classic style and PackageReference.\r\n* Add a \"Class Library (.NET Framework)\" project named \"ClassLibrarySdkStyleNetFramework48\" targetting .NET Framework 4.8. Using the Upgrading Assistant, convert it to SDK project style. Add to it the NuGet package Newtonsoft.Json 12.0.3 (which is vulnerable). Therefore, this project will use SDK style and PackageReference.\r\n\r\n### Problem 1\r\n\r\nCompile the solution in Visual Studio\r\n\r\nResult:\r\n\r\nIn the Error List and in the Output window, you get warning NU1903 only for these two projects (the ones that use SDK-style):\r\n* ClassLibrarySdkStyleNetFramework48\r\n* ClassLibrarySdkStyleNet8\r\n\r\nIt would be helpful to get the warning also for the two projects using the classic style\r\n\r\n### Problem 2\r\n\r\nOpen a command prompt, change to the folder of the solution and execute:\r\n\r\n`\"<path>\\MSBuild\\Current\\bin\\msbuild.exe\" -t:Restore`\r\n\r\nResult:\r\n\r\nYou get warning NU1903 only for these three projects (the ones that use PackageReference):\r\n* ClassLibrarySdkStyleNetFramework48\r\n* ClassLibrarySdkStyleNet8\r\n* ClassLibraryClassicStyleNetFramework48PackageReference\r\n\r\nIt would be helpful to get the warning also for project using packages.config\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"39454422479","Type":"IssuesEvent","CreatedAt":"2024-06-20T03:24:55","Actor":"WeihanLi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13564","RelatedDescription":"Opened issue \"nuget package deprecate API support\" (#13564) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe, NuGet SDK\n\n### The Elevator Pitch\n\nSome packages are deprecated as scheduled, it would be great if we could support package deprecation via API, so that we could automate the deprecation process in automation job/CI etc\n\n### Additional Context and Details\n\n_No response_"},{"Id":"39453055198","Type":"IssuesEvent","CreatedAt":"2024-06-20T01:49:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12950","RelatedDescription":"Reopened issue \"Cannot install, uninstall, or update ANY packages if one NuGet source is unreachable\" (#12950) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Current Behavior\n\nConsider this scenario:\r\n\r\nNuGet sources configured in Visual Studio:\r\n1. nuget.org (https://api.nuget.org/v3/index.json)\r\n2. GitHub (personal repo https://nuget.pkg.github.com/l33tc0d3r/index.json, needs authentication)\r\n3. CONTOSODEV (corporate server \\\\CONTOSODEV\\\\NuGet, needs VPN connection)\r\n\r\nSource mappings configured in Visual Studio:\r\n|Package|Source|\r\n|---|---|\r\n| com.contoso.* | CONTOSODEV |\r\n| l33tc0d3r.* | GitHub |\r\n| * | nuget.org |\r\n\r\nPackages installed in the open project:\r\n - com.contoso.discombobulator\r\n - l33tc0d3r.freakui3\r\n - Newtonsoft.Json\r\n\r\nNow when you want to update Newtonsoft.Json you can't if:\r\n\r\n1. You aren't connected to the corporate VPN\r\n2. You don't provide credentials for private GitHub packages repo (VS does not remember password across sessions*)\r\n\r\nYou cannot even remove the existing packages or install any new ones from nuget.org which should be possible even without having explicit mappings.\r\n\r\nI do understand the compatibility and security concerns if you were to fall back to different package repository, but this is beyond ridiculous and user-hostile behavior. If a package was installed from nuget.org, it's maintenance should not be affected by other sources being temporarily inaccessible.\n\n### Desired Behavior\n\n1. If a user tries to update or remove a package installed from a specific source and that source is accessible that should succeed &mdash; it shouldn't be all or nothing.\r\n2. If there is a mapping that says download `*.com.contoso` from `\\\\CONTOSODEV\\NuGet` and everything else from nuget.org and a user tries to install `Rick.Mapperly` that should succeed even if `\\\\CONTOSODEV\\NuGet` is not accessible otherwise what's the point in having source mappings in the first place?\r\n\n\n### Additional Context\n\n* Visual Studio does not save password for GitHub packages despite the checkbox \"Remember password\" being checked. That's a separate bug I guess should be reported."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-21T03:30:19.0949405Z","RunDurationInMilliseconds":1122}