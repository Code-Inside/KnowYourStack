{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12727095353","Type":"IssuesEvent","CreatedAt":"2020-06-24T22:17:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8071","RelatedDescription":"Opened issue \"NuGet.org V3 API endpoints should return a HTTP compliant etag\" (#8071) at NuGet/NuGetGallery","RelatedBody":"Currently, the V3 endpoints return an etag without any quotes. This is because V3 is CDN backed by Azure Blob Storage. Azure Blob Storage, prior to [API version 2011-08-18](https://docs.microsoft.com/en-us/rest/api/storageservices/version-2011-08-18) returns malformed etags without quotes. If you send `x-ms-version: 2011-08-18` or later you get proper quotes.\r\n\r\nAccording [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3), etags must be surrounded by double quotes.\r\n\r\n```powershell\r\nPS C:\\Users\\jver\\Desktop> $url = \"https://api.nuget.org/v3-flatcontainer/newtonsoft.json/index.json\"\r\nPS C:\\Users\\jver\\Desktop> (Invoke-WebRequest $url).Headers.ETag\r\n0x8D764B46B9CE392\r\nPS C:\\Users\\jver\\Desktop> (Invoke-WebRequest $url -Headers @{ \"x-ms-version\" = \"2009-09-19\" }).Headers.ETag\r\n0x8D764B46B9CE392\r\nPS C:\\Users\\jver\\Desktop> (Invoke-WebRequest $url -Headers @{ \"x-ms-version\" = \"2011-08-18\" }).Headers.ETag\r\n\"0x8D764B46B9CE392\"\r\n```\r\n\r\nWe could add a CDN rule that fixes this problem so that HTTP compliant clients can use the etags without problems.\r\n- Add  `x-ms-version: 2011-08-18` request header to if not present and vary the cache by `x-ms-version`\r\n- Wrap the response etag in quotes if not present\r\n- Others?\r\n\r\n/cc @erdembayar \r\n\r\n\r\n"},{"Id":"12727084684","Type":"IssuesEvent","CreatedAt":"2020-06-24T22:15:57","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7757","RelatedDescription":"Closed issue \"[PackageType] Update search, autocomplete, and catalog API docs\" (#7757) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12727082178","Type":"IssuesEvent","CreatedAt":"2020-06-24T22:15:34","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7881","RelatedDescription":"Closed issue \"[A11y]The Keyboard focus is not visible on selected item from the table.\" (#7881) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1063683\r\nRepro Steps:\r\n1. Hit the URL:https://www.nuget.org/\r\n2. Navigate to \"Sign in\" control and hit enter.\r\n3. Navigate to \"Sign in with Microsoft\" control and hit enter.\r\n4. Search for a key term (say “json”) from search box.\r\n5. Click on \"Newtonsoft.json\" control and hit enter.\r\n6. Navigate to \"Version History\" control and hit enter.\r\n7. Turn on high contrast.\r\n8.Check if in high contrast the row that is selected(highlighted),the same highlighted row is also visible in high contrast while navigating using Tab key.\r\n\r\nActual:\r\nThe keyboard focus on selected item from the table is not clearly visible in high contrast black/white mode.\r\n\r\nSimilar issue have been observed in below scenarios : \r\n1).Json ->OwnerSection\r\nRepro Steps:\r\n1. Hit the URL:https://www.nuget.org/\r\n2. Navigate to \"Sign in\" control and hit enter.\r\n3. Navigate to \"Sign in with Microsoft\" control and hit enter.\r\n4. Search for a key term (say “json”) from search box.\r\n5. Click on \"Newtonsoft.json\" control and hit enter.\r\n6. Navigate to \"Owners\" section present on bottom right of the screen.\r\n7. Check if the image of \"newtonsoft\" is visible in high contrast black mode.\r\n1063683_A11y_[BM]NuGetService_OwnerSection_HighContrast.PNGBug_1063683_A11y_[BM]NuGetService_OwnerSection_HighContrast.PNG\r\n\r\nExpected:\r\nThe focus on the selected item from the table should be clearly visible in high contrast mode.\r\n\r\nNotes:\r\nI was actually unable to reproduce case 1 at all. The table highlights keyboard focus correctly without issue. The only possible issue is that the light blue that indicates which version page we are on is not visible in high contrast.\r\nFor case 2, I'm not sure what action we are expected to take for static images; I'm not sure we can be expected to apply high contrast settings to static images."},{"Id":"12727002682","Type":"IssuesEvent","CreatedAt":"2020-06-24T22:03:37","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8044","RelatedDescription":"Closed issue \"[2020-06-12] Deployment\" (#8044) at NuGet/NuGetGallery","RelatedBody":"### Gallery\r\n\r\nChanges:\r\n- Migrations for index in package dependencies table: https://github.com/nuget/engineering/issues/3220\r\n- API key generation without defaulting to the current owner selection: https://github.com/NuGet/NuGetGallery/issues/7996\r\n- Added verified checkmark to packages: https://github.com/NuGet/Engineering/issues/3221\r\n- TLS 1.2 enforcement and banner update to reflect that\r\n\r\nMigration can be run before or after (it doesn't matter) the NuGetGallery website deployment since the affected query is behind a feature flag and is off.\r\n\r\nProgress:\r\n- [x] FI Merge PR: https://github.com/NuGet/NuGetGallery/pull/8050\r\n- [x] RI Merge PR: https://github.com/NuGet/NuGetGallery/pull/8047\r\n- [x] Build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3816600\r\n- [x] Migration build 2: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3820590&view=results\r\n- [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=710453\r\n- ~~[ ] Migration release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=710019~~\r\n- [x] Migration release 2: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=712127\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### Azure Search Service\r\n\r\nConfiguration update that enforces TLS 1.2 (DEV and INT already have it, so no deployment needed). No code changes for that.\r\n\r\nChanges:\r\n- Min TLS 1.2 by default everywhere in all app services\r\n\r\nProgress:\r\n- [x] Merge configuration PR: https://dev.azure.com/nuget/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/1469\r\n- [X] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=709786\r\n- [x] INT\r\n- [x] PROD\r\n- [x] PROD PREVIEW\r\n\r\n### CDNRedirect\r\n\r\nConfiguration update that enforces TLS 1.2 (DEV already have it (and we are not running it in INT), so no deployment needed). No code changes for that.\r\n\r\nChanges:\r\n- Min TLS 1.2 by default everywhere in all app services\r\n\r\nProgress:\r\n- [x] Merge configuration PR: https://dev.azure.com/nuget/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/1469\r\n- [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=709771\r\n- [x] DEV\r\n- [x] PROD\r\n\r\n### Licenses\r\n\r\nConfiguration update that enforces TLS 1.2 (DEV already have it (we are not running it in INT), so no deployment needed). No code changes for that.\r\n\r\nChanges:\r\n- Min TLS 1.2 by default everywhere in all app services\r\n\r\nProgress:\r\n- [x] Merge configuration PR: https://dev.azure.com/nuget/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/1469\r\n- [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=709759\r\n- [x] DEV\r\n- [x] PROD\r\n\r\n### Status\r\n\r\nConfiguration update that enforces TLS 1.2 (DEV and INT already have it, so no deployment needed). No code changes for that.\r\n\r\nChanges:\r\n- Min TLS 1.2 by default everywhere in all app services\r\n\r\nProgress:\r\n- [x] Merge configuration PR: https://dev.azure.com/nuget/NuGetMicrosoft/_git/NuGetDeployment/pullrequest/1469\r\n- [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=709760\r\n- [x] INT\r\n- [x] PROD\r\n"},{"Id":"12726100060","Type":"IssuesEvent","CreatedAt":"2020-06-24T20:23:10","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3654","RelatedDescription":"Closed issue \"Consider increasing frequency that auxiliary data is generated\" (#3654) at NuGet/NuGetGallery","RelatedBody":"Today, it is every 24 hours. \r\n\r\nWith auxiliary data reload time of 1 hour and index reload of 10 minutes, worst case scenario is a customer waiting 25 hours and 10 minutes to see their own appear on a package (either new package ID or ownership changes).\r\n\r\nWe should consider increasing the frequency that this data is generated."},{"Id":"12725732759","Type":"IssuesEvent","CreatedAt":"2020-06-24T19:46:37","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4736","RelatedDescription":"Closed issue \"Package ownership requests and organization membership requests should use POST when linked from site\" (#4736) at NuGet/NuGetGallery","RelatedBody":"@joelverhagen on https://github.com/NuGet/NuGetGallery/pull/4722:\r\n\r\n>If we are doing work in this area to move the package ownership request experience to the web UI, we should at the same time:\r\n>\r\n>1. Remove the token from the URL\r\n>1. Change the accept/reject endpoint to POST\r\n>1. Make the email link to either link to the manage packages page\r\n>       - Alternatively, link to a GET version of the accept/reject endpoints which require an additional click."},{"Id":"12725561512","Type":"IssuesEvent","CreatedAt":"2020-06-24T19:29:23","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4501","RelatedDescription":"Closed issue \"OData V2 doesn't show license name\" (#4501) at NuGet/NuGetGallery","RelatedBody":"This info is missing since license name doesn't appear in search service\r\nExample: https://www.nuget.org/api/v2/Packages(id='newtonsoft.json',version='5.0.5')"},{"Id":"12725462569","Type":"IssuesEvent","CreatedAt":"2020-06-24T19:19:26","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3858","RelatedDescription":"Closed issue \"Use constants in search service for Lucene field names\" (#3858) at NuGet/NuGetGallery","RelatedBody":"@ryuyu has already done great work in the catalog2lucene and db2lucene to use constant for lucene field names. We should use these constant in the search service as well, which consumes the Lucene index.\r\n\r\nWe should also consider moving away from the `IDictionary<string, string>` of properties toward a C# class with string properties. This would be a great improvement to the maintenance of db2lucene and catalog2lucene.\r\n"},{"Id":"12725417144","Type":"IssuesEvent","CreatedAt":"2020-06-24T19:15:00","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3566","RelatedDescription":"Closed issue \"Catalog2Registration is slow on updating packages with multiple versions\" (#3566) at NuGet/NuGetGallery","RelatedBody":"Need to investigate why, and come up with improvements."},{"Id":"12723787776","Type":"IssuesEvent","CreatedAt":"2020-06-24T16:23:03","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3103","RelatedDescription":"Closed issue \"Monitoring for job failures\" (#3103) at NuGet/NuGetGallery","RelatedBody":"This task is opened after this issue was discovered: https://github.com/NuGet/NuGetGallery/issues/3102\n\nFailures in HandlePackageEdit go unnoticed. We need a better mechanism to handle failed requests and to monitor them.\n"},{"Id":"12723769005","Type":"IssuesEvent","CreatedAt":"2020-06-24T16:21:10","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/2899","RelatedDescription":"Closed issue \"Package icons should only be HTTP/HTTPS\" (#2899) at NuGet/NuGetGallery","RelatedBody":"Package icons should only be HTTP/HTTPS. Right now we allow other URLs there as well. Restrict protocol type + scan existing packages.\n\nLoosely relates to https://github.com/NuGet/NuGetGallery/issues/2613 and https://github.com/NuGet/NuGetGallery/issues/2610\n"},{"Id":"12723542720","Type":"IssuesEvent","CreatedAt":"2020-06-24T15:59:26","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/2623","RelatedDescription":"Closed issue \"Server infrastructure should incorporate bulk-rebuild optimizations\" (#2623) at NuGet/NuGetGallery","RelatedBody":"_From @johnataylor on April 21, 2015 18:39_\n\nWe materialize significant quantities of metadata across blob storage and we have jobs to incrementally keep this up to date. We know from experience that significant optimizations can be applied for a bulk rebuild of a metadata set.\n\nThis is a tracking issue to formalize these optimizations into reusable jobs we can run on demand if teh occasion arises.\n\n_Copied from original issue: NuGet/Home#468_\n"},{"Id":"12723529728","Type":"IssuesEvent","CreatedAt":"2020-06-24T15:58:14","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/2543","RelatedDescription":"Closed issue \"Move v2 gallery to websites\" (#2543) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12723519883","Type":"IssuesEvent","CreatedAt":"2020-06-24T15:57:19","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/2396","RelatedDescription":"Closed issue \"Some packages show the wrong license\" (#2396) at NuGet/NuGetGallery","RelatedBody":"e.g. https://www.nuget.org/packages/Telerik.DataAccess.Fluent.Sample/\n"},{"Id":"12715157333","Type":"IssuesEvent","CreatedAt":"2020-06-23T22:01:53","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7999","RelatedDescription":"Closed issue \"[Search sorting] Design user experience\" (#7999) at NuGet/NuGetGallery","RelatedBody":"* Create a slick new UI for nuget.org\r\n* We should also consider the potential Visual Studio UI\r\n* Review\r\n    * Chris, our PM\r\n    * Client team for Visual Studio buy off\r\n    * Designers?\r\n    * UX office hours?\r\n\r\nOpen questions: should we add UI for package type filtering?"},{"Id":"12715155899","Type":"IssuesEvent","CreatedAt":"2020-06-23T22:01:41","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8070","RelatedDescription":"Opened issue \"Address feedback from customers for the UX\" (#8070) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12715120619","Type":"IssuesEvent","CreatedAt":"2020-06-23T21:56:52","Actor":"AndreVianna","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8069","RelatedDescription":"Opened issue \"Published package with wrong name.\" (#8069) at NuGet/NuGetGallery","RelatedBody":"I have published the package TheToolBox.Data.Contracts v1.0.0 with the wrong name.\r\nIt should be TheToolbox.Data.Contracts (with lower case \"b\").\r\n\r\nI contacted the support to remove the package but nothing happened.\r\nI've tried to upload a new version (1.0.1) with the new name (after unlisting the old one) but it is still shown the old name.\r\n\r\nPlease help!!!!!"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12728258784","Type":"IssuesEvent","CreatedAt":"2020-06-25T01:58:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9663","RelatedDescription":"Closed issue \"OutputConsoleLogger should not access main thread in constructor.\" (#9663) at NuGet/Home","RelatedBody":"## Details about Problem\n\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): _VS UI/Package Manager Console_\nNuGet version (x.x.x.xxx): _Latest_\ndotnet.exe --version (if appropriate): \nVS version (if appropriate): _Latest_\nOS version (i.e. win10 v1607 (14393.321)): _Any_\nWorked before? If so, with which NuGet version: N/A\n\n## Detailed repro steps so we can see the same problem\n\nOutputConsoleLogger is accessing main thread during construction, which is not a good pattern. As it is MEF-composed object, we cannot convert to \"private-ctor-public-async-factory\" model, so we should lazily initialize OutputConsole outside the constructor.\n"},{"Id":"12727521875","Type":"IssuesEvent","CreatedAt":"2020-06-24T23:30:03","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9715","RelatedDescription":"Opened issue \"After xplat-verification merged to dev, Prerequisites changed if build locally\" (#9715) at NuGet/Home","RelatedBody":"After xplat-verification merged to dev, we need to install .NET 5 SDK on local machine to build the code.\r\nAt the same time, the global.json under solution folder should not use a specific version. So that people don't have to update the .NET 5 SDK version everytime when the version changed in global.json."},{"Id":"12726917937","Type":"IssuesEvent","CreatedAt":"2020-06-24T21:51:44","Actor":"mirkomuggli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9626","RelatedDescription":"Closed issue \"PMUI Tab can't be closed\" (#9626) at NuGet/Home","RelatedBody":"## Exception in OnClose handler of PMUI ToolWindow when using Codespaces\n\nThere's a NullRef exception in the OnClose handler of the PMUI ToolWindow. This is happening because, for reasons I don't understand, the Window is disposed immediately.\nThe NullRef in OnClose is caused by the Context being null when we try to Save the document state.\n"},{"Id":"12724137433","Type":"IssuesEvent","CreatedAt":"2020-06-24T16:59:34","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9713","RelatedDescription":"Closed issue \"Dotnet master branch latest version is unavailable\" (#9713) at NuGet/Home","RelatedBody":"When running configure.ps1/runFuncTest.sh, the downloading of master branch failed as following:\r\n\r\n```\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.100-preview.7.20323.3/dotnet-sdk-5.0.100-preview.7.20323.3-win-x64.zip\r\ndotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.100-preview.7.20323.3/dotnet-sdk-5.0.100-preview.7.20323.3-win-x64.zip\r\ndotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.100-preview.7.20323.3/dotnet-dev-win-x64.5.0.100-preview.7.20323.3.zip\r\ndotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.100-preview.7.20323.3/dotnet-dev-win-x64.5.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-25T05:30:40.2944238Z","RunDurationInMilliseconds":1518}